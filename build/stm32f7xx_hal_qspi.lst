ARM GAS  /tmp/ccMXllgx.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f7xx_hal_qspi.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.QSPI_DMARxCplt,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-sp-d16
  24              	QSPI_DMARxCplt:
  25              	.LFB175:
  26              		.file 1 "Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c"
   1:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** /**
   2:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   ******************************************************************************
   3:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @file    stm32f7xx_hal_qspi.c
   4:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @author  MCD Application Team
   5:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @brief   QSPI HAL module driver.
   6:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   *          functionalities of the QuadSPI interface (QSPI).
   8:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   *           + Indirect functional mode management
  10:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   *           + Memory-mapped functional mode management
  11:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   *           + Auto-polling functional mode management
  12:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   *           + Interrupts and flags management
  13:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   *           + DMA channel configuration for indirect functional mode
  14:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   *           + Errors management and abort functionality
  15:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   *
  16:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   *
  17:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   @verbatim
  18:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****  ===============================================================================
  19:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****                         ##### How to use this driver #####
  20:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****  ===============================================================================
  21:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   [..]
  22:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     *** Initialization ***
  23:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     ======================
  24:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     [..]
  25:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       (#) As prerequisite, fill in the HAL_QSPI_MspInit() :
  26:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         (++) Enable QuadSPI clock interface with __HAL_RCC_QSPI_CLK_ENABLE().
  27:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         (++) Reset QuadSPI Peripheral with __HAL_RCC_QSPI_FORCE_RESET() and __HAL_RCC_QSPI_RELEASE_
  28:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         (++) Enable the clocks for the QuadSPI GPIOS with __HAL_RCC_GPIOx_CLK_ENABLE().
  29:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         (++) Configure these QuadSPI pins in alternate mode using HAL_GPIO_Init().
  30:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         (++) If interrupt mode is used, enable and configure QuadSPI global
  31:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****             interrupt with HAL_NVIC_SetPriority() and HAL_NVIC_EnableIRQ().
  32:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         (++) If DMA mode is used, enable the clocks for the QuadSPI DMA channel
ARM GAS  /tmp/ccMXllgx.s 			page 2


  33:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****             with __HAL_RCC_DMAx_CLK_ENABLE(), configure DMA with HAL_DMA_Init(),
  34:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****             link it with QuadSPI handle using __HAL_LINKDMA(), enable and configure
  35:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****             DMA channel global interrupt with HAL_NVIC_SetPriority() and HAL_NVIC_EnableIRQ().
  36:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       (#) Configure the flash size, the clock prescaler, the fifo threshold, the
  37:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           clock mode, the sample shifting and the CS high time using the HAL_QSPI_Init() function.
  38:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
  39:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     *** Indirect functional mode ***
  40:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     ================================
  41:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     [..]
  42:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       (#) Configure the command sequence using the HAL_QSPI_Command() or HAL_QSPI_Command_IT()
  43:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           functions :
  44:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****          (++) Instruction phase : the mode used and if present the instruction opcode.
  45:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****          (++) Address phase : the mode used and if present the size and the address value.
  46:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****          (++) Alternate-bytes phase : the mode used and if present the size and the alternate
  47:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****              bytes values.
  48:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****          (++) Dummy-cycles phase : the number of dummy cycles (mode used is same as data phase).
  49:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****          (++) Data phase : the mode used and if present the number of bytes.
  50:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****          (++) Double Data Rate (DDR) mode : the activation (or not) of this mode and the delay
  51:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****              if activated.
  52:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****          (++) Sending Instruction Only Once (SIOO) mode : the activation (or not) of this mode.
  53:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       (#) If no data is required for the command, it is sent directly to the memory :
  54:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****          (++) In polling mode, the output of the function is done when the transfer is complete.
  55:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****          (++) In interrupt mode, HAL_QSPI_CmdCpltCallback() will be called when the transfer is com
  56:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       (#) For the indirect write mode, use HAL_QSPI_Transmit(), HAL_QSPI_Transmit_DMA() or
  57:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           HAL_QSPI_Transmit_IT() after the command configuration :
  58:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****          (++) In polling mode, the output of the function is done when the transfer is complete.
  59:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****          (++) In interrupt mode, HAL_QSPI_FifoThresholdCallback() will be called when the fifo thre
  60:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****              is reached and HAL_QSPI_TxCpltCallback() will be called when the transfer is complete.
  61:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****          (++) In DMA mode, HAL_QSPI_TxHalfCpltCallback() will be called at the half transfer and
  62:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****              HAL_QSPI_TxCpltCallback() will be called when the transfer is complete.
  63:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       (#) For the indirect read mode, use HAL_QSPI_Receive(), HAL_QSPI_Receive_DMA() or
  64:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           HAL_QSPI_Receive_IT() after the command configuration :
  65:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****          (++) In polling mode, the output of the function is done when the transfer is complete.
  66:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****          (++) In interrupt mode, HAL_QSPI_FifoThresholdCallback() will be called when the fifo thre
  67:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****              is reached and HAL_QSPI_RxCpltCallback() will be called when the transfer is complete.
  68:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****          (++) In DMA mode, HAL_QSPI_RxHalfCpltCallback() will be called at the half transfer and
  69:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****              HAL_QSPI_RxCpltCallback() will be called when the transfer is complete.
  70:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
  71:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     *** Auto-polling functional mode ***
  72:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     ====================================
  73:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     [..]
  74:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       (#) Configure the command sequence and the auto-polling functional mode using the
  75:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           HAL_QSPI_AutoPolling() or HAL_QSPI_AutoPolling_IT() functions :
  76:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****          (++) Instruction phase : the mode used and if present the instruction opcode.
  77:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****          (++) Address phase : the mode used and if present the size and the address value.
  78:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****          (++) Alternate-bytes phase : the mode used and if present the size and the alternate
  79:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****              bytes values.
  80:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****          (++) Dummy-cycles phase : the number of dummy cycles (mode used is same as data phase).
  81:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****          (++) Data phase : the mode used.
  82:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****          (++) Double Data Rate (DDR) mode : the activation (or not) of this mode and the delay
  83:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****              if activated.
  84:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****          (++) Sending Instruction Only Once (SIOO) mode : the activation (or not) of this mode.
  85:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****          (++) The size of the status bytes, the match value, the mask used, the match mode (OR/AND)
  86:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****              the polling interval and the automatic stop activation.
  87:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       (#) After the configuration :
  88:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****          (++) In polling mode, the output of the function is done when the status match is reached.
  89:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****              automatic stop is activated to avoid an infinite loop.
ARM GAS  /tmp/ccMXllgx.s 			page 3


  90:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****          (++) In interrupt mode, HAL_QSPI_StatusMatchCallback() will be called each time the status
  91:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
  92:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     *** Memory-mapped functional mode ***
  93:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     =====================================
  94:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     [..]
  95:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       (#) Configure the command sequence and the memory-mapped functional mode using the
  96:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           HAL_QSPI_MemoryMapped() functions :
  97:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****          (++) Instruction phase : the mode used and if present the instruction opcode.
  98:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****          (++) Address phase : the mode used and the size.
  99:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****          (++) Alternate-bytes phase : the mode used and if present the size and the alternate
 100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****              bytes values.
 101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****          (++) Dummy-cycles phase : the number of dummy cycles (mode used is same as data phase).
 102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****          (++) Data phase : the mode used.
 103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****          (++) Double Data Rate (DDR) mode : the activation (or not) of this mode and the delay
 104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****              if activated.
 105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****          (++) Sending Instruction Only Once (SIOO) mode : the activation (or not) of this mode.
 106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****          (++) The timeout activation and the timeout period.
 107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       (#) After the configuration, the QuadSPI will be used as soon as an access on the AHB is done
 108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           the address range. HAL_QSPI_TimeOutCallback() will be called when the timeout expires.
 109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     *** Errors management and abort functionality ***
 111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     =================================================
 112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     [..]
 113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       (#) HAL_QSPI_GetError() function gives the error raised during the last operation.
 114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       (#) HAL_QSPI_Abort() and HAL_QSPI_AbortIT() functions aborts any on-going operation and
 115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           flushes the fifo :
 116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****          (++) In polling mode, the output of the function is done when the transfer
 117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****               complete bit is set and the busy bit cleared.
 118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****          (++) In interrupt mode, HAL_QSPI_AbortCpltCallback() will be called when
 119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****               the transfer complete bit is set.
 120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     *** Control functions ***
 122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     =========================
 123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     [..]
 124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       (#) HAL_QSPI_GetState() function gives the current state of the HAL QuadSPI driver.
 125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       (#) HAL_QSPI_SetTimeout() function configures the timeout value used in the driver.
 126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       (#) HAL_QSPI_SetFifoThreshold() function configures the threshold on the Fifo of the QSPI IP.
 127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       (#) HAL_QSPI_GetFifoThreshold() function gives the current of the Fifo's threshold
 128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       (#) HAL_QSPI_SetFlashID() function configures the index of the flash memory to be accessed.
 129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     *** Callback registration ***
 131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     =============================================
 132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     [..]
 133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       The compilation define  USE_HAL_QSPI_REGISTER_CALLBACKS when set to 1
 134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       allows the user to configure dynamically the driver callbacks.
 135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       Use Functions @ref HAL_QSPI_RegisterCallback() to register a user callback,
 137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       it allows to register following callbacks:
 138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         (+) ErrorCallback : callback when error occurs.
 139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         (+) AbortCpltCallback : callback when abort is completed.
 140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         (+) FifoThresholdCallback : callback when the fifo threshold is reached.
 141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         (+) CmdCpltCallback : callback when a command without data is completed.
 142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         (+) RxCpltCallback : callback when a reception transfer is completed.
 143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         (+) TxCpltCallback : callback when a transmission transfer is completed.
 144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         (+) RxHalfCpltCallback : callback when half of the reception transfer is completed.
 145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         (+) TxHalfCpltCallback : callback when half of the transmission transfer is completed.
 146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         (+) StatusMatchCallback : callback when a status match occurs.
ARM GAS  /tmp/ccMXllgx.s 			page 4


 147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         (+) TimeOutCallback : callback when the timeout perioed expires.
 148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         (+) MspInitCallback    : QSPI MspInit.
 149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         (+) MspDeInitCallback  : QSPI MspDeInit.
 150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       This function takes as parameters the HAL peripheral handle, the Callback ID
 151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       and a pointer to the user callback function.
 152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       Use function @ref HAL_QSPI_UnRegisterCallback() to reset a callback to the default
 154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       weak (surcharged) function. It allows to reset following callbacks:
 155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         (+) ErrorCallback : callback when error occurs.
 156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         (+) AbortCpltCallback : callback when abort is completed.
 157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         (+) FifoThresholdCallback : callback when the fifo threshold is reached.
 158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         (+) CmdCpltCallback : callback when a command without data is completed.
 159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         (+) RxCpltCallback : callback when a reception transfer is completed.
 160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         (+) TxCpltCallback : callback when a transmission transfer is completed.
 161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         (+) RxHalfCpltCallback : callback when half of the reception transfer is completed.
 162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         (+) TxHalfCpltCallback : callback when half of the transmission transfer is completed.
 163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         (+) StatusMatchCallback : callback when a status match occurs.
 164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         (+) TimeOutCallback : callback when the timeout perioed expires.
 165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         (+) MspInitCallback    : QSPI MspInit.
 166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         (+) MspDeInitCallback  : QSPI MspDeInit.
 167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       This function) takes as parameters the HAL peripheral handle and the Callback ID.
 168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       By default, after the @ref HAL_QSPI_Init and if the state is HAL_QSPI_STATE_RESET
 170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       all callbacks are reset to the corresponding legacy weak (surcharged) functions.
 171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       Exception done for MspInit and MspDeInit callbacks that are respectively
 172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       reset to the legacy weak (surcharged) functions in the @ref HAL_QSPI_Init
 173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       and @ref  HAL_QSPI_DeInit only when these callbacks are null (not registered beforehand).
 174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       If not, MspInit or MspDeInit are not null, the @ref HAL_QSPI_Init and @ref HAL_QSPI_DeInit
 175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       keep and use the user MspInit/MspDeInit callbacks (registered beforehand)
 176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       Callbacks can be registered/unregistered in READY state only.
 178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       Exception done for MspInit/MspDeInit callbacks that can be registered/unregistered
 179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       in READY or RESET state, thus registered (user) MspInit/DeInit callbacks can be used
 180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       during the Init/DeInit.
 181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       In that case first register the MspInit/MspDeInit user callbacks
 182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       using @ref HAL_QSPI_RegisterCallback before calling @ref HAL_QSPI_DeInit
 183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       or @ref HAL_QSPI_Init function.
 184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       When The compilation define USE_HAL_QSPI_REGISTER_CALLBACKS is set to 0 or
 186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       not defined, the callback registering feature is not available
 187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       and weak (surcharged) callbacks are used.
 188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     *** Workarounds linked to Silicon Limitation ***
 190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     ====================================================
 191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     [..]
 192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       (#) Workarounds Implemented inside HAL Driver
 193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****          (++) Extra data written in the FIFO at the end of a read transfer
 194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   @endverbatim
 196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   ******************************************************************************
 197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @attention
 198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   *
 199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
 200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * All rights reserved.</center></h2>
 201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   *
 202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * the "License"; You may not use this file except in compliance with the
ARM GAS  /tmp/ccMXllgx.s 			page 5


 204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * License. You may obtain a copy of the License at:
 205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   *                       opensource.org/licenses/BSD-3-Clause
 206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   *
 207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   ******************************************************************************
 208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   */
 209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** /* Includes ------------------------------------------------------------------*/
 211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #include "stm32f7xx_hal.h"
 212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #if defined(QUADSPI)
 214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** /** @addtogroup STM32F7xx_HAL_Driver
 216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @{
 217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   */
 218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** /** @defgroup QSPI QSPI
 220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @brief QSPI HAL module driver
 221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @{
 222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   */
 223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #ifdef HAL_QSPI_MODULE_ENABLED
 224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** /* Private typedef -----------------------------------------------------------*/
 226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** /* Private define ------------------------------------------------------------*/
 228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** /** @defgroup QSPI_Private_Constants QSPI Private Constants
 229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @{
 230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   */
 231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #define QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE 0x00000000U                     /*!<Indirect write mode
 232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #define QSPI_FUNCTIONAL_MODE_INDIRECT_READ  ((uint32_t)QUADSPI_CCR_FMODE_0) /*!<Indirect read mode*
 233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #define QSPI_FUNCTIONAL_MODE_AUTO_POLLING   ((uint32_t)QUADSPI_CCR_FMODE_1) /*!<Automatic polling m
 234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #define QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED  ((uint32_t)QUADSPI_CCR_FMODE)   /*!<Memory-mapped mode*
 235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** /**
 236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @}
 237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   */
 238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** /* Private macro -------------------------------------------------------------*/
 240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** /** @defgroup QSPI_Private_Macros QSPI Private Macros
 241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @{
 242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   */
 243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #define IS_QSPI_FUNCTIONAL_MODE(MODE) (((MODE) == QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE) || \
 244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****                                        ((MODE) == QSPI_FUNCTIONAL_MODE_INDIRECT_READ)  || \
 245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****                                        ((MODE) == QSPI_FUNCTIONAL_MODE_AUTO_POLLING)   || \
 246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****                                        ((MODE) == QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED))
 247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** /**
 248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @}
 249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   */
 250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** /* Private variables ---------------------------------------------------------*/
 252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** /* Private function prototypes -----------------------------------------------*/
 254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** static void QSPI_DMARxCplt(DMA_HandleTypeDef *hdma);
 255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** static void QSPI_DMATxCplt(DMA_HandleTypeDef *hdma);
 256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** static void QSPI_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** static void QSPI_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** static void QSPI_DMAError(DMA_HandleTypeDef *hdma);
 259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** static void QSPI_DMAAbortCplt(DMA_HandleTypeDef *hdma);
 260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** static HAL_StatusTypeDef QSPI_WaitFlagStateUntilTimeout(QSPI_HandleTypeDef *hqspi, uint32_t Flag, F
ARM GAS  /tmp/ccMXllgx.s 			page 6


 261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** static void QSPI_Config(QSPI_HandleTypeDef *hqspi, QSPI_CommandTypeDef *cmd, uint32_t FunctionalMod
 262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** /* Exported functions --------------------------------------------------------*/
 264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** /** @defgroup QSPI_Exported_Functions QSPI Exported Functions
 266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @{
 267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   */
 268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** /** @defgroup QSPI_Exported_Functions_Group1 Initialization/de-initialization functions
 270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   *  @brief    Initialization and Configuration functions
 271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   *
 272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** @verbatim
 273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** ===============================================================================
 274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****             ##### Initialization and Configuration functions #####
 275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****  ===============================================================================
 276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     [..]
 277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     This subsection provides a set of functions allowing to :
 278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       (+) Initialize the QuadSPI.
 279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       (+) De-initialize the QuadSPI.
 280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** @endverbatim
 282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @{
 283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   */
 284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** /**
 286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @brief Initialize the QSPI mode according to the specified parameters
 287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   *        in the QSPI_InitTypeDef and initialize the associated handle.
 288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @param hqspi : QSPI handle
 289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @retval HAL status
 290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   */
 291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** HAL_StatusTypeDef HAL_QSPI_Init(QSPI_HandleTypeDef *hqspi)
 292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** {
 293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   HAL_StatusTypeDef status;
 294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   uint32_t tickstart = HAL_GetTick();
 295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Check the QSPI handle allocation */
 297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   if(hqspi == NULL)
 298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
 299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     return HAL_ERROR;
 300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
 301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Check the parameters */
 303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   assert_param(IS_QSPI_ALL_INSTANCE(hqspi->Instance));
 304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   assert_param(IS_QSPI_CLOCK_PRESCALER(hqspi->Init.ClockPrescaler));
 305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   assert_param(IS_QSPI_FIFO_THRESHOLD(hqspi->Init.FifoThreshold));
 306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   assert_param(IS_QSPI_SSHIFT(hqspi->Init.SampleShifting));
 307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   assert_param(IS_QSPI_FLASH_SIZE(hqspi->Init.FlashSize));
 308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   assert_param(IS_QSPI_CS_HIGH_TIME(hqspi->Init.ChipSelectHighTime));
 309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   assert_param(IS_QSPI_CLOCK_MODE(hqspi->Init.ClockMode));
 310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   assert_param(IS_QSPI_DUAL_FLASH_MODE(hqspi->Init.DualFlash));
 311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   if (hqspi->Init.DualFlash != QSPI_DUALFLASH_ENABLE )
 313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
 314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     assert_param(IS_QSPI_FLASH_ID(hqspi->Init.FlashID));
 315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
 316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   if(hqspi->State == HAL_QSPI_STATE_RESET)
ARM GAS  /tmp/ccMXllgx.s 			page 7


 318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
 319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     /* Allocate lock resource and initialize it */
 320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     hqspi->Lock = HAL_UNLOCKED;
 321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #if (USE_HAL_QSPI_REGISTER_CALLBACKS == 1)
 323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     /* Reset Callback pointers in HAL_QSPI_STATE_RESET only */
 324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     hqspi->ErrorCallback         = HAL_QSPI_ErrorCallback;
 325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     hqspi->AbortCpltCallback     = HAL_QSPI_AbortCpltCallback;
 326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     hqspi->FifoThresholdCallback = HAL_QSPI_FifoThresholdCallback;
 327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     hqspi->CmdCpltCallback       = HAL_QSPI_CmdCpltCallback;
 328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     hqspi->RxCpltCallback        = HAL_QSPI_RxCpltCallback;
 329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     hqspi->TxCpltCallback        = HAL_QSPI_TxCpltCallback;
 330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     hqspi->RxHalfCpltCallback    = HAL_QSPI_RxHalfCpltCallback;
 331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     hqspi->TxHalfCpltCallback    = HAL_QSPI_TxHalfCpltCallback;
 332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     hqspi->StatusMatchCallback   = HAL_QSPI_StatusMatchCallback;
 333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     hqspi->TimeOutCallback       = HAL_QSPI_TimeOutCallback;
 334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     if(hqspi->MspInitCallback == NULL)
 336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     {
 337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       hqspi->MspInitCallback = HAL_QSPI_MspInit;
 338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     }
 339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     /* Init the low level hardware */
 341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     hqspi->MspInitCallback(hqspi);
 342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #else
 343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     /* Init the low level hardware : GPIO, CLOCK */
 344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     HAL_QSPI_MspInit(hqspi);
 345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #endif
 346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     /* Configure the default timeout for the QSPI memory access */
 348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     HAL_QSPI_SetTimeout(hqspi, HAL_QSPI_TIMEOUT_DEFAULT_VALUE);
 349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
 350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Configure QSPI FIFO Threshold */
 352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_FTHRES,
 353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****              ((hqspi->Init.FifoThreshold - 1U) << QUADSPI_CR_FTHRES_Pos));
 354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Wait till BUSY flag reset */
 356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   if(status == HAL_OK)
 359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
 360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     /* Configure QSPI Clock Prescaler and Sample Shift */
 361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PRESCALER | QUADSPI_CR_SSHIFT | QUADSPI_CR_FSEL | Q
 362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****                ((hqspi->Init.ClockPrescaler << QUADSPI_CR_PRESCALER_Pos) |
 363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****                 hqspi->Init.SampleShifting  | hqspi->Init.FlashID | hqspi->Init.DualFlash));
 364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     /* Configure QSPI Flash Size, CS High Time and Clock Mode */
 366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     MODIFY_REG(hqspi->Instance->DCR, (QUADSPI_DCR_FSIZE | QUADSPI_DCR_CSHT | QUADSPI_DCR_CKMODE),
 367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****                ((hqspi->Init.FlashSize << QUADSPI_DCR_FSIZE_Pos) |
 368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****                 hqspi->Init.ChipSelectHighTime | hqspi->Init.ClockMode));
 369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     /* Enable the QSPI peripheral */
 371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     __HAL_QSPI_ENABLE(hqspi);
 372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     /* Set QSPI error code to none */
 374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
ARM GAS  /tmp/ccMXllgx.s 			page 8


 375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     /* Initialize the QSPI state */
 377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     hqspi->State = HAL_QSPI_STATE_READY;
 378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
 379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Release Lock */
 381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   __HAL_UNLOCK(hqspi);
 382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Return function status */
 384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   return status;
 385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** }
 386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** /**
 388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @brief De-Initialize the QSPI peripheral.
 389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @param hqspi : QSPI handle
 390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @retval HAL status
 391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   */
 392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** HAL_StatusTypeDef HAL_QSPI_DeInit(QSPI_HandleTypeDef *hqspi)
 393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** {
 394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Check the QSPI handle allocation */
 395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   if(hqspi == NULL)
 396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
 397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     return HAL_ERROR;
 398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
 399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Disable the QSPI Peripheral Clock */
 401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   __HAL_QSPI_DISABLE(hqspi);
 402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #if (USE_HAL_QSPI_REGISTER_CALLBACKS == 1)
 404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   if(hqspi->MspDeInitCallback == NULL)
 405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
 406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     hqspi->MspDeInitCallback = HAL_QSPI_MspDeInit;
 407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
 408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* DeInit the low level hardware */
 410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   hqspi->MspDeInitCallback(hqspi);
 411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #else
 412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC... */
 413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   HAL_QSPI_MspDeInit(hqspi);
 414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #endif
 415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Set QSPI error code to none */
 417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Initialize the QSPI state */
 420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   hqspi->State = HAL_QSPI_STATE_RESET;
 421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Release Lock */
 423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   __HAL_UNLOCK(hqspi);
 424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   return HAL_OK;
 426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** }
 427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** /**
 429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @brief Initialize the QSPI MSP.
 430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @param hqspi : QSPI handle
 431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @retval None
ARM GAS  /tmp/ccMXllgx.s 			page 9


 432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   */
 433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** __weak void HAL_QSPI_MspInit(QSPI_HandleTypeDef *hqspi)
 434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** {
 435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Prevent unused argument(s) compilation warning */
 436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   UNUSED(hqspi);
 437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****             the HAL_QSPI_MspInit can be implemented in the user file
 440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****    */
 441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** }
 442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** /**
 444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @brief DeInitialize the QSPI MSP.
 445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @param hqspi : QSPI handle
 446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @retval None
 447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   */
 448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** __weak void HAL_QSPI_MspDeInit(QSPI_HandleTypeDef *hqspi)
 449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** {
 450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Prevent unused argument(s) compilation warning */
 451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   UNUSED(hqspi);
 452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****             the HAL_QSPI_MspDeInit can be implemented in the user file
 455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****    */
 456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** }
 457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** /**
 459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @}
 460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   */
 461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** /** @defgroup QSPI_Exported_Functions_Group2 Input and Output operation functions
 463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   *  @brief QSPI Transmit/Receive functions
 464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   *
 465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** @verbatim
 466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****  ===============================================================================
 467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****                       ##### IO operation functions #####
 468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****  ===============================================================================
 469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     [..]
 470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     This subsection provides a set of functions allowing to :
 471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       (+) Handle the interrupts.
 472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       (+) Handle the command sequence.
 473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       (+) Transmit data in blocking, interrupt or DMA mode.
 474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       (+) Receive data in blocking, interrupt or DMA mode.
 475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       (+) Manage the auto-polling functional mode.
 476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       (+) Manage the memory-mapped functional mode.
 477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** @endverbatim
 479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @{
 480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   */
 481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** /**
 483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @brief Handle QSPI interrupt request.
 484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @param hqspi : QSPI handle
 485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @retval None
 486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   */
 487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** void HAL_QSPI_IRQHandler(QSPI_HandleTypeDef *hqspi)
 488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** {
ARM GAS  /tmp/ccMXllgx.s 			page 10


 489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   __IO uint32_t *data_reg;
 490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   uint32_t flag = READ_REG(hqspi->Instance->SR);
 491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   uint32_t itsource = READ_REG(hqspi->Instance->CR);
 492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* QSPI Fifo Threshold interrupt occurred ----------------------------------*/
 494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   if(((flag & QSPI_FLAG_FT) != 0U) && ((itsource & QSPI_IT_FT) != 0U))
 495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
 496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     data_reg = &hqspi->Instance->DR;
 497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     if(hqspi->State == HAL_QSPI_STATE_BUSY_INDIRECT_TX)
 499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     {
 500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* Transmission process */
 501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       while(__HAL_QSPI_GET_FLAG(hqspi, QSPI_FLAG_FT) != RESET)
 502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       {
 503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         if (hqspi->TxXferCount > 0U)
 504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         {
 505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           /* Fill the FIFO until the threshold is reached */
 506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           *((__IO uint8_t *)data_reg) = *hqspi->pTxBuffPtr;
 507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           hqspi->pTxBuffPtr++;
 508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           hqspi->TxXferCount--;
 509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         }
 510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         else
 511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         {
 512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           /* No more data available for the transfer */
 513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           /* Disable the QSPI FIFO Threshold Interrupt */
 514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           __HAL_QSPI_DISABLE_IT(hqspi, QSPI_IT_FT);
 515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           break;
 516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         }
 517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       }
 518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     }
 519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     else if(hqspi->State == HAL_QSPI_STATE_BUSY_INDIRECT_RX)
 520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     {
 521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* Receiving Process */
 522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       while(__HAL_QSPI_GET_FLAG(hqspi, QSPI_FLAG_FT) != RESET)
 523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       {
 524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         if (hqspi->RxXferCount > 0U)
 525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         {
 526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           /* Read the FIFO until the threshold is reached */
 527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           *hqspi->pRxBuffPtr = *((__IO uint8_t *)data_reg);
 528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           hqspi->pRxBuffPtr++;
 529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           hqspi->RxXferCount--;
 530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         }
 531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         else
 532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         {
 533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           /* All data have been received for the transfer */
 534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           /* Disable the QSPI FIFO Threshold Interrupt */
 535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           __HAL_QSPI_DISABLE_IT(hqspi, QSPI_IT_FT);
 536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           break;
 537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         }
 538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       }
 539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     }
 540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     else
 541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     {
 542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* Nothing to do */
 543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     }
 544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     /* FIFO Threshold callback */
ARM GAS  /tmp/ccMXllgx.s 			page 11


 546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #if (USE_HAL_QSPI_REGISTER_CALLBACKS == 1)
 547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     hqspi->FifoThresholdCallback(hqspi);
 548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #else
 549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     HAL_QSPI_FifoThresholdCallback(hqspi);
 550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #endif
 551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
 552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* QSPI Transfer Complete interrupt occurred -------------------------------*/
 554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   else if(((flag & QSPI_FLAG_TC) != 0U) && ((itsource & QSPI_IT_TC) != 0U))
 555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
 556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     /* Clear interrupt */
 557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     WRITE_REG(hqspi->Instance->FCR, QSPI_FLAG_TC);
 558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     /* Disable the QSPI FIFO Threshold, Transfer Error and Transfer complete Interrupts */
 560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     __HAL_QSPI_DISABLE_IT(hqspi, QSPI_IT_TC | QSPI_IT_TE | QSPI_IT_FT);
 561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     /* Transfer complete callback */
 563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     if(hqspi->State == HAL_QSPI_STATE_BUSY_INDIRECT_TX)
 564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     {
 565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       if ((hqspi->Instance->CR & QUADSPI_CR_DMAEN) != 0U)
 566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       {
 567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         /* Disable the DMA transfer by clearing the DMAEN bit in the QSPI CR register */
 568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
 569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         /* Disable the DMA channel */
 571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         __HAL_DMA_DISABLE(hqspi->hdma);
 572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       }
 573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #if  defined(QSPI1_V1_0)
 575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* Clear Busy bit */
 576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       HAL_QSPI_Abort_IT(hqspi);
 577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #endif
 578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* Change state of QSPI */
 580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       hqspi->State = HAL_QSPI_STATE_READY;
 581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* TX Complete callback */
 583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #if (USE_HAL_QSPI_REGISTER_CALLBACKS == 1)
 584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       hqspi->TxCpltCallback(hqspi);
 585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #else
 586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       HAL_QSPI_TxCpltCallback(hqspi);
 587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #endif
 588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     }
 589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     else if(hqspi->State == HAL_QSPI_STATE_BUSY_INDIRECT_RX)
 590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     {
 591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       if ((hqspi->Instance->CR & QUADSPI_CR_DMAEN) != 0U)
 592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       {
 593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         /* Disable the DMA transfer by clearing the DMAEN bit in the QSPI CR register */
 594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
 595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         /* Disable the DMA channel */
 597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         __HAL_DMA_DISABLE(hqspi->hdma);
 598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       }
 599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       else
 600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       {
 601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         data_reg = &hqspi->Instance->DR;
 602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         while(READ_BIT(hqspi->Instance->SR, QUADSPI_SR_FLEVEL) != 0U)
ARM GAS  /tmp/ccMXllgx.s 			page 12


 603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         {
 604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           if (hqspi->RxXferCount > 0U)
 605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           {
 606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****             /* Read the last data received in the FIFO until it is empty */
 607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****             *hqspi->pRxBuffPtr = *((__IO uint8_t *)data_reg);
 608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****             hqspi->pRxBuffPtr++;
 609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****             hqspi->RxXferCount--;
 610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           }
 611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           else
 612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           {
 613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****             /* All data have been received for the transfer */
 614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****             break;
 615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           }
 616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         }
 617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       }
 618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #if  defined(QSPI1_V1_0)
 620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* Workaround - Extra data written in the FIFO at the end of a read transfer */
 621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       HAL_QSPI_Abort_IT(hqspi);
 622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #endif
 623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* Change state of QSPI */
 625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       hqspi->State = HAL_QSPI_STATE_READY;
 626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* RX Complete callback */
 628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #if (USE_HAL_QSPI_REGISTER_CALLBACKS == 1)
 629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       hqspi->RxCpltCallback(hqspi);
 630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #else
 631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       HAL_QSPI_RxCpltCallback(hqspi);
 632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #endif
 633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     }
 634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     else if(hqspi->State == HAL_QSPI_STATE_BUSY)
 635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     {
 636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* Change state of QSPI */
 637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       hqspi->State = HAL_QSPI_STATE_READY;
 638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* Command Complete callback */
 640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #if (USE_HAL_QSPI_REGISTER_CALLBACKS == 1)
 641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       hqspi->CmdCpltCallback(hqspi);
 642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #else
 643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       HAL_QSPI_CmdCpltCallback(hqspi);
 644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #endif
 645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     }
 646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     else if(hqspi->State == HAL_QSPI_STATE_ABORT)
 647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     {
 648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* Reset functional mode configuration to indirect write mode by default */
 649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       CLEAR_BIT(hqspi->Instance->CCR, QUADSPI_CCR_FMODE);
 650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* Change state of QSPI */
 652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       hqspi->State = HAL_QSPI_STATE_READY;
 653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       if (hqspi->ErrorCode == HAL_QSPI_ERROR_NONE)
 655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       {
 656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         /* Abort called by the user */
 657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         /* Abort Complete callback */
 659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #if (USE_HAL_QSPI_REGISTER_CALLBACKS == 1)
ARM GAS  /tmp/ccMXllgx.s 			page 13


 660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         hqspi->AbortCpltCallback(hqspi);
 661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #else
 662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         HAL_QSPI_AbortCpltCallback(hqspi);
 663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #endif
 664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       }
 665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       else
 666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       {
 667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         /* Abort due to an error (eg :  DMA error) */
 668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         /* Error callback */
 670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #if (USE_HAL_QSPI_REGISTER_CALLBACKS == 1)
 671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         hqspi->ErrorCallback(hqspi);
 672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #else
 673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         HAL_QSPI_ErrorCallback(hqspi);
 674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #endif
 675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       }
 676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     }
 677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     else
 678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     {
 679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****      /* Nothing to do */
 680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     }
 681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
 682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* QSPI Status Match interrupt occurred ------------------------------------*/
 684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   else if(((flag & QSPI_FLAG_SM) != 0U) && ((itsource & QSPI_IT_SM) != 0U))
 685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
 686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     /* Clear interrupt */
 687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     WRITE_REG(hqspi->Instance->FCR, QSPI_FLAG_SM);
 688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     /* Check if the automatic poll mode stop is activated */
 690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     if(READ_BIT(hqspi->Instance->CR, QUADSPI_CR_APMS) != 0U)
 691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     {
 692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* Disable the QSPI Transfer Error and Status Match Interrupts */
 693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       __HAL_QSPI_DISABLE_IT(hqspi, (QSPI_IT_SM | QSPI_IT_TE));
 694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* Change state of QSPI */
 696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       hqspi->State = HAL_QSPI_STATE_READY;
 697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     }
 698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     /* Status match callback */
 700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #if (USE_HAL_QSPI_REGISTER_CALLBACKS == 1)
 701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     hqspi->StatusMatchCallback(hqspi);
 702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #else
 703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     HAL_QSPI_StatusMatchCallback(hqspi);
 704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #endif
 705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
 706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* QSPI Transfer Error interrupt occurred ----------------------------------*/
 708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   else if(((flag & QSPI_FLAG_TE) != 0U) && ((itsource & QSPI_IT_TE) != 0U))
 709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
 710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     /* Clear interrupt */
 711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     WRITE_REG(hqspi->Instance->FCR, QSPI_FLAG_TE);
 712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     /* Disable all the QSPI Interrupts */
 714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     __HAL_QSPI_DISABLE_IT(hqspi, QSPI_IT_SM | QSPI_IT_TC | QSPI_IT_TE | QSPI_IT_FT);
 715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     /* Set error code */
ARM GAS  /tmp/ccMXllgx.s 			page 14


 717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     hqspi->ErrorCode |= HAL_QSPI_ERROR_TRANSFER;
 718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     if ((hqspi->Instance->CR & QUADSPI_CR_DMAEN) != 0U)
 720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     {
 721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* Disable the DMA transfer by clearing the DMAEN bit in the QSPI CR register */
 722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
 723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* Disable the DMA channel */
 725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       hqspi->hdma->XferAbortCallback = QSPI_DMAAbortCplt;
 726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       if (HAL_DMA_Abort_IT(hqspi->hdma) != HAL_OK)
 727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       {
 728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         /* Set error code to DMA */
 729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         hqspi->ErrorCode |= HAL_QSPI_ERROR_DMA;
 730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         /* Change state of QSPI */
 732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         hqspi->State = HAL_QSPI_STATE_READY;
 733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         
 734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         /* Error callback */
 735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #if (USE_HAL_QSPI_REGISTER_CALLBACKS == 1)
 736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         hqspi->ErrorCallback(hqspi);
 737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #else
 738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         HAL_QSPI_ErrorCallback(hqspi);
 739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #endif
 740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       }
 741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     }
 742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     else
 743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     {
 744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* Change state of QSPI */
 745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       hqspi->State = HAL_QSPI_STATE_READY;
 746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* Error callback */
 748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #if (USE_HAL_QSPI_REGISTER_CALLBACKS == 1)
 749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       hqspi->ErrorCallback(hqspi);
 750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #else
 751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       HAL_QSPI_ErrorCallback(hqspi);
 752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #endif
 753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     }
 754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
 755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* QSPI Timeout interrupt occurred -----------------------------------------*/
 757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   else if(((flag & QSPI_FLAG_TO) != 0U) && ((itsource & QSPI_IT_TO) != 0U))
 758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
 759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     /* Clear interrupt */
 760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     WRITE_REG(hqspi->Instance->FCR, QSPI_FLAG_TO);
 761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     /* Timeout callback */
 763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #if (USE_HAL_QSPI_REGISTER_CALLBACKS == 1)
 764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     hqspi->TimeOutCallback(hqspi);
 765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #else
 766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     HAL_QSPI_TimeOutCallback(hqspi);
 767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #endif
 768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
 769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****    else
 771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
 772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****    /* Nothing to do */
 773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
ARM GAS  /tmp/ccMXllgx.s 			page 15


 774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** }
 775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** /**
 777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @brief Set the command configuration.
 778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @param hqspi : QSPI handle
 779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @param cmd : structure that contains the command configuration information
 780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @param Timeout : Timeout duration
 781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @note   This function is used only in Indirect Read or Write Modes
 782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @retval HAL status
 783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   */
 784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** HAL_StatusTypeDef HAL_QSPI_Command(QSPI_HandleTypeDef *hqspi, QSPI_CommandTypeDef *cmd, uint32_t Ti
 785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** {
 786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   HAL_StatusTypeDef status;
 787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   uint32_t tickstart = HAL_GetTick();
 788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Check the parameters */
 790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   assert_param(IS_QSPI_INSTRUCTION_MODE(cmd->InstructionMode));
 791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   if (cmd->InstructionMode != QSPI_INSTRUCTION_NONE)
 792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
 793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     assert_param(IS_QSPI_INSTRUCTION(cmd->Instruction));
 794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
 795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   assert_param(IS_QSPI_ADDRESS_MODE(cmd->AddressMode));
 797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
 799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     assert_param(IS_QSPI_ADDRESS_SIZE(cmd->AddressSize));
 800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
 801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   assert_param(IS_QSPI_ALTERNATE_BYTES_MODE(cmd->AlternateByteMode));
 803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
 805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     assert_param(IS_QSPI_ALTERNATE_BYTES_SIZE(cmd->AlternateBytesSize));
 806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
 807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   assert_param(IS_QSPI_DUMMY_CYCLES(cmd->DummyCycles));
 809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   assert_param(IS_QSPI_DATA_MODE(cmd->DataMode));
 810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   assert_param(IS_QSPI_DDR_MODE(cmd->DdrMode));
 812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   assert_param(IS_QSPI_DDR_HHC(cmd->DdrHoldHalfCycle));
 813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   assert_param(IS_QSPI_SIOO_MODE(cmd->SIOOMode));
 814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Process locked */
 816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   __HAL_LOCK(hqspi);
 817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   if(hqspi->State == HAL_QSPI_STATE_READY)
 819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
 820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     /* Update QSPI state */
 823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     hqspi->State = HAL_QSPI_STATE_BUSY;
 824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     /* Wait till BUSY flag reset */
 826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     if (status == HAL_OK)
 829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     {
 830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* Call the configuration function */
ARM GAS  /tmp/ccMXllgx.s 			page 16


 831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       if (cmd->DataMode == QSPI_DATA_NONE)
 834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       {
 835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         /* When there is no data phase, the transfer start as soon as the configuration is done
 836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         so wait until TC flag is set to go back in idle state */
 837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         if (status == HAL_OK)
 840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         {
 841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           /* Update QSPI state */
 844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           hqspi->State = HAL_QSPI_STATE_READY;
 845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         }
 846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       }
 847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       else
 848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       {
 849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         /* Update QSPI state */
 850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         hqspi->State = HAL_QSPI_STATE_READY;
 851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       }
 852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     }
 853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
 854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   else
 855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
 856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     status = HAL_BUSY;
 857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
 858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Process unlocked */
 860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   __HAL_UNLOCK(hqspi);
 861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Return function status */
 863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   return status;
 864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** }
 865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** /**
 867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @brief Set the command configuration in interrupt mode.
 868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @param hqspi : QSPI handle
 869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @param cmd : structure that contains the command configuration information
 870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @note   This function is used only in Indirect Read or Write Modes
 871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @retval HAL status
 872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   */
 873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** HAL_StatusTypeDef HAL_QSPI_Command_IT(QSPI_HandleTypeDef *hqspi, QSPI_CommandTypeDef *cmd)
 874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** {
 875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   HAL_StatusTypeDef status;
 876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   uint32_t tickstart = HAL_GetTick();
 877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Check the parameters */
 879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   assert_param(IS_QSPI_INSTRUCTION_MODE(cmd->InstructionMode));
 880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   if (cmd->InstructionMode != QSPI_INSTRUCTION_NONE)
 881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
 882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     assert_param(IS_QSPI_INSTRUCTION(cmd->Instruction));
 883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
 884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   assert_param(IS_QSPI_ADDRESS_MODE(cmd->AddressMode));
 886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
ARM GAS  /tmp/ccMXllgx.s 			page 17


 888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     assert_param(IS_QSPI_ADDRESS_SIZE(cmd->AddressSize));
 889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
 890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   assert_param(IS_QSPI_ALTERNATE_BYTES_MODE(cmd->AlternateByteMode));
 892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
 894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     assert_param(IS_QSPI_ALTERNATE_BYTES_SIZE(cmd->AlternateBytesSize));
 895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
 896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   assert_param(IS_QSPI_DUMMY_CYCLES(cmd->DummyCycles));
 898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   assert_param(IS_QSPI_DATA_MODE(cmd->DataMode));
 899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   assert_param(IS_QSPI_DDR_MODE(cmd->DdrMode));
 901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   assert_param(IS_QSPI_DDR_HHC(cmd->DdrHoldHalfCycle));
 902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   assert_param(IS_QSPI_SIOO_MODE(cmd->SIOOMode));
 903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Process locked */
 905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   __HAL_LOCK(hqspi);
 906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   if(hqspi->State == HAL_QSPI_STATE_READY)
 908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
 909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     /* Update QSPI state */
 912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     hqspi->State = HAL_QSPI_STATE_BUSY;
 913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     /* Wait till BUSY flag reset */
 915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout
 916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     if (status == HAL_OK)
 918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     {
 919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       if (cmd->DataMode == QSPI_DATA_NONE)
 920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       {
 921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         /* Clear interrupt */
 922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TE | QSPI_FLAG_TC);
 923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       }
 924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* Call the configuration function */
 926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       if (cmd->DataMode == QSPI_DATA_NONE)
 929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       {
 930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         /* When there is no data phase, the transfer start as soon as the configuration is done
 931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         so activate TC and TE interrupts */
 932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         /* Process unlocked */
 933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         __HAL_UNLOCK(hqspi);
 934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         /* Enable the QSPI Transfer Error Interrupt */
 936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         __HAL_QSPI_ENABLE_IT(hqspi, QSPI_IT_TE | QSPI_IT_TC);
 937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       }
 938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       else
 939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       {
 940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         /* Update QSPI state */
 941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         hqspi->State = HAL_QSPI_STATE_READY;
 942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         /* Process unlocked */
 944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         __HAL_UNLOCK(hqspi);
ARM GAS  /tmp/ccMXllgx.s 			page 18


 945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       }
 946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     }
 947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     else
 948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     {
 949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* Process unlocked */
 950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       __HAL_UNLOCK(hqspi);
 951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     }
 952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
 953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   else
 954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
 955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     status = HAL_BUSY;
 956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     /* Process unlocked */
 958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     __HAL_UNLOCK(hqspi);
 959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
 960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Return function status */
 962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   return status;
 963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** }
 964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** /**
 966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @brief Transmit an amount of data in blocking mode.
 967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @param hqspi : QSPI handle
 968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @param pData : pointer to data buffer
 969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @param Timeout : Timeout duration
 970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @note   This function is used only in Indirect Write Mode
 971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @retval HAL status
 972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   */
 973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** HAL_StatusTypeDef HAL_QSPI_Transmit(QSPI_HandleTypeDef *hqspi, uint8_t *pData, uint32_t Timeout)
 974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** {
 975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   HAL_StatusTypeDef status = HAL_OK;
 976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   uint32_t tickstart = HAL_GetTick();
 977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   __IO uint32_t *data_reg = &hqspi->Instance->DR;
 978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Process locked */
 980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   __HAL_LOCK(hqspi);
 981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   if(hqspi->State == HAL_QSPI_STATE_READY)
 983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
 984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     if(pData != NULL )
 987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     {
 988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* Update state */
 989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_TX;
 990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* Configure counters and size of the handle */
 992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       hqspi->TxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       hqspi->pTxBuffPtr = pData;
 995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* Configure QSPI: CCR register with functional as indirect write */
 997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       while(hqspi->TxXferCount > 0U)
1000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       {
1001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         /* Wait until FT flag is set to send data */
ARM GAS  /tmp/ccMXllgx.s 			page 19


1002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_FT, SET, tickstart, Timeout);
1003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         if (status != HAL_OK)
1005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         {
1006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           break;
1007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         }
1008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         *((__IO uint8_t *)data_reg) = *hqspi->pTxBuffPtr;
1010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         hqspi->pTxBuffPtr++;
1011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         hqspi->TxXferCount--;
1012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       }
1013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       if (status == HAL_OK)
1015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       {
1016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         /* Wait until TC flag is set to go back in idle state */
1017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
1018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         if (status == HAL_OK)
1020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         {
1021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           /* Clear Transfer Complete bit */
1022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
1023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #if  defined(QSPI1_V1_0)
1025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           /* Clear Busy bit */
1026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           status = HAL_QSPI_Abort(hqspi);
1027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #endif
1028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         }
1029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       }
1030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* Update QSPI state */
1032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       hqspi->State = HAL_QSPI_STATE_READY;
1033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     }
1034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     else
1035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     {
1036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
1037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       status = HAL_ERROR;
1038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     }
1039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
1040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   else
1041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
1042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     status = HAL_BUSY;
1043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
1044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Process unlocked */
1046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   __HAL_UNLOCK(hqspi);
1047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   return status;
1049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** }
1050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** /**
1053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @brief Receive an amount of data in blocking mode.
1054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @param hqspi : QSPI handle
1055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @param pData : pointer to data buffer
1056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @param Timeout : Timeout duration
1057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @note   This function is used only in Indirect Read Mode
1058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @retval HAL status
ARM GAS  /tmp/ccMXllgx.s 			page 20


1059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   */
1060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** HAL_StatusTypeDef HAL_QSPI_Receive(QSPI_HandleTypeDef *hqspi, uint8_t *pData, uint32_t Timeout)
1061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** {
1062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   HAL_StatusTypeDef status = HAL_OK;
1063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   uint32_t tickstart = HAL_GetTick();
1064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   uint32_t addr_reg = READ_REG(hqspi->Instance->AR);
1065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   __IO uint32_t *data_reg = &hqspi->Instance->DR;
1066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Process locked */
1068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   __HAL_LOCK(hqspi);
1069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   if(hqspi->State == HAL_QSPI_STATE_READY)
1071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
1072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
1073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     if(pData != NULL )
1075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     {
1076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* Update state */
1077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_RX;
1078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* Configure counters and size of the handle */
1080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       hqspi->RxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
1081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
1082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       hqspi->pRxBuffPtr = pData;
1083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* Configure QSPI: CCR register with functional as indirect read */
1085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_READ);
1086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* Start the transfer by re-writing the address in AR register */
1088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       WRITE_REG(hqspi->Instance->AR, addr_reg);
1089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       while(hqspi->RxXferCount > 0U)
1091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       {
1092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         /* Wait until FT or TC flag is set to read received data */
1093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         status = QSPI_WaitFlagStateUntilTimeout(hqspi, (QSPI_FLAG_FT | QSPI_FLAG_TC), SET, tickstar
1094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         if  (status != HAL_OK)
1096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         {
1097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           break;
1098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         }
1099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         *hqspi->pRxBuffPtr = *((__IO uint8_t *)data_reg);
1101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         hqspi->pRxBuffPtr++;
1102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         hqspi->RxXferCount--;
1103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       }
1104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       if (status == HAL_OK)
1106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       {
1107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         /* Wait until TC flag is set to go back in idle state */
1108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
1109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         if  (status == HAL_OK)
1111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         {
1112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           /* Clear Transfer Complete bit */
1113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
1114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #if  defined(QSPI1_V1_0)
ARM GAS  /tmp/ccMXllgx.s 			page 21


1116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           /* Workaround - Extra data written in the FIFO at the end of a read transfer */
1117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           status = HAL_QSPI_Abort(hqspi);
1118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #endif
1119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         }
1120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       }
1121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* Update QSPI state */
1123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       hqspi->State = HAL_QSPI_STATE_READY;
1124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     }
1125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     else
1126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     {
1127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
1128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       status = HAL_ERROR;
1129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     }
1130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
1131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   else
1132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
1133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     status = HAL_BUSY;
1134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
1135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Process unlocked */
1137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   __HAL_UNLOCK(hqspi);
1138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   return status;
1140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** }
1141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** /**
1143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @brief  Send an amount of data in non-blocking mode with interrupt.
1144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @param  hqspi : QSPI handle
1145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @param  pData : pointer to data buffer
1146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @note   This function is used only in Indirect Write Mode
1147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @retval HAL status
1148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   */
1149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** HAL_StatusTypeDef HAL_QSPI_Transmit_IT(QSPI_HandleTypeDef *hqspi, uint8_t *pData)
1150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** {
1151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   HAL_StatusTypeDef status = HAL_OK;
1152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Process locked */
1154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   __HAL_LOCK(hqspi);
1155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   if(hqspi->State == HAL_QSPI_STATE_READY)
1157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
1158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
1159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     if(pData != NULL )
1161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     {
1162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* Update state */
1163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_TX;
1164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* Configure counters and size of the handle */
1166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       hqspi->TxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
1167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
1168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       hqspi->pTxBuffPtr = pData;
1169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* Clear interrupt */
1171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TE | QSPI_FLAG_TC);
1172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
ARM GAS  /tmp/ccMXllgx.s 			page 22


1173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* Configure QSPI: CCR register with functional as indirect write */
1174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
1175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* Process unlocked */
1177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       __HAL_UNLOCK(hqspi);
1178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* Enable the QSPI transfer error, FIFO threshold and transfer complete Interrupts */
1180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       __HAL_QSPI_ENABLE_IT(hqspi, QSPI_IT_TE | QSPI_IT_FT | QSPI_IT_TC);
1181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     }
1182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     else
1183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     {
1184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
1185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       status = HAL_ERROR;
1186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* Process unlocked */
1188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       __HAL_UNLOCK(hqspi);
1189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     }
1190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
1191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   else
1192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
1193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     status = HAL_BUSY;
1194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     /* Process unlocked */
1196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     __HAL_UNLOCK(hqspi);
1197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
1198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   return status;
1200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** }
1201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** /**
1203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @brief  Receive an amount of data in non-blocking mode with interrupt.
1204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @param  hqspi : QSPI handle
1205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @param  pData : pointer to data buffer
1206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @note   This function is used only in Indirect Read Mode
1207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @retval HAL status
1208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   */
1209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** HAL_StatusTypeDef HAL_QSPI_Receive_IT(QSPI_HandleTypeDef *hqspi, uint8_t *pData)
1210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** {
1211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   HAL_StatusTypeDef status = HAL_OK;
1212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   uint32_t addr_reg = READ_REG(hqspi->Instance->AR);
1213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Process locked */
1215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   __HAL_LOCK(hqspi);
1216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   if(hqspi->State == HAL_QSPI_STATE_READY)
1218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
1219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
1220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     if(pData != NULL )
1222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     {
1223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* Update state */
1224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_RX;
1225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* Configure counters and size of the handle */
1227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       hqspi->RxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
1228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
1229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       hqspi->pRxBuffPtr = pData;
ARM GAS  /tmp/ccMXllgx.s 			page 23


1230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* Clear interrupt */
1232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TE | QSPI_FLAG_TC);
1233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* Configure QSPI: CCR register with functional as indirect read */
1235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_READ);
1236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* Start the transfer by re-writing the address in AR register */
1238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       WRITE_REG(hqspi->Instance->AR, addr_reg);
1239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* Process unlocked */
1241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       __HAL_UNLOCK(hqspi);
1242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* Enable the QSPI transfer error, FIFO threshold and transfer complete Interrupts */
1244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       __HAL_QSPI_ENABLE_IT(hqspi, QSPI_IT_TE | QSPI_IT_FT | QSPI_IT_TC);
1245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     }
1246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     else
1247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     {
1248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
1249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       status = HAL_ERROR;
1250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* Process unlocked */
1252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       __HAL_UNLOCK(hqspi);
1253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     }
1254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
1255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   else
1256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
1257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     status = HAL_BUSY;
1258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     /* Process unlocked */
1260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     __HAL_UNLOCK(hqspi);
1261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
1262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   return status;
1264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** }
1265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** /**
1267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @brief  Send an amount of data in non-blocking mode with DMA.
1268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @param  hqspi : QSPI handle
1269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @param  pData : pointer to data buffer
1270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @note   This function is used only in Indirect Write Mode
1271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @note   If DMA peripheral access is configured as halfword, the number
1272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   *         of data and the fifo threshold should be aligned on halfword
1273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @note   If DMA peripheral access is configured as word, the number
1274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   *         of data and the fifo threshold should be aligned on word
1275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @retval HAL status
1276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   */
1277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** HAL_StatusTypeDef HAL_QSPI_Transmit_DMA(QSPI_HandleTypeDef *hqspi, uint8_t *pData)
1278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** {
1279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   HAL_StatusTypeDef status = HAL_OK;
1280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   uint32_t data_size = (READ_REG(hqspi->Instance->DLR) + 1U);
1281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Process locked */
1283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   __HAL_LOCK(hqspi);
1284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   if(hqspi->State == HAL_QSPI_STATE_READY)
1286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
ARM GAS  /tmp/ccMXllgx.s 			page 24


1287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     /* Clear the error code */
1288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
1289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     if(pData != NULL )
1291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     {
1292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* Configure counters of the handle */
1293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       if (hqspi->hdma->Init.PeriphDataAlignment == DMA_PDATAALIGN_BYTE)
1294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       {
1295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         hqspi->TxXferCount = data_size;
1296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       }
1297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       else if (hqspi->hdma->Init.PeriphDataAlignment == DMA_PDATAALIGN_HALFWORD)
1298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       {
1299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         if (((data_size % 2U) != 0U) || ((hqspi->Init.FifoThreshold % 2U) != 0U))
1300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         {
1301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           /* The number of data or the fifo threshold is not aligned on halfword
1302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           => no transfer possible with DMA peripheral access configured as halfword */
1303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
1304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           status = HAL_ERROR;
1305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           /* Process unlocked */
1307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           __HAL_UNLOCK(hqspi);
1308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         }
1309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         else
1310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         {
1311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           hqspi->TxXferCount = (data_size >> 1U);
1312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         }
1313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       }
1314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       else if (hqspi->hdma->Init.PeriphDataAlignment == DMA_PDATAALIGN_WORD)
1315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       {
1316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         if (((data_size % 4U) != 0U) || ((hqspi->Init.FifoThreshold % 4U) != 0U))
1317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         {
1318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           /* The number of data or the fifo threshold is not aligned on word
1319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           => no transfer possible with DMA peripheral access configured as word */
1320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
1321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           status = HAL_ERROR;
1322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           /* Process unlocked */
1324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           __HAL_UNLOCK(hqspi);
1325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         }
1326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         else
1327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         {
1328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           hqspi->TxXferCount = (data_size >> 2U);
1329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         }
1330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       }
1331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       else
1332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       {
1333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         /* Nothing to do */
1334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       }
1335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       if (status == HAL_OK)
1337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       {
1338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         /* Update state */
1339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_TX;
1340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         /* Clear interrupt */
1342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         __HAL_QSPI_CLEAR_FLAG(hqspi, (QSPI_FLAG_TE | QSPI_FLAG_TC));
1343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
ARM GAS  /tmp/ccMXllgx.s 			page 25


1344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         /* Configure size and pointer of the handle */
1345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         hqspi->TxXferSize = hqspi->TxXferCount;
1346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         hqspi->pTxBuffPtr = pData;
1347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         /* Configure QSPI: CCR register with functional mode as indirect write */
1349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
1350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         /* Set the QSPI DMA transfer complete callback */
1352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         hqspi->hdma->XferCpltCallback = QSPI_DMATxCplt;
1353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         /* Set the QSPI DMA Half transfer complete callback */
1355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         hqspi->hdma->XferHalfCpltCallback = QSPI_DMATxHalfCplt;
1356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         /* Set the DMA error callback */
1358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         hqspi->hdma->XferErrorCallback = QSPI_DMAError;
1359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         /* Clear the DMA abort callback */
1361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         hqspi->hdma->XferAbortCallback = NULL;
1362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         /* Configure the direction of the DMA */
1364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         hqspi->hdma->Init.Direction = DMA_MEMORY_TO_PERIPH;
1365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         MODIFY_REG(hqspi->hdma->Instance->CR, DMA_SxCR_DIR, hqspi->hdma->Init.Direction);
1366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         /* Enable the QSPI transmit DMA Channel */
1368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         if (HAL_DMA_Start_IT(hqspi->hdma, (uint32_t)pData, (uint32_t)&hqspi->Instance->DR, hqspi->T
1369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         {
1370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           /* Process unlocked */
1371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           __HAL_UNLOCK(hqspi);
1372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           
1373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           /* Enable the QSPI transfer error Interrupt */
1374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           __HAL_QSPI_ENABLE_IT(hqspi, QSPI_IT_TE);
1375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           
1376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           /* Enable the DMA transfer by setting the DMAEN bit in the QSPI CR register */
1377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           SET_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
1378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         }
1379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         else
1380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         {
1381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           status = HAL_ERROR;
1382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           hqspi->ErrorCode |= HAL_QSPI_ERROR_DMA;
1383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           hqspi->State = HAL_QSPI_STATE_READY;
1384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           /* Process unlocked */
1386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           __HAL_UNLOCK(hqspi);
1387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         }
1388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****      }
1389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     }
1390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     else
1391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     {
1392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
1393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       status = HAL_ERROR;
1394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* Process unlocked */
1396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       __HAL_UNLOCK(hqspi);
1397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     }
1398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
1399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   else
1400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
ARM GAS  /tmp/ccMXllgx.s 			page 26


1401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     status = HAL_BUSY;
1402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     /* Process unlocked */
1404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     __HAL_UNLOCK(hqspi);
1405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
1406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   return status;
1408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** }
1409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** /**
1411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @brief  Receive an amount of data in non-blocking mode with DMA.
1412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @param  hqspi : QSPI handle
1413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @param  pData : pointer to data buffer.
1414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @note   This function is used only in Indirect Read Mode
1415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @note   If DMA peripheral access is configured as halfword, the number
1416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   *         of data and the fifo threshold should be aligned on halfword
1417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @note   If DMA peripheral access is configured as word, the number
1418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   *         of data and the fifo threshold should be aligned on word
1419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @retval HAL status
1420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   */
1421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** HAL_StatusTypeDef HAL_QSPI_Receive_DMA(QSPI_HandleTypeDef *hqspi, uint8_t *pData)
1422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** {
1423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   HAL_StatusTypeDef status = HAL_OK;
1424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   uint32_t addr_reg = READ_REG(hqspi->Instance->AR);
1425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   uint32_t data_size = (READ_REG(hqspi->Instance->DLR) + 1U);
1426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Process locked */
1428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   __HAL_LOCK(hqspi);
1429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   if(hqspi->State == HAL_QSPI_STATE_READY)
1431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
1432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     /* Clear the error code */
1433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
1434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     if(pData != NULL )
1436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     {
1437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* Configure counters of the handle */
1438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       if (hqspi->hdma->Init.PeriphDataAlignment == DMA_PDATAALIGN_BYTE)
1439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       {
1440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         hqspi->RxXferCount = data_size;
1441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       }
1442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       else if (hqspi->hdma->Init.PeriphDataAlignment == DMA_PDATAALIGN_HALFWORD)
1443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       {
1444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         if (((data_size % 2U) != 0U) || ((hqspi->Init.FifoThreshold % 2U) != 0U))
1445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         {
1446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           /* The number of data or the fifo threshold is not aligned on halfword
1447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****              => no transfer possible with DMA peripheral access configured as halfword */
1448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
1449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           status = HAL_ERROR;
1450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           /* Process unlocked */
1452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           __HAL_UNLOCK(hqspi);
1453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         }
1454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         else
1455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         {
1456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           hqspi->RxXferCount = (data_size >> 1U);
1457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         }
ARM GAS  /tmp/ccMXllgx.s 			page 27


1458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       }
1459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       else if (hqspi->hdma->Init.PeriphDataAlignment == DMA_PDATAALIGN_WORD)
1460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       {
1461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         if (((data_size % 4U) != 0U) || ((hqspi->Init.FifoThreshold % 4U) != 0U))
1462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         {
1463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           /* The number of data or the fifo threshold is not aligned on word
1464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****              => no transfer possible with DMA peripheral access configured as word */
1465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
1466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           status = HAL_ERROR;
1467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           /* Process unlocked */
1469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           __HAL_UNLOCK(hqspi);
1470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         }
1471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         else
1472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         {
1473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           hqspi->RxXferCount = (data_size >> 2U);
1474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         }
1475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       }
1476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       else
1477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       {
1478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         /* Nothing to do */
1479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       }
1480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       if (status == HAL_OK)
1482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       {
1483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         /* Update state */
1484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_RX;
1485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         /* Clear interrupt */
1487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         __HAL_QSPI_CLEAR_FLAG(hqspi, (QSPI_FLAG_TE | QSPI_FLAG_TC));
1488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         /* Configure size and pointer of the handle */
1490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         hqspi->RxXferSize = hqspi->RxXferCount;
1491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         hqspi->pRxBuffPtr = pData;
1492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         /* Set the QSPI DMA transfer complete callback */
1494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         hqspi->hdma->XferCpltCallback = QSPI_DMARxCplt;
1495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         /* Set the QSPI DMA Half transfer complete callback */
1497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         hqspi->hdma->XferHalfCpltCallback = QSPI_DMARxHalfCplt;
1498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         /* Set the DMA error callback */
1500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         hqspi->hdma->XferErrorCallback = QSPI_DMAError;
1501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         /* Clear the DMA abort callback */
1503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         hqspi->hdma->XferAbortCallback = NULL;
1504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         /* Configure the direction of the DMA */
1506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         hqspi->hdma->Init.Direction = DMA_PERIPH_TO_MEMORY;
1507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         MODIFY_REG(hqspi->hdma->Instance->CR, DMA_SxCR_DIR, hqspi->hdma->Init.Direction);
1508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         /* Enable the DMA Channel */
1510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         if (HAL_DMA_Start_IT(hqspi->hdma, (uint32_t)&hqspi->Instance->DR, (uint32_t)pData, hqspi->R
1511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         {
1512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           /* Configure QSPI: CCR register with functional as indirect read */
1513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_READ);
1514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
ARM GAS  /tmp/ccMXllgx.s 			page 28


1515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           /* Start the transfer by re-writing the address in AR register */
1516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           WRITE_REG(hqspi->Instance->AR, addr_reg);
1517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           /* Process unlocked */
1519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           __HAL_UNLOCK(hqspi);
1520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           
1521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           /* Enable the QSPI transfer error Interrupt */
1522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           __HAL_QSPI_ENABLE_IT(hqspi, QSPI_IT_TE);
1523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           
1524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           /* Enable the DMA transfer by setting the DMAEN bit in the QSPI CR register */
1525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           SET_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
1526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         }
1527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         else
1528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         {
1529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           status = HAL_ERROR;
1530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           hqspi->ErrorCode |= HAL_QSPI_ERROR_DMA;
1531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           hqspi->State = HAL_QSPI_STATE_READY;
1532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           /* Process unlocked */
1534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           __HAL_UNLOCK(hqspi);
1535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         }
1536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       }
1537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     }
1538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     else
1539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     {
1540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
1541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       status = HAL_ERROR;
1542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* Process unlocked */
1544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       __HAL_UNLOCK(hqspi);
1545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     }
1546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
1547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   else
1548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
1549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     status = HAL_BUSY;
1550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     /* Process unlocked */
1552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     __HAL_UNLOCK(hqspi);
1553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
1554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   return status;
1556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** }
1557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** /**
1559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @brief  Configure the QSPI Automatic Polling Mode in blocking mode.
1560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @param  hqspi : QSPI handle
1561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @param  cmd : structure that contains the command configuration information.
1562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @param  cfg : structure that contains the polling configuration information.
1563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @param  Timeout : Timeout duration
1564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @note   This function is used only in Automatic Polling Mode
1565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @retval HAL status
1566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   */
1567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** HAL_StatusTypeDef HAL_QSPI_AutoPolling(QSPI_HandleTypeDef *hqspi, QSPI_CommandTypeDef *cmd, QSPI_Au
1568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** {
1569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   HAL_StatusTypeDef status;
1570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   uint32_t tickstart = HAL_GetTick();
1571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
ARM GAS  /tmp/ccMXllgx.s 			page 29


1572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Check the parameters */
1573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   assert_param(IS_QSPI_INSTRUCTION_MODE(cmd->InstructionMode));
1574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   if (cmd->InstructionMode != QSPI_INSTRUCTION_NONE)
1575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
1576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     assert_param(IS_QSPI_INSTRUCTION(cmd->Instruction));
1577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
1578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   assert_param(IS_QSPI_ADDRESS_MODE(cmd->AddressMode));
1580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   if (cmd->AddressMode != QSPI_ADDRESS_NONE)
1581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
1582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     assert_param(IS_QSPI_ADDRESS_SIZE(cmd->AddressSize));
1583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
1584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   assert_param(IS_QSPI_ALTERNATE_BYTES_MODE(cmd->AlternateByteMode));
1586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
1587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
1588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     assert_param(IS_QSPI_ALTERNATE_BYTES_SIZE(cmd->AlternateBytesSize));
1589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
1590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   assert_param(IS_QSPI_DUMMY_CYCLES(cmd->DummyCycles));
1592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   assert_param(IS_QSPI_DATA_MODE(cmd->DataMode));
1593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   assert_param(IS_QSPI_DDR_MODE(cmd->DdrMode));
1595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   assert_param(IS_QSPI_DDR_HHC(cmd->DdrHoldHalfCycle));
1596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   assert_param(IS_QSPI_SIOO_MODE(cmd->SIOOMode));
1597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   assert_param(IS_QSPI_INTERVAL(cfg->Interval));
1599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   assert_param(IS_QSPI_STATUS_BYTES_SIZE(cfg->StatusBytesSize));
1600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   assert_param(IS_QSPI_MATCH_MODE(cfg->MatchMode));
1601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Process locked */
1603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   __HAL_LOCK(hqspi);
1604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   if(hqspi->State == HAL_QSPI_STATE_READY)
1606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
1607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
1608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     /* Update state */
1610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     hqspi->State = HAL_QSPI_STATE_BUSY_AUTO_POLLING;
1611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     /* Wait till BUSY flag reset */
1613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
1614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     if (status == HAL_OK)
1616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     {
1617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* Configure QSPI: PSMAR register with the status match value */
1618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       WRITE_REG(hqspi->Instance->PSMAR, cfg->Match);
1619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* Configure QSPI: PSMKR register with the status mask value */
1621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       WRITE_REG(hqspi->Instance->PSMKR, cfg->Mask);
1622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* Configure QSPI: PIR register with the interval value */
1624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       WRITE_REG(hqspi->Instance->PIR, cfg->Interval);
1625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* Configure QSPI: CR register with Match mode and Automatic stop enabled
1627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       (otherwise there will be an infinite loop in blocking mode) */
1628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PMM | QUADSPI_CR_APMS),
ARM GAS  /tmp/ccMXllgx.s 			page 30


1629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****                (cfg->MatchMode | QSPI_AUTOMATIC_STOP_ENABLE));
1630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* Call the configuration function */
1632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       cmd->NbData = cfg->StatusBytesSize;
1633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_AUTO_POLLING);
1634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* Wait until SM flag is set to go back in idle state */
1636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_SM, SET, tickstart, Timeout);
1637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       if (status == HAL_OK)
1639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       {
1640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_SM);
1641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         /* Update state */
1643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         hqspi->State = HAL_QSPI_STATE_READY;
1644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       }
1645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     }
1646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
1647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   else
1648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
1649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     status = HAL_BUSY;
1650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
1651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Process unlocked */
1653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   __HAL_UNLOCK(hqspi);
1654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Return function status */
1656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   return status;
1657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** }
1658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** /**
1660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @brief  Configure the QSPI Automatic Polling Mode in non-blocking mode.
1661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @param  hqspi : QSPI handle
1662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @param  cmd : structure that contains the command configuration information.
1663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @param  cfg : structure that contains the polling configuration information.
1664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @note   This function is used only in Automatic Polling Mode
1665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @retval HAL status
1666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   */
1667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** HAL_StatusTypeDef HAL_QSPI_AutoPolling_IT(QSPI_HandleTypeDef *hqspi, QSPI_CommandTypeDef *cmd, QSPI
1668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** {
1669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   HAL_StatusTypeDef status;
1670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   uint32_t tickstart = HAL_GetTick();
1671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Check the parameters */
1673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   assert_param(IS_QSPI_INSTRUCTION_MODE(cmd->InstructionMode));
1674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   if (cmd->InstructionMode != QSPI_INSTRUCTION_NONE)
1675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
1676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     assert_param(IS_QSPI_INSTRUCTION(cmd->Instruction));
1677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
1678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   assert_param(IS_QSPI_ADDRESS_MODE(cmd->AddressMode));
1680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   if (cmd->AddressMode != QSPI_ADDRESS_NONE)
1681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
1682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     assert_param(IS_QSPI_ADDRESS_SIZE(cmd->AddressSize));
1683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
1684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   assert_param(IS_QSPI_ALTERNATE_BYTES_MODE(cmd->AlternateByteMode));
ARM GAS  /tmp/ccMXllgx.s 			page 31


1686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
1687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
1688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     assert_param(IS_QSPI_ALTERNATE_BYTES_SIZE(cmd->AlternateBytesSize));
1689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
1690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   assert_param(IS_QSPI_DUMMY_CYCLES(cmd->DummyCycles));
1692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   assert_param(IS_QSPI_DATA_MODE(cmd->DataMode));
1693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   assert_param(IS_QSPI_DDR_MODE(cmd->DdrMode));
1695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   assert_param(IS_QSPI_DDR_HHC(cmd->DdrHoldHalfCycle));
1696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   assert_param(IS_QSPI_SIOO_MODE(cmd->SIOOMode));
1697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   assert_param(IS_QSPI_INTERVAL(cfg->Interval));
1699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   assert_param(IS_QSPI_STATUS_BYTES_SIZE(cfg->StatusBytesSize));
1700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   assert_param(IS_QSPI_MATCH_MODE(cfg->MatchMode));
1701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   assert_param(IS_QSPI_AUTOMATIC_STOP(cfg->AutomaticStop));
1702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Process locked */
1704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   __HAL_LOCK(hqspi);
1705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   if(hqspi->State == HAL_QSPI_STATE_READY)
1707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
1708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
1709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     /* Update state */
1711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     hqspi->State = HAL_QSPI_STATE_BUSY_AUTO_POLLING;
1712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     /* Wait till BUSY flag reset */
1714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout
1715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     if (status == HAL_OK)
1717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     {
1718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* Configure QSPI: PSMAR register with the status match value */
1719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       WRITE_REG(hqspi->Instance->PSMAR, cfg->Match);
1720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* Configure QSPI: PSMKR register with the status mask value */
1722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       WRITE_REG(hqspi->Instance->PSMKR, cfg->Mask);
1723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* Configure QSPI: PIR register with the interval value */
1725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       WRITE_REG(hqspi->Instance->PIR, cfg->Interval);
1726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* Configure QSPI: CR register with Match mode and Automatic stop mode */
1728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PMM | QUADSPI_CR_APMS),
1729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****                (cfg->MatchMode | cfg->AutomaticStop));
1730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* Clear interrupt */
1732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TE | QSPI_FLAG_SM);
1733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* Call the configuration function */
1735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       cmd->NbData = cfg->StatusBytesSize;
1736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_AUTO_POLLING);
1737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* Process unlocked */
1739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       __HAL_UNLOCK(hqspi);
1740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* Enable the QSPI Transfer Error and status match Interrupt */
1742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       __HAL_QSPI_ENABLE_IT(hqspi, (QSPI_IT_SM | QSPI_IT_TE));
ARM GAS  /tmp/ccMXllgx.s 			page 32


1743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     }
1745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     else
1746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     {
1747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* Process unlocked */
1748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       __HAL_UNLOCK(hqspi);
1749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     }
1750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
1751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   else
1752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
1753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     status = HAL_BUSY;
1754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     /* Process unlocked */
1756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     __HAL_UNLOCK(hqspi);
1757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
1758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Return function status */
1760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   return status;
1761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** }
1762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** /**
1764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @brief  Configure the Memory Mapped mode.
1765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @param  hqspi : QSPI handle
1766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @param  cmd : structure that contains the command configuration information.
1767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @param  cfg : structure that contains the memory mapped configuration information.
1768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @note   This function is used only in Memory mapped Mode
1769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @retval HAL status
1770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   */
1771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** HAL_StatusTypeDef HAL_QSPI_MemoryMapped(QSPI_HandleTypeDef *hqspi, QSPI_CommandTypeDef *cmd, QSPI_M
1772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** {
1773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   HAL_StatusTypeDef status;
1774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   uint32_t tickstart = HAL_GetTick();
1775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Check the parameters */
1777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   assert_param(IS_QSPI_INSTRUCTION_MODE(cmd->InstructionMode));
1778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   if (cmd->InstructionMode != QSPI_INSTRUCTION_NONE)
1779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
1780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   assert_param(IS_QSPI_INSTRUCTION(cmd->Instruction));
1781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
1782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   assert_param(IS_QSPI_ADDRESS_MODE(cmd->AddressMode));
1784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   if (cmd->AddressMode != QSPI_ADDRESS_NONE)
1785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
1786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     assert_param(IS_QSPI_ADDRESS_SIZE(cmd->AddressSize));
1787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
1788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   assert_param(IS_QSPI_ALTERNATE_BYTES_MODE(cmd->AlternateByteMode));
1790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
1791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
1792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     assert_param(IS_QSPI_ALTERNATE_BYTES_SIZE(cmd->AlternateBytesSize));
1793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
1794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   assert_param(IS_QSPI_DUMMY_CYCLES(cmd->DummyCycles));
1796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   assert_param(IS_QSPI_DATA_MODE(cmd->DataMode));
1797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   assert_param(IS_QSPI_DDR_MODE(cmd->DdrMode));
1799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   assert_param(IS_QSPI_DDR_HHC(cmd->DdrHoldHalfCycle));
ARM GAS  /tmp/ccMXllgx.s 			page 33


1800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   assert_param(IS_QSPI_SIOO_MODE(cmd->SIOOMode));
1801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   assert_param(IS_QSPI_TIMEOUT_ACTIVATION(cfg->TimeOutActivation));
1803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Process locked */
1805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   __HAL_LOCK(hqspi);
1806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   if(hqspi->State == HAL_QSPI_STATE_READY)
1808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
1809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
1810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     /* Update state */
1812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     hqspi->State = HAL_QSPI_STATE_BUSY_MEM_MAPPED;
1813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     /* Wait till BUSY flag reset */
1815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout
1816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     if (status == HAL_OK)
1818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     {
1819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* Configure QSPI: CR register with timeout counter enable */
1820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_TCEN, cfg->TimeOutActivation);
1821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     if (cfg->TimeOutActivation == QSPI_TIMEOUT_COUNTER_ENABLE)
1823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       {
1824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         assert_param(IS_QSPI_TIMEOUT_PERIOD(cfg->TimeOutPeriod));
1825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         /* Configure QSPI: LPTR register with the low-power timeout value */
1827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         WRITE_REG(hqspi->Instance->LPTR, cfg->TimeOutPeriod);
1828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         /* Clear interrupt */
1830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TO);
1831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         /* Enable the QSPI TimeOut Interrupt */
1833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         __HAL_QSPI_ENABLE_IT(hqspi, QSPI_IT_TO);
1834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       }
1835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* Call the configuration function */
1837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED);
1838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     }
1839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
1840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   else
1841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
1842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     status = HAL_BUSY;
1843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
1844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Process unlocked */
1846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   __HAL_UNLOCK(hqspi);
1847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Return function status */
1849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   return status;
1850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** }
1851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** /**
1853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @brief  Transfer Error callback.
1854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @param  hqspi : QSPI handle
1855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @retval None
1856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   */
ARM GAS  /tmp/ccMXllgx.s 			page 34


1857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** __weak void HAL_QSPI_ErrorCallback(QSPI_HandleTypeDef *hqspi)
1858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** {
1859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Prevent unused argument(s) compilation warning */
1860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   UNUSED(hqspi);
1861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****             the HAL_QSPI_ErrorCallback could be implemented in the user file
1864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****    */
1865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** }
1866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** /**
1868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @brief  Abort completed callback.
1869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @param  hqspi : QSPI handle
1870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @retval None
1871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   */
1872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** __weak void HAL_QSPI_AbortCpltCallback(QSPI_HandleTypeDef *hqspi)
1873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** {
1874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Prevent unused argument(s) compilation warning */
1875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   UNUSED(hqspi);
1876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* NOTE: This function should not be modified, when the callback is needed,
1878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****            the HAL_QSPI_AbortCpltCallback could be implemented in the user file
1879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****    */
1880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** }
1881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** /**
1883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @brief  Command completed callback.
1884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @param  hqspi : QSPI handle
1885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @retval None
1886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   */
1887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** __weak void HAL_QSPI_CmdCpltCallback(QSPI_HandleTypeDef *hqspi)
1888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** {
1889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Prevent unused argument(s) compilation warning */
1890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   UNUSED(hqspi);
1891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* NOTE: This function should not be modified, when the callback is needed,
1893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****            the HAL_QSPI_CmdCpltCallback could be implemented in the user file
1894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****    */
1895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** }
1896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** /**
1898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @brief  Rx Transfer completed callback.
1899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @param  hqspi : QSPI handle
1900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @retval None
1901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   */
1902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** __weak void HAL_QSPI_RxCpltCallback(QSPI_HandleTypeDef *hqspi)
1903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** {
1904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Prevent unused argument(s) compilation warning */
1905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   UNUSED(hqspi);
1906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* NOTE: This function should not be modified, when the callback is needed,
1908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****            the HAL_QSPI_RxCpltCallback could be implemented in the user file
1909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****    */
1910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** }
1911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** /**
1913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @brief  Tx Transfer completed callback.
ARM GAS  /tmp/ccMXllgx.s 			page 35


1914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @param  hqspi : QSPI handle
1915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @retval None
1916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   */
1917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** __weak void HAL_QSPI_TxCpltCallback(QSPI_HandleTypeDef *hqspi)
1918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** {
1919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Prevent unused argument(s) compilation warning */
1920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   UNUSED(hqspi);
1921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* NOTE: This function should not be modified, when the callback is needed,
1923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****            the HAL_QSPI_TxCpltCallback could be implemented in the user file
1924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****    */
1925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** }
1926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** /**
1928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @brief  Rx Half Transfer completed callback.
1929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @param  hqspi : QSPI handle
1930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @retval None
1931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   */
1932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** __weak void HAL_QSPI_RxHalfCpltCallback(QSPI_HandleTypeDef *hqspi)
1933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** {
1934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Prevent unused argument(s) compilation warning */
1935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   UNUSED(hqspi);
1936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* NOTE: This function should not be modified, when the callback is needed,
1938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****            the HAL_QSPI_RxHalfCpltCallback could be implemented in the user file
1939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****    */
1940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** }
1941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** /**
1943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @brief  Tx Half Transfer completed callback.
1944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @param  hqspi : QSPI handle
1945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @retval None
1946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   */
1947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** __weak void HAL_QSPI_TxHalfCpltCallback(QSPI_HandleTypeDef *hqspi)
1948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** {
1949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Prevent unused argument(s) compilation warning */
1950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   UNUSED(hqspi);
1951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* NOTE: This function should not be modified, when the callback is needed,
1953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****            the HAL_QSPI_TxHalfCpltCallback could be implemented in the user file
1954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****    */
1955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** }
1956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** /**
1958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @brief  FIFO Threshold callback.
1959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @param  hqspi : QSPI handle
1960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @retval None
1961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   */
1962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** __weak void HAL_QSPI_FifoThresholdCallback(QSPI_HandleTypeDef *hqspi)
1963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** {
1964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Prevent unused argument(s) compilation warning */
1965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   UNUSED(hqspi);
1966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****             the HAL_QSPI_FIFOThresholdCallback could be implemented in the user file
1969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****    */
1970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** }
ARM GAS  /tmp/ccMXllgx.s 			page 36


1971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** /**
1973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @brief  Status Match callback.
1974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @param  hqspi : QSPI handle
1975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @retval None
1976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   */
1977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** __weak void HAL_QSPI_StatusMatchCallback(QSPI_HandleTypeDef *hqspi)
1978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** {
1979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Prevent unused argument(s) compilation warning */
1980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   UNUSED(hqspi);
1981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****             the HAL_QSPI_StatusMatchCallback could be implemented in the user file
1984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****    */
1985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** }
1986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** /**
1988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @brief  Timeout callback.
1989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @param  hqspi : QSPI handle
1990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @retval None
1991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   */
1992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** __weak void HAL_QSPI_TimeOutCallback(QSPI_HandleTypeDef *hqspi)
1993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** {
1994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Prevent unused argument(s) compilation warning */
1995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   UNUSED(hqspi);
1996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
1997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****             the HAL_QSPI_TimeOutCallback could be implemented in the user file
1999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****    */
2000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** }
2001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #if (USE_HAL_QSPI_REGISTER_CALLBACKS == 1)
2002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** /**
2003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @brief  Register a User QSPI Callback
2004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   *         To be used instead of the weak (surcharged) predefined callback
2005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @param hqspi : QSPI handle
2006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @param CallbackId : ID of the callback to be registered
2007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   *        This parameter can be one of the following values:
2008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   *          @arg @ref HAL_QSPI_ERROR_CB_ID          QSPI Error Callback ID
2009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   *          @arg @ref HAL_QSPI_ABORT_CB_ID          QSPI Abort Callback ID
2010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   *          @arg @ref HAL_QSPI_FIFO_THRESHOLD_CB_ID QSPI FIFO Threshold Callback ID
2011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   *          @arg @ref HAL_QSPI_CMD_CPLT_CB_ID       QSPI Command Complete Callback ID
2012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   *          @arg @ref HAL_QSPI_RX_CPLT_CB_ID        QSPI Rx Complete Callback ID
2013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   *          @arg @ref HAL_QSPI_TX_CPLT_CB_ID        QSPI Tx Complete Callback ID
2014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   *          @arg @ref HAL_QSPI_RX_HALF_CPLT_CB_ID   QSPI Rx Half Complete Callback ID
2015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   *          @arg @ref HAL_QSPI_TX_HALF_CPLT_CB_ID   QSPI Tx Half Complete Callback ID
2016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   *          @arg @ref HAL_QSPI_STATUS_MATCH_CB_ID   QSPI Status Match Callback ID
2017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   *          @arg @ref HAL_QSPI_TIMEOUT_CB_ID        QSPI Timeout Callback ID
2018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   *          @arg @ref HAL_QSPI_MSP_INIT_CB_ID       QSPI MspInit callback ID
2019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   *          @arg @ref HAL_QSPI_MSP_DEINIT_CB_ID     QSPI MspDeInit callback ID
2020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @param pCallback : pointer to the Callback function
2021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @retval status
2022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   */
2023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** HAL_StatusTypeDef HAL_QSPI_RegisterCallback (QSPI_HandleTypeDef *hqspi, HAL_QSPI_CallbackIDTypeDef 
2024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** {
2025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   HAL_StatusTypeDef status = HAL_OK;
2026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
2027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   if(pCallback == NULL)
ARM GAS  /tmp/ccMXllgx.s 			page 37


2028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
2029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     /* Update the error code */
2030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_CALLBACK;
2031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     return HAL_ERROR;
2032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
2033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
2034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Process locked */
2035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   __HAL_LOCK(hqspi);
2036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
2037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   if(hqspi->State == HAL_QSPI_STATE_READY)
2038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
2039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     switch (CallbackId)
2040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     {
2041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     case  HAL_QSPI_ERROR_CB_ID :
2042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       hqspi->ErrorCallback = pCallback;
2043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       break;
2044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     case HAL_QSPI_ABORT_CB_ID :
2045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       hqspi->AbortCpltCallback = pCallback;
2046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       break;
2047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     case HAL_QSPI_FIFO_THRESHOLD_CB_ID :
2048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       hqspi->FifoThresholdCallback = pCallback;
2049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       break;
2050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     case HAL_QSPI_CMD_CPLT_CB_ID :
2051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       hqspi->CmdCpltCallback = pCallback;
2052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       break;
2053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     case HAL_QSPI_RX_CPLT_CB_ID :
2054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       hqspi->RxCpltCallback = pCallback;
2055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       break;
2056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     case HAL_QSPI_TX_CPLT_CB_ID :
2057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       hqspi->TxCpltCallback = pCallback;
2058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       break;
2059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     case HAL_QSPI_RX_HALF_CPLT_CB_ID :
2060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       hqspi->RxHalfCpltCallback = pCallback;
2061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       break;
2062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     case HAL_QSPI_TX_HALF_CPLT_CB_ID :
2063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       hqspi->TxHalfCpltCallback = pCallback;
2064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       break;
2065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     case HAL_QSPI_STATUS_MATCH_CB_ID :
2066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       hqspi->StatusMatchCallback = pCallback;
2067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       break;
2068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     case HAL_QSPI_TIMEOUT_CB_ID :
2069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       hqspi->TimeOutCallback = pCallback;
2070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       break;
2071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     case HAL_QSPI_MSP_INIT_CB_ID :
2072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       hqspi->MspInitCallback = pCallback;
2073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       break;
2074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     case HAL_QSPI_MSP_DEINIT_CB_ID :
2075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       hqspi->MspDeInitCallback = pCallback;
2076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       break;
2077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     default :
2078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* Update the error code */
2079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_CALLBACK;
2080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* update return status */
2081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       status =  HAL_ERROR;
2082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       break;
2083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     }
2084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
ARM GAS  /tmp/ccMXllgx.s 			page 38


2085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   else if (hqspi->State == HAL_QSPI_STATE_RESET)
2086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
2087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     switch (CallbackId)
2088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     {
2089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     case HAL_QSPI_MSP_INIT_CB_ID :
2090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       hqspi->MspInitCallback = pCallback;
2091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       break;
2092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     case HAL_QSPI_MSP_DEINIT_CB_ID :
2093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       hqspi->MspDeInitCallback = pCallback;
2094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       break;
2095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     default :
2096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* Update the error code */
2097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_CALLBACK;
2098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* update return status */
2099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       status =  HAL_ERROR;
2100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       break;
2101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     }
2102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
2103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   else
2104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
2105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     /* Update the error code */
2106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_CALLBACK;
2107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     /* update return status */
2108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     status =  HAL_ERROR;
2109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
2110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
2111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Release Lock */
2112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   __HAL_UNLOCK(hqspi);
2113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   return status;
2114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** }
2115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
2116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** /**
2117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @brief  Unregister a User QSPI Callback
2118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   *         QSPI Callback is redirected to the weak (surcharged) predefined callback
2119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @param hqspi : QSPI handle
2120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @param CallbackId : ID of the callback to be unregistered
2121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   *        This parameter can be one of the following values:
2122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   *          @arg @ref HAL_QSPI_ERROR_CB_ID          QSPI Error Callback ID
2123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   *          @arg @ref HAL_QSPI_ABORT_CB_ID          QSPI Abort Callback ID
2124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   *          @arg @ref HAL_QSPI_FIFO_THRESHOLD_CB_ID QSPI FIFO Threshold Callback ID
2125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   *          @arg @ref HAL_QSPI_CMD_CPLT_CB_ID       QSPI Command Complete Callback ID
2126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   *          @arg @ref HAL_QSPI_RX_CPLT_CB_ID        QSPI Rx Complete Callback ID
2127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   *          @arg @ref HAL_QSPI_TX_CPLT_CB_ID        QSPI Tx Complete Callback ID
2128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   *          @arg @ref HAL_QSPI_RX_HALF_CPLT_CB_ID   QSPI Rx Half Complete Callback ID
2129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   *          @arg @ref HAL_QSPI_TX_HALF_CPLT_CB_ID   QSPI Tx Half Complete Callback ID
2130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   *          @arg @ref HAL_QSPI_STATUS_MATCH_CB_ID   QSPI Status Match Callback ID
2131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   *          @arg @ref HAL_QSPI_TIMEOUT_CB_ID        QSPI Timeout Callback ID
2132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   *          @arg @ref HAL_QSPI_MSP_INIT_CB_ID       QSPI MspInit callback ID
2133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   *          @arg @ref HAL_QSPI_MSP_DEINIT_CB_ID     QSPI MspDeInit callback ID
2134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @retval status
2135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   */
2136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** HAL_StatusTypeDef HAL_QSPI_UnRegisterCallback (QSPI_HandleTypeDef *hqspi, HAL_QSPI_CallbackIDTypeDe
2137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** {
2138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   HAL_StatusTypeDef status = HAL_OK;
2139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
2140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Process locked */
2141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   __HAL_LOCK(hqspi);
ARM GAS  /tmp/ccMXllgx.s 			page 39


2142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
2143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   if(hqspi->State == HAL_QSPI_STATE_READY)
2144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
2145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     switch (CallbackId)
2146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     {
2147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     case  HAL_QSPI_ERROR_CB_ID :
2148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       hqspi->ErrorCallback = HAL_QSPI_ErrorCallback;
2149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       break;
2150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     case HAL_QSPI_ABORT_CB_ID :
2151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       hqspi->AbortCpltCallback = HAL_QSPI_AbortCpltCallback;
2152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       break;
2153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     case HAL_QSPI_FIFO_THRESHOLD_CB_ID :
2154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       hqspi->FifoThresholdCallback = HAL_QSPI_FifoThresholdCallback;
2155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       break;
2156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     case HAL_QSPI_CMD_CPLT_CB_ID :
2157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       hqspi->CmdCpltCallback = HAL_QSPI_CmdCpltCallback;
2158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       break;
2159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     case HAL_QSPI_RX_CPLT_CB_ID :
2160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       hqspi->RxCpltCallback = HAL_QSPI_RxCpltCallback;
2161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       break;
2162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     case HAL_QSPI_TX_CPLT_CB_ID :
2163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       hqspi->TxCpltCallback = HAL_QSPI_TxCpltCallback;
2164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       break;
2165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     case HAL_QSPI_RX_HALF_CPLT_CB_ID :
2166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       hqspi->RxHalfCpltCallback = HAL_QSPI_RxHalfCpltCallback;
2167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       break;
2168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     case HAL_QSPI_TX_HALF_CPLT_CB_ID :
2169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       hqspi->TxHalfCpltCallback = HAL_QSPI_TxHalfCpltCallback;
2170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       break;
2171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     case HAL_QSPI_STATUS_MATCH_CB_ID :
2172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       hqspi->StatusMatchCallback = HAL_QSPI_StatusMatchCallback;
2173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       break;
2174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     case HAL_QSPI_TIMEOUT_CB_ID :
2175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       hqspi->TimeOutCallback = HAL_QSPI_TimeOutCallback;
2176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       break;
2177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     case HAL_QSPI_MSP_INIT_CB_ID :
2178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       hqspi->MspInitCallback = HAL_QSPI_MspInit;
2179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       break;
2180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     case HAL_QSPI_MSP_DEINIT_CB_ID :
2181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       hqspi->MspDeInitCallback = HAL_QSPI_MspDeInit;
2182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       break;
2183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     default :
2184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* Update the error code */
2185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_CALLBACK;
2186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* update return status */
2187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       status =  HAL_ERROR;
2188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       break;
2189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     }
2190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
2191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   else if (hqspi->State == HAL_QSPI_STATE_RESET)
2192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
2193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     switch (CallbackId)
2194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     {
2195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     case HAL_QSPI_MSP_INIT_CB_ID :
2196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       hqspi->MspInitCallback = HAL_QSPI_MspInit;
2197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       break;
2198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     case HAL_QSPI_MSP_DEINIT_CB_ID :
ARM GAS  /tmp/ccMXllgx.s 			page 40


2199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       hqspi->MspDeInitCallback = HAL_QSPI_MspDeInit;
2200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       break;
2201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     default :
2202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* Update the error code */
2203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_CALLBACK;
2204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* update return status */
2205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       status =  HAL_ERROR;
2206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       break;
2207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     }
2208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
2209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   else
2210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
2211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     /* Update the error code */
2212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_CALLBACK;
2213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     /* update return status */
2214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     status =  HAL_ERROR;
2215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
2216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
2217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Release Lock */
2218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   __HAL_UNLOCK(hqspi);
2219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   return status;
2220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** }
2221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #endif
2222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
2223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** /**
2224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @}
2225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   */
2226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
2227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** /** @defgroup QSPI_Exported_Functions_Group3 Peripheral Control and State functions
2228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   *  @brief   QSPI control and State functions
2229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   *
2230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** @verbatim
2231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****  ===============================================================================
2232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****                   ##### Peripheral Control and State functions #####
2233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****  ===============================================================================
2234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     [..]
2235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     This subsection provides a set of functions allowing to :
2236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       (+) Check in run-time the state of the driver.
2237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       (+) Check the error code set during last operation.
2238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       (+) Abort any operation.
2239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
2240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
2241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** @endverbatim
2242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @{
2243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   */
2244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
2245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** /**
2246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @brief  Return the QSPI handle state.
2247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @param  hqspi : QSPI handle
2248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @retval HAL state
2249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   */
2250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** HAL_QSPI_StateTypeDef HAL_QSPI_GetState(QSPI_HandleTypeDef *hqspi)
2251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** {
2252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Return QSPI handle state */
2253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   return hqspi->State;
2254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** }
2255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
ARM GAS  /tmp/ccMXllgx.s 			page 41


2256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** /**
2257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** * @brief  Return the QSPI error code.
2258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** * @param  hqspi : QSPI handle
2259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** * @retval QSPI Error Code
2260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** */
2261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** uint32_t HAL_QSPI_GetError(QSPI_HandleTypeDef *hqspi)
2262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** {
2263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   return hqspi->ErrorCode;
2264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** }
2265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
2266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** /**
2267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** * @brief  Abort the current transmission.
2268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** * @param  hqspi : QSPI handle
2269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** * @retval HAL status
2270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** */
2271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** HAL_StatusTypeDef HAL_QSPI_Abort(QSPI_HandleTypeDef *hqspi)
2272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** {
2273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   HAL_StatusTypeDef status = HAL_OK;
2274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   uint32_t tickstart = HAL_GetTick();
2275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
2276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Check if the state is in one of the busy states */
2277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   if (((uint32_t)hqspi->State & 0x2U) != 0U)
2278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
2279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     /* Process unlocked */
2280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     __HAL_UNLOCK(hqspi);
2281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
2282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     if ((hqspi->Instance->CR & QUADSPI_CR_DMAEN) != 0U)
2283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     {
2284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* Disable the DMA transfer by clearing the DMAEN bit in the QSPI CR register */
2285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
2286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
2287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* Abort DMA channel */
2288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       status = HAL_DMA_Abort(hqspi->hdma);
2289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       if(status != HAL_OK)
2290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       {
2291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         hqspi->ErrorCode |= HAL_QSPI_ERROR_DMA;
2292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       }
2293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     }
2294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
2295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     /* Configure QSPI: CR register with Abort request */
2296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     SET_BIT(hqspi->Instance->CR, QUADSPI_CR_ABORT);
2297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
2298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     /* Wait until TC flag is set to go back in idle state */
2299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, hqspi->Timeout);
2300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
2301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     if (status == HAL_OK)
2302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     {
2303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
2304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
2305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* Wait until BUSY flag is reset */
2306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeo
2307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     }
2308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
2309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     if (status == HAL_OK)
2310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     {
2311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* Reset functional mode configuration to indirect write mode by default */
2312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       CLEAR_BIT(hqspi->Instance->CCR, QUADSPI_CCR_FMODE);
ARM GAS  /tmp/ccMXllgx.s 			page 42


2313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
2314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* Update state */
2315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       hqspi->State = HAL_QSPI_STATE_READY;
2316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     }
2317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
2318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
2319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   return status;
2320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** }
2321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
2322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** /**
2323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** * @brief  Abort the current transmission (non-blocking function)
2324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** * @param  hqspi : QSPI handle
2325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** * @retval HAL status
2326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** */
2327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** HAL_StatusTypeDef HAL_QSPI_Abort_IT(QSPI_HandleTypeDef *hqspi)
2328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** {
2329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   HAL_StatusTypeDef status = HAL_OK;
2330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
2331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Check if the state is in one of the busy states */
2332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   if (((uint32_t)hqspi->State & 0x2U) != 0U)
2333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
2334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     /* Process unlocked */
2335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     __HAL_UNLOCK(hqspi);
2336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
2337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     /* Update QSPI state */
2338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     hqspi->State = HAL_QSPI_STATE_ABORT;
2339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
2340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     /* Disable all interrupts */
2341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     __HAL_QSPI_DISABLE_IT(hqspi, (QSPI_IT_TO | QSPI_IT_SM | QSPI_IT_FT | QSPI_IT_TC | QSPI_IT_TE));
2342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
2343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     if ((hqspi->Instance->CR & QUADSPI_CR_DMAEN) != 0U)
2344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     {
2345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* Disable the DMA transfer by clearing the DMAEN bit in the QSPI CR register */
2346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
2347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
2348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* Abort DMA channel */
2349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       hqspi->hdma->XferAbortCallback = QSPI_DMAAbortCplt;
2350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       if (HAL_DMA_Abort_IT(hqspi->hdma) != HAL_OK)
2351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       {
2352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         /* Change state of QSPI */
2353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         hqspi->State = HAL_QSPI_STATE_READY;
2354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         
2355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         /* Abort Complete callback */
2356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #if (USE_HAL_QSPI_REGISTER_CALLBACKS == 1)
2357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         hqspi->AbortCpltCallback(hqspi);
2358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #else
2359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         HAL_QSPI_AbortCpltCallback(hqspi);
2360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #endif
2361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       }
2362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     }
2363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     else
2364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     {
2365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* Clear interrupt */
2366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
2367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
2368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* Enable the QSPI Transfer Complete Interrupt */
2369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       __HAL_QSPI_ENABLE_IT(hqspi, QSPI_IT_TC);
ARM GAS  /tmp/ccMXllgx.s 			page 43


2370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
2371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* Configure QSPI: CR register with Abort request */
2372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       SET_BIT(hqspi->Instance->CR, QUADSPI_CR_ABORT);
2373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     }
2374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
2375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   return status;
2376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** }
2377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
2378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** /** @brief Set QSPI timeout.
2379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @param  hqspi : QSPI handle.
2380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @param  Timeout : Timeout for the QSPI memory access.
2381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @retval None
2382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   */
2383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** void HAL_QSPI_SetTimeout(QSPI_HandleTypeDef *hqspi, uint32_t Timeout)
2384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** {
2385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   hqspi->Timeout = Timeout;
2386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** }
2387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
2388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** /** @brief Set QSPI Fifo threshold.
2389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @param  hqspi : QSPI handle.
2390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @param  Threshold : Threshold of the Fifo (value between 1 and 16).
2391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @retval HAL status
2392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   */
2393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** HAL_StatusTypeDef HAL_QSPI_SetFifoThreshold(QSPI_HandleTypeDef *hqspi, uint32_t Threshold)
2394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** {
2395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   HAL_StatusTypeDef status = HAL_OK;
2396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
2397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Process locked */
2398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   __HAL_LOCK(hqspi);
2399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
2400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   if(hqspi->State == HAL_QSPI_STATE_READY)
2401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
2402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     /* Synchronize init structure with new FIFO threshold value */
2403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     hqspi->Init.FifoThreshold = Threshold;
2404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
2405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     /* Configure QSPI FIFO Threshold */
2406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_FTHRES,
2407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****                ((hqspi->Init.FifoThreshold - 1U) << QUADSPI_CR_FTHRES_Pos));
2408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
2409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   else
2410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
2411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     status = HAL_BUSY;
2412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
2413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
2414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Process unlocked */
2415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   __HAL_UNLOCK(hqspi);
2416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
2417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Return function status */
2418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   return status;
2419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** }
2420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
2421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** /** @brief Get QSPI Fifo threshold.
2422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @param  hqspi : QSPI handle.
2423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @retval Fifo threshold (value between 1 and 16)
2424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   */
2425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** uint32_t HAL_QSPI_GetFifoThreshold(QSPI_HandleTypeDef *hqspi)
2426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** {
ARM GAS  /tmp/ccMXllgx.s 			page 44


2427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   return ((READ_BIT(hqspi->Instance->CR, QUADSPI_CR_FTHRES) >> QUADSPI_CR_FTHRES_Pos) + 1U);
2428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** }
2429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
2430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** /** @brief  Set FlashID.
2431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @param  hqspi : QSPI handle.
2432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @param  FlashID : Index of the flash memory to be accessed.
2433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   *                   This parameter can be a value of @ref QSPI_Flash_Select.
2434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @note   The FlashID is ignored when dual flash mode is enabled.
2435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @retval HAL status
2436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   */
2437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** HAL_StatusTypeDef HAL_QSPI_SetFlashID(QSPI_HandleTypeDef *hqspi, uint32_t FlashID)
2438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** {
2439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   HAL_StatusTypeDef status = HAL_OK;
2440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
2441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Check the parameter */
2442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   assert_param(IS_QSPI_FLASH_ID(FlashID));
2443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
2444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Process locked */
2445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   __HAL_LOCK(hqspi);
2446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
2447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   if(hqspi->State == HAL_QSPI_STATE_READY)
2448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
2449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     /* Synchronize init structure with new FlashID value */
2450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     hqspi->Init.FlashID = FlashID;
2451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
2452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     /* Configure QSPI FlashID */
2453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_FSEL, FlashID);
2454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
2455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   else
2456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
2457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     status = HAL_BUSY;
2458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
2459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
2460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Process unlocked */
2461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   __HAL_UNLOCK(hqspi);
2462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
2463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Return function status */
2464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   return status;
2465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** }
2466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
2467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** /**
2468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @}
2469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   */
2470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
2471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** /**
2472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @}
2473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   */
2474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
2475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** /** @defgroup QSPI_Private_Functions QSPI Private Functions
2476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @{
2477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   */
2478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
2479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** /**
2480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @brief  DMA QSPI receive process complete callback.
2481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @param  hdma : DMA handle
2482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @retval None
2483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   */
ARM GAS  /tmp/ccMXllgx.s 			page 45


2484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** static void QSPI_DMARxCplt(DMA_HandleTypeDef *hdma)
2485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** {
  27              		.loc 1 2485 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
2486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   QSPI_HandleTypeDef* hqspi = (QSPI_HandleTypeDef*)(hdma->Parent);
  33              		.loc 1 2486 0
  34 0000 836B     		ldr	r3, [r0, #56]
  35              	.LVL1:
2487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   hqspi->RxXferCount = 0U;
  36              		.loc 1 2487 0
  37 0002 0022     		movs	r2, #0
  38 0004 9A63     		str	r2, [r3, #56]
2488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
2489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Enable the QSPI transfer complete Interrupt */
2490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   __HAL_QSPI_ENABLE_IT(hqspi, QSPI_IT_TC);
  39              		.loc 1 2490 0
  40 0006 1A68     		ldr	r2, [r3]
  41 0008 1368     		ldr	r3, [r2]
  42              	.LVL2:
  43 000a 43F40033 		orr	r3, r3, #131072
  44 000e 1360     		str	r3, [r2]
2491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** }
  45              		.loc 1 2491 0
  46 0010 7047     		bx	lr
  47              		.cfi_endproc
  48              	.LFE175:
  50              		.section	.text.QSPI_DMATxCplt,"ax",%progbits
  51              		.align	1
  52              		.syntax unified
  53              		.thumb
  54              		.thumb_func
  55              		.fpu fpv5-sp-d16
  57              	QSPI_DMATxCplt:
  58              	.LFB176:
2492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
2493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** /**
2494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @brief  DMA QSPI transmit process complete callback.
2495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @param  hdma : DMA handle
2496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @retval None
2497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   */
2498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** static void QSPI_DMATxCplt(DMA_HandleTypeDef *hdma)
2499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** {
  59              		.loc 1 2499 0
  60              		.cfi_startproc
  61              		@ args = 0, pretend = 0, frame = 0
  62              		@ frame_needed = 0, uses_anonymous_args = 0
  63              		@ link register save eliminated.
  64              	.LVL3:
2500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   QSPI_HandleTypeDef* hqspi = (QSPI_HandleTypeDef*)(hdma->Parent);
  65              		.loc 1 2500 0
  66 0000 836B     		ldr	r3, [r0, #56]
  67              	.LVL4:
2501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   hqspi->TxXferCount = 0U;
ARM GAS  /tmp/ccMXllgx.s 			page 46


  68              		.loc 1 2501 0
  69 0002 0022     		movs	r2, #0
  70 0004 DA62     		str	r2, [r3, #44]
2502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
2503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Enable the QSPI transfer complete Interrupt */
2504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   __HAL_QSPI_ENABLE_IT(hqspi, QSPI_IT_TC);
  71              		.loc 1 2504 0
  72 0006 1A68     		ldr	r2, [r3]
  73 0008 1368     		ldr	r3, [r2]
  74              	.LVL5:
  75 000a 43F40033 		orr	r3, r3, #131072
  76 000e 1360     		str	r3, [r2]
2505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** }
  77              		.loc 1 2505 0
  78 0010 7047     		bx	lr
  79              		.cfi_endproc
  80              	.LFE176:
  82              		.section	.text.QSPI_Config,"ax",%progbits
  83              		.align	1
  84              		.syntax unified
  85              		.thumb
  86              		.thumb_func
  87              		.fpu fpv5-sp-d16
  89              	QSPI_Config:
  90              	.LFB182:
2506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
2507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** /**
2508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @brief  DMA QSPI receive process half complete callback.
2509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @param  hdma : DMA handle
2510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @retval None
2511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   */
2512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** static void QSPI_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
2513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** {
2514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   QSPI_HandleTypeDef* hqspi = (QSPI_HandleTypeDef*)(hdma->Parent);
2515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
2516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #if (USE_HAL_QSPI_REGISTER_CALLBACKS == 1)
2517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   hqspi->RxHalfCpltCallback(hqspi);
2518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #else
2519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   HAL_QSPI_RxHalfCpltCallback(hqspi);
2520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #endif
2521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** }
2522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
2523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** /**
2524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @brief  DMA QSPI transmit process half complete callback.
2525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @param  hdma : DMA handle
2526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @retval None
2527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   */
2528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** static void QSPI_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
2529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** {
2530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   QSPI_HandleTypeDef* hqspi = (QSPI_HandleTypeDef*)(hdma->Parent);
2531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
2532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #if (USE_HAL_QSPI_REGISTER_CALLBACKS == 1)
2533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   hqspi->TxHalfCpltCallback(hqspi);
2534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #else
2535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   HAL_QSPI_TxHalfCpltCallback(hqspi);
2536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #endif
2537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** }
ARM GAS  /tmp/ccMXllgx.s 			page 47


2538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
2539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** /**
2540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @brief  DMA QSPI communication error callback.
2541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @param  hdma : DMA handle
2542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @retval None
2543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   */
2544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** static void QSPI_DMAError(DMA_HandleTypeDef *hdma)
2545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** {
2546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   QSPI_HandleTypeDef* hqspi = ( QSPI_HandleTypeDef* )(hdma->Parent);
2547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
2548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* if DMA error is FIFO error ignore it */
2549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   if(HAL_DMA_GetError(hdma) != HAL_DMA_ERROR_FE)
2550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
2551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   hqspi->RxXferCount = 0U;
2552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   hqspi->TxXferCount = 0U;
2553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   hqspi->ErrorCode   |= HAL_QSPI_ERROR_DMA;
2554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
2555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Disable the DMA transfer by clearing the DMAEN bit in the QSPI CR register */
2556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
2557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
2558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Abort the QSPI */
2559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   (void)HAL_QSPI_Abort_IT(hqspi);
2560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
2561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
2562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** }
2563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
2564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** /**
2565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @brief  DMA QSPI abort complete callback.
2566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @param  hdma : DMA handle
2567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @retval None
2568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   */
2569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** static void QSPI_DMAAbortCplt(DMA_HandleTypeDef *hdma)
2570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** {
2571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   QSPI_HandleTypeDef* hqspi = ( QSPI_HandleTypeDef* )(hdma->Parent);
2572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
2573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   hqspi->RxXferCount = 0U;
2574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   hqspi->TxXferCount = 0U;
2575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
2576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   if(hqspi->State == HAL_QSPI_STATE_ABORT)
2577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
2578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     /* DMA Abort called by QSPI abort */
2579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     /* Clear interrupt */
2580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
2581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
2582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     /* Enable the QSPI Transfer Complete Interrupt */
2583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     __HAL_QSPI_ENABLE_IT(hqspi, QSPI_IT_TC);
2584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
2585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     /* Configure QSPI: CR register with Abort request */
2586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     SET_BIT(hqspi->Instance->CR, QUADSPI_CR_ABORT);
2587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
2588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   else
2589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
2590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     /* DMA Abort called due to a transfer error interrupt */
2591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     /* Change state of QSPI */
2592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     hqspi->State = HAL_QSPI_STATE_READY;
2593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
2594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     /* Error callback */
ARM GAS  /tmp/ccMXllgx.s 			page 48


2595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #if (USE_HAL_QSPI_REGISTER_CALLBACKS == 1)
2596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     hqspi->ErrorCallback(hqspi);
2597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #else
2598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     HAL_QSPI_ErrorCallback(hqspi);
2599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #endif
2600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
2601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** }
2602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
2603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** /**
2604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @brief  Wait for a flag state until timeout.
2605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @param  hqspi : QSPI handle
2606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @param  Flag : Flag checked
2607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @param  State : Value of the flag expected
2608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @param  Tickstart : Tick start value
2609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @param  Timeout : Duration of the timeout
2610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @retval HAL status
2611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   */
2612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** static HAL_StatusTypeDef QSPI_WaitFlagStateUntilTimeout(QSPI_HandleTypeDef *hqspi, uint32_t Flag,
2613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****                                                         FlagStatus State, uint32_t Tickstart, uint3
2614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** {
2615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Wait until flag is in expected state */
2616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   while((__HAL_QSPI_GET_FLAG(hqspi, Flag)) != State)
2617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
2618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     /* Check for the Timeout */
2619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     if (Timeout != HAL_MAX_DELAY)
2620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     {
2621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       if(((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
2622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       {
2623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         hqspi->State     = HAL_QSPI_STATE_ERROR;
2624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         hqspi->ErrorCode |= HAL_QSPI_ERROR_TIMEOUT;
2625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
2626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         return HAL_ERROR;
2627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       }
2628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     }
2629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
2630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   return HAL_OK;
2631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** }
2632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
2633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** /**
2634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @brief  Configure the communication registers.
2635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @param  hqspi : QSPI handle
2636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @param  cmd : structure that contains the command configuration information
2637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @param  FunctionalMode : functional mode to configured
2638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   *           This parameter can be one of the following values:
2639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   *            @arg QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE: Indirect write mode
2640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   *            @arg QSPI_FUNCTIONAL_MODE_INDIRECT_READ: Indirect read mode
2641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   *            @arg QSPI_FUNCTIONAL_MODE_AUTO_POLLING: Automatic polling mode
2642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   *            @arg QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED: Memory-mapped mode
2643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   * @retval None
2644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   */
2645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** static void QSPI_Config(QSPI_HandleTypeDef *hqspi, QSPI_CommandTypeDef *cmd, uint32_t FunctionalMod
2646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** {
  91              		.loc 1 2646 0
  92              		.cfi_startproc
  93              		@ args = 0, pretend = 0, frame = 0
  94              		@ frame_needed = 0, uses_anonymous_args = 0
  95              		@ link register save eliminated.
ARM GAS  /tmp/ccMXllgx.s 			page 49


  96              	.LVL6:
  97 0000 F0B4     		push	{r4, r5, r6, r7}
  98              	.LCFI0:
  99              		.cfi_def_cfa_offset 16
 100              		.cfi_offset 4, -16
 101              		.cfi_offset 5, -12
 102              		.cfi_offset 6, -8
 103              		.cfi_offset 7, -4
2647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   assert_param(IS_QSPI_FUNCTIONAL_MODE(FunctionalMode));
2648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
2649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   if ((cmd->DataMode != QSPI_DATA_NONE) && (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED))
 104              		.loc 1 2649 0
 105 0002 4B6A     		ldr	r3, [r1, #36]
 106 0004 33B1     		cbz	r3, .L4
 107              		.loc 1 2649 0 is_stmt 0 discriminator 1
 108 0006 B2F1406F 		cmp	r2, #201326592
 109 000a 03D0     		beq	.L4
2650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
2651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     /* Configure QSPI: DLR register with the number of data to read or write */
2652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     WRITE_REG(hqspi->Instance->DLR, (cmd->NbData - 1U));
 110              		.loc 1 2652 0 is_stmt 1
 111 000c 8B6A     		ldr	r3, [r1, #40]
 112 000e 0468     		ldr	r4, [r0]
 113 0010 013B     		subs	r3, r3, #1
 114 0012 2361     		str	r3, [r4, #16]
 115              	.L4:
2653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
2654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
2655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   if (cmd->InstructionMode != QSPI_INSTRUCTION_NONE)
 116              		.loc 1 2655 0
 117 0014 8C69     		ldr	r4, [r1, #24]
 118 0016 002C     		cmp	r4, #0
 119 0018 6ED0     		beq	.L5
2656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
2657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 120              		.loc 1 2657 0
 121 001a 0E6A     		ldr	r6, [r1, #32]
 122 001c 002E     		cmp	r6, #0
 123 001e 3BD0     		beq	.L6
2658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     {
2659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* Configure QSPI: ABR register with alternate bytes value */
2660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 124              		.loc 1 2660 0
 125 0020 0368     		ldr	r3, [r0]
 126 0022 8C68     		ldr	r4, [r1, #8]
 127 0024 DC61     		str	r4, [r3, #28]
2661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
2662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 128              		.loc 1 2662 0
 129 0026 CC69     		ldr	r4, [r1, #28]
 130 0028 F4B1     		cbz	r4, .L7
2663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       {
2664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         /*---- Command with instruction, address and alternate bytes ----*/
2665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         /* Configure QSPI: CCR register with all communications parameters */
2666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 131              		.loc 1 2666 0
 132 002a CB6A     		ldr	r3, [r1, #44]
ARM GAS  /tmp/ccMXllgx.s 			page 50


 133 002c 0D6B     		ldr	r5, [r1, #48]
 134 002e 2B43     		orrs	r3, r3, r5
 135 0030 4D6B     		ldr	r5, [r1, #52]
 136 0032 2B43     		orrs	r3, r3, r5
 137 0034 4D6A     		ldr	r5, [r1, #36]
 138 0036 2B43     		orrs	r3, r3, r5
 139 0038 4D69     		ldr	r5, [r1, #20]
 140 003a 43EA8543 		orr	r3, r3, r5, lsl #18
 141 003e 0D69     		ldr	r5, [r1, #16]
 142 0040 2B43     		orrs	r3, r3, r5
 143 0042 0D6A     		ldr	r5, [r1, #32]
 144 0044 2B43     		orrs	r3, r3, r5
 145 0046 CD68     		ldr	r5, [r1, #12]
 146 0048 2B43     		orrs	r3, r3, r5
 147 004a 2343     		orrs	r3, r3, r4
 148 004c 8C69     		ldr	r4, [r1, #24]
 149 004e 2343     		orrs	r3, r3, r4
 150 0050 0C68     		ldr	r4, [r1]
 151 0052 2343     		orrs	r3, r3, r4
 152 0054 0468     		ldr	r4, [r0]
 153 0056 1343     		orrs	r3, r3, r2
 154 0058 6361     		str	r3, [r4, #20]
2667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****                                          cmd->DataMode | (cmd->DummyCycles << QUADSPI_CCR_DCYC_Pos)
2668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****                                          cmd->AlternateBytesSize | cmd->AlternateByteMode |
2669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****                                          cmd->AddressSize | cmd->AddressMode | cmd->InstructionMode
2670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****                                          cmd->Instruction | FunctionalMode));
2671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
2672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 155              		.loc 1 2672 0
 156 005a B2F1406F 		cmp	r2, #201326592
 157 005e 19D0     		beq	.L3
2673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         {
2674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           /* Configure QSPI: AR register with address value */
2675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           WRITE_REG(hqspi->Instance->AR, cmd->Address);
 158              		.loc 1 2675 0
 159 0060 0368     		ldr	r3, [r0]
 160 0062 4A68     		ldr	r2, [r1, #4]
 161              	.LVL7:
 162 0064 9A61     		str	r2, [r3, #24]
 163 0066 15E0     		b	.L3
 164              	.LVL8:
 165              	.L7:
2676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         }
2677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       }
2678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       else
2679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       {
2680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         /*---- Command with instruction and alternate bytes ----*/
2681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         /* Configure QSPI: CCR register with all communications parameters */
2682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 166              		.loc 1 2682 0
 167 0068 CB6A     		ldr	r3, [r1, #44]
 168 006a 0D6B     		ldr	r5, [r1, #48]
 169 006c 2B43     		orrs	r3, r3, r5
 170 006e 4D6B     		ldr	r5, [r1, #52]
 171 0070 2B43     		orrs	r3, r3, r5
 172 0072 4D6A     		ldr	r5, [r1, #36]
 173 0074 2B43     		orrs	r3, r3, r5
ARM GAS  /tmp/ccMXllgx.s 			page 51


 174 0076 4D69     		ldr	r5, [r1, #20]
 175 0078 43EA8543 		orr	r3, r3, r5, lsl #18
 176 007c 0D69     		ldr	r5, [r1, #16]
 177 007e 2B43     		orrs	r3, r3, r5
 178 0080 0D6A     		ldr	r5, [r1, #32]
 179 0082 2B43     		orrs	r3, r3, r5
 180 0084 2343     		orrs	r3, r3, r4
 181 0086 8C69     		ldr	r4, [r1, #24]
 182 0088 2343     		orrs	r3, r3, r4
 183 008a 0C68     		ldr	r4, [r1]
 184 008c 2343     		orrs	r3, r3, r4
 185 008e 0168     		ldr	r1, [r0]
 186              	.LVL9:
 187 0090 1A43     		orrs	r2, r2, r3
 188              	.LVL10:
 189 0092 4A61     		str	r2, [r1, #20]
 190              	.L3:
2683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****                                          cmd->DataMode | (cmd->DummyCycles << QUADSPI_CCR_DCYC_Pos)
2684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****                                          cmd->AlternateBytesSize | cmd->AlternateByteMode |
2685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****                                          cmd->AddressMode | cmd->InstructionMode |
2686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****                                          cmd->Instruction | FunctionalMode));
2687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       }
2688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     }
2689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     else
2690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     {
2691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       if (cmd->AddressMode != QSPI_ADDRESS_NONE)
2692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       {
2693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         /*---- Command with instruction and address ----*/
2694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         /* Configure QSPI: CCR register with all communications parameters */
2695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
2696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****                                          cmd->DataMode | (cmd->DummyCycles << QUADSPI_CCR_DCYC_Pos)
2697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****                                          cmd->AlternateByteMode | cmd->AddressSize | cmd->AddressMo
2698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****                                          cmd->InstructionMode | cmd->Instruction | FunctionalMode))
2699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
2700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
2701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         {
2702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           /* Configure QSPI: AR register with address value */
2703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           WRITE_REG(hqspi->Instance->AR, cmd->Address);
2704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         }
2705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       }
2706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       else
2707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       {
2708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         /*---- Command with only instruction ----*/
2709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         /* Configure QSPI: CCR register with all communications parameters */
2710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
2711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****                                          cmd->DataMode | (cmd->DummyCycles << QUADSPI_CCR_DCYC_Pos)
2712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****                                          cmd->AlternateByteMode | cmd->AddressMode |
2713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****                                          cmd->InstructionMode | cmd->Instruction | FunctionalMode))
2714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       }
2715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     }
2716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
2717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   else
2718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
2719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
2720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     {
2721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       /* Configure QSPI: ABR register with alternate bytes value */
2722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
ARM GAS  /tmp/ccMXllgx.s 			page 52


2723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
2724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       if (cmd->AddressMode != QSPI_ADDRESS_NONE)
2725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       {
2726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         /*---- Command with address and alternate bytes ----*/
2727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         /* Configure QSPI: CCR register with all communications parameters */
2728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
2729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****                                          cmd->DataMode | (cmd->DummyCycles << QUADSPI_CCR_DCYC_Pos)
2730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****                                          cmd->AlternateBytesSize | cmd->AlternateByteMode |
2731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****                                          cmd->AddressSize | cmd->AddressMode |
2732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****                                          cmd->InstructionMode | FunctionalMode));
2733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
2734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
2735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         {
2736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           /* Configure QSPI: AR register with address value */
2737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           WRITE_REG(hqspi->Instance->AR, cmd->Address);
2738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         }
2739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       }
2740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       else
2741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       {
2742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         /*---- Command with only alternate bytes ----*/
2743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         /* Configure QSPI: CCR register with all communications parameters */
2744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
2745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****                                          cmd->DataMode | (cmd->DummyCycles << QUADSPI_CCR_DCYC_Pos)
2746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****                                          cmd->AlternateBytesSize | cmd->AlternateByteMode |
2747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****                                          cmd->AddressMode | cmd->InstructionMode | FunctionalMode))
2748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       }
2749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     }
2750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     else
2751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     {
2752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       if (cmd->AddressMode != QSPI_ADDRESS_NONE)
2753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       {
2754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         /*---- Command with only address ----*/
2755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         /* Configure QSPI: CCR register with all communications parameters */
2756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
2757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****                                          cmd->DataMode | (cmd->DummyCycles << QUADSPI_CCR_DCYC_Pos)
2758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****                                          cmd->AlternateByteMode | cmd->AddressSize |
2759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****                                          cmd->AddressMode | cmd->InstructionMode | FunctionalMode))
2760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
2761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
2762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         {
2763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           /* Configure QSPI: AR register with address value */
2764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           WRITE_REG(hqspi->Instance->AR, cmd->Address);
2765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         }
2766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       }
2767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       else
2768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       {
2769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         /*---- Command with only data phase ----*/
2770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         if (cmd->DataMode != QSPI_DATA_NONE)
2771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         {
2772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           /* Configure QSPI: CCR register with all communications parameters */
2773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
2774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****                                            cmd->DataMode | (cmd->DummyCycles << QUADSPI_CCR_DCYC_Po
2775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****                                            cmd->AlternateByteMode | cmd->AddressMode |
2776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****                                            cmd->InstructionMode | FunctionalMode));
2777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         }
2778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       }
2779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     }
ARM GAS  /tmp/ccMXllgx.s 			page 53


2780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
2781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** }
 191              		.loc 1 2781 0
 192 0094 F0BC     		pop	{r4, r5, r6, r7}
 193              	.LCFI1:
 194              		.cfi_remember_state
 195              		.cfi_restore 7
 196              		.cfi_restore 6
 197              		.cfi_restore 5
 198              		.cfi_restore 4
 199              		.cfi_def_cfa_offset 0
 200 0096 7047     		bx	lr
 201              	.LVL11:
 202              	.L6:
 203              	.LCFI2:
 204              		.cfi_restore_state
2691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       {
 205              		.loc 1 2691 0
 206 0098 CD69     		ldr	r5, [r1, #28]
 207 009a D5B1     		cbz	r5, .L9
2695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****                                          cmd->DataMode | (cmd->DummyCycles << QUADSPI_CCR_DCYC_Pos)
 208              		.loc 1 2695 0
 209 009c CB6A     		ldr	r3, [r1, #44]
 210 009e 0F6B     		ldr	r7, [r1, #48]
 211 00a0 3B43     		orrs	r3, r3, r7
 212 00a2 4F6B     		ldr	r7, [r1, #52]
 213 00a4 3B43     		orrs	r3, r3, r7
 214 00a6 4F6A     		ldr	r7, [r1, #36]
 215 00a8 3B43     		orrs	r3, r3, r7
 216 00aa 4F69     		ldr	r7, [r1, #20]
 217 00ac 43EA8743 		orr	r3, r3, r7, lsl #18
 218 00b0 3343     		orrs	r3, r3, r6
 219 00b2 CE68     		ldr	r6, [r1, #12]
 220 00b4 3343     		orrs	r3, r3, r6
 221 00b6 2B43     		orrs	r3, r3, r5
 222 00b8 2343     		orrs	r3, r3, r4
 223 00ba 0C68     		ldr	r4, [r1]
 224 00bc 2343     		orrs	r3, r3, r4
 225 00be 0468     		ldr	r4, [r0]
 226 00c0 1343     		orrs	r3, r3, r2
 227 00c2 6361     		str	r3, [r4, #20]
2700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         {
 228              		.loc 1 2700 0
 229 00c4 B2F1406F 		cmp	r2, #201326592
 230 00c8 E4D0     		beq	.L3
2703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         }
 231              		.loc 1 2703 0
 232 00ca 0368     		ldr	r3, [r0]
 233 00cc 4A68     		ldr	r2, [r1, #4]
 234              	.LVL12:
 235 00ce 9A61     		str	r2, [r3, #24]
 236 00d0 E0E7     		b	.L3
 237              	.LVL13:
 238              	.L9:
2710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****                                          cmd->DataMode | (cmd->DummyCycles << QUADSPI_CCR_DCYC_Pos)
 239              		.loc 1 2710 0
 240 00d2 CB6A     		ldr	r3, [r1, #44]
ARM GAS  /tmp/ccMXllgx.s 			page 54


 241 00d4 0F6B     		ldr	r7, [r1, #48]
 242 00d6 3B43     		orrs	r3, r3, r7
 243 00d8 4F6B     		ldr	r7, [r1, #52]
 244 00da 3B43     		orrs	r3, r3, r7
 245 00dc 4F6A     		ldr	r7, [r1, #36]
 246 00de 3B43     		orrs	r3, r3, r7
 247 00e0 4F69     		ldr	r7, [r1, #20]
 248 00e2 43EA8743 		orr	r3, r3, r7, lsl #18
 249 00e6 3343     		orrs	r3, r3, r6
 250 00e8 2B43     		orrs	r3, r3, r5
 251 00ea 2343     		orrs	r3, r3, r4
 252 00ec 0C68     		ldr	r4, [r1]
 253 00ee 2343     		orrs	r3, r3, r4
 254 00f0 0168     		ldr	r1, [r0]
 255              	.LVL14:
 256 00f2 1A43     		orrs	r2, r2, r3
 257              	.LVL15:
 258 00f4 4A61     		str	r2, [r1, #20]
 259 00f6 CDE7     		b	.L3
 260              	.LVL16:
 261              	.L5:
2719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     {
 262              		.loc 1 2719 0
 263 00f8 0E6A     		ldr	r6, [r1, #32]
 264 00fa 002E     		cmp	r6, #0
 265 00fc 36D0     		beq	.L10
2722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 266              		.loc 1 2722 0
 267 00fe 0368     		ldr	r3, [r0]
 268 0100 8C68     		ldr	r4, [r1, #8]
 269 0102 DC61     		str	r4, [r3, #28]
2724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       {
 270              		.loc 1 2724 0
 271 0104 CD69     		ldr	r5, [r1, #28]
 272 0106 E5B1     		cbz	r5, .L11
2728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****                                          cmd->DataMode | (cmd->DummyCycles << QUADSPI_CCR_DCYC_Pos)
 273              		.loc 1 2728 0
 274 0108 CB6A     		ldr	r3, [r1, #44]
 275 010a 0C6B     		ldr	r4, [r1, #48]
 276 010c 2343     		orrs	r3, r3, r4
 277 010e 4C6B     		ldr	r4, [r1, #52]
 278 0110 2343     		orrs	r3, r3, r4
 279 0112 4C6A     		ldr	r4, [r1, #36]
 280 0114 2343     		orrs	r3, r3, r4
 281 0116 4C69     		ldr	r4, [r1, #20]
 282 0118 43EA8443 		orr	r3, r3, r4, lsl #18
 283 011c 0C69     		ldr	r4, [r1, #16]
 284 011e 2343     		orrs	r3, r3, r4
 285 0120 0C6A     		ldr	r4, [r1, #32]
 286 0122 2343     		orrs	r3, r3, r4
 287 0124 CC68     		ldr	r4, [r1, #12]
 288 0126 2343     		orrs	r3, r3, r4
 289 0128 2B43     		orrs	r3, r3, r5
 290 012a 8C69     		ldr	r4, [r1, #24]
 291 012c 2343     		orrs	r3, r3, r4
 292 012e 0468     		ldr	r4, [r0]
 293 0130 1343     		orrs	r3, r3, r2
ARM GAS  /tmp/ccMXllgx.s 			page 55


 294 0132 6361     		str	r3, [r4, #20]
2734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         {
 295              		.loc 1 2734 0
 296 0134 B2F1406F 		cmp	r2, #201326592
 297 0138 ACD0     		beq	.L3
2737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         }
 298              		.loc 1 2737 0
 299 013a 0368     		ldr	r3, [r0]
 300 013c 4A68     		ldr	r2, [r1, #4]
 301              	.LVL17:
 302 013e 9A61     		str	r2, [r3, #24]
 303 0140 A8E7     		b	.L3
 304              	.LVL18:
 305              	.L11:
2744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****                                          cmd->DataMode | (cmd->DummyCycles << QUADSPI_CCR_DCYC_Pos)
 306              		.loc 1 2744 0
 307 0142 CC6A     		ldr	r4, [r1, #44]
 308 0144 0B6B     		ldr	r3, [r1, #48]
 309 0146 1C43     		orrs	r4, r4, r3
 310 0148 4B6B     		ldr	r3, [r1, #52]
 311 014a 1C43     		orrs	r4, r4, r3
 312 014c 4B6A     		ldr	r3, [r1, #36]
 313 014e 1C43     		orrs	r4, r4, r3
 314 0150 4B69     		ldr	r3, [r1, #20]
 315 0152 44EA8344 		orr	r4, r4, r3, lsl #18
 316 0156 0B69     		ldr	r3, [r1, #16]
 317 0158 1C43     		orrs	r4, r4, r3
 318 015a 0B6A     		ldr	r3, [r1, #32]
 319 015c 1C43     		orrs	r4, r4, r3
 320 015e 2C43     		orrs	r4, r4, r5
 321 0160 8D69     		ldr	r5, [r1, #24]
 322 0162 2C43     		orrs	r4, r4, r5
 323 0164 0368     		ldr	r3, [r0]
 324 0166 2243     		orrs	r2, r2, r4
 325              	.LVL19:
 326 0168 5A61     		str	r2, [r3, #20]
 327 016a 93E7     		b	.L3
 328              	.LVL20:
 329              	.L10:
2752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       {
 330              		.loc 1 2752 0
 331 016c CF69     		ldr	r7, [r1, #28]
 332 016e CFB1     		cbz	r7, .L12
2756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****                                          cmd->DataMode | (cmd->DummyCycles << QUADSPI_CCR_DCYC_Pos)
 333              		.loc 1 2756 0
 334 0170 CD6A     		ldr	r5, [r1, #44]
 335 0172 0B6B     		ldr	r3, [r1, #48]
 336 0174 1D43     		orrs	r5, r5, r3
 337 0176 4B6B     		ldr	r3, [r1, #52]
 338 0178 2B43     		orrs	r3, r3, r5
 339 017a 4D6A     		ldr	r5, [r1, #36]
 340 017c 2B43     		orrs	r3, r3, r5
 341 017e 4D69     		ldr	r5, [r1, #20]
 342 0180 43EA8543 		orr	r3, r3, r5, lsl #18
 343 0184 3343     		orrs	r3, r3, r6
 344 0186 CD68     		ldr	r5, [r1, #12]
 345 0188 2B43     		orrs	r3, r3, r5
ARM GAS  /tmp/ccMXllgx.s 			page 56


 346 018a 3B43     		orrs	r3, r3, r7
 347 018c 2343     		orrs	r3, r3, r4
 348 018e 0468     		ldr	r4, [r0]
 349 0190 1343     		orrs	r3, r3, r2
 350 0192 6361     		str	r3, [r4, #20]
2761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         {
 351              		.loc 1 2761 0
 352 0194 B2F1406F 		cmp	r2, #201326592
 353 0198 3FF47CAF 		beq	.L3
2764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         }
 354              		.loc 1 2764 0
 355 019c 0368     		ldr	r3, [r0]
 356 019e 4A68     		ldr	r2, [r1, #4]
 357              	.LVL21:
 358 01a0 9A61     		str	r2, [r3, #24]
 359 01a2 77E7     		b	.L3
 360              	.LVL22:
 361              	.L12:
2770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         {
 362              		.loc 1 2770 0
 363 01a4 D1F824C0 		ldr	ip, [r1, #36]
 364 01a8 BCF1000F 		cmp	ip, #0
 365 01ac 3FF472AF 		beq	.L3
2773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****                                            cmd->DataMode | (cmd->DummyCycles << QUADSPI_CCR_DCYC_Po
 366              		.loc 1 2773 0
 367 01b0 CD6A     		ldr	r5, [r1, #44]
 368 01b2 0B6B     		ldr	r3, [r1, #48]
 369 01b4 1D43     		orrs	r5, r5, r3
 370 01b6 4B6B     		ldr	r3, [r1, #52]
 371 01b8 1D43     		orrs	r5, r5, r3
 372 01ba 4CEA0503 		orr	r3, ip, r5
 373 01be 4969     		ldr	r1, [r1, #20]
 374              	.LVL23:
 375 01c0 43EA8143 		orr	r3, r3, r1, lsl #18
 376 01c4 3343     		orrs	r3, r3, r6
 377 01c6 3B43     		orrs	r3, r3, r7
 378 01c8 2343     		orrs	r3, r3, r4
 379 01ca 0168     		ldr	r1, [r0]
 380 01cc 1A43     		orrs	r2, r2, r3
 381              	.LVL24:
 382 01ce 4A61     		str	r2, [r1, #20]
 383              		.loc 1 2781 0
 384 01d0 60E7     		b	.L3
 385              		.cfi_endproc
 386              	.LFE182:
 388              		.section	.text.QSPI_WaitFlagStateUntilTimeout,"ax",%progbits
 389              		.align	1
 390              		.syntax unified
 391              		.thumb
 392              		.thumb_func
 393              		.fpu fpv5-sp-d16
 395              	QSPI_WaitFlagStateUntilTimeout:
 396              	.LFB181:
2614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Wait until flag is in expected state */
 397              		.loc 1 2614 0
 398              		.cfi_startproc
 399              		@ args = 4, pretend = 0, frame = 0
ARM GAS  /tmp/ccMXllgx.s 			page 57


 400              		@ frame_needed = 0, uses_anonymous_args = 0
 401              	.LVL25:
 402 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 403              	.LCFI3:
 404              		.cfi_def_cfa_offset 24
 405              		.cfi_offset 4, -24
 406              		.cfi_offset 5, -20
 407              		.cfi_offset 6, -16
 408              		.cfi_offset 7, -12
 409              		.cfi_offset 8, -8
 410              		.cfi_offset 14, -4
 411 0004 0546     		mov	r5, r0
 412 0006 0F46     		mov	r7, r1
 413 0008 1646     		mov	r6, r2
 414 000a 9846     		mov	r8, r3
 415 000c 069C     		ldr	r4, [sp, #24]
 416              	.LVL26:
 417              	.L16:
2616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
 418              		.loc 1 2616 0
 419 000e 2B68     		ldr	r3, [r5]
 420 0010 9B68     		ldr	r3, [r3, #8]
 421 0012 3B42     		tst	r3, r7
 422 0014 14BF     		ite	ne
 423 0016 0123     		movne	r3, #1
 424 0018 0023     		moveq	r3, #0
 425 001a B342     		cmp	r3, r6
 426 001c 13D0     		beq	.L21
2619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     {
 427              		.loc 1 2619 0
 428 001e B4F1FF3F 		cmp	r4, #-1
 429 0022 F4D0     		beq	.L16
2621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       {
 430              		.loc 1 2621 0
 431 0024 FFF7FEFF 		bl	HAL_GetTick
 432              	.LVL27:
 433 0028 A0EB0800 		sub	r0, r0, r8
 434 002c A042     		cmp	r0, r4
 435 002e 01D8     		bhi	.L17
2621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       {
 436              		.loc 1 2621 0 is_stmt 0 discriminator 1
 437 0030 002C     		cmp	r4, #0
 438 0032 ECD1     		bne	.L16
 439              	.L17:
2623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         hqspi->ErrorCode |= HAL_QSPI_ERROR_TIMEOUT;
 440              		.loc 1 2623 0 is_stmt 1
 441 0034 0423     		movs	r3, #4
 442 0036 85F84130 		strb	r3, [r5, #65]
2624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 443              		.loc 1 2624 0
 444 003a 6B6C     		ldr	r3, [r5, #68]
 445 003c 43F00103 		orr	r3, r3, #1
 446 0040 6B64     		str	r3, [r5, #68]
2626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       }
 447              		.loc 1 2626 0
 448 0042 0120     		movs	r0, #1
 449 0044 00E0     		b	.L18
ARM GAS  /tmp/ccMXllgx.s 			page 58


 450              	.L21:
2630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** }
 451              		.loc 1 2630 0
 452 0046 0020     		movs	r0, #0
 453              	.L18:
2631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 454              		.loc 1 2631 0
 455 0048 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 456              		.cfi_endproc
 457              	.LFE181:
 459              		.section	.text.HAL_QSPI_MspInit,"ax",%progbits
 460              		.align	1
 461              		.weak	HAL_QSPI_MspInit
 462              		.syntax unified
 463              		.thumb
 464              		.thumb_func
 465              		.fpu fpv5-sp-d16
 467              	HAL_QSPI_MspInit:
 468              	.LFB143:
 434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Prevent unused argument(s) compilation warning */
 469              		.loc 1 434 0
 470              		.cfi_startproc
 471              		@ args = 0, pretend = 0, frame = 0
 472              		@ frame_needed = 0, uses_anonymous_args = 0
 473              		@ link register save eliminated.
 474              	.LVL28:
 441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 475              		.loc 1 441 0
 476 0000 7047     		bx	lr
 477              		.cfi_endproc
 478              	.LFE143:
 480              		.section	.text.HAL_QSPI_MspDeInit,"ax",%progbits
 481              		.align	1
 482              		.weak	HAL_QSPI_MspDeInit
 483              		.syntax unified
 484              		.thumb
 485              		.thumb_func
 486              		.fpu fpv5-sp-d16
 488              	HAL_QSPI_MspDeInit:
 489              	.LFB144:
 449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Prevent unused argument(s) compilation warning */
 490              		.loc 1 449 0
 491              		.cfi_startproc
 492              		@ args = 0, pretend = 0, frame = 0
 493              		@ frame_needed = 0, uses_anonymous_args = 0
 494              		@ link register save eliminated.
 495              	.LVL29:
 456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 496              		.loc 1 456 0
 497 0000 7047     		bx	lr
 498              		.cfi_endproc
 499              	.LFE144:
 501              		.section	.text.HAL_QSPI_DeInit,"ax",%progbits
 502              		.align	1
 503              		.global	HAL_QSPI_DeInit
 504              		.syntax unified
 505              		.thumb
ARM GAS  /tmp/ccMXllgx.s 			page 59


 506              		.thumb_func
 507              		.fpu fpv5-sp-d16
 509              	HAL_QSPI_DeInit:
 510              	.LFB142:
 393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Check the QSPI handle allocation */
 511              		.loc 1 393 0
 512              		.cfi_startproc
 513              		@ args = 0, pretend = 0, frame = 0
 514              		@ frame_needed = 0, uses_anonymous_args = 0
 515              	.LVL30:
 395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
 516              		.loc 1 395 0
 517 0000 78B1     		cbz	r0, .L26
 393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Check the QSPI handle allocation */
 518              		.loc 1 393 0
 519 0002 10B5     		push	{r4, lr}
 520              	.LCFI4:
 521              		.cfi_def_cfa_offset 8
 522              		.cfi_offset 4, -8
 523              		.cfi_offset 14, -4
 524 0004 0446     		mov	r4, r0
 401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 525              		.loc 1 401 0
 526 0006 0268     		ldr	r2, [r0]
 527 0008 1368     		ldr	r3, [r2]
 528 000a 23F00103 		bic	r3, r3, #1
 529 000e 1360     		str	r3, [r2]
 413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #endif
 530              		.loc 1 413 0
 531 0010 FFF7FEFF 		bl	HAL_QSPI_MspDeInit
 532              	.LVL31:
 417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 533              		.loc 1 417 0
 534 0014 0020     		movs	r0, #0
 535 0016 6064     		str	r0, [r4, #68]
 420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 536              		.loc 1 420 0
 537 0018 84F84100 		strb	r0, [r4, #65]
 423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 538              		.loc 1 423 0
 539 001c 84F84000 		strb	r0, [r4, #64]
 426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 540              		.loc 1 426 0
 541 0020 10BD     		pop	{r4, pc}
 542              	.LVL32:
 543              	.L26:
 544              	.LCFI5:
 545              		.cfi_def_cfa_offset 0
 546              		.cfi_restore 4
 547              		.cfi_restore 14
 397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
 548              		.loc 1 397 0
 549 0022 0120     		movs	r0, #1
 550              	.LVL33:
 426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 551              		.loc 1 426 0
 552 0024 7047     		bx	lr
ARM GAS  /tmp/ccMXllgx.s 			page 60


 553              		.cfi_endproc
 554              	.LFE142:
 556              		.section	.text.HAL_QSPI_Command,"ax",%progbits
 557              		.align	1
 558              		.global	HAL_QSPI_Command
 559              		.syntax unified
 560              		.thumb
 561              		.thumb_func
 562              		.fpu fpv5-sp-d16
 564              	HAL_QSPI_Command:
 565              	.LFB146:
 785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   HAL_StatusTypeDef status;
 566              		.loc 1 785 0
 567              		.cfi_startproc
 568              		@ args = 0, pretend = 0, frame = 0
 569              		@ frame_needed = 0, uses_anonymous_args = 0
 570              	.LVL34:
 571 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 572              	.LCFI6:
 573              		.cfi_def_cfa_offset 24
 574              		.cfi_offset 4, -24
 575              		.cfi_offset 5, -20
 576              		.cfi_offset 6, -16
 577              		.cfi_offset 7, -12
 578              		.cfi_offset 8, -8
 579              		.cfi_offset 14, -4
 580 0004 82B0     		sub	sp, sp, #8
 581              	.LCFI7:
 582              		.cfi_def_cfa_offset 32
 583 0006 0446     		mov	r4, r0
 584 0008 0F46     		mov	r7, r1
 585 000a 1646     		mov	r6, r2
 787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 586              		.loc 1 787 0
 587 000c FFF7FEFF 		bl	HAL_GetTick
 588              	.LVL35:
 816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 589              		.loc 1 816 0
 590 0010 94F84030 		ldrb	r3, [r4, #64]	@ zero_extendqisi2
 591 0014 DBB2     		uxtb	r3, r3
 592 0016 012B     		cmp	r3, #1
 593 0018 3BD0     		beq	.L35
 594 001a 0546     		mov	r5, r0
 816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 595              		.loc 1 816 0 is_stmt 0 discriminator 2
 596 001c 0123     		movs	r3, #1
 597 001e 84F84030 		strb	r3, [r4, #64]
 818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
 598              		.loc 1 818 0 is_stmt 1 discriminator 2
 599 0022 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 600 0026 DBB2     		uxtb	r3, r3
 601 0028 012B     		cmp	r3, #1
 602 002a 08D0     		beq	.L38
 856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
 603              		.loc 1 856 0
 604 002c 4FF00208 		mov	r8, #2
 605              	.LVL36:
ARM GAS  /tmp/ccMXllgx.s 			page 61


 606              	.L33:
 860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 607              		.loc 1 860 0
 608 0030 0023     		movs	r3, #0
 609 0032 84F84030 		strb	r3, [r4, #64]
 610              	.LVL37:
 611              	.L32:
 864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 612              		.loc 1 864 0
 613 0036 4046     		mov	r0, r8
 614 0038 02B0     		add	sp, sp, #8
 615              	.LCFI8:
 616              		.cfi_remember_state
 617              		.cfi_def_cfa_offset 24
 618              		@ sp needed
 619 003a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 620              	.LVL38:
 621              	.L38:
 622              	.LCFI9:
 623              		.cfi_restore_state
 820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 624              		.loc 1 820 0
 625 003e 0022     		movs	r2, #0
 626 0040 6264     		str	r2, [r4, #68]
 823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 627              		.loc 1 823 0
 628 0042 0223     		movs	r3, #2
 629 0044 84F84130 		strb	r3, [r4, #65]
 826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 630              		.loc 1 826 0
 631 0048 0096     		str	r6, [sp]
 632 004a 0346     		mov	r3, r0
 633 004c 2021     		movs	r1, #32
 634 004e 2046     		mov	r0, r4
 635              	.LVL39:
 636 0050 FFF7FEFF 		bl	QSPI_WaitFlagStateUntilTimeout
 637              	.LVL40:
 828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     {
 638              		.loc 1 828 0
 639 0054 8046     		mov	r8, r0
 640 0056 0028     		cmp	r0, #0
 641 0058 EAD1     		bne	.L33
 831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 642              		.loc 1 831 0
 643 005a 0022     		movs	r2, #0
 644 005c 3946     		mov	r1, r7
 645 005e 2046     		mov	r0, r4
 646              	.LVL41:
 647 0060 FFF7FEFF 		bl	QSPI_Config
 648              	.LVL42:
 833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       {
 649              		.loc 1 833 0
 650 0064 7B6A     		ldr	r3, [r7, #36]
 651 0066 1BB1     		cbz	r3, .L39
 850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       }
 652              		.loc 1 850 0
 653 0068 0123     		movs	r3, #1
ARM GAS  /tmp/ccMXllgx.s 			page 62


 654 006a 84F84130 		strb	r3, [r4, #65]
 655 006e DFE7     		b	.L33
 656              	.L39:
 837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 657              		.loc 1 837 0
 658 0070 0096     		str	r6, [sp]
 659 0072 2B46     		mov	r3, r5
 660 0074 0122     		movs	r2, #1
 661 0076 0221     		movs	r1, #2
 662 0078 2046     		mov	r0, r4
 663 007a FFF7FEFF 		bl	QSPI_WaitFlagStateUntilTimeout
 664              	.LVL43:
 839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         {
 665              		.loc 1 839 0
 666 007e 8046     		mov	r8, r0
 667 0080 0028     		cmp	r0, #0
 668 0082 D5D1     		bne	.L33
 841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 669              		.loc 1 841 0
 670 0084 2368     		ldr	r3, [r4]
 671 0086 0222     		movs	r2, #2
 672 0088 DA60     		str	r2, [r3, #12]
 844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         }
 673              		.loc 1 844 0
 674 008a 0123     		movs	r3, #1
 675 008c 84F84130 		strb	r3, [r4, #65]
 676 0090 CEE7     		b	.L33
 677              	.LVL44:
 678              	.L35:
 816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 679              		.loc 1 816 0
 680 0092 4FF00208 		mov	r8, #2
 681 0096 CEE7     		b	.L32
 682              		.cfi_endproc
 683              	.LFE146:
 685              		.section	.text.HAL_QSPI_Command_IT,"ax",%progbits
 686              		.align	1
 687              		.global	HAL_QSPI_Command_IT
 688              		.syntax unified
 689              		.thumb
 690              		.thumb_func
 691              		.fpu fpv5-sp-d16
 693              	HAL_QSPI_Command_IT:
 694              	.LFB147:
 874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   HAL_StatusTypeDef status;
 695              		.loc 1 874 0
 696              		.cfi_startproc
 697              		@ args = 0, pretend = 0, frame = 0
 698              		@ frame_needed = 0, uses_anonymous_args = 0
 699              	.LVL45:
 700 0000 70B5     		push	{r4, r5, r6, lr}
 701              	.LCFI10:
 702              		.cfi_def_cfa_offset 16
 703              		.cfi_offset 4, -16
 704              		.cfi_offset 5, -12
 705              		.cfi_offset 6, -8
 706              		.cfi_offset 14, -4
ARM GAS  /tmp/ccMXllgx.s 			page 63


 707 0002 82B0     		sub	sp, sp, #8
 708              	.LCFI11:
 709              		.cfi_def_cfa_offset 24
 710 0004 0446     		mov	r4, r0
 711 0006 0E46     		mov	r6, r1
 876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 712              		.loc 1 876 0
 713 0008 FFF7FEFF 		bl	HAL_GetTick
 714              	.LVL46:
 905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 715              		.loc 1 905 0
 716 000c 94F84020 		ldrb	r2, [r4, #64]	@ zero_extendqisi2
 717 0010 D2B2     		uxtb	r2, r2
 718 0012 012A     		cmp	r2, #1
 719 0014 3BD0     		beq	.L46
 905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 720              		.loc 1 905 0 is_stmt 0 discriminator 2
 721 0016 0122     		movs	r2, #1
 722 0018 84F84020 		strb	r2, [r4, #64]
 907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
 723              		.loc 1 907 0 is_stmt 1 discriminator 2
 724 001c 94F84120 		ldrb	r2, [r4, #65]	@ zero_extendqisi2
 725 0020 D2B2     		uxtb	r2, r2
 726 0022 012A     		cmp	r2, #1
 727 0024 06D0     		beq	.L48
 728              	.LVL47:
 958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
 729              		.loc 1 958 0
 730 0026 0023     		movs	r3, #0
 731 0028 84F84030 		strb	r3, [r4, #64]
 955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 732              		.loc 1 955 0
 733 002c 0225     		movs	r5, #2
 734              	.LVL48:
 735              	.L41:
 963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 736              		.loc 1 963 0
 737 002e 2846     		mov	r0, r5
 738 0030 02B0     		add	sp, sp, #8
 739              	.LCFI12:
 740              		.cfi_remember_state
 741              		.cfi_def_cfa_offset 16
 742              		@ sp needed
 743 0032 70BD     		pop	{r4, r5, r6, pc}
 744              	.LVL49:
 745              	.L48:
 746              	.LCFI13:
 747              		.cfi_restore_state
 909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 748              		.loc 1 909 0
 749 0034 0022     		movs	r2, #0
 750 0036 6264     		str	r2, [r4, #68]
 912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 751              		.loc 1 912 0
 752 0038 0223     		movs	r3, #2
 753 003a 84F84130 		strb	r3, [r4, #65]
 915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
ARM GAS  /tmp/ccMXllgx.s 			page 64


 754              		.loc 1 915 0
 755 003e A36C     		ldr	r3, [r4, #72]
 756 0040 0093     		str	r3, [sp]
 757 0042 0346     		mov	r3, r0
 758 0044 2021     		movs	r1, #32
 759 0046 2046     		mov	r0, r4
 760              	.LVL50:
 761 0048 FFF7FEFF 		bl	QSPI_WaitFlagStateUntilTimeout
 762              	.LVL51:
 917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     {
 763              		.loc 1 917 0
 764 004c 0546     		mov	r5, r0
 765 004e D0B9     		cbnz	r0, .L43
 919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       {
 766              		.loc 1 919 0
 767 0050 736A     		ldr	r3, [r6, #36]
 768 0052 13B9     		cbnz	r3, .L44
 922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       }
 769              		.loc 1 922 0
 770 0054 2368     		ldr	r3, [r4]
 771 0056 0322     		movs	r2, #3
 772 0058 DA60     		str	r2, [r3, #12]
 773              	.L44:
 926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 774              		.loc 1 926 0
 775 005a 0022     		movs	r2, #0
 776 005c 3146     		mov	r1, r6
 777 005e 2046     		mov	r0, r4
 778              	.LVL52:
 779 0060 FFF7FEFF 		bl	QSPI_Config
 780              	.LVL53:
 928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       {
 781              		.loc 1 928 0
 782 0064 736A     		ldr	r3, [r6, #36]
 783 0066 3BB9     		cbnz	r3, .L45
 933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 784              		.loc 1 933 0
 785 0068 84F84030 		strb	r3, [r4, #64]
 936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       }
 786              		.loc 1 936 0
 787 006c 2268     		ldr	r2, [r4]
 788 006e 1368     		ldr	r3, [r2]
 789 0070 43F44033 		orr	r3, r3, #196608
 790 0074 1360     		str	r3, [r2]
 791 0076 DAE7     		b	.L41
 792              	.L45:
 941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 793              		.loc 1 941 0
 794 0078 0123     		movs	r3, #1
 795 007a 84F84130 		strb	r3, [r4, #65]
 944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       }
 796              		.loc 1 944 0
 797 007e 0023     		movs	r3, #0
 798 0080 84F84030 		strb	r3, [r4, #64]
 799 0084 D3E7     		b	.L41
 800              	.LVL54:
 801              	.L43:
ARM GAS  /tmp/ccMXllgx.s 			page 65


 950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     }
 802              		.loc 1 950 0
 803 0086 0023     		movs	r3, #0
 804 0088 84F84030 		strb	r3, [r4, #64]
 805 008c CFE7     		b	.L41
 806              	.LVL55:
 807              	.L46:
 905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 808              		.loc 1 905 0
 809 008e 0225     		movs	r5, #2
 810 0090 CDE7     		b	.L41
 811              		.cfi_endproc
 812              	.LFE147:
 814              		.section	.text.HAL_QSPI_Transmit_IT,"ax",%progbits
 815              		.align	1
 816              		.global	HAL_QSPI_Transmit_IT
 817              		.syntax unified
 818              		.thumb
 819              		.thumb_func
 820              		.fpu fpv5-sp-d16
 822              	HAL_QSPI_Transmit_IT:
 823              	.LFB150:
1150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   HAL_StatusTypeDef status = HAL_OK;
 824              		.loc 1 1150 0
 825              		.cfi_startproc
 826              		@ args = 0, pretend = 0, frame = 0
 827              		@ frame_needed = 0, uses_anonymous_args = 0
 828              		@ link register save eliminated.
 829              	.LVL56:
1154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 830              		.loc 1 1154 0
 831 0000 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 832 0004 DBB2     		uxtb	r3, r3
 833 0006 012B     		cmp	r3, #1
 834 0008 34D0     		beq	.L53
1154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 835              		.loc 1 1154 0 is_stmt 0 discriminator 2
 836 000a 0123     		movs	r3, #1
 837 000c 80F84030 		strb	r3, [r0, #64]
1156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
 838              		.loc 1 1156 0 is_stmt 1 discriminator 2
 839 0010 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 840 0014 DBB2     		uxtb	r3, r3
 841 0016 012B     		cmp	r3, #1
 842 0018 27D1     		bne	.L51
1158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 843              		.loc 1 1158 0
 844 001a 0023     		movs	r3, #0
 845 001c 4364     		str	r3, [r0, #68]
1160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     {
 846              		.loc 1 1160 0
 847 001e D9B1     		cbz	r1, .L52
1163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 848              		.loc 1 1163 0
 849 0020 1223     		movs	r3, #18
 850 0022 80F84130 		strb	r3, [r0, #65]
1166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
ARM GAS  /tmp/ccMXllgx.s 			page 66


 851              		.loc 1 1166 0
 852 0026 0368     		ldr	r3, [r0]
 853 0028 1A69     		ldr	r2, [r3, #16]
 854 002a 0132     		adds	r2, r2, #1
 855 002c C262     		str	r2, [r0, #44]
1167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       hqspi->pTxBuffPtr = pData;
 856              		.loc 1 1167 0
 857 002e 1A69     		ldr	r2, [r3, #16]
 858 0030 0132     		adds	r2, r2, #1
 859 0032 8262     		str	r2, [r0, #40]
1168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 860              		.loc 1 1168 0
 861 0034 4162     		str	r1, [r0, #36]
1171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 862              		.loc 1 1171 0
 863 0036 0322     		movs	r2, #3
 864 0038 DA60     		str	r2, [r3, #12]
1174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 865              		.loc 1 1174 0
 866 003a 0268     		ldr	r2, [r0]
 867 003c 5369     		ldr	r3, [r2, #20]
 868 003e 23F04063 		bic	r3, r3, #201326592
 869 0042 5361     		str	r3, [r2, #20]
1177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 870              		.loc 1 1177 0
 871 0044 0023     		movs	r3, #0
 872 0046 80F84030 		strb	r3, [r0, #64]
1180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     }
 873              		.loc 1 1180 0
 874 004a 0168     		ldr	r1, [r0]
 875              	.LVL57:
 876 004c 0A68     		ldr	r2, [r1]
 877 004e 42F4E022 		orr	r2, r2, #458752
 878 0052 0A60     		str	r2, [r1]
1151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 879              		.loc 1 1151 0
 880 0054 1846     		mov	r0, r3
 881              	.LVL58:
 882 0056 7047     		bx	lr
 883              	.LVL59:
 884              	.L52:
1184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       status = HAL_ERROR;
 885              		.loc 1 1184 0
 886 0058 436C     		ldr	r3, [r0, #68]
 887 005a 43F00803 		orr	r3, r3, #8
 888 005e 4364     		str	r3, [r0, #68]
 889              	.LVL60:
1188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     }
 890              		.loc 1 1188 0
 891 0060 0023     		movs	r3, #0
 892 0062 80F84030 		strb	r3, [r0, #64]
1185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 893              		.loc 1 1185 0
 894 0066 0120     		movs	r0, #1
 895              	.LVL61:
 896 0068 7047     		bx	lr
 897              	.LVL62:
ARM GAS  /tmp/ccMXllgx.s 			page 67


 898              	.L51:
1196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
 899              		.loc 1 1196 0
 900 006a 0023     		movs	r3, #0
 901 006c 80F84030 		strb	r3, [r0, #64]
1193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 902              		.loc 1 1193 0
 903 0070 0220     		movs	r0, #2
 904              	.LVL63:
 905 0072 7047     		bx	lr
 906              	.LVL64:
 907              	.L53:
1154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 908              		.loc 1 1154 0
 909 0074 0220     		movs	r0, #2
 910              	.LVL65:
1200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 911              		.loc 1 1200 0
 912 0076 7047     		bx	lr
 913              		.cfi_endproc
 914              	.LFE150:
 916              		.section	.text.HAL_QSPI_Receive_IT,"ax",%progbits
 917              		.align	1
 918              		.global	HAL_QSPI_Receive_IT
 919              		.syntax unified
 920              		.thumb
 921              		.thumb_func
 922              		.fpu fpv5-sp-d16
 924              	HAL_QSPI_Receive_IT:
 925              	.LFB151:
1210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   HAL_StatusTypeDef status = HAL_OK;
 926              		.loc 1 1210 0
 927              		.cfi_startproc
 928              		@ args = 0, pretend = 0, frame = 0
 929              		@ frame_needed = 0, uses_anonymous_args = 0
 930              		@ link register save eliminated.
 931              	.LVL66:
 932 0000 10B4     		push	{r4}
 933              	.LCFI14:
 934              		.cfi_def_cfa_offset 4
 935              		.cfi_offset 4, -4
 936              	.LVL67:
1212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 937              		.loc 1 1212 0
 938 0002 0268     		ldr	r2, [r0]
 939 0004 9469     		ldr	r4, [r2, #24]
 940              	.LVL68:
1215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 941              		.loc 1 1215 0
 942 0006 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 943 000a DBB2     		uxtb	r3, r3
 944 000c 012B     		cmp	r3, #1
 945 000e 39D0     		beq	.L58
1215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 946              		.loc 1 1215 0 is_stmt 0 discriminator 2
 947 0010 0123     		movs	r3, #1
 948 0012 80F84030 		strb	r3, [r0, #64]
ARM GAS  /tmp/ccMXllgx.s 			page 68


1217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
 949              		.loc 1 1217 0 is_stmt 1 discriminator 2
 950 0016 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 951 001a DBB2     		uxtb	r3, r3
 952 001c 012B     		cmp	r3, #1
 953 001e 2AD1     		bne	.L56
1219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 954              		.loc 1 1219 0
 955 0020 0023     		movs	r3, #0
 956 0022 4364     		str	r3, [r0, #68]
1221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     {
 957              		.loc 1 1221 0
 958 0024 F1B1     		cbz	r1, .L57
1224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 959              		.loc 1 1224 0
 960 0026 2223     		movs	r3, #34
 961 0028 80F84130 		strb	r3, [r0, #65]
1227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 962              		.loc 1 1227 0
 963 002c 1369     		ldr	r3, [r2, #16]
 964 002e 0133     		adds	r3, r3, #1
 965 0030 8363     		str	r3, [r0, #56]
1228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       hqspi->pRxBuffPtr = pData;
 966              		.loc 1 1228 0
 967 0032 1369     		ldr	r3, [r2, #16]
 968 0034 0133     		adds	r3, r3, #1
 969 0036 4363     		str	r3, [r0, #52]
1229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 970              		.loc 1 1229 0
 971 0038 0163     		str	r1, [r0, #48]
1232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 972              		.loc 1 1232 0
 973 003a 0323     		movs	r3, #3
 974 003c D360     		str	r3, [r2, #12]
1235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 975              		.loc 1 1235 0
 976 003e 0268     		ldr	r2, [r0]
 977 0040 5369     		ldr	r3, [r2, #20]
 978 0042 23F04063 		bic	r3, r3, #201326592
 979 0046 43F08063 		orr	r3, r3, #67108864
 980 004a 5361     		str	r3, [r2, #20]
1238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 981              		.loc 1 1238 0
 982 004c 0368     		ldr	r3, [r0]
 983 004e 9C61     		str	r4, [r3, #24]
1241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 984              		.loc 1 1241 0
 985 0050 0023     		movs	r3, #0
 986 0052 80F84030 		strb	r3, [r0, #64]
1244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     }
 987              		.loc 1 1244 0
 988 0056 0168     		ldr	r1, [r0]
 989              	.LVL69:
 990 0058 0A68     		ldr	r2, [r1]
 991 005a 42F4E022 		orr	r2, r2, #458752
 992 005e 0A60     		str	r2, [r1]
1211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   uint32_t addr_reg = READ_REG(hqspi->Instance->AR);
ARM GAS  /tmp/ccMXllgx.s 			page 69


 993              		.loc 1 1211 0
 994 0060 1846     		mov	r0, r3
 995              	.LVL70:
 996 0062 0CE0     		b	.L55
 997              	.LVL71:
 998              	.L57:
1248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       status = HAL_ERROR;
 999              		.loc 1 1248 0
 1000 0064 436C     		ldr	r3, [r0, #68]
 1001 0066 43F00803 		orr	r3, r3, #8
 1002 006a 4364     		str	r3, [r0, #68]
 1003              	.LVL72:
1252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     }
 1004              		.loc 1 1252 0
 1005 006c 0023     		movs	r3, #0
 1006 006e 80F84030 		strb	r3, [r0, #64]
1249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1007              		.loc 1 1249 0
 1008 0072 0120     		movs	r0, #1
 1009              	.LVL73:
 1010 0074 03E0     		b	.L55
 1011              	.LVL74:
 1012              	.L56:
1260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
 1013              		.loc 1 1260 0
 1014 0076 0023     		movs	r3, #0
 1015 0078 80F84030 		strb	r3, [r0, #64]
1257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1016              		.loc 1 1257 0
 1017 007c 0220     		movs	r0, #2
 1018              	.LVL75:
 1019              	.L55:
1264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1020              		.loc 1 1264 0
 1021 007e 5DF8044B 		ldr	r4, [sp], #4
 1022              	.LCFI15:
 1023              		.cfi_remember_state
 1024              		.cfi_restore 4
 1025              		.cfi_def_cfa_offset 0
 1026              	.LVL76:
 1027 0082 7047     		bx	lr
 1028              	.LVL77:
 1029              	.L58:
 1030              	.LCFI16:
 1031              		.cfi_restore_state
1215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1032              		.loc 1 1215 0
 1033 0084 0220     		movs	r0, #2
 1034              	.LVL78:
 1035 0086 FAE7     		b	.L55
 1036              		.cfi_endproc
 1037              	.LFE151:
 1039              		.section	.text.HAL_QSPI_Transmit_DMA,"ax",%progbits
 1040              		.align	1
 1041              		.global	HAL_QSPI_Transmit_DMA
 1042              		.syntax unified
 1043              		.thumb
ARM GAS  /tmp/ccMXllgx.s 			page 70


 1044              		.thumb_func
 1045              		.fpu fpv5-sp-d16
 1047              	HAL_QSPI_Transmit_DMA:
 1048              	.LFB152:
1278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   HAL_StatusTypeDef status = HAL_OK;
 1049              		.loc 1 1278 0
 1050              		.cfi_startproc
 1051              		@ args = 0, pretend = 0, frame = 0
 1052              		@ frame_needed = 0, uses_anonymous_args = 0
 1053              	.LVL79:
1280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1054              		.loc 1 1280 0
 1055 0000 0368     		ldr	r3, [r0]
 1056 0002 1A69     		ldr	r2, [r3, #16]
 1057              	.LVL80:
1283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1058              		.loc 1 1283 0
 1059 0004 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 1060 0008 DBB2     		uxtb	r3, r3
 1061 000a 012B     		cmp	r3, #1
 1062 000c 00F09880 		beq	.L72
 1063 0010 0132     		adds	r2, r2, #1
 1064              	.LVL81:
1283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1065              		.loc 1 1283 0 is_stmt 0 discriminator 2
 1066 0012 0123     		movs	r3, #1
 1067 0014 80F84030 		strb	r3, [r0, #64]
1285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
 1068              		.loc 1 1285 0 is_stmt 1 discriminator 2
 1069 0018 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 1070 001c DBB2     		uxtb	r3, r3
 1071 001e 012B     		cmp	r3, #1
 1072 0020 40F08880 		bne	.L62
1288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1073              		.loc 1 1288 0
 1074 0024 0023     		movs	r3, #0
 1075 0026 4364     		str	r3, [r0, #68]
1290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     {
 1076              		.loc 1 1290 0
 1077 0028 0029     		cmp	r1, #0
 1078 002a 7AD0     		beq	.L63
1293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       {
 1079              		.loc 1 1293 0
 1080 002c C36B     		ldr	r3, [r0, #60]
 1081 002e 5B69     		ldr	r3, [r3, #20]
 1082 0030 002B     		cmp	r3, #0
 1083 0032 3FD1     		bne	.L64
1295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       }
 1084              		.loc 1 1295 0
 1085 0034 C262     		str	r2, [r0, #44]
 1086              	.LVL82:
 1087              	.L65:
1278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   HAL_StatusTypeDef status = HAL_OK;
 1088              		.loc 1 1278 0
 1089 0036 10B5     		push	{r4, lr}
 1090              	.LCFI17:
 1091              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccMXllgx.s 			page 71


 1092              		.cfi_offset 4, -8
 1093              		.cfi_offset 14, -4
 1094 0038 0446     		mov	r4, r0
1339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1095              		.loc 1 1339 0
 1096 003a 1223     		movs	r3, #18
 1097 003c 80F84130 		strb	r3, [r0, #65]
1342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1098              		.loc 1 1342 0
 1099 0040 0368     		ldr	r3, [r0]
 1100 0042 0322     		movs	r2, #3
 1101 0044 DA60     		str	r2, [r3, #12]
1345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         hqspi->pTxBuffPtr = pData;
 1102              		.loc 1 1345 0
 1103 0046 C36A     		ldr	r3, [r0, #44]
 1104 0048 8362     		str	r3, [r0, #40]
1346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1105              		.loc 1 1346 0
 1106 004a 4162     		str	r1, [r0, #36]
1349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1107              		.loc 1 1349 0
 1108 004c 0268     		ldr	r2, [r0]
 1109 004e 5369     		ldr	r3, [r2, #20]
 1110 0050 23F04063 		bic	r3, r3, #201326592
 1111 0054 5361     		str	r3, [r2, #20]
1352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1112              		.loc 1 1352 0
 1113 0056 C36B     		ldr	r3, [r0, #60]
 1114 0058 3A4A     		ldr	r2, .L77
 1115 005a DA63     		str	r2, [r3, #60]
1355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1116              		.loc 1 1355 0
 1117 005c C36B     		ldr	r3, [r0, #60]
 1118 005e 3A4A     		ldr	r2, .L77+4
 1119 0060 1A64     		str	r2, [r3, #64]
1358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1120              		.loc 1 1358 0
 1121 0062 C36B     		ldr	r3, [r0, #60]
 1122 0064 394A     		ldr	r2, .L77+8
 1123 0066 DA64     		str	r2, [r3, #76]
1361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1124              		.loc 1 1361 0
 1125 0068 C36B     		ldr	r3, [r0, #60]
 1126 006a 0022     		movs	r2, #0
 1127 006c 1A65     		str	r2, [r3, #80]
1364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         MODIFY_REG(hqspi->hdma->Instance->CR, DMA_SxCR_DIR, hqspi->hdma->Init.Direction);
 1128              		.loc 1 1364 0
 1129 006e C36B     		ldr	r3, [r0, #60]
 1130 0070 4022     		movs	r2, #64
 1131 0072 9A60     		str	r2, [r3, #8]
1365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1132              		.loc 1 1365 0
 1133 0074 C06B     		ldr	r0, [r0, #60]
 1134              	.LVL83:
 1135 0076 0268     		ldr	r2, [r0]
 1136 0078 1368     		ldr	r3, [r2]
 1137 007a 23F0C003 		bic	r3, r3, #192
ARM GAS  /tmp/ccMXllgx.s 			page 72


 1138 007e 8068     		ldr	r0, [r0, #8]
 1139 0080 0343     		orrs	r3, r3, r0
 1140 0082 1360     		str	r3, [r2]
1368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         {
 1141              		.loc 1 1368 0
 1142 0084 2268     		ldr	r2, [r4]
 1143 0086 A36A     		ldr	r3, [r4, #40]
 1144 0088 2032     		adds	r2, r2, #32
 1145 008a E06B     		ldr	r0, [r4, #60]
 1146 008c FFF7FEFF 		bl	HAL_DMA_Start_IT
 1147              	.LVL84:
 1148 0090 0346     		mov	r3, r0
 1149 0092 0028     		cmp	r0, #0
 1150 0094 3AD1     		bne	.L71
1371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           
 1151              		.loc 1 1371 0
 1152 0096 0022     		movs	r2, #0
 1153 0098 84F84020 		strb	r2, [r4, #64]
1374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           
 1154              		.loc 1 1374 0
 1155 009c 2168     		ldr	r1, [r4]
 1156 009e 0A68     		ldr	r2, [r1]
 1157 00a0 42F48032 		orr	r2, r2, #65536
 1158 00a4 0A60     		str	r2, [r1]
1377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         }
 1159              		.loc 1 1377 0
 1160 00a6 2168     		ldr	r1, [r4]
 1161 00a8 0A68     		ldr	r2, [r1]
 1162 00aa 42F00402 		orr	r2, r2, #4
 1163 00ae 0A60     		str	r2, [r1]
 1164              	.LVL85:
 1165              	.L61:
1408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1166              		.loc 1 1408 0
 1167 00b0 1846     		mov	r0, r3
 1168 00b2 10BD     		pop	{r4, pc}
 1169              	.LVL86:
 1170              	.L64:
 1171              	.LCFI18:
 1172              		.cfi_def_cfa_offset 0
 1173              		.cfi_restore 4
 1174              		.cfi_restore 14
1297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       {
 1175              		.loc 1 1297 0
 1176 00b4 B3F5006F 		cmp	r3, #2048
 1177 00b8 0CD0     		beq	.L76
1314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       {
 1178              		.loc 1 1314 0
 1179 00ba B3F5805F 		cmp	r3, #4096
 1180 00be BAD1     		bne	.L65
1316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         {
 1181              		.loc 1 1316 0
 1182 00c0 12F0030F 		tst	r2, #3
 1183 00c4 19D1     		bne	.L69
1316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         {
 1184              		.loc 1 1316 0 is_stmt 0 discriminator 1
 1185 00c6 8368     		ldr	r3, [r0, #8]
ARM GAS  /tmp/ccMXllgx.s 			page 73


 1186 00c8 13F0030F 		tst	r3, #3
 1187 00cc 15D1     		bne	.L69
1328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         }
 1188              		.loc 1 1328 0 is_stmt 1
 1189 00ce 9208     		lsrs	r2, r2, #2
 1190              	.LVL87:
 1191 00d0 C262     		str	r2, [r0, #44]
 1192 00d2 B0E7     		b	.L65
 1193              	.LVL88:
 1194              	.L76:
1299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         {
 1195              		.loc 1 1299 0
 1196 00d4 12F0010F 		tst	r2, #1
 1197 00d8 06D1     		bne	.L67
1299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         {
 1198              		.loc 1 1299 0 is_stmt 0 discriminator 1
 1199 00da 8368     		ldr	r3, [r0, #8]
 1200 00dc 13F0010F 		tst	r3, #1
 1201 00e0 02D1     		bne	.L67
1311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         }
 1202              		.loc 1 1311 0 is_stmt 1
 1203 00e2 5208     		lsrs	r2, r2, #1
 1204              	.LVL89:
 1205 00e4 C262     		str	r2, [r0, #44]
 1206 00e6 A6E7     		b	.L65
 1207              	.LVL90:
 1208              	.L67:
1303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           status = HAL_ERROR;
 1209              		.loc 1 1303 0
 1210 00e8 436C     		ldr	r3, [r0, #68]
 1211 00ea 43F00803 		orr	r3, r3, #8
 1212 00ee 4364     		str	r3, [r0, #68]
 1213              	.LVL91:
1307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         }
 1214              		.loc 1 1307 0
 1215 00f0 0023     		movs	r3, #0
 1216 00f2 80F84030 		strb	r3, [r0, #64]
1304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1217              		.loc 1 1304 0
 1218 00f6 0123     		movs	r3, #1
 1219 00f8 20E0     		b	.L74
 1220              	.LVL92:
 1221              	.L69:
1320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           status = HAL_ERROR;
 1222              		.loc 1 1320 0
 1223 00fa 436C     		ldr	r3, [r0, #68]
 1224 00fc 43F00803 		orr	r3, r3, #8
 1225 0100 4364     		str	r3, [r0, #68]
 1226              	.LVL93:
1324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         }
 1227              		.loc 1 1324 0
 1228 0102 0023     		movs	r3, #0
 1229 0104 80F84030 		strb	r3, [r0, #64]
1321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1230              		.loc 1 1321 0
 1231 0108 0123     		movs	r3, #1
 1232 010a 17E0     		b	.L74
ARM GAS  /tmp/ccMXllgx.s 			page 74


 1233              	.LVL94:
 1234              	.L71:
 1235              	.LCFI19:
 1236              		.cfi_def_cfa_offset 8
 1237              		.cfi_offset 4, -8
 1238              		.cfi_offset 14, -4
1382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           hqspi->State = HAL_QSPI_STATE_READY;
 1239              		.loc 1 1382 0
 1240 010c 636C     		ldr	r3, [r4, #68]
 1241 010e 43F00403 		orr	r3, r3, #4
 1242 0112 6364     		str	r3, [r4, #68]
1383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1243              		.loc 1 1383 0
 1244 0114 0123     		movs	r3, #1
 1245 0116 84F84130 		strb	r3, [r4, #65]
1386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         }
 1246              		.loc 1 1386 0
 1247 011a 0022     		movs	r2, #0
 1248 011c 84F84020 		strb	r2, [r4, #64]
 1249 0120 C6E7     		b	.L61
 1250              	.LVL95:
 1251              	.L63:
 1252              	.LCFI20:
 1253              		.cfi_def_cfa_offset 0
 1254              		.cfi_restore 4
 1255              		.cfi_restore 14
1392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       status = HAL_ERROR;
 1256              		.loc 1 1392 0
 1257 0122 436C     		ldr	r3, [r0, #68]
 1258 0124 43F00803 		orr	r3, r3, #8
 1259 0128 4364     		str	r3, [r0, #68]
 1260              	.LVL96:
1396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     }
 1261              		.loc 1 1396 0
 1262 012a 0023     		movs	r3, #0
 1263 012c 80F84030 		strb	r3, [r0, #64]
1393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1264              		.loc 1 1393 0
 1265 0130 0123     		movs	r3, #1
 1266 0132 03E0     		b	.L74
 1267              	.LVL97:
 1268              	.L62:
1404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
 1269              		.loc 1 1404 0
 1270 0134 0023     		movs	r3, #0
 1271 0136 80F84030 		strb	r3, [r0, #64]
1401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1272              		.loc 1 1401 0
 1273 013a 0223     		movs	r3, #2
 1274              	.LVL98:
 1275              	.L74:
1408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1276              		.loc 1 1408 0
 1277 013c 1846     		mov	r0, r3
 1278              	.LVL99:
 1279 013e 7047     		bx	lr
 1280              	.LVL100:
ARM GAS  /tmp/ccMXllgx.s 			page 75


 1281              	.L72:
1283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1282              		.loc 1 1283 0
 1283 0140 0223     		movs	r3, #2
 1284 0142 FBE7     		b	.L74
 1285              	.L78:
 1286              		.align	2
 1287              	.L77:
 1288 0144 00000000 		.word	QSPI_DMATxCplt
 1289 0148 00000000 		.word	QSPI_DMATxHalfCplt
 1290 014c 00000000 		.word	QSPI_DMAError
 1291              		.cfi_endproc
 1292              	.LFE152:
 1294              		.section	.text.HAL_QSPI_Receive_DMA,"ax",%progbits
 1295              		.align	1
 1296              		.global	HAL_QSPI_Receive_DMA
 1297              		.syntax unified
 1298              		.thumb
 1299              		.thumb_func
 1300              		.fpu fpv5-sp-d16
 1302              	HAL_QSPI_Receive_DMA:
 1303              	.LFB153:
1422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   HAL_StatusTypeDef status = HAL_OK;
 1304              		.loc 1 1422 0
 1305              		.cfi_startproc
 1306              		@ args = 0, pretend = 0, frame = 0
 1307              		@ frame_needed = 0, uses_anonymous_args = 0
 1308              	.LVL101:
 1309 0000 38B5     		push	{r3, r4, r5, lr}
 1310              	.LCFI21:
 1311              		.cfi_def_cfa_offset 16
 1312              		.cfi_offset 3, -16
 1313              		.cfi_offset 4, -12
 1314              		.cfi_offset 5, -8
 1315              		.cfi_offset 14, -4
 1316              	.LVL102:
1424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   uint32_t data_size = (READ_REG(hqspi->Instance->DLR) + 1U);
 1317              		.loc 1 1424 0
 1318 0002 0368     		ldr	r3, [r0]
 1319 0004 9D69     		ldr	r5, [r3, #24]
 1320              	.LVL103:
1425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1321              		.loc 1 1425 0
 1322 0006 1C69     		ldr	r4, [r3, #16]
 1323              	.LVL104:
1428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1324              		.loc 1 1428 0
 1325 0008 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 1326 000c DBB2     		uxtb	r3, r3
 1327 000e 012B     		cmp	r3, #1
 1328 0010 00F09A80 		beq	.L91
 1329 0014 0134     		adds	r4, r4, #1
 1330              	.LVL105:
1428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1331              		.loc 1 1428 0 is_stmt 0 discriminator 2
 1332 0016 0123     		movs	r3, #1
 1333 0018 80F84030 		strb	r3, [r0, #64]
ARM GAS  /tmp/ccMXllgx.s 			page 76


1430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
 1334              		.loc 1 1430 0 is_stmt 1 discriminator 2
 1335 001c 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 1336 0020 DBB2     		uxtb	r3, r3
 1337 0022 012B     		cmp	r3, #1
 1338 0024 40F08A80 		bne	.L81
1433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1339              		.loc 1 1433 0
 1340 0028 0023     		movs	r3, #0
 1341 002a 4364     		str	r3, [r0, #68]
1435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     {
 1342              		.loc 1 1435 0
 1343 002c 0029     		cmp	r1, #0
 1344 002e 7CD0     		beq	.L82
1438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       {
 1345              		.loc 1 1438 0
 1346 0030 C36B     		ldr	r3, [r0, #60]
 1347 0032 5B69     		ldr	r3, [r3, #20]
 1348 0034 002B     		cmp	r3, #0
 1349 0036 41D1     		bne	.L83
1440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       }
 1350              		.loc 1 1440 0
 1351 0038 8463     		str	r4, [r0, #56]
 1352              	.LVL106:
 1353              	.L84:
 1354 003a 0A46     		mov	r2, r1
 1355 003c 0446     		mov	r4, r0
1484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1356              		.loc 1 1484 0
 1357 003e 2223     		movs	r3, #34
 1358 0040 80F84130 		strb	r3, [r0, #65]
1487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1359              		.loc 1 1487 0
 1360 0044 0368     		ldr	r3, [r0]
 1361 0046 0321     		movs	r1, #3
 1362              	.LVL107:
 1363 0048 D960     		str	r1, [r3, #12]
1490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         hqspi->pRxBuffPtr = pData;
 1364              		.loc 1 1490 0
 1365 004a 836B     		ldr	r3, [r0, #56]
 1366 004c 4363     		str	r3, [r0, #52]
1491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1367              		.loc 1 1491 0
 1368 004e 0263     		str	r2, [r0, #48]
1494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1369              		.loc 1 1494 0
 1370 0050 C36B     		ldr	r3, [r0, #60]
 1371 0052 3E49     		ldr	r1, .L94
 1372 0054 D963     		str	r1, [r3, #60]
1497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1373              		.loc 1 1497 0
 1374 0056 C36B     		ldr	r3, [r0, #60]
 1375 0058 3D49     		ldr	r1, .L94+4
 1376 005a 1964     		str	r1, [r3, #64]
1500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1377              		.loc 1 1500 0
 1378 005c C36B     		ldr	r3, [r0, #60]
ARM GAS  /tmp/ccMXllgx.s 			page 77


 1379 005e 3D49     		ldr	r1, .L94+8
 1380 0060 D964     		str	r1, [r3, #76]
1503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1381              		.loc 1 1503 0
 1382 0062 C16B     		ldr	r1, [r0, #60]
 1383 0064 0023     		movs	r3, #0
 1384 0066 0B65     		str	r3, [r1, #80]
1506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         MODIFY_REG(hqspi->hdma->Instance->CR, DMA_SxCR_DIR, hqspi->hdma->Init.Direction);
 1385              		.loc 1 1506 0
 1386 0068 C16B     		ldr	r1, [r0, #60]
 1387 006a 8B60     		str	r3, [r1, #8]
1507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1388              		.loc 1 1507 0
 1389 006c C06B     		ldr	r0, [r0, #60]
 1390              	.LVL108:
 1391 006e 0168     		ldr	r1, [r0]
 1392 0070 0B68     		ldr	r3, [r1]
 1393 0072 23F0C003 		bic	r3, r3, #192
 1394 0076 8068     		ldr	r0, [r0, #8]
 1395 0078 0343     		orrs	r3, r3, r0
 1396 007a 0B60     		str	r3, [r1]
1510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         {
 1397              		.loc 1 1510 0
 1398 007c 2168     		ldr	r1, [r4]
 1399 007e 636B     		ldr	r3, [r4, #52]
 1400 0080 2031     		adds	r1, r1, #32
 1401 0082 E06B     		ldr	r0, [r4, #60]
 1402 0084 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1403              	.LVL109:
 1404 0088 0346     		mov	r3, r0
 1405 008a 0028     		cmp	r0, #0
 1406 008c 42D1     		bne	.L90
1513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1407              		.loc 1 1513 0
 1408 008e 2168     		ldr	r1, [r4]
 1409 0090 4A69     		ldr	r2, [r1, #20]
 1410 0092 22F04062 		bic	r2, r2, #201326592
 1411 0096 42F08062 		orr	r2, r2, #67108864
 1412 009a 4A61     		str	r2, [r1, #20]
1516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1413              		.loc 1 1516 0
 1414 009c 2268     		ldr	r2, [r4]
 1415 009e 9561     		str	r5, [r2, #24]
1519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           
 1416              		.loc 1 1519 0
 1417 00a0 0022     		movs	r2, #0
 1418 00a2 84F84020 		strb	r2, [r4, #64]
1522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           
 1419              		.loc 1 1522 0
 1420 00a6 2168     		ldr	r1, [r4]
 1421 00a8 0A68     		ldr	r2, [r1]
 1422 00aa 42F48032 		orr	r2, r2, #65536
 1423 00ae 0A60     		str	r2, [r1]
1525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         }
 1424              		.loc 1 1525 0
 1425 00b0 2168     		ldr	r1, [r4]
 1426 00b2 0A68     		ldr	r2, [r1]
ARM GAS  /tmp/ccMXllgx.s 			page 78


 1427 00b4 42F00402 		orr	r2, r2, #4
 1428 00b8 0A60     		str	r2, [r1]
 1429 00ba 43E0     		b	.L80
 1430              	.LVL110:
 1431              	.L83:
1442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       {
 1432              		.loc 1 1442 0
 1433 00bc B3F5006F 		cmp	r3, #2048
 1434 00c0 0CD0     		beq	.L93
1459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       {
 1435              		.loc 1 1459 0
 1436 00c2 B3F5805F 		cmp	r3, #4096
 1437 00c6 B8D1     		bne	.L84
1461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         {
 1438              		.loc 1 1461 0
 1439 00c8 14F0030F 		tst	r4, #3
 1440 00cc 19D1     		bne	.L88
1461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         {
 1441              		.loc 1 1461 0 is_stmt 0 discriminator 1
 1442 00ce 8368     		ldr	r3, [r0, #8]
 1443 00d0 13F0030F 		tst	r3, #3
 1444 00d4 15D1     		bne	.L88
1473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         }
 1445              		.loc 1 1473 0 is_stmt 1
 1446 00d6 A408     		lsrs	r4, r4, #2
 1447              	.LVL111:
 1448 00d8 8463     		str	r4, [r0, #56]
 1449 00da AEE7     		b	.L84
 1450              	.LVL112:
 1451              	.L93:
1444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         {
 1452              		.loc 1 1444 0
 1453 00dc 14F0010F 		tst	r4, #1
 1454 00e0 06D1     		bne	.L86
1444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         {
 1455              		.loc 1 1444 0 is_stmt 0 discriminator 1
 1456 00e2 8368     		ldr	r3, [r0, #8]
 1457 00e4 13F0010F 		tst	r3, #1
 1458 00e8 02D1     		bne	.L86
1456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         }
 1459              		.loc 1 1456 0 is_stmt 1
 1460 00ea 6408     		lsrs	r4, r4, #1
 1461              	.LVL113:
 1462 00ec 8463     		str	r4, [r0, #56]
 1463 00ee A4E7     		b	.L84
 1464              	.LVL114:
 1465              	.L86:
1448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           status = HAL_ERROR;
 1466              		.loc 1 1448 0
 1467 00f0 436C     		ldr	r3, [r0, #68]
 1468 00f2 43F00803 		orr	r3, r3, #8
 1469 00f6 4364     		str	r3, [r0, #68]
 1470              	.LVL115:
1452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         }
 1471              		.loc 1 1452 0
 1472 00f8 0023     		movs	r3, #0
 1473 00fa 80F84030 		strb	r3, [r0, #64]
ARM GAS  /tmp/ccMXllgx.s 			page 79


1449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1474              		.loc 1 1449 0
 1475 00fe 0123     		movs	r3, #1
 1476 0100 20E0     		b	.L80
 1477              	.LVL116:
 1478              	.L88:
1465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           status = HAL_ERROR;
 1479              		.loc 1 1465 0
 1480 0102 436C     		ldr	r3, [r0, #68]
 1481 0104 43F00803 		orr	r3, r3, #8
 1482 0108 4364     		str	r3, [r0, #68]
 1483              	.LVL117:
1469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         }
 1484              		.loc 1 1469 0
 1485 010a 0023     		movs	r3, #0
 1486 010c 80F84030 		strb	r3, [r0, #64]
1466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1487              		.loc 1 1466 0
 1488 0110 0123     		movs	r3, #1
 1489 0112 17E0     		b	.L80
 1490              	.LVL118:
 1491              	.L90:
1530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           hqspi->State = HAL_QSPI_STATE_READY;
 1492              		.loc 1 1530 0
 1493 0114 636C     		ldr	r3, [r4, #68]
 1494 0116 43F00403 		orr	r3, r3, #4
 1495 011a 6364     		str	r3, [r4, #68]
1531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1496              		.loc 1 1531 0
 1497 011c 0123     		movs	r3, #1
 1498 011e 84F84130 		strb	r3, [r4, #65]
1534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         }
 1499              		.loc 1 1534 0
 1500 0122 0022     		movs	r2, #0
 1501 0124 84F84020 		strb	r2, [r4, #64]
 1502 0128 0CE0     		b	.L80
 1503              	.LVL119:
 1504              	.L82:
1540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       status = HAL_ERROR;
 1505              		.loc 1 1540 0
 1506 012a 436C     		ldr	r3, [r0, #68]
 1507 012c 43F00803 		orr	r3, r3, #8
 1508 0130 4364     		str	r3, [r0, #68]
 1509              	.LVL120:
1544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     }
 1510              		.loc 1 1544 0
 1511 0132 0023     		movs	r3, #0
 1512 0134 80F84030 		strb	r3, [r0, #64]
1541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1513              		.loc 1 1541 0
 1514 0138 0123     		movs	r3, #1
 1515 013a 03E0     		b	.L80
 1516              	.LVL121:
 1517              	.L81:
1552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
 1518              		.loc 1 1552 0
 1519 013c 0023     		movs	r3, #0
ARM GAS  /tmp/ccMXllgx.s 			page 80


 1520 013e 80F84030 		strb	r3, [r0, #64]
1549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1521              		.loc 1 1549 0
 1522 0142 0223     		movs	r3, #2
 1523              	.LVL122:
 1524              	.L80:
1556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1525              		.loc 1 1556 0
 1526 0144 1846     		mov	r0, r3
 1527 0146 38BD     		pop	{r3, r4, r5, pc}
 1528              	.LVL123:
 1529              	.L91:
1428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1530              		.loc 1 1428 0
 1531 0148 0223     		movs	r3, #2
 1532 014a FBE7     		b	.L80
 1533              	.L95:
 1534              		.align	2
 1535              	.L94:
 1536 014c 00000000 		.word	QSPI_DMARxCplt
 1537 0150 00000000 		.word	QSPI_DMARxHalfCplt
 1538 0154 00000000 		.word	QSPI_DMAError
 1539              		.cfi_endproc
 1540              	.LFE153:
 1542              		.section	.text.HAL_QSPI_AutoPolling,"ax",%progbits
 1543              		.align	1
 1544              		.global	HAL_QSPI_AutoPolling
 1545              		.syntax unified
 1546              		.thumb
 1547              		.thumb_func
 1548              		.fpu fpv5-sp-d16
 1550              	HAL_QSPI_AutoPolling:
 1551              	.LFB154:
1568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   HAL_StatusTypeDef status;
 1552              		.loc 1 1568 0
 1553              		.cfi_startproc
 1554              		@ args = 0, pretend = 0, frame = 0
 1555              		@ frame_needed = 0, uses_anonymous_args = 0
 1556              	.LVL124:
 1557 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1558              	.LCFI22:
 1559              		.cfi_def_cfa_offset 24
 1560              		.cfi_offset 4, -24
 1561              		.cfi_offset 5, -20
 1562              		.cfi_offset 6, -16
 1563              		.cfi_offset 7, -12
 1564              		.cfi_offset 8, -8
 1565              		.cfi_offset 14, -4
 1566 0004 82B0     		sub	sp, sp, #8
 1567              	.LCFI23:
 1568              		.cfi_def_cfa_offset 32
 1569 0006 0446     		mov	r4, r0
 1570 0008 8846     		mov	r8, r1
 1571 000a 1546     		mov	r5, r2
 1572 000c 1F46     		mov	r7, r3
1570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1573              		.loc 1 1570 0
ARM GAS  /tmp/ccMXllgx.s 			page 81


 1574 000e FFF7FEFF 		bl	HAL_GetTick
 1575              	.LVL125:
1603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1576              		.loc 1 1603 0
 1577 0012 94F84030 		ldrb	r3, [r4, #64]	@ zero_extendqisi2
 1578 0016 DBB2     		uxtb	r3, r3
 1579 0018 012B     		cmp	r3, #1
 1580 001a 4AD0     		beq	.L99
 1581 001c 0646     		mov	r6, r0
1603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1582              		.loc 1 1603 0 is_stmt 0 discriminator 2
 1583 001e 0123     		movs	r3, #1
 1584 0020 84F84030 		strb	r3, [r4, #64]
1605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
 1585              		.loc 1 1605 0 is_stmt 1 discriminator 2
 1586 0024 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 1587 0028 DBB2     		uxtb	r3, r3
 1588 002a 012B     		cmp	r3, #1
 1589 002c 07D0     		beq	.L102
1649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
 1590              		.loc 1 1649 0
 1591 002e 0223     		movs	r3, #2
 1592              	.LVL126:
 1593              	.L98:
1653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1594              		.loc 1 1653 0
 1595 0030 0022     		movs	r2, #0
 1596 0032 84F84020 		strb	r2, [r4, #64]
 1597              	.LVL127:
 1598              	.L97:
1657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1599              		.loc 1 1657 0
 1600 0036 1846     		mov	r0, r3
 1601 0038 02B0     		add	sp, sp, #8
 1602              	.LCFI24:
 1603              		.cfi_remember_state
 1604              		.cfi_def_cfa_offset 24
 1605              		@ sp needed
 1606 003a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1607              	.LVL128:
 1608              	.L102:
 1609              	.LCFI25:
 1610              		.cfi_restore_state
1607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1611              		.loc 1 1607 0
 1612 003e 0022     		movs	r2, #0
 1613 0040 6264     		str	r2, [r4, #68]
1610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1614              		.loc 1 1610 0
 1615 0042 4223     		movs	r3, #66
 1616 0044 84F84130 		strb	r3, [r4, #65]
1613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1617              		.loc 1 1613 0
 1618 0048 0097     		str	r7, [sp]
 1619 004a 0346     		mov	r3, r0
 1620 004c 2021     		movs	r1, #32
 1621 004e 2046     		mov	r0, r4
ARM GAS  /tmp/ccMXllgx.s 			page 82


 1622              	.LVL129:
 1623 0050 FFF7FEFF 		bl	QSPI_WaitFlagStateUntilTimeout
 1624              	.LVL130:
1615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     {
 1625              		.loc 1 1615 0
 1626 0054 0346     		mov	r3, r0
 1627 0056 0028     		cmp	r0, #0
 1628 0058 EAD1     		bne	.L98
1618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1629              		.loc 1 1618 0
 1630 005a 2368     		ldr	r3, [r4]
 1631 005c 2A68     		ldr	r2, [r5]
 1632 005e 9A62     		str	r2, [r3, #40]
1621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1633              		.loc 1 1621 0
 1634 0060 2368     		ldr	r3, [r4]
 1635 0062 6A68     		ldr	r2, [r5, #4]
 1636 0064 5A62     		str	r2, [r3, #36]
1624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1637              		.loc 1 1624 0
 1638 0066 2368     		ldr	r3, [r4]
 1639 0068 AA68     		ldr	r2, [r5, #8]
 1640 006a DA62     		str	r2, [r3, #44]
1628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****                (cfg->MatchMode | QSPI_AUTOMATIC_STOP_ENABLE));
 1641              		.loc 1 1628 0
 1642 006c 2268     		ldr	r2, [r4]
 1643 006e 1368     		ldr	r3, [r2]
 1644 0070 23F44003 		bic	r3, r3, #12582912
 1645 0074 2969     		ldr	r1, [r5, #16]
 1646 0076 0B43     		orrs	r3, r3, r1
 1647 0078 43F48003 		orr	r3, r3, #4194304
 1648 007c 1360     		str	r3, [r2]
1632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_AUTO_POLLING);
 1649              		.loc 1 1632 0
 1650 007e EB68     		ldr	r3, [r5, #12]
 1651 0080 C8F82830 		str	r3, [r8, #40]
1633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1652              		.loc 1 1633 0
 1653 0084 4FF00062 		mov	r2, #134217728
 1654 0088 4146     		mov	r1, r8
 1655 008a 2046     		mov	r0, r4
 1656              	.LVL131:
 1657 008c FFF7FEFF 		bl	QSPI_Config
 1658              	.LVL132:
1636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1659              		.loc 1 1636 0
 1660 0090 0097     		str	r7, [sp]
 1661 0092 3346     		mov	r3, r6
 1662 0094 0122     		movs	r2, #1
 1663 0096 0821     		movs	r1, #8
 1664 0098 2046     		mov	r0, r4
 1665 009a FFF7FEFF 		bl	QSPI_WaitFlagStateUntilTimeout
 1666              	.LVL133:
1638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       {
 1667              		.loc 1 1638 0
 1668 009e 0346     		mov	r3, r0
 1669 00a0 0028     		cmp	r0, #0
ARM GAS  /tmp/ccMXllgx.s 			page 83


 1670 00a2 C5D1     		bne	.L98
1640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1671              		.loc 1 1640 0
 1672 00a4 2268     		ldr	r2, [r4]
 1673 00a6 0821     		movs	r1, #8
 1674 00a8 D160     		str	r1, [r2, #12]
1643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       }
 1675              		.loc 1 1643 0
 1676 00aa 0122     		movs	r2, #1
 1677 00ac 84F84120 		strb	r2, [r4, #65]
 1678 00b0 BEE7     		b	.L98
 1679              	.LVL134:
 1680              	.L99:
1603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1681              		.loc 1 1603 0
 1682 00b2 0223     		movs	r3, #2
 1683 00b4 BFE7     		b	.L97
 1684              		.cfi_endproc
 1685              	.LFE154:
 1687              		.section	.text.HAL_QSPI_AutoPolling_IT,"ax",%progbits
 1688              		.align	1
 1689              		.global	HAL_QSPI_AutoPolling_IT
 1690              		.syntax unified
 1691              		.thumb
 1692              		.thumb_func
 1693              		.fpu fpv5-sp-d16
 1695              	HAL_QSPI_AutoPolling_IT:
 1696              	.LFB155:
1668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   HAL_StatusTypeDef status;
 1697              		.loc 1 1668 0
 1698              		.cfi_startproc
 1699              		@ args = 0, pretend = 0, frame = 0
 1700              		@ frame_needed = 0, uses_anonymous_args = 0
 1701              	.LVL135:
 1702 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1703              	.LCFI26:
 1704              		.cfi_def_cfa_offset 20
 1705              		.cfi_offset 4, -20
 1706              		.cfi_offset 5, -16
 1707              		.cfi_offset 6, -12
 1708              		.cfi_offset 7, -8
 1709              		.cfi_offset 14, -4
 1710 0002 83B0     		sub	sp, sp, #12
 1711              	.LCFI27:
 1712              		.cfi_def_cfa_offset 32
 1713 0004 0446     		mov	r4, r0
 1714 0006 0F46     		mov	r7, r1
 1715 0008 1646     		mov	r6, r2
1670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1716              		.loc 1 1670 0
 1717 000a FFF7FEFF 		bl	HAL_GetTick
 1718              	.LVL136:
1704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1719              		.loc 1 1704 0
 1720 000e 94F84020 		ldrb	r2, [r4, #64]	@ zero_extendqisi2
 1721 0012 D2B2     		uxtb	r2, r2
 1722 0014 012A     		cmp	r2, #1
ARM GAS  /tmp/ccMXllgx.s 			page 84


 1723 0016 46D0     		beq	.L107
1704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1724              		.loc 1 1704 0 is_stmt 0 discriminator 2
 1725 0018 0122     		movs	r2, #1
 1726 001a 84F84020 		strb	r2, [r4, #64]
1706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
 1727              		.loc 1 1706 0 is_stmt 1 discriminator 2
 1728 001e 94F84120 		ldrb	r2, [r4, #65]	@ zero_extendqisi2
 1729 0022 D2B2     		uxtb	r2, r2
 1730 0024 012A     		cmp	r2, #1
 1731 0026 06D0     		beq	.L109
 1732              	.LVL137:
1756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
 1733              		.loc 1 1756 0
 1734 0028 0023     		movs	r3, #0
 1735 002a 84F84030 		strb	r3, [r4, #64]
1753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1736              		.loc 1 1753 0
 1737 002e 0225     		movs	r5, #2
 1738              	.LVL138:
 1739              	.L104:
1761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1740              		.loc 1 1761 0
 1741 0030 2846     		mov	r0, r5
 1742 0032 03B0     		add	sp, sp, #12
 1743              	.LCFI28:
 1744              		.cfi_remember_state
 1745              		.cfi_def_cfa_offset 20
 1746              		@ sp needed
 1747 0034 F0BD     		pop	{r4, r5, r6, r7, pc}
 1748              	.LVL139:
 1749              	.L109:
 1750              	.LCFI29:
 1751              		.cfi_restore_state
1708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1752              		.loc 1 1708 0
 1753 0036 0022     		movs	r2, #0
 1754 0038 6264     		str	r2, [r4, #68]
1711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1755              		.loc 1 1711 0
 1756 003a 4223     		movs	r3, #66
 1757 003c 84F84130 		strb	r3, [r4, #65]
1714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1758              		.loc 1 1714 0
 1759 0040 A36C     		ldr	r3, [r4, #72]
 1760 0042 0093     		str	r3, [sp]
 1761 0044 0346     		mov	r3, r0
 1762 0046 2021     		movs	r1, #32
 1763 0048 2046     		mov	r0, r4
 1764              	.LVL140:
 1765 004a FFF7FEFF 		bl	QSPI_WaitFlagStateUntilTimeout
 1766              	.LVL141:
1716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     {
 1767              		.loc 1 1716 0
 1768 004e 0546     		mov	r5, r0
 1769 0050 18B1     		cbz	r0, .L110
1748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     }
ARM GAS  /tmp/ccMXllgx.s 			page 85


 1770              		.loc 1 1748 0
 1771 0052 0023     		movs	r3, #0
 1772 0054 84F84030 		strb	r3, [r4, #64]
 1773 0058 EAE7     		b	.L104
 1774              	.L110:
1719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1775              		.loc 1 1719 0
 1776 005a 2368     		ldr	r3, [r4]
 1777 005c 3268     		ldr	r2, [r6]
 1778 005e 9A62     		str	r2, [r3, #40]
1722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1779              		.loc 1 1722 0
 1780 0060 2368     		ldr	r3, [r4]
 1781 0062 7268     		ldr	r2, [r6, #4]
 1782 0064 5A62     		str	r2, [r3, #36]
1725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1783              		.loc 1 1725 0
 1784 0066 2368     		ldr	r3, [r4]
 1785 0068 B268     		ldr	r2, [r6, #8]
 1786 006a DA62     		str	r2, [r3, #44]
1728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****                (cfg->MatchMode | cfg->AutomaticStop));
 1787              		.loc 1 1728 0
 1788 006c 2168     		ldr	r1, [r4]
 1789 006e 0B68     		ldr	r3, [r1]
 1790 0070 23F44003 		bic	r3, r3, #12582912
 1791 0074 3269     		ldr	r2, [r6, #16]
 1792 0076 7069     		ldr	r0, [r6, #20]
 1793              	.LVL142:
 1794 0078 0243     		orrs	r2, r2, r0
 1795 007a 1343     		orrs	r3, r3, r2
 1796 007c 0B60     		str	r3, [r1]
1732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1797              		.loc 1 1732 0
 1798 007e 2368     		ldr	r3, [r4]
 1799 0080 0922     		movs	r2, #9
 1800 0082 DA60     		str	r2, [r3, #12]
1735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_AUTO_POLLING);
 1801              		.loc 1 1735 0
 1802 0084 F368     		ldr	r3, [r6, #12]
 1803 0086 BB62     		str	r3, [r7, #40]
1736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1804              		.loc 1 1736 0
 1805 0088 4FF00062 		mov	r2, #134217728
 1806 008c 3946     		mov	r1, r7
 1807 008e 2046     		mov	r0, r4
 1808 0090 FFF7FEFF 		bl	QSPI_Config
 1809              	.LVL143:
1739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1810              		.loc 1 1739 0
 1811 0094 0023     		movs	r3, #0
 1812 0096 84F84030 		strb	r3, [r4, #64]
1742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1813              		.loc 1 1742 0
 1814 009a 2268     		ldr	r2, [r4]
 1815 009c 1368     		ldr	r3, [r2]
 1816 009e 43F41023 		orr	r3, r3, #589824
 1817 00a2 1360     		str	r3, [r2]
ARM GAS  /tmp/ccMXllgx.s 			page 86


 1818 00a4 C4E7     		b	.L104
 1819              	.LVL144:
 1820              	.L107:
1704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1821              		.loc 1 1704 0
 1822 00a6 0225     		movs	r5, #2
 1823 00a8 C2E7     		b	.L104
 1824              		.cfi_endproc
 1825              	.LFE155:
 1827              		.section	.text.HAL_QSPI_MemoryMapped,"ax",%progbits
 1828              		.align	1
 1829              		.global	HAL_QSPI_MemoryMapped
 1830              		.syntax unified
 1831              		.thumb
 1832              		.thumb_func
 1833              		.fpu fpv5-sp-d16
 1835              	HAL_QSPI_MemoryMapped:
 1836              	.LFB156:
1772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   HAL_StatusTypeDef status;
 1837              		.loc 1 1772 0
 1838              		.cfi_startproc
 1839              		@ args = 0, pretend = 0, frame = 0
 1840              		@ frame_needed = 0, uses_anonymous_args = 0
 1841              	.LVL145:
 1842 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1843              	.LCFI30:
 1844              		.cfi_def_cfa_offset 20
 1845              		.cfi_offset 4, -20
 1846              		.cfi_offset 5, -16
 1847              		.cfi_offset 6, -12
 1848              		.cfi_offset 7, -8
 1849              		.cfi_offset 14, -4
 1850 0002 83B0     		sub	sp, sp, #12
 1851              	.LCFI31:
 1852              		.cfi_def_cfa_offset 32
 1853 0004 0446     		mov	r4, r0
 1854 0006 0F46     		mov	r7, r1
 1855 0008 1646     		mov	r6, r2
1774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1856              		.loc 1 1774 0
 1857 000a FFF7FEFF 		bl	HAL_GetTick
 1858              	.LVL146:
1805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1859              		.loc 1 1805 0
 1860 000e 94F84020 		ldrb	r2, [r4, #64]	@ zero_extendqisi2
 1861 0012 D2B2     		uxtb	r2, r2
 1862 0014 012A     		cmp	r2, #1
 1863 0016 3AD0     		beq	.L115
1805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1864              		.loc 1 1805 0 is_stmt 0 discriminator 2
 1865 0018 0122     		movs	r2, #1
 1866 001a 84F84020 		strb	r2, [r4, #64]
1807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
 1867              		.loc 1 1807 0 is_stmt 1 discriminator 2
 1868 001e 94F84120 		ldrb	r2, [r4, #65]	@ zero_extendqisi2
 1869 0022 D2B2     		uxtb	r2, r2
 1870 0024 012A     		cmp	r2, #1
ARM GAS  /tmp/ccMXllgx.s 			page 87


 1871 0026 06D0     		beq	.L118
1842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
 1872              		.loc 1 1842 0
 1873 0028 0225     		movs	r5, #2
 1874              	.LVL147:
 1875              	.L113:
1846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1876              		.loc 1 1846 0
 1877 002a 0023     		movs	r3, #0
 1878 002c 84F84030 		strb	r3, [r4, #64]
 1879              	.LVL148:
 1880              	.L112:
1850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1881              		.loc 1 1850 0
 1882 0030 2846     		mov	r0, r5
 1883 0032 03B0     		add	sp, sp, #12
 1884              	.LCFI32:
 1885              		.cfi_remember_state
 1886              		.cfi_def_cfa_offset 20
 1887              		@ sp needed
 1888 0034 F0BD     		pop	{r4, r5, r6, r7, pc}
 1889              	.LVL149:
 1890              	.L118:
 1891              	.LCFI33:
 1892              		.cfi_restore_state
1809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1893              		.loc 1 1809 0
 1894 0036 0022     		movs	r2, #0
 1895 0038 6264     		str	r2, [r4, #68]
1812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1896              		.loc 1 1812 0
 1897 003a 8223     		movs	r3, #130
 1898 003c 84F84130 		strb	r3, [r4, #65]
1815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1899              		.loc 1 1815 0
 1900 0040 A36C     		ldr	r3, [r4, #72]
 1901 0042 0093     		str	r3, [sp]
 1902 0044 0346     		mov	r3, r0
 1903 0046 2021     		movs	r1, #32
 1904 0048 2046     		mov	r0, r4
 1905              	.LVL150:
 1906 004a FFF7FEFF 		bl	QSPI_WaitFlagStateUntilTimeout
 1907              	.LVL151:
1817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     {
 1908              		.loc 1 1817 0
 1909 004e 0546     		mov	r5, r0
 1910 0050 0028     		cmp	r0, #0
 1911 0052 EAD1     		bne	.L113
1820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1912              		.loc 1 1820 0
 1913 0054 2268     		ldr	r2, [r4]
 1914 0056 1368     		ldr	r3, [r2]
 1915 0058 23F00803 		bic	r3, r3, #8
 1916 005c 7168     		ldr	r1, [r6, #4]
 1917 005e 0B43     		orrs	r3, r3, r1
 1918 0060 1360     		str	r3, [r2]
1822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       {
ARM GAS  /tmp/ccMXllgx.s 			page 88


 1919              		.loc 1 1822 0
 1920 0062 7368     		ldr	r3, [r6, #4]
 1921 0064 082B     		cmp	r3, #8
 1922 0066 06D0     		beq	.L119
 1923              	.L114:
1837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     }
 1924              		.loc 1 1837 0
 1925 0068 4FF04062 		mov	r2, #201326592
 1926 006c 3946     		mov	r1, r7
 1927 006e 2046     		mov	r0, r4
 1928              	.LVL152:
 1929 0070 FFF7FEFF 		bl	QSPI_Config
 1930              	.LVL153:
 1931 0074 D9E7     		b	.L113
 1932              	.LVL154:
 1933              	.L119:
1827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1934              		.loc 1 1827 0
 1935 0076 2368     		ldr	r3, [r4]
 1936 0078 3268     		ldr	r2, [r6]
 1937 007a 1A63     		str	r2, [r3, #48]
1830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1938              		.loc 1 1830 0
 1939 007c 2368     		ldr	r3, [r4]
 1940 007e 1022     		movs	r2, #16
 1941 0080 DA60     		str	r2, [r3, #12]
1833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       }
 1942              		.loc 1 1833 0
 1943 0082 2268     		ldr	r2, [r4]
 1944 0084 1368     		ldr	r3, [r2]
 1945 0086 43F48013 		orr	r3, r3, #1048576
 1946 008a 1360     		str	r3, [r2]
 1947 008c ECE7     		b	.L114
 1948              	.LVL155:
 1949              	.L115:
1805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1950              		.loc 1 1805 0
 1951 008e 0225     		movs	r5, #2
 1952 0090 CEE7     		b	.L112
 1953              		.cfi_endproc
 1954              	.LFE156:
 1956              		.section	.text.HAL_QSPI_ErrorCallback,"ax",%progbits
 1957              		.align	1
 1958              		.weak	HAL_QSPI_ErrorCallback
 1959              		.syntax unified
 1960              		.thumb
 1961              		.thumb_func
 1962              		.fpu fpv5-sp-d16
 1964              	HAL_QSPI_ErrorCallback:
 1965              	.LFB157:
1858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Prevent unused argument(s) compilation warning */
 1966              		.loc 1 1858 0
 1967              		.cfi_startproc
 1968              		@ args = 0, pretend = 0, frame = 0
 1969              		@ frame_needed = 0, uses_anonymous_args = 0
 1970              		@ link register save eliminated.
 1971              	.LVL156:
ARM GAS  /tmp/ccMXllgx.s 			page 89


1865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1972              		.loc 1 1865 0
 1973 0000 7047     		bx	lr
 1974              		.cfi_endproc
 1975              	.LFE157:
 1977              		.section	.text.QSPI_DMAAbortCplt,"ax",%progbits
 1978              		.align	1
 1979              		.syntax unified
 1980              		.thumb
 1981              		.thumb_func
 1982              		.fpu fpv5-sp-d16
 1984              	QSPI_DMAAbortCplt:
 1985              	.LFB180:
2570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   QSPI_HandleTypeDef* hqspi = ( QSPI_HandleTypeDef* )(hdma->Parent);
 1986              		.loc 1 2570 0
 1987              		.cfi_startproc
 1988              		@ args = 0, pretend = 0, frame = 0
 1989              		@ frame_needed = 0, uses_anonymous_args = 0
 1990              	.LVL157:
 1991 0000 08B5     		push	{r3, lr}
 1992              	.LCFI34:
 1993              		.cfi_def_cfa_offset 8
 1994              		.cfi_offset 3, -8
 1995              		.cfi_offset 14, -4
2571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 1996              		.loc 1 2571 0
 1997 0002 806B     		ldr	r0, [r0, #56]
 1998              	.LVL158:
2573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   hqspi->TxXferCount = 0U;
 1999              		.loc 1 2573 0
 2000 0004 0023     		movs	r3, #0
 2001 0006 8363     		str	r3, [r0, #56]
2574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 2002              		.loc 1 2574 0
 2003 0008 C362     		str	r3, [r0, #44]
2576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
 2004              		.loc 1 2576 0
 2005 000a 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 2006 000e DBB2     		uxtb	r3, r3
 2007 0010 082B     		cmp	r3, #8
 2008 0012 05D0     		beq	.L125
2592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 2009              		.loc 1 2592 0
 2010 0014 0123     		movs	r3, #1
 2011 0016 80F84130 		strb	r3, [r0, #65]
2598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #endif
 2012              		.loc 1 2598 0
 2013 001a FFF7FEFF 		bl	HAL_QSPI_ErrorCallback
 2014              	.LVL159:
 2015              	.L121:
2601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 2016              		.loc 1 2601 0
 2017 001e 08BD     		pop	{r3, pc}
 2018              	.LVL160:
 2019              	.L125:
2580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 2020              		.loc 1 2580 0
ARM GAS  /tmp/ccMXllgx.s 			page 90


 2021 0020 0368     		ldr	r3, [r0]
 2022 0022 0222     		movs	r2, #2
 2023 0024 DA60     		str	r2, [r3, #12]
2583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 2024              		.loc 1 2583 0
 2025 0026 0268     		ldr	r2, [r0]
 2026 0028 1368     		ldr	r3, [r2]
 2027 002a 43F40033 		orr	r3, r3, #131072
 2028 002e 1360     		str	r3, [r2]
2586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
 2029              		.loc 1 2586 0
 2030 0030 0268     		ldr	r2, [r0]
 2031 0032 1368     		ldr	r3, [r2]
 2032 0034 43F00203 		orr	r3, r3, #2
 2033 0038 1360     		str	r3, [r2]
 2034 003a F0E7     		b	.L121
 2035              		.cfi_endproc
 2036              	.LFE180:
 2038              		.section	.text.HAL_QSPI_AbortCpltCallback,"ax",%progbits
 2039              		.align	1
 2040              		.weak	HAL_QSPI_AbortCpltCallback
 2041              		.syntax unified
 2042              		.thumb
 2043              		.thumb_func
 2044              		.fpu fpv5-sp-d16
 2046              	HAL_QSPI_AbortCpltCallback:
 2047              	.LFB158:
1873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Prevent unused argument(s) compilation warning */
 2048              		.loc 1 1873 0
 2049              		.cfi_startproc
 2050              		@ args = 0, pretend = 0, frame = 0
 2051              		@ frame_needed = 0, uses_anonymous_args = 0
 2052              		@ link register save eliminated.
 2053              	.LVL161:
1880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 2054              		.loc 1 1880 0
 2055 0000 7047     		bx	lr
 2056              		.cfi_endproc
 2057              	.LFE158:
 2059              		.section	.text.HAL_QSPI_CmdCpltCallback,"ax",%progbits
 2060              		.align	1
 2061              		.weak	HAL_QSPI_CmdCpltCallback
 2062              		.syntax unified
 2063              		.thumb
 2064              		.thumb_func
 2065              		.fpu fpv5-sp-d16
 2067              	HAL_QSPI_CmdCpltCallback:
 2068              	.LFB159:
1888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Prevent unused argument(s) compilation warning */
 2069              		.loc 1 1888 0
 2070              		.cfi_startproc
 2071              		@ args = 0, pretend = 0, frame = 0
 2072              		@ frame_needed = 0, uses_anonymous_args = 0
 2073              		@ link register save eliminated.
 2074              	.LVL162:
1895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 2075              		.loc 1 1895 0
ARM GAS  /tmp/ccMXllgx.s 			page 91


 2076 0000 7047     		bx	lr
 2077              		.cfi_endproc
 2078              	.LFE159:
 2080              		.section	.text.HAL_QSPI_RxCpltCallback,"ax",%progbits
 2081              		.align	1
 2082              		.weak	HAL_QSPI_RxCpltCallback
 2083              		.syntax unified
 2084              		.thumb
 2085              		.thumb_func
 2086              		.fpu fpv5-sp-d16
 2088              	HAL_QSPI_RxCpltCallback:
 2089              	.LFB160:
1903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Prevent unused argument(s) compilation warning */
 2090              		.loc 1 1903 0
 2091              		.cfi_startproc
 2092              		@ args = 0, pretend = 0, frame = 0
 2093              		@ frame_needed = 0, uses_anonymous_args = 0
 2094              		@ link register save eliminated.
 2095              	.LVL163:
1910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 2096              		.loc 1 1910 0
 2097 0000 7047     		bx	lr
 2098              		.cfi_endproc
 2099              	.LFE160:
 2101              		.section	.text.HAL_QSPI_TxCpltCallback,"ax",%progbits
 2102              		.align	1
 2103              		.weak	HAL_QSPI_TxCpltCallback
 2104              		.syntax unified
 2105              		.thumb
 2106              		.thumb_func
 2107              		.fpu fpv5-sp-d16
 2109              	HAL_QSPI_TxCpltCallback:
 2110              	.LFB161:
1918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Prevent unused argument(s) compilation warning */
 2111              		.loc 1 1918 0
 2112              		.cfi_startproc
 2113              		@ args = 0, pretend = 0, frame = 0
 2114              		@ frame_needed = 0, uses_anonymous_args = 0
 2115              		@ link register save eliminated.
 2116              	.LVL164:
1925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 2117              		.loc 1 1925 0
 2118 0000 7047     		bx	lr
 2119              		.cfi_endproc
 2120              	.LFE161:
 2122              		.section	.text.HAL_QSPI_RxHalfCpltCallback,"ax",%progbits
 2123              		.align	1
 2124              		.weak	HAL_QSPI_RxHalfCpltCallback
 2125              		.syntax unified
 2126              		.thumb
 2127              		.thumb_func
 2128              		.fpu fpv5-sp-d16
 2130              	HAL_QSPI_RxHalfCpltCallback:
 2131              	.LFB162:
1933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Prevent unused argument(s) compilation warning */
 2132              		.loc 1 1933 0
 2133              		.cfi_startproc
ARM GAS  /tmp/ccMXllgx.s 			page 92


 2134              		@ args = 0, pretend = 0, frame = 0
 2135              		@ frame_needed = 0, uses_anonymous_args = 0
 2136              		@ link register save eliminated.
 2137              	.LVL165:
1940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 2138              		.loc 1 1940 0
 2139 0000 7047     		bx	lr
 2140              		.cfi_endproc
 2141              	.LFE162:
 2143              		.section	.text.QSPI_DMARxHalfCplt,"ax",%progbits
 2144              		.align	1
 2145              		.syntax unified
 2146              		.thumb
 2147              		.thumb_func
 2148              		.fpu fpv5-sp-d16
 2150              	QSPI_DMARxHalfCplt:
 2151              	.LFB177:
2513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   QSPI_HandleTypeDef* hqspi = (QSPI_HandleTypeDef*)(hdma->Parent);
 2152              		.loc 1 2513 0
 2153              		.cfi_startproc
 2154              		@ args = 0, pretend = 0, frame = 0
 2155              		@ frame_needed = 0, uses_anonymous_args = 0
 2156              	.LVL166:
 2157 0000 08B5     		push	{r3, lr}
 2158              	.LCFI35:
 2159              		.cfi_def_cfa_offset 8
 2160              		.cfi_offset 3, -8
 2161              		.cfi_offset 14, -4
 2162              	.LVL167:
2519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #endif
 2163              		.loc 1 2519 0
 2164 0002 806B     		ldr	r0, [r0, #56]
 2165              	.LVL168:
 2166 0004 FFF7FEFF 		bl	HAL_QSPI_RxHalfCpltCallback
 2167              	.LVL169:
2521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 2168              		.loc 1 2521 0
 2169 0008 08BD     		pop	{r3, pc}
 2170              		.cfi_endproc
 2171              	.LFE177:
 2173              		.section	.text.HAL_QSPI_TxHalfCpltCallback,"ax",%progbits
 2174              		.align	1
 2175              		.weak	HAL_QSPI_TxHalfCpltCallback
 2176              		.syntax unified
 2177              		.thumb
 2178              		.thumb_func
 2179              		.fpu fpv5-sp-d16
 2181              	HAL_QSPI_TxHalfCpltCallback:
 2182              	.LFB163:
1948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Prevent unused argument(s) compilation warning */
 2183              		.loc 1 1948 0
 2184              		.cfi_startproc
 2185              		@ args = 0, pretend = 0, frame = 0
 2186              		@ frame_needed = 0, uses_anonymous_args = 0
 2187              		@ link register save eliminated.
 2188              	.LVL170:
1955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
ARM GAS  /tmp/ccMXllgx.s 			page 93


 2189              		.loc 1 1955 0
 2190 0000 7047     		bx	lr
 2191              		.cfi_endproc
 2192              	.LFE163:
 2194              		.section	.text.QSPI_DMATxHalfCplt,"ax",%progbits
 2195              		.align	1
 2196              		.syntax unified
 2197              		.thumb
 2198              		.thumb_func
 2199              		.fpu fpv5-sp-d16
 2201              	QSPI_DMATxHalfCplt:
 2202              	.LFB178:
2529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   QSPI_HandleTypeDef* hqspi = (QSPI_HandleTypeDef*)(hdma->Parent);
 2203              		.loc 1 2529 0
 2204              		.cfi_startproc
 2205              		@ args = 0, pretend = 0, frame = 0
 2206              		@ frame_needed = 0, uses_anonymous_args = 0
 2207              	.LVL171:
 2208 0000 08B5     		push	{r3, lr}
 2209              	.LCFI36:
 2210              		.cfi_def_cfa_offset 8
 2211              		.cfi_offset 3, -8
 2212              		.cfi_offset 14, -4
 2213              	.LVL172:
2535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #endif
 2214              		.loc 1 2535 0
 2215 0002 806B     		ldr	r0, [r0, #56]
 2216              	.LVL173:
 2217 0004 FFF7FEFF 		bl	HAL_QSPI_TxHalfCpltCallback
 2218              	.LVL174:
2537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 2219              		.loc 1 2537 0
 2220 0008 08BD     		pop	{r3, pc}
 2221              		.cfi_endproc
 2222              	.LFE178:
 2224              		.section	.text.HAL_QSPI_FifoThresholdCallback,"ax",%progbits
 2225              		.align	1
 2226              		.weak	HAL_QSPI_FifoThresholdCallback
 2227              		.syntax unified
 2228              		.thumb
 2229              		.thumb_func
 2230              		.fpu fpv5-sp-d16
 2232              	HAL_QSPI_FifoThresholdCallback:
 2233              	.LFB164:
1963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Prevent unused argument(s) compilation warning */
 2234              		.loc 1 1963 0
 2235              		.cfi_startproc
 2236              		@ args = 0, pretend = 0, frame = 0
 2237              		@ frame_needed = 0, uses_anonymous_args = 0
 2238              		@ link register save eliminated.
 2239              	.LVL175:
1970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 2240              		.loc 1 1970 0
 2241 0000 7047     		bx	lr
 2242              		.cfi_endproc
 2243              	.LFE164:
 2245              		.section	.text.HAL_QSPI_StatusMatchCallback,"ax",%progbits
ARM GAS  /tmp/ccMXllgx.s 			page 94


 2246              		.align	1
 2247              		.weak	HAL_QSPI_StatusMatchCallback
 2248              		.syntax unified
 2249              		.thumb
 2250              		.thumb_func
 2251              		.fpu fpv5-sp-d16
 2253              	HAL_QSPI_StatusMatchCallback:
 2254              	.LFB165:
1978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Prevent unused argument(s) compilation warning */
 2255              		.loc 1 1978 0
 2256              		.cfi_startproc
 2257              		@ args = 0, pretend = 0, frame = 0
 2258              		@ frame_needed = 0, uses_anonymous_args = 0
 2259              		@ link register save eliminated.
 2260              	.LVL176:
1985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 2261              		.loc 1 1985 0
 2262 0000 7047     		bx	lr
 2263              		.cfi_endproc
 2264              	.LFE165:
 2266              		.section	.text.HAL_QSPI_TimeOutCallback,"ax",%progbits
 2267              		.align	1
 2268              		.weak	HAL_QSPI_TimeOutCallback
 2269              		.syntax unified
 2270              		.thumb
 2271              		.thumb_func
 2272              		.fpu fpv5-sp-d16
 2274              	HAL_QSPI_TimeOutCallback:
 2275              	.LFB166:
1993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Prevent unused argument(s) compilation warning */
 2276              		.loc 1 1993 0
 2277              		.cfi_startproc
 2278              		@ args = 0, pretend = 0, frame = 0
 2279              		@ frame_needed = 0, uses_anonymous_args = 0
 2280              		@ link register save eliminated.
 2281              	.LVL177:
2000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #if (USE_HAL_QSPI_REGISTER_CALLBACKS == 1)
 2282              		.loc 1 2000 0
 2283 0000 7047     		bx	lr
 2284              		.cfi_endproc
 2285              	.LFE166:
 2287              		.section	.text.HAL_QSPI_GetState,"ax",%progbits
 2288              		.align	1
 2289              		.global	HAL_QSPI_GetState
 2290              		.syntax unified
 2291              		.thumb
 2292              		.thumb_func
 2293              		.fpu fpv5-sp-d16
 2295              	HAL_QSPI_GetState:
 2296              	.LFB167:
2251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   /* Return QSPI handle state */
 2297              		.loc 1 2251 0
 2298              		.cfi_startproc
 2299              		@ args = 0, pretend = 0, frame = 0
 2300              		@ frame_needed = 0, uses_anonymous_args = 0
 2301              		@ link register save eliminated.
 2302              	.LVL178:
ARM GAS  /tmp/ccMXllgx.s 			page 95


2253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** }
 2303              		.loc 1 2253 0
 2304 0000 90F84100 		ldrb	r0, [r0, #65]	@ zero_extendqisi2
 2305              	.LVL179:
2254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 2306              		.loc 1 2254 0
 2307 0004 7047     		bx	lr
 2308              		.cfi_endproc
 2309              	.LFE167:
 2311              		.section	.text.HAL_QSPI_GetError,"ax",%progbits
 2312              		.align	1
 2313              		.global	HAL_QSPI_GetError
 2314              		.syntax unified
 2315              		.thumb
 2316              		.thumb_func
 2317              		.fpu fpv5-sp-d16
 2319              	HAL_QSPI_GetError:
 2320              	.LFB168:
2262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   return hqspi->ErrorCode;
 2321              		.loc 1 2262 0
 2322              		.cfi_startproc
 2323              		@ args = 0, pretend = 0, frame = 0
 2324              		@ frame_needed = 0, uses_anonymous_args = 0
 2325              		@ link register save eliminated.
 2326              	.LVL180:
2263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** }
 2327              		.loc 1 2263 0
 2328 0000 406C     		ldr	r0, [r0, #68]
 2329              	.LVL181:
2264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 2330              		.loc 1 2264 0
 2331 0002 7047     		bx	lr
 2332              		.cfi_endproc
 2333              	.LFE168:
 2335              		.section	.text.HAL_QSPI_Abort,"ax",%progbits
 2336              		.align	1
 2337              		.global	HAL_QSPI_Abort
 2338              		.syntax unified
 2339              		.thumb
 2340              		.thumb_func
 2341              		.fpu fpv5-sp-d16
 2343              	HAL_QSPI_Abort:
 2344              	.LFB169:
2272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   HAL_StatusTypeDef status = HAL_OK;
 2345              		.loc 1 2272 0
 2346              		.cfi_startproc
 2347              		@ args = 0, pretend = 0, frame = 0
 2348              		@ frame_needed = 0, uses_anonymous_args = 0
 2349              	.LVL182:
 2350 0000 30B5     		push	{r4, r5, lr}
 2351              	.LCFI37:
 2352              		.cfi_def_cfa_offset 12
 2353              		.cfi_offset 4, -12
 2354              		.cfi_offset 5, -8
 2355              		.cfi_offset 14, -4
 2356 0002 83B0     		sub	sp, sp, #12
 2357              	.LCFI38:
ARM GAS  /tmp/ccMXllgx.s 			page 96


 2358              		.cfi_def_cfa_offset 24
 2359 0004 0446     		mov	r4, r0
 2360              	.LVL183:
2274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 2361              		.loc 1 2274 0
 2362 0006 FFF7FEFF 		bl	HAL_GetTick
 2363              	.LVL184:
2277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
 2364              		.loc 1 2277 0
 2365 000a 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 2366 000e 13F0020F 		tst	r3, #2
 2367 0012 3CD0     		beq	.L145
 2368 0014 0546     		mov	r5, r0
2280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 2369              		.loc 1 2280 0
 2370 0016 0023     		movs	r3, #0
 2371 0018 84F84030 		strb	r3, [r4, #64]
2282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     {
 2372              		.loc 1 2282 0
 2373 001c 2368     		ldr	r3, [r4]
 2374 001e 1A68     		ldr	r2, [r3]
 2375 0020 12F0040F 		tst	r2, #4
 2376 0024 18D1     		bne	.L147
 2377              	.LVL185:
 2378              	.L143:
2296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 2379              		.loc 1 2296 0
 2380 0026 2268     		ldr	r2, [r4]
 2381 0028 1368     		ldr	r3, [r2]
 2382 002a 43F00203 		orr	r3, r3, #2
 2383 002e 1360     		str	r3, [r2]
2299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 2384              		.loc 1 2299 0
 2385 0030 A36C     		ldr	r3, [r4, #72]
 2386 0032 0093     		str	r3, [sp]
 2387 0034 2B46     		mov	r3, r5
 2388 0036 0122     		movs	r2, #1
 2389 0038 0221     		movs	r1, #2
 2390 003a 2046     		mov	r0, r4
 2391 003c FFF7FEFF 		bl	QSPI_WaitFlagStateUntilTimeout
 2392              	.LVL186:
2301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     {
 2393              		.loc 1 2301 0
 2394 0040 0346     		mov	r3, r0
 2395 0042 B8B1     		cbz	r0, .L148
 2396              	.LVL187:
 2397              	.L144:
2309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     {
 2398              		.loc 1 2309 0
 2399 0044 23BB     		cbnz	r3, .L142
2312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 2400              		.loc 1 2312 0
 2401 0046 2168     		ldr	r1, [r4]
 2402 0048 4A69     		ldr	r2, [r1, #20]
 2403 004a 22F04062 		bic	r2, r2, #201326592
 2404 004e 4A61     		str	r2, [r1, #20]
2315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     }
ARM GAS  /tmp/ccMXllgx.s 			page 97


 2405              		.loc 1 2315 0
 2406 0050 0122     		movs	r2, #1
 2407 0052 84F84120 		strb	r2, [r4, #65]
 2408 0056 1BE0     		b	.L142
 2409              	.LVL188:
 2410              	.L147:
2285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 2411              		.loc 1 2285 0
 2412 0058 1A68     		ldr	r2, [r3]
 2413 005a 22F00402 		bic	r2, r2, #4
 2414 005e 1A60     		str	r2, [r3]
2288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       if(status != HAL_OK)
 2415              		.loc 1 2288 0
 2416 0060 E06B     		ldr	r0, [r4, #60]
 2417              	.LVL189:
 2418 0062 FFF7FEFF 		bl	HAL_DMA_Abort
 2419              	.LVL190:
2289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       {
 2420              		.loc 1 2289 0
 2421 0066 0028     		cmp	r0, #0
 2422 0068 DDD0     		beq	.L143
2291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       }
 2423              		.loc 1 2291 0
 2424 006a 636C     		ldr	r3, [r4, #68]
 2425 006c 43F00403 		orr	r3, r3, #4
 2426 0070 6364     		str	r3, [r4, #68]
 2427 0072 D8E7     		b	.L143
 2428              	.L148:
2303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 2429              		.loc 1 2303 0
 2430 0074 2368     		ldr	r3, [r4]
 2431 0076 0222     		movs	r2, #2
 2432 0078 DA60     		str	r2, [r3, #12]
2306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     }
 2433              		.loc 1 2306 0
 2434 007a A36C     		ldr	r3, [r4, #72]
 2435 007c 0093     		str	r3, [sp]
 2436 007e 2B46     		mov	r3, r5
 2437 0080 0022     		movs	r2, #0
 2438 0082 2021     		movs	r1, #32
 2439 0084 2046     		mov	r0, r4
 2440              	.LVL191:
 2441 0086 FFF7FEFF 		bl	QSPI_WaitFlagStateUntilTimeout
 2442              	.LVL192:
 2443 008a 0346     		mov	r3, r0
 2444              	.LVL193:
 2445 008c DAE7     		b	.L144
 2446              	.LVL194:
 2447              	.L145:
2273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   uint32_t tickstart = HAL_GetTick();
 2448              		.loc 1 2273 0
 2449 008e 0023     		movs	r3, #0
 2450              	.LVL195:
 2451              	.L142:
2320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 2452              		.loc 1 2320 0
 2453 0090 1846     		mov	r0, r3
ARM GAS  /tmp/ccMXllgx.s 			page 98


 2454 0092 03B0     		add	sp, sp, #12
 2455              	.LCFI39:
 2456              		.cfi_def_cfa_offset 12
 2457              		@ sp needed
 2458 0094 30BD     		pop	{r4, r5, pc}
 2459              		.cfi_endproc
 2460              	.LFE169:
 2462              		.section	.text.HAL_QSPI_Transmit,"ax",%progbits
 2463              		.align	1
 2464              		.global	HAL_QSPI_Transmit
 2465              		.syntax unified
 2466              		.thumb
 2467              		.thumb_func
 2468              		.fpu fpv5-sp-d16
 2470              	HAL_QSPI_Transmit:
 2471              	.LFB148:
 974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   HAL_StatusTypeDef status = HAL_OK;
 2472              		.loc 1 974 0
 2473              		.cfi_startproc
 2474              		@ args = 0, pretend = 0, frame = 0
 2475              		@ frame_needed = 0, uses_anonymous_args = 0
 2476              	.LVL196:
 2477 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2478              	.LCFI40:
 2479              		.cfi_def_cfa_offset 24
 2480              		.cfi_offset 4, -24
 2481              		.cfi_offset 5, -20
 2482              		.cfi_offset 6, -16
 2483              		.cfi_offset 7, -12
 2484              		.cfi_offset 8, -8
 2485              		.cfi_offset 14, -4
 2486 0004 82B0     		sub	sp, sp, #8
 2487              	.LCFI41:
 2488              		.cfi_def_cfa_offset 32
 2489 0006 0446     		mov	r4, r0
 2490 0008 8846     		mov	r8, r1
 2491 000a 1746     		mov	r7, r2
 2492              	.LVL197:
 976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   __IO uint32_t *data_reg = &hqspi->Instance->DR;
 2493              		.loc 1 976 0
 2494 000c FFF7FEFF 		bl	HAL_GetTick
 2495              	.LVL198:
 977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 2496              		.loc 1 977 0
 2497 0010 2568     		ldr	r5, [r4]
 2498              	.LVL199:
 980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 2499              		.loc 1 980 0
 2500 0012 94F84030 		ldrb	r3, [r4, #64]	@ zero_extendqisi2
 2501 0016 DBB2     		uxtb	r3, r3
 2502 0018 012B     		cmp	r3, #1
 2503 001a 58D0     		beq	.L157
 2504 001c 0646     		mov	r6, r0
 980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 2505              		.loc 1 980 0 is_stmt 0 discriminator 2
 2506 001e 0123     		movs	r3, #1
 2507 0020 84F84030 		strb	r3, [r4, #64]
ARM GAS  /tmp/ccMXllgx.s 			page 99


 982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
 2508              		.loc 1 982 0 is_stmt 1 discriminator 2
 2509 0024 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 2510 0028 DBB2     		uxtb	r3, r3
 2511 002a 012B     		cmp	r3, #1
 2512 002c 07D0     		beq	.L160
1042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
 2513              		.loc 1 1042 0
 2514 002e 0222     		movs	r2, #2
 2515              	.LVL200:
 2516              	.L151:
1046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 2517              		.loc 1 1046 0
 2518 0030 0023     		movs	r3, #0
 2519 0032 84F84030 		strb	r3, [r4, #64]
 2520              	.LVL201:
 2521              	.L150:
1049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 2522              		.loc 1 1049 0
 2523 0036 1046     		mov	r0, r2
 2524 0038 02B0     		add	sp, sp, #8
 2525              	.LCFI42:
 2526              		.cfi_remember_state
 2527              		.cfi_def_cfa_offset 24
 2528              		@ sp needed
 2529 003a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2530              	.LVL202:
 2531              	.L160:
 2532              	.LCFI43:
 2533              		.cfi_restore_state
 984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 2534              		.loc 1 984 0
 2535 003e 0023     		movs	r3, #0
 2536 0040 6364     		str	r3, [r4, #68]
 986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     {
 2537              		.loc 1 986 0
 2538 0042 B8F1000F 		cmp	r8, #0
 2539 0046 3CD0     		beq	.L152
 989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 2540              		.loc 1 989 0
 2541 0048 1223     		movs	r3, #18
 2542 004a 84F84130 		strb	r3, [r4, #65]
 992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 2543              		.loc 1 992 0
 2544 004e 2B69     		ldr	r3, [r5, #16]
 2545 0050 0133     		adds	r3, r3, #1
 2546 0052 E362     		str	r3, [r4, #44]
 993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       hqspi->pTxBuffPtr = pData;
 2547              		.loc 1 993 0
 2548 0054 2B69     		ldr	r3, [r5, #16]
 2549 0056 0133     		adds	r3, r3, #1
 2550 0058 A362     		str	r3, [r4, #40]
 994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 2551              		.loc 1 994 0
 2552 005a C4F82480 		str	r8, [r4, #36]
 997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 2553              		.loc 1 997 0
ARM GAS  /tmp/ccMXllgx.s 			page 100


 2554 005e 6B69     		ldr	r3, [r5, #20]
 2555 0060 23F04063 		bic	r3, r3, #201326592
 2556 0064 6B61     		str	r3, [r5, #20]
 975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   uint32_t tickstart = HAL_GetTick();
 2557              		.loc 1 975 0
 2558 0066 0022     		movs	r2, #0
 2559              	.LVL203:
 2560              	.L153:
 999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       {
 2561              		.loc 1 999 0
 2562 0068 E36A     		ldr	r3, [r4, #44]
 2563 006a 9BB1     		cbz	r3, .L154
1002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 2564              		.loc 1 1002 0
 2565 006c 0097     		str	r7, [sp]
 2566 006e 3346     		mov	r3, r6
 2567 0070 0122     		movs	r2, #1
 2568              	.LVL204:
 2569 0072 0421     		movs	r1, #4
 2570 0074 2046     		mov	r0, r4
 2571 0076 FFF7FEFF 		bl	QSPI_WaitFlagStateUntilTimeout
 2572              	.LVL205:
1004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         {
 2573              		.loc 1 1004 0
 2574 007a 0246     		mov	r2, r0
 2575 007c 50B9     		cbnz	r0, .L154
1009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         hqspi->pTxBuffPtr++;
 2576              		.loc 1 1009 0
 2577 007e 636A     		ldr	r3, [r4, #36]
 2578 0080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2579 0082 85F82030 		strb	r3, [r5, #32]
1010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         hqspi->TxXferCount--;
 2580              		.loc 1 1010 0
 2581 0086 636A     		ldr	r3, [r4, #36]
 2582 0088 0133     		adds	r3, r3, #1
 2583 008a 6362     		str	r3, [r4, #36]
1011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       }
 2584              		.loc 1 1011 0
 2585 008c E36A     		ldr	r3, [r4, #44]
 2586 008e 013B     		subs	r3, r3, #1
 2587 0090 E362     		str	r3, [r4, #44]
 2588 0092 E9E7     		b	.L153
 2589              	.LVL206:
 2590              	.L154:
1014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       {
 2591              		.loc 1 1014 0
 2592 0094 1AB1     		cbz	r2, .L161
 2593              	.LVL207:
 2594              	.L156:
1032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     }
 2595              		.loc 1 1032 0
 2596 0096 0123     		movs	r3, #1
 2597 0098 84F84130 		strb	r3, [r4, #65]
 2598 009c C8E7     		b	.L151
 2599              	.L161:
1017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 2600              		.loc 1 1017 0
ARM GAS  /tmp/ccMXllgx.s 			page 101


 2601 009e 0097     		str	r7, [sp]
 2602 00a0 3346     		mov	r3, r6
 2603 00a2 0122     		movs	r2, #1
 2604              	.LVL208:
 2605 00a4 0221     		movs	r1, #2
 2606 00a6 2046     		mov	r0, r4
 2607 00a8 FFF7FEFF 		bl	QSPI_WaitFlagStateUntilTimeout
 2608              	.LVL209:
1019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         {
 2609              		.loc 1 1019 0
 2610 00ac 0246     		mov	r2, r0
 2611 00ae 0028     		cmp	r0, #0
 2612 00b0 F1D1     		bne	.L156
1022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 2613              		.loc 1 1022 0
 2614 00b2 2368     		ldr	r3, [r4]
 2615 00b4 0222     		movs	r2, #2
 2616 00b6 DA60     		str	r2, [r3, #12]
1026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #endif
 2617              		.loc 1 1026 0
 2618 00b8 2046     		mov	r0, r4
 2619              	.LVL210:
 2620 00ba FFF7FEFF 		bl	HAL_QSPI_Abort
 2621              	.LVL211:
 2622 00be 0246     		mov	r2, r0
 2623              	.LVL212:
 2624 00c0 E9E7     		b	.L156
 2625              	.LVL213:
 2626              	.L152:
1036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       status = HAL_ERROR;
 2627              		.loc 1 1036 0
 2628 00c2 636C     		ldr	r3, [r4, #68]
 2629 00c4 43F00803 		orr	r3, r3, #8
 2630 00c8 6364     		str	r3, [r4, #68]
 2631              	.LVL214:
1037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     }
 2632              		.loc 1 1037 0
 2633 00ca 0122     		movs	r2, #1
 2634 00cc B0E7     		b	.L151
 2635              	.LVL215:
 2636              	.L157:
 980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 2637              		.loc 1 980 0
 2638 00ce 0222     		movs	r2, #2
 2639 00d0 B1E7     		b	.L150
 2640              		.cfi_endproc
 2641              	.LFE148:
 2643              		.section	.text.HAL_QSPI_Receive,"ax",%progbits
 2644              		.align	1
 2645              		.global	HAL_QSPI_Receive
 2646              		.syntax unified
 2647              		.thumb
 2648              		.thumb_func
 2649              		.fpu fpv5-sp-d16
 2651              	HAL_QSPI_Receive:
 2652              	.LFB149:
1061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   HAL_StatusTypeDef status = HAL_OK;
ARM GAS  /tmp/ccMXllgx.s 			page 102


 2653              		.loc 1 1061 0
 2654              		.cfi_startproc
 2655              		@ args = 0, pretend = 0, frame = 0
 2656              		@ frame_needed = 0, uses_anonymous_args = 0
 2657              	.LVL216:
 2658 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2659              	.LCFI44:
 2660              		.cfi_def_cfa_offset 24
 2661              		.cfi_offset 4, -24
 2662              		.cfi_offset 5, -20
 2663              		.cfi_offset 6, -16
 2664              		.cfi_offset 7, -12
 2665              		.cfi_offset 8, -8
 2666              		.cfi_offset 14, -4
 2667 0004 82B0     		sub	sp, sp, #8
 2668              	.LCFI45:
 2669              		.cfi_def_cfa_offset 32
 2670 0006 0446     		mov	r4, r0
 2671 0008 8846     		mov	r8, r1
 2672 000a 1746     		mov	r7, r2
 2673              	.LVL217:
1063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   uint32_t addr_reg = READ_REG(hqspi->Instance->AR);
 2674              		.loc 1 1063 0
 2675 000c FFF7FEFF 		bl	HAL_GetTick
 2676              	.LVL218:
1064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   __IO uint32_t *data_reg = &hqspi->Instance->DR;
 2677              		.loc 1 1064 0
 2678 0010 2568     		ldr	r5, [r4]
 2679 0012 AA69     		ldr	r2, [r5, #24]
 2680              	.LVL219:
1068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 2681              		.loc 1 1068 0
 2682 0014 94F84030 		ldrb	r3, [r4, #64]	@ zero_extendqisi2
 2683 0018 DBB2     		uxtb	r3, r3
 2684 001a 012B     		cmp	r3, #1
 2685 001c 5CD0     		beq	.L170
 2686 001e 0646     		mov	r6, r0
1068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 2687              		.loc 1 1068 0 is_stmt 0 discriminator 2
 2688 0020 0123     		movs	r3, #1
 2689 0022 84F84030 		strb	r3, [r4, #64]
1070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
 2690              		.loc 1 1070 0 is_stmt 1 discriminator 2
 2691 0026 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 2692 002a DBB2     		uxtb	r3, r3
 2693 002c 012B     		cmp	r3, #1
 2694 002e 07D0     		beq	.L173
1133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
 2695              		.loc 1 1133 0
 2696 0030 0222     		movs	r2, #2
 2697              	.LVL220:
 2698              	.L164:
1137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 2699              		.loc 1 1137 0
 2700 0032 0023     		movs	r3, #0
 2701 0034 84F84030 		strb	r3, [r4, #64]
 2702              	.LVL221:
ARM GAS  /tmp/ccMXllgx.s 			page 103


 2703              	.L163:
1140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 2704              		.loc 1 1140 0
 2705 0038 1046     		mov	r0, r2
 2706 003a 02B0     		add	sp, sp, #8
 2707              	.LCFI46:
 2708              		.cfi_remember_state
 2709              		.cfi_def_cfa_offset 24
 2710              		@ sp needed
 2711 003c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2712              	.LVL222:
 2713              	.L173:
 2714              	.LCFI47:
 2715              		.cfi_restore_state
1072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 2716              		.loc 1 1072 0
 2717 0040 0023     		movs	r3, #0
 2718 0042 6364     		str	r3, [r4, #68]
1074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     {
 2719              		.loc 1 1074 0
 2720 0044 B8F1000F 		cmp	r8, #0
 2721 0048 40D0     		beq	.L165
1077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 2722              		.loc 1 1077 0
 2723 004a 2223     		movs	r3, #34
 2724 004c 84F84130 		strb	r3, [r4, #65]
1080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 2725              		.loc 1 1080 0
 2726 0050 2B69     		ldr	r3, [r5, #16]
 2727 0052 0133     		adds	r3, r3, #1
 2728 0054 A363     		str	r3, [r4, #56]
1081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       hqspi->pRxBuffPtr = pData;
 2729              		.loc 1 1081 0
 2730 0056 2B69     		ldr	r3, [r5, #16]
 2731 0058 0133     		adds	r3, r3, #1
 2732 005a 6363     		str	r3, [r4, #52]
1082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 2733              		.loc 1 1082 0
 2734 005c C4F83080 		str	r8, [r4, #48]
1085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 2735              		.loc 1 1085 0
 2736 0060 6B69     		ldr	r3, [r5, #20]
 2737 0062 23F04063 		bic	r3, r3, #201326592
 2738 0066 43F08063 		orr	r3, r3, #67108864
 2739 006a 6B61     		str	r3, [r5, #20]
1088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 2740              		.loc 1 1088 0
 2741 006c 2368     		ldr	r3, [r4]
 2742 006e 9A61     		str	r2, [r3, #24]
1062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   uint32_t tickstart = HAL_GetTick();
 2743              		.loc 1 1062 0
 2744 0070 0022     		movs	r2, #0
 2745              	.LVL223:
 2746              	.L166:
1090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       {
 2747              		.loc 1 1090 0
 2748 0072 A36B     		ldr	r3, [r4, #56]
ARM GAS  /tmp/ccMXllgx.s 			page 104


 2749 0074 9BB1     		cbz	r3, .L167
1093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 2750              		.loc 1 1093 0
 2751 0076 0097     		str	r7, [sp]
 2752 0078 3346     		mov	r3, r6
 2753 007a 0122     		movs	r2, #1
 2754              	.LVL224:
 2755 007c 0621     		movs	r1, #6
 2756 007e 2046     		mov	r0, r4
 2757 0080 FFF7FEFF 		bl	QSPI_WaitFlagStateUntilTimeout
 2758              	.LVL225:
1095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         {
 2759              		.loc 1 1095 0
 2760 0084 0246     		mov	r2, r0
 2761 0086 50B9     		cbnz	r0, .L167
1100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         hqspi->pRxBuffPtr++;
 2762              		.loc 1 1100 0
 2763 0088 236B     		ldr	r3, [r4, #48]
 2764 008a 95F82010 		ldrb	r1, [r5, #32]	@ zero_extendqisi2
 2765 008e 1970     		strb	r1, [r3]
1101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         hqspi->RxXferCount--;
 2766              		.loc 1 1101 0
 2767 0090 236B     		ldr	r3, [r4, #48]
 2768 0092 0133     		adds	r3, r3, #1
 2769 0094 2363     		str	r3, [r4, #48]
1102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       }
 2770              		.loc 1 1102 0
 2771 0096 A36B     		ldr	r3, [r4, #56]
 2772 0098 013B     		subs	r3, r3, #1
 2773 009a A363     		str	r3, [r4, #56]
 2774 009c E9E7     		b	.L166
 2775              	.LVL226:
 2776              	.L167:
1105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       {
 2777              		.loc 1 1105 0
 2778 009e 1AB1     		cbz	r2, .L174
 2779              	.LVL227:
 2780              	.L169:
1123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     }
 2781              		.loc 1 1123 0
 2782 00a0 0123     		movs	r3, #1
 2783 00a2 84F84130 		strb	r3, [r4, #65]
 2784 00a6 C4E7     		b	.L164
 2785              	.L174:
1108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 2786              		.loc 1 1108 0
 2787 00a8 0097     		str	r7, [sp]
 2788 00aa 3346     		mov	r3, r6
 2789 00ac 0122     		movs	r2, #1
 2790              	.LVL228:
 2791 00ae 0221     		movs	r1, #2
 2792 00b0 2046     		mov	r0, r4
 2793 00b2 FFF7FEFF 		bl	QSPI_WaitFlagStateUntilTimeout
 2794              	.LVL229:
1110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         {
 2795              		.loc 1 1110 0
 2796 00b6 0246     		mov	r2, r0
ARM GAS  /tmp/ccMXllgx.s 			page 105


 2797 00b8 0028     		cmp	r0, #0
 2798 00ba F1D1     		bne	.L169
1113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 2799              		.loc 1 1113 0
 2800 00bc 2368     		ldr	r3, [r4]
 2801 00be 0222     		movs	r2, #2
 2802 00c0 DA60     		str	r2, [r3, #12]
1117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #endif
 2803              		.loc 1 1117 0
 2804 00c2 2046     		mov	r0, r4
 2805              	.LVL230:
 2806 00c4 FFF7FEFF 		bl	HAL_QSPI_Abort
 2807              	.LVL231:
 2808 00c8 0246     		mov	r2, r0
 2809              	.LVL232:
 2810 00ca E9E7     		b	.L169
 2811              	.LVL233:
 2812              	.L165:
1127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       status = HAL_ERROR;
 2813              		.loc 1 1127 0
 2814 00cc 636C     		ldr	r3, [r4, #68]
 2815 00ce 43F00803 		orr	r3, r3, #8
 2816 00d2 6364     		str	r3, [r4, #68]
 2817              	.LVL234:
1128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     }
 2818              		.loc 1 1128 0
 2819 00d4 0122     		movs	r2, #1
 2820              	.LVL235:
 2821 00d6 ACE7     		b	.L164
 2822              	.LVL236:
 2823              	.L170:
1068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 2824              		.loc 1 1068 0
 2825 00d8 0222     		movs	r2, #2
 2826              	.LVL237:
 2827 00da ADE7     		b	.L163
 2828              		.cfi_endproc
 2829              	.LFE149:
 2831              		.section	.text.HAL_QSPI_Abort_IT,"ax",%progbits
 2832              		.align	1
 2833              		.global	HAL_QSPI_Abort_IT
 2834              		.syntax unified
 2835              		.thumb
 2836              		.thumb_func
 2837              		.fpu fpv5-sp-d16
 2839              	HAL_QSPI_Abort_IT:
 2840              	.LFB170:
2328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   HAL_StatusTypeDef status = HAL_OK;
 2841              		.loc 1 2328 0
 2842              		.cfi_startproc
 2843              		@ args = 0, pretend = 0, frame = 0
 2844              		@ frame_needed = 0, uses_anonymous_args = 0
 2845              	.LVL238:
2332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
 2846              		.loc 1 2332 0
 2847 0000 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 2848 0004 13F0020F 		tst	r3, #2
ARM GAS  /tmp/ccMXllgx.s 			page 106


 2849 0008 1BD0     		beq	.L179
2335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 2850              		.loc 1 2335 0
 2851 000a 0023     		movs	r3, #0
 2852 000c 80F84030 		strb	r3, [r0, #64]
2338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 2853              		.loc 1 2338 0
 2854 0010 0823     		movs	r3, #8
 2855 0012 80F84130 		strb	r3, [r0, #65]
2341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 2856              		.loc 1 2341 0
 2857 0016 0268     		ldr	r2, [r0]
 2858 0018 1368     		ldr	r3, [r2]
 2859 001a 23F4F813 		bic	r3, r3, #2031616
 2860 001e 1360     		str	r3, [r2]
2343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     {
 2861              		.loc 1 2343 0
 2862 0020 0368     		ldr	r3, [r0]
 2863 0022 1A68     		ldr	r2, [r3]
 2864 0024 12F0040F 		tst	r2, #4
 2865 0028 0DD1     		bne	.L182
2366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 2866              		.loc 1 2366 0
 2867 002a 0222     		movs	r2, #2
 2868 002c DA60     		str	r2, [r3, #12]
2369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 2869              		.loc 1 2369 0
 2870 002e 0268     		ldr	r2, [r0]
 2871 0030 1368     		ldr	r3, [r2]
 2872 0032 43F40033 		orr	r3, r3, #131072
 2873 0036 1360     		str	r3, [r2]
2372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     }
 2874              		.loc 1 2372 0
 2875 0038 0268     		ldr	r2, [r0]
 2876 003a 1368     		ldr	r3, [r2]
 2877 003c 43F00203 		orr	r3, r3, #2
 2878 0040 1360     		str	r3, [r2]
 2879              	.L179:
2376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 2880              		.loc 1 2376 0
 2881 0042 0020     		movs	r0, #0
 2882              	.LVL239:
 2883 0044 7047     		bx	lr
 2884              	.LVL240:
 2885              	.L182:
2328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   HAL_StatusTypeDef status = HAL_OK;
 2886              		.loc 1 2328 0
 2887 0046 10B5     		push	{r4, lr}
 2888              	.LCFI48:
 2889              		.cfi_def_cfa_offset 8
 2890              		.cfi_offset 4, -8
 2891              		.cfi_offset 14, -4
 2892 0048 0446     		mov	r4, r0
2346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 2893              		.loc 1 2346 0
 2894 004a 1A68     		ldr	r2, [r3]
 2895 004c 22F00402 		bic	r2, r2, #4
ARM GAS  /tmp/ccMXllgx.s 			page 107


 2896 0050 1A60     		str	r2, [r3]
2349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       if (HAL_DMA_Abort_IT(hqspi->hdma) != HAL_OK)
 2897              		.loc 1 2349 0
 2898 0052 C36B     		ldr	r3, [r0, #60]
 2899 0054 074A     		ldr	r2, .L184
 2900 0056 1A65     		str	r2, [r3, #80]
2350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       {
 2901              		.loc 1 2350 0
 2902 0058 C06B     		ldr	r0, [r0, #60]
 2903              	.LVL241:
 2904 005a FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2905              	.LVL242:
 2906 005e 08B9     		cbnz	r0, .L183
 2907              	.L176:
2376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 2908              		.loc 1 2376 0
 2909 0060 0020     		movs	r0, #0
 2910 0062 10BD     		pop	{r4, pc}
 2911              	.LVL243:
 2912              	.L183:
2353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         
 2913              		.loc 1 2353 0
 2914 0064 0123     		movs	r3, #1
 2915 0066 84F84130 		strb	r3, [r4, #65]
2359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #endif
 2916              		.loc 1 2359 0
 2917 006a 2046     		mov	r0, r4
 2918 006c FFF7FEFF 		bl	HAL_QSPI_AbortCpltCallback
 2919              	.LVL244:
 2920 0070 F6E7     		b	.L176
 2921              	.L185:
 2922 0072 00BF     		.align	2
 2923              	.L184:
 2924 0074 00000000 		.word	QSPI_DMAAbortCplt
 2925              		.cfi_endproc
 2926              	.LFE170:
 2928              		.section	.text.HAL_QSPI_IRQHandler,"ax",%progbits
 2929              		.align	1
 2930              		.global	HAL_QSPI_IRQHandler
 2931              		.syntax unified
 2932              		.thumb
 2933              		.thumb_func
 2934              		.fpu fpv5-sp-d16
 2936              	HAL_QSPI_IRQHandler:
 2937              	.LFB145:
 488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   __IO uint32_t *data_reg;
 2938              		.loc 1 488 0
 2939              		.cfi_startproc
 2940              		@ args = 0, pretend = 0, frame = 0
 2941              		@ frame_needed = 0, uses_anonymous_args = 0
 2942              	.LVL245:
 2943 0000 10B5     		push	{r4, lr}
 2944              	.LCFI49:
 2945              		.cfi_def_cfa_offset 8
 2946              		.cfi_offset 4, -8
 2947              		.cfi_offset 14, -4
 2948 0002 0446     		mov	r4, r0
ARM GAS  /tmp/ccMXllgx.s 			page 108


 490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   uint32_t itsource = READ_REG(hqspi->Instance->CR);
 2949              		.loc 1 490 0
 2950 0004 0368     		ldr	r3, [r0]
 2951 0006 9A68     		ldr	r2, [r3, #8]
 2952              	.LVL246:
 491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 2953              		.loc 1 491 0
 2954 0008 1968     		ldr	r1, [r3]
 2955              	.LVL247:
 494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
 2956              		.loc 1 494 0
 2957 000a 12F0040F 		tst	r2, #4
 2958 000e 3FD0     		beq	.L187
 494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
 2959              		.loc 1 494 0 is_stmt 0 discriminator 1
 2960 0010 11F4802F 		tst	r1, #262144
 2961 0014 3CD0     		beq	.L187
 2962              	.LVL248:
 498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     {
 2963              		.loc 1 498 0 is_stmt 1
 2964 0016 90F84120 		ldrb	r2, [r0, #65]	@ zero_extendqisi2
 2965              	.LVL249:
 2966 001a D2B2     		uxtb	r2, r2
 2967 001c 122A     		cmp	r2, #18
 2968 001e 0DD0     		beq	.L188
 519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     {
 2969              		.loc 1 519 0
 2970 0020 90F84120 		ldrb	r2, [r0, #65]	@ zero_extendqisi2
 2971 0024 D2B2     		uxtb	r2, r2
 2972 0026 222A     		cmp	r2, #34
 2973 0028 25D0     		beq	.L193
 2974              	.LVL250:
 2975              	.L191:
 549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #endif
 2976              		.loc 1 549 0
 2977 002a 2046     		mov	r0, r4
 2978              	.LVL251:
 2979 002c FFF7FEFF 		bl	HAL_QSPI_FifoThresholdCallback
 2980              	.LVL252:
 2981              	.L186:
 774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 2982              		.loc 1 774 0
 2983 0030 10BD     		pop	{r4, pc}
 2984              	.LVL253:
 2985              	.L190:
 514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           break;
 2986              		.loc 1 514 0
 2987 0032 1368     		ldr	r3, [r2]
 2988              	.LVL254:
 2989 0034 23F48023 		bic	r3, r3, #262144
 2990 0038 1360     		str	r3, [r2]
 515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         }
 2991              		.loc 1 515 0
 2992 003a F6E7     		b	.L191
 2993              	.LVL255:
 2994              	.L188:
 501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       {
ARM GAS  /tmp/ccMXllgx.s 			page 109


 2995              		.loc 1 501 0
 2996 003c 2268     		ldr	r2, [r4]
 2997 003e 9168     		ldr	r1, [r2, #8]
 2998 0040 11F0040F 		tst	r1, #4
 2999 0044 F1D0     		beq	.L191
 503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         {
 3000              		.loc 1 503 0
 3001 0046 E16A     		ldr	r1, [r4, #44]
 3002 0048 0029     		cmp	r1, #0
 3003 004a F2D0     		beq	.L190
 506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           hqspi->pTxBuffPtr++;
 3004              		.loc 1 506 0
 3005 004c 626A     		ldr	r2, [r4, #36]
 3006 004e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3007 0050 83F82020 		strb	r2, [r3, #32]
 507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           hqspi->TxXferCount--;
 3008              		.loc 1 507 0
 3009 0054 626A     		ldr	r2, [r4, #36]
 3010 0056 0132     		adds	r2, r2, #1
 3011 0058 6262     		str	r2, [r4, #36]
 508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         }
 3012              		.loc 1 508 0
 3013 005a E26A     		ldr	r2, [r4, #44]
 3014 005c 013A     		subs	r2, r2, #1
 3015 005e E262     		str	r2, [r4, #44]
 3016 0060 ECE7     		b	.L188
 3017              	.L212:
 527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           hqspi->pRxBuffPtr++;
 3018              		.loc 1 527 0
 3019 0062 226B     		ldr	r2, [r4, #48]
 3020 0064 93F82010 		ldrb	r1, [r3, #32]	@ zero_extendqisi2
 3021 0068 1170     		strb	r1, [r2]
 528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           hqspi->RxXferCount--;
 3022              		.loc 1 528 0
 3023 006a 226B     		ldr	r2, [r4, #48]
 3024 006c 0132     		adds	r2, r2, #1
 3025 006e 2263     		str	r2, [r4, #48]
 529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         }
 3026              		.loc 1 529 0
 3027 0070 A26B     		ldr	r2, [r4, #56]
 3028 0072 013A     		subs	r2, r2, #1
 3029 0074 A263     		str	r2, [r4, #56]
 3030              	.L193:
 522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       {
 3031              		.loc 1 522 0
 3032 0076 2268     		ldr	r2, [r4]
 3033 0078 9168     		ldr	r1, [r2, #8]
 3034 007a 11F0040F 		tst	r1, #4
 3035 007e D4D0     		beq	.L191
 524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         {
 3036              		.loc 1 524 0
 3037 0080 A16B     		ldr	r1, [r4, #56]
 3038 0082 0029     		cmp	r1, #0
 3039 0084 EDD1     		bne	.L212
 535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           break;
 3040              		.loc 1 535 0
 3041 0086 1368     		ldr	r3, [r2]
ARM GAS  /tmp/ccMXllgx.s 			page 110


 3042              	.LVL256:
 3043 0088 23F48023 		bic	r3, r3, #262144
 3044 008c 1360     		str	r3, [r2]
 536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         }
 3045              		.loc 1 536 0
 3046 008e CCE7     		b	.L191
 3047              	.LVL257:
 3048              	.L187:
 554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
 3049              		.loc 1 554 0
 3050 0090 12F0020F 		tst	r2, #2
 3051 0094 7CD0     		beq	.L197
 554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
 3052              		.loc 1 554 0 is_stmt 0 discriminator 1
 3053 0096 11F4003F 		tst	r1, #131072
 3054 009a 79D0     		beq	.L197
 557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 3055              		.loc 1 557 0 is_stmt 1
 3056 009c 0222     		movs	r2, #2
 3057              	.LVL258:
 3058 009e DA60     		str	r2, [r3, #12]
 560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 3059              		.loc 1 560 0
 3060 00a0 2268     		ldr	r2, [r4]
 3061 00a2 1368     		ldr	r3, [r2]
 3062 00a4 23F4E023 		bic	r3, r3, #458752
 3063 00a8 1360     		str	r3, [r2]
 563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     {
 3064              		.loc 1 563 0
 3065 00aa 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 3066 00ae DBB2     		uxtb	r3, r3
 3067 00b0 122B     		cmp	r3, #18
 3068 00b2 1DD0     		beq	.L213
 589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     {
 3069              		.loc 1 589 0
 3070 00b4 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 3071 00b8 DBB2     		uxtb	r3, r3
 3072 00ba 222B     		cmp	r3, #34
 3073 00bc 31D0     		beq	.L214
 634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     {
 3074              		.loc 1 634 0
 3075 00be 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 3076 00c2 DBB2     		uxtb	r3, r3
 3077 00c4 022B     		cmp	r3, #2
 3078 00c6 58D0     		beq	.L215
 646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     {
 3079              		.loc 1 646 0
 3080 00c8 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 3081 00cc DBB2     		uxtb	r3, r3
 3082 00ce 082B     		cmp	r3, #8
 3083 00d0 AED1     		bne	.L186
 649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 3084              		.loc 1 649 0
 3085 00d2 2268     		ldr	r2, [r4]
 3086 00d4 5369     		ldr	r3, [r2, #20]
 3087 00d6 23F04063 		bic	r3, r3, #201326592
 3088 00da 5361     		str	r3, [r2, #20]
ARM GAS  /tmp/ccMXllgx.s 			page 111


 652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 3089              		.loc 1 652 0
 3090 00dc 0123     		movs	r3, #1
 3091 00de 84F84130 		strb	r3, [r4, #65]
 654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       {
 3092              		.loc 1 654 0
 3093 00e2 636C     		ldr	r3, [r4, #68]
 3094 00e4 002B     		cmp	r3, #0
 3095 00e6 4FD1     		bne	.L205
 662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #endif
 3096              		.loc 1 662 0
 3097 00e8 2046     		mov	r0, r4
 3098              	.LVL259:
 3099 00ea FFF7FEFF 		bl	HAL_QSPI_AbortCpltCallback
 3100              	.LVL260:
 3101 00ee 9FE7     		b	.L186
 3102              	.LVL261:
 3103              	.L213:
 565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       {
 3104              		.loc 1 565 0
 3105 00f0 2368     		ldr	r3, [r4]
 3106 00f2 1A68     		ldr	r2, [r3]
 3107 00f4 12F0040F 		tst	r2, #4
 3108 00f8 09D0     		beq	.L199
 568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 3109              		.loc 1 568 0
 3110 00fa 1A68     		ldr	r2, [r3]
 3111 00fc 22F00402 		bic	r2, r2, #4
 3112 0100 1A60     		str	r2, [r3]
 571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       }
 3113              		.loc 1 571 0
 3114 0102 E36B     		ldr	r3, [r4, #60]
 3115 0104 1A68     		ldr	r2, [r3]
 3116 0106 1368     		ldr	r3, [r2]
 3117 0108 23F00103 		bic	r3, r3, #1
 3118 010c 1360     		str	r3, [r2]
 3119              	.L199:
 576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #endif
 3120              		.loc 1 576 0
 3121 010e 2046     		mov	r0, r4
 3122              	.LVL262:
 3123 0110 FFF7FEFF 		bl	HAL_QSPI_Abort_IT
 3124              	.LVL263:
 580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 3125              		.loc 1 580 0
 3126 0114 0123     		movs	r3, #1
 3127 0116 84F84130 		strb	r3, [r4, #65]
 586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #endif
 3128              		.loc 1 586 0
 3129 011a 2046     		mov	r0, r4
 3130 011c FFF7FEFF 		bl	HAL_QSPI_TxCpltCallback
 3131              	.LVL264:
 3132 0120 86E7     		b	.L186
 3133              	.LVL265:
 3134              	.L214:
 591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       {
 3135              		.loc 1 591 0
ARM GAS  /tmp/ccMXllgx.s 			page 112


 3136 0122 2268     		ldr	r2, [r4]
 3137 0124 1368     		ldr	r3, [r2]
 3138 0126 13F0040F 		tst	r3, #4
 3139 012a 13D0     		beq	.L201
 594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 3140              		.loc 1 594 0
 3141 012c 1368     		ldr	r3, [r2]
 3142 012e 23F00403 		bic	r3, r3, #4
 3143 0132 1360     		str	r3, [r2]
 597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       }
 3144              		.loc 1 597 0
 3145 0134 E36B     		ldr	r3, [r4, #60]
 3146 0136 1A68     		ldr	r2, [r3]
 3147 0138 1368     		ldr	r3, [r2]
 3148 013a 23F00103 		bic	r3, r3, #1
 3149 013e 1360     		str	r3, [r2]
 3150              	.LVL266:
 3151              	.L202:
 621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #endif
 3152              		.loc 1 621 0
 3153 0140 2046     		mov	r0, r4
 3154              	.LVL267:
 3155 0142 FFF7FEFF 		bl	HAL_QSPI_Abort_IT
 3156              	.LVL268:
 625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 3157              		.loc 1 625 0
 3158 0146 0123     		movs	r3, #1
 3159 0148 84F84130 		strb	r3, [r4, #65]
 631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #endif
 3160              		.loc 1 631 0
 3161 014c 2046     		mov	r0, r4
 3162 014e FFF7FEFF 		bl	HAL_QSPI_RxCpltCallback
 3163              	.LVL269:
 3164 0152 6DE7     		b	.L186
 3165              	.LVL270:
 3166              	.L201:
 602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         {
 3167              		.loc 1 602 0
 3168 0154 2368     		ldr	r3, [r4]
 3169 0156 9B68     		ldr	r3, [r3, #8]
 3170 0158 13F47C5F 		tst	r3, #16128
 3171 015c F0D0     		beq	.L202
 604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           {
 3172              		.loc 1 604 0
 3173 015e A36B     		ldr	r3, [r4, #56]
 3174 0160 002B     		cmp	r3, #0
 3175 0162 EDD0     		beq	.L202
 607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****             hqspi->pRxBuffPtr++;
 3176              		.loc 1 607 0
 3177 0164 236B     		ldr	r3, [r4, #48]
 3178 0166 92F82010 		ldrb	r1, [r2, #32]	@ zero_extendqisi2
 3179 016a 1970     		strb	r1, [r3]
 608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****             hqspi->RxXferCount--;
 3180              		.loc 1 608 0
 3181 016c 236B     		ldr	r3, [r4, #48]
 3182 016e 0133     		adds	r3, r3, #1
 3183 0170 2363     		str	r3, [r4, #48]
ARM GAS  /tmp/ccMXllgx.s 			page 113


 609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****           }
 3184              		.loc 1 609 0
 3185 0172 A36B     		ldr	r3, [r4, #56]
 3186 0174 013B     		subs	r3, r3, #1
 3187 0176 A363     		str	r3, [r4, #56]
 3188 0178 ECE7     		b	.L201
 3189              	.LVL271:
 3190              	.L215:
 637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 3191              		.loc 1 637 0
 3192 017a 0123     		movs	r3, #1
 3193 017c 84F84130 		strb	r3, [r4, #65]
 643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #endif
 3194              		.loc 1 643 0
 3195 0180 2046     		mov	r0, r4
 3196              	.LVL272:
 3197 0182 FFF7FEFF 		bl	HAL_QSPI_CmdCpltCallback
 3198              	.LVL273:
 3199 0186 53E7     		b	.L186
 3200              	.LVL274:
 3201              	.L205:
 673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #endif
 3202              		.loc 1 673 0
 3203 0188 2046     		mov	r0, r4
 3204              	.LVL275:
 3205 018a FFF7FEFF 		bl	HAL_QSPI_ErrorCallback
 3206              	.LVL276:
 3207 018e 4FE7     		b	.L186
 3208              	.LVL277:
 3209              	.L197:
 684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
 3210              		.loc 1 684 0
 3211 0190 12F0080F 		tst	r2, #8
 3212 0194 14D0     		beq	.L206
 684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
 3213              		.loc 1 684 0 is_stmt 0 discriminator 1
 3214 0196 11F4002F 		tst	r1, #524288
 3215 019a 11D0     		beq	.L206
 687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 3216              		.loc 1 687 0 is_stmt 1
 3217 019c 0822     		movs	r2, #8
 3218              	.LVL278:
 3219 019e DA60     		str	r2, [r3, #12]
 690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     {
 3220              		.loc 1 690 0
 3221 01a0 2368     		ldr	r3, [r4]
 3222 01a2 1A68     		ldr	r2, [r3]
 3223 01a4 12F4800F 		tst	r2, #4194304
 3224 01a8 06D0     		beq	.L207
 693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 3225              		.loc 1 693 0
 3226 01aa 1A68     		ldr	r2, [r3]
 3227 01ac 22F41022 		bic	r2, r2, #589824
 3228 01b0 1A60     		str	r2, [r3]
 696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     }
 3229              		.loc 1 696 0
 3230 01b2 0123     		movs	r3, #1
ARM GAS  /tmp/ccMXllgx.s 			page 114


 3231 01b4 84F84130 		strb	r3, [r4, #65]
 3232              	.L207:
 703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #endif
 3233              		.loc 1 703 0
 3234 01b8 2046     		mov	r0, r4
 3235              	.LVL279:
 3236 01ba FFF7FEFF 		bl	HAL_QSPI_StatusMatchCallback
 3237              	.LVL280:
 3238 01be 37E7     		b	.L186
 3239              	.LVL281:
 3240              	.L206:
 708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
 3241              		.loc 1 708 0
 3242 01c0 12F0010F 		tst	r2, #1
 3243 01c4 31D0     		beq	.L208
 708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
 3244              		.loc 1 708 0 is_stmt 0 discriminator 1
 3245 01c6 11F4803F 		tst	r1, #65536
 3246 01ca 2ED0     		beq	.L208
 711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 3247              		.loc 1 711 0 is_stmt 1
 3248 01cc 0122     		movs	r2, #1
 3249              	.LVL282:
 3250 01ce DA60     		str	r2, [r3, #12]
 714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 3251              		.loc 1 714 0
 3252 01d0 2268     		ldr	r2, [r4]
 3253 01d2 1368     		ldr	r3, [r2]
 3254 01d4 23F47023 		bic	r3, r3, #983040
 3255 01d8 1360     		str	r3, [r2]
 717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 3256              		.loc 1 717 0
 3257 01da 636C     		ldr	r3, [r4, #68]
 3258 01dc 43F00203 		orr	r3, r3, #2
 3259 01e0 6364     		str	r3, [r4, #68]
 719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****     {
 3260              		.loc 1 719 0
 3261 01e2 2368     		ldr	r3, [r4]
 3262 01e4 1A68     		ldr	r2, [r3]
 3263 01e6 12F0040F 		tst	r2, #4
 3264 01ea 17D0     		beq	.L209
 722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 3265              		.loc 1 722 0
 3266 01ec 1A68     		ldr	r2, [r3]
 3267 01ee 22F00402 		bic	r2, r2, #4
 3268 01f2 1A60     		str	r2, [r3]
 725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       if (HAL_DMA_Abort_IT(hqspi->hdma) != HAL_OK)
 3269              		.loc 1 725 0
 3270 01f4 E36B     		ldr	r3, [r4, #60]
 3271 01f6 144A     		ldr	r2, .L216
 3272 01f8 1A65     		str	r2, [r3, #80]
 726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****       {
 3273              		.loc 1 726 0
 3274 01fa E06B     		ldr	r0, [r4, #60]
 3275              	.LVL283:
 3276 01fc FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3277              	.LVL284:
ARM GAS  /tmp/ccMXllgx.s 			page 115


 3278 0200 0028     		cmp	r0, #0
 3279 0202 3FF415AF 		beq	.L186
 729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 3280              		.loc 1 729 0
 3281 0206 636C     		ldr	r3, [r4, #68]
 3282 0208 43F00403 		orr	r3, r3, #4
 3283 020c 6364     		str	r3, [r4, #68]
 732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****         
 3284              		.loc 1 732 0
 3285 020e 0123     		movs	r3, #1
 3286 0210 84F84130 		strb	r3, [r4, #65]
 738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #endif
 3287              		.loc 1 738 0
 3288 0214 2046     		mov	r0, r4
 3289 0216 FFF7FEFF 		bl	HAL_QSPI_ErrorCallback
 3290              	.LVL285:
 3291 021a 09E7     		b	.L186
 3292              	.LVL286:
 3293              	.L209:
 745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 3294              		.loc 1 745 0
 3295 021c 0123     		movs	r3, #1
 3296 021e 84F84130 		strb	r3, [r4, #65]
 751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #endif
 3297              		.loc 1 751 0
 3298 0222 2046     		mov	r0, r4
 3299              	.LVL287:
 3300 0224 FFF7FEFF 		bl	HAL_QSPI_ErrorCallback
 3301              	.LVL288:
 3302 0228 02E7     		b	.L186
 3303              	.LVL289:
 3304              	.L208:
 757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
 3305              		.loc 1 757 0
 3306 022a 12F0100F 		tst	r2, #16
 3307 022e 3FF4FFAE 		beq	.L186
 757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
 3308              		.loc 1 757 0 is_stmt 0 discriminator 1
 3309 0232 11F4801F 		tst	r1, #1048576
 3310 0236 3FF4FBAE 		beq	.L186
 760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 3311              		.loc 1 760 0 is_stmt 1
 3312 023a 1022     		movs	r2, #16
 3313              	.LVL290:
 3314 023c DA60     		str	r2, [r3, #12]
 766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #endif
 3315              		.loc 1 766 0
 3316 023e 2046     		mov	r0, r4
 3317              	.LVL291:
 3318 0240 FFF7FEFF 		bl	HAL_QSPI_TimeOutCallback
 3319              	.LVL292:
 774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 3320              		.loc 1 774 0
 3321 0244 F4E6     		b	.L186
 3322              	.L217:
 3323 0246 00BF     		.align	2
 3324              	.L216:
ARM GAS  /tmp/ccMXllgx.s 			page 116


 3325 0248 00000000 		.word	QSPI_DMAAbortCplt
 3326              		.cfi_endproc
 3327              	.LFE145:
 3329              		.section	.text.QSPI_DMAError,"ax",%progbits
 3330              		.align	1
 3331              		.syntax unified
 3332              		.thumb
 3333              		.thumb_func
 3334              		.fpu fpv5-sp-d16
 3336              	QSPI_DMAError:
 3337              	.LFB179:
2545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   QSPI_HandleTypeDef* hqspi = ( QSPI_HandleTypeDef* )(hdma->Parent);
 3338              		.loc 1 2545 0
 3339              		.cfi_startproc
 3340              		@ args = 0, pretend = 0, frame = 0
 3341              		@ frame_needed = 0, uses_anonymous_args = 0
 3342              	.LVL293:
 3343 0000 10B5     		push	{r4, lr}
 3344              	.LCFI50:
 3345              		.cfi_def_cfa_offset 8
 3346              		.cfi_offset 4, -8
 3347              		.cfi_offset 14, -4
2546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 3348              		.loc 1 2546 0
 3349 0002 846B     		ldr	r4, [r0, #56]
 3350              	.LVL294:
2549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
 3351              		.loc 1 2549 0
 3352 0004 FFF7FEFF 		bl	HAL_DMA_GetError
 3353              	.LVL295:
 3354 0008 0228     		cmp	r0, #2
 3355 000a 0ED0     		beq	.L218
2551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   hqspi->TxXferCount = 0U;
 3356              		.loc 1 2551 0
 3357 000c 0023     		movs	r3, #0
 3358 000e A363     		str	r3, [r4, #56]
2552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   hqspi->ErrorCode   |= HAL_QSPI_ERROR_DMA;
 3359              		.loc 1 2552 0
 3360 0010 E362     		str	r3, [r4, #44]
2553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 3361              		.loc 1 2553 0
 3362 0012 636C     		ldr	r3, [r4, #68]
 3363 0014 43F00403 		orr	r3, r3, #4
 3364 0018 6364     		str	r3, [r4, #68]
2556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 3365              		.loc 1 2556 0
 3366 001a 2268     		ldr	r2, [r4]
 3367 001c 1368     		ldr	r3, [r2]
 3368 001e 23F00403 		bic	r3, r3, #4
 3369 0022 1360     		str	r3, [r2]
2559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 3370              		.loc 1 2559 0
 3371 0024 2046     		mov	r0, r4
 3372 0026 FFF7FEFF 		bl	HAL_QSPI_Abort_IT
 3373              	.LVL296:
 3374              	.L218:
2562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
ARM GAS  /tmp/ccMXllgx.s 			page 117


 3375              		.loc 1 2562 0
 3376 002a 10BD     		pop	{r4, pc}
 3377              		.cfi_endproc
 3378              	.LFE179:
 3380              		.section	.text.HAL_QSPI_SetTimeout,"ax",%progbits
 3381              		.align	1
 3382              		.global	HAL_QSPI_SetTimeout
 3383              		.syntax unified
 3384              		.thumb
 3385              		.thumb_func
 3386              		.fpu fpv5-sp-d16
 3388              	HAL_QSPI_SetTimeout:
 3389              	.LFB171:
2384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   hqspi->Timeout = Timeout;
 3390              		.loc 1 2384 0
 3391              		.cfi_startproc
 3392              		@ args = 0, pretend = 0, frame = 0
 3393              		@ frame_needed = 0, uses_anonymous_args = 0
 3394              		@ link register save eliminated.
 3395              	.LVL297:
2385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** }
 3396              		.loc 1 2385 0
 3397 0000 8164     		str	r1, [r0, #72]
2386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 3398              		.loc 1 2386 0
 3399 0002 7047     		bx	lr
 3400              		.cfi_endproc
 3401              	.LFE171:
 3403              		.section	.text.HAL_QSPI_Init,"ax",%progbits
 3404              		.align	1
 3405              		.global	HAL_QSPI_Init
 3406              		.syntax unified
 3407              		.thumb
 3408              		.thumb_func
 3409              		.fpu fpv5-sp-d16
 3411              	HAL_QSPI_Init:
 3412              	.LFB141:
 292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   HAL_StatusTypeDef status;
 3413              		.loc 1 292 0
 3414              		.cfi_startproc
 3415              		@ args = 0, pretend = 0, frame = 0
 3416              		@ frame_needed = 0, uses_anonymous_args = 0
 3417              	.LVL298:
 3418 0000 30B5     		push	{r4, r5, lr}
 3419              	.LCFI51:
 3420              		.cfi_def_cfa_offset 12
 3421              		.cfi_offset 4, -12
 3422              		.cfi_offset 5, -8
 3423              		.cfi_offset 14, -4
 3424 0002 83B0     		sub	sp, sp, #12
 3425              	.LCFI52:
 3426              		.cfi_def_cfa_offset 24
 3427 0004 0446     		mov	r4, r0
 294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 3428              		.loc 1 294 0
 3429 0006 FFF7FEFF 		bl	HAL_GetTick
 3430              	.LVL299:
ARM GAS  /tmp/ccMXllgx.s 			page 118


 297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
 3431              		.loc 1 297 0
 3432 000a 002C     		cmp	r4, #0
 3433 000c 4CD0     		beq	.L226
 3434 000e 0546     		mov	r5, r0
 317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
 3435              		.loc 1 317 0
 3436 0010 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 3437 0014 002B     		cmp	r3, #0
 3438 0016 3CD0     		beq	.L228
 3439              	.LVL300:
 3440              	.L224:
 352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****              ((hqspi->Init.FifoThreshold - 1U) << QUADSPI_CR_FTHRES_Pos));
 3441              		.loc 1 352 0
 3442 0018 2168     		ldr	r1, [r4]
 3443 001a 0B68     		ldr	r3, [r1]
 3444 001c 23F4F853 		bic	r3, r3, #7936
 3445 0020 A268     		ldr	r2, [r4, #8]
 3446 0022 013A     		subs	r2, r2, #1
 3447 0024 43EA0223 		orr	r3, r3, r2, lsl #8
 3448 0028 0B60     		str	r3, [r1]
 356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 3449              		.loc 1 356 0
 3450 002a A36C     		ldr	r3, [r4, #72]
 3451 002c 0093     		str	r3, [sp]
 3452 002e 2B46     		mov	r3, r5
 3453 0030 0022     		movs	r2, #0
 3454 0032 2021     		movs	r1, #32
 3455 0034 2046     		mov	r0, r4
 3456 0036 FFF7FEFF 		bl	QSPI_WaitFlagStateUntilTimeout
 3457              	.LVL301:
 358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
 3458              		.loc 1 358 0
 3459 003a 0146     		mov	r1, r0
 3460 003c 18BB     		cbnz	r0, .L225
 361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****                ((hqspi->Init.ClockPrescaler << QUADSPI_CR_PRESCALER_Pos) |
 3461              		.loc 1 361 0
 3462 003e 2068     		ldr	r0, [r4]
 3463              	.LVL302:
 3464 0040 0368     		ldr	r3, [r0]
 3465 0042 1A4A     		ldr	r2, .L229
 3466 0044 1A40     		ands	r2, r2, r3
 3467 0046 6568     		ldr	r5, [r4, #4]
 3468              	.LVL303:
 3469 0048 E368     		ldr	r3, [r4, #12]
 3470 004a 43EA0563 		orr	r3, r3, r5, lsl #24
 3471 004e E569     		ldr	r5, [r4, #28]
 3472 0050 2B43     		orrs	r3, r3, r5
 3473 0052 256A     		ldr	r5, [r4, #32]
 3474 0054 2B43     		orrs	r3, r3, r5
 3475 0056 1343     		orrs	r3, r3, r2
 3476 0058 0360     		str	r3, [r0]
 366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****                ((hqspi->Init.FlashSize << QUADSPI_DCR_FSIZE_Pos) |
 3477              		.loc 1 366 0
 3478 005a 2068     		ldr	r0, [r4]
 3479 005c 4268     		ldr	r2, [r0, #4]
 3480 005e 144B     		ldr	r3, .L229+4
ARM GAS  /tmp/ccMXllgx.s 			page 119


 3481 0060 1340     		ands	r3, r3, r2
 3482 0062 2569     		ldr	r5, [r4, #16]
 3483 0064 6269     		ldr	r2, [r4, #20]
 3484 0066 42EA0542 		orr	r2, r2, r5, lsl #16
 3485 006a A569     		ldr	r5, [r4, #24]
 3486 006c 2A43     		orrs	r2, r2, r5
 3487 006e 1343     		orrs	r3, r3, r2
 3488 0070 4360     		str	r3, [r0, #4]
 371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 3489              		.loc 1 371 0
 3490 0072 2268     		ldr	r2, [r4]
 3491 0074 1368     		ldr	r3, [r2]
 3492 0076 43F00103 		orr	r3, r3, #1
 3493 007a 1360     		str	r3, [r2]
 374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 3494              		.loc 1 374 0
 3495 007c 0023     		movs	r3, #0
 3496 007e 6364     		str	r3, [r4, #68]
 377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
 3497              		.loc 1 377 0
 3498 0080 0123     		movs	r3, #1
 3499 0082 84F84130 		strb	r3, [r4, #65]
 3500              	.L225:
 381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 3501              		.loc 1 381 0
 3502 0086 0023     		movs	r3, #0
 3503 0088 84F84030 		strb	r3, [r4, #64]
 3504              	.L223:
 385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 3505              		.loc 1 385 0
 3506 008c 0846     		mov	r0, r1
 3507 008e 03B0     		add	sp, sp, #12
 3508              	.LCFI53:
 3509              		.cfi_remember_state
 3510              		.cfi_def_cfa_offset 12
 3511              		@ sp needed
 3512 0090 30BD     		pop	{r4, r5, pc}
 3513              	.LVL304:
 3514              	.L228:
 3515              	.LCFI54:
 3516              		.cfi_restore_state
 320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 3517              		.loc 1 320 0
 3518 0092 84F84030 		strb	r3, [r4, #64]
 344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** #endif
 3519              		.loc 1 344 0
 3520 0096 2046     		mov	r0, r4
 3521              	.LVL305:
 3522 0098 FFF7FEFF 		bl	HAL_QSPI_MspInit
 3523              	.LVL306:
 348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
 3524              		.loc 1 348 0
 3525 009c 41F28831 		movw	r1, #5000
 3526 00a0 2046     		mov	r0, r4
 3527 00a2 FFF7FEFF 		bl	HAL_QSPI_SetTimeout
 3528              	.LVL307:
 3529 00a6 B7E7     		b	.L224
ARM GAS  /tmp/ccMXllgx.s 			page 120


 3530              	.LVL308:
 3531              	.L226:
 299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
 3532              		.loc 1 299 0
 3533 00a8 0121     		movs	r1, #1
 3534 00aa EFE7     		b	.L223
 3535              	.L230:
 3536              		.align	2
 3537              	.L229:
 3538 00ac 2FFFFF00 		.word	16777007
 3539 00b0 FEF8E0FF 		.word	-2033410
 3540              		.cfi_endproc
 3541              	.LFE141:
 3543              		.section	.text.HAL_QSPI_SetFifoThreshold,"ax",%progbits
 3544              		.align	1
 3545              		.global	HAL_QSPI_SetFifoThreshold
 3546              		.syntax unified
 3547              		.thumb
 3548              		.thumb_func
 3549              		.fpu fpv5-sp-d16
 3551              	HAL_QSPI_SetFifoThreshold:
 3552              	.LFB172:
2394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   HAL_StatusTypeDef status = HAL_OK;
 3553              		.loc 1 2394 0
 3554              		.cfi_startproc
 3555              		@ args = 0, pretend = 0, frame = 0
 3556              		@ frame_needed = 0, uses_anonymous_args = 0
 3557              		@ link register save eliminated.
 3558              	.LVL309:
 3559 0000 0346     		mov	r3, r0
 3560              	.LVL310:
2398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 3561              		.loc 1 2398 0
 3562 0002 90F84020 		ldrb	r2, [r0, #64]	@ zero_extendqisi2
 3563 0006 D2B2     		uxtb	r2, r2
 3564 0008 012A     		cmp	r2, #1
 3565 000a 17D0     		beq	.L234
2398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 3566              		.loc 1 2398 0 is_stmt 0 discriminator 2
 3567 000c 0122     		movs	r2, #1
 3568 000e 80F84020 		strb	r2, [r0, #64]
2400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
 3569              		.loc 1 2400 0 is_stmt 1 discriminator 2
 3570 0012 90F84120 		ldrb	r2, [r0, #65]	@ zero_extendqisi2
 3571 0016 D2B2     		uxtb	r2, r2
 3572 0018 012A     		cmp	r2, #1
 3573 001a 04D0     		beq	.L236
2411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
 3574              		.loc 1 2411 0
 3575 001c 0220     		movs	r0, #2
 3576              	.LVL311:
 3577              	.L233:
2415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 3578              		.loc 1 2415 0
 3579 001e 0022     		movs	r2, #0
 3580 0020 83F84020 		strb	r2, [r3, #64]
2418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** }
ARM GAS  /tmp/ccMXllgx.s 			page 121


 3581              		.loc 1 2418 0
 3582 0024 7047     		bx	lr
 3583              	.LVL312:
 3584              	.L236:
2403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 3585              		.loc 1 2403 0
 3586 0026 8160     		str	r1, [r0, #8]
2406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****                ((hqspi->Init.FifoThreshold - 1U) << QUADSPI_CR_FTHRES_Pos));
 3587              		.loc 1 2406 0
 3588 0028 0068     		ldr	r0, [r0]
 3589              	.LVL313:
 3590 002a 0268     		ldr	r2, [r0]
 3591 002c 22F4F852 		bic	r2, r2, #7936
 3592 0030 0139     		subs	r1, r1, #1
 3593              	.LVL314:
 3594 0032 42EA0121 		orr	r1, r2, r1, lsl #8
 3595 0036 0160     		str	r1, [r0]
 3596              	.LVL315:
2395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 3597              		.loc 1 2395 0
 3598 0038 0020     		movs	r0, #0
 3599 003a F0E7     		b	.L233
 3600              	.LVL316:
 3601              	.L234:
2398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 3602              		.loc 1 2398 0
 3603 003c 0220     		movs	r0, #2
 3604              	.LVL317:
2419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 3605              		.loc 1 2419 0
 3606 003e 7047     		bx	lr
 3607              		.cfi_endproc
 3608              	.LFE172:
 3610              		.section	.text.HAL_QSPI_GetFifoThreshold,"ax",%progbits
 3611              		.align	1
 3612              		.global	HAL_QSPI_GetFifoThreshold
 3613              		.syntax unified
 3614              		.thumb
 3615              		.thumb_func
 3616              		.fpu fpv5-sp-d16
 3618              	HAL_QSPI_GetFifoThreshold:
 3619              	.LFB173:
2426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   return ((READ_BIT(hqspi->Instance->CR, QUADSPI_CR_FTHRES) >> QUADSPI_CR_FTHRES_Pos) + 1U);
 3620              		.loc 1 2426 0
 3621              		.cfi_startproc
 3622              		@ args = 0, pretend = 0, frame = 0
 3623              		@ frame_needed = 0, uses_anonymous_args = 0
 3624              		@ link register save eliminated.
 3625              	.LVL318:
2427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** }
 3626              		.loc 1 2427 0
 3627 0000 0368     		ldr	r3, [r0]
 3628 0002 1868     		ldr	r0, [r3]
 3629              	.LVL319:
 3630 0004 C0F30420 		ubfx	r0, r0, #8, #5
2428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 3631              		.loc 1 2428 0
ARM GAS  /tmp/ccMXllgx.s 			page 122


 3632 0008 0130     		adds	r0, r0, #1
 3633 000a 7047     		bx	lr
 3634              		.cfi_endproc
 3635              	.LFE173:
 3637              		.section	.text.HAL_QSPI_SetFlashID,"ax",%progbits
 3638              		.align	1
 3639              		.global	HAL_QSPI_SetFlashID
 3640              		.syntax unified
 3641              		.thumb
 3642              		.thumb_func
 3643              		.fpu fpv5-sp-d16
 3645              	HAL_QSPI_SetFlashID:
 3646              	.LFB174:
2438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   HAL_StatusTypeDef status = HAL_OK;
 3647              		.loc 1 2438 0
 3648              		.cfi_startproc
 3649              		@ args = 0, pretend = 0, frame = 0
 3650              		@ frame_needed = 0, uses_anonymous_args = 0
 3651              		@ link register save eliminated.
 3652              	.LVL320:
 3653 0000 0346     		mov	r3, r0
 3654              	.LVL321:
2445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 3655              		.loc 1 2445 0
 3656 0002 90F84020 		ldrb	r2, [r0, #64]	@ zero_extendqisi2
 3657 0006 D2B2     		uxtb	r2, r2
 3658 0008 012A     		cmp	r2, #1
 3659 000a 15D0     		beq	.L241
2445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 3660              		.loc 1 2445 0 is_stmt 0 discriminator 2
 3661 000c 0122     		movs	r2, #1
 3662 000e 80F84020 		strb	r2, [r0, #64]
2447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   {
 3663              		.loc 1 2447 0 is_stmt 1 discriminator 2
 3664 0012 90F84120 		ldrb	r2, [r0, #65]	@ zero_extendqisi2
 3665 0016 D2B2     		uxtb	r2, r2
 3666 0018 012A     		cmp	r2, #1
 3667 001a 04D0     		beq	.L243
2457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
 3668              		.loc 1 2457 0
 3669 001c 0220     		movs	r0, #2
 3670              	.LVL322:
 3671              	.L240:
2461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 3672              		.loc 1 2461 0
 3673 001e 0022     		movs	r2, #0
 3674 0020 83F84020 		strb	r2, [r3, #64]
2464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** }
 3675              		.loc 1 2464 0
 3676 0024 7047     		bx	lr
 3677              	.LVL323:
 3678              	.L243:
2450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 3679              		.loc 1 2450 0
 3680 0026 C161     		str	r1, [r0, #28]
2453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c ****   }
 3681              		.loc 1 2453 0
ARM GAS  /tmp/ccMXllgx.s 			page 123


 3682 0028 0068     		ldr	r0, [r0]
 3683              	.LVL324:
 3684 002a 0268     		ldr	r2, [r0]
 3685 002c 22F08002 		bic	r2, r2, #128
 3686 0030 1143     		orrs	r1, r1, r2
 3687              	.LVL325:
 3688 0032 0160     		str	r1, [r0]
 3689              	.LVL326:
2439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 3690              		.loc 1 2439 0
 3691 0034 0020     		movs	r0, #0
 3692 0036 F2E7     		b	.L240
 3693              	.LVL327:
 3694              	.L241:
2445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 3695              		.loc 1 2445 0
 3696 0038 0220     		movs	r0, #2
 3697              	.LVL328:
2465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c **** 
 3698              		.loc 1 2465 0
 3699 003a 7047     		bx	lr
 3700              		.cfi_endproc
 3701              	.LFE174:
 3703              		.text
 3704              	.Letext0:
 3705              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 3706              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 3707              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 3708              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 3709              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 3710              		.file 7 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 3711              		.file 8 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 3712              		.file 9 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 3713              		.file 10 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_qspi.h"
 3714              		.file 11 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
ARM GAS  /tmp/ccMXllgx.s 			page 124


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f7xx_hal_qspi.c
     /tmp/ccMXllgx.s:18     .text.QSPI_DMARxCplt:0000000000000000 $t
     /tmp/ccMXllgx.s:24     .text.QSPI_DMARxCplt:0000000000000000 QSPI_DMARxCplt
     /tmp/ccMXllgx.s:51     .text.QSPI_DMATxCplt:0000000000000000 $t
     /tmp/ccMXllgx.s:57     .text.QSPI_DMATxCplt:0000000000000000 QSPI_DMATxCplt
     /tmp/ccMXllgx.s:83     .text.QSPI_Config:0000000000000000 $t
     /tmp/ccMXllgx.s:89     .text.QSPI_Config:0000000000000000 QSPI_Config
     /tmp/ccMXllgx.s:389    .text.QSPI_WaitFlagStateUntilTimeout:0000000000000000 $t
     /tmp/ccMXllgx.s:395    .text.QSPI_WaitFlagStateUntilTimeout:0000000000000000 QSPI_WaitFlagStateUntilTimeout
     /tmp/ccMXllgx.s:460    .text.HAL_QSPI_MspInit:0000000000000000 $t
     /tmp/ccMXllgx.s:467    .text.HAL_QSPI_MspInit:0000000000000000 HAL_QSPI_MspInit
     /tmp/ccMXllgx.s:481    .text.HAL_QSPI_MspDeInit:0000000000000000 $t
     /tmp/ccMXllgx.s:488    .text.HAL_QSPI_MspDeInit:0000000000000000 HAL_QSPI_MspDeInit
     /tmp/ccMXllgx.s:502    .text.HAL_QSPI_DeInit:0000000000000000 $t
     /tmp/ccMXllgx.s:509    .text.HAL_QSPI_DeInit:0000000000000000 HAL_QSPI_DeInit
     /tmp/ccMXllgx.s:557    .text.HAL_QSPI_Command:0000000000000000 $t
     /tmp/ccMXllgx.s:564    .text.HAL_QSPI_Command:0000000000000000 HAL_QSPI_Command
     /tmp/ccMXllgx.s:686    .text.HAL_QSPI_Command_IT:0000000000000000 $t
     /tmp/ccMXllgx.s:693    .text.HAL_QSPI_Command_IT:0000000000000000 HAL_QSPI_Command_IT
     /tmp/ccMXllgx.s:815    .text.HAL_QSPI_Transmit_IT:0000000000000000 $t
     /tmp/ccMXllgx.s:822    .text.HAL_QSPI_Transmit_IT:0000000000000000 HAL_QSPI_Transmit_IT
     /tmp/ccMXllgx.s:917    .text.HAL_QSPI_Receive_IT:0000000000000000 $t
     /tmp/ccMXllgx.s:924    .text.HAL_QSPI_Receive_IT:0000000000000000 HAL_QSPI_Receive_IT
     /tmp/ccMXllgx.s:1040   .text.HAL_QSPI_Transmit_DMA:0000000000000000 $t
     /tmp/ccMXllgx.s:1047   .text.HAL_QSPI_Transmit_DMA:0000000000000000 HAL_QSPI_Transmit_DMA
     /tmp/ccMXllgx.s:1288   .text.HAL_QSPI_Transmit_DMA:0000000000000144 $d
     /tmp/ccMXllgx.s:2201   .text.QSPI_DMATxHalfCplt:0000000000000000 QSPI_DMATxHalfCplt
     /tmp/ccMXllgx.s:3336   .text.QSPI_DMAError:0000000000000000 QSPI_DMAError
     /tmp/ccMXllgx.s:1295   .text.HAL_QSPI_Receive_DMA:0000000000000000 $t
     /tmp/ccMXllgx.s:1302   .text.HAL_QSPI_Receive_DMA:0000000000000000 HAL_QSPI_Receive_DMA
     /tmp/ccMXllgx.s:1536   .text.HAL_QSPI_Receive_DMA:000000000000014c $d
     /tmp/ccMXllgx.s:2150   .text.QSPI_DMARxHalfCplt:0000000000000000 QSPI_DMARxHalfCplt
     /tmp/ccMXllgx.s:1543   .text.HAL_QSPI_AutoPolling:0000000000000000 $t
     /tmp/ccMXllgx.s:1550   .text.HAL_QSPI_AutoPolling:0000000000000000 HAL_QSPI_AutoPolling
     /tmp/ccMXllgx.s:1688   .text.HAL_QSPI_AutoPolling_IT:0000000000000000 $t
     /tmp/ccMXllgx.s:1695   .text.HAL_QSPI_AutoPolling_IT:0000000000000000 HAL_QSPI_AutoPolling_IT
     /tmp/ccMXllgx.s:1828   .text.HAL_QSPI_MemoryMapped:0000000000000000 $t
     /tmp/ccMXllgx.s:1835   .text.HAL_QSPI_MemoryMapped:0000000000000000 HAL_QSPI_MemoryMapped
     /tmp/ccMXllgx.s:1957   .text.HAL_QSPI_ErrorCallback:0000000000000000 $t
     /tmp/ccMXllgx.s:1964   .text.HAL_QSPI_ErrorCallback:0000000000000000 HAL_QSPI_ErrorCallback
     /tmp/ccMXllgx.s:1978   .text.QSPI_DMAAbortCplt:0000000000000000 $t
     /tmp/ccMXllgx.s:1984   .text.QSPI_DMAAbortCplt:0000000000000000 QSPI_DMAAbortCplt
     /tmp/ccMXllgx.s:2039   .text.HAL_QSPI_AbortCpltCallback:0000000000000000 $t
     /tmp/ccMXllgx.s:2046   .text.HAL_QSPI_AbortCpltCallback:0000000000000000 HAL_QSPI_AbortCpltCallback
     /tmp/ccMXllgx.s:2060   .text.HAL_QSPI_CmdCpltCallback:0000000000000000 $t
     /tmp/ccMXllgx.s:2067   .text.HAL_QSPI_CmdCpltCallback:0000000000000000 HAL_QSPI_CmdCpltCallback
     /tmp/ccMXllgx.s:2081   .text.HAL_QSPI_RxCpltCallback:0000000000000000 $t
     /tmp/ccMXllgx.s:2088   .text.HAL_QSPI_RxCpltCallback:0000000000000000 HAL_QSPI_RxCpltCallback
     /tmp/ccMXllgx.s:2102   .text.HAL_QSPI_TxCpltCallback:0000000000000000 $t
     /tmp/ccMXllgx.s:2109   .text.HAL_QSPI_TxCpltCallback:0000000000000000 HAL_QSPI_TxCpltCallback
     /tmp/ccMXllgx.s:2123   .text.HAL_QSPI_RxHalfCpltCallback:0000000000000000 $t
     /tmp/ccMXllgx.s:2130   .text.HAL_QSPI_RxHalfCpltCallback:0000000000000000 HAL_QSPI_RxHalfCpltCallback
     /tmp/ccMXllgx.s:2144   .text.QSPI_DMARxHalfCplt:0000000000000000 $t
     /tmp/ccMXllgx.s:2174   .text.HAL_QSPI_TxHalfCpltCallback:0000000000000000 $t
     /tmp/ccMXllgx.s:2181   .text.HAL_QSPI_TxHalfCpltCallback:0000000000000000 HAL_QSPI_TxHalfCpltCallback
     /tmp/ccMXllgx.s:2195   .text.QSPI_DMATxHalfCplt:0000000000000000 $t
ARM GAS  /tmp/ccMXllgx.s 			page 125


     /tmp/ccMXllgx.s:2225   .text.HAL_QSPI_FifoThresholdCallback:0000000000000000 $t
     /tmp/ccMXllgx.s:2232   .text.HAL_QSPI_FifoThresholdCallback:0000000000000000 HAL_QSPI_FifoThresholdCallback
     /tmp/ccMXllgx.s:2246   .text.HAL_QSPI_StatusMatchCallback:0000000000000000 $t
     /tmp/ccMXllgx.s:2253   .text.HAL_QSPI_StatusMatchCallback:0000000000000000 HAL_QSPI_StatusMatchCallback
     /tmp/ccMXllgx.s:2267   .text.HAL_QSPI_TimeOutCallback:0000000000000000 $t
     /tmp/ccMXllgx.s:2274   .text.HAL_QSPI_TimeOutCallback:0000000000000000 HAL_QSPI_TimeOutCallback
     /tmp/ccMXllgx.s:2288   .text.HAL_QSPI_GetState:0000000000000000 $t
     /tmp/ccMXllgx.s:2295   .text.HAL_QSPI_GetState:0000000000000000 HAL_QSPI_GetState
     /tmp/ccMXllgx.s:2312   .text.HAL_QSPI_GetError:0000000000000000 $t
     /tmp/ccMXllgx.s:2319   .text.HAL_QSPI_GetError:0000000000000000 HAL_QSPI_GetError
     /tmp/ccMXllgx.s:2336   .text.HAL_QSPI_Abort:0000000000000000 $t
     /tmp/ccMXllgx.s:2343   .text.HAL_QSPI_Abort:0000000000000000 HAL_QSPI_Abort
     /tmp/ccMXllgx.s:2463   .text.HAL_QSPI_Transmit:0000000000000000 $t
     /tmp/ccMXllgx.s:2470   .text.HAL_QSPI_Transmit:0000000000000000 HAL_QSPI_Transmit
     /tmp/ccMXllgx.s:2644   .text.HAL_QSPI_Receive:0000000000000000 $t
     /tmp/ccMXllgx.s:2651   .text.HAL_QSPI_Receive:0000000000000000 HAL_QSPI_Receive
     /tmp/ccMXllgx.s:2832   .text.HAL_QSPI_Abort_IT:0000000000000000 $t
     /tmp/ccMXllgx.s:2839   .text.HAL_QSPI_Abort_IT:0000000000000000 HAL_QSPI_Abort_IT
     /tmp/ccMXllgx.s:2924   .text.HAL_QSPI_Abort_IT:0000000000000074 $d
     /tmp/ccMXllgx.s:2929   .text.HAL_QSPI_IRQHandler:0000000000000000 $t
     /tmp/ccMXllgx.s:2936   .text.HAL_QSPI_IRQHandler:0000000000000000 HAL_QSPI_IRQHandler
     /tmp/ccMXllgx.s:3325   .text.HAL_QSPI_IRQHandler:0000000000000248 $d
     /tmp/ccMXllgx.s:3330   .text.QSPI_DMAError:0000000000000000 $t
     /tmp/ccMXllgx.s:3381   .text.HAL_QSPI_SetTimeout:0000000000000000 $t
     /tmp/ccMXllgx.s:3388   .text.HAL_QSPI_SetTimeout:0000000000000000 HAL_QSPI_SetTimeout
     /tmp/ccMXllgx.s:3404   .text.HAL_QSPI_Init:0000000000000000 $t
     /tmp/ccMXllgx.s:3411   .text.HAL_QSPI_Init:0000000000000000 HAL_QSPI_Init
     /tmp/ccMXllgx.s:3538   .text.HAL_QSPI_Init:00000000000000ac $d
     /tmp/ccMXllgx.s:3544   .text.HAL_QSPI_SetFifoThreshold:0000000000000000 $t
     /tmp/ccMXllgx.s:3551   .text.HAL_QSPI_SetFifoThreshold:0000000000000000 HAL_QSPI_SetFifoThreshold
     /tmp/ccMXllgx.s:3611   .text.HAL_QSPI_GetFifoThreshold:0000000000000000 $t
     /tmp/ccMXllgx.s:3618   .text.HAL_QSPI_GetFifoThreshold:0000000000000000 HAL_QSPI_GetFifoThreshold
     /tmp/ccMXllgx.s:3638   .text.HAL_QSPI_SetFlashID:0000000000000000 $t
     /tmp/ccMXllgx.s:3645   .text.HAL_QSPI_SetFlashID:0000000000000000 HAL_QSPI_SetFlashID

UNDEFINED SYMBOLS
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_Abort_IT
HAL_DMA_GetError
