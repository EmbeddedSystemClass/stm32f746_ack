ARM GAS  /tmp/ccH0gOEd.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f7xx_hal_sdram.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_SDRAM_DMA_XferCpltCallback,"ax",%progbits
  18              		.align	1
  19              		.weak	HAL_SDRAM_DMA_XferCpltCallback
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-sp-d16
  25              	HAL_SDRAM_DMA_XferCpltCallback:
  26              	.LFB147:
  27              		.file 1 "Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c"
   1:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** /**
   2:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   ******************************************************************************
   3:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @file    stm32f7xx_hal_sdram.c
   4:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @author  MCD Application Team
   5:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @brief   SDRAM HAL module driver.
   6:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   *          This file provides a generic firmware to drive SDRAM memories mounted 
   7:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   *          as external device.
   8:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   *         
   9:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   @verbatim
  10:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   ==============================================================================
  11:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****                        ##### How to use this driver #####
  12:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   ============================================================================== 
  13:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   [..]
  14:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     This driver is a generic layered driver which contains a set of APIs used to 
  15:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     control SDRAM memories. It uses the FMC layer functions to interface 
  16:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     with SDRAM devices.  
  17:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     The following sequence should be followed to configure the FMC to interface
  18:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     with SDRAM memories: 
  19:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****       
  20:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****    (#) Declare a SDRAM_HandleTypeDef handle structure, for example:
  21:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****           SDRAM_HandleTypeDef  hdsram 
  22:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****           
  23:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****        (++) Fill the SDRAM_HandleTypeDef handle "Init" field with the allowed 
  24:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****             values of the structure member.
  25:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****             
  26:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****        (++) Fill the SDRAM_HandleTypeDef handle "Instance" field with a predefined 
  27:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****             base register instance for NOR or SDRAM device 
  28:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****              
  29:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****    (#) Declare a FMC_SDRAM_TimingTypeDef structure; for example:
  30:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****           FMC_SDRAM_TimingTypeDef  Timing;
  31:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****       and fill its fields with the allowed values of the structure member.
ARM GAS  /tmp/ccH0gOEd.s 			page 2


  32:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****       
  33:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****    (#) Initialize the SDRAM Controller by calling the function HAL_SDRAM_Init(). This function
  34:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****        performs the following sequence:
  35:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****           
  36:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****        (##) MSP hardware layer configuration using the function HAL_SDRAM_MspInit()
  37:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****        (##) Control register configuration using the FMC SDRAM interface function 
  38:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****             FMC_SDRAM_Init()
  39:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****        (##) Timing register configuration using the FMC SDRAM interface function 
  40:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****             FMC_SDRAM_Timing_Init()
  41:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****        (##) Program the SDRAM external device by applying its initialization sequence
  42:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****             according to the device plugged in your hardware. This step is mandatory
  43:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****             for accessing the SDRAM device.   
  44:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** 
  45:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****    (#) At this stage you can perform read/write accesses from/to the memory connected 
  46:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****        to the SDRAM Bank. You can perform either polling or DMA transfer using the
  47:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****        following APIs:
  48:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****        (++) HAL_SDRAM_Read()/HAL_SDRAM_Write() for polling read/write access
  49:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****        (++) HAL_SDRAM_Read_DMA()/HAL_SDRAM_Write_DMA() for DMA read/write transfer
  50:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****        
  51:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****    (#) You can also control the SDRAM device by calling the control APIs HAL_SDRAM_WriteOperation_E
  52:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****        HAL_SDRAM_WriteOperation_Disable() to respectively enable/disable the SDRAM write operation 
  53:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****        the function HAL_SDRAM_SendCommand() to send a specified command to the SDRAM
  54:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****        device. The command to be sent must be configured with the FMC_SDRAM_CommandTypeDef 
  55:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****        structure.   
  56:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****        
  57:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****    (#) You can continuously monitor the SDRAM device HAL state by calling the function
  58:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****        HAL_SDRAM_GetState()
  59:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** 
  60:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****    *** Callback registration ***
  61:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     =============================================
  62:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     [..]
  63:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****       The compilation define  USE_HAL_SDRAM_REGISTER_CALLBACKS when set to 1
  64:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****       allows the user to configure dynamically the driver callbacks.
  65:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** 
  66:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****       Use Functions @ref HAL_SDRAM_RegisterCallback() to register a user callback,
  67:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****       it allows to register following callbacks:
  68:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****         (+) MspInitCallback    : SDRAM MspInit.
  69:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****         (+) MspDeInitCallback  : SDRAM MspDeInit.
  70:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****       This function takes as parameters the HAL peripheral handle, the Callback ID
  71:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****       and a pointer to the user callback function.
  72:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** 
  73:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****       Use function @ref HAL_SDRAM_UnRegisterCallback() to reset a callback to the default
  74:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****       weak (surcharged) function. It allows to reset following callbacks:
  75:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****         (+) MspInitCallback    : SDRAM MspInit.
  76:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****         (+) MspDeInitCallback  : SDRAM MspDeInit.
  77:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****       This function) takes as parameters the HAL peripheral handle and the Callback ID.
  78:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** 
  79:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****       By default, after the @ref HAL_SDRAM_Init and if the state is HAL_SDRAM_STATE_RESET
  80:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****       all callbacks are reset to the corresponding legacy weak (surcharged) functions.
  81:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****       Exception done for MspInit and MspDeInit callbacks that are respectively
  82:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****       reset to the legacy weak (surcharged) functions in the @ref HAL_SDRAM_Init
  83:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****       and @ref  HAL_SDRAM_DeInit only when these callbacks are null (not registered beforehand).
  84:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****       If not, MspInit or MspDeInit are not null, the @ref HAL_SDRAM_Init and @ref HAL_SDRAM_DeInit
  85:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****       keep and use the user MspInit/MspDeInit callbacks (registered beforehand)
  86:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** 
  87:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****       Callbacks can be registered/unregistered in READY state only.
  88:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****       Exception done for MspInit/MspDeInit callbacks that can be registered/unregistered
ARM GAS  /tmp/ccH0gOEd.s 			page 3


  89:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****       in READY or RESET state, thus registered (user) MspInit/DeInit callbacks can be used
  90:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****       during the Init/DeInit.
  91:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****       In that case first register the MspInit/MspDeInit user callbacks
  92:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****       using @ref HAL_SDRAM_RegisterCallback before calling @ref HAL_SDRAM_DeInit
  93:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****       or @ref HAL_SDRAM_Init function.
  94:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** 
  95:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****       When The compilation define USE_HAL_SDRAM_REGISTER_CALLBACKS is set to 0 or
  96:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****       not defined, the callback registering feature is not available
  97:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****       and weak (surcharged) callbacks are used.
  98:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** 
  99:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   @endverbatim
 100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   ******************************************************************************
 101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @attention
 102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   *
 103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
 104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * All rights reserved.</center></h2>
 105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   *
 106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * the "License"; You may not use this file except in compliance with the
 108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * License. You may obtain a copy of the License at:
 109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   *                        opensource.org/licenses/BSD-3-Clause
 110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   *
 111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   ******************************************************************************
 112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   */ 
 113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** 
 114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** /* Includes ------------------------------------------------------------------*/
 115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** #include "stm32f7xx_hal.h"
 116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** 
 117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** /** @addtogroup STM32F7xx_HAL_Driver
 118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @{
 119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   */
 120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** 
 121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** /** @defgroup SDRAM SDRAM
 122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @brief SDRAM driver modules
 123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @{
 124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   */
 125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** #ifdef HAL_SDRAM_MODULE_ENABLED
 126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** 
 127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** /* Private typedef -----------------------------------------------------------*/
 128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** /* Private define ------------------------------------------------------------*/
 129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** /* Private macro -------------------------------------------------------------*/    
 130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** /* Private variables ---------------------------------------------------------*/
 131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** /* Private functions ---------------------------------------------------------*/
 132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** /* Exported functions --------------------------------------------------------*/
 133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** /** @defgroup SDRAM_Exported_Functions SDRAM Exported Functions
 134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @{
 135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   */
 136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** 
 137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** /** @defgroup SDRAM_Exported_Functions_Group1 Initialization and de-initialization functions 
 138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @brief    Initialization and Configuration functions 
 139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   *
 140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   @verbatim    
 141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   ==============================================================================
 142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****            ##### SDRAM Initialization and de_initialization functions #####
 143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   ==============================================================================
 144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   [..]  
 145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     This section provides functions allowing to initialize/de-initialize
ARM GAS  /tmp/ccH0gOEd.s 			page 4


 146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     the SDRAM memory
 147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** @endverbatim
 149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @{
 150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   */
 151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     
 152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** /**
 153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @brief  Performs the SDRAM device initialization sequence.
 154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
 155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   *                the configuration information for SDRAM module.
 156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @param  Timing Pointer to SDRAM control timing structure 
 157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @retval HAL status
 158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   */
 159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
 160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** {   
 161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Check the SDRAM handle parameter */
 162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   if(hsdram == NULL)
 163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   {
 164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     return HAL_ERROR;
 165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   }
 166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   if(hsdram->State == HAL_SDRAM_STATE_RESET)
 168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   {  
 169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     /* Allocate lock resource and initialize it */
 170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     hsdram->Lock = HAL_UNLOCKED;
 171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** #if (USE_HAL_SDRAM_REGISTER_CALLBACKS == 1)
 172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     if(hsdram->MspInitCallback == NULL)
 173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     {
 174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****       hsdram->MspInitCallback = HAL_SDRAM_MspInit;
 175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     }
 176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     hsdram->RefreshErrorCallback = HAL_SDRAM_RefreshErrorCallback;
 177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     hsdram->DmaXferCpltCallback = HAL_SDRAM_DMA_XferCpltCallback;
 178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     hsdram->DmaXferErrorCallback = HAL_SDRAM_DMA_XferErrorCallback;
 179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** 
 180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     /* Init the low level hardware */
 181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     hsdram->MspInitCallback(hsdram);
 182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** #else
 183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     /* Initialize the low level hardware (MSP) */
 184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     HAL_SDRAM_MspInit(hsdram);
 185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** #endif
 186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   }
 187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Initialize the SDRAM controller state */
 189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   hsdram->State = HAL_SDRAM_STATE_BUSY;
 190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Initialize SDRAM control Interface */
 192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Initialize SDRAM timing Interface */
 195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank); 
 196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Update the SDRAM controller state */
 198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   hsdram->State = HAL_SDRAM_STATE_READY;
 199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   return HAL_OK;
 201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** }
 202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** 
ARM GAS  /tmp/ccH0gOEd.s 			page 5


 203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** /**
 204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @brief  Perform the SDRAM device initialization sequence.
 205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
 206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   *                the configuration information for SDRAM module.
 207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @retval HAL status
 208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   */
 209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** HAL_StatusTypeDef HAL_SDRAM_DeInit(SDRAM_HandleTypeDef *hsdram)
 210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** {
 211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** #if (USE_HAL_SDRAM_REGISTER_CALLBACKS == 1)
 212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   if(hsdram->MspDeInitCallback == NULL)
 213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   {
 214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     hsdram->MspDeInitCallback = HAL_SDRAM_MspDeInit;
 215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   }
 216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** 
 217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* DeInit the low level hardware */
 218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   hsdram->MspDeInitCallback(hsdram);
 219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** #else
 220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Initialize the low level hardware (MSP) */
 221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   HAL_SDRAM_MspDeInit(hsdram);
 222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** #endif
 223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** 
 224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Configure the SDRAM registers with their reset values */
 225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   FMC_SDRAM_DeInit(hsdram->Instance, hsdram->Init.SDBank);
 226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** 
 227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Reset the SDRAM controller state */
 228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   hsdram->State = HAL_SDRAM_STATE_RESET;
 229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** 
 230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Release Lock */
 231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   __HAL_UNLOCK(hsdram);
 232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** 
 233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   return HAL_OK;
 234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** }
 235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** 
 236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** /**
 237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @brief  SDRAM MSP Init.
 238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
 239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   *                the configuration information for SDRAM module.
 240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @retval None
 241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   */
 242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** __weak void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef *hsdram)
 243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** {
 244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Prevent unused argument(s) compilation warning */
 245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   UNUSED(hsdram);
 246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****  
 247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
 248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****             the HAL_SDRAM_MspInit could be implemented in the user file
 249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****    */ 
 250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** }
 251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** 
 252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** /**
 253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @brief  SDRAM MSP DeInit.
 254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
 255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   *                the configuration information for SDRAM module.
 256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @retval None
 257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   */
 258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** __weak void HAL_SDRAM_MspDeInit(SDRAM_HandleTypeDef *hsdram)
 259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** {
ARM GAS  /tmp/ccH0gOEd.s 			page 6


 260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Prevent unused argument(s) compilation warning */
 261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   UNUSED(hsdram);
 262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****  
 263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
 264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****             the HAL_SDRAM_MspDeInit could be implemented in the user file
 265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****    */ 
 266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** }
 267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** 
 268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** /**
 269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @brief  This function handles SDRAM refresh error interrupt request.
 270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
 271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   *                the configuration information for SDRAM module.
 272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @retval HAL status
 273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** */
 274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** void HAL_SDRAM_IRQHandler(SDRAM_HandleTypeDef *hsdram)
 275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** {
 276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Check SDRAM interrupt Rising edge flag */
 277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   if(__FMC_SDRAM_GET_FLAG(hsdram->Instance, FMC_SDRAM_FLAG_REFRESH_IT))
 278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   {
 279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     /* SDRAM refresh error interrupt callback */
 280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** #if (USE_HAL_SDRAM_REGISTER_CALLBACKS == 1)
 281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     hsdram->RefreshErrorCallback(hsdram);
 282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** #else
 283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     HAL_SDRAM_RefreshErrorCallback(hsdram);
 284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** #endif
 285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** 
 286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     /* Clear SDRAM refresh error interrupt pending bit */
 287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     __FMC_SDRAM_CLEAR_FLAG(hsdram->Instance, FMC_SDRAM_FLAG_REFRESH_ERROR);
 288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   }
 289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** }
 290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** 
 291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** /**
 292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @brief  SDRAM Refresh error callback.
 293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
 294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   *                the configuration information for SDRAM module. 
 295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @retval None
 296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   */
 297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** __weak void HAL_SDRAM_RefreshErrorCallback(SDRAM_HandleTypeDef *hsdram)
 298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** {
 299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Prevent unused argument(s) compilation warning */
 300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   UNUSED(hsdram);
 301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****  
 302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
 303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****             the HAL_SDRAM_RefreshErrorCallback could be implemented in the user file
 304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****    */ 
 305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** }
 306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** 
 307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** /**
 308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @brief  DMA transfer complete callback.
 309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
 310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   *                the configuration information for the specified DMA module.
 311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @retval None
 312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   */
 313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** __weak void HAL_SDRAM_DMA_XferCpltCallback(DMA_HandleTypeDef *hdma)
 314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** {
  28              		.loc 1 314 0
  29              		.cfi_startproc
ARM GAS  /tmp/ccH0gOEd.s 			page 7


  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
 315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Prevent unused argument(s) compilation warning */
 316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   UNUSED(hdma);
 317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****  
 318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
 319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****             the HAL_SDRAM_DMA_XferCpltCallback could be implemented in the user file
 320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****    */ 
 321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** }
  34              		.loc 1 321 0
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
  37              	.LFE147:
  39              		.section	.text.HAL_SDRAM_DMA_XferErrorCallback,"ax",%progbits
  40              		.align	1
  41              		.weak	HAL_SDRAM_DMA_XferErrorCallback
  42              		.syntax unified
  43              		.thumb
  44              		.thumb_func
  45              		.fpu fpv5-sp-d16
  47              	HAL_SDRAM_DMA_XferErrorCallback:
  48              	.LFB148:
 322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** 
 323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** /**
 324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @brief  DMA transfer complete error callback.
 325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @param  hdma DMA handle
 326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @retval None
 327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   */
 328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** __weak void HAL_SDRAM_DMA_XferErrorCallback(DMA_HandleTypeDef *hdma)
 329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** {
  49              		.loc 1 329 0
  50              		.cfi_startproc
  51              		@ args = 0, pretend = 0, frame = 0
  52              		@ frame_needed = 0, uses_anonymous_args = 0
  53              		@ link register save eliminated.
  54              	.LVL1:
 330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Prevent unused argument(s) compilation warning */
 331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   UNUSED(hdma);
 332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****  
 333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
 334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****             the HAL_SDRAM_DMA_XferErrorCallback could be implemented in the user file
 335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****    */ 
 336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** }
  55              		.loc 1 336 0
  56 0000 7047     		bx	lr
  57              		.cfi_endproc
  58              	.LFE148:
  60              		.section	.text.HAL_SDRAM_MspInit,"ax",%progbits
  61              		.align	1
  62              		.weak	HAL_SDRAM_MspInit
  63              		.syntax unified
  64              		.thumb
  65              		.thumb_func
  66              		.fpu fpv5-sp-d16
  68              	HAL_SDRAM_MspInit:
ARM GAS  /tmp/ccH0gOEd.s 			page 8


  69              	.LFB143:
 243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Prevent unused argument(s) compilation warning */
  70              		.loc 1 243 0
  71              		.cfi_startproc
  72              		@ args = 0, pretend = 0, frame = 0
  73              		@ frame_needed = 0, uses_anonymous_args = 0
  74              		@ link register save eliminated.
  75              	.LVL2:
 250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** 
  76              		.loc 1 250 0
  77 0000 7047     		bx	lr
  78              		.cfi_endproc
  79              	.LFE143:
  81              		.section	.text.HAL_SDRAM_Init,"ax",%progbits
  82              		.align	1
  83              		.global	HAL_SDRAM_Init
  84              		.syntax unified
  85              		.thumb
  86              		.thumb_func
  87              		.fpu fpv5-sp-d16
  89              	HAL_SDRAM_Init:
  90              	.LFB141:
 160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Check the SDRAM handle parameter */
  91              		.loc 1 160 0
  92              		.cfi_startproc
  93              		@ args = 0, pretend = 0, frame = 0
  94              		@ frame_needed = 0, uses_anonymous_args = 0
  95              	.LVL3:
 162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   {
  96              		.loc 1 162 0
  97 0000 D8B1     		cbz	r0, .L7
 160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Check the SDRAM handle parameter */
  98              		.loc 1 160 0
  99 0002 38B5     		push	{r3, r4, r5, lr}
 100              	.LCFI0:
 101              		.cfi_def_cfa_offset 16
 102              		.cfi_offset 3, -16
 103              		.cfi_offset 4, -12
 104              		.cfi_offset 5, -8
 105              		.cfi_offset 14, -4
 106 0004 0446     		mov	r4, r0
 107 0006 0D46     		mov	r5, r1
 167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   {  
 108              		.loc 1 167 0
 109 0008 90F82C30 		ldrb	r3, [r0, #44]	@ zero_extendqisi2
 110 000c 83B1     		cbz	r3, .L12
 111              	.LVL4:
 112              	.L6:
 189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 113              		.loc 1 189 0
 114 000e 0223     		movs	r3, #2
 115 0010 84F82C30 		strb	r3, [r4, #44]
 192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 116              		.loc 1 192 0
 117 0014 211D     		adds	r1, r4, #4
 118 0016 2068     		ldr	r0, [r4]
 119 0018 FFF7FEFF 		bl	FMC_SDRAM_Init
ARM GAS  /tmp/ccH0gOEd.s 			page 9


 120              	.LVL5:
 195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 121              		.loc 1 195 0
 122 001c 6268     		ldr	r2, [r4, #4]
 123 001e 2946     		mov	r1, r5
 124 0020 2068     		ldr	r0, [r4]
 125 0022 FFF7FEFF 		bl	FMC_SDRAM_Timing_Init
 126              	.LVL6:
 198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 127              		.loc 1 198 0
 128 0026 0123     		movs	r3, #1
 129 0028 84F82C30 		strb	r3, [r4, #44]
 200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** }
 130              		.loc 1 200 0
 131 002c 0020     		movs	r0, #0
 201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** 
 132              		.loc 1 201 0
 133 002e 38BD     		pop	{r3, r4, r5, pc}
 134              	.LVL7:
 135              	.L12:
 170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** #if (USE_HAL_SDRAM_REGISTER_CALLBACKS == 1)
 136              		.loc 1 170 0
 137 0030 80F82D30 		strb	r3, [r0, #45]
 184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** #endif
 138              		.loc 1 184 0
 139 0034 FFF7FEFF 		bl	HAL_SDRAM_MspInit
 140              	.LVL8:
 141 0038 E9E7     		b	.L6
 142              	.LVL9:
 143              	.L7:
 144              	.LCFI1:
 145              		.cfi_def_cfa_offset 0
 146              		.cfi_restore 3
 147              		.cfi_restore 4
 148              		.cfi_restore 5
 149              		.cfi_restore 14
 164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   }
 150              		.loc 1 164 0
 151 003a 0120     		movs	r0, #1
 152              	.LVL10:
 201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** 
 153              		.loc 1 201 0
 154 003c 7047     		bx	lr
 155              		.cfi_endproc
 156              	.LFE141:
 158              		.section	.text.HAL_SDRAM_MspDeInit,"ax",%progbits
 159              		.align	1
 160              		.weak	HAL_SDRAM_MspDeInit
 161              		.syntax unified
 162              		.thumb
 163              		.thumb_func
 164              		.fpu fpv5-sp-d16
 166              	HAL_SDRAM_MspDeInit:
 167              	.LFB144:
 259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Prevent unused argument(s) compilation warning */
 168              		.loc 1 259 0
 169              		.cfi_startproc
ARM GAS  /tmp/ccH0gOEd.s 			page 10


 170              		@ args = 0, pretend = 0, frame = 0
 171              		@ frame_needed = 0, uses_anonymous_args = 0
 172              		@ link register save eliminated.
 173              	.LVL11:
 266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** 
 174              		.loc 1 266 0
 175 0000 7047     		bx	lr
 176              		.cfi_endproc
 177              	.LFE144:
 179              		.section	.text.HAL_SDRAM_DeInit,"ax",%progbits
 180              		.align	1
 181              		.global	HAL_SDRAM_DeInit
 182              		.syntax unified
 183              		.thumb
 184              		.thumb_func
 185              		.fpu fpv5-sp-d16
 187              	HAL_SDRAM_DeInit:
 188              	.LFB142:
 210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** #if (USE_HAL_SDRAM_REGISTER_CALLBACKS == 1)
 189              		.loc 1 210 0
 190              		.cfi_startproc
 191              		@ args = 0, pretend = 0, frame = 0
 192              		@ frame_needed = 0, uses_anonymous_args = 0
 193              	.LVL12:
 194 0000 10B5     		push	{r4, lr}
 195              	.LCFI2:
 196              		.cfi_def_cfa_offset 8
 197              		.cfi_offset 4, -8
 198              		.cfi_offset 14, -4
 199 0002 0446     		mov	r4, r0
 221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** #endif
 200              		.loc 1 221 0
 201 0004 FFF7FEFF 		bl	HAL_SDRAM_MspDeInit
 202              	.LVL13:
 225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** 
 203              		.loc 1 225 0
 204 0008 6168     		ldr	r1, [r4, #4]
 205 000a 2068     		ldr	r0, [r4]
 206 000c FFF7FEFF 		bl	FMC_SDRAM_DeInit
 207              	.LVL14:
 228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** 
 208              		.loc 1 228 0
 209 0010 0020     		movs	r0, #0
 210 0012 84F82C00 		strb	r0, [r4, #44]
 231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** 
 211              		.loc 1 231 0
 212 0016 84F82D00 		strb	r0, [r4, #45]
 234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** 
 213              		.loc 1 234 0
 214 001a 10BD     		pop	{r4, pc}
 215              		.cfi_endproc
 216              	.LFE142:
 218              		.section	.text.HAL_SDRAM_RefreshErrorCallback,"ax",%progbits
 219              		.align	1
 220              		.weak	HAL_SDRAM_RefreshErrorCallback
 221              		.syntax unified
 222              		.thumb
ARM GAS  /tmp/ccH0gOEd.s 			page 11


 223              		.thumb_func
 224              		.fpu fpv5-sp-d16
 226              	HAL_SDRAM_RefreshErrorCallback:
 227              	.LFB146:
 298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Prevent unused argument(s) compilation warning */
 228              		.loc 1 298 0
 229              		.cfi_startproc
 230              		@ args = 0, pretend = 0, frame = 0
 231              		@ frame_needed = 0, uses_anonymous_args = 0
 232              		@ link register save eliminated.
 233              	.LVL15:
 305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** 
 234              		.loc 1 305 0
 235 0000 7047     		bx	lr
 236              		.cfi_endproc
 237              	.LFE146:
 239              		.section	.text.HAL_SDRAM_IRQHandler,"ax",%progbits
 240              		.align	1
 241              		.global	HAL_SDRAM_IRQHandler
 242              		.syntax unified
 243              		.thumb
 244              		.thumb_func
 245              		.fpu fpv5-sp-d16
 247              	HAL_SDRAM_IRQHandler:
 248              	.LFB145:
 275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Check SDRAM interrupt Rising edge flag */
 249              		.loc 1 275 0
 250              		.cfi_startproc
 251              		@ args = 0, pretend = 0, frame = 0
 252              		@ frame_needed = 0, uses_anonymous_args = 0
 253              	.LVL16:
 277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   {
 254              		.loc 1 277 0
 255 0000 0368     		ldr	r3, [r0]
 256 0002 9B69     		ldr	r3, [r3, #24]
 257 0004 13F0010F 		tst	r3, #1
 258 0008 00D1     		bne	.L23
 259 000a 7047     		bx	lr
 260              	.L23:
 275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Check SDRAM interrupt Rising edge flag */
 261              		.loc 1 275 0
 262 000c 10B5     		push	{r4, lr}
 263              	.LCFI3:
 264              		.cfi_def_cfa_offset 8
 265              		.cfi_offset 4, -8
 266              		.cfi_offset 14, -4
 267 000e 0446     		mov	r4, r0
 283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** #endif
 268              		.loc 1 283 0
 269 0010 FFF7FEFF 		bl	HAL_SDRAM_RefreshErrorCallback
 270              	.LVL17:
 287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   }
 271              		.loc 1 287 0
 272 0014 2268     		ldr	r2, [r4]
 273 0016 5369     		ldr	r3, [r2, #20]
 274 0018 43F00103 		orr	r3, r3, #1
 275 001c 5361     		str	r3, [r2, #20]
ARM GAS  /tmp/ccH0gOEd.s 			page 12


 289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** 
 276              		.loc 1 289 0
 277 001e 10BD     		pop	{r4, pc}
 278              		.cfi_endproc
 279              	.LFE145:
 281              		.section	.text.HAL_SDRAM_Read_8b,"ax",%progbits
 282              		.align	1
 283              		.global	HAL_SDRAM_Read_8b
 284              		.syntax unified
 285              		.thumb
 286              		.thumb_func
 287              		.fpu fpv5-sp-d16
 289              	HAL_SDRAM_Read_8b:
 290              	.LFB149:
 337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** 
 338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** /**
 339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @}
 340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   */
 341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** 
 342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** /** @defgroup SDRAM_Exported_Functions_Group2 Input and Output functions 
 343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @brief    Input Output and memory control functions 
 344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   *
 345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   @verbatim    
 346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   ==============================================================================
 347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****                     ##### SDRAM Input and Output functions #####
 348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   ==============================================================================
 349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   [..]  
 350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     This section provides functions allowing to use and control the SDRAM memory
 351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** @endverbatim
 353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @{
 354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   */
 355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** 
 356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** /**
 357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @brief  Reads 8-bit data buffer from the SDRAM memory.
 358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
 359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   *                the configuration information for SDRAM module.
 360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @param  pAddress Pointer to read start address
 361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @param  pDstBuffer Pointer to destination buffer  
 362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @param  BufferSize Size of the buffer to read from memory
 363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @retval HAL status
 364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   */
 365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** HAL_StatusTypeDef HAL_SDRAM_Read_8b(SDRAM_HandleTypeDef *hsdram, uint32_t *pAddress, uint8_t *pDstB
 366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** {
 291              		.loc 1 366 0
 292              		.cfi_startproc
 293              		@ args = 0, pretend = 0, frame = 0
 294              		@ frame_needed = 0, uses_anonymous_args = 0
 295              		@ link register save eliminated.
 296              	.LVL18:
 297 0000 10B4     		push	{r4}
 298              	.LCFI4:
 299              		.cfi_def_cfa_offset 4
 300              		.cfi_offset 4, -4
 301              	.LVL19:
 367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   __IO uint8_t *pSdramAddress = (uint8_t *)pAddress;
 368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
ARM GAS  /tmp/ccH0gOEd.s 			page 13


 369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Process Locked */
 370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   __HAL_LOCK(hsdram);
 302              		.loc 1 370 0
 303 0002 90F82D40 		ldrb	r4, [r0, #45]	@ zero_extendqisi2
 304 0006 012C     		cmp	r4, #1
 305 0008 1BD0     		beq	.L28
 306              		.loc 1 370 0 is_stmt 0 discriminator 2
 307 000a 0124     		movs	r4, #1
 308 000c 80F82D40 		strb	r4, [r0, #45]
 371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Check the SDRAM controller state */
 373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 309              		.loc 1 373 0 is_stmt 1 discriminator 2
 310 0010 90F82C40 		ldrb	r4, [r0, #44]	@ zero_extendqisi2
 311 0014 E4B2     		uxtb	r4, r4
 312 0016 022C     		cmp	r4, #2
 313 0018 15D0     		beq	.L29
 374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   {
 375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     return HAL_BUSY;
 376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   }
 377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   else if(hsdram->State == HAL_SDRAM_STATE_PRECHARGED)
 314              		.loc 1 377 0
 315 001a 90F82C40 		ldrb	r4, [r0, #44]	@ zero_extendqisi2
 316 001e E4B2     		uxtb	r4, r4
 317 0020 052C     		cmp	r4, #5
 318 0022 06D1     		bne	.L26
 378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   {
 379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     return  HAL_ERROR; 
 319              		.loc 1 379 0
 320 0024 0120     		movs	r0, #1
 321              	.LVL20:
 322 0026 09E0     		b	.L25
 323              	.LVL21:
 324              	.L27:
 380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   }  
 381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Read data from source */
 383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   for(; BufferSize != 0; BufferSize--)
 384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   {
 385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     *pDstBuffer = *(__IO uint8_t *)pSdramAddress;  
 325              		.loc 1 385 0 discriminator 2
 326 0028 11F8014B 		ldrb	r4, [r1], #1	@ zero_extendqisi2
 327              	.LVL22:
 328 002c 02F8014B 		strb	r4, [r2], #1
 329              	.LVL23:
 383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   {
 330              		.loc 1 383 0 discriminator 2
 331 0030 013B     		subs	r3, r3, #1
 332              	.LVL24:
 333              	.L26:
 383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   {
 334              		.loc 1 383 0 is_stmt 0 discriminator 1
 335 0032 002B     		cmp	r3, #0
 336 0034 F8D1     		bne	.L27
 386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     pDstBuffer++;
 387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     pSdramAddress++;
 388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   }
ARM GAS  /tmp/ccH0gOEd.s 			page 14


 389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Process Unlocked */
 391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   __HAL_UNLOCK(hsdram);
 337              		.loc 1 391 0 is_stmt 1
 338 0036 80F82D30 		strb	r3, [r0, #45]
 392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   return HAL_OK; 
 339              		.loc 1 393 0
 340 003a 1846     		mov	r0, r3
 341              	.LVL25:
 342              	.L25:
 394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** }
 343              		.loc 1 394 0
 344 003c 5DF8044B 		ldr	r4, [sp], #4
 345              	.LCFI5:
 346              		.cfi_remember_state
 347              		.cfi_restore 4
 348              		.cfi_def_cfa_offset 0
 349 0040 7047     		bx	lr
 350              	.LVL26:
 351              	.L28:
 352              	.LCFI6:
 353              		.cfi_restore_state
 370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 354              		.loc 1 370 0
 355 0042 0220     		movs	r0, #2
 356              	.LVL27:
 357 0044 FAE7     		b	.L25
 358              	.LVL28:
 359              	.L29:
 375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   }
 360              		.loc 1 375 0
 361 0046 0220     		movs	r0, #2
 362              	.LVL29:
 363 0048 F8E7     		b	.L25
 364              		.cfi_endproc
 365              	.LFE149:
 367              		.section	.text.HAL_SDRAM_Write_8b,"ax",%progbits
 368              		.align	1
 369              		.global	HAL_SDRAM_Write_8b
 370              		.syntax unified
 371              		.thumb
 372              		.thumb_func
 373              		.fpu fpv5-sp-d16
 375              	HAL_SDRAM_Write_8b:
 376              	.LFB150:
 395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** 
 396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** 
 397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** /**
 398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @brief  Writes 8-bit data buffer to SDRAM memory.
 399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
 400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   *                the configuration information for SDRAM module.
 401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @param  pAddress Pointer to write start address
 402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @param  pSrcBuffer Pointer to source buffer to write  
 403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @param  BufferSize Size of the buffer to write to memory
 404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @retval HAL status
 405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   */
ARM GAS  /tmp/ccH0gOEd.s 			page 15


 406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** HAL_StatusTypeDef HAL_SDRAM_Write_8b(SDRAM_HandleTypeDef *hsdram, uint32_t *pAddress, uint8_t *pSrc
 407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** {
 377              		.loc 1 407 0
 378              		.cfi_startproc
 379              		@ args = 0, pretend = 0, frame = 0
 380              		@ frame_needed = 0, uses_anonymous_args = 0
 381              		@ link register save eliminated.
 382              	.LVL30:
 383 0000 10B4     		push	{r4}
 384              	.LCFI7:
 385              		.cfi_def_cfa_offset 4
 386              		.cfi_offset 4, -4
 387              	.LVL31:
 408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   __IO uint8_t *pSdramAddress = (uint8_t *)pAddress;
 409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   uint32_t tmp = 0;
 410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Process Locked */
 412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   __HAL_LOCK(hsdram);
 388              		.loc 1 412 0
 389 0002 90F82D40 		ldrb	r4, [r0, #45]	@ zero_extendqisi2
 390 0006 012C     		cmp	r4, #1
 391 0008 19D0     		beq	.L36
 392              		.loc 1 412 0 is_stmt 0 discriminator 2
 393 000a 0124     		movs	r4, #1
 394 000c 80F82D40 		strb	r4, [r0, #45]
 413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Check the SDRAM controller state */
 415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   tmp = hsdram->State;
 395              		.loc 1 415 0 is_stmt 1 discriminator 2
 396 0010 90F82C40 		ldrb	r4, [r0, #44]	@ zero_extendqisi2
 397 0014 E4B2     		uxtb	r4, r4
 398              	.LVL32:
 416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   if(tmp == HAL_SDRAM_STATE_BUSY)
 399              		.loc 1 417 0 discriminator 2
 400 0016 022C     		cmp	r4, #2
 401 0018 13D0     		beq	.L37
 418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   {
 419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     return HAL_BUSY;
 420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   }
 421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   else if((tmp == HAL_SDRAM_STATE_PRECHARGED) || (tmp == HAL_SDRAM_STATE_WRITE_PROTECTED))
 402              		.loc 1 421 0
 403 001a 043C     		subs	r4, r4, #4
 404              	.LVL33:
 405 001c 012C     		cmp	r4, #1
 406 001e 06D8     		bhi	.L34
 422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   {
 423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     return  HAL_ERROR; 
 407              		.loc 1 423 0
 408 0020 0120     		movs	r0, #1
 409              	.LVL34:
 410 0022 09E0     		b	.L33
 411              	.LVL35:
 412              	.L35:
 424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   }
 425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Write data to memory */
ARM GAS  /tmp/ccH0gOEd.s 			page 16


 427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   for(; BufferSize != 0; BufferSize--)
 428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   {
 429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     *(__IO uint8_t *)pSdramAddress = *pSrcBuffer;
 413              		.loc 1 429 0 discriminator 2
 414 0024 12F8014B 		ldrb	r4, [r2], #1	@ zero_extendqisi2
 415              	.LVL36:
 416 0028 01F8014B 		strb	r4, [r1], #1
 417              	.LVL37:
 427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   {
 418              		.loc 1 427 0 discriminator 2
 419 002c 013B     		subs	r3, r3, #1
 420              	.LVL38:
 421              	.L34:
 427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   {
 422              		.loc 1 427 0 is_stmt 0 discriminator 1
 423 002e 002B     		cmp	r3, #0
 424 0030 F8D1     		bne	.L35
 430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     pSrcBuffer++;
 431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     pSdramAddress++;
 432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   }
 433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Process Unlocked */
 435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   __HAL_UNLOCK(hsdram);    
 425              		.loc 1 435 0 is_stmt 1
 426 0032 80F82D30 		strb	r3, [r0, #45]
 436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   return HAL_OK;   
 427              		.loc 1 437 0
 428 0036 1846     		mov	r0, r3
 429              	.LVL39:
 430              	.L33:
 438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** }
 431              		.loc 1 438 0
 432 0038 5DF8044B 		ldr	r4, [sp], #4
 433              	.LCFI8:
 434              		.cfi_remember_state
 435              		.cfi_restore 4
 436              		.cfi_def_cfa_offset 0
 437 003c 7047     		bx	lr
 438              	.LVL40:
 439              	.L36:
 440              	.LCFI9:
 441              		.cfi_restore_state
 412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 442              		.loc 1 412 0
 443 003e 0220     		movs	r0, #2
 444              	.LVL41:
 445 0040 FAE7     		b	.L33
 446              	.LVL42:
 447              	.L37:
 419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   }
 448              		.loc 1 419 0
 449 0042 0220     		movs	r0, #2
 450              	.LVL43:
 451 0044 F8E7     		b	.L33
 452              		.cfi_endproc
 453              	.LFE150:
ARM GAS  /tmp/ccH0gOEd.s 			page 17


 455              		.section	.text.HAL_SDRAM_Read_16b,"ax",%progbits
 456              		.align	1
 457              		.global	HAL_SDRAM_Read_16b
 458              		.syntax unified
 459              		.thumb
 460              		.thumb_func
 461              		.fpu fpv5-sp-d16
 463              	HAL_SDRAM_Read_16b:
 464              	.LFB151:
 439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** 
 440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** 
 441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** /**
 442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @brief  Reads 16-bit data buffer from the SDRAM memory. 
 443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
 444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   *                the configuration information for SDRAM module.
 445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @param  pAddress Pointer to read start address
 446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @param  pDstBuffer Pointer to destination buffer  
 447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @param  BufferSize Size of the buffer to read from memory
 448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @retval HAL status
 449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   */
 450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** HAL_StatusTypeDef HAL_SDRAM_Read_16b(SDRAM_HandleTypeDef *hsdram, uint32_t *pAddress, uint16_t *pDs
 451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** {
 465              		.loc 1 451 0
 466              		.cfi_startproc
 467              		@ args = 0, pretend = 0, frame = 0
 468              		@ frame_needed = 0, uses_anonymous_args = 0
 469              		@ link register save eliminated.
 470              	.LVL44:
 471 0000 10B4     		push	{r4}
 472              	.LCFI10:
 473              		.cfi_def_cfa_offset 4
 474              		.cfi_offset 4, -4
 475              	.LVL45:
 452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   __IO uint16_t *pSdramAddress = (uint16_t *)pAddress;
 453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Process Locked */
 455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   __HAL_LOCK(hsdram);
 476              		.loc 1 455 0
 477 0002 90F82D40 		ldrb	r4, [r0, #45]	@ zero_extendqisi2
 478 0006 012C     		cmp	r4, #1
 479 0008 1BD0     		beq	.L44
 480              		.loc 1 455 0 is_stmt 0 discriminator 2
 481 000a 0124     		movs	r4, #1
 482 000c 80F82D40 		strb	r4, [r0, #45]
 456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Check the SDRAM controller state */
 458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 483              		.loc 1 458 0 is_stmt 1 discriminator 2
 484 0010 90F82C40 		ldrb	r4, [r0, #44]	@ zero_extendqisi2
 485 0014 E4B2     		uxtb	r4, r4
 486 0016 022C     		cmp	r4, #2
 487 0018 15D0     		beq	.L45
 459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   {
 460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     return HAL_BUSY;
 461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   }
 462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   else if(hsdram->State == HAL_SDRAM_STATE_PRECHARGED)
 488              		.loc 1 462 0
ARM GAS  /tmp/ccH0gOEd.s 			page 18


 489 001a 90F82C40 		ldrb	r4, [r0, #44]	@ zero_extendqisi2
 490 001e E4B2     		uxtb	r4, r4
 491 0020 052C     		cmp	r4, #5
 492 0022 06D1     		bne	.L42
 463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   {
 464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     return  HAL_ERROR; 
 493              		.loc 1 464 0
 494 0024 0120     		movs	r0, #1
 495              	.LVL46:
 496 0026 09E0     		b	.L41
 497              	.LVL47:
 498              	.L43:
 465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   }  
 466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Read data from source */
 468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   for(; BufferSize != 0; BufferSize--)
 469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   {
 470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     *pDstBuffer = *(__IO uint16_t *)pSdramAddress;  
 499              		.loc 1 470 0 discriminator 2
 500 0028 31F8024B 		ldrh	r4, [r1], #2
 501              	.LVL48:
 502 002c 22F8024B 		strh	r4, [r2], #2	@ movhi
 503              	.LVL49:
 468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   {
 504              		.loc 1 468 0 discriminator 2
 505 0030 013B     		subs	r3, r3, #1
 506              	.LVL50:
 507              	.L42:
 468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   {
 508              		.loc 1 468 0 is_stmt 0 discriminator 1
 509 0032 002B     		cmp	r3, #0
 510 0034 F8D1     		bne	.L43
 471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     pDstBuffer++;
 472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     pSdramAddress++;               
 473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   }
 474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Process Unlocked */
 476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   __HAL_UNLOCK(hsdram);       
 511              		.loc 1 476 0 is_stmt 1
 512 0036 80F82D30 		strb	r3, [r0, #45]
 477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   return HAL_OK; 
 513              		.loc 1 478 0
 514 003a 1846     		mov	r0, r3
 515              	.LVL51:
 516              	.L41:
 479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** }
 517              		.loc 1 479 0
 518 003c 5DF8044B 		ldr	r4, [sp], #4
 519              	.LCFI11:
 520              		.cfi_remember_state
 521              		.cfi_restore 4
 522              		.cfi_def_cfa_offset 0
 523 0040 7047     		bx	lr
 524              	.LVL52:
 525              	.L44:
 526              	.LCFI12:
ARM GAS  /tmp/ccH0gOEd.s 			page 19


 527              		.cfi_restore_state
 455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 528              		.loc 1 455 0
 529 0042 0220     		movs	r0, #2
 530              	.LVL53:
 531 0044 FAE7     		b	.L41
 532              	.LVL54:
 533              	.L45:
 460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   }
 534              		.loc 1 460 0
 535 0046 0220     		movs	r0, #2
 536              	.LVL55:
 537 0048 F8E7     		b	.L41
 538              		.cfi_endproc
 539              	.LFE151:
 541              		.section	.text.HAL_SDRAM_Write_16b,"ax",%progbits
 542              		.align	1
 543              		.global	HAL_SDRAM_Write_16b
 544              		.syntax unified
 545              		.thumb
 546              		.thumb_func
 547              		.fpu fpv5-sp-d16
 549              	HAL_SDRAM_Write_16b:
 550              	.LFB152:
 480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** 
 481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** /**
 482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @brief  Writes 16-bit data buffer to SDRAM memory. 
 483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
 484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   *                the configuration information for SDRAM module.
 485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @param  pAddress Pointer to write start address
 486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @param  pSrcBuffer Pointer to source buffer to write  
 487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @param  BufferSize Size of the buffer to write to memory
 488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @retval HAL status
 489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   */
 490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** HAL_StatusTypeDef HAL_SDRAM_Write_16b(SDRAM_HandleTypeDef *hsdram, uint32_t *pAddress, uint16_t *pS
 491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** {
 551              		.loc 1 491 0
 552              		.cfi_startproc
 553              		@ args = 0, pretend = 0, frame = 0
 554              		@ frame_needed = 0, uses_anonymous_args = 0
 555              		@ link register save eliminated.
 556              	.LVL56:
 557 0000 10B4     		push	{r4}
 558              	.LCFI13:
 559              		.cfi_def_cfa_offset 4
 560              		.cfi_offset 4, -4
 561              	.LVL57:
 492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   __IO uint16_t *pSdramAddress = (uint16_t *)pAddress;
 493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   uint32_t tmp = 0;
 494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Process Locked */
 496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   __HAL_LOCK(hsdram);
 562              		.loc 1 496 0
 563 0002 90F82D40 		ldrb	r4, [r0, #45]	@ zero_extendqisi2
 564 0006 012C     		cmp	r4, #1
 565 0008 19D0     		beq	.L52
 566              		.loc 1 496 0 is_stmt 0 discriminator 2
ARM GAS  /tmp/ccH0gOEd.s 			page 20


 567 000a 0124     		movs	r4, #1
 568 000c 80F82D40 		strb	r4, [r0, #45]
 497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Check the SDRAM controller state */
 499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   tmp = hsdram->State;
 569              		.loc 1 499 0 is_stmt 1 discriminator 2
 570 0010 90F82C40 		ldrb	r4, [r0, #44]	@ zero_extendqisi2
 571 0014 E4B2     		uxtb	r4, r4
 572              	.LVL58:
 500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   if(tmp == HAL_SDRAM_STATE_BUSY)
 573              		.loc 1 501 0 discriminator 2
 574 0016 022C     		cmp	r4, #2
 575 0018 13D0     		beq	.L53
 502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   {
 503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     return HAL_BUSY;
 504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   }
 505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   else if((tmp == HAL_SDRAM_STATE_PRECHARGED) || (tmp == HAL_SDRAM_STATE_WRITE_PROTECTED))
 576              		.loc 1 505 0
 577 001a 043C     		subs	r4, r4, #4
 578              	.LVL59:
 579 001c 012C     		cmp	r4, #1
 580 001e 06D8     		bhi	.L50
 506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   {
 507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     return  HAL_ERROR; 
 581              		.loc 1 507 0
 582 0020 0120     		movs	r0, #1
 583              	.LVL60:
 584 0022 09E0     		b	.L49
 585              	.LVL61:
 586              	.L51:
 508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   }
 509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Write data to memory */
 511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   for(; BufferSize != 0; BufferSize--)
 512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   {
 513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     *(__IO uint16_t *)pSdramAddress = *pSrcBuffer;
 587              		.loc 1 513 0 discriminator 2
 588 0024 32F8024B 		ldrh	r4, [r2], #2
 589              	.LVL62:
 590 0028 21F8024B 		strh	r4, [r1], #2	@ movhi
 591              	.LVL63:
 511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   {
 592              		.loc 1 511 0 discriminator 2
 593 002c 013B     		subs	r3, r3, #1
 594              	.LVL64:
 595              	.L50:
 511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   {
 596              		.loc 1 511 0 is_stmt 0 discriminator 1
 597 002e 002B     		cmp	r3, #0
 598 0030 F8D1     		bne	.L51
 514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     pSrcBuffer++;
 515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     pSdramAddress++;            
 516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   }
 517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Process Unlocked */
 519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   __HAL_UNLOCK(hsdram);    
ARM GAS  /tmp/ccH0gOEd.s 			page 21


 599              		.loc 1 519 0 is_stmt 1
 600 0032 80F82D30 		strb	r3, [r0, #45]
 520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   return HAL_OK;   
 601              		.loc 1 521 0
 602 0036 1846     		mov	r0, r3
 603              	.LVL65:
 604              	.L49:
 522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** }
 605              		.loc 1 522 0
 606 0038 5DF8044B 		ldr	r4, [sp], #4
 607              	.LCFI14:
 608              		.cfi_remember_state
 609              		.cfi_restore 4
 610              		.cfi_def_cfa_offset 0
 611 003c 7047     		bx	lr
 612              	.LVL66:
 613              	.L52:
 614              	.LCFI15:
 615              		.cfi_restore_state
 496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 616              		.loc 1 496 0
 617 003e 0220     		movs	r0, #2
 618              	.LVL67:
 619 0040 FAE7     		b	.L49
 620              	.LVL68:
 621              	.L53:
 503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   }
 622              		.loc 1 503 0
 623 0042 0220     		movs	r0, #2
 624              	.LVL69:
 625 0044 F8E7     		b	.L49
 626              		.cfi_endproc
 627              	.LFE152:
 629              		.section	.text.HAL_SDRAM_Read_32b,"ax",%progbits
 630              		.align	1
 631              		.global	HAL_SDRAM_Read_32b
 632              		.syntax unified
 633              		.thumb
 634              		.thumb_func
 635              		.fpu fpv5-sp-d16
 637              	HAL_SDRAM_Read_32b:
 638              	.LFB153:
 523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** 
 524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** /**
 525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @brief  Reads 32-bit data buffer from the SDRAM memory. 
 526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
 527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   *                the configuration information for SDRAM module.
 528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @param  pAddress Pointer to read start address
 529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @param  pDstBuffer Pointer to destination buffer  
 530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @param  BufferSize Size of the buffer to read from memory
 531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @retval HAL status
 532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   */
 533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** HAL_StatusTypeDef HAL_SDRAM_Read_32b(SDRAM_HandleTypeDef *hsdram, uint32_t *pAddress, uint32_t *pDs
 534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** {
 639              		.loc 1 534 0
 640              		.cfi_startproc
ARM GAS  /tmp/ccH0gOEd.s 			page 22


 641              		@ args = 0, pretend = 0, frame = 0
 642              		@ frame_needed = 0, uses_anonymous_args = 0
 643              		@ link register save eliminated.
 644              	.LVL70:
 645 0000 10B4     		push	{r4}
 646              	.LCFI16:
 647              		.cfi_def_cfa_offset 4
 648              		.cfi_offset 4, -4
 649              	.LVL71:
 535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   __IO uint32_t *pSdramAddress = (uint32_t *)pAddress;
 536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Process Locked */
 538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   __HAL_LOCK(hsdram);
 650              		.loc 1 538 0
 651 0002 90F82D40 		ldrb	r4, [r0, #45]	@ zero_extendqisi2
 652 0006 012C     		cmp	r4, #1
 653 0008 1BD0     		beq	.L60
 654              		.loc 1 538 0 is_stmt 0 discriminator 2
 655 000a 0124     		movs	r4, #1
 656 000c 80F82D40 		strb	r4, [r0, #45]
 539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Check the SDRAM controller state */
 541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 657              		.loc 1 541 0 is_stmt 1 discriminator 2
 658 0010 90F82C40 		ldrb	r4, [r0, #44]	@ zero_extendqisi2
 659 0014 E4B2     		uxtb	r4, r4
 660 0016 022C     		cmp	r4, #2
 661 0018 15D0     		beq	.L61
 542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   {
 543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     return HAL_BUSY;
 544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   }
 545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   else if(hsdram->State == HAL_SDRAM_STATE_PRECHARGED)
 662              		.loc 1 545 0
 663 001a 90F82C40 		ldrb	r4, [r0, #44]	@ zero_extendqisi2
 664 001e E4B2     		uxtb	r4, r4
 665 0020 052C     		cmp	r4, #5
 666 0022 06D1     		bne	.L58
 546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   {
 547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     return  HAL_ERROR; 
 667              		.loc 1 547 0
 668 0024 0120     		movs	r0, #1
 669              	.LVL72:
 670 0026 09E0     		b	.L57
 671              	.LVL73:
 672              	.L59:
 548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   }  
 549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Read data from source */
 551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   for(; BufferSize != 0; BufferSize--)
 552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   {
 553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     *pDstBuffer = *(__IO uint32_t *)pSdramAddress;  
 673              		.loc 1 553 0 discriminator 2
 674 0028 51F8044B 		ldr	r4, [r1], #4
 675              	.LVL74:
 676 002c 42F8044B 		str	r4, [r2], #4
 677              	.LVL75:
 551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   {
ARM GAS  /tmp/ccH0gOEd.s 			page 23


 678              		.loc 1 551 0 discriminator 2
 679 0030 013B     		subs	r3, r3, #1
 680              	.LVL76:
 681              	.L58:
 551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   {
 682              		.loc 1 551 0 is_stmt 0 discriminator 1
 683 0032 002B     		cmp	r3, #0
 684 0034 F8D1     		bne	.L59
 554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     pDstBuffer++;
 555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     pSdramAddress++;               
 556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   }
 557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Process Unlocked */
 559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   __HAL_UNLOCK(hsdram);       
 685              		.loc 1 559 0 is_stmt 1
 686 0036 80F82D30 		strb	r3, [r0, #45]
 560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   return HAL_OK; 
 687              		.loc 1 561 0
 688 003a 1846     		mov	r0, r3
 689              	.LVL77:
 690              	.L57:
 562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** }
 691              		.loc 1 562 0
 692 003c 5DF8044B 		ldr	r4, [sp], #4
 693              	.LCFI17:
 694              		.cfi_remember_state
 695              		.cfi_restore 4
 696              		.cfi_def_cfa_offset 0
 697 0040 7047     		bx	lr
 698              	.LVL78:
 699              	.L60:
 700              	.LCFI18:
 701              		.cfi_restore_state
 538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 702              		.loc 1 538 0
 703 0042 0220     		movs	r0, #2
 704              	.LVL79:
 705 0044 FAE7     		b	.L57
 706              	.LVL80:
 707              	.L61:
 543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   }
 708              		.loc 1 543 0
 709 0046 0220     		movs	r0, #2
 710              	.LVL81:
 711 0048 F8E7     		b	.L57
 712              		.cfi_endproc
 713              	.LFE153:
 715              		.section	.text.HAL_SDRAM_Write_32b,"ax",%progbits
 716              		.align	1
 717              		.global	HAL_SDRAM_Write_32b
 718              		.syntax unified
 719              		.thumb
 720              		.thumb_func
 721              		.fpu fpv5-sp-d16
 723              	HAL_SDRAM_Write_32b:
 724              	.LFB154:
ARM GAS  /tmp/ccH0gOEd.s 			page 24


 563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** 
 564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** /**
 565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @brief  Writes 32-bit data buffer to SDRAM memory. 
 566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
 567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   *                the configuration information for SDRAM module.
 568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @param  pAddress Pointer to write start address
 569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @param  pSrcBuffer Pointer to source buffer to write  
 570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @param  BufferSize Size of the buffer to write to memory
 571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @retval HAL status
 572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   */
 573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** HAL_StatusTypeDef HAL_SDRAM_Write_32b(SDRAM_HandleTypeDef *hsdram, uint32_t *pAddress, uint32_t *pS
 574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** {
 725              		.loc 1 574 0
 726              		.cfi_startproc
 727              		@ args = 0, pretend = 0, frame = 0
 728              		@ frame_needed = 0, uses_anonymous_args = 0
 729              		@ link register save eliminated.
 730              	.LVL82:
 731 0000 10B4     		push	{r4}
 732              	.LCFI19:
 733              		.cfi_def_cfa_offset 4
 734              		.cfi_offset 4, -4
 735              	.LVL83:
 575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   __IO uint32_t *pSdramAddress = (uint32_t *)pAddress;
 576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   uint32_t tmp = 0;
 577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Process Locked */
 579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   __HAL_LOCK(hsdram);
 736              		.loc 1 579 0
 737 0002 90F82D40 		ldrb	r4, [r0, #45]	@ zero_extendqisi2
 738 0006 012C     		cmp	r4, #1
 739 0008 19D0     		beq	.L68
 740              		.loc 1 579 0 is_stmt 0 discriminator 2
 741 000a 0124     		movs	r4, #1
 742 000c 80F82D40 		strb	r4, [r0, #45]
 580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Check the SDRAM controller state */
 582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   tmp = hsdram->State;
 743              		.loc 1 582 0 is_stmt 1 discriminator 2
 744 0010 90F82C40 		ldrb	r4, [r0, #44]	@ zero_extendqisi2
 745 0014 E4B2     		uxtb	r4, r4
 746              	.LVL84:
 583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   if(tmp == HAL_SDRAM_STATE_BUSY)
 747              		.loc 1 584 0 discriminator 2
 748 0016 022C     		cmp	r4, #2
 749 0018 13D0     		beq	.L69
 585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   {
 586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     return HAL_BUSY;
 587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   }
 588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   else if((tmp == HAL_SDRAM_STATE_PRECHARGED) || (tmp == HAL_SDRAM_STATE_WRITE_PROTECTED))
 750              		.loc 1 588 0
 751 001a 043C     		subs	r4, r4, #4
 752              	.LVL85:
 753 001c 012C     		cmp	r4, #1
 754 001e 06D8     		bhi	.L66
 589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   {
ARM GAS  /tmp/ccH0gOEd.s 			page 25


 590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     return  HAL_ERROR; 
 755              		.loc 1 590 0
 756 0020 0120     		movs	r0, #1
 757              	.LVL86:
 758 0022 09E0     		b	.L65
 759              	.LVL87:
 760              	.L67:
 591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   }
 592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Write data to memory */
 594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   for(; BufferSize != 0; BufferSize--)
 595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   {
 596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     *(__IO uint32_t *)pSdramAddress = *pSrcBuffer;
 761              		.loc 1 596 0 discriminator 2
 762 0024 52F8044B 		ldr	r4, [r2], #4
 763              	.LVL88:
 764 0028 41F8044B 		str	r4, [r1], #4
 765              	.LVL89:
 594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   {
 766              		.loc 1 594 0 discriminator 2
 767 002c 013B     		subs	r3, r3, #1
 768              	.LVL90:
 769              	.L66:
 594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   {
 770              		.loc 1 594 0 is_stmt 0 discriminator 1
 771 002e 002B     		cmp	r3, #0
 772 0030 F8D1     		bne	.L67
 597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     pSrcBuffer++;
 598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     pSdramAddress++;          
 599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   }
 600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Process Unlocked */
 602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   __HAL_UNLOCK(hsdram);    
 773              		.loc 1 602 0 is_stmt 1
 774 0032 80F82D30 		strb	r3, [r0, #45]
 603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   return HAL_OK;  
 775              		.loc 1 604 0
 776 0036 1846     		mov	r0, r3
 777              	.LVL91:
 778              	.L65:
 605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** }
 779              		.loc 1 605 0
 780 0038 5DF8044B 		ldr	r4, [sp], #4
 781              	.LCFI20:
 782              		.cfi_remember_state
 783              		.cfi_restore 4
 784              		.cfi_def_cfa_offset 0
 785 003c 7047     		bx	lr
 786              	.LVL92:
 787              	.L68:
 788              	.LCFI21:
 789              		.cfi_restore_state
 579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 790              		.loc 1 579 0
 791 003e 0220     		movs	r0, #2
 792              	.LVL93:
ARM GAS  /tmp/ccH0gOEd.s 			page 26


 793 0040 FAE7     		b	.L65
 794              	.LVL94:
 795              	.L69:
 586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   }
 796              		.loc 1 586 0
 797 0042 0220     		movs	r0, #2
 798              	.LVL95:
 799 0044 F8E7     		b	.L65
 800              		.cfi_endproc
 801              	.LFE154:
 803              		.section	.text.HAL_SDRAM_Read_DMA,"ax",%progbits
 804              		.align	1
 805              		.global	HAL_SDRAM_Read_DMA
 806              		.syntax unified
 807              		.thumb
 808              		.thumb_func
 809              		.fpu fpv5-sp-d16
 811              	HAL_SDRAM_Read_DMA:
 812              	.LFB155:
 606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** 
 607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** /**
 608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @brief  Reads a Words data from the SDRAM memory using DMA transfer. 
 609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
 610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   *                the configuration information for SDRAM module.
 611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @param  pAddress Pointer to read start address
 612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @param  pDstBuffer Pointer to destination buffer  
 613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @param  BufferSize Size of the buffer to read from memory
 614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @retval HAL status
 615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   */
 616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** HAL_StatusTypeDef HAL_SDRAM_Read_DMA(SDRAM_HandleTypeDef *hsdram, uint32_t *pAddress, uint32_t *pDs
 617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** {
 813              		.loc 1 617 0
 814              		.cfi_startproc
 815              		@ args = 0, pretend = 0, frame = 0
 816              		@ frame_needed = 0, uses_anonymous_args = 0
 817              	.LVL96:
 818 0000 38B5     		push	{r3, r4, r5, lr}
 819              	.LCFI22:
 820              		.cfi_def_cfa_offset 16
 821              		.cfi_offset 3, -16
 822              		.cfi_offset 4, -12
 823              		.cfi_offset 5, -8
 824              		.cfi_offset 14, -4
 825              	.LVL97:
 618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   uint32_t tmp = 0;
 619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     
 620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Process Locked */
 621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   __HAL_LOCK(hsdram);
 826              		.loc 1 621 0
 827 0002 90F82D40 		ldrb	r4, [r0, #45]	@ zero_extendqisi2
 828 0006 012C     		cmp	r4, #1
 829 0008 17D0     		beq	.L74
 830              		.loc 1 621 0 is_stmt 0 discriminator 2
 831 000a 0124     		movs	r4, #1
 832 000c 80F82D40 		strb	r4, [r0, #45]
 622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Check the SDRAM controller state */  
ARM GAS  /tmp/ccH0gOEd.s 			page 27


 624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   tmp = hsdram->State;
 833              		.loc 1 624 0 is_stmt 1 discriminator 2
 834 0010 90F82C40 		ldrb	r4, [r0, #44]	@ zero_extendqisi2
 835 0014 E4B2     		uxtb	r4, r4
 836              	.LVL98:
 625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   if(tmp == HAL_SDRAM_STATE_BUSY)
 837              		.loc 1 626 0 discriminator 2
 838 0016 022C     		cmp	r4, #2
 839 0018 11D0     		beq	.L75
 627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   {
 628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     return HAL_BUSY;
 629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   }
 630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   else if(tmp == HAL_SDRAM_STATE_PRECHARGED)
 840              		.loc 1 630 0
 841 001a 052C     		cmp	r4, #5
 842 001c 11D0     		beq	.L76
 843 001e 0446     		mov	r4, r0
 844              	.LVL99:
 631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   {
 632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     return  HAL_ERROR; 
 633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   }  
 634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Configure DMA user callbacks */
 636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   hsdram->hdma->XferCpltCallback  = HAL_SDRAM_DMA_XferCpltCallback;
 845              		.loc 1 636 0
 846 0020 006B     		ldr	r0, [r0, #48]
 847              	.LVL100:
 848 0022 094D     		ldr	r5, .L78
 849 0024 C563     		str	r5, [r0, #60]
 637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   hsdram->hdma->XferErrorCallback = HAL_SDRAM_DMA_XferErrorCallback;
 850              		.loc 1 637 0
 851 0026 206B     		ldr	r0, [r4, #48]
 852 0028 084D     		ldr	r5, .L78+4
 853 002a C564     		str	r5, [r0, #76]
 638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Enable the DMA Stream */
 640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   HAL_DMA_Start_IT(hsdram->hdma, (uint32_t)pAddress, (uint32_t)pDstBuffer, (uint32_t)BufferSize);
 854              		.loc 1 640 0
 855 002c 206B     		ldr	r0, [r4, #48]
 856 002e FFF7FEFF 		bl	HAL_DMA_Start_IT
 857              	.LVL101:
 641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Process Unlocked */
 643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   __HAL_UNLOCK(hsdram);  
 858              		.loc 1 643 0
 859 0032 0020     		movs	r0, #0
 860 0034 84F82D00 		strb	r0, [r4, #45]
 861              	.LVL102:
 862              	.L73:
 644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   return HAL_OK; 
 646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** }
 863              		.loc 1 646 0
 864 0038 38BD     		pop	{r3, r4, r5, pc}
 865              	.LVL103:
 866              	.L74:
ARM GAS  /tmp/ccH0gOEd.s 			page 28


 621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 867              		.loc 1 621 0
 868 003a 0220     		movs	r0, #2
 869              	.LVL104:
 870 003c FCE7     		b	.L73
 871              	.LVL105:
 872              	.L75:
 628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   }
 873              		.loc 1 628 0
 874 003e 0220     		movs	r0, #2
 875              	.LVL106:
 876 0040 FAE7     		b	.L73
 877              	.LVL107:
 878              	.L76:
 632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   }  
 879              		.loc 1 632 0
 880 0042 0120     		movs	r0, #1
 881              	.LVL108:
 882 0044 F8E7     		b	.L73
 883              	.L79:
 884 0046 00BF     		.align	2
 885              	.L78:
 886 0048 00000000 		.word	HAL_SDRAM_DMA_XferCpltCallback
 887 004c 00000000 		.word	HAL_SDRAM_DMA_XferErrorCallback
 888              		.cfi_endproc
 889              	.LFE155:
 891              		.section	.text.HAL_SDRAM_Write_DMA,"ax",%progbits
 892              		.align	1
 893              		.global	HAL_SDRAM_Write_DMA
 894              		.syntax unified
 895              		.thumb
 896              		.thumb_func
 897              		.fpu fpv5-sp-d16
 899              	HAL_SDRAM_Write_DMA:
 900              	.LFB156:
 647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** 
 648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** /**
 649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @brief  Writes a Words data buffer to SDRAM memory using DMA transfer.
 650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
 651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   *                the configuration information for SDRAM module.
 652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @param  pAddress Pointer to write start address
 653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @param  pSrcBuffer Pointer to source buffer to write  
 654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @param  BufferSize Size of the buffer to write to memory
 655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @retval HAL status
 656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   */
 657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** HAL_StatusTypeDef HAL_SDRAM_Write_DMA(SDRAM_HandleTypeDef *hsdram, uint32_t *pAddress, uint32_t *pS
 658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** {
 901              		.loc 1 658 0
 902              		.cfi_startproc
 903              		@ args = 0, pretend = 0, frame = 0
 904              		@ frame_needed = 0, uses_anonymous_args = 0
 905              	.LVL109:
 906 0000 38B5     		push	{r3, r4, r5, lr}
 907              	.LCFI23:
 908              		.cfi_def_cfa_offset 16
 909              		.cfi_offset 3, -16
 910              		.cfi_offset 4, -12
ARM GAS  /tmp/ccH0gOEd.s 			page 29


 911              		.cfi_offset 5, -8
 912              		.cfi_offset 14, -4
 913              	.LVL110:
 659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   uint32_t tmp = 0;
 660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Process Locked */
 662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   __HAL_LOCK(hsdram);
 914              		.loc 1 662 0
 915 0002 90F82D40 		ldrb	r4, [r0, #45]	@ zero_extendqisi2
 916 0006 012C     		cmp	r4, #1
 917 0008 1BD0     		beq	.L82
 918              		.loc 1 662 0 is_stmt 0 discriminator 2
 919 000a 0124     		movs	r4, #1
 920 000c 80F82D40 		strb	r4, [r0, #45]
 663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Check the SDRAM controller state */  
 665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   tmp = hsdram->State;
 921              		.loc 1 665 0 is_stmt 1 discriminator 2
 922 0010 90F82C40 		ldrb	r4, [r0, #44]	@ zero_extendqisi2
 923 0014 E4B2     		uxtb	r4, r4
 924              	.LVL111:
 666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   if(tmp == HAL_SDRAM_STATE_BUSY)
 925              		.loc 1 667 0 discriminator 2
 926 0016 022C     		cmp	r4, #2
 927 0018 15D0     		beq	.L83
 668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   {
 669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     return HAL_BUSY;
 670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   }
 671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   else if((tmp == HAL_SDRAM_STATE_PRECHARGED) || (tmp == HAL_SDRAM_STATE_WRITE_PROTECTED))
 928              		.loc 1 671 0
 929 001a 043C     		subs	r4, r4, #4
 930              	.LVL112:
 931 001c 012C     		cmp	r4, #1
 932 001e 14D9     		bls	.L84
 933 0020 1446     		mov	r4, r2
 934              	.LVL113:
 935 0022 0A46     		mov	r2, r1
 936              	.LVL114:
 937 0024 0546     		mov	r5, r0
 672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   {
 673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     return  HAL_ERROR; 
 674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   }  
 675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Configure DMA user callbacks */
 677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   hsdram->hdma->XferCpltCallback  = HAL_SDRAM_DMA_XferCpltCallback;
 938              		.loc 1 677 0
 939 0026 016B     		ldr	r1, [r0, #48]
 940              	.LVL115:
 941 0028 0948     		ldr	r0, .L86
 942              	.LVL116:
 943 002a C863     		str	r0, [r1, #60]
 678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   hsdram->hdma->XferErrorCallback = HAL_SDRAM_DMA_XferErrorCallback;
 944              		.loc 1 678 0
 945 002c 296B     		ldr	r1, [r5, #48]
 946 002e 0948     		ldr	r0, .L86+4
 947 0030 C864     		str	r0, [r1, #76]
ARM GAS  /tmp/ccH0gOEd.s 			page 30


 679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Enable the DMA Stream */
 681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   HAL_DMA_Start_IT(hsdram->hdma, (uint32_t)pSrcBuffer, (uint32_t)pAddress, (uint32_t)BufferSize);
 948              		.loc 1 681 0
 949 0032 2146     		mov	r1, r4
 950 0034 286B     		ldr	r0, [r5, #48]
 951 0036 FFF7FEFF 		bl	HAL_DMA_Start_IT
 952              	.LVL117:
 682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Process Unlocked */
 684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   __HAL_UNLOCK(hsdram);
 953              		.loc 1 684 0
 954 003a 0020     		movs	r0, #0
 955 003c 85F82D00 		strb	r0, [r5, #45]
 956              	.LVL118:
 957              	.L81:
 685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   return HAL_OK;
 687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** }
 958              		.loc 1 687 0
 959 0040 38BD     		pop	{r3, r4, r5, pc}
 960              	.LVL119:
 961              	.L82:
 662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 962              		.loc 1 662 0
 963 0042 0220     		movs	r0, #2
 964              	.LVL120:
 965 0044 FCE7     		b	.L81
 966              	.LVL121:
 967              	.L83:
 669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   }
 968              		.loc 1 669 0
 969 0046 0220     		movs	r0, #2
 970              	.LVL122:
 971 0048 FAE7     		b	.L81
 972              	.LVL123:
 973              	.L84:
 673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   }  
 974              		.loc 1 673 0
 975 004a 0120     		movs	r0, #1
 976              	.LVL124:
 977 004c F8E7     		b	.L81
 978              	.L87:
 979 004e 00BF     		.align	2
 980              	.L86:
 981 0050 00000000 		.word	HAL_SDRAM_DMA_XferCpltCallback
 982 0054 00000000 		.word	HAL_SDRAM_DMA_XferErrorCallback
 983              		.cfi_endproc
 984              	.LFE156:
 986              		.section	.text.HAL_SDRAM_WriteProtection_Enable,"ax",%progbits
 987              		.align	1
 988              		.global	HAL_SDRAM_WriteProtection_Enable
 989              		.syntax unified
 990              		.thumb
 991              		.thumb_func
 992              		.fpu fpv5-sp-d16
 994              	HAL_SDRAM_WriteProtection_Enable:
ARM GAS  /tmp/ccH0gOEd.s 			page 31


 995              	.LFB157:
 688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** #if (USE_HAL_SDRAM_REGISTER_CALLBACKS == 1)
 689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** /**
 690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @brief  Register a User SDRAM Callback
 691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   *         To be used instead of the weak (surcharged) predefined callback
 692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @param hsdram : SDRAM handle
 693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @param CallbackId : ID of the callback to be registered
 694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   *        This parameter can be one of the following values:
 695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   *          @arg @ref HAL_SDRAM_MSP_INIT_CB_ID       SDRAM MspInit callback ID
 696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   *          @arg @ref HAL_SDRAM_MSP_DEINIT_CB_ID     SDRAM MspDeInit callback ID
 697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   *          @arg @ref HAL_SDRAM_REFRESH_ERR_CB_ID    SDRAM Refresh Error callback ID
 698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @param pCallback : pointer to the Callback function
 699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @retval status
 700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   */
 701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** HAL_StatusTypeDef HAL_SDRAM_RegisterCallback (SDRAM_HandleTypeDef *hsdram, HAL_SDRAM_CallbackIDType
 702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** {
 703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   HAL_StatusTypeDef status = HAL_OK;
 704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   HAL_SDRAM_StateTypeDef state;
 705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   if(pCallback == NULL)
 707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   {
 708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     return HAL_ERROR;
 709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   }
 710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** 
 711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Process locked */
 712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   __HAL_LOCK(hsdram);
 713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   state = hsdram->State;
 715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   if((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_WRITE_PROTECTED))
 716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   {
 717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     switch (CallbackId)
 718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     {
 719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     case HAL_SDRAM_MSP_INIT_CB_ID :
 720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****       hsdram->MspInitCallback = pCallback;
 721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****       break;
 722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     case HAL_SDRAM_MSP_DEINIT_CB_ID :
 723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****       hsdram->MspDeInitCallback = pCallback;
 724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****       break;
 725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     case HAL_SDRAM_REFRESH_ERR_CB_ID :
 726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****       hsdram->RefreshErrorCallback = pCallback;
 727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****       break;
 728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     default :
 729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****       /* update return status */
 730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****       status =  HAL_ERROR;
 731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****       break;
 732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     }
 733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   }
 734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   else if(hsdram->State == HAL_SDRAM_STATE_RESET)
 735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   {
 736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     switch (CallbackId)
 737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     {
 738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     case HAL_SDRAM_MSP_INIT_CB_ID :
 739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****       hsdram->MspInitCallback = pCallback;
 740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****       break;
 741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     case HAL_SDRAM_MSP_DEINIT_CB_ID :
 742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****       hsdram->MspDeInitCallback = pCallback;
 743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****       break;
ARM GAS  /tmp/ccH0gOEd.s 			page 32


 744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     default :
 745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****       /* update return status */
 746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****       status =  HAL_ERROR;
 747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****       break;
 748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     }
 749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   }
 750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   else
 751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   {
 752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     /* update return status */
 753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     status =  HAL_ERROR;
 754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   }
 755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** 
 756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Release Lock */
 757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   __HAL_UNLOCK(hsdram);
 758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   return status;
 759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** }
 760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** /**
 761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @brief  Unregister a User SDRAM Callback
 762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   *         SDRAM Callback is redirected to the weak (surcharged) predefined callback
 763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @param hsdram : SDRAM handle
 764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @param CallbackId : ID of the callback to be unregistered
 765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   *        This parameter can be one of the following values:
 766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   *          @arg @ref HAL_SDRAM_MSP_INIT_CB_ID       SDRAM MspInit callback ID
 767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   *          @arg @ref HAL_SDRAM_MSP_DEINIT_CB_ID     SDRAM MspDeInit callback ID
 768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   *          @arg @ref HAL_SDRAM_REFRESH_ERR_CB_ID    SDRAM Refresh Error callback ID
 769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   *          @arg @ref HAL_SDRAM_DMA_XFER_CPLT_CB_ID  SDRAM DMA Xfer Complete callback ID
 770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   *          @arg @ref HAL_SDRAM_DMA_XFER_ERR_CB_ID   SDRAM DMA Xfer Error callback ID
 771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @retval status
 772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   */
 773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** HAL_StatusTypeDef HAL_SDRAM_UnRegisterCallback (SDRAM_HandleTypeDef *hsdram, HAL_SDRAM_CallbackIDTy
 774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** {
 775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   HAL_StatusTypeDef status = HAL_OK;
 776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   HAL_SDRAM_StateTypeDef state;
 777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Process locked */
 779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   __HAL_LOCK(hsdram);
 780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** 
 781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   state = hsdram->State;
 782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   if((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_WRITE_PROTECTED))
 783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   {
 784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     switch (CallbackId)
 785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     {
 786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     case HAL_SDRAM_MSP_INIT_CB_ID :
 787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****       hsdram->MspInitCallback = HAL_SDRAM_MspInit;
 788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****       break;
 789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     case HAL_SDRAM_MSP_DEINIT_CB_ID :
 790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****       hsdram->MspDeInitCallback = HAL_SDRAM_MspDeInit;
 791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****       break;
 792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     case HAL_SDRAM_REFRESH_ERR_CB_ID :
 793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****       hsdram->RefreshErrorCallback = HAL_SDRAM_RefreshErrorCallback;
 794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****       break;
 795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     case HAL_SDRAM_DMA_XFER_CPLT_CB_ID :
 796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****       hsdram->DmaXferCpltCallback = HAL_SDRAM_DMA_XferCpltCallback;
 797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****       break;
 798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     case HAL_SDRAM_DMA_XFER_ERR_CB_ID :
 799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****       hsdram->DmaXferErrorCallback = HAL_SDRAM_DMA_XferErrorCallback;
 800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****       break;
ARM GAS  /tmp/ccH0gOEd.s 			page 33


 801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     default :
 802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****       /* update return status */
 803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****       status =  HAL_ERROR;
 804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****       break;
 805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     }
 806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   }
 807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   else if(hsdram->State == HAL_SDRAM_STATE_RESET)
 808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   {
 809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     switch (CallbackId)
 810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     {
 811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     case HAL_SDRAM_MSP_INIT_CB_ID :
 812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****       hsdram->MspInitCallback = HAL_SDRAM_MspInit;
 813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****       break;
 814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     case HAL_SDRAM_MSP_DEINIT_CB_ID :
 815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****       hsdram->MspDeInitCallback = HAL_SDRAM_MspDeInit;
 816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****       break;
 817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     default :
 818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****       /* update return status */
 819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****       status =  HAL_ERROR;
 820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****       break;
 821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     }
 822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   }
 823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   else
 824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   {
 825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     /* update return status */
 826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     status =  HAL_ERROR;
 827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   }
 828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** 
 829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Release Lock */
 830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   __HAL_UNLOCK(hsdram);
 831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   return status;
 832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** }
 833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** 
 834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** /**
 835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @brief  Register a User SDRAM Callback for DMA transfers
 836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   *         To be used instead of the weak (surcharged) predefined callback
 837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @param hsdram : SDRAM handle
 838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @param CallbackId : ID of the callback to be registered
 839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   *        This parameter can be one of the following values:
 840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   *          @arg @ref HAL_SDRAM_DMA_XFER_CPLT_CB_ID  SDRAM DMA Xfer Complete callback ID
 841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   *          @arg @ref HAL_SDRAM_DMA_XFER_ERR_CB_ID   SDRAM DMA Xfer Error callback ID
 842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @param pCallback : pointer to the Callback function
 843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @retval status
 844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   */
 845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** HAL_StatusTypeDef HAL_SDRAM_RegisterDmaCallback(SDRAM_HandleTypeDef *hsdram, HAL_SDRAM_CallbackIDTy
 846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** {
 847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   HAL_StatusTypeDef status = HAL_OK;
 848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   HAL_SDRAM_StateTypeDef state;
 849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   if(pCallback == NULL)
 851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   {
 852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     return HAL_ERROR;
 853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   }
 854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** 
 855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Process locked */
 856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   __HAL_LOCK(hsdram);
 857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** 
ARM GAS  /tmp/ccH0gOEd.s 			page 34


 858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   state = hsdram->State;
 859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   if((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_WRITE_PROTECTED))
 860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   {
 861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     switch (CallbackId)
 862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     {
 863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     case HAL_SDRAM_DMA_XFER_CPLT_CB_ID :
 864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****       hsdram->DmaXferCpltCallback = pCallback;
 865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****       break;
 866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     case HAL_SDRAM_DMA_XFER_ERR_CB_ID :
 867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****       hsdram->DmaXferErrorCallback = pCallback;
 868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****       break;
 869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     default :
 870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****       /* update return status */
 871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****       status =  HAL_ERROR;
 872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****       break;
 873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     }
 874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   }
 875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   else
 876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   {
 877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     /* update return status */
 878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     status =  HAL_ERROR;
 879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   }
 880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** 
 881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Release Lock */
 882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   __HAL_UNLOCK(hsdram);
 883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   return status;
 884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** }
 885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** #endif
 886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** 
 887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** /**
 888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @}
 889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   */
 890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** /** @defgroup SDRAM_Exported_Functions_Group3 Control functions 
 892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****  *  @brief   management functions 
 893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****  *
 894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** @verbatim   
 895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   ==============================================================================
 896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****                          ##### SDRAM Control functions #####
 897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   ==============================================================================  
 898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   [..]
 899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     This subsection provides a set of functions allowing to control dynamically
 900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     the SDRAM interface.
 901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** 
 902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** @endverbatim
 903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @{
 904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   */
 905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** 
 906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** /**
 907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @brief  Enables dynamically SDRAM write protection.
 908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
 909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   *                the configuration information for SDRAM module.
 910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @retval HAL status
 911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   */
 912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** HAL_StatusTypeDef HAL_SDRAM_WriteProtection_Enable(SDRAM_HandleTypeDef *hsdram)
 913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** { 
 996              		.loc 1 913 0
ARM GAS  /tmp/ccH0gOEd.s 			page 35


 997              		.cfi_startproc
 998              		@ args = 0, pretend = 0, frame = 0
 999              		@ frame_needed = 0, uses_anonymous_args = 0
 1000              	.LVL125:
 914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Check the SDRAM controller state */ 
 915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 1001              		.loc 1 915 0
 1002 0000 90F82C30 		ldrb	r3, [r0, #44]	@ zero_extendqisi2
 1003 0004 DBB2     		uxtb	r3, r3
 1004 0006 022B     		cmp	r3, #2
 1005 0008 0DD0     		beq	.L90
 913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Check the SDRAM controller state */ 
 1006              		.loc 1 913 0
 1007 000a 10B5     		push	{r4, lr}
 1008              	.LCFI24:
 1009              		.cfi_def_cfa_offset 8
 1010              		.cfi_offset 4, -8
 1011              		.cfi_offset 14, -4
 1012 000c 0446     		mov	r4, r0
 916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   {
 917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     return HAL_BUSY;
 918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   }
 919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Update the SDRAM state */
 921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   hsdram->State = HAL_SDRAM_STATE_BUSY;
 1013              		.loc 1 921 0
 1014 000e 0223     		movs	r3, #2
 1015 0010 80F82C30 		strb	r3, [r0, #44]
 922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Enable write protection */
 924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   FMC_SDRAM_WriteProtection_Enable(hsdram->Instance, hsdram->Init.SDBank);
 1016              		.loc 1 924 0
 1017 0014 4168     		ldr	r1, [r0, #4]
 1018 0016 0068     		ldr	r0, [r0]
 1019              	.LVL126:
 1020 0018 FFF7FEFF 		bl	FMC_SDRAM_WriteProtection_Enable
 1021              	.LVL127:
 925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Update the SDRAM state */
 927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   hsdram->State = HAL_SDRAM_STATE_WRITE_PROTECTED;
 1022              		.loc 1 927 0
 1023 001c 0423     		movs	r3, #4
 1024 001e 84F82C30 		strb	r3, [r4, #44]
 928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   return HAL_OK;  
 1025              		.loc 1 929 0
 1026 0022 0020     		movs	r0, #0
 930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** }
 1027              		.loc 1 930 0
 1028 0024 10BD     		pop	{r4, pc}
 1029              	.LVL128:
 1030              	.L90:
 1031              	.LCFI25:
 1032              		.cfi_def_cfa_offset 0
 1033              		.cfi_restore 4
 1034              		.cfi_restore 14
 917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   }
ARM GAS  /tmp/ccH0gOEd.s 			page 36


 1035              		.loc 1 917 0
 1036 0026 0220     		movs	r0, #2
 1037              	.LVL129:
 1038              		.loc 1 930 0
 1039 0028 7047     		bx	lr
 1040              		.cfi_endproc
 1041              	.LFE157:
 1043              		.section	.text.HAL_SDRAM_WriteProtection_Disable,"ax",%progbits
 1044              		.align	1
 1045              		.global	HAL_SDRAM_WriteProtection_Disable
 1046              		.syntax unified
 1047              		.thumb
 1048              		.thumb_func
 1049              		.fpu fpv5-sp-d16
 1051              	HAL_SDRAM_WriteProtection_Disable:
 1052              	.LFB158:
 931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** 
 932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** /**
 933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @brief  Disables dynamically SDRAM write protection.
 934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
 935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   *                the configuration information for SDRAM module.
 936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @retval HAL status
 937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   */
 938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** HAL_StatusTypeDef HAL_SDRAM_WriteProtection_Disable(SDRAM_HandleTypeDef *hsdram)
 939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** {
 1053              		.loc 1 939 0
 1054              		.cfi_startproc
 1055              		@ args = 0, pretend = 0, frame = 0
 1056              		@ frame_needed = 0, uses_anonymous_args = 0
 1057              	.LVL130:
 940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Check the SDRAM controller state */
 941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 1058              		.loc 1 941 0
 1059 0000 90F82C30 		ldrb	r3, [r0, #44]	@ zero_extendqisi2
 1060 0004 DBB2     		uxtb	r3, r3
 1061 0006 022B     		cmp	r3, #2
 1062 0008 0DD0     		beq	.L97
 939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Check the SDRAM controller state */
 1063              		.loc 1 939 0
 1064 000a 10B5     		push	{r4, lr}
 1065              	.LCFI26:
 1066              		.cfi_def_cfa_offset 8
 1067              		.cfi_offset 4, -8
 1068              		.cfi_offset 14, -4
 1069 000c 0446     		mov	r4, r0
 942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   {
 943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     return HAL_BUSY;
 944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   }
 945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Update the SDRAM state */
 947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   hsdram->State = HAL_SDRAM_STATE_BUSY;
 1070              		.loc 1 947 0
 1071 000e 0223     		movs	r3, #2
 1072 0010 80F82C30 		strb	r3, [r0, #44]
 948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Disable write protection */
 950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   FMC_SDRAM_WriteProtection_Disable(hsdram->Instance, hsdram->Init.SDBank);
ARM GAS  /tmp/ccH0gOEd.s 			page 37


 1073              		.loc 1 950 0
 1074 0014 4168     		ldr	r1, [r0, #4]
 1075 0016 0068     		ldr	r0, [r0]
 1076              	.LVL131:
 1077 0018 FFF7FEFF 		bl	FMC_SDRAM_WriteProtection_Disable
 1078              	.LVL132:
 951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Update the SDRAM state */
 953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   hsdram->State = HAL_SDRAM_STATE_READY;
 1079              		.loc 1 953 0
 1080 001c 0123     		movs	r3, #1
 1081 001e 84F82C30 		strb	r3, [r4, #44]
 954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   return HAL_OK;
 1082              		.loc 1 955 0
 1083 0022 0020     		movs	r0, #0
 956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** }
 1084              		.loc 1 956 0
 1085 0024 10BD     		pop	{r4, pc}
 1086              	.LVL133:
 1087              	.L97:
 1088              	.LCFI27:
 1089              		.cfi_def_cfa_offset 0
 1090              		.cfi_restore 4
 1091              		.cfi_restore 14
 943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   }
 1092              		.loc 1 943 0
 1093 0026 0220     		movs	r0, #2
 1094              	.LVL134:
 1095              		.loc 1 956 0
 1096 0028 7047     		bx	lr
 1097              		.cfi_endproc
 1098              	.LFE158:
 1100              		.section	.text.HAL_SDRAM_SendCommand,"ax",%progbits
 1101              		.align	1
 1102              		.global	HAL_SDRAM_SendCommand
 1103              		.syntax unified
 1104              		.thumb
 1105              		.thumb_func
 1106              		.fpu fpv5-sp-d16
 1108              	HAL_SDRAM_SendCommand:
 1109              	.LFB159:
 957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** 
 958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** /**
 959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @brief  Sends Command to the SDRAM bank.
 960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
 961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   *                the configuration information for SDRAM module.
 962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @param  Command SDRAM command structure
 963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @param  Timeout Timeout duration
 964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @retval HAL status
 965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   */  
 966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Comm
 967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** {
 1110              		.loc 1 967 0
 1111              		.cfi_startproc
 1112              		@ args = 0, pretend = 0, frame = 0
 1113              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccH0gOEd.s 			page 38


 1114              	.LVL135:
 1115 0000 38B5     		push	{r3, r4, r5, lr}
 1116              	.LCFI28:
 1117              		.cfi_def_cfa_offset 16
 1118              		.cfi_offset 3, -16
 1119              		.cfi_offset 4, -12
 1120              		.cfi_offset 5, -8
 1121              		.cfi_offset 14, -4
 968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Check the SDRAM controller state */
 969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 1122              		.loc 1 969 0
 1123 0002 90F82C30 		ldrb	r3, [r0, #44]	@ zero_extendqisi2
 1124 0006 DBB2     		uxtb	r3, r3
 1125 0008 022B     		cmp	r3, #2
 1126 000a 14D0     		beq	.L105
 1127 000c 0D46     		mov	r5, r1
 1128 000e 0446     		mov	r4, r0
 970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   {
 971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     return HAL_BUSY;
 972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   }
 973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Update the SDRAM state */
 975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   hsdram->State = HAL_SDRAM_STATE_BUSY;
 1129              		.loc 1 975 0
 1130 0010 0223     		movs	r3, #2
 1131 0012 80F82C30 		strb	r3, [r0, #44]
 976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Send SDRAM command */
 978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 1132              		.loc 1 978 0
 1133 0016 0068     		ldr	r0, [r0]
 1134              	.LVL136:
 1135 0018 FFF7FEFF 		bl	FMC_SDRAM_SendCommand
 1136              	.LVL137:
 979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Update the SDRAM controller state state */
 981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   if(Command->CommandMode == FMC_SDRAM_CMD_PALL)
 1137              		.loc 1 981 0
 1138 001c 2B68     		ldr	r3, [r5]
 1139 001e 022B     		cmp	r3, #2
 1140 0020 04D0     		beq	.L107
 982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   {
 983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   }
 985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   else
 986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   {
 987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     hsdram->State = HAL_SDRAM_STATE_READY;
 1141              		.loc 1 987 0
 1142 0022 0123     		movs	r3, #1
 1143 0024 84F82C30 		strb	r3, [r4, #44]
 988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   }
 989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
 990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   return HAL_OK;  
 1144              		.loc 1 990 0
 1145 0028 0020     		movs	r0, #0
 1146              	.LVL138:
 1147              	.L103:
ARM GAS  /tmp/ccH0gOEd.s 			page 39


 991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** }
 1148              		.loc 1 991 0
 1149 002a 38BD     		pop	{r3, r4, r5, pc}
 1150              	.LVL139:
 1151              	.L107:
 983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   }
 1152              		.loc 1 983 0
 1153 002c 0523     		movs	r3, #5
 1154 002e 84F82C30 		strb	r3, [r4, #44]
 990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** }
 1155              		.loc 1 990 0
 1156 0032 0020     		movs	r0, #0
 1157 0034 F9E7     		b	.L103
 1158              	.LVL140:
 1159              	.L105:
 971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   }
 1160              		.loc 1 971 0
 1161 0036 0220     		movs	r0, #2
 1162              	.LVL141:
 1163 0038 F7E7     		b	.L103
 1164              		.cfi_endproc
 1165              	.LFE159:
 1167              		.section	.text.HAL_SDRAM_ProgramRefreshRate,"ax",%progbits
 1168              		.align	1
 1169              		.global	HAL_SDRAM_ProgramRefreshRate
 1170              		.syntax unified
 1171              		.thumb
 1172              		.thumb_func
 1173              		.fpu fpv5-sp-d16
 1175              	HAL_SDRAM_ProgramRefreshRate:
 1176              	.LFB160:
 992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** 
 993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** /**
 994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @brief  Programs the SDRAM Memory Refresh rate.
 995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
 996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   *                the configuration information for SDRAM module.  
 997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @param  RefreshRate The SDRAM refresh rate value       
 998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @retval HAL status
 999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   */
1000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
1001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** {
 1177              		.loc 1 1001 0
 1178              		.cfi_startproc
 1179              		@ args = 0, pretend = 0, frame = 0
 1180              		@ frame_needed = 0, uses_anonymous_args = 0
 1181              	.LVL142:
1002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Check the SDRAM controller state */
1003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 1182              		.loc 1 1003 0
 1183 0000 90F82C30 		ldrb	r3, [r0, #44]	@ zero_extendqisi2
 1184 0004 DBB2     		uxtb	r3, r3
 1185 0006 022B     		cmp	r3, #2
 1186 0008 0CD0     		beq	.L110
1001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Check the SDRAM controller state */
 1187              		.loc 1 1001 0
 1188 000a 10B5     		push	{r4, lr}
 1189              	.LCFI29:
ARM GAS  /tmp/ccH0gOEd.s 			page 40


 1190              		.cfi_def_cfa_offset 8
 1191              		.cfi_offset 4, -8
 1192              		.cfi_offset 14, -4
 1193 000c 0446     		mov	r4, r0
1004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   {
1005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     return HAL_BUSY;
1006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   } 
1007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
1008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Update the SDRAM state */
1009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   hsdram->State = HAL_SDRAM_STATE_BUSY;
 1194              		.loc 1 1009 0
 1195 000e 0223     		movs	r3, #2
 1196 0010 80F82C30 		strb	r3, [r0, #44]
1010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
1011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Program the refresh rate */
1012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   FMC_SDRAM_ProgramRefreshRate(hsdram->Instance ,RefreshRate);
 1197              		.loc 1 1012 0
 1198 0014 0068     		ldr	r0, [r0]
 1199              	.LVL143:
 1200 0016 FFF7FEFF 		bl	FMC_SDRAM_ProgramRefreshRate
 1201              	.LVL144:
1013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
1014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Update the SDRAM state */
1015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   hsdram->State = HAL_SDRAM_STATE_READY;
 1202              		.loc 1 1015 0
 1203 001a 0123     		movs	r3, #1
 1204 001c 84F82C30 		strb	r3, [r4, #44]
1016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
1017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   return HAL_OK;   
 1205              		.loc 1 1017 0
 1206 0020 0020     		movs	r0, #0
1018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** }
 1207              		.loc 1 1018 0
 1208 0022 10BD     		pop	{r4, pc}
 1209              	.LVL145:
 1210              	.L110:
 1211              	.LCFI30:
 1212              		.cfi_def_cfa_offset 0
 1213              		.cfi_restore 4
 1214              		.cfi_restore 14
1005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   } 
 1215              		.loc 1 1005 0
 1216 0024 0220     		movs	r0, #2
 1217              	.LVL146:
 1218              		.loc 1 1018 0
 1219 0026 7047     		bx	lr
 1220              		.cfi_endproc
 1221              	.LFE160:
 1223              		.section	.text.HAL_SDRAM_SetAutoRefreshNumber,"ax",%progbits
 1224              		.align	1
 1225              		.global	HAL_SDRAM_SetAutoRefreshNumber
 1226              		.syntax unified
 1227              		.thumb
 1228              		.thumb_func
 1229              		.fpu fpv5-sp-d16
 1231              	HAL_SDRAM_SetAutoRefreshNumber:
 1232              	.LFB161:
ARM GAS  /tmp/ccH0gOEd.s 			page 41


1019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** 
1020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** /**
1021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @brief  Sets the Number of consecutive SDRAM Memory auto Refresh commands.
1022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
1023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   *                the configuration information for SDRAM module.  
1024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @param  AutoRefreshNumber The SDRAM auto Refresh number       
1025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @retval HAL status
1026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   */
1027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** HAL_StatusTypeDef HAL_SDRAM_SetAutoRefreshNumber(SDRAM_HandleTypeDef *hsdram, uint32_t AutoRefreshN
1028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** {
 1233              		.loc 1 1028 0
 1234              		.cfi_startproc
 1235              		@ args = 0, pretend = 0, frame = 0
 1236              		@ frame_needed = 0, uses_anonymous_args = 0
 1237              	.LVL147:
1029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Check the SDRAM controller state */
1030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 1238              		.loc 1 1030 0
 1239 0000 90F82C30 		ldrb	r3, [r0, #44]	@ zero_extendqisi2
 1240 0004 DBB2     		uxtb	r3, r3
 1241 0006 022B     		cmp	r3, #2
 1242 0008 0CD0     		beq	.L117
1028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Check the SDRAM controller state */
 1243              		.loc 1 1028 0
 1244 000a 10B5     		push	{r4, lr}
 1245              	.LCFI31:
 1246              		.cfi_def_cfa_offset 8
 1247              		.cfi_offset 4, -8
 1248              		.cfi_offset 14, -4
 1249 000c 0446     		mov	r4, r0
1031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   {
1032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     return HAL_BUSY;
1033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   } 
1034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
1035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Update the SDRAM state */
1036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   hsdram->State = HAL_SDRAM_STATE_BUSY;
 1250              		.loc 1 1036 0
 1251 000e 0223     		movs	r3, #2
 1252 0010 80F82C30 		strb	r3, [r0, #44]
1037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
1038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Set the Auto-Refresh number */
1039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   FMC_SDRAM_SetAutoRefreshNumber(hsdram->Instance ,AutoRefreshNumber);
 1253              		.loc 1 1039 0
 1254 0014 0068     		ldr	r0, [r0]
 1255              	.LVL148:
 1256 0016 FFF7FEFF 		bl	FMC_SDRAM_SetAutoRefreshNumber
 1257              	.LVL149:
1040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
1041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Update the SDRAM state */
1042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   hsdram->State = HAL_SDRAM_STATE_READY;
 1258              		.loc 1 1042 0
 1259 001a 0123     		movs	r3, #1
 1260 001c 84F82C30 		strb	r3, [r4, #44]
1043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
1044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   return HAL_OK;
 1261              		.loc 1 1044 0
 1262 0020 0020     		movs	r0, #0
ARM GAS  /tmp/ccH0gOEd.s 			page 42


1045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** }
 1263              		.loc 1 1045 0
 1264 0022 10BD     		pop	{r4, pc}
 1265              	.LVL150:
 1266              	.L117:
 1267              	.LCFI32:
 1268              		.cfi_def_cfa_offset 0
 1269              		.cfi_restore 4
 1270              		.cfi_restore 14
1032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   } 
 1271              		.loc 1 1032 0
 1272 0024 0220     		movs	r0, #2
 1273              	.LVL151:
 1274              		.loc 1 1045 0
 1275 0026 7047     		bx	lr
 1276              		.cfi_endproc
 1277              	.LFE161:
 1279              		.section	.text.HAL_SDRAM_GetModeStatus,"ax",%progbits
 1280              		.align	1
 1281              		.global	HAL_SDRAM_GetModeStatus
 1282              		.syntax unified
 1283              		.thumb
 1284              		.thumb_func
 1285              		.fpu fpv5-sp-d16
 1287              	HAL_SDRAM_GetModeStatus:
 1288              	.LFB162:
1046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** 
1047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** /**
1048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @brief  Returns the SDRAM memory current mode.
1049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
1050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   *                the configuration information for SDRAM module.
1051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @retval The SDRAM memory mode.        
1052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   */
1053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** uint32_t HAL_SDRAM_GetModeStatus(SDRAM_HandleTypeDef *hsdram)
1054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** {
 1289              		.loc 1 1054 0
 1290              		.cfi_startproc
 1291              		@ args = 0, pretend = 0, frame = 0
 1292              		@ frame_needed = 0, uses_anonymous_args = 0
 1293              	.LVL152:
 1294 0000 08B5     		push	{r3, lr}
 1295              	.LCFI33:
 1296              		.cfi_def_cfa_offset 8
 1297              		.cfi_offset 3, -8
 1298              		.cfi_offset 14, -4
1055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   /* Return the SDRAM memory current mode */
1056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   return(FMC_SDRAM_GetModeStatus(hsdram->Instance, hsdram->Init.SDBank));
 1299              		.loc 1 1056 0
 1300 0002 4168     		ldr	r1, [r0, #4]
 1301 0004 0068     		ldr	r0, [r0]
 1302              	.LVL153:
 1303 0006 FFF7FEFF 		bl	FMC_SDRAM_GetModeStatus
 1304              	.LVL154:
1057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** }
 1305              		.loc 1 1057 0
 1306 000a 08BD     		pop	{r3, pc}
 1307              		.cfi_endproc
ARM GAS  /tmp/ccH0gOEd.s 			page 43


 1308              	.LFE162:
 1310              		.section	.text.HAL_SDRAM_GetState,"ax",%progbits
 1311              		.align	1
 1312              		.global	HAL_SDRAM_GetState
 1313              		.syntax unified
 1314              		.thumb
 1315              		.thumb_func
 1316              		.fpu fpv5-sp-d16
 1318              	HAL_SDRAM_GetState:
 1319              	.LFB163:
1058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** 
1059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** /**
1060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @}
1061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   */
1062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   
1063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** /** @defgroup SDRAM_Exported_Functions_Group4 State functions 
1064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****  *  @brief   Peripheral State functions 
1065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****  *
1066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** @verbatim   
1067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   ==============================================================================
1068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****                       ##### SDRAM State functions #####
1069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   ==============================================================================  
1070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   [..]
1071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     This subsection permits to get in run-time the status of the SDRAM controller 
1072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****     and the data flow.
1073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** 
1074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** @endverbatim
1075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @{
1076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   */
1077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** 
1078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** /**
1079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @brief  Returns the SDRAM state.
1080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
1081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   *                the configuration information for SDRAM module.
1082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   * @retval HAL state
1083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   */
1084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** HAL_SDRAM_StateTypeDef HAL_SDRAM_GetState(SDRAM_HandleTypeDef *hsdram)
1085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** {
 1320              		.loc 1 1085 0
 1321              		.cfi_startproc
 1322              		@ args = 0, pretend = 0, frame = 0
 1323              		@ frame_needed = 0, uses_anonymous_args = 0
 1324              		@ link register save eliminated.
 1325              	.LVL155:
1086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c ****   return hsdram->State;
 1326              		.loc 1 1086 0
 1327 0000 90F82C00 		ldrb	r0, [r0, #44]	@ zero_extendqisi2
 1328              	.LVL156:
1087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c **** }
 1329              		.loc 1 1087 0
 1330 0004 7047     		bx	lr
 1331              		.cfi_endproc
 1332              	.LFE163:
 1334              		.text
 1335              	.Letext0:
 1336              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 1337              		.file 3 "/usr/include/newlib/sys/_stdint.h"
ARM GAS  /tmp/ccH0gOEd.s 			page 44


 1338              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 1339              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 1340              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 1341              		.file 7 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 1342              		.file 8 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 1343              		.file 9 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_fmc.h"
 1344              		.file 10 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_sdram.h"
 1345              		.file 11 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
ARM GAS  /tmp/ccH0gOEd.s 			page 45


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f7xx_hal_sdram.c
     /tmp/ccH0gOEd.s:18     .text.HAL_SDRAM_DMA_XferCpltCallback:0000000000000000 $t
     /tmp/ccH0gOEd.s:25     .text.HAL_SDRAM_DMA_XferCpltCallback:0000000000000000 HAL_SDRAM_DMA_XferCpltCallback
     /tmp/ccH0gOEd.s:40     .text.HAL_SDRAM_DMA_XferErrorCallback:0000000000000000 $t
     /tmp/ccH0gOEd.s:47     .text.HAL_SDRAM_DMA_XferErrorCallback:0000000000000000 HAL_SDRAM_DMA_XferErrorCallback
     /tmp/ccH0gOEd.s:61     .text.HAL_SDRAM_MspInit:0000000000000000 $t
     /tmp/ccH0gOEd.s:68     .text.HAL_SDRAM_MspInit:0000000000000000 HAL_SDRAM_MspInit
     /tmp/ccH0gOEd.s:82     .text.HAL_SDRAM_Init:0000000000000000 $t
     /tmp/ccH0gOEd.s:89     .text.HAL_SDRAM_Init:0000000000000000 HAL_SDRAM_Init
     /tmp/ccH0gOEd.s:159    .text.HAL_SDRAM_MspDeInit:0000000000000000 $t
     /tmp/ccH0gOEd.s:166    .text.HAL_SDRAM_MspDeInit:0000000000000000 HAL_SDRAM_MspDeInit
     /tmp/ccH0gOEd.s:180    .text.HAL_SDRAM_DeInit:0000000000000000 $t
     /tmp/ccH0gOEd.s:187    .text.HAL_SDRAM_DeInit:0000000000000000 HAL_SDRAM_DeInit
     /tmp/ccH0gOEd.s:219    .text.HAL_SDRAM_RefreshErrorCallback:0000000000000000 $t
     /tmp/ccH0gOEd.s:226    .text.HAL_SDRAM_RefreshErrorCallback:0000000000000000 HAL_SDRAM_RefreshErrorCallback
     /tmp/ccH0gOEd.s:240    .text.HAL_SDRAM_IRQHandler:0000000000000000 $t
     /tmp/ccH0gOEd.s:247    .text.HAL_SDRAM_IRQHandler:0000000000000000 HAL_SDRAM_IRQHandler
     /tmp/ccH0gOEd.s:282    .text.HAL_SDRAM_Read_8b:0000000000000000 $t
     /tmp/ccH0gOEd.s:289    .text.HAL_SDRAM_Read_8b:0000000000000000 HAL_SDRAM_Read_8b
     /tmp/ccH0gOEd.s:368    .text.HAL_SDRAM_Write_8b:0000000000000000 $t
     /tmp/ccH0gOEd.s:375    .text.HAL_SDRAM_Write_8b:0000000000000000 HAL_SDRAM_Write_8b
     /tmp/ccH0gOEd.s:456    .text.HAL_SDRAM_Read_16b:0000000000000000 $t
     /tmp/ccH0gOEd.s:463    .text.HAL_SDRAM_Read_16b:0000000000000000 HAL_SDRAM_Read_16b
     /tmp/ccH0gOEd.s:542    .text.HAL_SDRAM_Write_16b:0000000000000000 $t
     /tmp/ccH0gOEd.s:549    .text.HAL_SDRAM_Write_16b:0000000000000000 HAL_SDRAM_Write_16b
     /tmp/ccH0gOEd.s:630    .text.HAL_SDRAM_Read_32b:0000000000000000 $t
     /tmp/ccH0gOEd.s:637    .text.HAL_SDRAM_Read_32b:0000000000000000 HAL_SDRAM_Read_32b
     /tmp/ccH0gOEd.s:716    .text.HAL_SDRAM_Write_32b:0000000000000000 $t
     /tmp/ccH0gOEd.s:723    .text.HAL_SDRAM_Write_32b:0000000000000000 HAL_SDRAM_Write_32b
     /tmp/ccH0gOEd.s:804    .text.HAL_SDRAM_Read_DMA:0000000000000000 $t
     /tmp/ccH0gOEd.s:811    .text.HAL_SDRAM_Read_DMA:0000000000000000 HAL_SDRAM_Read_DMA
     /tmp/ccH0gOEd.s:886    .text.HAL_SDRAM_Read_DMA:0000000000000048 $d
     /tmp/ccH0gOEd.s:892    .text.HAL_SDRAM_Write_DMA:0000000000000000 $t
     /tmp/ccH0gOEd.s:899    .text.HAL_SDRAM_Write_DMA:0000000000000000 HAL_SDRAM_Write_DMA
     /tmp/ccH0gOEd.s:981    .text.HAL_SDRAM_Write_DMA:0000000000000050 $d
     /tmp/ccH0gOEd.s:987    .text.HAL_SDRAM_WriteProtection_Enable:0000000000000000 $t
     /tmp/ccH0gOEd.s:994    .text.HAL_SDRAM_WriteProtection_Enable:0000000000000000 HAL_SDRAM_WriteProtection_Enable
     /tmp/ccH0gOEd.s:1044   .text.HAL_SDRAM_WriteProtection_Disable:0000000000000000 $t
     /tmp/ccH0gOEd.s:1051   .text.HAL_SDRAM_WriteProtection_Disable:0000000000000000 HAL_SDRAM_WriteProtection_Disable
     /tmp/ccH0gOEd.s:1101   .text.HAL_SDRAM_SendCommand:0000000000000000 $t
     /tmp/ccH0gOEd.s:1108   .text.HAL_SDRAM_SendCommand:0000000000000000 HAL_SDRAM_SendCommand
     /tmp/ccH0gOEd.s:1168   .text.HAL_SDRAM_ProgramRefreshRate:0000000000000000 $t
     /tmp/ccH0gOEd.s:1175   .text.HAL_SDRAM_ProgramRefreshRate:0000000000000000 HAL_SDRAM_ProgramRefreshRate
     /tmp/ccH0gOEd.s:1224   .text.HAL_SDRAM_SetAutoRefreshNumber:0000000000000000 $t
     /tmp/ccH0gOEd.s:1231   .text.HAL_SDRAM_SetAutoRefreshNumber:0000000000000000 HAL_SDRAM_SetAutoRefreshNumber
     /tmp/ccH0gOEd.s:1280   .text.HAL_SDRAM_GetModeStatus:0000000000000000 $t
     /tmp/ccH0gOEd.s:1287   .text.HAL_SDRAM_GetModeStatus:0000000000000000 HAL_SDRAM_GetModeStatus
     /tmp/ccH0gOEd.s:1311   .text.HAL_SDRAM_GetState:0000000000000000 $t
     /tmp/ccH0gOEd.s:1318   .text.HAL_SDRAM_GetState:0000000000000000 HAL_SDRAM_GetState

UNDEFINED SYMBOLS
FMC_SDRAM_Init
FMC_SDRAM_Timing_Init
FMC_SDRAM_DeInit
HAL_DMA_Start_IT
FMC_SDRAM_WriteProtection_Enable
ARM GAS  /tmp/ccH0gOEd.s 			page 46


FMC_SDRAM_WriteProtection_Disable
FMC_SDRAM_SendCommand
FMC_SDRAM_ProgramRefreshRate
FMC_SDRAM_SetAutoRefreshNumber
FMC_SDRAM_GetModeStatus
