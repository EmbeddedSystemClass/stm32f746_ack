ARM GAS  /tmp/ccY2tmJ9.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"queue.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.prvGetDisinheritPriorityAfterTimeout,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-sp-d16
  24              	prvGetDisinheritPriorityAfterTimeout:
  25              	.LFB28:
  26              		.file 1 "Middlewares/Third_Party/FreeRTOS/Source/queue.c"
   1:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * FreeRTOS Kernel V10.2.1
   3:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include <stdlib.h>
  29:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include <string.h>
  30:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  31:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  32:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** all the API functions to use the MPU wrappers.  That should only be done when
ARM GAS  /tmp/ccY2tmJ9.s 			page 2


  33:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** task.h is included from an application file. */
  34:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  35:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  36:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include "FreeRTOS.h"
  37:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include "task.h"
  38:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include "queue.h"
  39:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  40:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
  41:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#include "croutine.h"
  42:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
  43:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  44:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* Lint e9021, e961 and e750 are suppressed as a MISRA exception justified
  45:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** because the MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined
  46:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** for the header files above, but not in this file, in order to generate the
  47:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** correct privileged Vs unprivileged linkage and placement. */
  48:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750 !e9021. */
  49:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  50:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  51:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* Constants used with the cRxLock and cTxLock structure members. */
  52:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueUNLOCKED					( ( int8_t ) -1 )
  53:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueLOCKED_UNMODIFIED			( ( int8_t ) 0 )
  54:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  55:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* When the Queue_t structure is used to represent a base queue its pcHead and
  56:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** pcTail members are used as pointers into the queue storage area.  When the
  57:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t structure is used to represent a mutex pcHead and pcTail pointers are
  58:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** not necessary, and the pcHead pointer is set to NULL to indicate that the
  59:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** structure instead holds a pointer to the mutex holder (if any).  Map alternative
  60:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** names to the pcHead and structure member to ensure the readability of the code
  61:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** is maintained.  The QueuePointers_t and SemaphoreData_t types are used to form
  62:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** a union as their usage is mutually exclusive dependent on what the queue is
  63:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** being used for. */
  64:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define uxQueueType						pcHead
  65:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueQUEUE_IS_MUTEX				NULL
  66:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  67:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** typedef struct QueuePointers
  68:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
  69:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	int8_t *pcTail;					/*< Points to the byte at the end of the queue storage area.  Once more byte i
  70:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	int8_t *pcReadFrom;				/*< Points to the last place that a queued item was read from when the stru
  71:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } QueuePointers_t;
  72:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  73:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** typedef struct SemaphoreData
  74:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
  75:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	TaskHandle_t xMutexHolder;		 /*< The handle of the task that holds the mutex. */
  76:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t uxRecursiveCallCount;/*< Maintains a count of the number of times a recursive mutex ha
  77:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } SemaphoreData_t;
  78:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  79:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* Semaphores do not actually store or copy data, so have an item size of
  80:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** zero. */
  81:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueSEMAPHORE_QUEUE_ITEM_LENGTH ( ( UBaseType_t ) 0 )
  82:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueMUTEX_GIVE_BLOCK_TIME		 ( ( TickType_t ) 0U )
  83:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  84:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_PREEMPTION == 0 )
  85:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* If the cooperative scheduler is being used then a yield should not be
  86:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	performed just because a higher priority task has been woken. */
  87:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#define queueYIELD_IF_USING_PREEMPTION()
  88:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #else
  89:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#define queueYIELD_IF_USING_PREEMPTION() portYIELD_WITHIN_API()
ARM GAS  /tmp/ccY2tmJ9.s 			page 3


  90:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
  91:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  92:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
  93:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Definition of the queue used by the scheduler.
  94:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Items are queued by copy, not reference.  See the following link for the
  95:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * rationale: https://www.freertos.org/Embedded-RTOS-Queues.html
  96:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
  97:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** typedef struct QueueDefinition 		/* The old naming convention is used to prevent breaking kernel aw
  98:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
  99:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	int8_t *pcHead;					/*< Points to the beginning of the queue storage area. */
 100:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	int8_t *pcWriteTo;				/*< Points to the free next place in the storage area. */
 101:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 102:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	union
 103:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 104:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		QueuePointers_t xQueue;		/*< Data required exclusively when this structure is used as a queue. */
 105:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		SemaphoreData_t xSemaphore; /*< Data required exclusively when this structure is used as a semaph
 106:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} u;
 107:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 108:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	List_t xTasksWaitingToSend;		/*< List of tasks that are blocked waiting to post onto this queue.  
 109:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	List_t xTasksWaitingToReceive;	/*< List of tasks that are blocked waiting to read from this queue.
 110:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 111:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	volatile UBaseType_t uxMessagesWaiting;/*< The number of items currently in the queue. */
 112:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t uxLength;			/*< The length of the queue defined as the number of items it will hold, n
 113:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t uxItemSize;			/*< The size of each items that the queue will hold. */
 114:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 115:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	volatile int8_t cRxLock;		/*< Stores the number of items received from the queue (removed from the
 116:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	volatile int8_t cTxLock;		/*< Stores the number of items transmitted to the queue (added to the qu
 117:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 118:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 119:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		uint8_t ucStaticallyAllocated;	/*< Set to pdTRUE if the memory used by the queue was statically a
 120:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
 121:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 122:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( configUSE_QUEUE_SETS == 1 )
 123:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		struct QueueDefinition *pxQueueSetContainer;
 124:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
 125:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 126:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 127:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		UBaseType_t uxQueueNumber;
 128:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		uint8_t ucQueueType;
 129:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
 130:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 131:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } xQUEUE;
 132:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 133:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* The old xQUEUE name is maintained above then typedefed to the new Queue_t
 134:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** name below to enable the use of older kernel aware debuggers. */
 135:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** typedef xQUEUE Queue_t;
 136:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 137:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 138:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 139:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 140:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * The queue registry is just a means for kernel aware debuggers to locate
 141:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * queue structures.  It has no other purpose so is an optional component.
 142:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 143:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
 144:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 145:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The type stored within the queue registry array.  This allows a name
 146:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	to be assigned to each queue making kernel aware debugging a little
ARM GAS  /tmp/ccY2tmJ9.s 			page 4


 147:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	more user friendly. */
 148:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	typedef struct QUEUE_REGISTRY_ITEM
 149:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 150:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		const char *pcQueueName; /*lint !e971 Unqualified char types are allowed for strings and single c
 151:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		QueueHandle_t xHandle;
 152:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} xQueueRegistryItem;
 153:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 154:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The old xQueueRegistryItem name is maintained above then typedefed to the
 155:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	new xQueueRegistryItem name below to enable the use of older kernel aware
 156:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	debuggers. */
 157:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	typedef xQueueRegistryItem QueueRegistryItem_t;
 158:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 159:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The queue registry is simply an array of QueueRegistryItem_t structures.
 160:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	The pcQueueName member of a structure being NULL is indicative of the
 161:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	array position being vacant. */
 162:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	PRIVILEGED_DATA QueueRegistryItem_t xQueueRegistry[ configQUEUE_REGISTRY_SIZE ];
 163:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 164:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
 165:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 166:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 167:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Unlocks a queue locked by a call to prvLockQueue.  Locking a queue does not
 168:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * prevent an ISR from adding or removing items to the queue, but does prevent
 169:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * an ISR from removing tasks from the queue event lists.  If an ISR finds a
 170:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * queue is locked it will instead increment the appropriate queue lock count
 171:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * to indicate that a task may require unblocking.  When the queue in unlocked
 172:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * these lock counts are inspected, and the appropriate action taken.
 173:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 174:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvUnlockQueue( Queue_t * const pxQueue ) PRIVILEGED_FUNCTION;
 175:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 176:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 177:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Uses a critical section to determine if there is any data in a queue.
 178:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
 179:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * @return pdTRUE if the queue contains no items, otherwise pdFALSE.
 180:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 181:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue ) PRIVILEGED_FUNCTION;
 182:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 183:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 184:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Uses a critical section to determine if there is any space in a queue.
 185:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
 186:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * @return pdTRUE if there is no space, otherwise pdFALSE;
 187:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 188:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvIsQueueFull( const Queue_t *pxQueue ) PRIVILEGED_FUNCTION;
 189:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 190:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 191:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Copies an item into the queue, either at the front of the queue or the
 192:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * back of the queue.
 193:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 194:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const Bas
 195:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 196:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 197:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Copies an item out of a queue.
 198:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 199:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvCopyDataFromQueue( Queue_t * const pxQueue, void * const pvBuffer ) PRIVILEGED_FUNCT
 200:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 201:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_QUEUE_SETS == 1 )
 202:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/*
 203:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * Checks to see if a queue is a member of a queue set, and if so, notifies
ARM GAS  /tmp/ccY2tmJ9.s 			page 5


 204:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * the queue set that the queue contains data.
 205:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 */
 206:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	static BaseType_t prvNotifyQueueSetContainer( const Queue_t * const pxQueue, const BaseType_t xCop
 207:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 208:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 209:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 210:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Called after a Queue_t structure has been allocated either statically or
 211:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * dynamically to fill in the structure's members.
 212:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 213:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvInitialiseNewQueue( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, u
 214:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 215:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 216:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Mutexes are a special type of queue.  When a mutex is created, first the
 217:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * queue is created, then prvInitialiseMutex() is called to configure the queue
 218:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * as a mutex.
 219:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 220:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
 221:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	static void prvInitialiseMutex( Queue_t *pxNewQueue ) PRIVILEGED_FUNCTION;
 222:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 223:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 224:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
 225:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/*
 226:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * If a task waiting for a mutex causes the mutex holder to inherit a
 227:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * priority, but the waiting task times out, then the holder should
 228:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * disinherit the priority - but only down to the highest priority of any
 229:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * other tasks that are waiting for the same mutex.  This function returns
 230:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * that priority.
 231:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 */
 232:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	static UBaseType_t prvGetDisinheritPriorityAfterTimeout( const Queue_t * const pxQueue ) PRIVILEGE
 233:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 234:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 235:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 236:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 237:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Macro to mark a queue as locked.  Locking a queue prevents an ISR from
 238:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * accessing the queue event lists.
 239:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 240:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define prvLockQueue( pxQueue )								\
 241:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();									\
 242:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{														\
 243:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( ( pxQueue )->cRxLock == queueUNLOCKED )			\
 244:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{													\
 245:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( pxQueue )->cRxLock = queueLOCKED_UNMODIFIED;	\
 246:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}													\
 247:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( ( pxQueue )->cTxLock == queueUNLOCKED )			\
 248:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{													\
 249:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( pxQueue )->cTxLock = queueLOCKED_UNMODIFIED;	\
 250:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}													\
 251:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}														\
 252:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL()
 253:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 254:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 255:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueGenericReset( QueueHandle_t xQueue, BaseType_t xNewQueue )
 256:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 257:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
 258:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 259:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/ccY2tmJ9.s 			page 6


 261:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
 262:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 263:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint 
 264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 265:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo = pxQueue->pcHead;
 266:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSi
 267:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
 268:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
 269:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 270:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xNewQueue == pdFALSE )
 271:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 272:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* If there are tasks blocked waiting to read from the queue, then
 273:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the tasks will remain blocked as after this function exits the queue
 274:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			will still be empty.  If there are tasks blocked waiting to write to
 275:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the queue, then one should be unblocked as after this function exits
 276:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			it will be possible to write to it. */
 277:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 278:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 279:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 280:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 281:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					queueYIELD_IF_USING_PREEMPTION();
 282:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 283:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
 284:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 285:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
 286:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 287:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 289:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 290:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
 291:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 292:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 293:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 294:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 295:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Ensure the event queues start in the correct state. */
 296:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 297:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 298:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 299:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 300:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
 301:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 302:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* A value is returned for calling semantic consistency with previous
 303:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	versions. */
 304:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return pdPASS;
 305:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 306:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 307:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 308:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 309:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 310:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueGenericCreateStatic( const UBaseType_t uxQueueLength, const UBaseType_t uxItem
 311:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 312:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 313:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 315:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 316:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The StaticQueue_t structure and the queue storage area must be
 317:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		supplied. */
ARM GAS  /tmp/ccY2tmJ9.s 			page 7


 318:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( pxStaticQueue != NULL );
 319:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 320:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* A queue storage area should be provided if the item size is not 0, and
 321:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		should not be provided if the item size is 0. */
 322:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 323:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 324:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 325:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		#if( configASSERT_DEFINED == 1 )
 326:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 327:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Sanity check that the size of the structure used to declare a
 328:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			variable of type StaticQueue_t or StaticSemaphore_t equals the size of
 329:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the real queue and semaphore structures. */
 330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			volatile size_t xSize = sizeof( StaticQueue_t );
 331:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			configASSERT( xSize == sizeof( Queue_t ) );
 332:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 333:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 334:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		#endif /* configASSERT_DEFINED */
 335:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 336:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The address of a statically allocated queue was passed in, use it.
 337:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		The address of a statically allocated storage area was also passed in
 338:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		but is already set. */
 339:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue = ( Queue_t * ) pxStaticQueue; /*lint !e740 !e9087 Unusual cast is ok as the structure
 340:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 341:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 342:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 343:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 344:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 345:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Queues can be allocated wither statically or dynamically, so
 346:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				note this queue was allocated statically in case the queue is
 347:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				later deleted. */
 348:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 349:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 350:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 351:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 352:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvInitialiseNewQueue( uxQueueLength, uxItemSize, pucQueueStorage, ucQueueType, pxNewQueue );
 353:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 354:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 355:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 356:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_CREATE_FAILED( ucQueueType );
 357:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
 358:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 359:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 360:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxNewQueue;
 361:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 362:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 363:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 364:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 365:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 366:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 367:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 368:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueGenericCreate( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, 
 369:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 370:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 371:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	size_t xQueueSizeInBytes;
 372:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uint8_t *pucQueueStorage;
 373:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 374:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
ARM GAS  /tmp/ccY2tmJ9.s 			page 8


 375:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 376:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( uxItemSize == ( UBaseType_t ) 0 )
 377:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 378:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* There is not going to be a queue storage area. */
 379:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xQueueSizeInBytes = ( size_t ) 0;
 380:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 381:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 382:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 383:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Allocate enough space to hold the maximum number of items that
 384:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			can be in the queue at any time. */
 385:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as t
 386:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 387:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 388:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Allocate the queue and storage area.  Justification for MISRA
 389:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		deviation as follows:  pvPortMalloc() always ensures returned memory
 390:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		blocks are aligned per the requirements of the MCU stack.  In this case
 391:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pvPortMalloc() must return a pointer that is guaranteed to meet the
 392:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		alignment requirements of the Queue_t structure - which in this case
 393:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		is an int8_t *.  Therefore, whenever the stack alignment requirements
 394:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		are greater than or equal to the pointer to char requirements the cast
 395:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		is safe.  In other cases alignment requirements are not strict (one or
 396:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		two bytes). */
 397:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !
 398:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 399:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 400:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 401:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Jump past the queue structure to find the location of the queue
 402:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			storage area. */
 403:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pucQueueStorage = ( uint8_t * ) pxNewQueue;
 404:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, es
 405:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 406:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 407:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 408:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Queues can be created either statically or dynamically, so
 409:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				note this task was created dynamically in case it is later
 410:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				deleted. */
 411:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 412:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 413:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#endif /* configSUPPORT_STATIC_ALLOCATION */
 414:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 415:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvInitialiseNewQueue( uxQueueLength, uxItemSize, pucQueueStorage, ucQueueType, pxNewQueue );
 416:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 417:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 418:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 419:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_CREATE_FAILED( ucQueueType );
 420:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
 421:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 422:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 423:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxNewQueue;
 424:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 425:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 426:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 427:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 428:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 429:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvInitialiseNewQueue( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, u
 430:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 431:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Remove compiler warnings about unused parameters should
ARM GAS  /tmp/ccY2tmJ9.s 			page 9


 432:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configUSE_TRACE_FACILITY not be set to 1. */
 433:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	( void ) ucQueueType;
 434:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 435:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( uxItemSize == ( UBaseType_t ) 0 )
 436:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 437:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* No RAM was allocated for the queue storage area, but PC head cannot
 438:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		be set to NULL because NULL is used as a key to say the queue is used as
 439:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		a mutex.  Therefore just set pcHead to point to the queue as a benign
 440:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		value that is known to be within the memory map. */
 441:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 442:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 443:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else
 444:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 445:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Set the head to the start of the queue storage area. */
 446:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 447:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 448:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 449:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Initialise the queue members as described where the queue type is
 450:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	defined. */
 451:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	pxNewQueue->uxLength = uxQueueLength;
 452:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	pxNewQueue->uxItemSize = uxItemSize;
 453:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 454:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 455:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 456:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 457:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue->ucQueueType = ucQueueType;
 458:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 459:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif /* configUSE_TRACE_FACILITY */
 460:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 461:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if( configUSE_QUEUE_SETS == 1 )
 462:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 463:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue->pxQueueSetContainer = NULL;
 464:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 465:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif /* configUSE_QUEUE_SETS */
 466:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 467:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	traceQUEUE_CREATE( pxNewQueue );
 468:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 469:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 470:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 471:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
 472:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 473:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	static void prvInitialiseMutex( Queue_t *pxNewQueue )
 474:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 475:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 476:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 477:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The queue create function will set all the queue structure members
 478:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			correctly for a generic queue, but this function is creating a
 479:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mutex.  Overwrite those members that need to be set differently -
 480:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			in particular the information required for priority inheritance. */
 481:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxNewQueue->u.xSemaphore.xMutexHolder = NULL;
 482:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 483:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 484:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* In case this is a recursive mutex. */
 485:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxNewQueue->u.xSemaphore.uxRecursiveCallCount = 0;
 486:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 487:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_MUTEX( pxNewQueue );
 488:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/ccY2tmJ9.s 			page 10


 489:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Start with the semaphore in the expected state. */
 490:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
 491:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 492:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 493:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 494:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_MUTEX_FAILED();
 495:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 496:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 497:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 498:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_MUTEXES */
 499:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 500:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 501:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( ( configUSE_MUTEXES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 502:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 503:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueCreateMutex( const uint8_t ucQueueType )
 504:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 505:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xNewQueue;
 506:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	const UBaseType_t uxMutexLength = ( UBaseType_t ) 1, uxMutexSize = ( UBaseType_t ) 0;
 507:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 508:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xNewQueue = xQueueGenericCreate( uxMutexLength, uxMutexSize, ucQueueType );
 509:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvInitialiseMutex( ( Queue_t * ) xNewQueue );
 510:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 511:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xNewQueue;
 512:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 513:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 514:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_MUTEXES */
 515:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 516:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 517:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( ( configUSE_MUTEXES == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 518:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 519:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueCreateMutexStatic( const uint8_t ucQueueType, StaticQueue_t *pxStaticQueue )
 520:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 521:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xNewQueue;
 522:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	const UBaseType_t uxMutexLength = ( UBaseType_t ) 1, uxMutexSize = ( UBaseType_t ) 0;
 523:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 524:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Prevent compiler warnings about unused parameters if
 525:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configUSE_TRACE_FACILITY does not equal 1. */
 526:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) ucQueueType;
 527:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 528:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xNewQueue = xQueueGenericCreateStatic( uxMutexLength, uxMutexSize, NULL, pxStaticQueue, ucQueueTy
 529:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvInitialiseMutex( ( Queue_t * ) xNewQueue );
 530:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 531:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xNewQueue;
 532:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 533:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 534:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_MUTEXES */
 535:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 536:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 537:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( ( configUSE_MUTEXES == 1 ) && ( INCLUDE_xSemaphoreGetMutexHolder == 1 ) )
 538:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 539:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	TaskHandle_t xQueueGetMutexHolder( QueueHandle_t xSemaphore )
 540:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 541:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	TaskHandle_t pxReturn;
 542:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxSemaphore = ( Queue_t * ) xSemaphore;
 543:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 544:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* This function is called by xSemaphoreGetMutexHolder(), and should not
 545:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		be called directly.  Note:  This is a good way of determining if the
ARM GAS  /tmp/ccY2tmJ9.s 			page 11


 546:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		calling task is the mutex holder, but not a good way of determining the
 547:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		identity of the mutex holder, as the holder may change between the
 548:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		following critical section exiting and the function returning. */
 549:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
 550:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 551:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxSemaphore->uxQueueType == queueQUEUE_IS_MUTEX )
 552:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 553:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxReturn = pxSemaphore->u.xSemaphore.xMutexHolder;
 554:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 555:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 556:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 557:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxReturn = NULL;
 558:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 559:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 560:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
 561:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 562:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxReturn;
 563:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint !e818 xSemaphore cannot be a pointer to const because it is a typedef. */
 564:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 565:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 566:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 567:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 568:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( ( configUSE_MUTEXES == 1 ) && ( INCLUDE_xSemaphoreGetMutexHolder == 1 ) )
 569:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 570:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	TaskHandle_t xQueueGetMutexHolderFromISR( QueueHandle_t xSemaphore )
 571:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 572:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	TaskHandle_t pxReturn;
 573:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 574:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( xSemaphore );
 575:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 576:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Mutexes cannot be used in interrupt service routines, so the mutex
 577:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		holder should not change in an ISR, and therefore a critical section is
 578:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		not required here. */
 579:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( ( ( Queue_t * ) xSemaphore )->uxQueueType == queueQUEUE_IS_MUTEX )
 580:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 581:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxReturn = ( ( Queue_t * ) xSemaphore )->u.xSemaphore.xMutexHolder;
 582:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 583:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 584:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 585:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxReturn = NULL;
 586:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 587:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 588:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxReturn;
 589:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint !e818 xSemaphore cannot be a pointer to const because it is a typedef. */
 590:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 591:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 592:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 593:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 594:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_RECURSIVE_MUTEXES == 1 )
 595:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 596:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueGiveMutexRecursive( QueueHandle_t xMutex )
 597:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 598:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
 599:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxMutex = ( Queue_t * ) xMutex;
 600:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 601:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( pxMutex );
 602:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/ccY2tmJ9.s 			page 12


 603:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* If this is the task that holds the mutex then xMutexHolder will not
 604:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		change outside of this task.  If this task does not hold the mutex then
 605:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxMutexHolder can never coincidentally equal the tasks handle, and as
 606:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		this is the only condition we are interested in it does not matter if
 607:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxMutexHolder is accessed simultaneously by another task.  Therefore no
 608:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		mutual exclusion is required to test the pxMutexHolder variable. */
 609:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxMutex->u.xSemaphore.xMutexHolder == xTaskGetCurrentTaskHandle() )
 610:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 611:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceGIVE_MUTEX_RECURSIVE( pxMutex );
 612:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 613:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* uxRecursiveCallCount cannot be zero if xMutexHolder is equal to
 614:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the task handle, therefore no underflow check is required.  Also,
 615:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			uxRecursiveCallCount is only modified by the mutex holder, and as
 616:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			there can only be one, no mutual exclusion is required to modify the
 617:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			uxRecursiveCallCount member. */
 618:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( pxMutex->u.xSemaphore.uxRecursiveCallCount )--;
 619:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 620:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Has the recursive call count unwound to 0? */
 621:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxMutex->u.xSemaphore.uxRecursiveCallCount == ( UBaseType_t ) 0 )
 622:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 623:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Return the mutex.  This will automatically unblock any other
 624:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				task that might be waiting to access the mutex. */
 625:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xQueueGenericSend( pxMutex, NULL, queueMUTEX_GIVE_BLOCK_TIME, queueSEND_TO_BACK );
 626:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 627:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 628:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 629:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
 630:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 631:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 632:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
 633:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 634:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 635:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 636:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The mutex cannot be given because the calling task is not the
 637:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			holder. */
 638:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFAIL;
 639:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 640:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceGIVE_MUTEX_RECURSIVE_FAILED( pxMutex );
 641:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 642:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 643:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
 644:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 645:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 646:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_RECURSIVE_MUTEXES */
 647:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 648:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 649:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_RECURSIVE_MUTEXES == 1 )
 650:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 651:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueTakeMutexRecursive( QueueHandle_t xMutex, TickType_t xTicksToWait )
 652:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 653:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
 654:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxMutex = ( Queue_t * ) xMutex;
 655:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 656:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( pxMutex );
 657:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 658:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Comments regarding mutual exclusion as per those within
 659:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xQueueGiveMutexRecursive(). */
ARM GAS  /tmp/ccY2tmJ9.s 			page 13


 660:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 661:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		traceTAKE_MUTEX_RECURSIVE( pxMutex );
 662:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 663:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxMutex->u.xSemaphore.xMutexHolder == xTaskGetCurrentTaskHandle() )
 664:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 665:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
 666:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
 667:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 668:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 669:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 670:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = xQueueSemaphoreTake( pxMutex, xTicksToWait );
 671:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 672:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* pdPASS will only be returned if the mutex was successfully
 673:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			obtained.  The calling task may have entered the Blocked state
 674:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			before reaching here. */
 675:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xReturn != pdFAIL )
 676:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 677:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
 678:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 679:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 680:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 681:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceTAKE_MUTEX_RECURSIVE_FAILED( pxMutex );
 682:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 683:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 684:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 685:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
 686:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 687:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 688:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_RECURSIVE_MUTEXES */
 689:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 690:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 691:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 692:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 693:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueCreateCountingSemaphoreStatic( const UBaseType_t uxMaxCount, const UBaseType_t
 694:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 695:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xHandle;
 696:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 697:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxMaxCount != 0 );
 698:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 699:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 700:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStatic
 701:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 702:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xHandle != NULL )
 703:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 704:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 705:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 706:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE();
 707:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 708:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 709:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 710:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE_FAILED();
 711:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 712:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 713:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xHandle;
 714:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 715:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 716:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* ( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) ) *
ARM GAS  /tmp/ccY2tmJ9.s 			page 14


 717:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 718:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 719:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 720:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 721:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueCreateCountingSemaphore( const UBaseType_t uxMaxCount, const UBaseType_t uxIni
 722:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 723:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xHandle;
 724:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 725:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxMaxCount != 0 );
 726:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 727:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 728:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUN
 729:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 730:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xHandle != NULL )
 731:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 732:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 733:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 734:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE();
 735:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 736:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 737:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 738:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE_FAILED();
 739:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 740:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 741:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xHandle;
 742:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 743:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 744:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* ( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) ) *
 745:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 746:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 747:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueGenericSend( QueueHandle_t xQueue, const void * const pvItemToQueue, TickType_t xT
 748:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 749:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;
 750:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** TimeOut_t xTimeOut;
 751:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
 752:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 753:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 754:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 755:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 756:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 757:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 758:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
 759:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 760:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
 761:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 762:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 763:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/*lint -save -e904 This function relaxes the coding standard somewhat to
 764:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	allow return statements within the function itself.  This is done in the
 765:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	interest of execution time efficiency. */
 766:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	for( ;; )
 767:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 768:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
 769:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 770:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Is there room on the queue now?  The running task must be the
 771:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			highest priority task wanting to access the queue.  If the head item
 772:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			in the queue is to be overwritten then it does not matter if the
 773:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			queue is full. */
ARM GAS  /tmp/ccY2tmJ9.s 			page 15


 774:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 775:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 776:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_SEND( pxQueue );
 777:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 778:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
 779:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 780:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 781:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 782:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 783:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 784:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
 785:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 786:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( ( xCopyPosition == queueOVERWRITE ) && ( uxPreviousMessagesWaiting != ( UBaseType_t ) 0 )
 787:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 788:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* Do not notify the queue set as an existing item
 789:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							was overwritten in the queue so the number of items
 790:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							in the queue has not changed. */
 791:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 792:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 793:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else if( prvNotifyQueueSetContainer( pxQueue, xCopyPosition ) != pdFALSE )
 794:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 795:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The queue is a member of a queue set, and posting
 796:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							to the queue set caused a higher priority task to
 797:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							unblock. A context switch is required. */
 798:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 799:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 800:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
 801:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 802:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 803:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 804:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 805:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
 806:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 807:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* If there was a task waiting for data to arrive on the
 808:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						queue then unblock it now. */
 809:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 810:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 811:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 812:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 813:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								/* The unblocked task has a priority higher than
 814:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								our own so yield immediately.  Yes it is ok to
 815:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								do this from within the critical section - the
 816:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								kernel takes care of that. */
 817:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								queueYIELD_IF_USING_PREEMPTION();
 818:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 819:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
 820:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 821:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
 822:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 823:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 824:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else if( xYieldRequired != pdFALSE )
 825:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 826:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* This path is a special case that will only get
 827:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							executed if the task was holding multiple mutexes
 828:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							and the mutexes were given back in an order that is
 829:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							different to that in which they were taken. */
 830:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
ARM GAS  /tmp/ccY2tmJ9.s 			page 16


 831:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 832:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
 833:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 834:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 835:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 836:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 837:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 838:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#else /* configUSE_QUEUE_SETS */
 839:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 840:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 841:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 842:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* If there was a task waiting for data to arrive on the
 843:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					queue then unblock it now. */
 844:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 845:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 846:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 847:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 848:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The unblocked task has a priority higher than
 849:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							our own so yield immediately.  Yes it is ok to do
 850:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							this from within the critical section - the kernel
 851:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							takes care of that. */
 852:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 853:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 854:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
 855:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 856:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 857:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 858:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 859:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else if( xYieldRequired != pdFALSE )
 860:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 861:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* This path is a special case that will only get
 862:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						executed if the task was holding multiple mutexes and
 863:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						the mutexes were given back in an order that is
 864:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						different to that in which they were taken. */
 865:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
 866:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 867:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
 868:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 869:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
 870:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 871:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 872:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
 873:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 874:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				taskEXIT_CRITICAL();
 875:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
 876:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 877:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 878:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 879:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
 880:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 881:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was full and no block time is specified (or
 882:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the block time has expired) so leave now. */
 883:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					taskEXIT_CRITICAL();
 884:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 885:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Return to the original privilege level before exiting
 886:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the function. */
 887:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_SEND_FAILED( pxQueue );
ARM GAS  /tmp/ccY2tmJ9.s 			page 17


 888:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_FULL;
 889:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 890:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
 891:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 892:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was full and a block time was specified so
 893:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					configure the timeout structure. */
 894:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
 895:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 896:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 897:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
 898:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 899:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Entry time was already set. */
 900:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
 901:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 902:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 903:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 904:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
 905:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 906:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
 907:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		now the critical section has been exited. */
 908:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 909:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vTaskSuspendAll();
 910:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 911:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 912:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
 913:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 914:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 915:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueFull( pxQueue ) != pdFALSE )
 916:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 917:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceBLOCKING_ON_QUEUE_SEND( pxQueue );
 918:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 919:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 920:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Unlocking the queue means queue events can effect the
 921:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				event list.  It is possible that interrupts occurring now
 922:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				remove this task from the event list again - but as the
 923:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				scheduler is suspended the task will go onto the pending
 924:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				ready last instead of the actual ready list. */
 925:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 926:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 927:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Resuming the scheduler will move tasks from the pending
 928:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				ready list into the ready list - so it is feasible that this
 929:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				task is already in a ready list before it yields - in which
 930:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				case the yield will not cause a context switch unless there
 931:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				is also a higher priority task in the pending ready list. */
 932:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 933:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 934:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portYIELD_WITHIN_API();
 935:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 936:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 937:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 938:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 939:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Try again. */
 940:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 941:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 942:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 943:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 944:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
ARM GAS  /tmp/ccY2tmJ9.s 			page 18


 945:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 946:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The timeout has expired. */
 947:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvUnlockQueue( pxQueue );
 948:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 949:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 950:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FAILED( pxQueue );
 951:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			return errQUEUE_FULL;
 952:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 953:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint -restore */
 954:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 955:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 956:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 957:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueGenericSendFromISR( QueueHandle_t xQueue, const void * const pvItemToQueue, BaseTy
 958:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 959:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 960:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
 961:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
 962:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 963:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 964:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 965:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 966:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 967:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
 968:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
 969:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
 970:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
 971:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
 972:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
 973:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
 974:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
 975:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
 976:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
 977:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
 978:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
 979:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
 980:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
 981:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 982:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 983:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Similar to xQueueGenericSend, except without blocking if there is no room
 984:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	in the queue.  Also don't directly wake a task that was blocked on a queue
 985:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	read, instead return a flag to say whether a context switch is required or
 986:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	not (i.e. has a task with a higher priority than us been woken by this
 987:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	post). */
 988:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 989:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 990:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 991:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 992:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const int8_t cTxLock = pxQueue->cTxLock;
 993:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 994:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR( pxQueue );
 995:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 996:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Semaphores use xQueueGiveFromISR(), so pxQueue will not be a
 997:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			semaphore or mutex.  That means prvCopyDataToQueue() cannot result
 998:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			in a task disinheriting a priority and prvCopyDataToQueue() can be
 999:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			called here even though the disinherit function does not check if
1000:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the scheduler is suspended before accessing the ready lists. */
1001:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
ARM GAS  /tmp/ccY2tmJ9.s 			page 19


1002:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1003:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The event list is not altered if the queue is locked.  This will
1004:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			be done when the queue is unlocked later. */
1005:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( cTxLock == queueUNLOCKED )
1006:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1007:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
1008:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1009:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
1010:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1011:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue, xCopyPosition ) != pdFALSE )
1012:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1013:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The queue is a member of a queue set, and posting
1014:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							to the queue set caused a higher priority task to
1015:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							unblock.  A context switch is required. */
1016:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1017:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1018:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1019:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1020:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1021:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1022:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1023:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1024:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1025:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1026:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1027:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1028:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1029:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1030:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1031:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1032:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1033:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1034:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1035:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1036:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								/* The task waiting has a higher priority so
1037:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								record that a context switch is required. */
1038:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								if( pxHigherPriorityTaskWoken != NULL )
1039:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								{
1040:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 									*pxHigherPriorityTaskWoken = pdTRUE;
1041:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								}
1042:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								else
1043:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								{
1044:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 									mtCOVERAGE_TEST_MARKER();
1045:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								}
1046:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1047:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1048:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1049:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1050:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1051:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1052:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1053:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1054:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1055:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1056:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1057:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1058:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#else /* configUSE_QUEUE_SETS */
ARM GAS  /tmp/ccY2tmJ9.s 			page 20


1059:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1060:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1061:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1062:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1063:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1064:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The task waiting has a higher priority so record that a
1065:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							context	switch is required. */
1066:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1067:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1068:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1069:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1070:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1071:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1072:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1073:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1074:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1075:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1076:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1077:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1078:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1079:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1080:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1081:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1082:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1083:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1084:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1085:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
1086:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1087:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1088:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1089:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1090:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				knows that data was posted while it was locked. */
1091:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
1092:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1093:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1094:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
1095:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1096:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1097:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1098:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
1099:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = errQUEUE_FULL;
1100:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1101:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1102:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1103:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1104:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
1105:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1106:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1107:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1108:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueGiveFromISR( QueueHandle_t xQueue, BaseType_t * const pxHigherPriorityTaskWoken )
1109:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1110:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
1111:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
1112:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
1113:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1114:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Similar to xQueueGenericSendFromISR() but used with semaphores where the
1115:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	item size is 0.  Don't directly wake a task that was blocked on a queue
ARM GAS  /tmp/ccY2tmJ9.s 			page 21


1116:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	read, instead return a flag to say whether a context switch is required or
1117:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	not (i.e. has a task with a higher priority than us been woken by this
1118:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	post). */
1119:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1120:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1121:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1122:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* xQueueGenericSendFromISR() should be used instead of xQueueGiveFromISR()
1123:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if the item size is not 0. */
1124:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize == 0 );
1125:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1126:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Normally a mutex would not be given from an interrupt, especially if
1127:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	there is a mutex holder, as priority inheritance makes no sense for an
1128:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	interrupts, only tasks. */
1129:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutex
1130:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1131:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1132:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1133:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1134:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1135:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1136:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1137:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1138:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
1139:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1140:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1141:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1142:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1143:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1144:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1145:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1146:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1147:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1148:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1149:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1150:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1151:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* When the queue is used to implement a semaphore no data is ever
1152:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		moved through the queue but it is still valid to see if the queue 'has
1153:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		space'. */
1154:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( uxMessagesWaiting < pxQueue->uxLength )
1155:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1156:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const int8_t cTxLock = pxQueue->cTxLock;
1157:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1158:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR( pxQueue );
1159:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1160:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* A task can only have an inherited priority if it is a mutex
1161:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			holder - and if there is a mutex holder then the mutex cannot be
1162:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			given from an ISR.  As this is the ISR version of the function it
1163:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			can be assumed there is no mutex holder and no need to determine if
1164:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			priority disinheritance is needed.  Simply increase the count of
1165:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			messages (semaphores) available. */
1166:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
1167:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1168:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The event list is not altered if the queue is locked.  This will
1169:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			be done when the queue is unlocked later. */
1170:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( cTxLock == queueUNLOCKED )
1171:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1172:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
ARM GAS  /tmp/ccY2tmJ9.s 			page 22


1173:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1174:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
1175:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1176:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue, queueSEND_TO_BACK ) != pdFALSE )
1177:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1178:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The semaphore is a member of a queue set, and
1179:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							posting	to the queue set caused a higher priority
1180:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							task to	unblock.  A context switch is required. */
1181:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1182:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1183:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1184:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1185:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1186:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1187:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1188:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1189:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1190:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1191:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1192:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1193:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1194:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1195:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1196:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1197:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1198:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1199:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1200:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1201:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								/* The task waiting has a higher priority so
1202:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								record that a context switch is required. */
1203:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								if( pxHigherPriorityTaskWoken != NULL )
1204:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								{
1205:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 									*pxHigherPriorityTaskWoken = pdTRUE;
1206:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								}
1207:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								else
1208:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								{
1209:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 									mtCOVERAGE_TEST_MARKER();
1210:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								}
1211:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1212:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1213:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1214:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1215:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1216:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1217:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1218:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1219:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1220:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1221:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1222:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1223:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#else /* configUSE_QUEUE_SETS */
1224:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1225:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1226:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1227:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1228:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1229:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The task waiting has a higher priority so record that a
ARM GAS  /tmp/ccY2tmJ9.s 			page 23


1230:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							context	switch is required. */
1231:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1232:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1233:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1234:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1235:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1236:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1237:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1238:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1239:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1240:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1241:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1242:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1243:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1244:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1245:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1246:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1247:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1248:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1249:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1250:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
1251:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1252:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1253:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1254:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1255:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				knows that data was posted while it was locked. */
1256:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
1257:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1258:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1259:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
1260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1261:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1262:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1263:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
1264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = errQUEUE_FULL;
1265:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1266:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1267:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1268:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1269:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
1270:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1271:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1272:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1273:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueReceive( QueueHandle_t xQueue, void * const pvBuffer, TickType_t xTicksToWait )
1274:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1275:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
1276:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** TimeOut_t xTimeOut;
1277:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
1278:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1279:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Check the pointer is not NULL. */
1280:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( ( pxQueue ) );
1281:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1282:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The buffer into which data is received can only be NULL if the data size
1283:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	is zero (so no data is copied into the buffer. */
1284:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) )
1285:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1286:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Cannot block if the scheduler is suspended. */
ARM GAS  /tmp/ccY2tmJ9.s 			page 24


1287:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1289:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
1290:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1291:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
1292:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1293:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1294:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/*lint -save -e904  This function relaxes the coding standard somewhat to
1295:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	allow return statements within the function itself.  This is done in the
1296:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	interest of execution time efficiency. */
1297:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	for( ;; )
1298:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1299:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
1300:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1301:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1302:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1303:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Is there data in the queue now?  To be running the calling task
1304:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			must be the highest priority task wanting to access the queue. */
1305:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1306:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1307:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Data available, remove one item. */
1308:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvCopyDataFromQueue( pxQueue, pvBuffer );
1309:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_RECEIVE( pxQueue );
1310:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
1311:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1312:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* There is now space in the queue, were any tasks waiting to
1313:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				post to the queue?  If so, unblock the highest priority waiting
1314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				task. */
1315:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1316:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1317:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1318:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1319:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
1320:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1321:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1322:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1323:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1324:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1325:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1326:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1327:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1328:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1329:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1331:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				taskEXIT_CRITICAL();
1332:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
1333:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1334:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1335:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1336:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
1337:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1338:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was empty and no block time is specified (or
1339:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the block time has expired) so leave now. */
1340:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					taskEXIT_CRITICAL();
1341:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
1342:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_EMPTY;
1343:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
ARM GAS  /tmp/ccY2tmJ9.s 			page 25


1344:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
1345:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1346:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was empty and a block time was specified so
1347:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					configure the timeout structure. */
1348:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
1349:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
1350:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1351:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1352:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1353:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Entry time was already set. */
1354:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1355:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1356:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1357:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1358:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
1359:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1360:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
1361:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		now the critical section has been exited. */
1362:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1363:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vTaskSuspendAll();
1364:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
1365:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1366:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
1367:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
1368:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1369:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The timeout has not expired.  If the queue is still empty place
1370:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the task on the list of tasks waiting to receive from the queue. */
1371:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1372:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1373:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceBLOCKING_ON_QUEUE_RECEIVE( pxQueue );
1374:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
1375:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1376:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
1377:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1378:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portYIELD_WITHIN_API();
1379:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1380:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1381:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1382:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1383:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1384:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1385:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1386:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1387:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* The queue contains data again.  Loop back to try and read the
1388:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				data. */
1389:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1390:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
1391:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1392:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1393:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1394:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1395:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Timed out.  If there is no data in the queue exit, otherwise loop
1396:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			back and attempt to read the data. */
1397:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvUnlockQueue( pxQueue );
1398:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
1399:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1400:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
ARM GAS  /tmp/ccY2tmJ9.s 			page 26


1401:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1402:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_RECEIVE_FAILED( pxQueue );
1403:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return errQUEUE_EMPTY;
1404:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1405:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1406:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1407:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1408:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1409:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1410:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint -restore */
1411:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1412:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1413:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1414:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueSemaphoreTake( QueueHandle_t xQueue, TickType_t xTicksToWait )
1415:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1416:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
1417:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** TimeOut_t xTimeOut;
1418:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
1419:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1420:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
1421:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xInheritanceOccurred = pdFALSE;
1422:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
1423:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1424:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Check the queue pointer is not NULL. */
1425:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( ( pxQueue ) );
1426:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1427:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Check this really is a semaphore, in which case the item size will be
1428:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	0. */
1429:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize == 0 );
1430:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1431:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Cannot block if the scheduler is suspended. */
1432:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1433:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1434:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
1435:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1436:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
1437:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1438:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1439:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/*lint -save -e904 This function relaxes the coding standard somewhat to allow return
1440:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	statements within the function itself.  This is done in the interest
1441:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	of execution time efficiency. */
1442:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	for( ;; )
1443:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1444:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
1445:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1446:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Semaphores are queues with an item size of 0, and where the
1447:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			number of messages in the queue is the semaphore's count value. */
1448:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
1449:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1450:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Is there data in the queue now?  To be running the calling task
1451:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			must be the highest priority task wanting to access the queue. */
1452:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
1453:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1454:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_RECEIVE( pxQueue );
1455:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1456:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Semaphores are queues with a data size of zero and where the
1457:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				messages waiting is the semaphore's count.  Reduce the count. */
ARM GAS  /tmp/ccY2tmJ9.s 			page 27


1458:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
1459:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1460:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_MUTEXES == 1 )
1461:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1462:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
1463:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1464:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* Record the information required to implement
1465:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						priority inheritance should it become necessary. */
1466:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
1467:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1468:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1469:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1470:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1471:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1472:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1473:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_MUTEXES */
1474:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1475:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Check to see if other tasks are blocked waiting to give the
1476:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				semaphore, and if so, unblock the highest priority such task. */
1477:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1478:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1479:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1480:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1481:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
1482:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1483:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1484:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1485:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1486:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1487:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1488:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1489:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1490:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1491:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1492:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1493:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				taskEXIT_CRITICAL();
1494:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
1495:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1496:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1497:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1498:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
1499:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1500:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* For inheritance to have occurred there must have been an
1501:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					initial timeout, and an adjusted timeout cannot become 0, as
1502:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if it were 0 the function would have exited. */
1503:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					#if( configUSE_MUTEXES == 1 )
1504:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1505:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						configASSERT( xInheritanceOccurred == pdFALSE );
1506:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1507:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					#endif /* configUSE_MUTEXES */
1508:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1509:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The semaphore count was 0 and no block time is specified
1510:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					(or the block time has expired) so exit now. */
1511:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					taskEXIT_CRITICAL();
1512:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
1513:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_EMPTY;
1514:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
ARM GAS  /tmp/ccY2tmJ9.s 			page 28


1515:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
1516:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1517:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The semaphore count was 0 and a block time was specified
1518:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					so configure the timeout structure ready to block. */
1519:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
1520:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
1521:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1522:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1523:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1524:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Entry time was already set. */
1525:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1526:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1527:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1528:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1529:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
1530:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1531:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Interrupts and other tasks can give to and take from the semaphore
1532:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		now the critical section has been exited. */
1533:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1534:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vTaskSuspendAll();
1535:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
1536:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1537:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
1538:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
1539:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1540:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* A block time is specified and not expired.  If the semaphore
1541:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			count is 0 then enter the Blocked state to wait for a semaphore to
1542:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			become available.  As semaphores are implemented with queues the
1543:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			queue being empty is equivalent to the semaphore count being 0. */
1544:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1545:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1546:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceBLOCKING_ON_QUEUE_RECEIVE( pxQueue );
1547:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1548:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_MUTEXES == 1 )
1549:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1550:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
1551:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1552:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						taskENTER_CRITICAL();
1553:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1554:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
1555:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1556:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						taskEXIT_CRITICAL();
1557:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1558:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1559:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1560:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1561:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1562:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1563:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif
1564:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1565:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
1566:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1567:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
1568:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1569:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portYIELD_WITHIN_API();
1570:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1571:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
ARM GAS  /tmp/ccY2tmJ9.s 			page 29


1572:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1573:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1574:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1575:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1576:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1577:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1578:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* There was no timeout and the semaphore count was not 0, so
1579:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				attempt to take the semaphore again. */
1580:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1581:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
1582:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1583:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1584:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1585:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1586:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Timed out. */
1587:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvUnlockQueue( pxQueue );
1588:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
1589:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1590:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* If the semaphore count is 0 exit now as the timeout has
1591:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			expired.  Otherwise return to attempt to take the semaphore that is
1592:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			known to be available.  As semaphores are implemented by queues the
1593:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			queue being empty is equivalent to the semaphore count being 0. */
1594:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1595:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1596:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_MUTEXES == 1 )
1597:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1598:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* xInheritanceOccurred could only have be set if
1599:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					pxQueue->uxQueueType == queueQUEUE_IS_MUTEX so no need to
1600:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					test the mutex type again to check it is actually a mutex. */
1601:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xInheritanceOccurred != pdFALSE )
1602:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1603:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						taskENTER_CRITICAL();
1604:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1605:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							UBaseType_t uxHighestWaitingPriority;
1606:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1607:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* This task blocking on the mutex caused another
1608:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							task to inherit this task's priority.  Now this task
1609:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							has timed out the priority should be disinherited
1610:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							again, but only as low as the next highest priority
1611:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							task that is waiting for the same mutex. */
1612:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							uxHighestWaitingPriority = prvGetDisinheritPriorityAfterTimeout( pxQueue );
1613:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPri
1614:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1615:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						taskEXIT_CRITICAL();
1616:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1617:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1618:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_MUTEXES */
1619:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1620:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_RECEIVE_FAILED( pxQueue );
1621:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return errQUEUE_EMPTY;
1622:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1623:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1624:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1625:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1626:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1627:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1628:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint -restore */
ARM GAS  /tmp/ccY2tmJ9.s 			page 30


1629:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1630:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1631:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1632:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueuePeek( QueueHandle_t xQueue, void * const pvBuffer, TickType_t xTicksToWait )
1633:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1634:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
1635:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** TimeOut_t xTimeOut;
1636:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** int8_t *pcOriginalReadPosition;
1637:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
1638:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1639:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Check the pointer is not NULL. */
1640:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( ( pxQueue ) );
1641:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1642:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The buffer into which data is received can only be NULL if the data size
1643:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	is zero (so no data is copied into the buffer. */
1644:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) )
1645:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1646:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Cannot block if the scheduler is suspended. */
1647:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1648:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1649:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
1650:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1651:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
1652:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1653:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1654:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/*lint -save -e904  This function relaxes the coding standard somewhat to
1655:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	allow return statements within the function itself.  This is done in the
1656:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	interest of execution time efficiency. */
1657:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	for( ;; )
1658:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1659:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
1660:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1661:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1662:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1663:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Is there data in the queue now?  To be running the calling task
1664:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			must be the highest priority task wanting to access the queue. */
1665:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1666:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1667:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Remember the read position so it can be reset after the data
1668:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				is read from the queue as this function is only peeking the
1669:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				data, not removing it. */
1670:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pcOriginalReadPosition = pxQueue->u.xQueue.pcReadFrom;
1671:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1672:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvCopyDataFromQueue( pxQueue, pvBuffer );
1673:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_PEEK( pxQueue );
1674:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1675:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* The data is not being removed, so reset the read pointer. */
1676:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->u.xQueue.pcReadFrom = pcOriginalReadPosition;
1677:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1678:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* The data is being left in the queue, so see if there are
1679:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				any other tasks waiting for the data. */
1680:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1681:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1682:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1683:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1684:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The task waiting has a higher priority than this task. */
1685:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
ARM GAS  /tmp/ccY2tmJ9.s 			page 31


1686:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1687:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1688:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1689:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1690:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1691:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1692:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1693:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1694:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1695:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1696:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1697:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				taskEXIT_CRITICAL();
1698:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
1699:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1700:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1701:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1702:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
1703:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1704:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was empty and no block time is specified (or
1705:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the block time has expired) so leave now. */
1706:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					taskEXIT_CRITICAL();
1707:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_PEEK_FAILED( pxQueue );
1708:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_EMPTY;
1709:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1710:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
1711:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1712:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was empty and a block time was specified so
1713:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					configure the timeout structure ready to enter the blocked
1714:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					state. */
1715:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
1716:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
1717:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1718:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1719:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1720:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Entry time was already set. */
1721:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1722:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1723:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1724:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1725:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
1726:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1727:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
1728:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		now the critical section has been exited. */
1729:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1730:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vTaskSuspendAll();
1731:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
1732:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1733:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
1734:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
1735:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1736:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Timeout has not expired yet, check to see if there is data in the
1737:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			queue now, and if not enter the Blocked state to wait for data. */
1738:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1739:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1740:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceBLOCKING_ON_QUEUE_PEEK( pxQueue );
1741:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
1742:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
ARM GAS  /tmp/ccY2tmJ9.s 			page 32


1743:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
1744:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1745:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portYIELD_WITHIN_API();
1746:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1747:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1748:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1749:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1750:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1751:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1752:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1753:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1754:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* There is data in the queue now, so don't enter the blocked
1755:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				state, instead return to try and obtain the data. */
1756:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1757:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
1758:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1759:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1760:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1761:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1762:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The timeout has expired.  If there is still no data in the queue
1763:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			exit, otherwise go back and try to read the data again. */
1764:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvUnlockQueue( pxQueue );
1765:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
1766:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1767:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1768:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1769:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_PEEK_FAILED( pxQueue );
1770:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return errQUEUE_EMPTY;
1771:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1772:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1773:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1774:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1775:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1776:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1777:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint -restore */
1778:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1779:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1780:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1781:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueReceiveFromISR( QueueHandle_t xQueue, void * const pvBuffer, BaseType_t * const px
1782:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1783:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
1784:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
1785:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
1786:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1787:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1788:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
1789:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1790:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1791:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1792:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1793:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1794:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1795:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1796:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1797:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
1798:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1799:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
ARM GAS  /tmp/ccY2tmJ9.s 			page 33


1800:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1801:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1802:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1803:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1804:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1805:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1806:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1807:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1808:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1809:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1810:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Cannot block in an ISR, so check there is data available. */
1811:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1812:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1813:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const int8_t cRxLock = pxQueue->cRxLock;
1814:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1815:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR( pxQueue );
1816:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1817:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
1818:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
1819:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1820:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* If the queue is locked the event list will not be modified.
1821:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			Instead update the lock count so the task that unlocks the queue
1822:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			will know that an ISR has removed data while the queue was
1823:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			locked. */
1824:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( cRxLock == queueUNLOCKED )
1825:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1826:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1827:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1828:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1829:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1830:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The task waiting has a higher priority than us so
1831:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						force a context switch. */
1832:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( pxHigherPriorityTaskWoken != NULL )
1833:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1834:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							*pxHigherPriorityTaskWoken = pdTRUE;
1835:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1836:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1837:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1838:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1839:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1840:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1841:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1842:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1843:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1844:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1845:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1846:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1847:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1848:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1849:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1850:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1851:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1852:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1853:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1854:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				knows that data was removed while it was locked. */
1855:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
1856:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
ARM GAS  /tmp/ccY2tmJ9.s 			page 34


1857:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1858:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
1859:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1860:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1861:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1862:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFAIL;
1863:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR_FAILED( pxQueue );
1864:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1865:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1866:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1867:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1868:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
1869:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1870:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1871:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1872:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueuePeekFromISR( QueueHandle_t xQueue,  void * const pvBuffer )
1873:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1874:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
1875:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
1876:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** int8_t *pcOriginalReadPosition;
1877:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
1878:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1879:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1880:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
1881:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
1882:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1883:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1884:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1885:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1886:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1887:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1888:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1889:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1890:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
1891:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1892:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1893:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1894:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1895:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1896:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1897:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1898:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1899:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1900:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1901:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Cannot block in an ISR, so check there is data available. */
1902:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
1903:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1904:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_PEEK_FROM_ISR( pxQueue );
1905:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1906:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Remember the read position so it can be reset as nothing is
1907:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			actually being removed from the queue. */
1908:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pcOriginalReadPosition = pxQueue->u.xQueue.pcReadFrom;
1909:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
1910:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.xQueue.pcReadFrom = pcOriginalReadPosition;
1911:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1912:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
1913:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
ARM GAS  /tmp/ccY2tmJ9.s 			page 35


1914:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1915:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1916:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFAIL;
1917:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_PEEK_FROM_ISR_FAILED( pxQueue );
1918:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1919:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1920:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1921:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1922:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
1923:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1924:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1925:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1926:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxQueueMessagesWaiting( const QueueHandle_t xQueue )
1927:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1928:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
1929:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1930:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( xQueue );
1931:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1932:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
1933:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1934:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
1935:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1936:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
1937:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1938:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return uxReturn;
1939:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1940:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1941:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1942:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxQueueSpacesAvailable( const QueueHandle_t xQueue )
1943:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1944:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
1945:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
1946:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1947:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1948:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1949:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
1950:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1951:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		uxReturn = pxQueue->uxLength - pxQueue->uxMessagesWaiting;
1952:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1953:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
1954:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1955:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return uxReturn;
1956:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1957:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1958:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1959:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxQueueMessagesWaitingFromISR( const QueueHandle_t xQueue )
1960:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1961:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
1962:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
1963:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1964:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1965:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxReturn = pxQueue->uxMessagesWaiting;
1966:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1967:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return uxReturn;
1968:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1969:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1970:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/ccY2tmJ9.s 			page 36


1971:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** void vQueueDelete( QueueHandle_t xQueue )
1972:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1973:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
1974:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1975:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1976:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	traceQUEUE_DELETE( pxQueue );
1977:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1978:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( configQUEUE_REGISTRY_SIZE > 0 )
1979:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1980:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vQueueUnregisterQueue( pxQueue );
1981:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1982:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
1983:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1984:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) )
1985:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1986:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The queue can only have been allocated dynamically - free it
1987:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		again. */
1988:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vPortFree( pxQueue );
1989:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1990:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#elif( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
1991:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1992:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The queue could have been allocated statically or dynamically, so
1993:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		check before attempting to free the memory. */
1994:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
1995:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1996:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			vPortFree( pxQueue );
1997:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1998:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1999:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2000:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2001:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2002:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2003:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#else
2004:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2005:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The queue must have been statically allocated, so is not going to be
2006:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		deleted.  Avoid compiler warnings about the unused parameter. */
2007:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) pxQueue;
2008:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2009:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
2010:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
2011:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2012:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2013:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2014:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2015:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t uxQueueGetQueueNumber( QueueHandle_t xQueue )
2016:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2017:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return ( ( Queue_t * ) xQueue )->uxQueueNumber;
2018:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2019:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2020:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_TRACE_FACILITY */
2021:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2022:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2023:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2024:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2025:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void vQueueSetQueueNumber( QueueHandle_t xQueue, UBaseType_t uxQueueNumber )
2026:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2027:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( ( Queue_t * ) xQueue )->uxQueueNumber = uxQueueNumber;
ARM GAS  /tmp/ccY2tmJ9.s 			page 37


2028:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2029:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2030:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_TRACE_FACILITY */
2031:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2032:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2033:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2034:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2035:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uint8_t ucQueueGetQueueType( QueueHandle_t xQueue )
2036:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2037:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return ( ( Queue_t * ) xQueue )->ucQueueType;
2038:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2039:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2040:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_TRACE_FACILITY */
2041:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2042:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2043:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
2044:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2045:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	static UBaseType_t prvGetDisinheritPriorityAfterTimeout( const Queue_t * const pxQueue )
2046:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
  27              		.loc 1 2046 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
2047:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t uxHighestPriorityOfWaitingTasks;
2048:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2049:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* If a task waiting for a mutex causes the mutex holder to inherit a
2050:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		priority, but the waiting task times out, then the holder should
2051:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		disinherit the priority - but only down to the highest priority of any
2052:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		other tasks that are waiting for the same mutex.  For this purpose,
2053:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return the priority of the highest priority task that is waiting for the
2054:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		mutex. */
2055:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
  33              		.loc 1 2055 0
  34 0000 436A     		ldr	r3, [r0, #36]
  35 0002 23B1     		cbz	r3, .L3
2056:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2057:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET
  36              		.loc 1 2057 0
  37 0004 036B     		ldr	r3, [r0, #48]
  38 0006 1868     		ldr	r0, [r3]
  39              	.LVL1:
  40 0008 C0F10700 		rsb	r0, r0, #7
  41              	.LVL2:
  42 000c 7047     		bx	lr
  43              	.LVL3:
  44              	.L3:
2058:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2059:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2060:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2061:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			uxHighestPriorityOfWaitingTasks = tskIDLE_PRIORITY;
  45              		.loc 1 2061 0
  46 000e 0020     		movs	r0, #0
  47              	.LVL4:
2062:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2063:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/ccY2tmJ9.s 			page 38


2064:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return uxHighestPriorityOfWaitingTasks;
2065:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
  48              		.loc 1 2065 0
  49 0010 7047     		bx	lr
  50              		.cfi_endproc
  51              	.LFE28:
  53              		.section	.text.prvIsQueueFull,"ax",%progbits
  54              		.align	1
  55              		.syntax unified
  56              		.thumb
  57              		.thumb_func
  58              		.fpu fpv5-sp-d16
  60              	prvIsQueueFull:
  61              	.LFB34:
2066:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2067:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_MUTEXES */
2068:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2069:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2070:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const Bas
2071:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
2072:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn = pdFALSE;
2073:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxMessagesWaiting;
2074:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2075:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* This function is called from a critical section. */
2076:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2077:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
2078:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2079:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
2080:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2081:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		#if ( configUSE_MUTEXES == 1 )
2082:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2083:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
2084:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2085:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* The mutex is no longer being held. */
2086:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
2087:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->u.xSemaphore.xMutexHolder = NULL;
2088:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2089:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2090:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2091:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2092:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2093:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2094:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		#endif /* configUSE_MUTEXES */
2095:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2096:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else if( xPosition == queueSEND_TO_BACK )
2097:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2098:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); 
2099:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, esp
2100:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as co
2101:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2102:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->pcWriteTo = pxQueue->pcHead;
2103:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2104:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2105:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2106:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2107:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2108:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
ARM GAS  /tmp/ccY2tmJ9.s 			page 39


2109:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else
2110:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2111:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxIt
2112:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
2113:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as co
2114:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2115:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
2116:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2117:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2118:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2119:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2120:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2121:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2122:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xPosition == queueOVERWRITE )
2123:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2124:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
2125:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2126:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* An item is not being added but overwritten, so subtract
2127:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				one from the recorded number of items in the queue so when
2128:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				one is added again below the number of recorded items remains
2129:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				correct. */
2130:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				--uxMessagesWaiting;
2131:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2132:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2133:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2134:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2135:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2136:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2137:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2138:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2139:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2140:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2141:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2142:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2143:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
2144:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2145:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
2146:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
2147:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2148:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2149:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvCopyDataFromQueue( Queue_t * const pxQueue, void * const pvBuffer )
2150:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
2151:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
2152:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2153:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char typ
2154:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justi
2155:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2156:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
2157:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2158:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2159:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2160:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2161:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2162:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue
2163:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2164:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
2165:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
ARM GAS  /tmp/ccY2tmJ9.s 			page 40


2166:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2167:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvUnlockQueue( Queue_t * const pxQueue )
2168:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
2169:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED. */
2170:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2171:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The lock counts contains the number of extra data items placed or
2172:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	removed from the queue while the queue was locked.  When a queue is
2173:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	locked items can be added or removed, but the event lists cannot be
2174:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	updated. */
2175:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
2176:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2177:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		int8_t cTxLock = pxQueue->cTxLock;
2178:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2179:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* See if data was added to the queue while it was locked. */
2180:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		while( cTxLock > queueLOCKED_UNMODIFIED )
2181:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2182:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Data was posted while the queue was locked.  Are any tasks
2183:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			blocked waiting for data to become available? */
2184:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#if ( configUSE_QUEUE_SETS == 1 )
2185:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2186:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( pxQueue->pxQueueSetContainer != NULL )
2187:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2188:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( prvNotifyQueueSetContainer( pxQueue, queueSEND_TO_BACK ) != pdFALSE )
2189:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2190:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The queue is a member of a queue set, and posting to
2191:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						the queue set caused a higher priority task to unblock.
2192:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						A context switch is required. */
2193:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						vTaskMissedYield();
2194:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2195:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2196:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2197:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2198:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2199:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2200:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2201:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2202:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Tasks that are removed from the event list will get
2203:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					added to the pending ready list as the scheduler is still
2204:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					suspended. */
2205:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2206:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2207:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2208:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
2209:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The task waiting has a higher priority so record that a
2210:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							context	switch is required. */
2211:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							vTaskMissedYield();
2212:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
2213:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
2214:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
2215:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
2216:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
2217:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2218:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2219:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2220:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						break;
2221:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2222:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
ARM GAS  /tmp/ccY2tmJ9.s 			page 41


2223:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2224:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#else /* configUSE_QUEUE_SETS */
2225:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2226:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Tasks that are removed from the event list will get added to
2227:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				the pending ready list as the scheduler is still suspended. */
2228:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2229:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2230:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2231:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2232:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The task waiting has a higher priority so record that
2233:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						a context switch is required. */
2234:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						vTaskMissedYield();
2235:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2236:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2237:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2238:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2239:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2240:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2241:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2242:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2243:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					break;
2244:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2245:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2246:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#endif /* configUSE_QUEUE_SETS */
2247:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2248:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			--cTxLock;
2249:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2250:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2251:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
2252:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2253:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
2254:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2255:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Do the same for the Rx lock. */
2256:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
2257:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2258:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		int8_t cRxLock = pxQueue->cRxLock;
2259:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		while( cRxLock > queueLOCKED_UNMODIFIED )
2261:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2262:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2263:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2265:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2266:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vTaskMissedYield();
2267:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2268:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2269:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2270:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2271:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2272:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2273:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				--cRxLock;
2274:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2275:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2276:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2277:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				break;
2278:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2279:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
ARM GAS  /tmp/ccY2tmJ9.s 			page 42


2280:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2281:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
2282:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2283:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
2284:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
2285:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2286:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2287:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
2288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
2289:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
2290:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2291:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
2292:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2293:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
2294:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2295:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdTRUE;
2296:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2297:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2298:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2299:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFALSE;
2300:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2301:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2302:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
2303:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2304:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
2305:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
2306:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2307:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2308:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueIsQueueEmptyFromISR( const QueueHandle_t xQueue )
2309:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
2310:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
2311:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
2312:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2313:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
2314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
2315:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2316:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xReturn = pdTRUE;
2317:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2318:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else
2319:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2320:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xReturn = pdFALSE;
2321:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2322:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2323:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
2324:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
2325:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2326:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2327:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
2328:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
  62              		.loc 1 2328 0
  63              		.cfi_startproc
  64              		@ args = 0, pretend = 0, frame = 0
  65              		@ frame_needed = 0, uses_anonymous_args = 0
  66              	.LVL5:
  67 0000 10B5     		push	{r4, lr}
  68              	.LCFI0:
  69              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccY2tmJ9.s 			page 43


  70              		.cfi_offset 4, -8
  71              		.cfi_offset 14, -4
  72 0002 0446     		mov	r4, r0
2329:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
2330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2331:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
  73              		.loc 1 2331 0
  74 0004 FFF7FEFF 		bl	vPortEnterCritical
  75              	.LVL6:
2332:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2333:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
  76              		.loc 1 2333 0
  77 0008 A26B     		ldr	r2, [r4, #56]
  78 000a E36B     		ldr	r3, [r4, #60]
  79 000c 9A42     		cmp	r2, r3
  80 000e 04D0     		beq	.L8
2334:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2335:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdTRUE;
2336:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2337:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2338:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2339:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFALSE;
  81              		.loc 1 2339 0
  82 0010 0024     		movs	r4, #0
  83              	.LVL7:
  84              	.L5:
2340:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2341:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2342:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
  85              		.loc 1 2342 0
  86 0012 FFF7FEFF 		bl	vPortExitCritical
  87              	.LVL8:
2343:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2344:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
2345:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
  88              		.loc 1 2345 0
  89 0016 2046     		mov	r0, r4
  90 0018 10BD     		pop	{r4, pc}
  91              	.LVL9:
  92              	.L8:
2335:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
  93              		.loc 1 2335 0
  94 001a 0124     		movs	r4, #1
  95              	.LVL10:
  96 001c F9E7     		b	.L5
  97              		.cfi_endproc
  98              	.LFE34:
 100              		.section	.text.prvIsQueueEmpty,"ax",%progbits
 101              		.align	1
 102              		.syntax unified
 103              		.thumb
 104              		.thumb_func
 105              		.fpu fpv5-sp-d16
 107              	prvIsQueueEmpty:
 108              	.LFB32:
2288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 109              		.loc 1 2288 0
ARM GAS  /tmp/ccY2tmJ9.s 			page 44


 110              		.cfi_startproc
 111              		@ args = 0, pretend = 0, frame = 0
 112              		@ frame_needed = 0, uses_anonymous_args = 0
 113              	.LVL11:
 114 0000 10B5     		push	{r4, lr}
 115              	.LCFI1:
 116              		.cfi_def_cfa_offset 8
 117              		.cfi_offset 4, -8
 118              		.cfi_offset 14, -4
 119 0002 0446     		mov	r4, r0
2291:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 120              		.loc 1 2291 0
 121 0004 FFF7FEFF 		bl	vPortEnterCritical
 122              	.LVL12:
2293:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 123              		.loc 1 2293 0
 124 0008 A36B     		ldr	r3, [r4, #56]
 125 000a 23B1     		cbz	r3, .L13
2299:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 126              		.loc 1 2299 0
 127 000c 0024     		movs	r4, #0
 128              	.LVL13:
 129              	.L10:
2302:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 130              		.loc 1 2302 0
 131 000e FFF7FEFF 		bl	vPortExitCritical
 132              	.LVL14:
2305:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 133              		.loc 1 2305 0
 134 0012 2046     		mov	r0, r4
 135 0014 10BD     		pop	{r4, pc}
 136              	.LVL15:
 137              	.L13:
2295:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 138              		.loc 1 2295 0
 139 0016 0124     		movs	r4, #1
 140              	.LVL16:
 141 0018 F9E7     		b	.L10
 142              		.cfi_endproc
 143              	.LFE32:
 145              		.section	.text.prvCopyDataToQueue,"ax",%progbits
 146              		.align	1
 147              		.syntax unified
 148              		.thumb
 149              		.thumb_func
 150              		.fpu fpv5-sp-d16
 152              	prvCopyDataToQueue:
 153              	.LFB29:
2071:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn = pdFALSE;
 154              		.loc 1 2071 0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
 157              		@ frame_needed = 0, uses_anonymous_args = 0
 158              	.LVL17:
 159 0000 70B5     		push	{r4, r5, r6, lr}
 160              	.LCFI2:
 161              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/ccY2tmJ9.s 			page 45


 162              		.cfi_offset 4, -16
 163              		.cfi_offset 5, -12
 164              		.cfi_offset 6, -8
 165              		.cfi_offset 14, -4
 166 0002 0446     		mov	r4, r0
 167 0004 1646     		mov	r6, r2
 168              	.LVL18:
2077:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 169              		.loc 1 2077 0
 170 0006 856B     		ldr	r5, [r0, #56]
 171              	.LVL19:
2079:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 172              		.loc 1 2079 0
 173 0008 026C     		ldr	r2, [r0, #64]
 174              	.LVL20:
 175 000a 5AB9     		cbnz	r2, .L15
2083:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 176              		.loc 1 2083 0
 177 000c 0368     		ldr	r3, [r0]
 178 000e 1BB1     		cbz	r3, .L24
2072:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxMessagesWaiting;
 179              		.loc 1 2072 0
 180 0010 0020     		movs	r0, #0
 181              	.LVL21:
 182              	.L16:
2143:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 183              		.loc 1 2143 0
 184 0012 0135     		adds	r5, r5, #1
 185              	.LVL22:
 186 0014 A563     		str	r5, [r4, #56]
2146:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 187              		.loc 1 2146 0
 188 0016 70BD     		pop	{r4, r5, r6, pc}
 189              	.LVL23:
 190              	.L24:
2086:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 191              		.loc 1 2086 0
 192 0018 8068     		ldr	r0, [r0, #8]
 193              	.LVL24:
 194 001a FFF7FEFF 		bl	xTaskPriorityDisinherit
 195              	.LVL25:
2087:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 196              		.loc 1 2087 0
 197 001e 0023     		movs	r3, #0
 198 0020 A360     		str	r3, [r4, #8]
 199 0022 F6E7     		b	.L16
 200              	.LVL26:
 201              	.L15:
2096:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 202              		.loc 1 2096 0
 203 0024 6EB9     		cbnz	r6, .L17
2098:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, esp
 204              		.loc 1 2098 0
 205 0026 4068     		ldr	r0, [r0, #4]
 206              	.LVL27:
 207 0028 FFF7FEFF 		bl	memcpy
 208              	.LVL28:
ARM GAS  /tmp/ccY2tmJ9.s 			page 46


2099:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as co
 209              		.loc 1 2099 0
 210 002c 226C     		ldr	r2, [r4, #64]
 211 002e 6368     		ldr	r3, [r4, #4]
 212 0030 1344     		add	r3, r3, r2
 213 0032 6360     		str	r3, [r4, #4]
2100:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 214              		.loc 1 2100 0
 215 0034 A268     		ldr	r2, [r4, #8]
 216 0036 9342     		cmp	r3, r2
 217 0038 19D3     		bcc	.L20
2102:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 218              		.loc 1 2102 0
 219 003a 2368     		ldr	r3, [r4]
 220 003c 6360     		str	r3, [r4, #4]
2072:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxMessagesWaiting;
 221              		.loc 1 2072 0
 222 003e 0020     		movs	r0, #0
 223 0040 E7E7     		b	.L16
 224              	.LVL29:
 225              	.L17:
2111:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 226              		.loc 1 2111 0
 227 0042 C068     		ldr	r0, [r0, #12]
 228              	.LVL30:
 229 0044 FFF7FEFF 		bl	memcpy
 230              	.LVL31:
2112:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as co
 231              		.loc 1 2112 0
 232 0048 226C     		ldr	r2, [r4, #64]
 233 004a 5242     		negs	r2, r2
 234 004c E368     		ldr	r3, [r4, #12]
 235 004e 1344     		add	r3, r3, r2
 236 0050 E360     		str	r3, [r4, #12]
2113:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 237              		.loc 1 2113 0
 238 0052 2168     		ldr	r1, [r4]
 239 0054 8B42     		cmp	r3, r1
 240 0056 02D2     		bcs	.L18
2115:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 241              		.loc 1 2115 0
 242 0058 A368     		ldr	r3, [r4, #8]
 243 005a 1A44     		add	r2, r2, r3
 244 005c E260     		str	r2, [r4, #12]
 245              	.L18:
2122:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 246              		.loc 1 2122 0
 247 005e 022E     		cmp	r6, #2
 248 0060 01D0     		beq	.L25
2072:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxMessagesWaiting;
 249              		.loc 1 2072 0
 250 0062 0020     		movs	r0, #0
 251 0064 D5E7     		b	.L16
 252              	.L25:
2124:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 253              		.loc 1 2124 0
 254 0066 25B1     		cbz	r5, .L22
ARM GAS  /tmp/ccY2tmJ9.s 			page 47


2130:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 255              		.loc 1 2130 0
 256 0068 013D     		subs	r5, r5, #1
 257              	.LVL32:
2072:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxMessagesWaiting;
 258              		.loc 1 2072 0
 259 006a 0020     		movs	r0, #0
 260 006c D1E7     		b	.L16
 261              	.L20:
 262 006e 0020     		movs	r0, #0
 263 0070 CFE7     		b	.L16
 264              	.L22:
 265 0072 0020     		movs	r0, #0
 266 0074 CDE7     		b	.L16
 267              		.cfi_endproc
 268              	.LFE29:
 270              		.section	.text.prvCopyDataFromQueue,"ax",%progbits
 271              		.align	1
 272              		.syntax unified
 273              		.thumb
 274              		.thumb_func
 275              		.fpu fpv5-sp-d16
 277              	prvCopyDataFromQueue:
 278              	.LFB30:
2150:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 279              		.loc 1 2150 0
 280              		.cfi_startproc
 281              		@ args = 0, pretend = 0, frame = 0
 282              		@ frame_needed = 0, uses_anonymous_args = 0
 283              	.LVL33:
2151:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 284              		.loc 1 2151 0
 285 0000 026C     		ldr	r2, [r0, #64]
 286 0002 72B1     		cbz	r2, .L30
2150:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 287              		.loc 1 2150 0
 288 0004 10B5     		push	{r4, lr}
 289              	.LCFI3:
 290              		.cfi_def_cfa_offset 8
 291              		.cfi_offset 4, -8
 292              		.cfi_offset 14, -4
2153:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justi
 293              		.loc 1 2153 0
 294 0006 C368     		ldr	r3, [r0, #12]
 295 0008 1344     		add	r3, r3, r2
 296 000a C360     		str	r3, [r0, #12]
2154:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 297              		.loc 1 2154 0
 298 000c 8468     		ldr	r4, [r0, #8]
 299 000e A342     		cmp	r3, r4
 300 0010 01D3     		bcc	.L28
2156:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 301              		.loc 1 2156 0
 302 0012 0368     		ldr	r3, [r0]
 303 0014 C360     		str	r3, [r0, #12]
 304              	.L28:
 305 0016 0C46     		mov	r4, r1
ARM GAS  /tmp/ccY2tmJ9.s 			page 48


2162:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 306              		.loc 1 2162 0
 307 0018 C168     		ldr	r1, [r0, #12]
 308              	.LVL34:
 309 001a 2046     		mov	r0, r4
 310              	.LVL35:
 311 001c FFF7FEFF 		bl	memcpy
 312              	.LVL36:
2164:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 313              		.loc 1 2164 0
 314 0020 10BD     		pop	{r4, pc}
 315              	.LVL37:
 316              	.L30:
 317              	.LCFI4:
 318              		.cfi_def_cfa_offset 0
 319              		.cfi_restore 4
 320              		.cfi_restore 14
 321 0022 7047     		bx	lr
 322              		.cfi_endproc
 323              	.LFE30:
 325              		.section	.text.prvUnlockQueue,"ax",%progbits
 326              		.align	1
 327              		.syntax unified
 328              		.thumb
 329              		.thumb_func
 330              		.fpu fpv5-sp-d16
 332              	prvUnlockQueue:
 333              	.LFB31:
2168:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED. */
 334              		.loc 1 2168 0
 335              		.cfi_startproc
 336              		@ args = 0, pretend = 0, frame = 0
 337              		@ frame_needed = 0, uses_anonymous_args = 0
 338              	.LVL38:
 339 0000 38B5     		push	{r3, r4, r5, lr}
 340              	.LCFI5:
 341              		.cfi_def_cfa_offset 16
 342              		.cfi_offset 3, -16
 343              		.cfi_offset 4, -12
 344              		.cfi_offset 5, -8
 345              		.cfi_offset 14, -4
 346 0002 0546     		mov	r5, r0
2175:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 347              		.loc 1 2175 0
 348 0004 FFF7FEFF 		bl	vPortEnterCritical
 349              	.LVL39:
 350              	.LBB116:
2177:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 351              		.loc 1 2177 0
 352 0008 95F84540 		ldrb	r4, [r5, #69]	@ zero_extendqisi2
 353 000c 64B2     		sxtb	r4, r4
 354              	.LVL40:
2180:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 355              		.loc 1 2180 0
 356 000e 03E0     		b	.L34
 357              	.L43:
2234:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
ARM GAS  /tmp/ccY2tmJ9.s 			page 49


 358              		.loc 1 2234 0
 359 0010 FFF7FEFF 		bl	vTaskMissedYield
 360              	.LVL41:
 361              	.L36:
2248:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 362              		.loc 1 2248 0
 363 0014 013C     		subs	r4, r4, #1
 364              	.LVL42:
 365 0016 64B2     		sxtb	r4, r4
 366              	.LVL43:
 367              	.L34:
2180:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 368              		.loc 1 2180 0
 369 0018 002C     		cmp	r4, #0
 370 001a 08DD     		ble	.L35
2228:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 371              		.loc 1 2228 0
 372 001c 6B6A     		ldr	r3, [r5, #36]
 373 001e 33B1     		cbz	r3, .L35
2230:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 374              		.loc 1 2230 0
 375 0020 05F12400 		add	r0, r5, #36
 376 0024 FFF7FEFF 		bl	xTaskRemoveFromEventList
 377              	.LVL44:
 378 0028 0028     		cmp	r0, #0
 379 002a F3D0     		beq	.L36
 380 002c F0E7     		b	.L43
 381              	.L35:
2251:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 382              		.loc 1 2251 0
 383 002e FF23     		movs	r3, #255
 384 0030 85F84530 		strb	r3, [r5, #69]
 385              	.LBE116:
2253:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 386              		.loc 1 2253 0
 387 0034 FFF7FEFF 		bl	vPortExitCritical
 388              	.LVL45:
2256:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 389              		.loc 1 2256 0
 390 0038 FFF7FEFF 		bl	vPortEnterCritical
 391              	.LVL46:
 392              	.LBB117:
2258:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 393              		.loc 1 2258 0
 394 003c 95F84440 		ldrb	r4, [r5, #68]	@ zero_extendqisi2
 395              	.LVL47:
 396 0040 64B2     		sxtb	r4, r4
 397              	.LVL48:
2260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 398              		.loc 1 2260 0
 399 0042 03E0     		b	.L38
 400              	.L44:
2266:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 401              		.loc 1 2266 0
 402 0044 FFF7FEFF 		bl	vTaskMissedYield
 403              	.LVL49:
 404              	.L40:
ARM GAS  /tmp/ccY2tmJ9.s 			page 50


2273:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 405              		.loc 1 2273 0
 406 0048 013C     		subs	r4, r4, #1
 407              	.LVL50:
 408 004a 64B2     		sxtb	r4, r4
 409              	.LVL51:
 410              	.L38:
2260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 411              		.loc 1 2260 0
 412 004c 002C     		cmp	r4, #0
 413 004e 08DD     		ble	.L39
2262:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 414              		.loc 1 2262 0
 415 0050 2B69     		ldr	r3, [r5, #16]
 416 0052 33B1     		cbz	r3, .L39
2264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 417              		.loc 1 2264 0
 418 0054 05F11000 		add	r0, r5, #16
 419 0058 FFF7FEFF 		bl	xTaskRemoveFromEventList
 420              	.LVL52:
 421 005c 0028     		cmp	r0, #0
 422 005e F3D0     		beq	.L40
 423 0060 F0E7     		b	.L44
 424              	.L39:
2281:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 425              		.loc 1 2281 0
 426 0062 FF23     		movs	r3, #255
 427 0064 85F84430 		strb	r3, [r5, #68]
 428              	.LBE117:
2283:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 429              		.loc 1 2283 0
 430 0068 FFF7FEFF 		bl	vPortExitCritical
 431              	.LVL53:
2284:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 432              		.loc 1 2284 0
 433 006c 38BD     		pop	{r3, r4, r5, pc}
 434              		.cfi_endproc
 435              	.LFE31:
 437              		.section	.text.xQueueGenericReset,"ax",%progbits
 438              		.align	1
 439              		.global	xQueueGenericReset
 440              		.syntax unified
 441              		.thumb
 442              		.thumb_func
 443              		.fpu fpv5-sp-d16
 445              	xQueueGenericReset:
 446              	.LFB5:
 256:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
 447              		.loc 1 256 0
 448              		.cfi_startproc
 449              		@ args = 0, pretend = 0, frame = 0
 450              		@ frame_needed = 0, uses_anonymous_args = 0
 451              	.LVL54:
 452 0000 38B5     		push	{r3, r4, r5, lr}
 453              	.LCFI6:
 454              		.cfi_def_cfa_offset 16
 455              		.cfi_offset 3, -16
ARM GAS  /tmp/ccY2tmJ9.s 			page 51


 456              		.cfi_offset 4, -12
 457              		.cfi_offset 5, -8
 458              		.cfi_offset 14, -4
 459              	.LVL55:
 259:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 460              		.loc 1 259 0
 461 0002 50B9     		cbnz	r0, .L46
 462              	.LBB118:
 463              	.LBB119:
 464              		.file 2 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h"
   1:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * FreeRTOS Kernel V10.2.1
   3:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  29:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #ifndef PORTMACRO_H
  30:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define PORTMACRO_H
  31:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  32:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #ifdef __cplusplus
  33:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** extern "C" {
  34:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #endif
  35:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  36:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------
  37:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * Port specific definitions.
  38:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  *
  39:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * given hardware and compiler.
  41:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  *
  42:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * These settings should not be altered.
  43:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  *-----------------------------------------------------------
  44:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  */
  45:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  46:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /* Type definitions. */
  47:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portCHAR		char
ARM GAS  /tmp/ccY2tmJ9.s 			page 52


  48:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portFLOAT		float
  49:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portDOUBLE		double
  50:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portLONG		long
  51:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portSHORT		short
  52:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portBASE_TYPE	long
  54:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  55:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** typedef long BaseType_t;
  57:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** typedef unsigned long UBaseType_t;
  58:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	typedef uint16_t TickType_t;
  61:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #else
  63:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	typedef uint32_t TickType_t;
  64:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  66:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	not need to be guarded with a critical section. */
  68:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #endif
  70:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
  71:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  72:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /* Architecture specifics. */
  73:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
  77:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  78:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /* Scheduler utilities. */
  79:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portYIELD() 															\
  80:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** {																				\
  81:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 																				\
  84:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	__asm volatile( "isb" );													\
  88:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** }
  89:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  90:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
  95:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  96:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /* Critical section management. */
  97:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** extern void vPortEnterCritical( void );
  98:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** extern void vPortExitCritical( void );
  99:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
ARM GAS  /tmp/ccY2tmJ9.s 			page 53


 105:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 106:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
 107:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 108:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** (which build with all the ports) will build. */
 111:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
 114:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 115:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /* Tickless idle/low power functionality. */
 116:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #endif
 120:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
 121:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 122:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /* Architecture specific optimisations. */
 123:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #endif
 126:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 127:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 129:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	/* Generic helper function. */
 130:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	{
 132:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	uint8_t ucReturn;
 133:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 134:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		return ucReturn;
 136:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	}
 137:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 138:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	/* Check the configuration. */
 139:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#endif
 142:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 143:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 147:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 149:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 151:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 153:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
 154:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 155:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #ifdef configASSERT
 156:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #endif
 159:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 160:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /* portNOP() is not required by this port. */
 161:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portNOP()
ARM GAS  /tmp/ccY2tmJ9.s 			page 54


 162:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 163:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portINLINE	__inline
 164:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 165:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #ifndef portFORCE_INLINE
 166:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #endif
 168:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 169:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 170:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** {
 171:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** uint32_t ulCurrentInterrupt;
 172:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** BaseType_t xReturn;
 173:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 174:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 175:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 176:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 177:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 178:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	{
 179:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		xReturn = pdFALSE;
 180:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	}
 181:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	else
 182:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	{
 183:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		xReturn = pdTRUE;
 184:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	}
 185:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 186:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	return xReturn;
 187:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** }
 188:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 189:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
 190:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 192:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** {
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** uint32_t ulNewBASEPRI;
 194:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	__asm volatile
 465              		.loc 2 195 0
 466              		.syntax unified
 467              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 468 0004 4FF05003 			mov r3, #80												
 469 0008 72B6     		cpsid i													
 470 000a 83F31188 		msr basepri, r3											
 471 000e BFF36F8F 		isb														
 472 0012 BFF34F8F 		dsb														
 473 0016 62B6     		cpsie i													
 474              	
 475              	@ 0 "" 2
 476              	.LVL56:
 477              		.thumb
 478              		.syntax unified
 479              	.L47:
 480 0018 FEE7     		b	.L47
 481              	.L46:
 482 001a 0446     		mov	r4, r0
 483 001c 0D46     		mov	r5, r1
 484              	.LBE119:
 485              	.LBE118:
 261:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 486              		.loc 1 261 0
ARM GAS  /tmp/ccY2tmJ9.s 			page 55


 487 001e FFF7FEFF 		bl	vPortEnterCritical
 488              	.LVL57:
 263:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 489              		.loc 1 263 0
 490 0022 2168     		ldr	r1, [r4]
 491 0024 E26B     		ldr	r2, [r4, #60]
 492 0026 236C     		ldr	r3, [r4, #64]
 493 0028 03FB0210 		mla	r0, r3, r2, r1
 494 002c A060     		str	r0, [r4, #8]
 264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo = pxQueue->pcHead;
 495              		.loc 1 264 0
 496 002e 0020     		movs	r0, #0
 497 0030 A063     		str	r0, [r4, #56]
 265:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSi
 498              		.loc 1 265 0
 499 0032 6160     		str	r1, [r4, #4]
 266:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
 500              		.loc 1 266 0
 501 0034 013A     		subs	r2, r2, #1
 502 0036 02FB0313 		mla	r3, r2, r3, r1
 503 003a E360     		str	r3, [r4, #12]
 267:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
 504              		.loc 1 267 0
 505 003c FF23     		movs	r3, #255
 506 003e 84F84430 		strb	r3, [r4, #68]
 268:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 507              		.loc 1 268 0
 508 0042 84F84530 		strb	r3, [r4, #69]
 270:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 509              		.loc 1 270 0
 510 0046 A5B9     		cbnz	r5, .L48
 277:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 511              		.loc 1 277 0
 512 0048 2369     		ldr	r3, [r4, #16]
 513 004a 1BB9     		cbnz	r3, .L51
 514              	.L49:
 300:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 515              		.loc 1 300 0
 516 004c FFF7FEFF 		bl	vPortExitCritical
 517              	.LVL58:
 305:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 518              		.loc 1 305 0
 519 0050 0120     		movs	r0, #1
 520 0052 38BD     		pop	{r3, r4, r5, pc}
 521              	.LVL59:
 522              	.L51:
 279:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 523              		.loc 1 279 0
 524 0054 04F11000 		add	r0, r4, #16
 525 0058 FFF7FEFF 		bl	xTaskRemoveFromEventList
 526              	.LVL60:
 527 005c 0028     		cmp	r0, #0
 528 005e F5D0     		beq	.L49
 281:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 529              		.loc 1 281 0
 530 0060 084B     		ldr	r3, .L52
 531 0062 4FF08052 		mov	r2, #268435456
ARM GAS  /tmp/ccY2tmJ9.s 			page 56


 532 0066 1A60     		str	r2, [r3]
 533              		.syntax unified
 534              	@ 281 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 535 0068 BFF34F8F 		dsb
 536              	@ 0 "" 2
 537              	@ 281 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 538 006c BFF36F8F 		isb
 539              	@ 0 "" 2
 540              		.thumb
 541              		.syntax unified
 542 0070 ECE7     		b	.L49
 543              	.L48:
 296:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 544              		.loc 1 296 0
 545 0072 04F11000 		add	r0, r4, #16
 546 0076 FFF7FEFF 		bl	vListInitialise
 547              	.LVL61:
 297:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 548              		.loc 1 297 0
 549 007a 04F12400 		add	r0, r4, #36
 550 007e FFF7FEFF 		bl	vListInitialise
 551              	.LVL62:
 552 0082 E3E7     		b	.L49
 553              	.L53:
 554              		.align	2
 555              	.L52:
 556 0084 04ED00E0 		.word	-536810236
 557              		.cfi_endproc
 558              	.LFE5:
 560              		.section	.text.prvInitialiseNewQueue,"ax",%progbits
 561              		.align	1
 562              		.syntax unified
 563              		.thumb
 564              		.thumb_func
 565              		.fpu fpv5-sp-d16
 567              	prvInitialiseNewQueue:
 568              	.LFB8:
 430:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Remove compiler warnings about unused parameters should
 569              		.loc 1 430 0
 570              		.cfi_startproc
 571              		@ args = 4, pretend = 0, frame = 0
 572              		@ frame_needed = 0, uses_anonymous_args = 0
 573              	.LVL63:
 574 0000 10B5     		push	{r4, lr}
 575              	.LCFI7:
 576              		.cfi_def_cfa_offset 8
 577              		.cfi_offset 4, -8
 578              		.cfi_offset 14, -4
 579 0002 029B     		ldr	r3, [sp, #8]
 580              	.LVL64:
 435:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 581              		.loc 1 435 0
 582 0004 0C46     		mov	r4, r1
 583 0006 39B1     		cbz	r1, .L58
 446:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 584              		.loc 1 446 0
 585 0008 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccY2tmJ9.s 			page 57


 586              	.L56:
 451:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	pxNewQueue->uxItemSize = uxItemSize;
 587              		.loc 1 451 0
 588 000a D863     		str	r0, [r3, #60]
 452:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 589              		.loc 1 452 0
 590 000c 1C64     		str	r4, [r3, #64]
 453:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 591              		.loc 1 453 0
 592 000e 0121     		movs	r1, #1
 593              	.LVL65:
 594 0010 1846     		mov	r0, r3
 595              	.LVL66:
 596 0012 FFF7FEFF 		bl	xQueueGenericReset
 597              	.LVL67:
 468:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 598              		.loc 1 468 0
 599 0016 10BD     		pop	{r4, pc}
 600              	.LVL68:
 601              	.L58:
 441:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 602              		.loc 1 441 0
 603 0018 1B60     		str	r3, [r3]
 604 001a F6E7     		b	.L56
 605              		.cfi_endproc
 606              	.LFE8:
 608              		.section	.text.xQueueGenericCreateStatic,"ax",%progbits
 609              		.align	1
 610              		.global	xQueueGenericCreateStatic
 611              		.syntax unified
 612              		.thumb
 613              		.thumb_func
 614              		.fpu fpv5-sp-d16
 616              	xQueueGenericCreateStatic:
 617              	.LFB6:
 311:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 618              		.loc 1 311 0
 619              		.cfi_startproc
 620              		@ args = 4, pretend = 0, frame = 8
 621              		@ frame_needed = 0, uses_anonymous_args = 0
 622              	.LVL69:
 314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 623              		.loc 1 314 0
 624 0000 50B9     		cbnz	r0, .L60
 625              	.LBB120:
 626              	.LBB121:
 627              		.loc 2 195 0
 628              		.syntax unified
 629              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 630 0002 4FF05003 			mov r3, #80												
 631 0006 72B6     		cpsid i													
 632 0008 83F31188 		msr basepri, r3											
 633 000c BFF36F8F 		isb														
 634 0010 BFF34F8F 		dsb														
 635 0014 62B6     		cpsie i													
 636              	
 637              	@ 0 "" 2
ARM GAS  /tmp/ccY2tmJ9.s 			page 58


 638              	.LVL70:
 639              		.thumb
 640              		.syntax unified
 641              	.L61:
 642 0016 FEE7     		b	.L61
 643              	.LVL71:
 644              	.L60:
 645              	.LBE121:
 646              	.LBE120:
 311:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 647              		.loc 1 311 0
 648 0018 10B5     		push	{r4, lr}
 649              	.LCFI8:
 650              		.cfi_def_cfa_offset 8
 651              		.cfi_offset 4, -8
 652              		.cfi_offset 14, -4
 653 001a 84B0     		sub	sp, sp, #16
 654              	.LCFI9:
 655              		.cfi_def_cfa_offset 24
 656 001c 0446     		mov	r4, r0
 318:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 657              		.loc 1 318 0
 658 001e 8BB1     		cbz	r3, .L72
 322:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 659              		.loc 1 322 0
 660 0020 081C     		adds	r0, r1, #0
 661              	.LVL72:
 662 0022 18BF     		it	ne
 663 0024 0120     		movne	r0, #1
 664 0026 002A     		cmp	r2, #0
 665 0028 08BF     		it	eq
 666 002a 0120     		moveq	r0, #1
 667 002c A8B9     		cbnz	r0, .L64
 668              	.LBB122:
 669              	.LBB123:
 670              		.loc 2 195 0
 671              		.syntax unified
 672              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 673 002e 4FF05003 			mov r3, #80												
 674 0032 72B6     		cpsid i													
 675 0034 83F31188 		msr basepri, r3											
 676 0038 BFF36F8F 		isb														
 677 003c BFF34F8F 		dsb														
 678 0040 62B6     		cpsie i													
 679              	
 680              	@ 0 "" 2
 681              	.LVL73:
 682              		.thumb
 683              		.syntax unified
 684              	.L65:
 685 0042 FEE7     		b	.L65
 686              	.LVL74:
 687              	.L72:
 688              	.LBE123:
 689              	.LBE122:
 690              	.LBB124:
 691              	.LBB125:
ARM GAS  /tmp/ccY2tmJ9.s 			page 59


 692              		.syntax unified
 693              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 694 0044 4FF05003 			mov r3, #80												
 695 0048 72B6     		cpsid i													
 696 004a 83F31188 		msr basepri, r3											
 697 004e BFF36F8F 		isb														
 698 0052 BFF34F8F 		dsb														
 699 0056 62B6     		cpsie i													
 700              	
 701              	@ 0 "" 2
 702              	.LVL75:
 703              		.thumb
 704              		.syntax unified
 705              	.L63:
 706 0058 FEE7     		b	.L63
 707              	.LVL76:
 708              	.L64:
 709              	.LBE125:
 710              	.LBE124:
 323:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 711              		.loc 1 323 0
 712 005a B1FA81F0 		clz	r0, r1
 713 005e 4009     		lsrs	r0, r0, #5
 714 0060 002A     		cmp	r2, #0
 715 0062 18BF     		it	ne
 716 0064 0120     		movne	r0, #1
 717 0066 50B9     		cbnz	r0, .L66
 718              	.LBB126:
 719              	.LBB127:
 720              		.loc 2 195 0
 721              		.syntax unified
 722              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 723 0068 4FF05003 			mov r3, #80												
 724 006c 72B6     		cpsid i													
 725 006e 83F31188 		msr basepri, r3											
 726 0072 BFF36F8F 		isb														
 727 0076 BFF34F8F 		dsb														
 728 007a 62B6     		cpsie i													
 729              	
 730              	@ 0 "" 2
 731              	.LVL77:
 732              		.thumb
 733              		.syntax unified
 734              	.L67:
 735 007c FEE7     		b	.L67
 736              	.LVL78:
 737              	.L66:
 738              	.LBE127:
 739              	.LBE126:
 740              	.LBB128:
 330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			configASSERT( xSize == sizeof( Queue_t ) );
 741              		.loc 1 330 0
 742 007e 4820     		movs	r0, #72
 743 0080 0390     		str	r0, [sp, #12]
 331:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 744              		.loc 1 331 0
 745 0082 0398     		ldr	r0, [sp, #12]
ARM GAS  /tmp/ccY2tmJ9.s 			page 60


 746 0084 4828     		cmp	r0, #72
 747 0086 0AD0     		beq	.L68
 748              	.LBB129:
 749              	.LBB130:
 750              		.loc 2 195 0
 751              		.syntax unified
 752              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 753 0088 4FF05003 			mov r3, #80												
 754 008c 72B6     		cpsid i													
 755 008e 83F31188 		msr basepri, r3											
 756 0092 BFF36F8F 		isb														
 757 0096 BFF34F8F 		dsb														
 758 009a 62B6     		cpsie i													
 759              	
 760              	@ 0 "" 2
 761              	.LVL79:
 762              		.thumb
 763              		.syntax unified
 764              	.L69:
 765 009c FEE7     		b	.L69
 766              	.LVL80:
 767              	.L68:
 768 009e 2046     		mov	r0, r4
 769 00a0 1C46     		mov	r4, r3
 770              	.LVL81:
 771              	.LBE130:
 772              	.LBE129:
 332:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 773              		.loc 1 332 0
 774 00a2 039B     		ldr	r3, [sp, #12]
 775              	.LVL82:
 776              	.LBE128:
 348:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 777              		.loc 1 348 0
 778 00a4 0123     		movs	r3, #1
 779 00a6 84F84630 		strb	r3, [r4, #70]
 352:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 780              		.loc 1 352 0
 781 00aa 0094     		str	r4, [sp]
 782 00ac 9DF81830 		ldrb	r3, [sp, #24]	@ zero_extendqisi2
 783 00b0 FFF7FEFF 		bl	prvInitialiseNewQueue
 784              	.LVL83:
 361:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 785              		.loc 1 361 0
 786 00b4 2046     		mov	r0, r4
 787 00b6 04B0     		add	sp, sp, #16
 788              	.LCFI10:
 789              		.cfi_def_cfa_offset 8
 790              		@ sp needed
 791 00b8 10BD     		pop	{r4, pc}
 792              		.cfi_endproc
 793              	.LFE6:
 795              		.section	.text.xQueueGenericCreate,"ax",%progbits
 796              		.align	1
 797              		.global	xQueueGenericCreate
 798              		.syntax unified
 799              		.thumb
ARM GAS  /tmp/ccY2tmJ9.s 			page 61


 800              		.thumb_func
 801              		.fpu fpv5-sp-d16
 803              	xQueueGenericCreate:
 804              	.LFB7:
 369:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 805              		.loc 1 369 0
 806              		.cfi_startproc
 807              		@ args = 0, pretend = 0, frame = 0
 808              		@ frame_needed = 0, uses_anonymous_args = 0
 809              	.LVL84:
 374:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 810              		.loc 1 374 0
 811 0000 50B9     		cbnz	r0, .L74
 812              	.LBB131:
 813              	.LBB132:
 814              		.loc 2 195 0
 815              		.syntax unified
 816              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 817 0002 4FF05003 			mov r3, #80												
 818 0006 72B6     		cpsid i													
 819 0008 83F31188 		msr basepri, r3											
 820 000c BFF36F8F 		isb														
 821 0010 BFF34F8F 		dsb														
 822 0014 62B6     		cpsie i													
 823              	
 824              	@ 0 "" 2
 825              	.LVL85:
 826              		.thumb
 827              		.syntax unified
 828              	.L75:
 829 0016 FEE7     		b	.L75
 830              	.L74:
 831              	.LBE132:
 832              	.LBE131:
 369:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 833              		.loc 1 369 0
 834 0018 F0B5     		push	{r4, r5, r6, r7, lr}
 835              	.LCFI11:
 836              		.cfi_def_cfa_offset 20
 837              		.cfi_offset 4, -20
 838              		.cfi_offset 5, -16
 839              		.cfi_offset 6, -12
 840              		.cfi_offset 7, -8
 841              		.cfi_offset 14, -4
 842 001a 83B0     		sub	sp, sp, #12
 843              	.LCFI12:
 844              		.cfi_def_cfa_offset 32
 845 001c 0646     		mov	r6, r0
 376:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 846              		.loc 1 376 0
 847 001e 11B1     		cbz	r1, .L78
 385:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 848              		.loc 1 385 0
 849 0020 01FB00F0 		mul	r0, r1, r0
 850              	.LVL86:
 851 0024 00E0     		b	.L76
 852              	.LVL87:
ARM GAS  /tmp/ccY2tmJ9.s 			page 62


 853              	.L78:
 379:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 854              		.loc 1 379 0
 855 0026 0020     		movs	r0, #0
 856              	.LVL88:
 857              	.L76:
 858 0028 1746     		mov	r7, r2
 859 002a 0C46     		mov	r4, r1
 860              	.LVL89:
 397:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 861              		.loc 1 397 0
 862 002c 4830     		adds	r0, r0, #72
 863              	.LVL90:
 864 002e FFF7FEFF 		bl	pvPortMalloc
 865              	.LVL91:
 399:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 866              		.loc 1 399 0
 867 0032 0546     		mov	r5, r0
 868 0034 50B1     		cbz	r0, .L73
 869              	.LVL92:
 411:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 870              		.loc 1 411 0
 871 0036 0023     		movs	r3, #0
 872 0038 80F84630 		strb	r3, [r0, #70]
 415:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 873              		.loc 1 415 0
 874 003c 0090     		str	r0, [sp]
 875 003e 3B46     		mov	r3, r7
 876 0040 00F14802 		add	r2, r0, #72
 877              	.LVL93:
 878 0044 2146     		mov	r1, r4
 879 0046 3046     		mov	r0, r6
 880              	.LVL94:
 881 0048 FFF7FEFF 		bl	prvInitialiseNewQueue
 882              	.LVL95:
 883              	.L73:
 424:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 884              		.loc 1 424 0
 885 004c 2846     		mov	r0, r5
 886 004e 03B0     		add	sp, sp, #12
 887              	.LCFI13:
 888              		.cfi_def_cfa_offset 20
 889              		@ sp needed
 890 0050 F0BD     		pop	{r4, r5, r6, r7, pc}
 891              		.cfi_endproc
 892              	.LFE7:
 894              		.section	.text.xQueueCreateCountingSemaphoreStatic,"ax",%progbits
 895              		.align	1
 896              		.global	xQueueCreateCountingSemaphoreStatic
 897              		.syntax unified
 898              		.thumb
 899              		.thumb_func
 900              		.fpu fpv5-sp-d16
 902              	xQueueCreateCountingSemaphoreStatic:
 903              	.LFB14:
 694:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xHandle;
 904              		.loc 1 694 0
ARM GAS  /tmp/ccY2tmJ9.s 			page 63


 905              		.cfi_startproc
 906              		@ args = 0, pretend = 0, frame = 0
 907              		@ frame_needed = 0, uses_anonymous_args = 0
 908              	.LVL96:
 697:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 909              		.loc 1 697 0
 910 0000 50B9     		cbnz	r0, .L82
 911              	.LBB133:
 912              	.LBB134:
 913              		.loc 2 195 0
 914              		.syntax unified
 915              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 916 0002 4FF05003 			mov r3, #80												
 917 0006 72B6     		cpsid i													
 918 0008 83F31188 		msr basepri, r3											
 919 000c BFF36F8F 		isb														
 920 0010 BFF34F8F 		dsb														
 921 0014 62B6     		cpsie i													
 922              	
 923              	@ 0 "" 2
 924              	.LVL97:
 925              		.thumb
 926              		.syntax unified
 927              	.L83:
 928 0016 FEE7     		b	.L83
 929              	.L82:
 930              	.LBE134:
 931              	.LBE133:
 698:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 932              		.loc 1 698 0
 933 0018 8842     		cmp	r0, r1
 934 001a 0AD2     		bcs	.L84
 935              	.LBB135:
 936              	.LBB136:
 937              		.loc 2 195 0
 938              		.syntax unified
 939              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 940 001c 4FF05003 			mov r3, #80												
 941 0020 72B6     		cpsid i													
 942 0022 83F31188 		msr basepri, r3											
 943 0026 BFF36F8F 		isb														
 944 002a BFF34F8F 		dsb														
 945 002e 62B6     		cpsie i													
 946              	
 947              	@ 0 "" 2
 948              	.LVL98:
 949              		.thumb
 950              		.syntax unified
 951              	.L85:
 952 0030 FEE7     		b	.L85
 953              	.L84:
 954              	.LBE136:
 955              	.LBE135:
 694:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xHandle;
 956              		.loc 1 694 0
 957 0032 10B5     		push	{r4, lr}
 958              	.LCFI14:
ARM GAS  /tmp/ccY2tmJ9.s 			page 64


 959              		.cfi_def_cfa_offset 8
 960              		.cfi_offset 4, -8
 961              		.cfi_offset 14, -4
 962 0034 82B0     		sub	sp, sp, #8
 963              	.LCFI15:
 964              		.cfi_def_cfa_offset 16
 965 0036 1346     		mov	r3, r2
 966 0038 0C46     		mov	r4, r1
 700:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 967              		.loc 1 700 0
 968 003a 0222     		movs	r2, #2
 969              	.LVL99:
 970 003c 0092     		str	r2, [sp]
 971 003e 0022     		movs	r2, #0
 972 0040 1146     		mov	r1, r2
 973              	.LVL100:
 974 0042 FFF7FEFF 		bl	xQueueGenericCreateStatic
 975              	.LVL101:
 702:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 976              		.loc 1 702 0
 977 0046 0346     		mov	r3, r0
 978 0048 00B1     		cbz	r0, .L81
 704:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 979              		.loc 1 704 0
 980 004a 8463     		str	r4, [r0, #56]
 981              	.L81:
 714:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 982              		.loc 1 714 0
 983 004c 1846     		mov	r0, r3
 984              	.LVL102:
 985 004e 02B0     		add	sp, sp, #8
 986              	.LCFI16:
 987              		.cfi_def_cfa_offset 8
 988              		@ sp needed
 989 0050 10BD     		pop	{r4, pc}
 990              		.cfi_endproc
 991              	.LFE14:
 993              		.section	.text.xQueueCreateCountingSemaphore,"ax",%progbits
 994              		.align	1
 995              		.global	xQueueCreateCountingSemaphore
 996              		.syntax unified
 997              		.thumb
 998              		.thumb_func
 999              		.fpu fpv5-sp-d16
 1001              	xQueueCreateCountingSemaphore:
 1002              	.LFB15:
 722:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xHandle;
 1003              		.loc 1 722 0
 1004              		.cfi_startproc
 1005              		@ args = 0, pretend = 0, frame = 0
 1006              		@ frame_needed = 0, uses_anonymous_args = 0
 1007              	.LVL103:
 725:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 1008              		.loc 1 725 0
 1009 0000 50B9     		cbnz	r0, .L90
 1010              	.LBB137:
 1011              	.LBB138:
ARM GAS  /tmp/ccY2tmJ9.s 			page 65


 1012              		.loc 2 195 0
 1013              		.syntax unified
 1014              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1015 0002 4FF05003 			mov r3, #80												
 1016 0006 72B6     		cpsid i													
 1017 0008 83F31188 		msr basepri, r3											
 1018 000c BFF36F8F 		isb														
 1019 0010 BFF34F8F 		dsb														
 1020 0014 62B6     		cpsie i													
 1021              	
 1022              	@ 0 "" 2
 1023              	.LVL104:
 1024              		.thumb
 1025              		.syntax unified
 1026              	.L91:
 1027 0016 FEE7     		b	.L91
 1028              	.L90:
 1029              	.LBE138:
 1030              	.LBE137:
 726:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1031              		.loc 1 726 0
 1032 0018 8842     		cmp	r0, r1
 1033 001a 0AD2     		bcs	.L92
 1034              	.LBB139:
 1035              	.LBB140:
 1036              		.loc 2 195 0
 1037              		.syntax unified
 1038              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1039 001c 4FF05003 			mov r3, #80												
 1040 0020 72B6     		cpsid i													
 1041 0022 83F31188 		msr basepri, r3											
 1042 0026 BFF36F8F 		isb														
 1043 002a BFF34F8F 		dsb														
 1044 002e 62B6     		cpsie i													
 1045              	
 1046              	@ 0 "" 2
 1047              	.LVL105:
 1048              		.thumb
 1049              		.syntax unified
 1050              	.L93:
 1051 0030 FEE7     		b	.L93
 1052              	.L92:
 1053              	.LBE140:
 1054              	.LBE139:
 722:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xHandle;
 1055              		.loc 1 722 0
 1056 0032 10B5     		push	{r4, lr}
 1057              	.LCFI17:
 1058              		.cfi_def_cfa_offset 8
 1059              		.cfi_offset 4, -8
 1060              		.cfi_offset 14, -4
 1061 0034 0C46     		mov	r4, r1
 728:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1062              		.loc 1 728 0
 1063 0036 0222     		movs	r2, #2
 1064 0038 0021     		movs	r1, #0
 1065              	.LVL106:
ARM GAS  /tmp/ccY2tmJ9.s 			page 66


 1066 003a FFF7FEFF 		bl	xQueueGenericCreate
 1067              	.LVL107:
 730:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1068              		.loc 1 730 0
 1069 003e 0346     		mov	r3, r0
 1070 0040 00B1     		cbz	r0, .L89
 732:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1071              		.loc 1 732 0
 1072 0042 8463     		str	r4, [r0, #56]
 1073              	.L89:
 742:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1074              		.loc 1 742 0
 1075 0044 1846     		mov	r0, r3
 1076              	.LVL108:
 1077 0046 10BD     		pop	{r4, pc}
 1078              		.cfi_endproc
 1079              	.LFE15:
 1081              		.section	.text.xQueueGenericSend,"ax",%progbits
 1082              		.align	1
 1083              		.global	xQueueGenericSend
 1084              		.syntax unified
 1085              		.thumb
 1086              		.thumb_func
 1087              		.fpu fpv5-sp-d16
 1089              	xQueueGenericSend:
 1090              	.LFB16:
 748:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;
 1091              		.loc 1 748 0
 1092              		.cfi_startproc
 1093              		@ args = 0, pretend = 0, frame = 16
 1094              		@ frame_needed = 0, uses_anonymous_args = 0
 1095              	.LVL109:
 1096 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1097              	.LCFI18:
 1098              		.cfi_def_cfa_offset 20
 1099              		.cfi_offset 4, -20
 1100              		.cfi_offset 5, -16
 1101              		.cfi_offset 6, -12
 1102              		.cfi_offset 7, -8
 1103              		.cfi_offset 14, -4
 1104 0002 85B0     		sub	sp, sp, #20
 1105              	.LCFI19:
 1106              		.cfi_def_cfa_offset 40
 1107 0004 0192     		str	r2, [sp, #4]
 1108              	.LVL110:
 753:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 1109              		.loc 1 753 0
 1110 0006 70B1     		cbz	r0, .L122
 1111 0008 0446     		mov	r4, r0
 754:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1112              		.loc 1 754 0
 1113 000a B9B9     		cbnz	r1, .L100
 754:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1114              		.loc 1 754 0 is_stmt 0 discriminator 2
 1115 000c 026C     		ldr	r2, [r0, #64]
 1116              	.LVL111:
 1117 000e AAB1     		cbz	r2, .L100
ARM GAS  /tmp/ccY2tmJ9.s 			page 67


 1118              	.LBB141:
 1119              	.LBB142:
 1120              		.loc 2 195 0 is_stmt 1
 1121              		.syntax unified
 1122              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1123 0010 4FF05003 			mov r3, #80												
 1124 0014 72B6     		cpsid i													
 1125 0016 83F31188 		msr basepri, r3											
 1126 001a BFF36F8F 		isb														
 1127 001e BFF34F8F 		dsb														
 1128 0022 62B6     		cpsie i													
 1129              	
 1130              	@ 0 "" 2
 1131              	.LVL112:
 1132              		.thumb
 1133              		.syntax unified
 1134              	.L101:
 1135 0024 FEE7     		b	.L101
 1136              	.LVL113:
 1137              	.L122:
 1138              	.LBE142:
 1139              	.LBE141:
 1140              	.LBB143:
 1141              	.LBB144:
 1142              		.syntax unified
 1143              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1144 0026 4FF05003 			mov r3, #80												
 1145 002a 72B6     		cpsid i													
 1146 002c 83F31188 		msr basepri, r3											
 1147 0030 BFF36F8F 		isb														
 1148 0034 BFF34F8F 		dsb														
 1149 0038 62B6     		cpsie i													
 1150              	
 1151              	@ 0 "" 2
 1152              	.LVL114:
 1153              		.thumb
 1154              		.syntax unified
 1155              	.L99:
 1156 003a FEE7     		b	.L99
 1157              	.LVL115:
 1158              	.L100:
 1159              	.LBE144:
 1160              	.LBE143:
 755:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1161              		.loc 1 755 0
 1162 003c 022B     		cmp	r3, #2
 1163 003e 0DD1     		bne	.L102
 755:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1164              		.loc 1 755 0 is_stmt 0 discriminator 2
 1165 0040 E26B     		ldr	r2, [r4, #60]
 1166 0042 012A     		cmp	r2, #1
 1167 0044 0AD0     		beq	.L102
 1168              	.LBB145:
 1169              	.LBB146:
 1170              		.loc 2 195 0 is_stmt 1
 1171              		.syntax unified
 1172              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
ARM GAS  /tmp/ccY2tmJ9.s 			page 68


 1173 0046 4FF05003 			mov r3, #80												
 1174 004a 72B6     		cpsid i													
 1175 004c 83F31188 		msr basepri, r3											
 1176 0050 BFF36F8F 		isb														
 1177 0054 BFF34F8F 		dsb														
 1178 0058 62B6     		cpsie i													
 1179              	
 1180              	@ 0 "" 2
 1181              	.LVL116:
 1182              		.thumb
 1183              		.syntax unified
 1184              	.L103:
 1185 005a FEE7     		b	.L103
 1186              	.LVL117:
 1187              	.L102:
 1188 005c 1E46     		mov	r6, r3
 1189 005e 0F46     		mov	r7, r1
 1190              	.LBE146:
 1191              	.LBE145:
 758:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 1192              		.loc 1 758 0
 1193 0060 FFF7FEFF 		bl	xTaskGetSchedulerState
 1194              	.LVL118:
 1195 0064 60B9     		cbnz	r0, .L119
 758:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 1196              		.loc 1 758 0 is_stmt 0 discriminator 2
 1197 0066 019B     		ldr	r3, [sp, #4]
 1198 0068 63B1     		cbz	r3, .L120
 1199              	.LBB147:
 1200              	.LBB148:
 1201              		.loc 2 195 0 is_stmt 1
 1202              		.syntax unified
 1203              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1204 006a 4FF05003 			mov r3, #80												
 1205 006e 72B6     		cpsid i													
 1206 0070 83F31188 		msr basepri, r3											
 1207 0074 BFF36F8F 		isb														
 1208 0078 BFF34F8F 		dsb														
 1209 007c 62B6     		cpsie i													
 1210              	
 1211              	@ 0 "" 2
 1212              	.LVL119:
 1213              		.thumb
 1214              		.syntax unified
 1215              	.L105:
 1216 007e FEE7     		b	.L105
 1217              	.L119:
 1218              	.LBE148:
 1219              	.LBE147:
 1220 0080 0025     		movs	r5, #0
 1221 0082 3AE0     		b	.L106
 1222              	.L120:
 1223 0084 0025     		movs	r5, #0
 1224 0086 38E0     		b	.L106
 1225              	.LVL120:
 1226              	.L107:
 840:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/ccY2tmJ9.s 			page 69


 1227              		.loc 1 840 0
 1228 0088 3246     		mov	r2, r6
 1229 008a 3946     		mov	r1, r7
 1230 008c 2046     		mov	r0, r4
 1231 008e FFF7FEFF 		bl	prvCopyDataToQueue
 1232              	.LVL121:
 844:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 1233              		.loc 1 844 0
 1234 0092 636A     		ldr	r3, [r4, #36]
 1235 0094 4BB9     		cbnz	r3, .L123
 859:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 1236              		.loc 1 859 0
 1237 0096 A8B1     		cbz	r0, .L110
 865:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 1238              		.loc 1 865 0
 1239 0098 3B4B     		ldr	r3, .L128
 1240 009a 4FF08052 		mov	r2, #268435456
 1241 009e 1A60     		str	r2, [r3]
 1242              		.syntax unified
 1243              	@ 865 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1244 00a0 BFF34F8F 		dsb
 1245              	@ 0 "" 2
 1246              	@ 865 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1247 00a4 BFF36F8F 		isb
 1248              	@ 0 "" 2
 1249              		.thumb
 1250              		.syntax unified
 1251 00a8 0CE0     		b	.L110
 1252              	.L123:
 846:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 1253              		.loc 1 846 0
 1254 00aa 04F12400 		add	r0, r4, #36
 1255              	.LVL122:
 1256 00ae FFF7FEFF 		bl	xTaskRemoveFromEventList
 1257              	.LVL123:
 1258 00b2 38B1     		cbz	r0, .L110
 852:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 1259              		.loc 1 852 0
 1260 00b4 344B     		ldr	r3, .L128
 1261 00b6 4FF08052 		mov	r2, #268435456
 1262 00ba 1A60     		str	r2, [r3]
 1263              		.syntax unified
 1264              	@ 852 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1265 00bc BFF34F8F 		dsb
 1266              	@ 0 "" 2
 1267              	@ 852 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1268 00c0 BFF36F8F 		isb
 1269              	@ 0 "" 2
 1270              		.thumb
 1271              		.syntax unified
 1272              	.L110:
 874:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
 1273              		.loc 1 874 0
 1274 00c4 FFF7FEFF 		bl	vPortExitCritical
 1275              	.LVL124:
 875:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 1276              		.loc 1 875 0
ARM GAS  /tmp/ccY2tmJ9.s 			page 70


 1277 00c8 0120     		movs	r0, #1
 1278              	.L97:
 954:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 1279              		.loc 1 954 0
 1280 00ca 05B0     		add	sp, sp, #20
 1281              	.LCFI20:
 1282              		.cfi_remember_state
 1283              		.cfi_def_cfa_offset 20
 1284              		@ sp needed
 1285 00cc F0BD     		pop	{r4, r5, r6, r7, pc}
 1286              	.LVL125:
 1287              	.L124:
 1288              	.LCFI21:
 1289              		.cfi_restore_state
 883:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1290              		.loc 1 883 0
 1291 00ce FFF7FEFF 		bl	vPortExitCritical
 1292              	.LVL126:
 888:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 1293              		.loc 1 888 0
 1294 00d2 0020     		movs	r0, #0
 1295 00d4 F9E7     		b	.L97
 1296              	.L125:
 894:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 1297              		.loc 1 894 0
 1298 00d6 02A8     		add	r0, sp, #8
 1299 00d8 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 1300              	.LVL127:
 895:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 1301              		.loc 1 895 0
 1302 00dc 0125     		movs	r5, #1
 1303 00de 19E0     		b	.L113
 1304              	.LVL128:
 1305              	.L126:
 910:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1306              		.loc 1 910 0 discriminator 1
 1307 00e0 0023     		movs	r3, #0
 1308 00e2 84F84430 		strb	r3, [r4, #68]
 1309 00e6 21E0     		b	.L114
 1310              	.L127:
 910:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1311              		.loc 1 910 0 is_stmt 0 discriminator 4
 1312 00e8 0023     		movs	r3, #0
 1313 00ea 84F84530 		strb	r3, [r4, #69]
 1314 00ee 23E0     		b	.L115
 1315              	.L117:
 940:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 1316              		.loc 1 940 0 is_stmt 1
 1317 00f0 2046     		mov	r0, r4
 1318 00f2 FFF7FEFF 		bl	prvUnlockQueue
 1319              	.LVL129:
 941:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 1320              		.loc 1 941 0
 1321 00f6 FFF7FEFF 		bl	xTaskResumeAll
 1322              	.LVL130:
 1323              	.L106:
 768:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
ARM GAS  /tmp/ccY2tmJ9.s 			page 71


 1324              		.loc 1 768 0
 1325 00fa FFF7FEFF 		bl	vPortEnterCritical
 1326              	.LVL131:
 774:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1327              		.loc 1 774 0
 1328 00fe A26B     		ldr	r2, [r4, #56]
 1329 0100 E36B     		ldr	r3, [r4, #60]
 1330 0102 9A42     		cmp	r2, r3
 1331 0104 C0D3     		bcc	.L107
 774:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1332              		.loc 1 774 0 is_stmt 0 discriminator 1
 1333 0106 022E     		cmp	r6, #2
 1334 0108 BED0     		beq	.L107
 879:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 1335              		.loc 1 879 0 is_stmt 1
 1336 010a 019B     		ldr	r3, [sp, #4]
 1337 010c 002B     		cmp	r3, #0
 1338 010e DED0     		beq	.L124
 890:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 1339              		.loc 1 890 0
 1340 0110 002D     		cmp	r5, #0
 1341 0112 E0D0     		beq	.L125
 1342              	.LVL132:
 1343              	.L113:
 904:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1344              		.loc 1 904 0
 1345 0114 FFF7FEFF 		bl	vPortExitCritical
 1346              	.LVL133:
 909:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 1347              		.loc 1 909 0
 1348 0118 FFF7FEFF 		bl	vTaskSuspendAll
 1349              	.LVL134:
 910:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1350              		.loc 1 910 0
 1351 011c FFF7FEFF 		bl	vPortEnterCritical
 1352              	.LVL135:
 1353 0120 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 1354 0124 5BB2     		sxtb	r3, r3
 1355 0126 B3F1FF3F 		cmp	r3, #-1
 1356 012a D9D0     		beq	.L126
 1357              	.L114:
 910:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1358              		.loc 1 910 0 is_stmt 0 discriminator 3
 1359 012c 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 1360 0130 5BB2     		sxtb	r3, r3
 1361 0132 B3F1FF3F 		cmp	r3, #-1
 1362 0136 D7D0     		beq	.L127
 1363              	.L115:
 910:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1364              		.loc 1 910 0 discriminator 6
 1365 0138 FFF7FEFF 		bl	vPortExitCritical
 1366              	.LVL136:
 913:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1367              		.loc 1 913 0 is_stmt 1 discriminator 6
 1368 013c 01A9     		add	r1, sp, #4
 1369 013e 02A8     		add	r0, sp, #8
 1370 0140 FFF7FEFF 		bl	xTaskCheckForTimeOut
ARM GAS  /tmp/ccY2tmJ9.s 			page 72


 1371              	.LVL137:
 1372 0144 C8B9     		cbnz	r0, .L116
 915:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1373              		.loc 1 915 0
 1374 0146 2046     		mov	r0, r4
 1375 0148 FFF7FEFF 		bl	prvIsQueueFull
 1376              	.LVL138:
 1377 014c 0028     		cmp	r0, #0
 1378 014e CFD0     		beq	.L117
 918:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1379              		.loc 1 918 0
 1380 0150 0199     		ldr	r1, [sp, #4]
 1381 0152 04F11000 		add	r0, r4, #16
 1382 0156 FFF7FEFF 		bl	vTaskPlaceOnEventList
 1383              	.LVL139:
 925:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1384              		.loc 1 925 0
 1385 015a 2046     		mov	r0, r4
 1386 015c FFF7FEFF 		bl	prvUnlockQueue
 1387              	.LVL140:
 932:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 1388              		.loc 1 932 0
 1389 0160 FFF7FEFF 		bl	xTaskResumeAll
 1390              	.LVL141:
 1391 0164 0028     		cmp	r0, #0
 1392 0166 C8D1     		bne	.L106
 934:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 1393              		.loc 1 934 0
 1394 0168 074B     		ldr	r3, .L128
 1395 016a 4FF08052 		mov	r2, #268435456
 1396 016e 1A60     		str	r2, [r3]
 1397              		.syntax unified
 1398              	@ 934 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1399 0170 BFF34F8F 		dsb
 1400              	@ 0 "" 2
 1401              	@ 934 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1402 0174 BFF36F8F 		isb
 1403              	@ 0 "" 2
 1404              		.thumb
 1405              		.syntax unified
 1406 0178 BFE7     		b	.L106
 1407              	.L116:
 947:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 1408              		.loc 1 947 0
 1409 017a 2046     		mov	r0, r4
 1410 017c FFF7FEFF 		bl	prvUnlockQueue
 1411              	.LVL142:
 948:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1412              		.loc 1 948 0
 1413 0180 FFF7FEFF 		bl	xTaskResumeAll
 1414              	.LVL143:
 951:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1415              		.loc 1 951 0
 1416 0184 0020     		movs	r0, #0
 1417 0186 A0E7     		b	.L97
 1418              	.L129:
 1419              		.align	2
ARM GAS  /tmp/ccY2tmJ9.s 			page 73


 1420              	.L128:
 1421 0188 04ED00E0 		.word	-536810236
 1422              		.cfi_endproc
 1423              	.LFE16:
 1425              		.section	.text.prvInitialiseMutex,"ax",%progbits
 1426              		.align	1
 1427              		.syntax unified
 1428              		.thumb
 1429              		.thumb_func
 1430              		.fpu fpv5-sp-d16
 1432              	prvInitialiseMutex:
 1433              	.LFB9:
 474:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 1434              		.loc 1 474 0
 1435              		.cfi_startproc
 1436              		@ args = 0, pretend = 0, frame = 0
 1437              		@ frame_needed = 0, uses_anonymous_args = 0
 1438              	.LVL144:
 475:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1439              		.loc 1 475 0
 1440 0000 48B1     		cbz	r0, .L133
 474:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 1441              		.loc 1 474 0
 1442 0002 08B5     		push	{r3, lr}
 1443              	.LCFI22:
 1444              		.cfi_def_cfa_offset 8
 1445              		.cfi_offset 3, -8
 1446              		.cfi_offset 14, -4
 481:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 1447              		.loc 1 481 0
 1448 0004 0021     		movs	r1, #0
 1449 0006 8160     		str	r1, [r0, #8]
 482:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1450              		.loc 1 482 0
 1451 0008 0160     		str	r1, [r0]
 485:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1452              		.loc 1 485 0
 1453 000a C160     		str	r1, [r0, #12]
 490:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1454              		.loc 1 490 0
 1455 000c 0B46     		mov	r3, r1
 1456 000e 0A46     		mov	r2, r1
 1457 0010 FFF7FEFF 		bl	xQueueGenericSend
 1458              	.LVL145:
 496:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1459              		.loc 1 496 0
 1460 0014 08BD     		pop	{r3, pc}
 1461              	.LVL146:
 1462              	.L133:
 1463              	.LCFI23:
 1464              		.cfi_def_cfa_offset 0
 1465              		.cfi_restore 3
 1466              		.cfi_restore 14
 1467 0016 7047     		bx	lr
 1468              		.cfi_endproc
 1469              	.LFE9:
 1471              		.section	.text.xQueueCreateMutex,"ax",%progbits
ARM GAS  /tmp/ccY2tmJ9.s 			page 74


 1472              		.align	1
 1473              		.global	xQueueCreateMutex
 1474              		.syntax unified
 1475              		.thumb
 1476              		.thumb_func
 1477              		.fpu fpv5-sp-d16
 1479              	xQueueCreateMutex:
 1480              	.LFB10:
 504:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xNewQueue;
 1481              		.loc 1 504 0
 1482              		.cfi_startproc
 1483              		@ args = 0, pretend = 0, frame = 0
 1484              		@ frame_needed = 0, uses_anonymous_args = 0
 1485              	.LVL147:
 1486 0000 10B5     		push	{r4, lr}
 1487              	.LCFI24:
 1488              		.cfi_def_cfa_offset 8
 1489              		.cfi_offset 4, -8
 1490              		.cfi_offset 14, -4
 1491              	.LVL148:
 508:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvInitialiseMutex( ( Queue_t * ) xNewQueue );
 1492              		.loc 1 508 0
 1493 0002 0246     		mov	r2, r0
 1494 0004 0021     		movs	r1, #0
 1495 0006 0120     		movs	r0, #1
 1496              	.LVL149:
 1497 0008 FFF7FEFF 		bl	xQueueGenericCreate
 1498              	.LVL150:
 1499 000c 0446     		mov	r4, r0
 1500              	.LVL151:
 509:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1501              		.loc 1 509 0
 1502 000e FFF7FEFF 		bl	prvInitialiseMutex
 1503              	.LVL152:
 512:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1504              		.loc 1 512 0
 1505 0012 2046     		mov	r0, r4
 1506 0014 10BD     		pop	{r4, pc}
 1507              		.cfi_endproc
 1508              	.LFE10:
 1510              		.section	.text.xQueueCreateMutexStatic,"ax",%progbits
 1511              		.align	1
 1512              		.global	xQueueCreateMutexStatic
 1513              		.syntax unified
 1514              		.thumb
 1515              		.thumb_func
 1516              		.fpu fpv5-sp-d16
 1518              	xQueueCreateMutexStatic:
 1519              	.LFB11:
 520:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xNewQueue;
 1520              		.loc 1 520 0
 1521              		.cfi_startproc
 1522              		@ args = 0, pretend = 0, frame = 0
 1523              		@ frame_needed = 0, uses_anonymous_args = 0
 1524              	.LVL153:
 1525 0000 10B5     		push	{r4, lr}
 1526              	.LCFI25:
ARM GAS  /tmp/ccY2tmJ9.s 			page 75


 1527              		.cfi_def_cfa_offset 8
 1528              		.cfi_offset 4, -8
 1529              		.cfi_offset 14, -4
 1530 0002 82B0     		sub	sp, sp, #8
 1531              	.LCFI26:
 1532              		.cfi_def_cfa_offset 16
 1533              	.LVL154:
 528:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvInitialiseMutex( ( Queue_t * ) xNewQueue );
 1534              		.loc 1 528 0
 1535 0004 0090     		str	r0, [sp]
 1536 0006 0B46     		mov	r3, r1
 1537 0008 0022     		movs	r2, #0
 1538 000a 1146     		mov	r1, r2
 1539              	.LVL155:
 1540 000c 0120     		movs	r0, #1
 1541              	.LVL156:
 1542 000e FFF7FEFF 		bl	xQueueGenericCreateStatic
 1543              	.LVL157:
 1544 0012 0446     		mov	r4, r0
 1545              	.LVL158:
 529:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1546              		.loc 1 529 0
 1547 0014 FFF7FEFF 		bl	prvInitialiseMutex
 1548              	.LVL159:
 532:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1549              		.loc 1 532 0
 1550 0018 2046     		mov	r0, r4
 1551 001a 02B0     		add	sp, sp, #8
 1552              	.LCFI27:
 1553              		.cfi_def_cfa_offset 8
 1554              		@ sp needed
 1555 001c 10BD     		pop	{r4, pc}
 1556              		.cfi_endproc
 1557              	.LFE11:
 1559              		.section	.text.xQueueGiveMutexRecursive,"ax",%progbits
 1560              		.align	1
 1561              		.global	xQueueGiveMutexRecursive
 1562              		.syntax unified
 1563              		.thumb
 1564              		.thumb_func
 1565              		.fpu fpv5-sp-d16
 1567              	xQueueGiveMutexRecursive:
 1568              	.LFB12:
 597:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
 1569              		.loc 1 597 0
 1570              		.cfi_startproc
 1571              		@ args = 0, pretend = 0, frame = 0
 1572              		@ frame_needed = 0, uses_anonymous_args = 0
 1573              	.LVL160:
 1574 0000 38B5     		push	{r3, r4, r5, lr}
 1575              	.LCFI28:
 1576              		.cfi_def_cfa_offset 16
 1577              		.cfi_offset 3, -16
 1578              		.cfi_offset 4, -12
 1579              		.cfi_offset 5, -8
 1580              		.cfi_offset 14, -4
 1581              	.LVL161:
ARM GAS  /tmp/ccY2tmJ9.s 			page 76


 601:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1582              		.loc 1 601 0
 1583 0002 50B9     		cbnz	r0, .L141
 1584              	.LBB149:
 1585              	.LBB150:
 1586              		.loc 2 195 0
 1587              		.syntax unified
 1588              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1589 0004 4FF05003 			mov r3, #80												
 1590 0008 72B6     		cpsid i													
 1591 000a 83F31188 		msr basepri, r3											
 1592 000e BFF36F8F 		isb														
 1593 0012 BFF34F8F 		dsb														
 1594 0016 62B6     		cpsie i													
 1595              	
 1596              	@ 0 "" 2
 1597              	.LVL162:
 1598              		.thumb
 1599              		.syntax unified
 1600              	.L142:
 1601 0018 FEE7     		b	.L142
 1602              	.L141:
 1603 001a 0446     		mov	r4, r0
 1604              	.LBE150:
 1605              	.LBE149:
 609:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1606              		.loc 1 609 0
 1607 001c 8568     		ldr	r5, [r0, #8]
 1608 001e FFF7FEFF 		bl	xTaskGetCurrentTaskHandle
 1609              	.LVL163:
 1610 0022 8542     		cmp	r5, r0
 1611 0024 01D0     		beq	.L147
 638:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1612              		.loc 1 638 0
 1613 0026 0020     		movs	r0, #0
 1614              	.L140:
 644:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1615              		.loc 1 644 0
 1616 0028 38BD     		pop	{r3, r4, r5, pc}
 1617              	.LVL164:
 1618              	.L147:
 618:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1619              		.loc 1 618 0
 1620 002a E368     		ldr	r3, [r4, #12]
 1621 002c 013B     		subs	r3, r3, #1
 1622 002e E360     		str	r3, [r4, #12]
 621:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1623              		.loc 1 621 0
 1624 0030 33B9     		cbnz	r3, .L145
 625:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 1625              		.loc 1 625 0
 1626 0032 1A46     		mov	r2, r3
 1627 0034 1946     		mov	r1, r3
 1628 0036 2046     		mov	r0, r4
 1629 0038 FFF7FEFF 		bl	xQueueGenericSend
 1630              	.LVL165:
 632:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
ARM GAS  /tmp/ccY2tmJ9.s 			page 77


 1631              		.loc 1 632 0
 1632 003c 0120     		movs	r0, #1
 1633 003e F3E7     		b	.L140
 1634              	.L145:
 1635 0040 0120     		movs	r0, #1
 1636              	.LVL166:
 643:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 1637              		.loc 1 643 0
 1638 0042 F1E7     		b	.L140
 1639              		.cfi_endproc
 1640              	.LFE12:
 1642              		.section	.text.xQueueGenericSendFromISR,"ax",%progbits
 1643              		.align	1
 1644              		.global	xQueueGenericSendFromISR
 1645              		.syntax unified
 1646              		.thumb
 1647              		.thumb_func
 1648              		.fpu fpv5-sp-d16
 1650              	xQueueGenericSendFromISR:
 1651              	.LFB17:
 958:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 1652              		.loc 1 958 0
 1653              		.cfi_startproc
 1654              		@ args = 0, pretend = 0, frame = 0
 1655              		@ frame_needed = 0, uses_anonymous_args = 0
 1656              	.LVL167:
 1657 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 1658              	.LCFI29:
 1659              		.cfi_def_cfa_offset 32
 1660              		.cfi_offset 3, -32
 1661              		.cfi_offset 4, -28
 1662              		.cfi_offset 5, -24
 1663              		.cfi_offset 6, -20
 1664              		.cfi_offset 7, -16
 1665              		.cfi_offset 8, -12
 1666              		.cfi_offset 9, -8
 1667              		.cfi_offset 14, -4
 1668              	.LVL168:
 963:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 1669              		.loc 1 963 0
 1670 0004 70B1     		cbz	r0, .L163
 1671 0006 0446     		mov	r4, r0
 964:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1672              		.loc 1 964 0
 1673 0008 B9B9     		cbnz	r1, .L151
 964:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1674              		.loc 1 964 0 is_stmt 0 discriminator 2
 1675 000a 006C     		ldr	r0, [r0, #64]
 1676              	.LVL169:
 1677 000c A8B1     		cbz	r0, .L151
 1678              	.LBB151:
 1679              	.LBB152:
 1680              		.loc 2 195 0 is_stmt 1
 1681              		.syntax unified
 1682              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1683 000e 4FF05003 			mov r3, #80												
 1684 0012 72B6     		cpsid i													
ARM GAS  /tmp/ccY2tmJ9.s 			page 78


 1685 0014 83F31188 		msr basepri, r3											
 1686 0018 BFF36F8F 		isb														
 1687 001c BFF34F8F 		dsb														
 1688 0020 62B6     		cpsie i													
 1689              	
 1690              	@ 0 "" 2
 1691              	.LVL170:
 1692              		.thumb
 1693              		.syntax unified
 1694              	.L152:
 1695 0022 FEE7     		b	.L152
 1696              	.LVL171:
 1697              	.L163:
 1698              	.LBE152:
 1699              	.LBE151:
 1700              	.LBB153:
 1701              	.LBB154:
 1702              		.syntax unified
 1703              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1704 0024 4FF05003 			mov r3, #80												
 1705 0028 72B6     		cpsid i													
 1706 002a 83F31188 		msr basepri, r3											
 1707 002e BFF36F8F 		isb														
 1708 0032 BFF34F8F 		dsb														
 1709 0036 62B6     		cpsie i													
 1710              	
 1711              	@ 0 "" 2
 1712              	.LVL172:
 1713              		.thumb
 1714              		.syntax unified
 1715              	.L150:
 1716 0038 FEE7     		b	.L150
 1717              	.LVL173:
 1718              	.L151:
 1719              	.LBE154:
 1720              	.LBE153:
 965:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1721              		.loc 1 965 0
 1722 003a 022B     		cmp	r3, #2
 1723 003c 0DD1     		bne	.L153
 965:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1724              		.loc 1 965 0 is_stmt 0 discriminator 2
 1725 003e E06B     		ldr	r0, [r4, #60]
 1726 0040 0128     		cmp	r0, #1
 1727 0042 0AD0     		beq	.L153
 1728              	.LBB155:
 1729              	.LBB156:
 1730              		.loc 2 195 0 is_stmt 1
 1731              		.syntax unified
 1732              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1733 0044 4FF05003 			mov r3, #80												
 1734 0048 72B6     		cpsid i													
 1735 004a 83F31188 		msr basepri, r3											
 1736 004e BFF36F8F 		isb														
 1737 0052 BFF34F8F 		dsb														
 1738 0056 62B6     		cpsie i													
 1739              	
ARM GAS  /tmp/ccY2tmJ9.s 			page 79


 1740              	@ 0 "" 2
 1741              	.LVL174:
 1742              		.thumb
 1743              		.syntax unified
 1744              	.L154:
 1745 0058 FEE7     		b	.L154
 1746              	.LVL175:
 1747              	.L153:
 1748 005a 1F46     		mov	r7, r3
 1749 005c 9046     		mov	r8, r2
 1750 005e 8946     		mov	r9, r1
 1751              	.LBE156:
 1752              	.LBE155:
 981:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1753              		.loc 1 981 0
 1754 0060 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1755              	.LVL176:
 1756              	.LBB157:
 1757              	.LBB158:
 196:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 197:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		"	mov %0, %1												\n"	\
 198:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		"	cpsid i													\n" \
 199:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		"	msr basepri, %0											\n" \
 200:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		"	isb														\n" \
 201:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		"	dsb														\n" \
 202:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		"	cpsie i													\n" \
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 204:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	);
 205:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** }
 206:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 207:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
 208:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 209:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 210:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** {
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 212:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 213:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	__asm volatile
 1758              		.loc 2 213 0
 1759              		.syntax unified
 1760              	@ 213 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1761 0064 EFF31186 			mrs r6, basepri											
 1762 0068 4FF05003 		mov r3, #80												
 1763 006c 72B6     		cpsid i													
 1764 006e 83F31188 		msr basepri, r3											
 1765 0072 BFF36F8F 		isb														
 1766 0076 BFF34F8F 		dsb														
 1767 007a 62B6     		cpsie i													
 1768              	
 1769              	@ 0 "" 2
 1770              		.thumb
 1771              		.syntax unified
 1772              	.LBE158:
 1773              	.LBE157:
 990:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1774              		.loc 1 990 0
 1775 007c A26B     		ldr	r2, [r4, #56]
 1776 007e E36B     		ldr	r3, [r4, #60]
ARM GAS  /tmp/ccY2tmJ9.s 			page 80


 1777 0080 9A42     		cmp	r2, r3
 1778 0082 03D3     		bcc	.L155
 990:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1779              		.loc 1 990 0 is_stmt 0 discriminator 1
 1780 0084 022F     		cmp	r7, #2
 1781 0086 01D0     		beq	.L155
1099:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1782              		.loc 1 1099 0 is_stmt 1
 1783 0088 0020     		movs	r0, #0
 1784 008a 0FE0     		b	.L156
 1785              	.L155:
 1786              	.LBB159:
 992:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1787              		.loc 1 992 0
 1788 008c 94F84550 		ldrb	r5, [r4, #69]	@ zero_extendqisi2
 1789 0090 6DB2     		sxtb	r5, r5
 1790              	.LVL177:
1001:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1791              		.loc 1 1001 0
 1792 0092 3A46     		mov	r2, r7
 1793 0094 4946     		mov	r1, r9
 1794 0096 2046     		mov	r0, r4
 1795 0098 FFF7FEFF 		bl	prvCopyDataToQueue
 1796              	.LVL178:
1005:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1797              		.loc 1 1005 0
 1798 009c B5F1FF3F 		cmp	r5, #-1
 1799 00a0 08D0     		beq	.L164
1091:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 1800              		.loc 1 1091 0
 1801 00a2 6B1C     		adds	r3, r5, #1
 1802 00a4 5BB2     		sxtb	r3, r3
 1803 00a6 84F84530 		strb	r3, [r4, #69]
1094:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1804              		.loc 1 1094 0
 1805 00aa 0120     		movs	r0, #1
 1806              	.LVL179:
 1807              	.L156:
 1808              	.LBE159:
 1809              	.LBB160:
 1810              	.LBB161:
 214:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 215:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		"	mrs %0, basepri											\n" \
 216:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		"	mov %1, %2												\n"	\
 217:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		"	cpsid i													\n" \
 218:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		"	msr basepri, %1											\n" \
 219:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		"	isb														\n" \
 220:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		"	dsb														\n" \
 221:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		"	cpsie i													\n" \
 222:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		:"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	);
 224:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 225:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	/* This return will not be reached but is necessary to prevent compiler
 226:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	warnings. */
 227:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	return ulOriginalBASEPRI;
 228:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** }
 229:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
ARM GAS  /tmp/ccY2tmJ9.s 			page 81


 230:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 231:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 232:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** {
 233:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	__asm volatile
 1811              		.loc 2 233 0
 1812              		.syntax unified
 1813              	@ 233 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1814 00ac 86F31188 			msr basepri, r6	
 1815              	@ 0 "" 2
 1816              	.LVL180:
 1817              		.thumb
 1818              		.syntax unified
 1819              	.LBE161:
 1820              	.LBE160:
1105:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 1821              		.loc 1 1105 0
 1822 00b0 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1823              	.LVL181:
 1824              	.L164:
 1825              	.LBB162:
1060:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 1826              		.loc 1 1060 0
 1827 00b4 636A     		ldr	r3, [r4, #36]
 1828 00b6 5BB1     		cbz	r3, .L159
1062:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 1829              		.loc 1 1062 0
 1830 00b8 04F12400 		add	r0, r4, #36
 1831 00bc FFF7FEFF 		bl	xTaskRemoveFromEventList
 1832              	.LVL182:
 1833 00c0 40B1     		cbz	r0, .L160
1066:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 1834              		.loc 1 1066 0
 1835 00c2 B8F1000F 		cmp	r8, #0
 1836 00c6 07D0     		beq	.L161
1068:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 1837              		.loc 1 1068 0
 1838 00c8 0120     		movs	r0, #1
 1839 00ca C8F80000 		str	r0, [r8]
 1840 00ce EDE7     		b	.L156
 1841              	.L159:
1094:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1842              		.loc 1 1094 0
 1843 00d0 0120     		movs	r0, #1
 1844 00d2 EBE7     		b	.L156
 1845              	.L160:
 1846 00d4 0120     		movs	r0, #1
 1847 00d6 E9E7     		b	.L156
 1848              	.L161:
 1849 00d8 0120     		movs	r0, #1
 1850 00da E7E7     		b	.L156
 1851              	.LBE162:
 1852              		.cfi_endproc
 1853              	.LFE17:
 1855              		.section	.text.xQueueGiveFromISR,"ax",%progbits
 1856              		.align	1
 1857              		.global	xQueueGiveFromISR
 1858              		.syntax unified
ARM GAS  /tmp/ccY2tmJ9.s 			page 82


 1859              		.thumb
 1860              		.thumb_func
 1861              		.fpu fpv5-sp-d16
 1863              	xQueueGiveFromISR:
 1864              	.LFB18:
1109:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 1865              		.loc 1 1109 0
 1866              		.cfi_startproc
 1867              		@ args = 0, pretend = 0, frame = 0
 1868              		@ frame_needed = 0, uses_anonymous_args = 0
 1869              	.LVL183:
1120:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1870              		.loc 1 1120 0
 1871 0000 70B1     		cbz	r0, .L180
1109:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 1872              		.loc 1 1109 0
 1873 0002 70B5     		push	{r4, r5, r6, lr}
 1874              	.LCFI30:
 1875              		.cfi_def_cfa_offset 16
 1876              		.cfi_offset 4, -16
 1877              		.cfi_offset 5, -12
 1878              		.cfi_offset 6, -8
 1879              		.cfi_offset 14, -4
 1880 0004 0446     		mov	r4, r0
1124:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1881              		.loc 1 1124 0
 1882 0006 036C     		ldr	r3, [r0, #64]
 1883 0008 ABB1     		cbz	r3, .L168
 1884              	.LBB163:
 1885              	.LBB164:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 1886              		.loc 2 195 0
 1887              		.syntax unified
 1888              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1889 000a 4FF05003 			mov r3, #80												
 1890 000e 72B6     		cpsid i													
 1891 0010 83F31188 		msr basepri, r3											
 1892 0014 BFF36F8F 		isb														
 1893 0018 BFF34F8F 		dsb														
 1894 001c 62B6     		cpsie i													
 1895              	
 1896              	@ 0 "" 2
 1897              	.LVL184:
 1898              		.thumb
 1899              		.syntax unified
 1900              	.L169:
 1901 001e FEE7     		b	.L169
 1902              	.L180:
 1903              	.LCFI31:
 1904              		.cfi_def_cfa_offset 0
 1905              		.cfi_restore 4
 1906              		.cfi_restore 5
 1907              		.cfi_restore 6
 1908              		.cfi_restore 14
 1909              	.LBE164:
 1910              	.LBE163:
 1911              	.LBB165:
ARM GAS  /tmp/ccY2tmJ9.s 			page 83


 1912              	.LBB166:
 1913              		.syntax unified
 1914              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1915 0020 4FF05003 			mov r3, #80												
 1916 0024 72B6     		cpsid i													
 1917 0026 83F31188 		msr basepri, r3											
 1918 002a BFF36F8F 		isb														
 1919 002e BFF34F8F 		dsb														
 1920 0032 62B6     		cpsie i													
 1921              	
 1922              	@ 0 "" 2
 1923              	.LVL185:
 1924              		.thumb
 1925              		.syntax unified
 1926              	.L167:
 1927 0034 FEE7     		b	.L167
 1928              	.L168:
 1929              	.LCFI32:
 1930              		.cfi_def_cfa_offset 16
 1931              		.cfi_offset 4, -16
 1932              		.cfi_offset 5, -12
 1933              		.cfi_offset 6, -8
 1934              		.cfi_offset 14, -4
 1935              	.LBE166:
 1936              	.LBE165:
1129:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1937              		.loc 1 1129 0
 1938 0036 0368     		ldr	r3, [r0]
 1939 0038 3BB3     		cbz	r3, .L181
 1940              	.L170:
 1941 003a 0E46     		mov	r6, r1
1145:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1942              		.loc 1 1145 0
 1943 003c FFF7FEFF 		bl	vPortValidateInterruptPriority
 1944              	.LVL186:
 1945              	.LBB167:
 1946              	.LBB168:
 213:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 1947              		.loc 2 213 0
 1948              		.syntax unified
 1949              	@ 213 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1950 0040 EFF31185 			mrs r5, basepri											
 1951 0044 4FF05003 		mov r3, #80												
 1952 0048 72B6     		cpsid i													
 1953 004a 83F31188 		msr basepri, r3											
 1954 004e BFF36F8F 		isb														
 1955 0052 BFF34F8F 		dsb														
 1956 0056 62B6     		cpsie i													
 1957              	
 1958              	@ 0 "" 2
 1959              		.thumb
 1960              		.syntax unified
 1961              	.LBE168:
 1962              	.LBE167:
 1963              	.LBB169:
1149:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1964              		.loc 1 1149 0
ARM GAS  /tmp/ccY2tmJ9.s 			page 84


 1965 0058 A26B     		ldr	r2, [r4, #56]
 1966              	.LVL187:
1154:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1967              		.loc 1 1154 0
 1968 005a E36B     		ldr	r3, [r4, #60]
 1969 005c 9342     		cmp	r3, r2
 1970 005e 28D9     		bls	.L174
 1971              	.LBB170:
1156:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1972              		.loc 1 1156 0
 1973 0060 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 1974 0064 5BB2     		sxtb	r3, r3
 1975              	.LVL188:
1166:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1976              		.loc 1 1166 0
 1977 0066 0132     		adds	r2, r2, #1
 1978              	.LVL189:
 1979 0068 A263     		str	r2, [r4, #56]
1170:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1980              		.loc 1 1170 0
 1981 006a B3F1FF3F 		cmp	r3, #-1
 1982 006e 1AD1     		bne	.L173
1225:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 1983              		.loc 1 1225 0
 1984 0070 636A     		ldr	r3, [r4, #36]
 1985              	.LVL190:
 1986 0072 03B3     		cbz	r3, .L175
1227:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 1987              		.loc 1 1227 0
 1988 0074 04F12400 		add	r0, r4, #36
 1989 0078 FFF7FEFF 		bl	xTaskRemoveFromEventList
 1990              	.LVL191:
 1991 007c E8B1     		cbz	r0, .L176
1231:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 1992              		.loc 1 1231 0
 1993 007e F6B1     		cbz	r6, .L177
1233:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 1994              		.loc 1 1233 0
 1995 0080 0120     		movs	r0, #1
 1996 0082 3060     		str	r0, [r6]
 1997              	.L172:
 1998              	.LVL192:
 1999              	.LBE170:
 2000              	.LBE169:
 2001              	.LBB173:
 2002              	.LBB174:
 2003              		.loc 2 233 0
 2004              		.syntax unified
 2005              	@ 233 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 2006 0084 85F31188 			msr basepri, r5	
 2007              	@ 0 "" 2
 2008              	.LVL193:
 2009              		.thumb
 2010              		.syntax unified
 2011              	.LBE174:
 2012              	.LBE173:
1270:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
ARM GAS  /tmp/ccY2tmJ9.s 			page 85


 2013              		.loc 1 1270 0
 2014 0088 70BD     		pop	{r4, r5, r6, pc}
 2015              	.LVL194:
 2016              	.L181:
1129:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2017              		.loc 1 1129 0 discriminator 2
 2018 008a 8368     		ldr	r3, [r0, #8]
 2019 008c 002B     		cmp	r3, #0
 2020 008e D4D0     		beq	.L170
 2021              	.LBB175:
 2022              	.LBB176:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 2023              		.loc 2 195 0
 2024              		.syntax unified
 2025              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 2026 0090 4FF05003 			mov r3, #80												
 2027 0094 72B6     		cpsid i													
 2028 0096 83F31188 		msr basepri, r3											
 2029 009a BFF36F8F 		isb														
 2030 009e BFF34F8F 		dsb														
 2031 00a2 62B6     		cpsie i													
 2032              	
 2033              	@ 0 "" 2
 2034              	.LVL195:
 2035              		.thumb
 2036              		.syntax unified
 2037              	.L171:
 2038 00a4 FEE7     		b	.L171
 2039              	.LVL196:
 2040              	.L173:
 2041              	.LBE176:
 2042              	.LBE175:
 2043              	.LBB177:
 2044              	.LBB171:
1256:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2045              		.loc 1 1256 0
 2046 00a6 0133     		adds	r3, r3, #1
 2047              	.LVL197:
 2048 00a8 5BB2     		sxtb	r3, r3
 2049              	.LVL198:
 2050 00aa 84F84530 		strb	r3, [r4, #69]
1259:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 2051              		.loc 1 1259 0
 2052 00ae 0120     		movs	r0, #1
 2053 00b0 E8E7     		b	.L172
 2054              	.LVL199:
 2055              	.L174:
 2056              	.LBE171:
1264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 2057              		.loc 1 1264 0
 2058 00b2 0020     		movs	r0, #0
 2059 00b4 E6E7     		b	.L172
 2060              	.LVL200:
 2061              	.L175:
 2062              	.LBB172:
1259:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 2063              		.loc 1 1259 0
ARM GAS  /tmp/ccY2tmJ9.s 			page 86


 2064 00b6 0120     		movs	r0, #1
 2065 00b8 E4E7     		b	.L172
 2066              	.LVL201:
 2067              	.L176:
 2068 00ba 0120     		movs	r0, #1
 2069 00bc E2E7     		b	.L172
 2070              	.L177:
 2071 00be 0120     		movs	r0, #1
 2072 00c0 E0E7     		b	.L172
 2073              	.LBE172:
 2074              	.LBE177:
 2075              		.cfi_endproc
 2076              	.LFE18:
 2078              		.section	.text.xQueueReceive,"ax",%progbits
 2079              		.align	1
 2080              		.global	xQueueReceive
 2081              		.syntax unified
 2082              		.thumb
 2083              		.thumb_func
 2084              		.fpu fpv5-sp-d16
 2086              	xQueueReceive:
 2087              	.LFB19:
1274:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 2088              		.loc 1 1274 0
 2089              		.cfi_startproc
 2090              		@ args = 0, pretend = 0, frame = 16
 2091              		@ frame_needed = 0, uses_anonymous_args = 0
 2092              	.LVL202:
 2093 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2094              	.LCFI33:
 2095              		.cfi_def_cfa_offset 20
 2096              		.cfi_offset 4, -20
 2097              		.cfi_offset 5, -16
 2098              		.cfi_offset 6, -12
 2099              		.cfi_offset 7, -8
 2100              		.cfi_offset 14, -4
 2101 0002 85B0     		sub	sp, sp, #20
 2102              	.LCFI34:
 2103              		.cfi_def_cfa_offset 40
 2104 0004 0192     		str	r2, [sp, #4]
 2105              	.LVL203:
1280:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2106              		.loc 1 1280 0
 2107 0006 70B1     		cbz	r0, .L203
 2108 0008 0446     		mov	r4, r0
1284:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2109              		.loc 1 1284 0
 2110 000a B9B9     		cbnz	r1, .L185
1284:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2111              		.loc 1 1284 0 is_stmt 0 discriminator 2
 2112 000c 036C     		ldr	r3, [r0, #64]
 2113 000e ABB1     		cbz	r3, .L185
 2114              	.LBB178:
 2115              	.LBB179:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 2116              		.loc 2 195 0 is_stmt 1
 2117              		.syntax unified
ARM GAS  /tmp/ccY2tmJ9.s 			page 87


 2118              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 2119 0010 4FF05003 			mov r3, #80												
 2120 0014 72B6     		cpsid i													
 2121 0016 83F31188 		msr basepri, r3											
 2122 001a BFF36F8F 		isb														
 2123 001e BFF34F8F 		dsb														
 2124 0022 62B6     		cpsie i													
 2125              	
 2126              	@ 0 "" 2
 2127              	.LVL204:
 2128              		.thumb
 2129              		.syntax unified
 2130              	.L186:
 2131 0024 FEE7     		b	.L186
 2132              	.L203:
 2133              	.LBE179:
 2134              	.LBE178:
 2135              	.LBB180:
 2136              	.LBB181:
 2137              		.syntax unified
 2138              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 2139 0026 4FF05003 			mov r3, #80												
 2140 002a 72B6     		cpsid i													
 2141 002c 83F31188 		msr basepri, r3											
 2142 0030 BFF36F8F 		isb														
 2143 0034 BFF34F8F 		dsb														
 2144 0038 62B6     		cpsie i													
 2145              	
 2146              	@ 0 "" 2
 2147              	.LVL205:
 2148              		.thumb
 2149              		.syntax unified
 2150              	.L184:
 2151 003a FEE7     		b	.L184
 2152              	.L185:
 2153 003c 0F46     		mov	r7, r1
 2154              	.LBE181:
 2155              	.LBE180:
1289:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2156              		.loc 1 1289 0
 2157 003e FFF7FEFF 		bl	xTaskGetSchedulerState
 2158              	.LVL206:
 2159 0042 60B9     		cbnz	r0, .L200
1289:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2160              		.loc 1 1289 0 is_stmt 0 discriminator 2
 2161 0044 019B     		ldr	r3, [sp, #4]
 2162 0046 63B1     		cbz	r3, .L201
 2163              	.LBB182:
 2164              	.LBB183:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 2165              		.loc 2 195 0 is_stmt 1
 2166              		.syntax unified
 2167              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 2168 0048 4FF05003 			mov r3, #80												
 2169 004c 72B6     		cpsid i													
 2170 004e 83F31188 		msr basepri, r3											
 2171 0052 BFF36F8F 		isb														
ARM GAS  /tmp/ccY2tmJ9.s 			page 88


 2172 0056 BFF34F8F 		dsb														
 2173 005a 62B6     		cpsie i													
 2174              	
 2175              	@ 0 "" 2
 2176              	.LVL207:
 2177              		.thumb
 2178              		.syntax unified
 2179              	.L188:
 2180 005c FEE7     		b	.L188
 2181              	.L200:
 2182              	.LBE183:
 2183              	.LBE182:
 2184 005e 0026     		movs	r6, #0
 2185 0060 3EE0     		b	.L189
 2186              	.L201:
 2187 0062 0026     		movs	r6, #0
 2188 0064 3CE0     		b	.L189
 2189              	.LVL208:
 2190              	.L206:
 2191              	.LBB184:
1308:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_RECEIVE( pxQueue );
 2192              		.loc 1 1308 0
 2193 0066 3946     		mov	r1, r7
 2194 0068 2046     		mov	r0, r4
 2195 006a FFF7FEFF 		bl	prvCopyDataFromQueue
 2196              	.LVL209:
1310:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2197              		.loc 1 1310 0
 2198 006e 013D     		subs	r5, r5, #1
 2199              	.LVL210:
 2200 0070 A563     		str	r5, [r4, #56]
1315:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2201              		.loc 1 1315 0
 2202 0072 2369     		ldr	r3, [r4, #16]
 2203 0074 23B9     		cbnz	r3, .L204
 2204              	.L191:
1331:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
 2205              		.loc 1 1331 0
 2206 0076 FFF7FEFF 		bl	vPortExitCritical
 2207              	.LVL211:
1332:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2208              		.loc 1 1332 0
 2209 007a 0120     		movs	r0, #1
 2210              	.LVL212:
 2211              	.L182:
 2212              	.LBE184:
1411:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 2213              		.loc 1 1411 0
 2214 007c 05B0     		add	sp, sp, #20
 2215              	.LCFI35:
 2216              		.cfi_remember_state
 2217              		.cfi_def_cfa_offset 20
 2218              		@ sp needed
 2219 007e F0BD     		pop	{r4, r5, r6, r7, pc}
 2220              	.LVL213:
 2221              	.L204:
 2222              	.LCFI36:
ARM GAS  /tmp/ccY2tmJ9.s 			page 89


 2223              		.cfi_restore_state
 2224              	.LBB185:
1317:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 2225              		.loc 1 1317 0
 2226 0080 04F11000 		add	r0, r4, #16
 2227 0084 FFF7FEFF 		bl	xTaskRemoveFromEventList
 2228              	.LVL214:
 2229 0088 0028     		cmp	r0, #0
 2230 008a F4D0     		beq	.L191
1319:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 2231              		.loc 1 1319 0
 2232 008c 344B     		ldr	r3, .L211
 2233 008e 4FF08052 		mov	r2, #268435456
 2234 0092 1A60     		str	r2, [r3]
 2235              		.syntax unified
 2236              	@ 1319 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2237 0094 BFF34F8F 		dsb
 2238              	@ 0 "" 2
 2239              	@ 1319 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2240 0098 BFF36F8F 		isb
 2241              	@ 0 "" 2
 2242              		.thumb
 2243              		.syntax unified
 2244 009c EBE7     		b	.L191
 2245              	.LVL215:
 2246              	.L207:
1340:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
 2247              		.loc 1 1340 0
 2248 009e FFF7FEFF 		bl	vPortExitCritical
 2249              	.LVL216:
1342:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 2250              		.loc 1 1342 0
 2251 00a2 0020     		movs	r0, #0
 2252 00a4 EAE7     		b	.L182
 2253              	.L208:
1348:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 2254              		.loc 1 1348 0
 2255 00a6 02A8     		add	r0, sp, #8
 2256 00a8 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 2257              	.LVL217:
1349:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 2258              		.loc 1 1349 0
 2259 00ac 0126     		movs	r6, #1
 2260 00ae 21E0     		b	.L194
 2261              	.LVL218:
 2262              	.L209:
 2263              	.LBE185:
1364:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2264              		.loc 1 1364 0 discriminator 1
 2265 00b0 0023     		movs	r3, #0
 2266 00b2 84F84430 		strb	r3, [r4, #68]
 2267 00b6 29E0     		b	.L195
 2268              	.L210:
1364:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2269              		.loc 1 1364 0 is_stmt 0 discriminator 4
 2270 00b8 0023     		movs	r3, #0
 2271 00ba 84F84530 		strb	r3, [r4, #69]
ARM GAS  /tmp/ccY2tmJ9.s 			page 90


 2272 00be 2BE0     		b	.L196
 2273              	.L198:
1389:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 2274              		.loc 1 1389 0 is_stmt 1
 2275 00c0 2046     		mov	r0, r4
 2276 00c2 FFF7FEFF 		bl	prvUnlockQueue
 2277              	.LVL219:
1390:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2278              		.loc 1 1390 0
 2279 00c6 FFF7FEFF 		bl	xTaskResumeAll
 2280              	.LVL220:
 2281 00ca 09E0     		b	.L189
 2282              	.L197:
1397:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 2283              		.loc 1 1397 0
 2284 00cc 2046     		mov	r0, r4
 2285 00ce FFF7FEFF 		bl	prvUnlockQueue
 2286              	.LVL221:
1398:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2287              		.loc 1 1398 0
 2288 00d2 FFF7FEFF 		bl	xTaskResumeAll
 2289              	.LVL222:
1400:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2290              		.loc 1 1400 0
 2291 00d6 2046     		mov	r0, r4
 2292 00d8 FFF7FEFF 		bl	prvIsQueueEmpty
 2293              	.LVL223:
 2294 00dc 0028     		cmp	r0, #0
 2295 00de 3DD1     		bne	.L205
 2296              	.LVL224:
 2297              	.L189:
1299:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2298              		.loc 1 1299 0
 2299 00e0 FFF7FEFF 		bl	vPortEnterCritical
 2300              	.LVL225:
 2301              	.LBB186:
1301:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2302              		.loc 1 1301 0
 2303 00e4 A56B     		ldr	r5, [r4, #56]
 2304              	.LVL226:
1305:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2305              		.loc 1 1305 0
 2306 00e6 002D     		cmp	r5, #0
 2307 00e8 BDD1     		bne	.L206
1336:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2308              		.loc 1 1336 0
 2309 00ea 019B     		ldr	r3, [sp, #4]
 2310 00ec 002B     		cmp	r3, #0
 2311 00ee D6D0     		beq	.L207
1344:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2312              		.loc 1 1344 0
 2313 00f0 002E     		cmp	r6, #0
 2314 00f2 D8D0     		beq	.L208
 2315              	.LVL227:
 2316              	.L194:
 2317              	.LBE186:
1358:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/ccY2tmJ9.s 			page 91


 2318              		.loc 1 1358 0
 2319 00f4 FFF7FEFF 		bl	vPortExitCritical
 2320              	.LVL228:
1363:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 2321              		.loc 1 1363 0
 2322 00f8 FFF7FEFF 		bl	vTaskSuspendAll
 2323              	.LVL229:
1364:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2324              		.loc 1 1364 0
 2325 00fc FFF7FEFF 		bl	vPortEnterCritical
 2326              	.LVL230:
 2327 0100 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 2328 0104 5BB2     		sxtb	r3, r3
 2329 0106 B3F1FF3F 		cmp	r3, #-1
 2330 010a D1D0     		beq	.L209
 2331              	.L195:
1364:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2332              		.loc 1 1364 0 is_stmt 0 discriminator 3
 2333 010c 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 2334 0110 5BB2     		sxtb	r3, r3
 2335 0112 B3F1FF3F 		cmp	r3, #-1
 2336 0116 CFD0     		beq	.L210
 2337              	.L196:
1364:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2338              		.loc 1 1364 0 discriminator 6
 2339 0118 FFF7FEFF 		bl	vPortExitCritical
 2340              	.LVL231:
1367:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2341              		.loc 1 1367 0 is_stmt 1 discriminator 6
 2342 011c 01A9     		add	r1, sp, #4
 2343 011e 02A8     		add	r0, sp, #8
 2344 0120 FFF7FEFF 		bl	xTaskCheckForTimeOut
 2345              	.LVL232:
 2346 0124 0028     		cmp	r0, #0
 2347 0126 D1D1     		bne	.L197
1371:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2348              		.loc 1 1371 0
 2349 0128 2046     		mov	r0, r4
 2350 012a FFF7FEFF 		bl	prvIsQueueEmpty
 2351              	.LVL233:
 2352 012e 0028     		cmp	r0, #0
 2353 0130 C6D0     		beq	.L198
1374:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 2354              		.loc 1 1374 0
 2355 0132 0199     		ldr	r1, [sp, #4]
 2356 0134 04F12400 		add	r0, r4, #36
 2357 0138 FFF7FEFF 		bl	vTaskPlaceOnEventList
 2358              	.LVL234:
1375:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 2359              		.loc 1 1375 0
 2360 013c 2046     		mov	r0, r4
 2361 013e FFF7FEFF 		bl	prvUnlockQueue
 2362              	.LVL235:
1376:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2363              		.loc 1 1376 0
 2364 0142 FFF7FEFF 		bl	xTaskResumeAll
 2365              	.LVL236:
ARM GAS  /tmp/ccY2tmJ9.s 			page 92


 2366 0146 0028     		cmp	r0, #0
 2367 0148 CAD1     		bne	.L189
1378:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 2368              		.loc 1 1378 0
 2369 014a 054B     		ldr	r3, .L211
 2370 014c 4FF08052 		mov	r2, #268435456
 2371 0150 1A60     		str	r2, [r3]
 2372              		.syntax unified
 2373              	@ 1378 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2374 0152 BFF34F8F 		dsb
 2375              	@ 0 "" 2
 2376              	@ 1378 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2377 0156 BFF36F8F 		isb
 2378              	@ 0 "" 2
 2379              		.thumb
 2380              		.syntax unified
 2381 015a C1E7     		b	.L189
 2382              	.L205:
1403:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2383              		.loc 1 1403 0
 2384 015c 0020     		movs	r0, #0
 2385 015e 8DE7     		b	.L182
 2386              	.L212:
 2387              		.align	2
 2388              	.L211:
 2389 0160 04ED00E0 		.word	-536810236
 2390              		.cfi_endproc
 2391              	.LFE19:
 2393              		.section	.text.xQueueSemaphoreTake,"ax",%progbits
 2394              		.align	1
 2395              		.global	xQueueSemaphoreTake
 2396              		.syntax unified
 2397              		.thumb
 2398              		.thumb_func
 2399              		.fpu fpv5-sp-d16
 2401              	xQueueSemaphoreTake:
 2402              	.LFB20:
1415:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 2403              		.loc 1 1415 0
 2404              		.cfi_startproc
 2405              		@ args = 0, pretend = 0, frame = 16
 2406              		@ frame_needed = 0, uses_anonymous_args = 0
 2407              	.LVL237:
 2408 0000 70B5     		push	{r4, r5, r6, lr}
 2409              	.LCFI37:
 2410              		.cfi_def_cfa_offset 16
 2411              		.cfi_offset 4, -16
 2412              		.cfi_offset 5, -12
 2413              		.cfi_offset 6, -8
 2414              		.cfi_offset 14, -4
 2415 0002 84B0     		sub	sp, sp, #16
 2416              	.LCFI38:
 2417              		.cfi_def_cfa_offset 32
 2418 0004 0191     		str	r1, [sp, #4]
 2419              	.LVL238:
1425:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2420              		.loc 1 1425 0
ARM GAS  /tmp/ccY2tmJ9.s 			page 93


 2421 0006 50B9     		cbnz	r0, .L214
 2422              	.LBB187:
 2423              	.LBB188:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 2424              		.loc 2 195 0
 2425              		.syntax unified
 2426              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 2427 0008 4FF05003 			mov r3, #80												
 2428 000c 72B6     		cpsid i													
 2429 000e 83F31188 		msr basepri, r3											
 2430 0012 BFF36F8F 		isb														
 2431 0016 BFF34F8F 		dsb														
 2432 001a 62B6     		cpsie i													
 2433              	
 2434              	@ 0 "" 2
 2435              	.LVL239:
 2436              		.thumb
 2437              		.syntax unified
 2438              	.L215:
 2439 001c FEE7     		b	.L215
 2440              	.L214:
 2441 001e 0446     		mov	r4, r0
 2442              	.LBE188:
 2443              	.LBE187:
1429:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2444              		.loc 1 1429 0
 2445 0020 036C     		ldr	r3, [r0, #64]
 2446 0022 53B1     		cbz	r3, .L216
 2447              	.LBB189:
 2448              	.LBB190:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 2449              		.loc 2 195 0
 2450              		.syntax unified
 2451              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 2452 0024 4FF05003 			mov r3, #80												
 2453 0028 72B6     		cpsid i													
 2454 002a 83F31188 		msr basepri, r3											
 2455 002e BFF36F8F 		isb														
 2456 0032 BFF34F8F 		dsb														
 2457 0036 62B6     		cpsie i													
 2458              	
 2459              	@ 0 "" 2
 2460              	.LVL240:
 2461              		.thumb
 2462              		.syntax unified
 2463              	.L217:
 2464 0038 FEE7     		b	.L217
 2465              	.L216:
 2466              	.LBE190:
 2467              	.LBE189:
1434:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2468              		.loc 1 1434 0
 2469 003a FFF7FEFF 		bl	xTaskGetSchedulerState
 2470              	.LVL241:
 2471 003e 60B9     		cbnz	r0, .L235
1434:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2472              		.loc 1 1434 0 is_stmt 0 discriminator 2
ARM GAS  /tmp/ccY2tmJ9.s 			page 94


 2473 0040 019B     		ldr	r3, [sp, #4]
 2474 0042 6BB1     		cbz	r3, .L236
 2475              	.LBB191:
 2476              	.LBB192:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 2477              		.loc 2 195 0 is_stmt 1
 2478              		.syntax unified
 2479              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 2480 0044 4FF05003 			mov r3, #80												
 2481 0048 72B6     		cpsid i													
 2482 004a 83F31188 		msr basepri, r3											
 2483 004e BFF36F8F 		isb														
 2484 0052 BFF34F8F 		dsb														
 2485 0056 62B6     		cpsie i													
 2486              	
 2487              	@ 0 "" 2
 2488              	.LVL242:
 2489              		.thumb
 2490              		.syntax unified
 2491              	.L219:
 2492 0058 FEE7     		b	.L219
 2493              	.L235:
 2494              	.LBE192:
 2495              	.LBE191:
 2496 005a 0025     		movs	r5, #0
 2497 005c 2E46     		mov	r6, r5
 2498 005e 53E0     		b	.L220
 2499              	.L236:
 2500 0060 0025     		movs	r5, #0
 2501 0062 2E46     		mov	r6, r5
 2502 0064 50E0     		b	.L220
 2503              	.LVL243:
 2504              	.L239:
 2505              	.LBB193:
1458:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2506              		.loc 1 1458 0
 2507 0066 013B     		subs	r3, r3, #1
 2508              	.LVL244:
 2509 0068 A363     		str	r3, [r4, #56]
1462:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 2510              		.loc 1 1462 0
 2511 006a 2368     		ldr	r3, [r4]
 2512              	.LVL245:
 2513 006c 13B9     		cbnz	r3, .L222
1466:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 2514              		.loc 1 1466 0
 2515 006e FFF7FEFF 		bl	pvTaskIncrementMutexHeldCount
 2516              	.LVL246:
 2517 0072 A060     		str	r0, [r4, #8]
 2518              	.L222:
1477:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2519              		.loc 1 1477 0
 2520 0074 2369     		ldr	r3, [r4, #16]
 2521 0076 63B1     		cbz	r3, .L223
1479:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 2522              		.loc 1 1479 0
 2523 0078 04F11000 		add	r0, r4, #16
ARM GAS  /tmp/ccY2tmJ9.s 			page 95


 2524 007c FFF7FEFF 		bl	xTaskRemoveFromEventList
 2525              	.LVL247:
 2526 0080 38B1     		cbz	r0, .L223
1481:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 2527              		.loc 1 1481 0
 2528 0082 494B     		ldr	r3, .L245
 2529 0084 4FF08052 		mov	r2, #268435456
 2530 0088 1A60     		str	r2, [r3]
 2531              		.syntax unified
 2532              	@ 1481 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2533 008a BFF34F8F 		dsb
 2534              	@ 0 "" 2
 2535              	@ 1481 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2536 008e BFF36F8F 		isb
 2537              	@ 0 "" 2
 2538              		.thumb
 2539              		.syntax unified
 2540              	.L223:
1493:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
 2541              		.loc 1 1493 0
 2542 0092 FFF7FEFF 		bl	vPortExitCritical
 2543              	.LVL248:
1494:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2544              		.loc 1 1494 0
 2545 0096 0125     		movs	r5, #1
 2546              	.LVL249:
 2547              	.L213:
 2548              	.LBE193:
1629:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 2549              		.loc 1 1629 0
 2550 0098 2846     		mov	r0, r5
 2551 009a 04B0     		add	sp, sp, #16
 2552              	.LCFI39:
 2553              		.cfi_remember_state
 2554              		.cfi_def_cfa_offset 16
 2555              		@ sp needed
 2556 009c 70BD     		pop	{r4, r5, r6, pc}
 2557              	.LVL250:
 2558              	.L240:
 2559              	.LCFI40:
 2560              		.cfi_restore_state
 2561              	.LBB196:
1505:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 2562              		.loc 1 1505 0
 2563 009e 55B1     		cbz	r5, .L226
 2564              	.LBB194:
 2565              	.LBB195:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 2566              		.loc 2 195 0
 2567              		.syntax unified
 2568              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 2569 00a0 4FF05003 			mov r3, #80												
 2570 00a4 72B6     		cpsid i													
 2571 00a6 83F31188 		msr basepri, r3											
 2572 00aa BFF36F8F 		isb														
 2573 00ae BFF34F8F 		dsb														
 2574 00b2 62B6     		cpsie i													
ARM GAS  /tmp/ccY2tmJ9.s 			page 96


 2575              	
 2576              	@ 0 "" 2
 2577              	.LVL251:
 2578              		.thumb
 2579              		.syntax unified
 2580              	.L227:
 2581 00b4 FEE7     		b	.L227
 2582              	.L226:
 2583              	.LBE195:
 2584              	.LBE194:
1511:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
 2585              		.loc 1 1511 0
 2586 00b6 FFF7FEFF 		bl	vPortExitCritical
 2587              	.LVL252:
1513:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 2588              		.loc 1 1513 0
 2589 00ba EDE7     		b	.L213
 2590              	.L241:
1519:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 2591              		.loc 1 1519 0
 2592 00bc 02A8     		add	r0, sp, #8
 2593 00be FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 2594              	.LVL253:
1520:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 2595              		.loc 1 1520 0
 2596 00c2 0126     		movs	r6, #1
 2597 00c4 2AE0     		b	.L228
 2598              	.LVL254:
 2599              	.L242:
 2600              	.LBE196:
1535:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2601              		.loc 1 1535 0 discriminator 1
 2602 00c6 0023     		movs	r3, #0
 2603 00c8 84F84430 		strb	r3, [r4, #68]
 2604 00cc 32E0     		b	.L229
 2605              	.L243:
1535:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2606              		.loc 1 1535 0 is_stmt 0 discriminator 4
 2607 00ce 0023     		movs	r3, #0
 2608 00d0 84F84530 		strb	r3, [r4, #69]
 2609 00d4 34E0     		b	.L230
 2610              	.L244:
1552:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 2611              		.loc 1 1552 0 is_stmt 1
 2612 00d6 FFF7FEFF 		bl	vPortEnterCritical
 2613              	.LVL255:
1554:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 2614              		.loc 1 1554 0
 2615 00da A068     		ldr	r0, [r4, #8]
 2616 00dc FFF7FEFF 		bl	xTaskPriorityInherit
 2617              	.LVL256:
 2618 00e0 0546     		mov	r5, r0
 2619              	.LVL257:
1556:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 2620              		.loc 1 1556 0
 2621 00e2 FFF7FEFF 		bl	vPortExitCritical
 2622              	.LVL258:
ARM GAS  /tmp/ccY2tmJ9.s 			page 97


 2623 00e6 3BE0     		b	.L233
 2624              	.L232:
1580:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 2625              		.loc 1 1580 0
 2626 00e8 2046     		mov	r0, r4
 2627 00ea FFF7FEFF 		bl	prvUnlockQueue
 2628              	.LVL259:
1581:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2629              		.loc 1 1581 0
 2630 00ee FFF7FEFF 		bl	xTaskResumeAll
 2631              	.LVL260:
 2632 00f2 09E0     		b	.L220
 2633              	.L231:
1587:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 2634              		.loc 1 1587 0
 2635 00f4 2046     		mov	r0, r4
 2636 00f6 FFF7FEFF 		bl	prvUnlockQueue
 2637              	.LVL261:
1588:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2638              		.loc 1 1588 0
 2639 00fa FFF7FEFF 		bl	xTaskResumeAll
 2640              	.LVL262:
1594:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2641              		.loc 1 1594 0
 2642 00fe 2046     		mov	r0, r4
 2643 0100 FFF7FEFF 		bl	prvIsQueueEmpty
 2644              	.LVL263:
 2645 0104 0028     		cmp	r0, #0
 2646 0106 40D1     		bne	.L238
 2647              	.LVL264:
 2648              	.L220:
1444:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2649              		.loc 1 1444 0
 2650 0108 FFF7FEFF 		bl	vPortEnterCritical
 2651              	.LVL265:
 2652              	.LBB197:
1448:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2653              		.loc 1 1448 0
 2654 010c A36B     		ldr	r3, [r4, #56]
 2655              	.LVL266:
1452:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2656              		.loc 1 1452 0
 2657 010e 002B     		cmp	r3, #0
 2658 0110 A9D1     		bne	.L239
1498:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2659              		.loc 1 1498 0
 2660 0112 019B     		ldr	r3, [sp, #4]
 2661              	.LVL267:
 2662 0114 002B     		cmp	r3, #0
 2663 0116 C2D0     		beq	.L240
1515:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2664              		.loc 1 1515 0
 2665 0118 002E     		cmp	r6, #0
 2666 011a CFD0     		beq	.L241
 2667              	.LVL268:
 2668              	.L228:
 2669              	.LBE197:
ARM GAS  /tmp/ccY2tmJ9.s 			page 98


1529:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2670              		.loc 1 1529 0
 2671 011c FFF7FEFF 		bl	vPortExitCritical
 2672              	.LVL269:
1534:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 2673              		.loc 1 1534 0
 2674 0120 FFF7FEFF 		bl	vTaskSuspendAll
 2675              	.LVL270:
1535:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2676              		.loc 1 1535 0
 2677 0124 FFF7FEFF 		bl	vPortEnterCritical
 2678              	.LVL271:
 2679 0128 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 2680 012c 5BB2     		sxtb	r3, r3
 2681 012e B3F1FF3F 		cmp	r3, #-1
 2682 0132 C8D0     		beq	.L242
 2683              	.L229:
1535:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2684              		.loc 1 1535 0 is_stmt 0 discriminator 3
 2685 0134 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 2686 0138 5BB2     		sxtb	r3, r3
 2687 013a B3F1FF3F 		cmp	r3, #-1
 2688 013e C6D0     		beq	.L243
 2689              	.L230:
1535:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2690              		.loc 1 1535 0 discriminator 6
 2691 0140 FFF7FEFF 		bl	vPortExitCritical
 2692              	.LVL272:
1538:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2693              		.loc 1 1538 0 is_stmt 1 discriminator 6
 2694 0144 01A9     		add	r1, sp, #4
 2695 0146 02A8     		add	r0, sp, #8
 2696 0148 FFF7FEFF 		bl	xTaskCheckForTimeOut
 2697              	.LVL273:
 2698 014c 0028     		cmp	r0, #0
 2699 014e D1D1     		bne	.L231
1544:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2700              		.loc 1 1544 0
 2701 0150 2046     		mov	r0, r4
 2702 0152 FFF7FEFF 		bl	prvIsQueueEmpty
 2703              	.LVL274:
 2704 0156 0028     		cmp	r0, #0
 2705 0158 C6D0     		beq	.L232
1550:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 2706              		.loc 1 1550 0
 2707 015a 2368     		ldr	r3, [r4]
 2708 015c 002B     		cmp	r3, #0
 2709 015e BAD0     		beq	.L244
 2710              	.L233:
1565:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 2711              		.loc 1 1565 0
 2712 0160 0199     		ldr	r1, [sp, #4]
 2713 0162 04F12400 		add	r0, r4, #36
 2714 0166 FFF7FEFF 		bl	vTaskPlaceOnEventList
 2715              	.LVL275:
1566:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 2716              		.loc 1 1566 0
ARM GAS  /tmp/ccY2tmJ9.s 			page 99


 2717 016a 2046     		mov	r0, r4
 2718 016c FFF7FEFF 		bl	prvUnlockQueue
 2719              	.LVL276:
1567:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2720              		.loc 1 1567 0
 2721 0170 FFF7FEFF 		bl	xTaskResumeAll
 2722              	.LVL277:
 2723 0174 0028     		cmp	r0, #0
 2724 0176 C7D1     		bne	.L220
1569:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 2725              		.loc 1 1569 0
 2726 0178 0B4B     		ldr	r3, .L245
 2727 017a 4FF08052 		mov	r2, #268435456
 2728 017e 1A60     		str	r2, [r3]
 2729              		.syntax unified
 2730              	@ 1569 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2731 0180 BFF34F8F 		dsb
 2732              	@ 0 "" 2
 2733              	@ 1569 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2734 0184 BFF36F8F 		isb
 2735              	@ 0 "" 2
 2736              		.thumb
 2737              		.syntax unified
 2738 0188 BEE7     		b	.L220
 2739              	.L238:
1601:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 2740              		.loc 1 1601 0
 2741 018a 002D     		cmp	r5, #0
 2742 018c 84D0     		beq	.L213
1603:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 2743              		.loc 1 1603 0
 2744 018e FFF7FEFF 		bl	vPortEnterCritical
 2745              	.LVL278:
 2746              	.LBB198:
1612:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPri
 2747              		.loc 1 1612 0
 2748 0192 2046     		mov	r0, r4
 2749 0194 FFF7FEFF 		bl	prvGetDisinheritPriorityAfterTimeout
 2750              	.LVL279:
1613:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 2751              		.loc 1 1613 0
 2752 0198 0146     		mov	r1, r0
 2753 019a A068     		ldr	r0, [r4, #8]
 2754              	.LVL280:
 2755 019c FFF7FEFF 		bl	vTaskPriorityDisinheritAfterTimeout
 2756              	.LVL281:
 2757              	.LBE198:
1615:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 2758              		.loc 1 1615 0
 2759 01a0 FFF7FEFF 		bl	vPortExitCritical
 2760              	.LVL282:
1621:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2761              		.loc 1 1621 0
 2762 01a4 0025     		movs	r5, #0
 2763              	.LVL283:
 2764 01a6 77E7     		b	.L213
 2765              	.L246:
ARM GAS  /tmp/ccY2tmJ9.s 			page 100


 2766              		.align	2
 2767              	.L245:
 2768 01a8 04ED00E0 		.word	-536810236
 2769              		.cfi_endproc
 2770              	.LFE20:
 2772              		.section	.text.xQueueTakeMutexRecursive,"ax",%progbits
 2773              		.align	1
 2774              		.global	xQueueTakeMutexRecursive
 2775              		.syntax unified
 2776              		.thumb
 2777              		.thumb_func
 2778              		.fpu fpv5-sp-d16
 2780              	xQueueTakeMutexRecursive:
 2781              	.LFB13:
 652:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
 2782              		.loc 1 652 0
 2783              		.cfi_startproc
 2784              		@ args = 0, pretend = 0, frame = 0
 2785              		@ frame_needed = 0, uses_anonymous_args = 0
 2786              	.LVL284:
 656:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2787              		.loc 1 656 0
 2788 0000 50B9     		cbnz	r0, .L248
 2789              	.LBB199:
 2790              	.LBB200:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 2791              		.loc 2 195 0
 2792              		.syntax unified
 2793              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 2794 0002 4FF05003 			mov r3, #80												
 2795 0006 72B6     		cpsid i													
 2796 0008 83F31188 		msr basepri, r3											
 2797 000c BFF36F8F 		isb														
 2798 0010 BFF34F8F 		dsb														
 2799 0014 62B6     		cpsie i													
 2800              	
 2801              	@ 0 "" 2
 2802              	.LVL285:
 2803              		.thumb
 2804              		.syntax unified
 2805              	.L249:
 2806 0016 FEE7     		b	.L249
 2807              	.L248:
 2808              	.LBE200:
 2809              	.LBE199:
 652:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
 2810              		.loc 1 652 0
 2811 0018 70B5     		push	{r4, r5, r6, lr}
 2812              	.LCFI41:
 2813              		.cfi_def_cfa_offset 16
 2814              		.cfi_offset 4, -16
 2815              		.cfi_offset 5, -12
 2816              		.cfi_offset 6, -8
 2817              		.cfi_offset 14, -4
 2818 001a 0446     		mov	r4, r0
 2819 001c 0D46     		mov	r5, r1
 663:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
ARM GAS  /tmp/ccY2tmJ9.s 			page 101


 2820              		.loc 1 663 0
 2821 001e 8668     		ldr	r6, [r0, #8]
 2822 0020 FFF7FEFF 		bl	xTaskGetCurrentTaskHandle
 2823              	.LVL286:
 2824 0024 8642     		cmp	r6, r0
 2825 0026 09D0     		beq	.L254
 670:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2826              		.loc 1 670 0
 2827 0028 2946     		mov	r1, r5
 2828 002a 2046     		mov	r0, r4
 2829 002c FFF7FEFF 		bl	xQueueSemaphoreTake
 2830              	.LVL287:
 675:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2831              		.loc 1 675 0
 2832 0030 0246     		mov	r2, r0
 2833 0032 38B1     		cbz	r0, .L247
 677:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2834              		.loc 1 677 0
 2835 0034 E368     		ldr	r3, [r4, #12]
 2836 0036 0133     		adds	r3, r3, #1
 2837 0038 E360     		str	r3, [r4, #12]
 685:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2838              		.loc 1 685 0
 2839 003a 03E0     		b	.L247
 2840              	.LVL288:
 2841              	.L254:
 665:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
 2842              		.loc 1 665 0
 2843 003c E368     		ldr	r3, [r4, #12]
 2844 003e 0133     		adds	r3, r3, #1
 2845 0040 E360     		str	r3, [r4, #12]
 2846              	.LVL289:
 666:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 2847              		.loc 1 666 0
 2848 0042 0122     		movs	r2, #1
 2849              	.LVL290:
 2850              	.L247:
 686:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2851              		.loc 1 686 0
 2852 0044 1046     		mov	r0, r2
 2853 0046 70BD     		pop	{r4, r5, r6, pc}
 2854              		.cfi_endproc
 2855              	.LFE13:
 2857              		.section	.text.xQueuePeek,"ax",%progbits
 2858              		.align	1
 2859              		.global	xQueuePeek
 2860              		.syntax unified
 2861              		.thumb
 2862              		.thumb_func
 2863              		.fpu fpv5-sp-d16
 2865              	xQueuePeek:
 2866              	.LFB21:
1633:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 2867              		.loc 1 1633 0
 2868              		.cfi_startproc
 2869              		@ args = 0, pretend = 0, frame = 16
 2870              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccY2tmJ9.s 			page 102


 2871              	.LVL291:
 2872 0000 70B5     		push	{r4, r5, r6, lr}
 2873              	.LCFI42:
 2874              		.cfi_def_cfa_offset 16
 2875              		.cfi_offset 4, -16
 2876              		.cfi_offset 5, -12
 2877              		.cfi_offset 6, -8
 2878              		.cfi_offset 14, -4
 2879 0002 84B0     		sub	sp, sp, #16
 2880              	.LCFI43:
 2881              		.cfi_def_cfa_offset 32
 2882 0004 0192     		str	r2, [sp, #4]
 2883              	.LVL292:
1640:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2884              		.loc 1 1640 0
 2885 0006 70B1     		cbz	r0, .L276
 2886 0008 0446     		mov	r4, r0
1644:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2887              		.loc 1 1644 0
 2888 000a B9B9     		cbnz	r1, .L258
1644:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2889              		.loc 1 1644 0 is_stmt 0 discriminator 2
 2890 000c 036C     		ldr	r3, [r0, #64]
 2891 000e ABB1     		cbz	r3, .L258
 2892              	.LBB201:
 2893              	.LBB202:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 2894              		.loc 2 195 0 is_stmt 1
 2895              		.syntax unified
 2896              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 2897 0010 4FF05003 			mov r3, #80												
 2898 0014 72B6     		cpsid i													
 2899 0016 83F31188 		msr basepri, r3											
 2900 001a BFF36F8F 		isb														
 2901 001e BFF34F8F 		dsb														
 2902 0022 62B6     		cpsie i													
 2903              	
 2904              	@ 0 "" 2
 2905              	.LVL293:
 2906              		.thumb
 2907              		.syntax unified
 2908              	.L259:
 2909 0024 FEE7     		b	.L259
 2910              	.L276:
 2911              	.LBE202:
 2912              	.LBE201:
 2913              	.LBB203:
 2914              	.LBB204:
 2915              		.syntax unified
 2916              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 2917 0026 4FF05003 			mov r3, #80												
 2918 002a 72B6     		cpsid i													
 2919 002c 83F31188 		msr basepri, r3											
 2920 0030 BFF36F8F 		isb														
 2921 0034 BFF34F8F 		dsb														
 2922 0038 62B6     		cpsie i													
 2923              	
ARM GAS  /tmp/ccY2tmJ9.s 			page 103


 2924              	@ 0 "" 2
 2925              	.LVL294:
 2926              		.thumb
 2927              		.syntax unified
 2928              	.L257:
 2929 003a FEE7     		b	.L257
 2930              	.L258:
 2931 003c 0E46     		mov	r6, r1
 2932              	.LBE204:
 2933              	.LBE203:
1649:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2934              		.loc 1 1649 0
 2935 003e FFF7FEFF 		bl	xTaskGetSchedulerState
 2936              	.LVL295:
 2937 0042 60B9     		cbnz	r0, .L273
1649:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2938              		.loc 1 1649 0 is_stmt 0 discriminator 2
 2939 0044 019B     		ldr	r3, [sp, #4]
 2940 0046 63B1     		cbz	r3, .L274
 2941              	.LBB205:
 2942              	.LBB206:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 2943              		.loc 2 195 0 is_stmt 1
 2944              		.syntax unified
 2945              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 2946 0048 4FF05003 			mov r3, #80												
 2947 004c 72B6     		cpsid i													
 2948 004e 83F31188 		msr basepri, r3											
 2949 0052 BFF36F8F 		isb														
 2950 0056 BFF34F8F 		dsb														
 2951 005a 62B6     		cpsie i													
 2952              	
 2953              	@ 0 "" 2
 2954              	.LVL296:
 2955              		.thumb
 2956              		.syntax unified
 2957              	.L261:
 2958 005c FEE7     		b	.L261
 2959              	.L273:
 2960              	.LBE206:
 2961              	.LBE205:
 2962 005e 0025     		movs	r5, #0
 2963 0060 3EE0     		b	.L262
 2964              	.L274:
 2965 0062 0025     		movs	r5, #0
 2966 0064 3CE0     		b	.L262
 2967              	.LVL297:
 2968              	.L279:
 2969              	.LBB207:
1670:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2970              		.loc 1 1670 0
 2971 0066 E568     		ldr	r5, [r4, #12]
 2972              	.LVL298:
1672:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_PEEK( pxQueue );
 2973              		.loc 1 1672 0
 2974 0068 3146     		mov	r1, r6
 2975 006a 2046     		mov	r0, r4
ARM GAS  /tmp/ccY2tmJ9.s 			page 104


 2976 006c FFF7FEFF 		bl	prvCopyDataFromQueue
 2977              	.LVL299:
1676:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2978              		.loc 1 1676 0
 2979 0070 E560     		str	r5, [r4, #12]
1680:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2980              		.loc 1 1680 0
 2981 0072 636A     		ldr	r3, [r4, #36]
 2982 0074 23B9     		cbnz	r3, .L277
 2983              	.L264:
1697:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
 2984              		.loc 1 1697 0
 2985 0076 FFF7FEFF 		bl	vPortExitCritical
 2986              	.LVL300:
1698:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2987              		.loc 1 1698 0
 2988 007a 0120     		movs	r0, #1
 2989              	.LVL301:
 2990              	.L255:
 2991              	.LBE207:
1778:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 2992              		.loc 1 1778 0
 2993 007c 04B0     		add	sp, sp, #16
 2994              	.LCFI44:
 2995              		.cfi_remember_state
 2996              		.cfi_def_cfa_offset 16
 2997              		@ sp needed
 2998 007e 70BD     		pop	{r4, r5, r6, pc}
 2999              	.LVL302:
 3000              	.L277:
 3001              	.LCFI45:
 3002              		.cfi_restore_state
 3003              	.LBB208:
1682:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 3004              		.loc 1 1682 0
 3005 0080 04F12400 		add	r0, r4, #36
 3006 0084 FFF7FEFF 		bl	xTaskRemoveFromEventList
 3007              	.LVL303:
 3008 0088 0028     		cmp	r0, #0
 3009 008a F4D0     		beq	.L264
1685:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 3010              		.loc 1 1685 0
 3011 008c 344B     		ldr	r3, .L284
 3012 008e 4FF08052 		mov	r2, #268435456
 3013 0092 1A60     		str	r2, [r3]
 3014              		.syntax unified
 3015              	@ 1685 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 3016 0094 BFF34F8F 		dsb
 3017              	@ 0 "" 2
 3018              	@ 1685 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 3019 0098 BFF36F8F 		isb
 3020              	@ 0 "" 2
 3021              		.thumb
 3022              		.syntax unified
 3023 009c EBE7     		b	.L264
 3024              	.LVL304:
 3025              	.L280:
ARM GAS  /tmp/ccY2tmJ9.s 			page 105


1706:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_PEEK_FAILED( pxQueue );
 3026              		.loc 1 1706 0
 3027 009e FFF7FEFF 		bl	vPortExitCritical
 3028              	.LVL305:
1708:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 3029              		.loc 1 1708 0
 3030 00a2 0020     		movs	r0, #0
 3031 00a4 EAE7     		b	.L255
 3032              	.L281:
1715:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 3033              		.loc 1 1715 0
 3034 00a6 02A8     		add	r0, sp, #8
 3035 00a8 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 3036              	.LVL306:
1716:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 3037              		.loc 1 1716 0
 3038 00ac 0125     		movs	r5, #1
 3039 00ae 21E0     		b	.L267
 3040              	.LVL307:
 3041              	.L282:
 3042              	.LBE208:
1731:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3043              		.loc 1 1731 0 discriminator 1
 3044 00b0 0023     		movs	r3, #0
 3045 00b2 84F84430 		strb	r3, [r4, #68]
 3046 00b6 29E0     		b	.L268
 3047              	.L283:
1731:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3048              		.loc 1 1731 0 is_stmt 0 discriminator 4
 3049 00b8 0023     		movs	r3, #0
 3050 00ba 84F84530 		strb	r3, [r4, #69]
 3051 00be 2BE0     		b	.L269
 3052              	.L271:
1756:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 3053              		.loc 1 1756 0 is_stmt 1
 3054 00c0 2046     		mov	r0, r4
 3055 00c2 FFF7FEFF 		bl	prvUnlockQueue
 3056              	.LVL308:
1757:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 3057              		.loc 1 1757 0
 3058 00c6 FFF7FEFF 		bl	xTaskResumeAll
 3059              	.LVL309:
 3060 00ca 09E0     		b	.L262
 3061              	.L270:
1764:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 3062              		.loc 1 1764 0
 3063 00cc 2046     		mov	r0, r4
 3064 00ce FFF7FEFF 		bl	prvUnlockQueue
 3065              	.LVL310:
1765:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3066              		.loc 1 1765 0
 3067 00d2 FFF7FEFF 		bl	xTaskResumeAll
 3068              	.LVL311:
1767:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 3069              		.loc 1 1767 0
 3070 00d6 2046     		mov	r0, r4
 3071 00d8 FFF7FEFF 		bl	prvIsQueueEmpty
ARM GAS  /tmp/ccY2tmJ9.s 			page 106


 3072              	.LVL312:
 3073 00dc 0028     		cmp	r0, #0
 3074 00de 3DD1     		bne	.L278
 3075              	.LVL313:
 3076              	.L262:
1659:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 3077              		.loc 1 1659 0
 3078 00e0 FFF7FEFF 		bl	vPortEnterCritical
 3079              	.LVL314:
 3080              	.LBB209:
1661:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3081              		.loc 1 1661 0
 3082 00e4 A36B     		ldr	r3, [r4, #56]
 3083              	.LVL315:
1665:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 3084              		.loc 1 1665 0
 3085 00e6 002B     		cmp	r3, #0
 3086 00e8 BDD1     		bne	.L279
1702:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 3087              		.loc 1 1702 0
 3088 00ea 019B     		ldr	r3, [sp, #4]
 3089              	.LVL316:
 3090 00ec 002B     		cmp	r3, #0
 3091 00ee D6D0     		beq	.L280
1710:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 3092              		.loc 1 1710 0
 3093 00f0 002D     		cmp	r5, #0
 3094 00f2 D8D0     		beq	.L281
 3095              	.LVL317:
 3096              	.L267:
 3097              	.LBE209:
1725:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3098              		.loc 1 1725 0
 3099 00f4 FFF7FEFF 		bl	vPortExitCritical
 3100              	.LVL318:
1730:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 3101              		.loc 1 1730 0
 3102 00f8 FFF7FEFF 		bl	vTaskSuspendAll
 3103              	.LVL319:
1731:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3104              		.loc 1 1731 0
 3105 00fc FFF7FEFF 		bl	vPortEnterCritical
 3106              	.LVL320:
 3107 0100 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 3108 0104 5BB2     		sxtb	r3, r3
 3109 0106 B3F1FF3F 		cmp	r3, #-1
 3110 010a D1D0     		beq	.L282
 3111              	.L268:
1731:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3112              		.loc 1 1731 0 is_stmt 0 discriminator 3
 3113 010c 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 3114 0110 5BB2     		sxtb	r3, r3
 3115 0112 B3F1FF3F 		cmp	r3, #-1
 3116 0116 CFD0     		beq	.L283
 3117              	.L269:
1731:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3118              		.loc 1 1731 0 discriminator 6
ARM GAS  /tmp/ccY2tmJ9.s 			page 107


 3119 0118 FFF7FEFF 		bl	vPortExitCritical
 3120              	.LVL321:
1734:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 3121              		.loc 1 1734 0 is_stmt 1 discriminator 6
 3122 011c 01A9     		add	r1, sp, #4
 3123 011e 02A8     		add	r0, sp, #8
 3124 0120 FFF7FEFF 		bl	xTaskCheckForTimeOut
 3125              	.LVL322:
 3126 0124 0028     		cmp	r0, #0
 3127 0126 D1D1     		bne	.L270
1738:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 3128              		.loc 1 1738 0
 3129 0128 2046     		mov	r0, r4
 3130 012a FFF7FEFF 		bl	prvIsQueueEmpty
 3131              	.LVL323:
 3132 012e 0028     		cmp	r0, #0
 3133 0130 C6D0     		beq	.L271
1741:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 3134              		.loc 1 1741 0
 3135 0132 0199     		ldr	r1, [sp, #4]
 3136 0134 04F12400 		add	r0, r4, #36
 3137 0138 FFF7FEFF 		bl	vTaskPlaceOnEventList
 3138              	.LVL324:
1742:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 3139              		.loc 1 1742 0
 3140 013c 2046     		mov	r0, r4
 3141 013e FFF7FEFF 		bl	prvUnlockQueue
 3142              	.LVL325:
1743:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 3143              		.loc 1 1743 0
 3144 0142 FFF7FEFF 		bl	xTaskResumeAll
 3145              	.LVL326:
 3146 0146 0028     		cmp	r0, #0
 3147 0148 CAD1     		bne	.L262
1745:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 3148              		.loc 1 1745 0
 3149 014a 054B     		ldr	r3, .L284
 3150 014c 4FF08052 		mov	r2, #268435456
 3151 0150 1A60     		str	r2, [r3]
 3152              		.syntax unified
 3153              	@ 1745 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 3154 0152 BFF34F8F 		dsb
 3155              	@ 0 "" 2
 3156              	@ 1745 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 3157 0156 BFF36F8F 		isb
 3158              	@ 0 "" 2
 3159              		.thumb
 3160              		.syntax unified
 3161 015a C1E7     		b	.L262
 3162              	.L278:
1770:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 3163              		.loc 1 1770 0
 3164 015c 0020     		movs	r0, #0
 3165 015e 8DE7     		b	.L255
 3166              	.L285:
 3167              		.align	2
 3168              	.L284:
ARM GAS  /tmp/ccY2tmJ9.s 			page 108


 3169 0160 04ED00E0 		.word	-536810236
 3170              		.cfi_endproc
 3171              	.LFE21:
 3173              		.section	.text.xQueueReceiveFromISR,"ax",%progbits
 3174              		.align	1
 3175              		.global	xQueueReceiveFromISR
 3176              		.syntax unified
 3177              		.thumb
 3178              		.thumb_func
 3179              		.fpu fpv5-sp-d16
 3181              	xQueueReceiveFromISR:
 3182              	.LFB22:
1782:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 3183              		.loc 1 1782 0
 3184              		.cfi_startproc
 3185              		@ args = 0, pretend = 0, frame = 0
 3186              		@ frame_needed = 0, uses_anonymous_args = 0
 3187              	.LVL327:
 3188 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 3189              	.LCFI46:
 3190              		.cfi_def_cfa_offset 32
 3191              		.cfi_offset 3, -32
 3192              		.cfi_offset 4, -28
 3193              		.cfi_offset 5, -24
 3194              		.cfi_offset 6, -20
 3195              		.cfi_offset 7, -16
 3196              		.cfi_offset 8, -12
 3197              		.cfi_offset 9, -8
 3198              		.cfi_offset 14, -4
 3199              	.LVL328:
1787:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 3200              		.loc 1 1787 0
 3201 0004 70B1     		cbz	r0, .L298
 3202 0006 0446     		mov	r4, r0
1788:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3203              		.loc 1 1788 0
 3204 0008 B9B9     		cbnz	r1, .L289
1788:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3205              		.loc 1 1788 0 is_stmt 0 discriminator 2
 3206 000a 036C     		ldr	r3, [r0, #64]
 3207 000c ABB1     		cbz	r3, .L289
 3208              	.LBB210:
 3209              	.LBB211:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 3210              		.loc 2 195 0 is_stmt 1
 3211              		.syntax unified
 3212              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 3213 000e 4FF05003 			mov r3, #80												
 3214 0012 72B6     		cpsid i													
 3215 0014 83F31188 		msr basepri, r3											
 3216 0018 BFF36F8F 		isb														
 3217 001c BFF34F8F 		dsb														
 3218 0020 62B6     		cpsie i													
 3219              	
 3220              	@ 0 "" 2
 3221              	.LVL329:
 3222              		.thumb
ARM GAS  /tmp/ccY2tmJ9.s 			page 109


 3223              		.syntax unified
 3224              	.L290:
 3225 0022 FEE7     		b	.L290
 3226              	.L298:
 3227              	.LBE211:
 3228              	.LBE210:
 3229              	.LBB212:
 3230              	.LBB213:
 3231              		.syntax unified
 3232              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 3233 0024 4FF05003 			mov r3, #80												
 3234 0028 72B6     		cpsid i													
 3235 002a 83F31188 		msr basepri, r3											
 3236 002e BFF36F8F 		isb														
 3237 0032 BFF34F8F 		dsb														
 3238 0036 62B6     		cpsie i													
 3239              	
 3240              	@ 0 "" 2
 3241              	.LVL330:
 3242              		.thumb
 3243              		.syntax unified
 3244              	.L288:
 3245 0038 FEE7     		b	.L288
 3246              	.L289:
 3247 003a 1746     		mov	r7, r2
 3248 003c 8946     		mov	r9, r1
 3249              	.LBE213:
 3250              	.LBE212:
1804:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3251              		.loc 1 1804 0
 3252 003e FFF7FEFF 		bl	vPortValidateInterruptPriority
 3253              	.LVL331:
 3254              	.LBB214:
 3255              	.LBB215:
 213:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 3256              		.loc 2 213 0
 3257              		.syntax unified
 3258              	@ 213 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 3259 0042 EFF31186 			mrs r6, basepri											
 3260 0046 4FF05003 		mov r3, #80												
 3261 004a 72B6     		cpsid i													
 3262 004c 83F31188 		msr basepri, r3											
 3263 0050 BFF36F8F 		isb														
 3264 0054 BFF34F8F 		dsb														
 3265 0058 62B6     		cpsie i													
 3266              	
 3267              	@ 0 "" 2
 3268              		.thumb
 3269              		.syntax unified
 3270              	.LBE215:
 3271              	.LBE214:
 3272              	.LBB216:
1808:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3273              		.loc 1 1808 0
 3274 005a D4F83880 		ldr	r8, [r4, #56]
 3275              	.LVL332:
1811:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
ARM GAS  /tmp/ccY2tmJ9.s 			page 110


 3276              		.loc 1 1811 0
 3277 005e B8F1000F 		cmp	r8, #0
 3278 0062 1DD0     		beq	.L293
 3279              	.LBB217:
1813:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3280              		.loc 1 1813 0
 3281 0064 94F84450 		ldrb	r5, [r4, #68]	@ zero_extendqisi2
 3282 0068 6DB2     		sxtb	r5, r5
 3283              	.LVL333:
1817:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 3284              		.loc 1 1817 0
 3285 006a 4946     		mov	r1, r9
 3286 006c 2046     		mov	r0, r4
 3287 006e FFF7FEFF 		bl	prvCopyDataFromQueue
 3288              	.LVL334:
1818:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3289              		.loc 1 1818 0
 3290 0072 08F1FF33 		add	r3, r8, #-1
 3291 0076 A363     		str	r3, [r4, #56]
1824:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 3292              		.loc 1 1824 0
 3293 0078 B5F1FF3F 		cmp	r5, #-1
 3294 007c 05D0     		beq	.L299
1855:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 3295              		.loc 1 1855 0
 3296 007e 6B1C     		adds	r3, r5, #1
 3297 0080 5BB2     		sxtb	r3, r3
 3298 0082 84F84430 		strb	r3, [r4, #68]
1858:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 3299              		.loc 1 1858 0
 3300 0086 0120     		movs	r0, #1
 3301 0088 0BE0     		b	.L291
 3302              	.L299:
1826:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 3303              		.loc 1 1826 0
 3304 008a 2369     		ldr	r3, [r4, #16]
 3305 008c 6BB1     		cbz	r3, .L294
1828:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 3306              		.loc 1 1828 0
 3307 008e 04F11000 		add	r0, r4, #16
 3308 0092 FFF7FEFF 		bl	xTaskRemoveFromEventList
 3309              	.LVL335:
 3310 0096 50B1     		cbz	r0, .L295
1832:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 3311              		.loc 1 1832 0
 3312 0098 5FB1     		cbz	r7, .L296
1834:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 3313              		.loc 1 1834 0
 3314 009a 0120     		movs	r0, #1
 3315 009c 3860     		str	r0, [r7]
 3316 009e 00E0     		b	.L291
 3317              	.LVL336:
 3318              	.L293:
 3319              	.LBE217:
1862:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR_FAILED( pxQueue );
 3320              		.loc 1 1862 0
 3321 00a0 0020     		movs	r0, #0
ARM GAS  /tmp/ccY2tmJ9.s 			page 111


 3322              	.L291:
 3323              	.LVL337:
 3324              	.LBE216:
 3325              	.LBB219:
 3326              	.LBB220:
 3327              		.loc 2 233 0
 3328              		.syntax unified
 3329              	@ 233 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 3330 00a2 86F31188 			msr basepri, r6	
 3331              	@ 0 "" 2
 3332              	.LVL338:
 3333              		.thumb
 3334              		.syntax unified
 3335              	.LBE220:
 3336              	.LBE219:
1869:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 3337              		.loc 1 1869 0
 3338 00a6 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3339              	.LVL339:
 3340              	.L294:
 3341              	.LBB221:
 3342              	.LBB218:
1858:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 3343              		.loc 1 1858 0
 3344 00aa 0120     		movs	r0, #1
 3345 00ac F9E7     		b	.L291
 3346              	.L295:
 3347 00ae 0120     		movs	r0, #1
 3348 00b0 F7E7     		b	.L291
 3349              	.L296:
 3350 00b2 0120     		movs	r0, #1
 3351 00b4 F5E7     		b	.L291
 3352              	.LBE218:
 3353              	.LBE221:
 3354              		.cfi_endproc
 3355              	.LFE22:
 3357              		.section	.text.xQueuePeekFromISR,"ax",%progbits
 3358              		.align	1
 3359              		.global	xQueuePeekFromISR
 3360              		.syntax unified
 3361              		.thumb
 3362              		.thumb_func
 3363              		.fpu fpv5-sp-d16
 3365              	xQueuePeekFromISR:
 3366              	.LFB23:
1873:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 3367              		.loc 1 1873 0
 3368              		.cfi_startproc
 3369              		@ args = 0, pretend = 0, frame = 0
 3370              		@ frame_needed = 0, uses_anonymous_args = 0
 3371              	.LVL340:
 3372 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3373              	.LCFI47:
 3374              		.cfi_def_cfa_offset 24
 3375              		.cfi_offset 3, -24
 3376              		.cfi_offset 4, -20
 3377              		.cfi_offset 5, -16
ARM GAS  /tmp/ccY2tmJ9.s 			page 112


 3378              		.cfi_offset 6, -12
 3379              		.cfi_offset 7, -8
 3380              		.cfi_offset 14, -4
 3381              	.LVL341:
1879:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 3382              		.loc 1 1879 0
 3383 0002 70B1     		cbz	r0, .L310
 3384 0004 0446     		mov	r4, r0
1880:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 3385              		.loc 1 1880 0
 3386 0006 B9B9     		cbnz	r1, .L303
1880:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 3387              		.loc 1 1880 0 is_stmt 0 discriminator 2
 3388 0008 036C     		ldr	r3, [r0, #64]
 3389 000a ABB1     		cbz	r3, .L303
 3390              	.LBB222:
 3391              	.LBB223:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 3392              		.loc 2 195 0 is_stmt 1
 3393              		.syntax unified
 3394              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 3395 000c 4FF05003 			mov r3, #80												
 3396 0010 72B6     		cpsid i													
 3397 0012 83F31188 		msr basepri, r3											
 3398 0016 BFF36F8F 		isb														
 3399 001a BFF34F8F 		dsb														
 3400 001e 62B6     		cpsie i													
 3401              	
 3402              	@ 0 "" 2
 3403              	.LVL342:
 3404              		.thumb
 3405              		.syntax unified
 3406              	.L304:
 3407 0020 FEE7     		b	.L304
 3408              	.L310:
 3409              	.LBE223:
 3410              	.LBE222:
 3411              	.LBB224:
 3412              	.LBB225:
 3413              		.syntax unified
 3414              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 3415 0022 4FF05003 			mov r3, #80												
 3416 0026 72B6     		cpsid i													
 3417 0028 83F31188 		msr basepri, r3											
 3418 002c BFF36F8F 		isb														
 3419 0030 BFF34F8F 		dsb														
 3420 0034 62B6     		cpsie i													
 3421              	
 3422              	@ 0 "" 2
 3423              	.LVL343:
 3424              		.thumb
 3425              		.syntax unified
 3426              	.L302:
 3427 0036 FEE7     		b	.L302
 3428              	.L303:
 3429              	.LBE225:
 3430              	.LBE224:
ARM GAS  /tmp/ccY2tmJ9.s 			page 113


1881:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3431              		.loc 1 1881 0
 3432 0038 236C     		ldr	r3, [r4, #64]
 3433 003a 53B9     		cbnz	r3, .L305
 3434              	.LBB226:
 3435              	.LBB227:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 3436              		.loc 2 195 0
 3437              		.syntax unified
 3438              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 3439 003c 4FF05003 			mov r3, #80												
 3440 0040 72B6     		cpsid i													
 3441 0042 83F31188 		msr basepri, r3											
 3442 0046 BFF36F8F 		isb														
 3443 004a BFF34F8F 		dsb														
 3444 004e 62B6     		cpsie i													
 3445              	
 3446              	@ 0 "" 2
 3447              	.LVL344:
 3448              		.thumb
 3449              		.syntax unified
 3450              	.L306:
 3451 0050 FEE7     		b	.L306
 3452              	.L305:
 3453 0052 0D46     		mov	r5, r1
 3454              	.LBE227:
 3455              	.LBE226:
1897:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3456              		.loc 1 1897 0
 3457 0054 FFF7FEFF 		bl	vPortValidateInterruptPriority
 3458              	.LVL345:
 3459              	.LBB228:
 3460              	.LBB229:
 213:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 3461              		.loc 2 213 0
 3462              		.syntax unified
 3463              	@ 213 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 3464 0058 EFF31186 			mrs r6, basepri											
 3465 005c 4FF05003 		mov r3, #80												
 3466 0060 72B6     		cpsid i													
 3467 0062 83F31188 		msr basepri, r3											
 3468 0066 BFF36F8F 		isb														
 3469 006a BFF34F8F 		dsb														
 3470 006e 62B6     		cpsie i													
 3471              	
 3472              	@ 0 "" 2
 3473              		.thumb
 3474              		.syntax unified
 3475              	.LBE229:
 3476              	.LBE228:
1902:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 3477              		.loc 1 1902 0
 3478 0070 A36B     		ldr	r3, [r4, #56]
 3479 0072 4BB1     		cbz	r3, .L308
1908:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
 3480              		.loc 1 1908 0
 3481 0074 E768     		ldr	r7, [r4, #12]
ARM GAS  /tmp/ccY2tmJ9.s 			page 114


 3482              	.LVL346:
1909:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.xQueue.pcReadFrom = pcOriginalReadPosition;
 3483              		.loc 1 1909 0
 3484 0076 2946     		mov	r1, r5
 3485 0078 2046     		mov	r0, r4
 3486 007a FFF7FEFF 		bl	prvCopyDataFromQueue
 3487              	.LVL347:
1910:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3488              		.loc 1 1910 0
 3489 007e E760     		str	r7, [r4, #12]
 3490              	.LVL348:
1912:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 3491              		.loc 1 1912 0
 3492 0080 0120     		movs	r0, #1
 3493              	.LVL349:
 3494              	.L307:
 3495              	.LBB230:
 3496              	.LBB231:
 3497              		.loc 2 233 0
 3498              		.syntax unified
 3499              	@ 233 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 3500 0082 86F31188 			msr basepri, r6	
 3501              	@ 0 "" 2
 3502              	.LVL350:
 3503              		.thumb
 3504              		.syntax unified
 3505              	.LBE231:
 3506              	.LBE230:
1923:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 3507              		.loc 1 1923 0
 3508 0086 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3509              	.LVL351:
 3510              	.L308:
1916:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_PEEK_FROM_ISR_FAILED( pxQueue );
 3511              		.loc 1 1916 0
 3512 0088 0020     		movs	r0, #0
 3513 008a FAE7     		b	.L307
 3514              		.cfi_endproc
 3515              	.LFE23:
 3517              		.section	.text.uxQueueMessagesWaiting,"ax",%progbits
 3518              		.align	1
 3519              		.global	uxQueueMessagesWaiting
 3520              		.syntax unified
 3521              		.thumb
 3522              		.thumb_func
 3523              		.fpu fpv5-sp-d16
 3525              	uxQueueMessagesWaiting:
 3526              	.LFB24:
1927:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
 3527              		.loc 1 1927 0
 3528              		.cfi_startproc
 3529              		@ args = 0, pretend = 0, frame = 0
 3530              		@ frame_needed = 0, uses_anonymous_args = 0
 3531              	.LVL352:
1930:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3532              		.loc 1 1930 0
 3533 0000 50B9     		cbnz	r0, .L312
ARM GAS  /tmp/ccY2tmJ9.s 			page 115


 3534              	.LBB232:
 3535              	.LBB233:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 3536              		.loc 2 195 0
 3537              		.syntax unified
 3538              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 3539 0002 4FF05003 			mov r3, #80												
 3540 0006 72B6     		cpsid i													
 3541 0008 83F31188 		msr basepri, r3											
 3542 000c BFF36F8F 		isb														
 3543 0010 BFF34F8F 		dsb														
 3544 0014 62B6     		cpsie i													
 3545              	
 3546              	@ 0 "" 2
 3547              	.LVL353:
 3548              		.thumb
 3549              		.syntax unified
 3550              	.L313:
 3551 0016 FEE7     		b	.L313
 3552              	.L312:
 3553              	.LBE233:
 3554              	.LBE232:
1927:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
 3555              		.loc 1 1927 0
 3556 0018 10B5     		push	{r4, lr}
 3557              	.LCFI48:
 3558              		.cfi_def_cfa_offset 8
 3559              		.cfi_offset 4, -8
 3560              		.cfi_offset 14, -4
 3561 001a 0446     		mov	r4, r0
1932:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 3562              		.loc 1 1932 0
 3563 001c FFF7FEFF 		bl	vPortEnterCritical
 3564              	.LVL354:
1934:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 3565              		.loc 1 1934 0
 3566 0020 A46B     		ldr	r4, [r4, #56]
 3567              	.LVL355:
1936:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3568              		.loc 1 1936 0
 3569 0022 FFF7FEFF 		bl	vPortExitCritical
 3570              	.LVL356:
1939:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 3571              		.loc 1 1939 0
 3572 0026 2046     		mov	r0, r4
 3573 0028 10BD     		pop	{r4, pc}
 3574              		.cfi_endproc
 3575              	.LFE24:
 3577              		.section	.text.uxQueueSpacesAvailable,"ax",%progbits
 3578              		.align	1
 3579              		.global	uxQueueSpacesAvailable
 3580              		.syntax unified
 3581              		.thumb
 3582              		.thumb_func
 3583              		.fpu fpv5-sp-d16
 3585              	uxQueueSpacesAvailable:
 3586              	.LFB25:
ARM GAS  /tmp/ccY2tmJ9.s 			page 116


1943:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
 3587              		.loc 1 1943 0
 3588              		.cfi_startproc
 3589              		@ args = 0, pretend = 0, frame = 0
 3590              		@ frame_needed = 0, uses_anonymous_args = 0
 3591              	.LVL357:
1947:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3592              		.loc 1 1947 0
 3593 0000 50B9     		cbnz	r0, .L317
 3594              	.LBB234:
 3595              	.LBB235:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 3596              		.loc 2 195 0
 3597              		.syntax unified
 3598              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 3599 0002 4FF05003 			mov r3, #80												
 3600 0006 72B6     		cpsid i													
 3601 0008 83F31188 		msr basepri, r3											
 3602 000c BFF36F8F 		isb														
 3603 0010 BFF34F8F 		dsb														
 3604 0014 62B6     		cpsie i													
 3605              	
 3606              	@ 0 "" 2
 3607              	.LVL358:
 3608              		.thumb
 3609              		.syntax unified
 3610              	.L318:
 3611 0016 FEE7     		b	.L318
 3612              	.L317:
 3613              	.LBE235:
 3614              	.LBE234:
1943:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
 3615              		.loc 1 1943 0
 3616 0018 10B5     		push	{r4, lr}
 3617              	.LCFI49:
 3618              		.cfi_def_cfa_offset 8
 3619              		.cfi_offset 4, -8
 3620              		.cfi_offset 14, -4
 3621 001a 0446     		mov	r4, r0
1949:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 3622              		.loc 1 1949 0
 3623 001c FFF7FEFF 		bl	vPortEnterCritical
 3624              	.LVL359:
1951:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 3625              		.loc 1 1951 0
 3626 0020 E36B     		ldr	r3, [r4, #60]
 3627 0022 A46B     		ldr	r4, [r4, #56]
 3628              	.LVL360:
 3629 0024 1C1B     		subs	r4, r3, r4
 3630              	.LVL361:
1953:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3631              		.loc 1 1953 0
 3632 0026 FFF7FEFF 		bl	vPortExitCritical
 3633              	.LVL362:
1956:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 3634              		.loc 1 1956 0
 3635 002a 2046     		mov	r0, r4
ARM GAS  /tmp/ccY2tmJ9.s 			page 117


 3636 002c 10BD     		pop	{r4, pc}
 3637              		.cfi_endproc
 3638              	.LFE25:
 3640              		.section	.text.uxQueueMessagesWaitingFromISR,"ax",%progbits
 3641              		.align	1
 3642              		.global	uxQueueMessagesWaitingFromISR
 3643              		.syntax unified
 3644              		.thumb
 3645              		.thumb_func
 3646              		.fpu fpv5-sp-d16
 3648              	uxQueueMessagesWaitingFromISR:
 3649              	.LFB26:
1960:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
 3650              		.loc 1 1960 0
 3651              		.cfi_startproc
 3652              		@ args = 0, pretend = 0, frame = 0
 3653              		@ frame_needed = 0, uses_anonymous_args = 0
 3654              		@ link register save eliminated.
 3655              	.LVL363:
1964:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxReturn = pxQueue->uxMessagesWaiting;
 3656              		.loc 1 1964 0
 3657 0000 08B1     		cbz	r0, .L324
1965:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3658              		.loc 1 1965 0
 3659 0002 806B     		ldr	r0, [r0, #56]
 3660              	.LVL364:
1968:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 3661              		.loc 1 1968 0
 3662 0004 7047     		bx	lr
 3663              	.LVL365:
 3664              	.L324:
 3665              	.LBB236:
 3666              	.LBB237:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 3667              		.loc 2 195 0
 3668              		.syntax unified
 3669              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 3670 0006 4FF05003 			mov r3, #80												
 3671 000a 72B6     		cpsid i													
 3672 000c 83F31188 		msr basepri, r3											
 3673 0010 BFF36F8F 		isb														
 3674 0014 BFF34F8F 		dsb														
 3675 0018 62B6     		cpsie i													
 3676              	
 3677              	@ 0 "" 2
 3678              	.LVL366:
 3679              		.thumb
 3680              		.syntax unified
 3681              	.L323:
 3682 001a FEE7     		b	.L323
 3683              	.LBE237:
 3684              	.LBE236:
 3685              		.cfi_endproc
 3686              	.LFE26:
 3688              		.section	.text.xQueueIsQueueEmptyFromISR,"ax",%progbits
 3689              		.align	1
 3690              		.global	xQueueIsQueueEmptyFromISR
ARM GAS  /tmp/ccY2tmJ9.s 			page 118


 3691              		.syntax unified
 3692              		.thumb
 3693              		.thumb_func
 3694              		.fpu fpv5-sp-d16
 3696              	xQueueIsQueueEmptyFromISR:
 3697              	.LFB33:
2309:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 3698              		.loc 1 2309 0
 3699              		.cfi_startproc
 3700              		@ args = 0, pretend = 0, frame = 0
 3701              		@ frame_needed = 0, uses_anonymous_args = 0
 3702              		@ link register save eliminated.
 3703              	.LVL367:
2313:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
 3704              		.loc 1 2313 0
 3705 0000 18B1     		cbz	r0, .L330
2314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 3706              		.loc 1 2314 0
 3707 0002 836B     		ldr	r3, [r0, #56]
 3708 0004 63B9     		cbnz	r3, .L329
2316:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 3709              		.loc 1 2316 0
 3710 0006 0120     		movs	r0, #1
 3711              	.LVL368:
 3712 0008 7047     		bx	lr
 3713              	.LVL369:
 3714              	.L330:
 3715              	.LBB238:
 3716              	.LBB239:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 3717              		.loc 2 195 0
 3718              		.syntax unified
 3719              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 3720 000a 4FF05003 			mov r3, #80												
 3721 000e 72B6     		cpsid i													
 3722 0010 83F31188 		msr basepri, r3											
 3723 0014 BFF36F8F 		isb														
 3724 0018 BFF34F8F 		dsb														
 3725 001c 62B6     		cpsie i													
 3726              	
 3727              	@ 0 "" 2
 3728              	.LVL370:
 3729              		.thumb
 3730              		.syntax unified
 3731              	.L327:
 3732 001e FEE7     		b	.L327
 3733              	.L329:
 3734              	.LBE239:
 3735              	.LBE238:
2320:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 3736              		.loc 1 2320 0
 3737 0020 0020     		movs	r0, #0
 3738              	.LVL371:
2324:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 3739              		.loc 1 2324 0
 3740 0022 7047     		bx	lr
 3741              		.cfi_endproc
ARM GAS  /tmp/ccY2tmJ9.s 			page 119


 3742              	.LFE33:
 3744              		.section	.text.xQueueIsQueueFullFromISR,"ax",%progbits
 3745              		.align	1
 3746              		.global	xQueueIsQueueFullFromISR
 3747              		.syntax unified
 3748              		.thumb
 3749              		.thumb_func
 3750              		.fpu fpv5-sp-d16
 3752              	xQueueIsQueueFullFromISR:
 3753              	.LFB35:
2346:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2347:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2348:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueIsQueueFullFromISR( const QueueHandle_t xQueue )
2349:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 3754              		.loc 1 2349 0
 3755              		.cfi_startproc
 3756              		@ args = 0, pretend = 0, frame = 0
 3757              		@ frame_needed = 0, uses_anonymous_args = 0
 3758              		@ link register save eliminated.
 3759              	.LVL372:
2350:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
2351:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
2352:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2353:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 3760              		.loc 1 2353 0
 3761 0000 28B1     		cbz	r0, .L336
2354:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 3762              		.loc 1 2354 0
 3763 0002 826B     		ldr	r2, [r0, #56]
 3764 0004 C36B     		ldr	r3, [r0, #60]
 3765 0006 9A42     		cmp	r2, r3
 3766 0008 0CD1     		bne	.L335
2355:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2356:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xReturn = pdTRUE;
 3767              		.loc 1 2356 0
 3768 000a 0120     		movs	r0, #1
 3769              	.LVL373:
 3770 000c 7047     		bx	lr
 3771              	.LVL374:
 3772              	.L336:
 3773              	.LBB240:
 3774              	.LBB241:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 3775              		.loc 2 195 0
 3776              		.syntax unified
 3777              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 3778 000e 4FF05003 			mov r3, #80												
 3779 0012 72B6     		cpsid i													
 3780 0014 83F31188 		msr basepri, r3											
 3781 0018 BFF36F8F 		isb														
 3782 001c BFF34F8F 		dsb														
 3783 0020 62B6     		cpsie i													
 3784              	
 3785              	@ 0 "" 2
 3786              	.LVL375:
 3787              		.thumb
 3788              		.syntax unified
ARM GAS  /tmp/ccY2tmJ9.s 			page 120


 3789              	.L333:
 3790 0022 FEE7     		b	.L333
 3791              	.L335:
 3792              	.LBE241:
 3793              	.LBE240:
2357:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2358:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else
2359:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2360:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xReturn = pdFALSE;
 3794              		.loc 1 2360 0
 3795 0024 0020     		movs	r0, #0
 3796              	.LVL376:
2361:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2362:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2363:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
2364:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 3797              		.loc 1 2364 0
 3798 0026 7047     		bx	lr
 3799              		.cfi_endproc
 3800              	.LFE35:
 3802              		.section	.text.vQueueAddToRegistry,"ax",%progbits
 3803              		.align	1
 3804              		.global	vQueueAddToRegistry
 3805              		.syntax unified
 3806              		.thumb
 3807              		.thumb_func
 3808              		.fpu fpv5-sp-d16
 3810              	vQueueAddToRegistry:
 3811              	.LFB36:
2365:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2366:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2367:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2368:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2369:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueCRSend( QueueHandle_t xQueue, const void *pvItemToQueue, TickType_t xTicksToWait 
2370:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2371:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
2372:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = xQueue;
2373:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2374:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* If the queue is already full we may have to block.  A critical section
2375:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		is required to prevent an interrupt removing something from the queue
2376:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		between the check to see if the queue is full and blocking on the queue. */
2377:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portDISABLE_INTERRUPTS();
2378:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2379:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueFull( pxQueue ) != pdFALSE )
2380:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2381:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* The queue is full - do we want to block or just leave without
2382:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				posting? */
2383:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
2384:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2385:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* As this is called from a coroutine we cannot block directly, but
2386:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return indicating that we need to block. */
2387:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vCoRoutineAddToDelayedList( xTicksToWait, &( pxQueue->xTasksWaitingToSend ) );
2388:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portENABLE_INTERRUPTS();
2389:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_BLOCKED;
2390:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2391:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2392:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
ARM GAS  /tmp/ccY2tmJ9.s 			page 121


2393:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portENABLE_INTERRUPTS();
2394:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_FULL;
2395:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2396:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2397:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2398:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portENABLE_INTERRUPTS();
2399:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2400:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portDISABLE_INTERRUPTS();
2401:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2402:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
2403:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2404:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* There is room in the queue, copy the data into the queue. */
2405:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvCopyDataToQueue( pxQueue, pvItemToQueue, queueSEND_TO_BACK );
2406:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = pdPASS;
2407:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2408:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Were any co-routines waiting for data to become available? */
2409:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2410:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2411:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* In this instance the co-routine could be placed directly
2412:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					into the ready list as we are within a critical section.
2413:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					Instead the same pending ready list mechanism is used as if
2414:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the event were caused from within an interrupt. */
2415:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2416:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2417:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The co-routine waiting has a higher priority so record
2418:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						that a yield might be appropriate. */
2419:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						xReturn = errQUEUE_YIELD;
2420:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2421:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2422:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2423:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2424:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2425:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2426:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2427:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2428:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2429:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2430:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2431:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2432:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2433:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = errQUEUE_FULL;
2434:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2435:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2436:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portENABLE_INTERRUPTS();
2437:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2438:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
2439:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2440:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2441:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2442:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2443:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2444:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2445:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2446:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueCRReceive( QueueHandle_t xQueue, void *pvBuffer, TickType_t xTicksToWait )
2447:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2448:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
2449:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = xQueue;
ARM GAS  /tmp/ccY2tmJ9.s 			page 122


2450:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2451:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* If the queue is already empty we may have to block.  A critical section
2452:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		is required to prevent an interrupt adding something to the queue
2453:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		between the check to see if the queue is empty and blocking on the queue. */
2454:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portDISABLE_INTERRUPTS();
2455:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2456:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
2457:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2458:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* There are no messages in the queue, do we want to block or just
2459:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				leave with nothing? */
2460:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
2461:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2462:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* As this is a co-routine we cannot block directly, but return
2463:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					indicating that we need to block. */
2464:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vCoRoutineAddToDelayedList( xTicksToWait, &( pxQueue->xTasksWaitingToReceive ) );
2465:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portENABLE_INTERRUPTS();
2466:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_BLOCKED;
2467:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2468:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2469:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2470:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portENABLE_INTERRUPTS();
2471:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_FULL;
2472:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2473:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2474:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2475:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2476:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2477:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2478:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2479:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portENABLE_INTERRUPTS();
2480:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2481:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portDISABLE_INTERRUPTS();
2482:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2483:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
2484:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2485:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Data is available from the queue. */
2486:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize;
2487:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail )
2488:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2489:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
2490:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2491:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2492:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2493:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2494:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2495:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				--( pxQueue->uxMessagesWaiting );
2496:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( unsigned ) pxQ
2497:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2498:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = pdPASS;
2499:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2500:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Were any co-routines waiting for space to become available? */
2501:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2502:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2503:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* In this instance the co-routine could be placed directly
2504:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					into the ready list as we are within a critical section.
2505:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					Instead the same pending ready list mechanism is used as if
2506:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the event were caused from within an interrupt. */
ARM GAS  /tmp/ccY2tmJ9.s 			page 123


2507:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2508:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2509:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						xReturn = errQUEUE_YIELD;
2510:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2511:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2512:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2513:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2514:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2515:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2516:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2517:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2518:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2519:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2520:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2521:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2522:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2523:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = pdFAIL;
2524:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2525:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2526:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portENABLE_INTERRUPTS();
2527:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2528:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
2529:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2530:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2531:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2532:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2533:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2534:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2535:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2536:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueCRSendFromISR( QueueHandle_t xQueue, const void *pvItemToQueue, BaseType_t xCoRou
2537:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2538:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = xQueue;
2539:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2540:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Cannot block within an ISR so if there is no space on the queue then
2541:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		exit without doing anything. */
2542:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
2543:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2544:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvCopyDataToQueue( pxQueue, pvItemToQueue, queueSEND_TO_BACK );
2545:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2546:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* We only want to wake one co-routine per ISR, so check that a
2547:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			co-routine has not already been woken. */
2548:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xCoRoutinePreviouslyWoken == pdFALSE )
2549:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2550:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2551:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2552:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2553:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2554:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						return pdTRUE;
2555:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2556:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2557:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2558:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2559:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2560:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2561:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2562:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2563:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
ARM GAS  /tmp/ccY2tmJ9.s 			page 124


2564:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2565:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2566:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2567:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2568:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2569:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2570:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2571:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2572:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2573:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2574:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2575:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2576:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xCoRoutinePreviouslyWoken;
2577:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2578:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2579:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2580:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2581:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2582:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2583:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2584:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueCRReceiveFromISR( QueueHandle_t xQueue, void *pvBuffer, BaseType_t *pxCoRoutineWo
2585:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2586:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
2587:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = xQueue;
2588:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2589:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* We cannot block from an ISR, so check there is data available. If
2590:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		not then just leave without doing anything. */
2591:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
2592:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2593:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Copy the data from the queue. */
2594:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize;
2595:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail )
2596:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2597:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
2598:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2599:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2600:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2601:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2602:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2603:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			--( pxQueue->uxMessagesWaiting );
2604:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( unsigned ) pxQu
2605:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2606:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( ( *pxCoRoutineWoken ) == pdFALSE )
2607:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2608:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2609:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2610:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2611:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2612:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						*pxCoRoutineWoken = pdTRUE;
2613:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2614:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2615:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2616:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2617:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2618:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2619:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2620:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
ARM GAS  /tmp/ccY2tmJ9.s 			page 125


2621:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2622:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2623:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2624:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2625:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2626:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2627:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2628:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2629:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
2630:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2631:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2632:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2633:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFAIL;
2634:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2635:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2636:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
2637:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2638:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2639:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2640:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2641:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2642:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2643:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2644:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified
2645:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 3812              		.loc 1 2645 0
 3813              		.cfi_startproc
 3814              		@ args = 0, pretend = 0, frame = 0
 3815              		@ frame_needed = 0, uses_anonymous_args = 0
 3816              		@ link register save eliminated.
 3817              	.LVL377:
2646:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t ux;
2647:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2648:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* See if there is an empty space in the registry.  A NULL name denotes
2649:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		a free slot. */
2650:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 3818              		.loc 1 2650 0
 3819 0000 0023     		movs	r3, #0
 3820              	.LVL378:
 3821              	.L338:
 3822              		.loc 1 2650 0 is_stmt 0 discriminator 1
 3823 0002 072B     		cmp	r3, #7
 3824 0004 0CD8     		bhi	.L342
2651:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2652:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 3825              		.loc 1 2652 0 is_stmt 1
 3826 0006 074A     		ldr	r2, .L344
 3827 0008 52F83320 		ldr	r2, [r2, r3, lsl #3]
 3828 000c 0AB1     		cbz	r2, .L343
2650:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 3829              		.loc 1 2650 0 discriminator 2
 3830 000e 0133     		adds	r3, r3, #1
 3831              	.LVL379:
 3832 0010 F7E7     		b	.L338
 3833              	.L343:
2653:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2654:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Store the information on this queue. */
ARM GAS  /tmp/ccY2tmJ9.s 			page 126


2655:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 3834              		.loc 1 2655 0
 3835 0012 044A     		ldr	r2, .L344
 3836 0014 42F83310 		str	r1, [r2, r3, lsl #3]
2656:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].xHandle = xQueue;
 3837              		.loc 1 2656 0
 3838 0018 02EBC303 		add	r3, r2, r3, lsl #3
 3839              	.LVL380:
 3840 001c 5860     		str	r0, [r3, #4]
2657:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2658:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_REGISTRY_ADD( xQueue, pcQueueName );
2659:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				break;
 3841              		.loc 1 2659 0
 3842 001e 7047     		bx	lr
 3843              	.LVL381:
 3844              	.L342:
2660:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2661:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2662:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2663:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2664:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2665:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2666:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 3845              		.loc 1 2666 0
 3846 0020 7047     		bx	lr
 3847              	.L345:
 3848 0022 00BF     		.align	2
 3849              	.L344:
 3850 0024 00000000 		.word	xQueueRegistry
 3851              		.cfi_endproc
 3852              	.LFE36:
 3854              		.section	.text.pcQueueGetName,"ax",%progbits
 3855              		.align	1
 3856              		.global	pcQueueGetName
 3857              		.syntax unified
 3858              		.thumb
 3859              		.thumb_func
 3860              		.fpu fpv5-sp-d16
 3862              	pcQueueGetName:
 3863              	.LFB37:
2667:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2668:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
2669:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2670:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2671:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2672:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2673:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	const char *pcQueueGetName( QueueHandle_t xQueue ) /*lint !e971 Unqualified char types are allowed
2674:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 3864              		.loc 1 2674 0
 3865              		.cfi_startproc
 3866              		@ args = 0, pretend = 0, frame = 0
 3867              		@ frame_needed = 0, uses_anonymous_args = 0
 3868              		@ link register save eliminated.
 3869              	.LVL382:
2675:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t ux;
2676:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	const char *pcReturn = NULL; /*lint !e971 Unqualified char types are allowed for strings and singl
2677:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/ccY2tmJ9.s 			page 127


2678:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Note there is nothing here to protect against another task adding or
2679:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		removing entries from the registry while it is being searched. */
2680:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 3870              		.loc 1 2680 0
 3871 0000 0023     		movs	r3, #0
 3872              	.LVL383:
 3873              	.L347:
 3874              		.loc 1 2680 0 is_stmt 0 discriminator 1
 3875 0002 072B     		cmp	r3, #7
 3876 0004 0BD8     		bhi	.L351
2681:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2682:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xQueueRegistry[ ux ].xHandle == xQueue )
 3877              		.loc 1 2682 0 is_stmt 1
 3878 0006 074A     		ldr	r2, .L353
 3879 0008 02EBC302 		add	r2, r2, r3, lsl #3
 3880 000c 5268     		ldr	r2, [r2, #4]
 3881 000e 8242     		cmp	r2, r0
 3882 0010 01D0     		beq	.L352
2680:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 3883              		.loc 1 2680 0 discriminator 2
 3884 0012 0133     		adds	r3, r3, #1
 3885              	.LVL384:
 3886 0014 F5E7     		b	.L347
 3887              	.L352:
2683:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2684:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pcReturn = xQueueRegistry[ ux ].pcQueueName;
 3888              		.loc 1 2684 0
 3889 0016 034A     		ldr	r2, .L353
 3890 0018 52F83300 		ldr	r0, [r2, r3, lsl #3]
 3891              	.LVL385:
2685:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				break;
 3892              		.loc 1 2685 0
 3893 001c 7047     		bx	lr
 3894              	.LVL386:
 3895              	.L351:
2676:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3896              		.loc 1 2676 0
 3897 001e 0020     		movs	r0, #0
 3898              	.LVL387:
2686:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2687:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2688:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2689:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2690:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2691:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2692:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2693:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pcReturn;
2694:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint !e818 xQueue cannot be a pointer to const because it is a typedef. */
 3899              		.loc 1 2694 0
 3900 0020 7047     		bx	lr
 3901              	.L354:
 3902 0022 00BF     		.align	2
 3903              	.L353:
 3904 0024 00000000 		.word	xQueueRegistry
 3905              		.cfi_endproc
 3906              	.LFE37:
 3908              		.section	.text.vQueueUnregisterQueue,"ax",%progbits
ARM GAS  /tmp/ccY2tmJ9.s 			page 128


 3909              		.align	1
 3910              		.global	vQueueUnregisterQueue
 3911              		.syntax unified
 3912              		.thumb
 3913              		.thumb_func
 3914              		.fpu fpv5-sp-d16
 3916              	vQueueUnregisterQueue:
 3917              	.LFB38:
2695:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2696:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
2697:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2698:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2699:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2700:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2701:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void vQueueUnregisterQueue( QueueHandle_t xQueue )
2702:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 3918              		.loc 1 2702 0
 3919              		.cfi_startproc
 3920              		@ args = 0, pretend = 0, frame = 0
 3921              		@ frame_needed = 0, uses_anonymous_args = 0
 3922              		@ link register save eliminated.
 3923              	.LVL388:
2703:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t ux;
2704:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2705:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* See if the handle of the queue being unregistered in actually in the
2706:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		registry. */
2707:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 3924              		.loc 1 2707 0
 3925 0000 0023     		movs	r3, #0
 3926              	.LVL389:
 3927              	.L356:
 3928              		.loc 1 2707 0 is_stmt 0 discriminator 1
 3929 0002 072B     		cmp	r3, #7
 3930 0004 0FD8     		bhi	.L360
2708:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2709:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xQueueRegistry[ ux ].xHandle == xQueue )
 3931              		.loc 1 2709 0 is_stmt 1
 3932 0006 084A     		ldr	r2, .L362
 3933 0008 02EBC302 		add	r2, r2, r3, lsl #3
 3934 000c 5268     		ldr	r2, [r2, #4]
 3935 000e 8242     		cmp	r2, r0
 3936 0010 01D0     		beq	.L361
2707:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 3937              		.loc 1 2707 0 discriminator 2
 3938 0012 0133     		adds	r3, r3, #1
 3939              	.LVL390:
 3940 0014 F5E7     		b	.L356
 3941              	.L361:
2710:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2711:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Set the name to NULL to show that this slot if free again. */
2712:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].pcQueueName = NULL;
 3942              		.loc 1 2712 0
 3943 0016 044A     		ldr	r2, .L362
 3944 0018 0021     		movs	r1, #0
 3945 001a 42F83310 		str	r1, [r2, r3, lsl #3]
2713:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2714:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Set the handle to NULL to ensure the same queue handle cannot
ARM GAS  /tmp/ccY2tmJ9.s 			page 129


2715:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				appear in the registry twice if it is added, removed, then
2716:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				added again. */
2717:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 3946              		.loc 1 2717 0
 3947 001e 02EBC303 		add	r3, r2, r3, lsl #3
 3948              	.LVL391:
 3949 0022 5960     		str	r1, [r3, #4]
2718:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				break;
 3950              		.loc 1 2718 0
 3951 0024 7047     		bx	lr
 3952              	.LVL392:
 3953              	.L360:
2719:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2720:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2721:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2722:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2723:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2724:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2725:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2726:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 3954              		.loc 1 2726 0
 3955 0026 7047     		bx	lr
 3956              	.L363:
 3957              		.align	2
 3958              	.L362:
 3959 0028 00000000 		.word	xQueueRegistry
 3960              		.cfi_endproc
 3961              	.LFE38:
 3963              		.section	.text.vQueueDelete,"ax",%progbits
 3964              		.align	1
 3965              		.global	vQueueDelete
 3966              		.syntax unified
 3967              		.thumb
 3968              		.thumb_func
 3969              		.fpu fpv5-sp-d16
 3971              	vQueueDelete:
 3972              	.LFB27:
1972:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
 3973              		.loc 1 1972 0
 3974              		.cfi_startproc
 3975              		@ args = 0, pretend = 0, frame = 0
 3976              		@ frame_needed = 0, uses_anonymous_args = 0
 3977              	.LVL393:
1975:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	traceQUEUE_DELETE( pxQueue );
 3978              		.loc 1 1975 0
 3979 0000 50B9     		cbnz	r0, .L365
 3980              	.LBB242:
 3981              	.LBB243:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 3982              		.loc 2 195 0
 3983              		.syntax unified
 3984              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 3985 0002 4FF05003 			mov r3, #80												
 3986 0006 72B6     		cpsid i													
 3987 0008 83F31188 		msr basepri, r3											
 3988 000c BFF36F8F 		isb														
 3989 0010 BFF34F8F 		dsb														
ARM GAS  /tmp/ccY2tmJ9.s 			page 130


 3990 0014 62B6     		cpsie i													
 3991              	
 3992              	@ 0 "" 2
 3993              	.LVL394:
 3994              		.thumb
 3995              		.syntax unified
 3996              	.L366:
 3997 0016 FEE7     		b	.L366
 3998              	.L365:
 3999              	.LBE243:
 4000              	.LBE242:
1972:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
 4001              		.loc 1 1972 0
 4002 0018 10B5     		push	{r4, lr}
 4003              	.LCFI50:
 4004              		.cfi_def_cfa_offset 8
 4005              		.cfi_offset 4, -8
 4006              		.cfi_offset 14, -4
 4007 001a 0446     		mov	r4, r0
1980:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 4008              		.loc 1 1980 0
 4009 001c FFF7FEFF 		bl	vQueueUnregisterQueue
 4010              	.LVL395:
1994:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 4011              		.loc 1 1994 0
 4012 0020 94F84630 		ldrb	r3, [r4, #70]	@ zero_extendqisi2
 4013 0024 03B1     		cbz	r3, .L370
 4014              	.L364:
2010:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 4015              		.loc 1 2010 0
 4016 0026 10BD     		pop	{r4, pc}
 4017              	.LVL396:
 4018              	.L370:
1996:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 4019              		.loc 1 1996 0
 4020 0028 2046     		mov	r0, r4
 4021 002a FFF7FEFF 		bl	vPortFree
 4022              	.LVL397:
2010:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 4023              		.loc 1 2010 0
 4024 002e FAE7     		b	.L364
 4025              		.cfi_endproc
 4026              	.LFE27:
 4028              		.comm	xQueueRegistry,64,4
 4029              		.text
 4030              	.Letext0:
 4031              		.file 3 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 4032              		.file 4 "/usr/include/newlib/machine/_default_types.h"
 4033              		.file 5 "/usr/include/newlib/sys/lock.h"
 4034              		.file 6 "/usr/include/newlib/sys/_types.h"
 4035              		.file 7 "/usr/include/newlib/sys/reent.h"
 4036              		.file 8 "/usr/include/newlib/stdlib.h"
 4037              		.file 9 "/usr/include/newlib/sys/_stdint.h"
 4038              		.file 10 "Core/Inc/FreeRTOSConfig.h"
 4039              		.file 11 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 4040              		.file 12 "Middlewares/Third_Party/FreeRTOS/Source/include/list.h"
 4041              		.file 13 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
ARM GAS  /tmp/ccY2tmJ9.s 			page 131


 4042              		.file 14 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 4043              		.file 15 "Middlewares/Third_Party/FreeRTOS/Source/include/portable.h"
 4044              		.file 16 "<built-in>"
ARM GAS  /tmp/ccY2tmJ9.s 			page 132


DEFINED SYMBOLS
                            *ABS*:0000000000000000 queue.c
     /tmp/ccY2tmJ9.s:18     .text.prvGetDisinheritPriorityAfterTimeout:0000000000000000 $t
     /tmp/ccY2tmJ9.s:24     .text.prvGetDisinheritPriorityAfterTimeout:0000000000000000 prvGetDisinheritPriorityAfterTimeout
     /tmp/ccY2tmJ9.s:54     .text.prvIsQueueFull:0000000000000000 $t
     /tmp/ccY2tmJ9.s:60     .text.prvIsQueueFull:0000000000000000 prvIsQueueFull
     /tmp/ccY2tmJ9.s:101    .text.prvIsQueueEmpty:0000000000000000 $t
     /tmp/ccY2tmJ9.s:107    .text.prvIsQueueEmpty:0000000000000000 prvIsQueueEmpty
     /tmp/ccY2tmJ9.s:146    .text.prvCopyDataToQueue:0000000000000000 $t
     /tmp/ccY2tmJ9.s:152    .text.prvCopyDataToQueue:0000000000000000 prvCopyDataToQueue
     /tmp/ccY2tmJ9.s:271    .text.prvCopyDataFromQueue:0000000000000000 $t
     /tmp/ccY2tmJ9.s:277    .text.prvCopyDataFromQueue:0000000000000000 prvCopyDataFromQueue
     /tmp/ccY2tmJ9.s:326    .text.prvUnlockQueue:0000000000000000 $t
     /tmp/ccY2tmJ9.s:332    .text.prvUnlockQueue:0000000000000000 prvUnlockQueue
     /tmp/ccY2tmJ9.s:438    .text.xQueueGenericReset:0000000000000000 $t
     /tmp/ccY2tmJ9.s:445    .text.xQueueGenericReset:0000000000000000 xQueueGenericReset
     /tmp/ccY2tmJ9.s:556    .text.xQueueGenericReset:0000000000000084 $d
     /tmp/ccY2tmJ9.s:561    .text.prvInitialiseNewQueue:0000000000000000 $t
     /tmp/ccY2tmJ9.s:567    .text.prvInitialiseNewQueue:0000000000000000 prvInitialiseNewQueue
     /tmp/ccY2tmJ9.s:609    .text.xQueueGenericCreateStatic:0000000000000000 $t
     /tmp/ccY2tmJ9.s:616    .text.xQueueGenericCreateStatic:0000000000000000 xQueueGenericCreateStatic
     /tmp/ccY2tmJ9.s:796    .text.xQueueGenericCreate:0000000000000000 $t
     /tmp/ccY2tmJ9.s:803    .text.xQueueGenericCreate:0000000000000000 xQueueGenericCreate
     /tmp/ccY2tmJ9.s:895    .text.xQueueCreateCountingSemaphoreStatic:0000000000000000 $t
     /tmp/ccY2tmJ9.s:902    .text.xQueueCreateCountingSemaphoreStatic:0000000000000000 xQueueCreateCountingSemaphoreStatic
     /tmp/ccY2tmJ9.s:994    .text.xQueueCreateCountingSemaphore:0000000000000000 $t
     /tmp/ccY2tmJ9.s:1001   .text.xQueueCreateCountingSemaphore:0000000000000000 xQueueCreateCountingSemaphore
     /tmp/ccY2tmJ9.s:1082   .text.xQueueGenericSend:0000000000000000 $t
     /tmp/ccY2tmJ9.s:1089   .text.xQueueGenericSend:0000000000000000 xQueueGenericSend
     /tmp/ccY2tmJ9.s:1421   .text.xQueueGenericSend:0000000000000188 $d
     /tmp/ccY2tmJ9.s:1426   .text.prvInitialiseMutex:0000000000000000 $t
     /tmp/ccY2tmJ9.s:1432   .text.prvInitialiseMutex:0000000000000000 prvInitialiseMutex
     /tmp/ccY2tmJ9.s:1472   .text.xQueueCreateMutex:0000000000000000 $t
     /tmp/ccY2tmJ9.s:1479   .text.xQueueCreateMutex:0000000000000000 xQueueCreateMutex
     /tmp/ccY2tmJ9.s:1511   .text.xQueueCreateMutexStatic:0000000000000000 $t
     /tmp/ccY2tmJ9.s:1518   .text.xQueueCreateMutexStatic:0000000000000000 xQueueCreateMutexStatic
     /tmp/ccY2tmJ9.s:1560   .text.xQueueGiveMutexRecursive:0000000000000000 $t
     /tmp/ccY2tmJ9.s:1567   .text.xQueueGiveMutexRecursive:0000000000000000 xQueueGiveMutexRecursive
     /tmp/ccY2tmJ9.s:1643   .text.xQueueGenericSendFromISR:0000000000000000 $t
     /tmp/ccY2tmJ9.s:1650   .text.xQueueGenericSendFromISR:0000000000000000 xQueueGenericSendFromISR
     /tmp/ccY2tmJ9.s:1856   .text.xQueueGiveFromISR:0000000000000000 $t
     /tmp/ccY2tmJ9.s:1863   .text.xQueueGiveFromISR:0000000000000000 xQueueGiveFromISR
     /tmp/ccY2tmJ9.s:2079   .text.xQueueReceive:0000000000000000 $t
     /tmp/ccY2tmJ9.s:2086   .text.xQueueReceive:0000000000000000 xQueueReceive
     /tmp/ccY2tmJ9.s:2389   .text.xQueueReceive:0000000000000160 $d
     /tmp/ccY2tmJ9.s:2394   .text.xQueueSemaphoreTake:0000000000000000 $t
     /tmp/ccY2tmJ9.s:2401   .text.xQueueSemaphoreTake:0000000000000000 xQueueSemaphoreTake
     /tmp/ccY2tmJ9.s:2768   .text.xQueueSemaphoreTake:00000000000001a8 $d
     /tmp/ccY2tmJ9.s:2773   .text.xQueueTakeMutexRecursive:0000000000000000 $t
     /tmp/ccY2tmJ9.s:2780   .text.xQueueTakeMutexRecursive:0000000000000000 xQueueTakeMutexRecursive
     /tmp/ccY2tmJ9.s:2858   .text.xQueuePeek:0000000000000000 $t
     /tmp/ccY2tmJ9.s:2865   .text.xQueuePeek:0000000000000000 xQueuePeek
     /tmp/ccY2tmJ9.s:3169   .text.xQueuePeek:0000000000000160 $d
     /tmp/ccY2tmJ9.s:3174   .text.xQueueReceiveFromISR:0000000000000000 $t
     /tmp/ccY2tmJ9.s:3181   .text.xQueueReceiveFromISR:0000000000000000 xQueueReceiveFromISR
     /tmp/ccY2tmJ9.s:3358   .text.xQueuePeekFromISR:0000000000000000 $t
     /tmp/ccY2tmJ9.s:3365   .text.xQueuePeekFromISR:0000000000000000 xQueuePeekFromISR
ARM GAS  /tmp/ccY2tmJ9.s 			page 133


     /tmp/ccY2tmJ9.s:3518   .text.uxQueueMessagesWaiting:0000000000000000 $t
     /tmp/ccY2tmJ9.s:3525   .text.uxQueueMessagesWaiting:0000000000000000 uxQueueMessagesWaiting
     /tmp/ccY2tmJ9.s:3578   .text.uxQueueSpacesAvailable:0000000000000000 $t
     /tmp/ccY2tmJ9.s:3585   .text.uxQueueSpacesAvailable:0000000000000000 uxQueueSpacesAvailable
     /tmp/ccY2tmJ9.s:3641   .text.uxQueueMessagesWaitingFromISR:0000000000000000 $t
     /tmp/ccY2tmJ9.s:3648   .text.uxQueueMessagesWaitingFromISR:0000000000000000 uxQueueMessagesWaitingFromISR
     /tmp/ccY2tmJ9.s:3689   .text.xQueueIsQueueEmptyFromISR:0000000000000000 $t
     /tmp/ccY2tmJ9.s:3696   .text.xQueueIsQueueEmptyFromISR:0000000000000000 xQueueIsQueueEmptyFromISR
     /tmp/ccY2tmJ9.s:3745   .text.xQueueIsQueueFullFromISR:0000000000000000 $t
     /tmp/ccY2tmJ9.s:3752   .text.xQueueIsQueueFullFromISR:0000000000000000 xQueueIsQueueFullFromISR
     /tmp/ccY2tmJ9.s:3803   .text.vQueueAddToRegistry:0000000000000000 $t
     /tmp/ccY2tmJ9.s:3810   .text.vQueueAddToRegistry:0000000000000000 vQueueAddToRegistry
     /tmp/ccY2tmJ9.s:3850   .text.vQueueAddToRegistry:0000000000000024 $d
                            *COM*:0000000000000040 xQueueRegistry
     /tmp/ccY2tmJ9.s:3855   .text.pcQueueGetName:0000000000000000 $t
     /tmp/ccY2tmJ9.s:3862   .text.pcQueueGetName:0000000000000000 pcQueueGetName
     /tmp/ccY2tmJ9.s:3904   .text.pcQueueGetName:0000000000000024 $d
     /tmp/ccY2tmJ9.s:3909   .text.vQueueUnregisterQueue:0000000000000000 $t
     /tmp/ccY2tmJ9.s:3916   .text.vQueueUnregisterQueue:0000000000000000 vQueueUnregisterQueue
     /tmp/ccY2tmJ9.s:3959   .text.vQueueUnregisterQueue:0000000000000028 $d
     /tmp/ccY2tmJ9.s:3964   .text.vQueueDelete:0000000000000000 $t
     /tmp/ccY2tmJ9.s:3971   .text.vQueueDelete:0000000000000000 vQueueDelete

UNDEFINED SYMBOLS
vPortEnterCritical
vPortExitCritical
xTaskPriorityDisinherit
memcpy
vTaskMissedYield
xTaskRemoveFromEventList
vListInitialise
pvPortMalloc
xTaskGetSchedulerState
vTaskInternalSetTimeOutState
xTaskResumeAll
vTaskSuspendAll
xTaskCheckForTimeOut
vTaskPlaceOnEventList
xTaskGetCurrentTaskHandle
vPortValidateInterruptPriority
pvTaskIncrementMutexHeldCount
xTaskPriorityInherit
vTaskPriorityDisinheritAfterTimeout
vPortFree
