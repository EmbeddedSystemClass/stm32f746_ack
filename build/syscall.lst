ARM GAS  /tmp/ccmVCczY.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"syscall.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.ff_cre_syncobj,"ax",%progbits
  18              		.align	1
  19              		.global	ff_cre_syncobj
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-sp-d16
  25              	ff_cre_syncobj:
  26              	.LFB146:
  27              		.file 1 "Middlewares/Third_Party/FatFs/src/option/syscall.c"
   1:Middlewares/Third_Party/FatFs/src/option/syscall.c **** /*------------------------------------------------------------------------*/
   2:Middlewares/Third_Party/FatFs/src/option/syscall.c **** /* Sample code of OS dependent controls for FatFs                         */
   3:Middlewares/Third_Party/FatFs/src/option/syscall.c **** /* (C)ChaN, 2014                                                          */
   4:Middlewares/Third_Party/FatFs/src/option/syscall.c **** /*   Portions COPYRIGHT 2017 STMicroelectronics                           */
   5:Middlewares/Third_Party/FatFs/src/option/syscall.c **** /*   Portions Copyright (C) 2014, ChaN, all right reserved                */
   6:Middlewares/Third_Party/FatFs/src/option/syscall.c **** /*------------------------------------------------------------------------*/
   7:Middlewares/Third_Party/FatFs/src/option/syscall.c **** 
   8:Middlewares/Third_Party/FatFs/src/option/syscall.c **** /**
   9:Middlewares/Third_Party/FatFs/src/option/syscall.c ****   ******************************************************************************
  10:Middlewares/Third_Party/FatFs/src/option/syscall.c ****   * @attention
  11:Middlewares/Third_Party/FatFs/src/option/syscall.c ****   *
  12:Middlewares/Third_Party/FatFs/src/option/syscall.c ****   * Copyright (c) 2017 STMicroelectronics. All rights reserved.
  13:Middlewares/Third_Party/FatFs/src/option/syscall.c ****   *
  14:Middlewares/Third_Party/FatFs/src/option/syscall.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  15:Middlewares/Third_Party/FatFs/src/option/syscall.c ****   * the "License"; You may not use this file except in compliance with the
  16:Middlewares/Third_Party/FatFs/src/option/syscall.c ****   * License. You may obtain a copy of the License at:
  17:Middlewares/Third_Party/FatFs/src/option/syscall.c ****   *                       opensource.org/licenses/BSD-3-Clause
  18:Middlewares/Third_Party/FatFs/src/option/syscall.c ****   *
  19:Middlewares/Third_Party/FatFs/src/option/syscall.c ****   ******************************************************************************
  20:Middlewares/Third_Party/FatFs/src/option/syscall.c **** **/
  21:Middlewares/Third_Party/FatFs/src/option/syscall.c **** 
  22:Middlewares/Third_Party/FatFs/src/option/syscall.c **** 
  23:Middlewares/Third_Party/FatFs/src/option/syscall.c **** 
  24:Middlewares/Third_Party/FatFs/src/option/syscall.c **** #include "../ff.h"
  25:Middlewares/Third_Party/FatFs/src/option/syscall.c **** 
  26:Middlewares/Third_Party/FatFs/src/option/syscall.c **** 
  27:Middlewares/Third_Party/FatFs/src/option/syscall.c **** #if _FS_REENTRANT
  28:Middlewares/Third_Party/FatFs/src/option/syscall.c **** /*------------------------------------------------------------------------*/
  29:Middlewares/Third_Party/FatFs/src/option/syscall.c **** /* Create a Synchronization Object                                        */
  30:Middlewares/Third_Party/FatFs/src/option/syscall.c **** /*------------------------------------------------------------------------*/
  31:Middlewares/Third_Party/FatFs/src/option/syscall.c **** /* This function is called in f_mount() function to create a new
ARM GAS  /tmp/ccmVCczY.s 			page 2


  32:Middlewares/Third_Party/FatFs/src/option/syscall.c **** /  synchronization object, such as semaphore and mutex. When a 0 is returned,
  33:Middlewares/Third_Party/FatFs/src/option/syscall.c **** /  the f_mount() function fails with FR_INT_ERR.
  34:Middlewares/Third_Party/FatFs/src/option/syscall.c **** */
  35:Middlewares/Third_Party/FatFs/src/option/syscall.c **** 
  36:Middlewares/Third_Party/FatFs/src/option/syscall.c **** int ff_cre_syncobj (	/* 1:Function succeeded, 0:Could not create the sync object */
  37:Middlewares/Third_Party/FatFs/src/option/syscall.c **** 	BYTE vol,			/* Corresponding volume (logical drive number) */
  38:Middlewares/Third_Party/FatFs/src/option/syscall.c **** 	_SYNC_t *sobj		/* Pointer to return the created sync object */
  39:Middlewares/Third_Party/FatFs/src/option/syscall.c **** )
  40:Middlewares/Third_Party/FatFs/src/option/syscall.c **** {
  28              		.loc 1 40 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 10B5     		push	{r4, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 4, -8
  37              		.cfi_offset 14, -4
  38 0002 82B0     		sub	sp, sp, #8
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 16
  41 0004 0C46     		mov	r4, r1
  41:Middlewares/Third_Party/FatFs/src/option/syscall.c **** 
  42:Middlewares/Third_Party/FatFs/src/option/syscall.c ****     int ret;
  43:Middlewares/Third_Party/FatFs/src/option/syscall.c **** #if _USE_MUTEX
  44:Middlewares/Third_Party/FatFs/src/option/syscall.c **** 
  45:Middlewares/Third_Party/FatFs/src/option/syscall.c **** #if (osCMSIS < 0x20000U)
  46:Middlewares/Third_Party/FatFs/src/option/syscall.c ****     osMutexDef(MTX);
  47:Middlewares/Third_Party/FatFs/src/option/syscall.c ****     *sobj = osMutexCreate(osMutex(MTX));
  48:Middlewares/Third_Party/FatFs/src/option/syscall.c **** #else
  49:Middlewares/Third_Party/FatFs/src/option/syscall.c ****     *sobj = osMutexNew(NULL);
  50:Middlewares/Third_Party/FatFs/src/option/syscall.c **** #endif
  51:Middlewares/Third_Party/FatFs/src/option/syscall.c **** 
  52:Middlewares/Third_Party/FatFs/src/option/syscall.c **** #else
  53:Middlewares/Third_Party/FatFs/src/option/syscall.c **** 
  54:Middlewares/Third_Party/FatFs/src/option/syscall.c **** #if (osCMSIS < 0x20000U)
  55:Middlewares/Third_Party/FatFs/src/option/syscall.c ****     osSemaphoreDef(SEM);
  42              		.loc 1 55 0
  43 0006 0023     		movs	r3, #0
  44 0008 0093     		str	r3, [sp]
  45 000a 0193     		str	r3, [sp, #4]
  56:Middlewares/Third_Party/FatFs/src/option/syscall.c ****     *sobj = osSemaphoreCreate(osSemaphore(SEM), 1);
  46              		.loc 1 56 0
  47 000c 0121     		movs	r1, #1
  48              	.LVL1:
  49 000e 6846     		mov	r0, sp
  50              	.LVL2:
  51 0010 FFF7FEFF 		bl	osSemaphoreCreate
  52              	.LVL3:
  53 0014 2060     		str	r0, [r4]
  54              	.LVL4:
  57:Middlewares/Third_Party/FatFs/src/option/syscall.c **** #else
  58:Middlewares/Third_Party/FatFs/src/option/syscall.c ****     *sobj = osSemaphoreNew(1, 1, NULL);
  59:Middlewares/Third_Party/FatFs/src/option/syscall.c **** #endif
  60:Middlewares/Third_Party/FatFs/src/option/syscall.c **** 
  61:Middlewares/Third_Party/FatFs/src/option/syscall.c **** #endif
ARM GAS  /tmp/ccmVCczY.s 			page 3


  62:Middlewares/Third_Party/FatFs/src/option/syscall.c ****     ret = (*sobj != NULL);
  63:Middlewares/Third_Party/FatFs/src/option/syscall.c **** 
  64:Middlewares/Third_Party/FatFs/src/option/syscall.c ****     return ret;
  65:Middlewares/Third_Party/FatFs/src/option/syscall.c **** }
  55              		.loc 1 65 0
  56 0016 0030     		adds	r0, r0, #0
  57              	.LVL5:
  58 0018 18BF     		it	ne
  59 001a 0120     		movne	r0, #1
  60 001c 02B0     		add	sp, sp, #8
  61              	.LCFI2:
  62              		.cfi_def_cfa_offset 8
  63              		@ sp needed
  64 001e 10BD     		pop	{r4, pc}
  65              		.cfi_endproc
  66              	.LFE146:
  68              		.section	.text.ff_del_syncobj,"ax",%progbits
  69              		.align	1
  70              		.global	ff_del_syncobj
  71              		.syntax unified
  72              		.thumb
  73              		.thumb_func
  74              		.fpu fpv5-sp-d16
  76              	ff_del_syncobj:
  77              	.LFB147:
  66:Middlewares/Third_Party/FatFs/src/option/syscall.c **** 
  67:Middlewares/Third_Party/FatFs/src/option/syscall.c **** 
  68:Middlewares/Third_Party/FatFs/src/option/syscall.c **** 
  69:Middlewares/Third_Party/FatFs/src/option/syscall.c **** /*------------------------------------------------------------------------*/
  70:Middlewares/Third_Party/FatFs/src/option/syscall.c **** /* Delete a Synchronization Object                                        */
  71:Middlewares/Third_Party/FatFs/src/option/syscall.c **** /*------------------------------------------------------------------------*/
  72:Middlewares/Third_Party/FatFs/src/option/syscall.c **** /* This function is called in f_mount() function to delete a synchronization
  73:Middlewares/Third_Party/FatFs/src/option/syscall.c **** /  object that created with ff_cre_syncobj() function. When a 0 is returned,
  74:Middlewares/Third_Party/FatFs/src/option/syscall.c **** /  the f_mount() function fails with FR_INT_ERR.
  75:Middlewares/Third_Party/FatFs/src/option/syscall.c **** */
  76:Middlewares/Third_Party/FatFs/src/option/syscall.c **** 
  77:Middlewares/Third_Party/FatFs/src/option/syscall.c **** int ff_del_syncobj (	/* 1:Function succeeded, 0:Could not delete due to any error */
  78:Middlewares/Third_Party/FatFs/src/option/syscall.c **** 	_SYNC_t sobj		/* Sync object tied to the logical drive to be deleted */
  79:Middlewares/Third_Party/FatFs/src/option/syscall.c **** )
  80:Middlewares/Third_Party/FatFs/src/option/syscall.c **** {
  78              		.loc 1 80 0
  79              		.cfi_startproc
  80              		@ args = 0, pretend = 0, frame = 0
  81              		@ frame_needed = 0, uses_anonymous_args = 0
  82              	.LVL6:
  83 0000 08B5     		push	{r3, lr}
  84              	.LCFI3:
  85              		.cfi_def_cfa_offset 8
  86              		.cfi_offset 3, -8
  87              		.cfi_offset 14, -4
  81:Middlewares/Third_Party/FatFs/src/option/syscall.c **** #if _USE_MUTEX
  82:Middlewares/Third_Party/FatFs/src/option/syscall.c ****     osMutexDelete (sobj);
  83:Middlewares/Third_Party/FatFs/src/option/syscall.c **** #else
  84:Middlewares/Third_Party/FatFs/src/option/syscall.c ****     osSemaphoreDelete (sobj);
  88              		.loc 1 84 0
  89 0002 FFF7FEFF 		bl	osSemaphoreDelete
  90              	.LVL7:
ARM GAS  /tmp/ccmVCczY.s 			page 4


  85:Middlewares/Third_Party/FatFs/src/option/syscall.c **** #endif
  86:Middlewares/Third_Party/FatFs/src/option/syscall.c ****     return 1;
  87:Middlewares/Third_Party/FatFs/src/option/syscall.c **** }
  91              		.loc 1 87 0
  92 0006 0120     		movs	r0, #1
  93 0008 08BD     		pop	{r3, pc}
  94              		.cfi_endproc
  95              	.LFE147:
  97              		.section	.text.ff_req_grant,"ax",%progbits
  98              		.align	1
  99              		.global	ff_req_grant
 100              		.syntax unified
 101              		.thumb
 102              		.thumb_func
 103              		.fpu fpv5-sp-d16
 105              	ff_req_grant:
 106              	.LFB148:
  88:Middlewares/Third_Party/FatFs/src/option/syscall.c **** 
  89:Middlewares/Third_Party/FatFs/src/option/syscall.c **** 
  90:Middlewares/Third_Party/FatFs/src/option/syscall.c **** 
  91:Middlewares/Third_Party/FatFs/src/option/syscall.c **** /*------------------------------------------------------------------------*/
  92:Middlewares/Third_Party/FatFs/src/option/syscall.c **** /* Request Grant to Access the Volume                                     */
  93:Middlewares/Third_Party/FatFs/src/option/syscall.c **** /*------------------------------------------------------------------------*/
  94:Middlewares/Third_Party/FatFs/src/option/syscall.c **** /* This function is called on entering file functions to lock the volume.
  95:Middlewares/Third_Party/FatFs/src/option/syscall.c **** /  When a 0 is returned, the file function fails with FR_TIMEOUT.
  96:Middlewares/Third_Party/FatFs/src/option/syscall.c **** */
  97:Middlewares/Third_Party/FatFs/src/option/syscall.c **** 
  98:Middlewares/Third_Party/FatFs/src/option/syscall.c **** int ff_req_grant (	/* 1:Got a grant to access the volume, 0:Could not get a grant */
  99:Middlewares/Third_Party/FatFs/src/option/syscall.c **** 	_SYNC_t sobj	/* Sync object to wait */
 100:Middlewares/Third_Party/FatFs/src/option/syscall.c **** )
 101:Middlewares/Third_Party/FatFs/src/option/syscall.c **** {
 107              		.loc 1 101 0
 108              		.cfi_startproc
 109              		@ args = 0, pretend = 0, frame = 0
 110              		@ frame_needed = 0, uses_anonymous_args = 0
 111              	.LVL8:
 112 0000 08B5     		push	{r3, lr}
 113              	.LCFI4:
 114              		.cfi_def_cfa_offset 8
 115              		.cfi_offset 3, -8
 116              		.cfi_offset 14, -4
 117              	.LVL9:
 102:Middlewares/Third_Party/FatFs/src/option/syscall.c ****   int ret = 0;
 103:Middlewares/Third_Party/FatFs/src/option/syscall.c **** #if (osCMSIS < 0x20000U)
 104:Middlewares/Third_Party/FatFs/src/option/syscall.c **** 
 105:Middlewares/Third_Party/FatFs/src/option/syscall.c **** #if _USE_MUTEX
 106:Middlewares/Third_Party/FatFs/src/option/syscall.c ****   if(osMutexWait(sobj, _FS_TIMEOUT) == osOK)
 107:Middlewares/Third_Party/FatFs/src/option/syscall.c **** #else
 108:Middlewares/Third_Party/FatFs/src/option/syscall.c ****   if(osSemaphoreWait(sobj, _FS_TIMEOUT) == osOK)
 118              		.loc 1 108 0
 119 0002 4FF47A71 		mov	r1, #1000
 120 0006 FFF7FEFF 		bl	osSemaphoreWait
 121              	.LVL10:
 122 000a 08B9     		cbnz	r0, .L9
 109:Middlewares/Third_Party/FatFs/src/option/syscall.c **** #endif
 110:Middlewares/Third_Party/FatFs/src/option/syscall.c **** 
 111:Middlewares/Third_Party/FatFs/src/option/syscall.c **** #else
ARM GAS  /tmp/ccmVCczY.s 			page 5


 112:Middlewares/Third_Party/FatFs/src/option/syscall.c **** 
 113:Middlewares/Third_Party/FatFs/src/option/syscall.c **** #if _USE_MUTEX
 114:Middlewares/Third_Party/FatFs/src/option/syscall.c ****    if(osMutexAcquire(sobj, _FS_TIMEOUT) == osOK)
 115:Middlewares/Third_Party/FatFs/src/option/syscall.c **** #else
 116:Middlewares/Third_Party/FatFs/src/option/syscall.c ****    if(osSemaphoreAcquire(sobj, _FS_TIMEOUT) == osOK)
 117:Middlewares/Third_Party/FatFs/src/option/syscall.c **** #endif
 118:Middlewares/Third_Party/FatFs/src/option/syscall.c **** 
 119:Middlewares/Third_Party/FatFs/src/option/syscall.c **** #endif
 120:Middlewares/Third_Party/FatFs/src/option/syscall.c ****   {
 121:Middlewares/Third_Party/FatFs/src/option/syscall.c ****     ret = 1;
 123              		.loc 1 121 0
 124 000c 0120     		movs	r0, #1
 125              	.LVL11:
 126              	.L5:
 122:Middlewares/Third_Party/FatFs/src/option/syscall.c ****   }
 123:Middlewares/Third_Party/FatFs/src/option/syscall.c **** 
 124:Middlewares/Third_Party/FatFs/src/option/syscall.c ****   return ret;
 125:Middlewares/Third_Party/FatFs/src/option/syscall.c **** }
 127              		.loc 1 125 0
 128 000e 08BD     		pop	{r3, pc}
 129              	.LVL12:
 130              	.L9:
 102:Middlewares/Third_Party/FatFs/src/option/syscall.c **** #if (osCMSIS < 0x20000U)
 131              		.loc 1 102 0
 132 0010 0020     		movs	r0, #0
 133 0012 FCE7     		b	.L5
 134              		.cfi_endproc
 135              	.LFE148:
 137              		.section	.text.ff_rel_grant,"ax",%progbits
 138              		.align	1
 139              		.global	ff_rel_grant
 140              		.syntax unified
 141              		.thumb
 142              		.thumb_func
 143              		.fpu fpv5-sp-d16
 145              	ff_rel_grant:
 146              	.LFB149:
 126:Middlewares/Third_Party/FatFs/src/option/syscall.c **** 
 127:Middlewares/Third_Party/FatFs/src/option/syscall.c **** 
 128:Middlewares/Third_Party/FatFs/src/option/syscall.c **** 
 129:Middlewares/Third_Party/FatFs/src/option/syscall.c **** /*------------------------------------------------------------------------*/
 130:Middlewares/Third_Party/FatFs/src/option/syscall.c **** /* Release Grant to Access the Volume                                     */
 131:Middlewares/Third_Party/FatFs/src/option/syscall.c **** /*------------------------------------------------------------------------*/
 132:Middlewares/Third_Party/FatFs/src/option/syscall.c **** /* This function is called on leaving file functions to unlock the volume.
 133:Middlewares/Third_Party/FatFs/src/option/syscall.c **** */
 134:Middlewares/Third_Party/FatFs/src/option/syscall.c **** 
 135:Middlewares/Third_Party/FatFs/src/option/syscall.c **** void ff_rel_grant (
 136:Middlewares/Third_Party/FatFs/src/option/syscall.c **** 	_SYNC_t sobj	/* Sync object to be signaled */
 137:Middlewares/Third_Party/FatFs/src/option/syscall.c **** )
 138:Middlewares/Third_Party/FatFs/src/option/syscall.c **** {
 147              		.loc 1 138 0
 148              		.cfi_startproc
 149              		@ args = 0, pretend = 0, frame = 0
 150              		@ frame_needed = 0, uses_anonymous_args = 0
 151              	.LVL13:
 152 0000 08B5     		push	{r3, lr}
 153              	.LCFI5:
ARM GAS  /tmp/ccmVCczY.s 			page 6


 154              		.cfi_def_cfa_offset 8
 155              		.cfi_offset 3, -8
 156              		.cfi_offset 14, -4
 139:Middlewares/Third_Party/FatFs/src/option/syscall.c **** #if _USE_MUTEX
 140:Middlewares/Third_Party/FatFs/src/option/syscall.c ****   osMutexRelease(sobj);
 141:Middlewares/Third_Party/FatFs/src/option/syscall.c **** #else
 142:Middlewares/Third_Party/FatFs/src/option/syscall.c ****   osSemaphoreRelease(sobj);
 157              		.loc 1 142 0
 158 0002 FFF7FEFF 		bl	osSemaphoreRelease
 159              	.LVL14:
 143:Middlewares/Third_Party/FatFs/src/option/syscall.c **** #endif
 144:Middlewares/Third_Party/FatFs/src/option/syscall.c **** }
 160              		.loc 1 144 0
 161 0006 08BD     		pop	{r3, pc}
 162              		.cfi_endproc
 163              	.LFE149:
 165              		.text
 166              	.Letext0:
 167              		.file 2 "Middlewares/Third_Party/FatFs/src/option/../integer.h"
 168              		.file 3 "/usr/include/newlib/machine/_default_types.h"
 169              		.file 4 "/usr/include/newlib/sys/_stdint.h"
 170              		.file 5 "Drivers/CMSIS/Include/core_cm7.h"
 171              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 172              		.file 7 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 173              		.file 8 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h"
 174              		.file 9 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 175              		.file 10 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 176              		.file 11 "Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h"
 177              		.file 12 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
ARM GAS  /tmp/ccmVCczY.s 			page 7


DEFINED SYMBOLS
                            *ABS*:0000000000000000 syscall.c
     /tmp/ccmVCczY.s:18     .text.ff_cre_syncobj:0000000000000000 $t
     /tmp/ccmVCczY.s:25     .text.ff_cre_syncobj:0000000000000000 ff_cre_syncobj
     /tmp/ccmVCczY.s:69     .text.ff_del_syncobj:0000000000000000 $t
     /tmp/ccmVCczY.s:76     .text.ff_del_syncobj:0000000000000000 ff_del_syncobj
     /tmp/ccmVCczY.s:98     .text.ff_req_grant:0000000000000000 $t
     /tmp/ccmVCczY.s:105    .text.ff_req_grant:0000000000000000 ff_req_grant
     /tmp/ccmVCczY.s:138    .text.ff_rel_grant:0000000000000000 $t
     /tmp/ccmVCczY.s:145    .text.ff_rel_grant:0000000000000000 ff_rel_grant

UNDEFINED SYMBOLS
osSemaphoreCreate
osSemaphoreDelete
osSemaphoreWait
osSemaphoreRelease
