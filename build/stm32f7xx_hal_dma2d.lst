ARM GAS  /tmp/ccMN1FNg.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f7xx_hal_dma2d.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.DMA2D_SetConfig,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-sp-d16
  24              	DMA2D_SetConfig:
  25              	.LFB170:
  26              		.file 1 "Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c"
   1:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
   2:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   ******************************************************************************
   3:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @file    stm32f7xx_hal_dma2d.c
   4:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @author  MCD Application Team
   5:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @brief   DMA2D HAL module driver.
   6:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *          functionalities of the DMA2D peripheral:
   8:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *           + IO operation functions
  10:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *           + Peripheral Control functions
  11:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *           + Peripheral State and Errors functions
  12:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *
  13:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   @verbatim
  14:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   ==============================================================================
  15:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****                         ##### How to use this driver #####
  16:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   ==============================================================================
  17:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     [..]
  18:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (#) Program the required configuration through the following parameters:
  19:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           the transfer mode, the output color mode and the output offset using
  20:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           HAL_DMA2D_Init() function.
  21:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
  22:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (#) Program the required configuration through the following parameters:
  23:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           the input color mode, the input color, the input alpha value, the alpha mode,
  24:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           the red/blue swap mode, the inverted alpha mode and the input offset using
  25:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           HAL_DMA2D_ConfigLayer() function for foreground or/and background layer.
  26:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
  27:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****      *** Polling mode IO operation ***
  28:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****      =================================
  29:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     [..]
  30:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****        (#) Configure pdata parameter (explained hereafter), destination and data length
  31:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****            and enable the transfer using HAL_DMA2D_Start().
  32:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****        (#) Wait for end of transfer using HAL_DMA2D_PollForTransfer(), at this stage
ARM GAS  /tmp/ccMN1FNg.s 			page 2


  33:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****            user can specify the value of timeout according to his end application.
  34:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
  35:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****      *** Interrupt mode IO operation ***
  36:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****      ===================================
  37:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****      [..]
  38:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****        (#) Configure pdata parameter, destination and data length and enable
  39:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****            the transfer using HAL_DMA2D_Start_IT().
  40:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****        (#) Use HAL_DMA2D_IRQHandler() called under DMA2D_IRQHandler() interrupt subroutine.
  41:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****        (#) At the end of data transfer HAL_DMA2D_IRQHandler() function is executed and user can
  42:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****            add his own function by customization of function pointer XferCpltCallback (member
  43:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****            of DMA2D handle structure).
  44:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****        (#) In case of error, the HAL_DMA2D_IRQHandler() function calls the callback
  45:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****            XferErrorCallback.
  46:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
  47:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****          -@-   In Register-to-Memory transfer mode, pdata parameter is the register
  48:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****                color, in Memory-to-memory or Memory-to-Memory with pixel format
  49:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****                conversion pdata is the source address.
  50:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
  51:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****          -@-   Configure the foreground source address, the background source address,
  52:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****                the destination and data length then Enable the transfer using
  53:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****                HAL_DMA2D_BlendingStart() in polling mode and HAL_DMA2D_BlendingStart_IT()
  54:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****                in interrupt mode.
  55:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
  56:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****          -@-   HAL_DMA2D_BlendingStart() and HAL_DMA2D_BlendingStart_IT() functions
  57:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****                are used if the memory to memory with blending transfer mode is selected.
  58:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
  59:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (#) Optionally, configure and enable the CLUT using HAL_DMA2D_CLUTLoad() in polling
  60:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           mode or HAL_DMA2D_CLUTLoad_IT() in interrupt mode.
  61:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
  62:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (#) Optionally, configure the line watermark in using the API HAL_DMA2D_ProgramLineEvent().
  63:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
  64:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (#) Optionally, configure the dead time value in the AHB clock cycle inserted between two
  65:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           consecutive accesses on the AHB master port in using the API HAL_DMA2D_ConfigDeadTime()
  66:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           and enable/disable the functionality  with the APIs HAL_DMA2D_EnableDeadTime() or
  67:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           HAL_DMA2D_DisableDeadTime().
  68:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
  69:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (#) The transfer can be suspended, resumed and aborted using the following
  70:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           functions: HAL_DMA2D_Suspend(), HAL_DMA2D_Resume(), HAL_DMA2D_Abort().
  71:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
  72:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (#) The CLUT loading can be suspended, resumed and aborted using the following
  73:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           functions: HAL_DMA2D_CLUTLoading_Suspend(), HAL_DMA2D_CLUTLoading_Resume(),
  74:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           HAL_DMA2D_CLUTLoading_Abort().
  75:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
  76:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (#) To control the DMA2D state, use the following function: HAL_DMA2D_GetState().
  77:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
  78:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (#) To read the DMA2D error code, use the following function: HAL_DMA2D_GetError().
  79:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
  80:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****      *** DMA2D HAL driver macros list ***
  81:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****      =============================================
  82:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****      [..]
  83:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****        Below the list of most used macros in DMA2D HAL driver :
  84:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
  85:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (+) __HAL_DMA2D_ENABLE: Enable the DMA2D peripheral.
  86:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (+) __HAL_DMA2D_GET_FLAG: Get the DMA2D pending flags.
  87:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (+) __HAL_DMA2D_CLEAR_FLAG: Clear the DMA2D pending flags.
  88:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (+) __HAL_DMA2D_ENABLE_IT: Enable the specified DMA2D interrupts.
  89:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (+) __HAL_DMA2D_DISABLE_IT: Disable the specified DMA2D interrupts.
ARM GAS  /tmp/ccMN1FNg.s 			page 3


  90:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (+) __HAL_DMA2D_GET_IT_SOURCE: Check whether the specified DMA2D interrupt is enabled or not.
  91:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
  92:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****      *** Callback registration ***
  93:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****      ===================================
  94:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****      [..]
  95:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (#) The compilation define  USE_HAL_DMA2D_REGISTER_CALLBACKS when set to 1
  96:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           allows the user to configure dynamically the driver callbacks.
  97:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           Use function @ref HAL_DMA2D_RegisterCallback() to register a user callback.
  98:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
  99:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (#) Function @ref HAL_DMA2D_RegisterCallback() allows to register following callbacks:
 100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****             (+) XferCpltCallback : callback for transfer complete.
 101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****             (+) XferErrorCallback : callback for transfer error.
 102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****             (+) LineEventCallback : callback for line event.
 103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****             (+) CLUTLoadingCpltCallback : callback for CLUT loading completion.
 104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****             (+) MspInitCallback    : DMA2D MspInit.
 105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****             (+) MspDeInitCallback  : DMA2D MspDeInit.
 106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           This function takes as parameters the HAL peripheral handle, the Callback ID
 107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           and a pointer to the user callback function.
 108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (#) Use function @ref HAL_DMA2D_UnRegisterCallback() to reset a callback to the default
 110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           weak (surcharged) function.
 111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           @ref HAL_DMA2D_UnRegisterCallback() takes as parameters the HAL peripheral handle,
 112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           and the Callback ID.
 113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           This function allows to reset following callbacks:
 114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****             (+) XferCpltCallback : callback for transfer complete.
 115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****             (+) XferErrorCallback : callback for transfer error.
 116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****             (+) LineEventCallback : callback for line event.
 117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****             (+) CLUTLoadingCpltCallback : callback for CLUT loading completion.
 118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****             (+) MspInitCallback    : DMA2D MspInit.
 119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****             (+) MspDeInitCallback  : DMA2D MspDeInit.
 120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (#) By default, after the @ref HAL_DMA2D_Init and if the state is HAL_DMA2D_STATE_RESET
 122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           all callbacks are reset to the corresponding legacy weak (surcharged) functions:
 123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           examples @ref HAL_DMA2D_LineEventCallback(), @ref HAL_DMA2D_CLUTLoadingCpltCallback()
 124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           Exception done for MspInit and MspDeInit callbacks that are respectively
 125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           reset to the legacy weak (surcharged) functions in the @ref HAL_DMA2D_Init
 126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           and @ref HAL_DMA2D_DeInit only when these callbacks are null (not registered beforehand)
 127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           If not, MspInit or MspDeInit are not null, the @ref HAL_DMA2D_Init and @ref HAL_DMA2D_DeI
 128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           keep and use the user MspInit/MspDeInit callbacks (registered beforehand).
 129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           Exception as well for Transfer Completion and Transfer Error callbacks that are not defin
 131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           as weak (surcharged) functions. They must be defined by the user to be resorted to.
 132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           Callbacks can be registered/unregistered in READY state only.
 134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           Exception done for MspInit/MspDeInit callbacks that can be registered/unregistered
 135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           in READY or RESET state, thus registered (user) MspInit/DeInit callbacks can be used
 136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           during the Init/DeInit.
 137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           In that case first register the MspInit/MspDeInit user callbacks
 138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           using @ref HAL_DMA2D_RegisterCallback before calling @ref HAL_DMA2D_DeInit
 139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           or @ref HAL_DMA2D_Init function.
 140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           When The compilation define USE_HAL_DMA2D_REGISTER_CALLBACKS is set to 0 or
 142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           not defined, the callback registering feature is not available
 143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           and weak (surcharged) callbacks are used.
 144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****      [..]
 146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (@) You can refer to the DMA2D HAL driver header file for more useful macros
ARM GAS  /tmp/ccMN1FNg.s 			page 4


 147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   @endverbatim
 149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   ******************************************************************************
 150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @attention
 151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *
 152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
 153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * All rights reserved.</center></h2>
 154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *
 155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * the "License"; You may not use this file except in compliance with the
 157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * License. You may obtain a copy of the License at:
 158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                        opensource.org/licenses/BSD-3-Clause
 159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *
 160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   ******************************************************************************
 161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
 162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /* Includes ------------------------------------------------------------------*/
 164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** #include "stm32f7xx_hal.h"
 165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** #ifdef HAL_DMA2D_MODULE_ENABLED
 167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** #if defined (DMA2D)
 168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /** @addtogroup STM32F7xx_HAL_Driver
 170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @{
 171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
 172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /** @defgroup DMA2D  DMA2D
 174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @brief DMA2D HAL module driver
 175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @{
 176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
 177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /* Private types -------------------------------------------------------------*/
 179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /* Private define ------------------------------------------------------------*/
 180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /** @defgroup DMA2D_Private_Constants DMA2D Private Constants
 181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @{
 182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
 183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /** @defgroup DMA2D_TimeOut DMA2D Time Out
 185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @{
 186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
 187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** #define DMA2D_TIMEOUT_ABORT           (1000U)  /*!<  1s  */
 188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** #define DMA2D_TIMEOUT_SUSPEND         (1000U)  /*!<  1s  */
 189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
 190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @}
 191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
 192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
 194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @}
 195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
 196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /* Private variables ---------------------------------------------------------*/
 198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /* Private constants ---------------------------------------------------------*/
 199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /* Private macro -------------------------------------------------------------*/
 200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /* Private function prototypes -----------------------------------------------*/
 201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /** @addtogroup DMA2D_Private_Functions DMA2D Private Functions
 202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @{
 203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
ARM GAS  /tmp/ccMN1FNg.s 			page 5


 204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** static void DMA2D_SetConfig(DMA2D_HandleTypeDef *hdma2d, uint32_t pdata, uint32_t DstAddress, uint3
 205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
 206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @}
 207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
 208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /* Private functions ---------------------------------------------------------*/
 210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /* Exported functions --------------------------------------------------------*/
 211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /** @defgroup DMA2D_Exported_Functions DMA2D Exported Functions
 212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @{
 213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
 214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /** @defgroup DMA2D_Exported_Functions_Group1 Initialization and de-initialization functions
 216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****  *  @brief   Initialization and Configuration functions
 217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****  *
 218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** @verbatim
 219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****  ===============================================================================
 220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****                 ##### Initialization and Configuration functions #####
 221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****  ===============================================================================
 222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     [..]  This section provides functions allowing to:
 223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (+) Initialize and configure the DMA2D
 224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (+) De-initialize the DMA2D
 225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** @endverbatim
 227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @{
 228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
 229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
 231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @brief  Initialize the DMA2D according to the specified
 232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *         parameters in the DMA2D_InitTypeDef and create the associated handle.
 233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
 234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                 the configuration information for the DMA2D.
 235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @retval HAL status
 236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
 237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
 238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** {
 239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Check the DMA2D peripheral state */
 240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   if(hdma2d == NULL)
 241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
 242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****      return HAL_ERROR;
 243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
 244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Check the parameters */
 246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_ALL_INSTANCE(hdma2d->Instance));
 247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_MODE(hdma2d->Init.Mode));
 248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_CMODE(hdma2d->Init.ColorMode));
 249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_OFFSET(hdma2d->Init.OutputOffset));
 250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** #if defined (DMA2D_ALPHA_INV_RB_SWAP_SUPPORT)
 251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_ALPHA_INVERTED(hdma2d->Init.AlphaInverted));
 252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_RB_SWAP(hdma2d->Init.RedBlueSwap));
 253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** #endif /* DMA2D_ALPHA_INV_RB_SWAP_SUPPORT */
 254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** #if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
 256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
 258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* Reset Callback pointers in HAL_DMA2D_STATE_RESET only */
 259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     hdma2d->LineEventCallback       = HAL_DMA2D_LineEventCallback;
 260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     hdma2d->CLUTLoadingCpltCallback = HAL_DMA2D_CLUTLoadingCpltCallback;
ARM GAS  /tmp/ccMN1FNg.s 			page 6


 261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     if(hdma2d->MspInitCallback == NULL)
 262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     {
 263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       hdma2d->MspInitCallback = HAL_DMA2D_MspInit;
 264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     }
 265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* Init the low level hardware */
 267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     hdma2d->MspInitCallback(hdma2d);
 268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
 269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** #else
 270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   if(hdma2d->State == HAL_DMA2D_STATE_RESET)
 271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
 272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* Allocate lock resource and initialize it */
 273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     hdma2d->Lock = HAL_UNLOCKED;
 274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* Init the low level hardware */
 275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     HAL_DMA2D_MspInit(hdma2d);
 276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
 277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** #endif /* (USE_HAL_DMA2D_REGISTER_CALLBACKS) */
 278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Change DMA2D peripheral state */
 280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_BUSY;
 281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* DMA2D CR register configuration -------------------------------------------*/
 283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* DMA2D OPFCCR register configuration ---------------------------------------*/
 286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* DMA2D OOR register configuration ------------------------------------------*/
 289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** #if defined (DMA2D_ALPHA_INV_RB_SWAP_SUPPORT)
 291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* DMA2D OPFCCR AI and RBS fields setting (Output Alpha Inversion)*/
 292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   MODIFY_REG(hdma2d->Instance->OPFCCR,(DMA2D_OPFCCR_AI|DMA2D_OPFCCR_RBS), ((hdma2d->Init.AlphaInver
 293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** #endif /* DMA2D_ALPHA_INV_RB_SWAP_SUPPORT */
 294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Update error code */
 297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Initialize the DMA2D state*/
 300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   hdma2d->State  = HAL_DMA2D_STATE_READY;
 301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   return HAL_OK;
 303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
 304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
 306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @brief  Deinitializes the DMA2D peripheral registers to their default reset
 307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *         values.
 308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
 309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                 the configuration information for the DMA2D.
 310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @retval None
 311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
 312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_DeInit(DMA2D_HandleTypeDef *hdma2d)
 314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** {
 315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Check the DMA2D peripheral state */
 317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   if(hdma2d == NULL)
ARM GAS  /tmp/ccMN1FNg.s 			page 7


 318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
 319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****      return HAL_ERROR;
 320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
 321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Before aborting any DMA2D transfer or CLUT loading, check
 323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****      first whether or not DMA2D clock is enabled */
 324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   if (__HAL_RCC_DMA2D_IS_CLK_ENABLED())
 325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
 326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* Abort DMA2D transfer if any */
 327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     if ((hdma2d->Instance->CR & DMA2D_CR_START) == DMA2D_CR_START)
 328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     {
 329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       if (HAL_DMA2D_Abort(hdma2d) != HAL_OK)
 330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       {
 331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         /* Issue when aborting DMA2D transfer */
 332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         return HAL_ERROR;
 333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       }
 334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     }
 335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     else
 336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     {
 337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Abort background CLUT loading if any */
 338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       if ((hdma2d->Instance->BGPFCCR & DMA2D_BGPFCCR_START) == DMA2D_BGPFCCR_START)
 339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       {
 340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         if (HAL_DMA2D_CLUTLoading_Abort(hdma2d, 0U) != HAL_OK)
 341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         {
 342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           /* Issue when aborting background CLUT loading */
 343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           return HAL_ERROR;
 344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         }
 345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       }
 346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       else
 347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       {
 348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         /* Abort foreground CLUT loading if any */
 349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         if ((hdma2d->Instance->FGPFCCR & DMA2D_FGPFCCR_START) == DMA2D_FGPFCCR_START)
 350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         {
 351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           if (HAL_DMA2D_CLUTLoading_Abort(hdma2d, 1U) != HAL_OK)
 352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           {
 353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****             /* Issue when aborting foreground CLUT loading */
 354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****             return HAL_ERROR;
 355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           }
 356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         }
 357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       }
 358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     }
 359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
 360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Reset DMA2D control registers*/
 362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   hdma2d->Instance->CR       =    0U;
 363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   hdma2d->Instance->IFCR     = 0x3FU;
 364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   hdma2d->Instance->FGOR     =    0U;
 365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   hdma2d->Instance->BGOR     =    0U;
 366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   hdma2d->Instance->FGPFCCR  =    0U;
 367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   hdma2d->Instance->BGPFCCR  =    0U;
 368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   hdma2d->Instance->OPFCCR   =    0U;
 369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** #if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
 371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     if(hdma2d->MspDeInitCallback == NULL)
 373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     {
 374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       hdma2d->MspDeInitCallback = HAL_DMA2D_MspDeInit;
ARM GAS  /tmp/ccMN1FNg.s 			page 8


 375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     }
 376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* DeInit the low level hardware */
 378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     hdma2d->MspDeInitCallback(hdma2d);
 379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** #else
 381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Carry on with de-initialization of low level hardware */
 382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   HAL_DMA2D_MspDeInit(hdma2d);
 383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** #endif /* (USE_HAL_DMA2D_REGISTER_CALLBACKS) */
 384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Update error code */
 386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Initialize the DMA2D state*/
 389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   hdma2d->State  = HAL_DMA2D_STATE_RESET;
 390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Release Lock */
 392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   __HAL_UNLOCK(hdma2d);
 393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   return HAL_OK;
 395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
 396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
 398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @brief  Initializes the DMA2D MSP.
 399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
 400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                 the configuration information for the DMA2D.
 401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @retval None
 402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
 403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** __weak void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
 404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** {
 405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Prevent unused argument(s) compilation warning */
 406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   UNUSED(hdma2d);
 407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* NOTE : This function should not be modified; when the callback is needed,
 409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****             the HAL_DMA2D_MspInit can be implemented in the user file.
 410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****    */
 411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
 412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
 414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @brief  DeInitializes the DMA2D MSP.
 415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
 416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                 the configuration information for the DMA2D.
 417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @retval None
 418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
 419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** __weak void HAL_DMA2D_MspDeInit(DMA2D_HandleTypeDef* hdma2d)
 420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** {
 421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Prevent unused argument(s) compilation warning */
 422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   UNUSED(hdma2d);
 423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* NOTE : This function should not be modified; when the callback is needed,
 425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****             the HAL_DMA2D_MspDeInit can be implemented in the user file.
 426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****    */
 427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
 428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** #if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
 430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
 431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @brief  Register a User DMA2D Callback
ARM GAS  /tmp/ccMN1FNg.s 			page 9


 432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *         To be used instead of the weak (surcharged) predefined callback
 433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param hdma2d DMA2D handle
 434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param CallbackID ID of the callback to be registered
 435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *        This parameter can be one of the following values:
 436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *          @arg @ref HAL_DMA2D_TRANSFERCOMPLETE_CB_ID DMA2D transfer complete Callback ID
 437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *          @arg @ref HAL_DMA2D_TRANSFERERROR_CB_ID DMA2D transfer error Callback ID
 438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *          @arg @ref HAL_DMA2D_LINEEVENT_CB_ID DMA2D line event Callback ID
 439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *          @arg @ref HAL_DMA2D_CLUTLOADINGCPLT_CB_ID DMA2D CLUT loading completion Callback ID
 440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *          @arg @ref HAL_DMA2D_MSPINIT_CB_ID DMA2D MspInit callback ID
 441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *          @arg @ref HAL_DMA2D_MSPDEINIT_CB_ID DMA2D MspDeInit callback ID
 442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param pCallback pointer to the Callback function
 443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @note No weak predefined callbacks are defined for HAL_DMA2D_TRANSFERCOMPLETE_CB_ID or HAL_DMA2
 444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @retval status
 445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
 446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_RegisterCallback(DMA2D_HandleTypeDef *hdma2d, HAL_DMA2D_CallbackIDTypeD
 447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** {
 448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   HAL_StatusTypeDef status = HAL_OK;
 449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   if(pCallback == NULL)
 451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
 452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* Update the error code */
 453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     hdma2d->ErrorCode |= HAL_DMA2D_ERROR_INVALID_CALLBACK;
 454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     return HAL_ERROR;
 455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
 456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Process locked */
 457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   __HAL_LOCK(hdma2d);
 458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   if(HAL_DMA2D_STATE_READY == hdma2d->State)
 460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
 461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     switch (CallbackID)
 462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     {
 463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     case HAL_DMA2D_TRANSFERCOMPLETE_CB_ID :
 464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       hdma2d->XferCpltCallback = pCallback;
 465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       break;
 466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     case HAL_DMA2D_TRANSFERERROR_CB_ID :
 468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       hdma2d->XferErrorCallback = pCallback;
 469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       break;
 470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     case HAL_DMA2D_LINEEVENT_CB_ID :
 472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       hdma2d->LineEventCallback = pCallback;
 473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       break;
 474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     case HAL_DMA2D_CLUTLOADINGCPLT_CB_ID :
 476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       hdma2d->CLUTLoadingCpltCallback = pCallback;
 477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       break;
 478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     case HAL_DMA2D_MSPINIT_CB_ID :
 480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       hdma2d->MspInitCallback = pCallback;
 481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       break;
 482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     case HAL_DMA2D_MSPDEINIT_CB_ID :
 484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       hdma2d->MspDeInitCallback = pCallback;
 485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       break;
 486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     default :
 488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****      /* Update the error code */
ARM GAS  /tmp/ccMN1FNg.s 			page 10


 489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_INVALID_CALLBACK;
 490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****      /* update return status */
 491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       status =  HAL_ERROR;
 492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       break;
 493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     }
 494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
 495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   else if(HAL_DMA2D_STATE_RESET == hdma2d->State)
 496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
 497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     switch (CallbackID)
 498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     {
 499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     case HAL_DMA2D_MSPINIT_CB_ID :
 500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       hdma2d->MspInitCallback = pCallback;
 501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       break;
 502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     case HAL_DMA2D_MSPDEINIT_CB_ID :
 504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       hdma2d->MspDeInitCallback = pCallback;
 505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       break;
 506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     default :
 508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****      /* Update the error code */
 509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_INVALID_CALLBACK;
 510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****      /* update return status */
 511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       status =  HAL_ERROR;
 512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       break;
 513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     }
 514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
 515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   else
 516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
 517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* Update the error code */
 518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_INVALID_CALLBACK;
 519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****      /* update return status */
 520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       status =  HAL_ERROR;
 521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
 522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Release Lock */
 524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   __HAL_UNLOCK(hdma2d);
 525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   return status;
 526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
 527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
 529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @brief  Unregister a DMA2D Callback
 530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *         DMA2D Callback is redirected to the weak (surcharged) predefined callback
 531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param hdma2d DMA2D handle
 532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param CallbackID ID of the callback to be unregistered
 533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *        This parameter can be one of the following values:
 534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *          @arg @ref HAL_DMA2D_TRANSFERCOMPLETE_CB_ID DMA2D transfer complete Callback ID
 535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *          @arg @ref HAL_DMA2D_TRANSFERERROR_CB_ID DMA2D transfer error Callback ID
 536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *          @arg @ref HAL_DMA2D_LINEEVENT_CB_ID DMA2D line event Callback ID
 537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *          @arg @ref HAL_DMA2D_CLUTLOADINGCPLT_CB_ID DMA2D CLUT loading completion Callback ID
 538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *          @arg @ref HAL_DMA2D_MSPINIT_CB_ID DMA2D MspInit callback ID
 539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *          @arg @ref HAL_DMA2D_MSPDEINIT_CB_ID DMA2D MspDeInit callback ID
 540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @note No weak predefined callbacks are defined for HAL_DMA2D_TRANSFERCOMPLETE_CB_ID or HAL_DMA2
 541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @retval status
 542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
 543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_UnRegisterCallback(DMA2D_HandleTypeDef *hdma2d, HAL_DMA2D_CallbackIDTyp
 544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** {
 545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** HAL_StatusTypeDef status = HAL_OK;
ARM GAS  /tmp/ccMN1FNg.s 			page 11


 546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Process locked */
 548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   __HAL_LOCK(hdma2d);
 549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   if(HAL_DMA2D_STATE_READY == hdma2d->State)
 551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
 552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     switch (CallbackID)
 553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     {
 554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     case HAL_DMA2D_TRANSFERCOMPLETE_CB_ID :
 555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       hdma2d->XferCpltCallback = NULL;
 556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       break;
 557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     case HAL_DMA2D_TRANSFERERROR_CB_ID :
 559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       hdma2d->XferErrorCallback = NULL;
 560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       break;
 561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     case HAL_DMA2D_LINEEVENT_CB_ID :
 563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       hdma2d->LineEventCallback = HAL_DMA2D_LineEventCallback;
 564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       break;
 565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     case HAL_DMA2D_CLUTLOADINGCPLT_CB_ID :
 567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       hdma2d->CLUTLoadingCpltCallback = HAL_DMA2D_CLUTLoadingCpltCallback;
 568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       break;
 569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     case HAL_DMA2D_MSPINIT_CB_ID :
 571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       hdma2d->MspInitCallback = HAL_DMA2D_MspInit; /* Legacy weak (surcharged) Msp Init */
 572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       break;
 573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     case HAL_DMA2D_MSPDEINIT_CB_ID :
 575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       hdma2d->MspDeInitCallback = HAL_DMA2D_MspDeInit; /* Legacy weak (surcharged) Msp DeInit */
 576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       break;
 577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     default :
 579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****      /* Update the error code */
 580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_INVALID_CALLBACK;
 581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****      /* update return status */
 582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       status =  HAL_ERROR;
 583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       break;
 584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     }
 585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
 586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   else if(HAL_DMA2D_STATE_RESET == hdma2d->State)
 587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
 588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     switch (CallbackID)
 589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     {
 590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     case HAL_DMA2D_MSPINIT_CB_ID :
 591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       hdma2d->MspInitCallback = HAL_DMA2D_MspInit;   /* Legacy weak (surcharged) Msp Init */
 592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       break;
 593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     case HAL_DMA2D_MSPDEINIT_CB_ID :
 595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       hdma2d->MspDeInitCallback = HAL_DMA2D_MspDeInit;  /* Legacy weak (surcharged) Msp DeInit */
 596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       break;
 597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     default :
 599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****      /* Update the error code */
 600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_INVALID_CALLBACK;
 601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****      /* update return status */
 602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       status =  HAL_ERROR;
ARM GAS  /tmp/ccMN1FNg.s 			page 12


 603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       break;
 604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     }
 605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
 606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   else
 607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
 608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****      /* Update the error code */
 609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_INVALID_CALLBACK;
 610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****      /* update return status */
 611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       status =  HAL_ERROR;
 612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
 613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Release Lock */
 615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   __HAL_UNLOCK(hdma2d);
 616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   return status;
 617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
 618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** #endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
 619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
 621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @}
 622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
 623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /** @defgroup DMA2D_Exported_Functions_Group2 IO operation functions
 626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****  *  @brief   IO operation functions
 627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****  *
 628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** @verbatim
 629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****  ===============================================================================
 630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****                       #####  IO operation functions  #####
 631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****  ===============================================================================
 632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     [..]  This section provides functions allowing to:
 633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (+) Configure the pdata, destination address and data size then
 634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           start the DMA2D transfer.
 635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (+) Configure the source for foreground and background, destination address
 636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           and data size then start a MultiBuffer DMA2D transfer.
 637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (+) Configure the pdata, destination address and data size then
 638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           start the DMA2D transfer with interrupt.
 639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (+) Configure the source for foreground and background, destination address
 640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           and data size then start a MultiBuffer DMA2D transfer with interrupt.
 641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (+) Abort DMA2D transfer.
 642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (+) Suspend DMA2D transfer.
 643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (+) Resume DMA2D transfer.
 644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (+) Enable CLUT transfer.
 645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (+) Configure CLUT loading then start transfer in polling mode.
 646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (+) Configure CLUT loading then start transfer in interrupt mode.
 647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (+) Abort DMA2D CLUT loading.
 648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (+) Suspend DMA2D CLUT loading.
 649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (+) Resume DMA2D CLUT loading.
 650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (+) Poll for transfer complete.
 651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (+) handle DMA2D interrupt request.
 652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (+) Transfer watermark callback.
 653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (+) CLUT Transfer Complete callback.
 654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** @endverbatim
 657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @{
 658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
 659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
ARM GAS  /tmp/ccMN1FNg.s 			page 13


 660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
 661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @brief  Start the DMA2D Transfer.
 662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  hdma2d     Pointer to a DMA2D_HandleTypeDef structure that contains
 663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                     the configuration information for the DMA2D.
 664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  pdata      Configure the source memory Buffer address if
 665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                     Memory-to-Memory or Memory-to-Memory with pixel format
 666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                     conversion mode is selected, or configure
 667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                     the color value if Register-to-Memory mode is selected.
 668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  DstAddress The destination memory Buffer address.
 669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  Width      The width of data to be transferred from source to destination (expressed in
 670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  Height     The height of data to be transferred from source to destination (expressed i
 671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @retval HAL status
 672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
 673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_Start(DMA2D_HandleTypeDef *hdma2d, uint32_t pdata, uint32_t DstAddress,
 674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** {
 675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Check the parameters */
 676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_LINE(Height));
 677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_PIXEL(Width));
 678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Process locked */
 680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   __HAL_LOCK(hdma2d);
 681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Change DMA2D peripheral state */
 683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_BUSY;
 684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Configure the source, destination address and the data size */
 686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   DMA2D_SetConfig(hdma2d, pdata, DstAddress, Width, Height);
 687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Enable the Peripheral */
 689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   __HAL_DMA2D_ENABLE(hdma2d);
 690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   return HAL_OK;
 692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
 693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
 695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @brief  Start the DMA2D Transfer with interrupt enabled.
 696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  hdma2d     Pointer to a DMA2D_HandleTypeDef structure that contains
 697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                     the configuration information for the DMA2D.
 698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  pdata      Configure the source memory Buffer address if
 699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                     the Memory-to-Memory or Memory-to-Memory with pixel format
 700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                     conversion mode is selected, or configure
 701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                     the color value if Register-to-Memory mode is selected.
 702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  DstAddress The destination memory Buffer address.
 703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  Width      The width of data to be transferred from source to destination (expressed in
 704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  Height     The height of data to be transferred from source to destination (expressed i
 705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @retval HAL status
 706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
 707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_Start_IT(DMA2D_HandleTypeDef *hdma2d, uint32_t pdata, uint32_t DstAddre
 708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** {
 709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Check the parameters */
 710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_LINE(Height));
 711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_PIXEL(Width));
 712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Process locked */
 714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   __HAL_LOCK(hdma2d);
 715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Change DMA2D peripheral state */
ARM GAS  /tmp/ccMN1FNg.s 			page 14


 717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_BUSY;
 718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Configure the source, destination address and the data size */
 720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   DMA2D_SetConfig(hdma2d, pdata, DstAddress, Width, Height);
 721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Enable the transfer complete, transfer error and configuration error interrupts */
 723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   __HAL_DMA2D_ENABLE_IT(hdma2d, DMA2D_IT_TC|DMA2D_IT_TE|DMA2D_IT_CE);
 724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Enable the Peripheral */
 726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   __HAL_DMA2D_ENABLE(hdma2d);
 727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   return HAL_OK;
 729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
 730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
 732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @brief  Start the multi-source DMA2D Transfer.
 733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  hdma2d      Pointer to a DMA2D_HandleTypeDef structure that contains
 734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                      the configuration information for the DMA2D.
 735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  SrcAddress1 The source memory Buffer address for the foreground layer.
 736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  SrcAddress2 The source memory Buffer address for the background layer.
 737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  DstAddress  The destination memory Buffer address.
 738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  Width       The width of data to be transferred from source to destination (expressed i
 739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  Height      The height of data to be transferred from source to destination (expressed 
 740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @retval HAL status
 741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
 742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_BlendingStart(DMA2D_HandleTypeDef *hdma2d, uint32_t SrcAddress1, uint32
 743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** {
 744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Check the parameters */
 745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_LINE(Height));
 746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_PIXEL(Width));
 747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Process locked */
 749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   __HAL_LOCK(hdma2d);
 750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Change DMA2D peripheral state */
 752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_BUSY;
 753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Configure DMA2D Stream source2 address */
 755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   WRITE_REG(hdma2d->Instance->BGMAR, SrcAddress2);
 756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Configure the source, destination address and the data size */
 758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   DMA2D_SetConfig(hdma2d, SrcAddress1, DstAddress, Width, Height);
 759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Enable the Peripheral */
 761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   __HAL_DMA2D_ENABLE(hdma2d);
 762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   return HAL_OK;
 764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
 765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
 767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @brief  Start the multi-source DMA2D Transfer with interrupt enabled.
 768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  hdma2d     Pointer to a DMA2D_HandleTypeDef structure that contains
 769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                     the configuration information for the DMA2D.
 770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  SrcAddress1 The source memory Buffer address for the foreground layer.
 771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  SrcAddress2 The source memory Buffer address for the background layer.
 772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  DstAddress  The destination memory Buffer address.
 773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  Width       The width of data to be transferred from source to destination (expressed i
ARM GAS  /tmp/ccMN1FNg.s 			page 15


 774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  Height      The height of data to be transferred from source to destination (expressed 
 775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @retval HAL status
 776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
 777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_BlendingStart_IT(DMA2D_HandleTypeDef *hdma2d, uint32_t SrcAddress1, uin
 778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** {
 779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Check the parameters */
 780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_LINE(Height));
 781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_PIXEL(Width));
 782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Process locked */
 784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   __HAL_LOCK(hdma2d);
 785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Change DMA2D peripheral state */
 787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_BUSY;
 788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Configure DMA2D Stream source2 address */
 790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   WRITE_REG(hdma2d->Instance->BGMAR, SrcAddress2);
 791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Configure the source, destination address and the data size */
 793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   DMA2D_SetConfig(hdma2d, SrcAddress1, DstAddress, Width, Height);
 794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Enable the transfer complete, transfer error and configuration error interrupts */
 796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   __HAL_DMA2D_ENABLE_IT(hdma2d, DMA2D_IT_TC|DMA2D_IT_TE|DMA2D_IT_CE);
 797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Enable the Peripheral */
 799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   __HAL_DMA2D_ENABLE(hdma2d);
 800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   return HAL_OK;
 802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
 803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
 805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @brief  Abort the DMA2D Transfer.
 806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  hdma2d  pointer to a DMA2D_HandleTypeDef structure that contains
 807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                  the configuration information for the DMA2D.
 808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @retval HAL status
 809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
 810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_Abort(DMA2D_HandleTypeDef *hdma2d)
 811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** {
 812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   uint32_t tickstart;
 813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Abort the DMA2D transfer */
 815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* START bit is reset to make sure not to set it again, in the event the HW clears it
 816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****      between the register read and the register write by the CPU (writing 0 has no
 817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****      effect on START bitvalue) */
 818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_ABORT|DMA2D_CR_START, DMA2D_CR_ABORT);
 819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Get tick */
 821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   tickstart = HAL_GetTick();
 822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Check if the DMA2D is effectively disabled */
 824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   while((hdma2d->Instance->CR & DMA2D_CR_START) != 0U)
 825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
 826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     if((HAL_GetTick() - tickstart ) > DMA2D_TIMEOUT_ABORT)
 827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     {
 828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Update error code */
 829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TIMEOUT;
 830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
ARM GAS  /tmp/ccMN1FNg.s 			page 16


 831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Change the DMA2D state */
 832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
 833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Process Unlocked */
 835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       __HAL_UNLOCK(hdma2d);
 836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       return HAL_TIMEOUT;
 838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     }
 839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
 840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Disable the Transfer Complete, Transfer Error and Configuration Error interrupts */
 842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC|DMA2D_IT_TE|DMA2D_IT_CE);
 843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Change the DMA2D state*/
 845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_READY;
 846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Process Unlocked */
 848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   __HAL_UNLOCK(hdma2d);
 849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   return HAL_OK;
 851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
 852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
 854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @brief  Suspend the DMA2D Transfer.
 855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
 856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                 the configuration information for the DMA2D.
 857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @retval HAL status
 858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
 859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_Suspend(DMA2D_HandleTypeDef *hdma2d)
 860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** {
 861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   uint32_t tickstart;
 862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Suspend the DMA2D transfer */
 864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* START bit is reset to make sure not to set it again, in the event the HW clears it
 865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****      between the register read and the register write by the CPU (writing 0 has no
 866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****      effect on START bitvalue). */
 867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_SUSP|DMA2D_CR_START, DMA2D_CR_SUSP);
 868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Get tick */
 870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   tickstart = HAL_GetTick();
 871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Check if the DMA2D is effectively suspended */
 873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   while ((hdma2d->Instance->CR & (DMA2D_CR_SUSP | DMA2D_CR_START)) == DMA2D_CR_START)
 874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
 875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     if((HAL_GetTick() - tickstart ) > DMA2D_TIMEOUT_SUSPEND)
 876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     {
 877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Update error code */
 878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TIMEOUT;
 879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Change the DMA2D state */
 881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
 882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       return HAL_TIMEOUT;
 884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     }
 885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
 886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****    /* Check whether or not a transfer is actually suspended and change the DMA2D state accordingly 
ARM GAS  /tmp/ccMN1FNg.s 			page 17


 888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   if ((hdma2d->Instance->CR & DMA2D_CR_START) != 0U)
 889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
 890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     hdma2d->State = HAL_DMA2D_STATE_SUSPEND;
 891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
 892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   else
 893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
 894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* Make sure SUSP bit is cleared since it is meaningless
 895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****        when no tranfer is on-going */
 896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     CLEAR_BIT(hdma2d->Instance->CR, DMA2D_CR_SUSP);
 897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
 898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   return HAL_OK;
 900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
 901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
 903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @brief  Resume the DMA2D Transfer.
 904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
 905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                 the configuration information for the DMA2D.
 906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @retval HAL status
 907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
 908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_Resume(DMA2D_HandleTypeDef *hdma2d)
 909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** {
 910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Check the SUSP and START bits */
 911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   if((hdma2d->Instance->CR & (DMA2D_CR_SUSP | DMA2D_CR_START)) == (DMA2D_CR_SUSP | DMA2D_CR_START))
 912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
 913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* Ongoing transfer is suspended: change the DMA2D state before resuming */
 914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     hdma2d->State = HAL_DMA2D_STATE_BUSY;
 915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
 916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Resume the DMA2D transfer */
 918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* START bit is reset to make sure not to set it again, in the event the HW clears it
 919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****      between the register read and the register write by the CPU (writing 0 has no
 920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****      effect on START bitvalue). */
 921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   CLEAR_BIT(hdma2d->Instance->CR, (DMA2D_CR_SUSP|DMA2D_CR_START));
 922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   return HAL_OK;
 924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
 925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
 928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @brief  Enable the DMA2D CLUT Transfer.
 929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  hdma2d   Pointer to a DMA2D_HandleTypeDef structure that contains
 930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                   the configuration information for the DMA2D.
 931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  LayerIdx DMA2D Layer index.
 932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                   This parameter can be one of the following values:
 933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
 934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @retval HAL status
 935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
 936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_EnableCLUT(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
 937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** {
 938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Check the parameters */
 939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_LAYER(LayerIdx));
 940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Process locked */
 942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   __HAL_LOCK(hdma2d);
 943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Change DMA2D peripheral state */
ARM GAS  /tmp/ccMN1FNg.s 			page 18


 945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_BUSY;
 946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   if(LayerIdx == DMA2D_BACKGROUND_LAYER)
 948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
 949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* Enable the background CLUT loading */
 950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     SET_BIT(hdma2d->Instance->BGPFCCR, DMA2D_BGPFCCR_START);
 951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
 952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   else
 953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
 954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* Enable the foreground CLUT loading */
 955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     SET_BIT(hdma2d->Instance->FGPFCCR, DMA2D_FGPFCCR_START);
 956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
 957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   return HAL_OK;
 959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
 960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
 963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @brief  Start DMA2D CLUT Loading.
 964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  hdma2d   Pointer to a DMA2D_HandleTypeDef structure that contains
 965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                   the configuration information for the DMA2D.
 966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  CLUTCfg  Pointer to a DMA2D_CLUTCfgTypeDef structure that contains
 967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                   the configuration information for the color look up table.
 968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  LayerIdx DMA2D Layer index.
 969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                   This parameter can be one of the following values:
 970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
 971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @note Invoking this API is similar to calling HAL_DMA2D_ConfigCLUT() then HAL_DMA2D_EnableCLUT(
 972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @retval HAL status
 973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
 974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_CLUTLoad(DMA2D_HandleTypeDef *hdma2d, DMA2D_CLUTCfgTypeDef CLUTCfg, uin
 975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** {
 976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Check the parameters */
 977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_LAYER(LayerIdx));
 978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_CLUT_CM(CLUTCfg.CLUTColorMode));
 979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_CLUT_SIZE(CLUTCfg.Size));
 980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Process locked */
 982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   __HAL_LOCK(hdma2d);
 983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Change DMA2D peripheral state */
 985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_BUSY;
 986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Configure the CLUT of the background DMA2D layer */
 988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   if(LayerIdx == DMA2D_BACKGROUND_LAYER)
 989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
 990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* Write background CLUT memory address */
 991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     WRITE_REG(hdma2d->Instance->BGCMAR, (uint32_t)CLUTCfg.pCLUT);
 992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* Write background CLUT size and CLUT color mode */
 994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     MODIFY_REG(hdma2d->Instance->BGPFCCR, (DMA2D_BGPFCCR_CS | DMA2D_BGPFCCR_CCM),
 995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****             ((CLUTCfg.Size << DMA2D_BGPFCCR_CS_Pos) | (CLUTCfg.CLUTColorMode << DMA2D_BGPFCCR_CCM_P
 996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* Enable the CLUT loading for the background */
 998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     SET_BIT(hdma2d->Instance->BGPFCCR, DMA2D_BGPFCCR_START);
 999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
1000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Configure the CLUT of the foreground DMA2D layer */
1001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   else
ARM GAS  /tmp/ccMN1FNg.s 			page 19


1002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
1003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* Write foreground CLUT memory address */
1004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     WRITE_REG(hdma2d->Instance->FGCMAR, (uint32_t)CLUTCfg.pCLUT);
1005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* Write foreground CLUT size and CLUT color mode */
1007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     MODIFY_REG(hdma2d->Instance->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM),
1008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****             ((CLUTCfg.Size << DMA2D_FGPFCCR_CS_Pos) | (CLUTCfg.CLUTColorMode << DMA2D_FGPFCCR_CCM_P
1009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****  /* Enable the CLUT loading for the foreground */
1011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     SET_BIT(hdma2d->Instance->FGPFCCR, DMA2D_FGPFCCR_START);
1012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
1013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   return HAL_OK;
1015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
1016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
1018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @brief  Start DMA2D CLUT Loading with interrupt enabled.
1019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  hdma2d   Pointer to a DMA2D_HandleTypeDef structure that contains
1020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                   the configuration information for the DMA2D.
1021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  CLUTCfg  Pointer to a DMA2D_CLUTCfgTypeDef structure that contains
1022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                   the configuration information for the color look up table.
1023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  LayerIdx DMA2D Layer index.
1024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                   This parameter can be one of the following values:
1025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
1026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @retval HAL status
1027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
1028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_CLUTLoad_IT(DMA2D_HandleTypeDef *hdma2d, DMA2D_CLUTCfgTypeDef CLUTCfg, 
1029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** {
1030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Check the parameters */
1031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_LAYER(LayerIdx));
1032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_CLUT_CM(CLUTCfg.CLUTColorMode));
1033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_CLUT_SIZE(CLUTCfg.Size));
1034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Process locked */
1036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   __HAL_LOCK(hdma2d);
1037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Change DMA2D peripheral state */
1039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_BUSY;
1040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Configure the CLUT of the background DMA2D layer */
1042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   if(LayerIdx == DMA2D_BACKGROUND_LAYER)
1043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
1044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* Write background CLUT memory address */
1045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     WRITE_REG(hdma2d->Instance->BGCMAR, (uint32_t)CLUTCfg.pCLUT);
1046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* Write background CLUT size and CLUT color mode */
1048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     MODIFY_REG(hdma2d->Instance->BGPFCCR, (DMA2D_BGPFCCR_CS | DMA2D_BGPFCCR_CCM),
1049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****             ((CLUTCfg.Size << DMA2D_BGPFCCR_CS_Pos) | (CLUTCfg.CLUTColorMode << DMA2D_BGPFCCR_CCM_P
1050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* Enable the CLUT Transfer Complete, transfer Error, configuration Error and CLUT Access Error
1052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     __HAL_DMA2D_ENABLE_IT(hdma2d, DMA2D_IT_CTC | DMA2D_IT_TE | DMA2D_IT_CE |DMA2D_IT_CAE);
1053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* Enable the CLUT loading for the background */
1055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     SET_BIT(hdma2d->Instance->BGPFCCR, DMA2D_BGPFCCR_START);
1056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
1057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Configure the CLUT of the foreground DMA2D layer */
1058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   else
ARM GAS  /tmp/ccMN1FNg.s 			page 20


1059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
1060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* Write foreground CLUT memory address */
1061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     WRITE_REG(hdma2d->Instance->FGCMAR, (uint32_t)CLUTCfg.pCLUT);
1062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* Write foreground CLUT size and CLUT color mode */
1064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     MODIFY_REG(hdma2d->Instance->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM),
1065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****             ((CLUTCfg.Size << DMA2D_FGPFCCR_CS_Pos) | (CLUTCfg.CLUTColorMode << DMA2D_FGPFCCR_CCM_P
1066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* Enable the CLUT Transfer Complete, transfer Error, configuration Error and CLUT Access Error
1068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     __HAL_DMA2D_ENABLE_IT(hdma2d, DMA2D_IT_CTC | DMA2D_IT_TE | DMA2D_IT_CE |DMA2D_IT_CAE);
1069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* Enable the CLUT loading for the foreground */
1071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     SET_BIT(hdma2d->Instance->FGPFCCR, DMA2D_FGPFCCR_START);
1072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
1073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   return HAL_OK;
1075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
1076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
1078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @brief  Abort the DMA2D CLUT loading.
1079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  hdma2d  Pointer to a DMA2D_HandleTypeDef structure that contains
1080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                  the configuration information for the DMA2D.
1081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  LayerIdx DMA2D Layer index.
1082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                   This parameter can be one of the following values:
1083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
1084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @retval HAL status
1085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
1086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_CLUTLoading_Abort(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
1087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** {
1088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   uint32_t tickstart;
1089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   const __IO uint32_t * reg =  &(hdma2d->Instance->BGPFCCR); /* by default, point at background reg
1090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Abort the CLUT loading */
1092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   SET_BIT(hdma2d->Instance->CR, DMA2D_CR_ABORT);
1093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* If foreground CLUT loading is considered, update local variables */
1095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   if(LayerIdx == DMA2D_FOREGROUND_LAYER)
1096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
1097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     reg  = &(hdma2d->Instance->FGPFCCR);
1098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
1099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Get tick */
1102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   tickstart = HAL_GetTick();
1103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Check if the CLUT loading is aborted */
1105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   while((*reg & DMA2D_BGPFCCR_START) != 0U)
1106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
1107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     if((HAL_GetTick() - tickstart ) > DMA2D_TIMEOUT_ABORT)
1108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     {
1109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Update error code */
1110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TIMEOUT;
1111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Change the DMA2D state */
1113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
1114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Process Unlocked */
ARM GAS  /tmp/ccMN1FNg.s 			page 21


1116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       __HAL_UNLOCK(hdma2d);
1117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       return HAL_TIMEOUT;
1119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     }
1120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
1121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Disable the CLUT Transfer Complete, Transfer Error, Configuration Error and CLUT Access Error 
1123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC | DMA2D_IT_TE | DMA2D_IT_CE |DMA2D_IT_CAE);
1124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Change the DMA2D state*/
1126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_READY;
1127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Process Unlocked */
1129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   __HAL_UNLOCK(hdma2d);
1130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   return HAL_OK;
1132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
1133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
1135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @brief  Suspend the DMA2D CLUT loading.
1136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  hdma2d Pointer to a DMA2D_HandleTypeDef structure that contains
1137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                 the configuration information for the DMA2D.
1138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  LayerIdx DMA2D Layer index.
1139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                   This parameter can be one of the following values:
1140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
1141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @retval HAL status
1142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
1143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_CLUTLoading_Suspend(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
1144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** {
1145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   uint32_t tickstart;
1146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   uint32_t loadsuspended;
1147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   const __IO uint32_t * reg =  &(hdma2d->Instance->BGPFCCR); /* by default, point at background reg
1148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Suspend the CLUT loading */
1150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   SET_BIT(hdma2d->Instance->CR, DMA2D_CR_SUSP);
1151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* If foreground CLUT loading is considered, update local variables */
1153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   if(LayerIdx == DMA2D_FOREGROUND_LAYER)
1154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
1155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     reg  = &(hdma2d->Instance->FGPFCCR);
1156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
1157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Get tick */
1159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   tickstart = HAL_GetTick();
1160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Check if the CLUT loading is suspended */
1162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   loadsuspended = ((hdma2d->Instance->CR & DMA2D_CR_SUSP) == DMA2D_CR_SUSP)? 1UL: 0UL; /*1st condit
1163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   loadsuspended |= ((*reg & DMA2D_BGPFCCR_START) != DMA2D_BGPFCCR_START)? 1UL: 0UL; /*2nd condition
1164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   while (loadsuspended == 0UL)
1165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
1166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     if((HAL_GetTick() - tickstart ) > DMA2D_TIMEOUT_SUSPEND)
1167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     {
1168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Update error code */
1169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TIMEOUT;
1170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Change the DMA2D state */
1172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
ARM GAS  /tmp/ccMN1FNg.s 			page 22


1173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       return HAL_TIMEOUT;
1175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     }
1176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     loadsuspended = ((hdma2d->Instance->CR & DMA2D_CR_SUSP) == DMA2D_CR_SUSP)? 1UL: 0UL; /*1st cond
1177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     loadsuspended |= ((*reg & DMA2D_BGPFCCR_START) != DMA2D_BGPFCCR_START)? 1UL: 0UL; /*2nd conditi
1178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
1179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****    /* Check whether or not a transfer is actually suspended and change the DMA2D state accordingly 
1181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   if ((*reg & DMA2D_BGPFCCR_START) != 0U)
1182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
1183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     hdma2d->State = HAL_DMA2D_STATE_SUSPEND;
1184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
1185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   else
1186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
1187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* Make sure SUSP bit is cleared since it is meaningless
1188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****        when no tranfer is on-going */
1189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     CLEAR_BIT(hdma2d->Instance->CR, DMA2D_CR_SUSP);
1190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
1191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   return HAL_OK;
1193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
1194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
1196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @brief  Resume the DMA2D CLUT loading.
1197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
1198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                 the configuration information for the DMA2D.
1199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  LayerIdx DMA2D Layer index.
1200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                   This parameter can be one of the following values:
1201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
1202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @retval HAL status
1203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
1204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_CLUTLoading_Resume(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
1205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** {
1206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Check the SUSP and START bits for background or foreground CLUT loading */
1207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   if(LayerIdx == DMA2D_BACKGROUND_LAYER)
1208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
1209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* Background CLUT loading suspension check */
1210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     if ((hdma2d->Instance->CR & DMA2D_CR_SUSP) == DMA2D_CR_SUSP)
1211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     {
1212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       if((hdma2d->Instance->BGPFCCR & DMA2D_BGPFCCR_START) == DMA2D_BGPFCCR_START)
1213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       {
1214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Ongoing CLUT loading is suspended: change the DMA2D state before resuming */
1215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       hdma2d->State = HAL_DMA2D_STATE_BUSY;
1216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     }
1217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
1218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
1219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   else
1220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
1221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* Foreground CLUT loading suspension check */
1222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     if ((hdma2d->Instance->CR & DMA2D_CR_SUSP) == DMA2D_CR_SUSP)
1223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     {
1224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       if ((hdma2d->Instance->FGPFCCR & DMA2D_FGPFCCR_START) == DMA2D_FGPFCCR_START)
1225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       {
1226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Ongoing CLUT loading is suspended: change the DMA2D state before resuming */
1227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       hdma2d->State = HAL_DMA2D_STATE_BUSY;
1228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     }
1229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
ARM GAS  /tmp/ccMN1FNg.s 			page 23


1230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
1231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Resume the CLUT loading */
1233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   CLEAR_BIT(hdma2d->Instance->CR, DMA2D_CR_SUSP);
1234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   return HAL_OK;
1236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
1237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
1240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @brief  Polling for transfer complete or CLUT loading.
1242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  hdma2d Pointer to a DMA2D_HandleTypeDef structure that contains
1243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                 the configuration information for the DMA2D.
1244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  Timeout Timeout duration
1245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @retval HAL status
1246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
1247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_PollForTransfer(DMA2D_HandleTypeDef *hdma2d, uint32_t Timeout)
1248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** {
1249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   uint32_t tickstart;
1250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   uint32_t layer_start;
1251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   __IO uint32_t isrflags = 0x0U;
1252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Polling for DMA2D transfer */
1254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   if((hdma2d->Instance->CR & DMA2D_CR_START) != 0U)
1255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
1256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****    /* Get tick */
1257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****    tickstart = HAL_GetTick();
1258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     while(__HAL_DMA2D_GET_FLAG(hdma2d, DMA2D_FLAG_TC) == 0U)
1260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     {
1261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       isrflags = READ_REG(hdma2d->Instance->ISR);
1262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       if ((isrflags & (DMA2D_FLAG_CE|DMA2D_FLAG_TE)) != 0U)
1263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       {
1264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         if ((isrflags & DMA2D_FLAG_CE) != 0U)
1265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         {
1266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
1267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         }
1268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         if ((isrflags & DMA2D_FLAG_TE) != 0U)
1269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         {
1270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
1271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         }
1272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         /* Clear the transfer and configuration error flags */
1273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE | DMA2D_FLAG_TE);
1274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         /* Change DMA2D state */
1276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         hdma2d->State = HAL_DMA2D_STATE_ERROR;
1277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         /* Process unlocked */
1279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         __HAL_UNLOCK(hdma2d);
1280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         return HAL_ERROR;
1282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       }
1283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Check for the Timeout */
1284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       if(Timeout != HAL_MAX_DELAY)
1285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       {
1286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         if(((HAL_GetTick() - tickstart ) > Timeout)||(Timeout == 0U))
ARM GAS  /tmp/ccMN1FNg.s 			page 24


1287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         {
1288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           /* Update error code */
1289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TIMEOUT;
1290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           /* Change the DMA2D state */
1292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
1293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           /* Process unlocked */
1295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           __HAL_UNLOCK(hdma2d);
1296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           return HAL_TIMEOUT;
1298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         }
1299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       }
1300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     }
1301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
1302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Polling for CLUT loading (foreground or background) */
1303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   layer_start = hdma2d->Instance->FGPFCCR & DMA2D_FGPFCCR_START;
1304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   layer_start |= hdma2d->Instance->BGPFCCR & DMA2D_BGPFCCR_START;
1305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   if (layer_start != 0U)
1306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
1307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* Get tick */
1308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     tickstart = HAL_GetTick();
1309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     while(__HAL_DMA2D_GET_FLAG(hdma2d, DMA2D_FLAG_CTC) == 0U)
1311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     {
1312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       isrflags = READ_REG(hdma2d->Instance->ISR);
1313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       if ((isrflags & (DMA2D_FLAG_CAE|DMA2D_FLAG_CE|DMA2D_FLAG_TE)) != 0U)
1314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       {
1315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         if ((isrflags & DMA2D_FLAG_CAE) != 0U)
1316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         {
1317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
1318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         }
1319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         if ((isrflags & DMA2D_FLAG_CE) != 0U)
1320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         {
1321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
1322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         }
1323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         if ((isrflags & DMA2D_FLAG_TE) != 0U)
1324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         {
1325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
1326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         }
1327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         /* Clear the CLUT Access Error, Configuration Error and Transfer Error flags */
1328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
1329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         /* Change DMA2D state */
1331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         hdma2d->State= HAL_DMA2D_STATE_ERROR;
1332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         /* Process unlocked */
1334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         __HAL_UNLOCK(hdma2d);
1335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         return HAL_ERROR;
1337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       }
1338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Check for the Timeout */
1339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       if(Timeout != HAL_MAX_DELAY)
1340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       {
1341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         if(((HAL_GetTick() - tickstart ) > Timeout)||(Timeout == 0U))
1342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         {
1343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           /* Update error code */
ARM GAS  /tmp/ccMN1FNg.s 			page 25


1344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TIMEOUT;
1345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           /* Change the DMA2D state */
1347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           hdma2d->State= HAL_DMA2D_STATE_TIMEOUT;
1348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           /* Process unlocked */
1350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           __HAL_UNLOCK(hdma2d);
1351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           return HAL_TIMEOUT;
1353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         }
1354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       }
1355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     }
1356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
1357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Clear the transfer complete and CLUT loading flags */
1359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC|DMA2D_FLAG_CTC);
1360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Change DMA2D state */
1362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_READY;
1363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Process unlocked */
1365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   __HAL_UNLOCK(hdma2d);
1366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   return HAL_OK;
1368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
1369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
1370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @brief  Handle DMA2D interrupt request.
1371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  hdma2d Pointer to a DMA2D_HandleTypeDef structure that contains
1372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                 the configuration information for the DMA2D.
1373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @retval HAL status
1374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
1375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
1376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** {
1377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
1378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   uint32_t crflags = READ_REG(hdma2d->Instance->CR);
1379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Transfer Error Interrupt management ***************************************/
1381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   if ((isrflags & DMA2D_FLAG_TE) != 0U)
1382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
1383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     if ((crflags & DMA2D_IT_TE) != 0U)
1384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     {
1385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Disable the transfer Error interrupt */
1386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
1387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Update error code */
1389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
1390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Clear the transfer error flag */
1392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
1393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Change DMA2D state */
1395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       hdma2d->State = HAL_DMA2D_STATE_ERROR;
1396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Process Unlocked */
1398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       __HAL_UNLOCK(hdma2d);
1399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       if(hdma2d->XferErrorCallback != NULL)
ARM GAS  /tmp/ccMN1FNg.s 			page 26


1401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       {
1402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         /* Transfer error Callback */
1403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         hdma2d->XferErrorCallback(hdma2d);
1404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       }
1405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     }
1406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
1407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Configuration Error Interrupt management **********************************/
1408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   if ((isrflags & DMA2D_FLAG_CE) != 0U)
1409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
1410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     if ((crflags & DMA2D_IT_CE) != 0U)
1411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     {
1412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Disable the Configuration Error interrupt */
1413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
1414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Clear the Configuration error flag */
1416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
1417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Update error code */
1419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
1420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Change DMA2D state */
1422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       hdma2d->State = HAL_DMA2D_STATE_ERROR;
1423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Process Unlocked */
1425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       __HAL_UNLOCK(hdma2d);
1426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       if(hdma2d->XferErrorCallback != NULL)
1428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       {
1429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         /* Transfer error Callback */
1430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         hdma2d->XferErrorCallback(hdma2d);
1431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       }
1432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     }
1433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
1434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* CLUT access Error Interrupt management ***********************************/
1435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   if ((isrflags & DMA2D_FLAG_CAE) != 0U)
1436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
1437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     if ((crflags & DMA2D_IT_CAE) != 0U)
1438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     {
1439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Disable the CLUT access error interrupt */
1440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
1441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Clear the CLUT access error flag */
1443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
1444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Update error code */
1446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
1447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Change DMA2D state */
1449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       hdma2d->State = HAL_DMA2D_STATE_ERROR;
1450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Process Unlocked */
1452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       __HAL_UNLOCK(hdma2d);
1453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       if(hdma2d->XferErrorCallback != NULL)
1455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       {
1456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         /* Transfer error Callback */
1457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         hdma2d->XferErrorCallback(hdma2d);
ARM GAS  /tmp/ccMN1FNg.s 			page 27


1458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       }
1459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     }
1460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
1461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Transfer watermark Interrupt management **********************************/
1462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   if ((isrflags & DMA2D_FLAG_TW) != 0U)
1463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
1464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     if ((crflags & DMA2D_IT_TW) != 0U)
1465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     {
1466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Disable the transfer watermark interrupt */
1467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
1468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Clear the transfer watermark flag */
1470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
1471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Transfer watermark Callback */
1473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** #if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
1474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       hdma2d->LineEventCallback(hdma2d);
1475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** #else
1476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       HAL_DMA2D_LineEventCallback(hdma2d);
1477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** #endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
1478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     }
1480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
1481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Transfer Complete Interrupt management ************************************/
1482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   if ((isrflags & DMA2D_FLAG_TC) != 0U)
1483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
1484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     if ((crflags & DMA2D_IT_TC) != 0U)
1485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     {
1486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Disable the transfer complete interrupt */
1487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
1488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Clear the transfer complete flag */
1490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
1491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Update error code */
1493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
1494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Change DMA2D state */
1496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       hdma2d->State = HAL_DMA2D_STATE_READY;
1497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Process Unlocked */
1499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       __HAL_UNLOCK(hdma2d);
1500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       if(hdma2d->XferCpltCallback != NULL)
1502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       {
1503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         /* Transfer complete Callback */
1504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         hdma2d->XferCpltCallback(hdma2d);
1505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       }
1506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     }
1507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
1508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* CLUT Transfer Complete Interrupt management ******************************/
1509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   if ((isrflags & DMA2D_FLAG_CTC) != 0U)
1510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
1511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     if ((crflags & DMA2D_IT_CTC) != 0U)
1512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     {
1513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Disable the CLUT transfer complete interrupt */
1514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
ARM GAS  /tmp/ccMN1FNg.s 			page 28


1515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Clear the CLUT transfer complete flag */
1517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
1518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Update error code */
1520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
1521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Change DMA2D state */
1523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       hdma2d->State = HAL_DMA2D_STATE_READY;
1524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Process Unlocked */
1526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       __HAL_UNLOCK(hdma2d);
1527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* CLUT Transfer complete Callback */
1529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** #if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
1530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       hdma2d->CLUTLoadingCpltCallback(hdma2d);
1531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** #else
1532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
1533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** #endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
1534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     }
1535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
1536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
1538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
1540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @brief  Transfer watermark callback.
1541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
1542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                 the configuration information for the DMA2D.
1543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @retval None
1544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
1545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** __weak void HAL_DMA2D_LineEventCallback(DMA2D_HandleTypeDef *hdma2d)
1546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** {
1547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Prevent unused argument(s) compilation warning */
1548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   UNUSED(hdma2d);
1549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* NOTE : This function should not be modified; when the callback is needed,
1551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****             the HAL_DMA2D_LineEventCallback can be implemented in the user file.
1552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****    */
1553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
1554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
1556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @brief  CLUT Transfer Complete callback.
1557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
1558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                 the configuration information for the DMA2D.
1559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @retval None
1560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
1561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** __weak void HAL_DMA2D_CLUTLoadingCpltCallback(DMA2D_HandleTypeDef *hdma2d)
1562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** {
1563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Prevent unused argument(s) compilation warning */
1564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   UNUSED(hdma2d);
1565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* NOTE : This function should not be modified; when the callback is needed,
1567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****             the HAL_DMA2D_CLUTLoadingCpltCallback can be implemented in the user file.
1568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****    */
1569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
1570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
ARM GAS  /tmp/ccMN1FNg.s 			page 29


1572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @}
1573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
1574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /** @defgroup DMA2D_Exported_Functions_Group3 Peripheral Control functions
1576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****  *  @brief    Peripheral Control functions
1577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****  *
1578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** @verbatim
1579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****  ===============================================================================
1580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****                     ##### Peripheral Control functions #####
1581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****  ===============================================================================
1582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     [..]  This section provides functions allowing to:
1583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (+) Configure the DMA2D foreground or background layer parameters.
1584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (+) Configure the DMA2D CLUT transfer.
1585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (+) Configure the line watermark
1586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (+) Configure the dead time value.
1587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (+) Enable or disable the dead time value functionality.
1588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** @endverbatim
1591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @{
1592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
1593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
1595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @brief  Configure the DMA2D Layer according to the specified
1596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *         parameters in the DMA2D_HandleTypeDef.
1597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  hdma2d Pointer to a DMA2D_HandleTypeDef structure that contains
1598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                 the configuration information for the DMA2D.
1599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  LayerIdx DMA2D Layer index.
1600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                   This parameter can be one of the following values:
1601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
1602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @retval HAL status
1603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
1604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
1605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** {
1606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   DMA2D_LayerCfgTypeDef *pLayerCfg;
1607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   uint32_t regMask, regValue;
1608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Check the parameters */
1610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_LAYER(LayerIdx));
1611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_OFFSET(hdma2d->LayerCfg[LayerIdx].InputOffset));
1612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   if(hdma2d->Init.Mode != DMA2D_R2M)
1613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
1614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     assert_param(IS_DMA2D_INPUT_COLOR_MODE(hdma2d->LayerCfg[LayerIdx].InputColorMode));
1615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     if(hdma2d->Init.Mode != DMA2D_M2M)
1616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     {
1617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
1618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     }
1619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
1620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** #if defined (DMA2D_ALPHA_INV_RB_SWAP_SUPPORT)
1621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_ALPHA_INVERTED(hdma2d->LayerCfg[LayerIdx].AlphaInverted));
1622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_RB_SWAP(hdma2d->LayerCfg[LayerIdx].RedBlueSwap));
1623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** #endif /* DMA2D_ALPHA_INV_RB_SWAP_SUPPORT */
1624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Process locked */
1626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   __HAL_LOCK(hdma2d);
1627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Change DMA2D peripheral state */
ARM GAS  /tmp/ccMN1FNg.s 			page 30


1629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_BUSY;
1630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   pLayerCfg = &hdma2d->LayerCfg[LayerIdx];
1632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
1634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** #if defined (DMA2D_ALPHA_INV_RB_SWAP_SUPPORT)
1635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) |\
1636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****              (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_
1637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   regMask  = (DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA | DMA2D_BGPFCCR_AI | DMA2D_
1638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** #else
1639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
1640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;
1641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** #endif /* DMA2D_ALPHA_INV_RB_SWAP_SUPPORT */
1642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8
1645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
1646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
1647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
1648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   else
1649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
1650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     regValue |=  (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
1651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
1652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Configure the background DMA2D layer */
1654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   if(LayerIdx == DMA2D_BACKGROUND_LAYER)
1655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
1656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* Write DMA2D BGPFCCR register */
1657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
1658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* DMA2D BGOR register configuration -------------------------------------*/
1660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
1661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* DMA2D BGCOLR register configuration -------------------------------------*/
1663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_
1664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     {
1665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE|DMA2D_BGCOLR_G
1666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     }
1667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
1668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Configure the foreground DMA2D layer */
1669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   else
1670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
1671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****      /* Write DMA2D FGPFCCR register */
1674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
1675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* DMA2D FGOR register configuration -------------------------------------*/
1677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
1678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* DMA2D FGCOLR register configuration -------------------------------------*/
1680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_
1681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     {
1682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE|DMA2D_FGCOLR_G
1683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     }
1684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
1685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Initialize the DMA2D state*/
ARM GAS  /tmp/ccMN1FNg.s 			page 31


1686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_READY;
1687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Process unlocked */
1689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   __HAL_UNLOCK(hdma2d);
1690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   return HAL_OK;
1692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
1693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
1695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @brief  Configure the DMA2D CLUT Transfer.
1696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  hdma2d   Pointer to a DMA2D_HandleTypeDef structure that contains
1697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                   the configuration information for the DMA2D.
1698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  CLUTCfg  Pointer to a DMA2D_CLUTCfgTypeDef structure that contains
1699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                   the configuration information for the color look up table.
1700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  LayerIdx DMA2D Layer index.
1701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                   This parameter can be one of the following values:
1702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
1703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @retval HAL status
1704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
1705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_ConfigCLUT(DMA2D_HandleTypeDef *hdma2d, DMA2D_CLUTCfgTypeDef CLUTCfg, u
1706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** {
1707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Check the parameters */
1708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_LAYER(LayerIdx));
1709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_CLUT_CM(CLUTCfg.CLUTColorMode));
1710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_CLUT_SIZE(CLUTCfg.Size));
1711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Process locked */
1713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   __HAL_LOCK(hdma2d);
1714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Change DMA2D peripheral state */
1716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_BUSY;
1717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Configure the CLUT of the background DMA2D layer */
1719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   if(LayerIdx == DMA2D_BACKGROUND_LAYER)
1720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
1721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* Write background CLUT memory address */
1722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     WRITE_REG(hdma2d->Instance->BGCMAR, (uint32_t)CLUTCfg.pCLUT);
1723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* Write background CLUT size and CLUT color mode */
1725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     MODIFY_REG(hdma2d->Instance->BGPFCCR, (DMA2D_BGPFCCR_CS | DMA2D_BGPFCCR_CCM),
1726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****             ((CLUTCfg.Size << DMA2D_BGPFCCR_CS_Pos) | (CLUTCfg.CLUTColorMode << DMA2D_BGPFCCR_CCM_P
1727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****  }
1728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****  /* Configure the CLUT of the foreground DMA2D layer */
1729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****  else
1730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****  {
1731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****    /* Write foreground CLUT memory address */
1732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     WRITE_REG(hdma2d->Instance->FGCMAR, (uint32_t)CLUTCfg.pCLUT);
1733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* Write foreground CLUT size and CLUT color mode */
1735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     MODIFY_REG(hdma2d->Instance->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM),
1736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****             ((CLUTCfg.Size << DMA2D_FGPFCCR_CS_Pos) | (CLUTCfg.CLUTColorMode << DMA2D_FGPFCCR_CCM_P
1737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
1738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Set the DMA2D state to Ready*/
1740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_READY;
1741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Process unlocked */
ARM GAS  /tmp/ccMN1FNg.s 			page 32


1743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   __HAL_UNLOCK(hdma2d);
1744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   return HAL_OK;
1746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
1747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
1750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @brief  Configure the line watermark.
1751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  hdma2d Pointer to a DMA2D_HandleTypeDef structure that contains
1752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                 the configuration information for the DMA2D.
1753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  Line   Line Watermark configuration (maximum 16-bit long value expected).
1754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @note   HAL_DMA2D_ProgramLineEvent() API enables the transfer watermark interrupt.
1755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @note   The transfer watermark interrupt is disabled once it has occurred.
1756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @retval HAL status
1757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
1758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_ProgramLineEvent(DMA2D_HandleTypeDef *hdma2d, uint32_t Line)
1760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** {
1761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Check the parameters */
1762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_LINEWATERMARK(Line));
1763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   if (Line > DMA2D_LWR_LW)
1765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
1766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     return HAL_ERROR;
1767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
1768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   else
1769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
1770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* Process locked */
1771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     __HAL_LOCK(hdma2d);
1772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* Change DMA2D peripheral state */
1774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     hdma2d->State = HAL_DMA2D_STATE_BUSY;
1775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* Sets the Line watermark configuration */
1777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     WRITE_REG(hdma2d->Instance->LWR, Line);
1778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* Enable the Line interrupt */
1780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     __HAL_DMA2D_ENABLE_IT(hdma2d, DMA2D_IT_TW);
1781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* Initialize the DMA2D state*/
1783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     hdma2d->State = HAL_DMA2D_STATE_READY;
1784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* Process unlocked */
1786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     __HAL_UNLOCK(hdma2d);
1787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     return HAL_OK;
1789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
1790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
1791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
1793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @brief Enable DMA2D dead time feature.
1794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param hdma2d DMA2D handle.
1795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @retval HAL status
1796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
1797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_EnableDeadTime(DMA2D_HandleTypeDef *hdma2d)
1798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** {
1799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Process Locked */
ARM GAS  /tmp/ccMN1FNg.s 			page 33


1800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   __HAL_LOCK(hdma2d);
1801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_BUSY;
1803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Set DMA2D_AMTCR EN bit */
1805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   SET_BIT(hdma2d->Instance->AMTCR, DMA2D_AMTCR_EN);
1806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_READY;
1808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Process Unlocked */
1810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   __HAL_UNLOCK(hdma2d);
1811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   return HAL_OK;
1813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
1814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
1816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @brief Disable DMA2D dead time feature.
1817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param hdma2d DMA2D handle.
1818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @retval HAL status
1819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
1820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_DisableDeadTime(DMA2D_HandleTypeDef *hdma2d)
1821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** {
1822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Process Locked */
1823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   __HAL_LOCK(hdma2d);
1824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_BUSY;
1826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Clear DMA2D_AMTCR EN bit */
1828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   CLEAR_BIT(hdma2d->Instance->AMTCR, DMA2D_AMTCR_EN);
1829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_READY;
1831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Process Unlocked */
1833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   __HAL_UNLOCK(hdma2d);
1834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   return HAL_OK;
1836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
1837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
1839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @brief Configure dead time.
1840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @note The dead time value represents the guaranteed minimum number of cycles between
1841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *       two consecutive transactions on the AHB bus.
1842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param hdma2d DMA2D handle.
1843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param DeadTime dead time value.
1844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @retval HAL status
1845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
1846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_ConfigDeadTime(DMA2D_HandleTypeDef *hdma2d, uint8_t DeadTime)
1847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** {
1848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Process Locked */
1849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   __HAL_LOCK(hdma2d);
1850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_BUSY;
1852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Set DMA2D_AMTCR DT field */
1854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   MODIFY_REG(hdma2d->Instance->AMTCR, DMA2D_AMTCR_DT, (((uint32_t) DeadTime) << DMA2D_AMTCR_DT_Pos)
1855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_READY;
ARM GAS  /tmp/ccMN1FNg.s 			page 34


1857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Process Unlocked */
1859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   __HAL_UNLOCK(hdma2d);
1860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   return HAL_OK;
1862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
1863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
1865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @}
1866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
1867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /** @defgroup DMA2D_Exported_Functions_Group4 Peripheral State and Error functions
1870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****  *  @brief    Peripheral State functions
1871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****  *
1872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** @verbatim
1873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****  ===============================================================================
1874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****                   ##### Peripheral State and Errors functions #####
1875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****  ===============================================================================
1876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     [..]
1877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     This subsection provides functions allowing to:
1878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (+) Get the DMA2D state
1879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (+) Get the DMA2D error code
1880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** @endverbatim
1882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @{
1883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
1884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
1886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @brief  Return the DMA2D state
1887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
1888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                 the configuration information for the DMA2D.
1889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @retval HAL state
1890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
1891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** HAL_DMA2D_StateTypeDef HAL_DMA2D_GetState(DMA2D_HandleTypeDef *hdma2d)
1892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** {
1893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   return hdma2d->State;
1894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
1895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
1897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @brief  Return the DMA2D error code
1898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  hdma2d  pointer to a DMA2D_HandleTypeDef structure that contains
1899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *               the configuration information for DMA2D.
1900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @retval DMA2D Error Code
1901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
1902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** uint32_t HAL_DMA2D_GetError(DMA2D_HandleTypeDef *hdma2d)
1903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** {
1904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   return hdma2d->ErrorCode;
1905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
1906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
1908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @}
1909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
1910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
1912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @}
1913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
ARM GAS  /tmp/ccMN1FNg.s 			page 35


1914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /** @defgroup DMA2D_Private_Functions DMA2D Private Functions
1917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @{
1918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
1919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
1921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @brief  Set the DMA2D transfer parameters.
1922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  hdma2d     Pointer to a DMA2D_HandleTypeDef structure that contains
1923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                     the configuration information for the specified DMA2D.
1924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  pdata      The source memory Buffer address
1925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  DstAddress The destination memory Buffer address
1926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  Width      The width of data to be transferred from source to destination.
1927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  Height     The height of data to be transferred from source to destination.
1928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @retval HAL status
1929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
1930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** static void DMA2D_SetConfig(DMA2D_HandleTypeDef *hdma2d, uint32_t pdata, uint32_t DstAddress, uint3
1931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** {
  27              		.loc 1 1931 0
  28              		.cfi_startproc
  29              		@ args = 4, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
  33 0000 70B4     		push	{r4, r5, r6}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 12
  36              		.cfi_offset 4, -12
  37              		.cfi_offset 5, -8
  38              		.cfi_offset 6, -4
1932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   uint32_t tmp;
1933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   uint32_t tmp1;
1934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   uint32_t tmp2;
1935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   uint32_t tmp3;
1936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   uint32_t tmp4;
1937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Configure DMA2D data size */
1939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   MODIFY_REG(hdma2d->Instance->NLR, (DMA2D_NLR_NL|DMA2D_NLR_PL), (Height| (Width << DMA2D_NLR_PL_Po
  39              		.loc 1 1939 0
  40 0002 0668     		ldr	r6, [r0]
  41 0004 746C     		ldr	r4, [r6, #68]
  42 0006 04F04044 		and	r4, r4, #-1073741824
  43 000a 039D     		ldr	r5, [sp, #12]
  44 000c 45EA0343 		orr	r3, r5, r3, lsl #16
  45              	.LVL1:
  46 0010 1C43     		orrs	r4, r4, r3
  47 0012 7464     		str	r4, [r6, #68]
1940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Configure DMA2D destination address */
1942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   WRITE_REG(hdma2d->Instance->OMAR, DstAddress);
  48              		.loc 1 1942 0
  49 0014 0368     		ldr	r3, [r0]
  50 0016 DA63     		str	r2, [r3, #60]
1943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Register to memory DMA2D mode selected */
1945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   if (hdma2d->Init.Mode == DMA2D_R2M)
  51              		.loc 1 1945 0
ARM GAS  /tmp/ccMN1FNg.s 			page 36


  52 0018 4368     		ldr	r3, [r0, #4]
  53 001a B3F5403F 		cmp	r3, #196608
  54 001e 03D0     		beq	.L9
1946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
1947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     tmp1 = pdata & DMA2D_OCOLR_ALPHA_1;
1948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     tmp2 = pdata & DMA2D_OCOLR_RED_1;
1949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     tmp3 = pdata & DMA2D_OCOLR_GREEN_1;
1950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     tmp4 = pdata & DMA2D_OCOLR_BLUE_1;
1951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* Prepare the value to be written to the OCOLR register according to the color mode */
1953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_ARGB8888)
1954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     {
1955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       tmp = (tmp3 | tmp2 | tmp1| tmp4);
1956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     }
1957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_RGB888)
1958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     {
1959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       tmp = (tmp3 | tmp2 | tmp4);
1960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     }
1961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_RGB565)
1962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     {
1963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       tmp2 = (tmp2 >> 19U);
1964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       tmp3 = (tmp3 >> 10U);
1965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       tmp4 = (tmp4 >> 3U );
1966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       tmp  = ((tmp3 << 5U) | (tmp2 << 11U) | tmp4);
1967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     }
1968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_ARGB1555)
1969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     {
1970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       tmp1 = (tmp1 >> 31U);
1971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       tmp2 = (tmp2 >> 19U);
1972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       tmp3 = (tmp3 >> 11U);
1973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       tmp4 = (tmp4 >> 3U );
1974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       tmp  = ((tmp3 << 5U) | (tmp2 << 10U) | (tmp1 << 15U) | tmp4);
1975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     }
1976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     else /* Dhdma2d->Init.ColorMode = DMA2D_OUTPUT_ARGB4444 */
1977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     {
1978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       tmp1 = (tmp1 >> 28U);
1979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       tmp2 = (tmp2 >> 20U);
1980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       tmp3 = (tmp3 >> 12U);
1981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       tmp4 = (tmp4 >> 4U );
1982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       tmp  = ((tmp3 << 4U) | (tmp2 << 8U) | (tmp1 << 12U) | tmp4);
1983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     }
1984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* Write to DMA2D OCOLR register */
1985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     WRITE_REG(hdma2d->Instance->OCOLR, tmp);
1986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
1987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   else /* M2M, M2M_PFC or M2M_Blending DMA2D Mode */
1988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
1989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* Configure DMA2D source address */
1990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     WRITE_REG(hdma2d->Instance->FGMAR, pdata);
  55              		.loc 1 1990 0
  56 0020 0368     		ldr	r3, [r0]
  57 0022 D960     		str	r1, [r3, #12]
  58              	.LVL2:
  59              	.L1:
1991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
1992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
  60              		.loc 1 1992 0
  61 0024 70BC     		pop	{r4, r5, r6}
ARM GAS  /tmp/ccMN1FNg.s 			page 37


  62              	.LCFI1:
  63              		.cfi_remember_state
  64              		.cfi_restore 6
  65              		.cfi_restore 5
  66              		.cfi_restore 4
  67              		.cfi_def_cfa_offset 0
  68              	.LVL3:
  69 0026 7047     		bx	lr
  70              	.LVL4:
  71              	.L9:
  72              	.LCFI2:
  73              		.cfi_restore_state
1947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     tmp2 = pdata & DMA2D_OCOLR_RED_1;
  74              		.loc 1 1947 0
  75 0028 01F07F46 		and	r6, r1, #-16777216
  76              	.LVL5:
1948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     tmp3 = pdata & DMA2D_OCOLR_GREEN_1;
  77              		.loc 1 1948 0
  78 002c 01F47F03 		and	r3, r1, #16711680
  79              	.LVL6:
1949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     tmp4 = pdata & DMA2D_OCOLR_BLUE_1;
  80              		.loc 1 1949 0
  81 0030 01F47F45 		and	r5, r1, #65280
  82              	.LVL7:
1950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
  83              		.loc 1 1950 0
  84 0034 CAB2     		uxtb	r2, r1
  85              	.LVL8:
1953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     {
  86              		.loc 1 1953 0
  87 0036 8468     		ldr	r4, [r0, #8]
  88 0038 94B1     		cbz	r4, .L3
1957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     {
  89              		.loc 1 1957 0
  90 003a 012C     		cmp	r4, #1
  91 003c 0ED0     		beq	.L10
1961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     {
  92              		.loc 1 1961 0
  93 003e 022C     		cmp	r4, #2
  94 0040 11D0     		beq	.L11
1968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     {
  95              		.loc 1 1968 0
  96 0042 032C     		cmp	r4, #3
  97 0044 17D0     		beq	.L12
1978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       tmp2 = (tmp2 >> 20U);
  98              		.loc 1 1978 0
  99 0046 360F     		lsrs	r6, r6, #28
 100              	.LVL9:
1979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       tmp3 = (tmp3 >> 12U);
 101              		.loc 1 1979 0
 102 0048 1B0D     		lsrs	r3, r3, #20
 103              	.LVL10:
1980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       tmp4 = (tmp4 >> 4U );
 104              		.loc 1 1980 0
 105 004a 2D0B     		lsrs	r5, r5, #12
 106              	.LVL11:
1982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     }
ARM GAS  /tmp/ccMN1FNg.s 			page 38


 107              		.loc 1 1982 0
 108 004c 1902     		lsls	r1, r3, #8
 109              	.LVL12:
 110 004e 41EA0511 		orr	r1, r1, r5, lsl #4
 111 0052 41EA0631 		orr	r1, r1, r6, lsl #12
 112 0056 41EA1211 		orr	r1, r1, r2, lsr #4
 113              	.LVL13:
 114 005a 01E0     		b	.L3
 115              	.LVL14:
 116              	.L10:
1959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     }
 117              		.loc 1 1959 0
 118 005c 21F07F41 		bic	r1, r1, #-16777216
 119              	.LVL15:
 120              	.L3:
1985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
 121              		.loc 1 1985 0
 122 0060 0368     		ldr	r3, [r0]
 123              	.LVL16:
 124 0062 9963     		str	r1, [r3, #56]
 125 0064 DEE7     		b	.L1
 126              	.LVL17:
 127              	.L11:
1963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       tmp3 = (tmp3 >> 10U);
 128              		.loc 1 1963 0
 129 0066 DB0C     		lsrs	r3, r3, #19
 130              	.LVL18:
1964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       tmp4 = (tmp4 >> 3U );
 131              		.loc 1 1964 0
 132 0068 AD0A     		lsrs	r5, r5, #10
 133              	.LVL19:
1966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     }
 134              		.loc 1 1966 0
 135 006a D902     		lsls	r1, r3, #11
 136              	.LVL20:
 137 006c 41EA4511 		orr	r1, r1, r5, lsl #5
 138 0070 41EAD201 		orr	r1, r1, r2, lsr #3
 139              	.LVL21:
 140 0074 F4E7     		b	.L3
 141              	.LVL22:
 142              	.L12:
1970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       tmp2 = (tmp2 >> 19U);
 143              		.loc 1 1970 0
 144 0076 F60F     		lsrs	r6, r6, #31
 145              	.LVL23:
1971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       tmp3 = (tmp3 >> 11U);
 146              		.loc 1 1971 0
 147 0078 DB0C     		lsrs	r3, r3, #19
 148              	.LVL24:
1972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       tmp4 = (tmp4 >> 3U );
 149              		.loc 1 1972 0
 150 007a ED0A     		lsrs	r5, r5, #11
 151              	.LVL25:
1974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     }
 152              		.loc 1 1974 0
 153 007c 9902     		lsls	r1, r3, #10
 154              	.LVL26:
ARM GAS  /tmp/ccMN1FNg.s 			page 39


 155 007e 41EA4511 		orr	r1, r1, r5, lsl #5
 156 0082 41EAC631 		orr	r1, r1, r6, lsl #15
 157 0086 41EAD201 		orr	r1, r1, r2, lsr #3
 158              	.LVL27:
 159 008a E9E7     		b	.L3
 160              		.cfi_endproc
 161              	.LFE170:
 163              		.section	.text.HAL_DMA2D_MspInit,"ax",%progbits
 164              		.align	1
 165              		.weak	HAL_DMA2D_MspInit
 166              		.syntax unified
 167              		.thumb
 168              		.thumb_func
 169              		.fpu fpv5-sp-d16
 171              	HAL_DMA2D_MspInit:
 172              	.LFB143:
 404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Prevent unused argument(s) compilation warning */
 173              		.loc 1 404 0
 174              		.cfi_startproc
 175              		@ args = 0, pretend = 0, frame = 0
 176              		@ frame_needed = 0, uses_anonymous_args = 0
 177              		@ link register save eliminated.
 178              	.LVL28:
 411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 179              		.loc 1 411 0
 180 0000 7047     		bx	lr
 181              		.cfi_endproc
 182              	.LFE143:
 184              		.section	.text.HAL_DMA2D_Init,"ax",%progbits
 185              		.align	1
 186              		.global	HAL_DMA2D_Init
 187              		.syntax unified
 188              		.thumb
 189              		.thumb_func
 190              		.fpu fpv5-sp-d16
 192              	HAL_DMA2D_Init:
 193              	.LFB141:
 238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Check the DMA2D peripheral state */
 194              		.loc 1 238 0
 195              		.cfi_startproc
 196              		@ args = 0, pretend = 0, frame = 0
 197              		@ frame_needed = 0, uses_anonymous_args = 0
 198              	.LVL29:
 240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
 199              		.loc 1 240 0
 200 0000 38B3     		cbz	r0, .L17
 238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Check the DMA2D peripheral state */
 201              		.loc 1 238 0
 202 0002 10B5     		push	{r4, lr}
 203              	.LCFI3:
 204              		.cfi_def_cfa_offset 8
 205              		.cfi_offset 4, -8
 206              		.cfi_offset 14, -4
 207 0004 0446     		mov	r4, r0
 270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
 208              		.loc 1 270 0
 209 0006 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
ARM GAS  /tmp/ccMN1FNg.s 			page 40


 210 000a EBB1     		cbz	r3, .L22
 211              	.LVL30:
 212              	.L16:
 280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 213              		.loc 1 280 0
 214 000c 0223     		movs	r3, #2
 215 000e 84F83930 		strb	r3, [r4, #57]
 283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 216              		.loc 1 283 0
 217 0012 2268     		ldr	r2, [r4]
 218 0014 1368     		ldr	r3, [r2]
 219 0016 23F44033 		bic	r3, r3, #196608
 220 001a 6168     		ldr	r1, [r4, #4]
 221 001c 0B43     		orrs	r3, r3, r1
 222 001e 1360     		str	r3, [r2]
 286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 223              		.loc 1 286 0
 224 0020 2268     		ldr	r2, [r4]
 225 0022 536B     		ldr	r3, [r2, #52]
 226 0024 23F00703 		bic	r3, r3, #7
 227 0028 A168     		ldr	r1, [r4, #8]
 228 002a 0B43     		orrs	r3, r3, r1
 229 002c 5363     		str	r3, [r2, #52]
 289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** #if defined (DMA2D_ALPHA_INV_RB_SWAP_SUPPORT)
 230              		.loc 1 289 0
 231 002e 2268     		ldr	r2, [r4]
 232 0030 116C     		ldr	r1, [r2, #64]
 233 0032 094B     		ldr	r3, .L23
 234 0034 0B40     		ands	r3, r3, r1
 235 0036 E168     		ldr	r1, [r4, #12]
 236 0038 0B43     		orrs	r3, r3, r1
 237 003a 1364     		str	r3, [r2, #64]
 297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 238              		.loc 1 297 0
 239 003c 0020     		movs	r0, #0
 240 003e E063     		str	r0, [r4, #60]
 300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 241              		.loc 1 300 0
 242 0040 0123     		movs	r3, #1
 243 0042 84F83930 		strb	r3, [r4, #57]
 303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 244              		.loc 1 303 0
 245 0046 10BD     		pop	{r4, pc}
 246              	.LVL31:
 247              	.L22:
 273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* Init the low level hardware */
 248              		.loc 1 273 0
 249 0048 80F83830 		strb	r3, [r0, #56]
 275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
 250              		.loc 1 275 0
 251 004c FFF7FEFF 		bl	HAL_DMA2D_MspInit
 252              	.LVL32:
 253 0050 DCE7     		b	.L16
 254              	.LVL33:
 255              	.L17:
 256              	.LCFI4:
 257              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/ccMN1FNg.s 			page 41


 258              		.cfi_restore 4
 259              		.cfi_restore 14
 242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
 260              		.loc 1 242 0
 261 0052 0120     		movs	r0, #1
 262              	.LVL34:
 303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 263              		.loc 1 303 0
 264 0054 7047     		bx	lr
 265              	.L24:
 266 0056 00BF     		.align	2
 267              	.L23:
 268 0058 00C0FFFF 		.word	-16384
 269              		.cfi_endproc
 270              	.LFE141:
 272              		.section	.text.HAL_DMA2D_MspDeInit,"ax",%progbits
 273              		.align	1
 274              		.weak	HAL_DMA2D_MspDeInit
 275              		.syntax unified
 276              		.thumb
 277              		.thumb_func
 278              		.fpu fpv5-sp-d16
 280              	HAL_DMA2D_MspDeInit:
 281              	.LFB144:
 420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Prevent unused argument(s) compilation warning */
 282              		.loc 1 420 0
 283              		.cfi_startproc
 284              		@ args = 0, pretend = 0, frame = 0
 285              		@ frame_needed = 0, uses_anonymous_args = 0
 286              		@ link register save eliminated.
 287              	.LVL35:
 427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 288              		.loc 1 427 0
 289 0000 7047     		bx	lr
 290              		.cfi_endproc
 291              	.LFE144:
 293              		.section	.text.HAL_DMA2D_Start,"ax",%progbits
 294              		.align	1
 295              		.global	HAL_DMA2D_Start
 296              		.syntax unified
 297              		.thumb
 298              		.thumb_func
 299              		.fpu fpv5-sp-d16
 301              	HAL_DMA2D_Start:
 302              	.LFB145:
 674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Check the parameters */
 303              		.loc 1 674 0
 304              		.cfi_startproc
 305              		@ args = 4, pretend = 0, frame = 0
 306              		@ frame_needed = 0, uses_anonymous_args = 0
 307              	.LVL36:
 308 0000 10B5     		push	{r4, lr}
 309              	.LCFI5:
 310              		.cfi_def_cfa_offset 8
 311              		.cfi_offset 4, -8
 312              		.cfi_offset 14, -4
 313 0002 82B0     		sub	sp, sp, #8
ARM GAS  /tmp/ccMN1FNg.s 			page 42


 314              	.LCFI6:
 315              		.cfi_def_cfa_offset 16
 680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 316              		.loc 1 680 0
 317 0004 90F83840 		ldrb	r4, [r0, #56]	@ zero_extendqisi2
 318 0008 012C     		cmp	r4, #1
 319 000a 13D0     		beq	.L28
 320 000c 0446     		mov	r4, r0
 680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 321              		.loc 1 680 0 is_stmt 0 discriminator 2
 322 000e 0120     		movs	r0, #1
 323              	.LVL37:
 324 0010 84F83800 		strb	r0, [r4, #56]
 683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 325              		.loc 1 683 0 is_stmt 1 discriminator 2
 326 0014 0220     		movs	r0, #2
 327 0016 84F83900 		strb	r0, [r4, #57]
 686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 328              		.loc 1 686 0 discriminator 2
 329 001a 0498     		ldr	r0, [sp, #16]
 330 001c 0090     		str	r0, [sp]
 331 001e 2046     		mov	r0, r4
 332 0020 FFF7FEFF 		bl	DMA2D_SetConfig
 333              	.LVL38:
 689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 334              		.loc 1 689 0 discriminator 2
 335 0024 2268     		ldr	r2, [r4]
 336 0026 1368     		ldr	r3, [r2]
 337 0028 43F00103 		orr	r3, r3, #1
 338 002c 1360     		str	r3, [r2]
 691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
 339              		.loc 1 691 0 discriminator 2
 340 002e 0020     		movs	r0, #0
 341              	.LVL39:
 342              	.L27:
 692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 343              		.loc 1 692 0
 344 0030 02B0     		add	sp, sp, #8
 345              	.LCFI7:
 346              		.cfi_remember_state
 347              		.cfi_def_cfa_offset 8
 348              		@ sp needed
 349 0032 10BD     		pop	{r4, pc}
 350              	.LVL40:
 351              	.L28:
 352              	.LCFI8:
 353              		.cfi_restore_state
 680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 354              		.loc 1 680 0
 355 0034 0220     		movs	r0, #2
 356              	.LVL41:
 357 0036 FBE7     		b	.L27
 358              		.cfi_endproc
 359              	.LFE145:
 361              		.section	.text.HAL_DMA2D_Start_IT,"ax",%progbits
 362              		.align	1
 363              		.global	HAL_DMA2D_Start_IT
ARM GAS  /tmp/ccMN1FNg.s 			page 43


 364              		.syntax unified
 365              		.thumb
 366              		.thumb_func
 367              		.fpu fpv5-sp-d16
 369              	HAL_DMA2D_Start_IT:
 370              	.LFB146:
 708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Check the parameters */
 371              		.loc 1 708 0
 372              		.cfi_startproc
 373              		@ args = 4, pretend = 0, frame = 0
 374              		@ frame_needed = 0, uses_anonymous_args = 0
 375              	.LVL42:
 376 0000 10B5     		push	{r4, lr}
 377              	.LCFI9:
 378              		.cfi_def_cfa_offset 8
 379              		.cfi_offset 4, -8
 380              		.cfi_offset 14, -4
 381 0002 82B0     		sub	sp, sp, #8
 382              	.LCFI10:
 383              		.cfi_def_cfa_offset 16
 714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 384              		.loc 1 714 0
 385 0004 90F83840 		ldrb	r4, [r0, #56]	@ zero_extendqisi2
 386 0008 012C     		cmp	r4, #1
 387 000a 18D0     		beq	.L32
 388 000c 0446     		mov	r4, r0
 714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 389              		.loc 1 714 0 is_stmt 0 discriminator 2
 390 000e 0120     		movs	r0, #1
 391              	.LVL43:
 392 0010 84F83800 		strb	r0, [r4, #56]
 717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 393              		.loc 1 717 0 is_stmt 1 discriminator 2
 394 0014 0220     		movs	r0, #2
 395 0016 84F83900 		strb	r0, [r4, #57]
 720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 396              		.loc 1 720 0 discriminator 2
 397 001a 0498     		ldr	r0, [sp, #16]
 398 001c 0090     		str	r0, [sp]
 399 001e 2046     		mov	r0, r4
 400 0020 FFF7FEFF 		bl	DMA2D_SetConfig
 401              	.LVL44:
 723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 402              		.loc 1 723 0 discriminator 2
 403 0024 2268     		ldr	r2, [r4]
 404 0026 1368     		ldr	r3, [r2]
 405 0028 43F40C53 		orr	r3, r3, #8960
 406 002c 1360     		str	r3, [r2]
 726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 407              		.loc 1 726 0 discriminator 2
 408 002e 2268     		ldr	r2, [r4]
 409 0030 1368     		ldr	r3, [r2]
 410 0032 43F00103 		orr	r3, r3, #1
 411 0036 1360     		str	r3, [r2]
 728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
 412              		.loc 1 728 0 discriminator 2
 413 0038 0020     		movs	r0, #0
ARM GAS  /tmp/ccMN1FNg.s 			page 44


 414              	.LVL45:
 415              	.L31:
 729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 416              		.loc 1 729 0
 417 003a 02B0     		add	sp, sp, #8
 418              	.LCFI11:
 419              		.cfi_remember_state
 420              		.cfi_def_cfa_offset 8
 421              		@ sp needed
 422 003c 10BD     		pop	{r4, pc}
 423              	.LVL46:
 424              	.L32:
 425              	.LCFI12:
 426              		.cfi_restore_state
 714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 427              		.loc 1 714 0
 428 003e 0220     		movs	r0, #2
 429              	.LVL47:
 430 0040 FBE7     		b	.L31
 431              		.cfi_endproc
 432              	.LFE146:
 434              		.section	.text.HAL_DMA2D_BlendingStart,"ax",%progbits
 435              		.align	1
 436              		.global	HAL_DMA2D_BlendingStart
 437              		.syntax unified
 438              		.thumb
 439              		.thumb_func
 440              		.fpu fpv5-sp-d16
 442              	HAL_DMA2D_BlendingStart:
 443              	.LFB147:
 743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Check the parameters */
 444              		.loc 1 743 0
 445              		.cfi_startproc
 446              		@ args = 8, pretend = 0, frame = 0
 447              		@ frame_needed = 0, uses_anonymous_args = 0
 448              	.LVL48:
 449 0000 30B5     		push	{r4, r5, lr}
 450              	.LCFI13:
 451              		.cfi_def_cfa_offset 12
 452              		.cfi_offset 4, -12
 453              		.cfi_offset 5, -8
 454              		.cfi_offset 14, -4
 455 0002 83B0     		sub	sp, sp, #12
 456              	.LCFI14:
 457              		.cfi_def_cfa_offset 24
 749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 458              		.loc 1 749 0
 459 0004 90F83840 		ldrb	r4, [r0, #56]	@ zero_extendqisi2
 460 0008 012C     		cmp	r4, #1
 461 000a 17D0     		beq	.L36
 462 000c 1D46     		mov	r5, r3
 463 000e 0446     		mov	r4, r0
 749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 464              		.loc 1 749 0 is_stmt 0 discriminator 2
 465 0010 0123     		movs	r3, #1
 466              	.LVL49:
 467 0012 80F83830 		strb	r3, [r0, #56]
ARM GAS  /tmp/ccMN1FNg.s 			page 45


 752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 468              		.loc 1 752 0 is_stmt 1 discriminator 2
 469 0016 0223     		movs	r3, #2
 470 0018 80F83930 		strb	r3, [r0, #57]
 755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 471              		.loc 1 755 0 discriminator 2
 472 001c 0368     		ldr	r3, [r0]
 473 001e 5A61     		str	r2, [r3, #20]
 758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 474              		.loc 1 758 0 discriminator 2
 475 0020 079B     		ldr	r3, [sp, #28]
 476 0022 0093     		str	r3, [sp]
 477 0024 069B     		ldr	r3, [sp, #24]
 478 0026 2A46     		mov	r2, r5
 479              	.LVL50:
 480 0028 FFF7FEFF 		bl	DMA2D_SetConfig
 481              	.LVL51:
 761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 482              		.loc 1 761 0 discriminator 2
 483 002c 2268     		ldr	r2, [r4]
 484 002e 1368     		ldr	r3, [r2]
 485 0030 43F00103 		orr	r3, r3, #1
 486 0034 1360     		str	r3, [r2]
 763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
 487              		.loc 1 763 0 discriminator 2
 488 0036 0020     		movs	r0, #0
 489              	.LVL52:
 490              	.L35:
 764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 491              		.loc 1 764 0
 492 0038 03B0     		add	sp, sp, #12
 493              	.LCFI15:
 494              		.cfi_remember_state
 495              		.cfi_def_cfa_offset 12
 496              		@ sp needed
 497 003a 30BD     		pop	{r4, r5, pc}
 498              	.LVL53:
 499              	.L36:
 500              	.LCFI16:
 501              		.cfi_restore_state
 749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 502              		.loc 1 749 0
 503 003c 0220     		movs	r0, #2
 504              	.LVL54:
 505 003e FBE7     		b	.L35
 506              		.cfi_endproc
 507              	.LFE147:
 509              		.section	.text.HAL_DMA2D_BlendingStart_IT,"ax",%progbits
 510              		.align	1
 511              		.global	HAL_DMA2D_BlendingStart_IT
 512              		.syntax unified
 513              		.thumb
 514              		.thumb_func
 515              		.fpu fpv5-sp-d16
 517              	HAL_DMA2D_BlendingStart_IT:
 518              	.LFB148:
 778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Check the parameters */
ARM GAS  /tmp/ccMN1FNg.s 			page 46


 519              		.loc 1 778 0
 520              		.cfi_startproc
 521              		@ args = 8, pretend = 0, frame = 0
 522              		@ frame_needed = 0, uses_anonymous_args = 0
 523              	.LVL55:
 524 0000 30B5     		push	{r4, r5, lr}
 525              	.LCFI17:
 526              		.cfi_def_cfa_offset 12
 527              		.cfi_offset 4, -12
 528              		.cfi_offset 5, -8
 529              		.cfi_offset 14, -4
 530 0002 83B0     		sub	sp, sp, #12
 531              	.LCFI18:
 532              		.cfi_def_cfa_offset 24
 784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 533              		.loc 1 784 0
 534 0004 90F83840 		ldrb	r4, [r0, #56]	@ zero_extendqisi2
 535 0008 012C     		cmp	r4, #1
 536 000a 1CD0     		beq	.L40
 537 000c 1D46     		mov	r5, r3
 538 000e 0446     		mov	r4, r0
 784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 539              		.loc 1 784 0 is_stmt 0 discriminator 2
 540 0010 0123     		movs	r3, #1
 541              	.LVL56:
 542 0012 80F83830 		strb	r3, [r0, #56]
 787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 543              		.loc 1 787 0 is_stmt 1 discriminator 2
 544 0016 0223     		movs	r3, #2
 545 0018 80F83930 		strb	r3, [r0, #57]
 790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 546              		.loc 1 790 0 discriminator 2
 547 001c 0368     		ldr	r3, [r0]
 548 001e 5A61     		str	r2, [r3, #20]
 793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 549              		.loc 1 793 0 discriminator 2
 550 0020 079B     		ldr	r3, [sp, #28]
 551 0022 0093     		str	r3, [sp]
 552 0024 069B     		ldr	r3, [sp, #24]
 553 0026 2A46     		mov	r2, r5
 554              	.LVL57:
 555 0028 FFF7FEFF 		bl	DMA2D_SetConfig
 556              	.LVL58:
 796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 557              		.loc 1 796 0 discriminator 2
 558 002c 2268     		ldr	r2, [r4]
 559 002e 1368     		ldr	r3, [r2]
 560 0030 43F40C53 		orr	r3, r3, #8960
 561 0034 1360     		str	r3, [r2]
 799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 562              		.loc 1 799 0 discriminator 2
 563 0036 2268     		ldr	r2, [r4]
 564 0038 1368     		ldr	r3, [r2]
 565 003a 43F00103 		orr	r3, r3, #1
 566 003e 1360     		str	r3, [r2]
 801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
 567              		.loc 1 801 0 discriminator 2
ARM GAS  /tmp/ccMN1FNg.s 			page 47


 568 0040 0020     		movs	r0, #0
 569              	.LVL59:
 570              	.L39:
 802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 571              		.loc 1 802 0
 572 0042 03B0     		add	sp, sp, #12
 573              	.LCFI19:
 574              		.cfi_remember_state
 575              		.cfi_def_cfa_offset 12
 576              		@ sp needed
 577 0044 30BD     		pop	{r4, r5, pc}
 578              	.LVL60:
 579              	.L40:
 580              	.LCFI20:
 581              		.cfi_restore_state
 784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 582              		.loc 1 784 0
 583 0046 0220     		movs	r0, #2
 584              	.LVL61:
 585 0048 FBE7     		b	.L39
 586              		.cfi_endproc
 587              	.LFE148:
 589              		.section	.text.HAL_DMA2D_Abort,"ax",%progbits
 590              		.align	1
 591              		.global	HAL_DMA2D_Abort
 592              		.syntax unified
 593              		.thumb
 594              		.thumb_func
 595              		.fpu fpv5-sp-d16
 597              	HAL_DMA2D_Abort:
 598              	.LFB149:
 811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   uint32_t tickstart;
 599              		.loc 1 811 0
 600              		.cfi_startproc
 601              		@ args = 0, pretend = 0, frame = 0
 602              		@ frame_needed = 0, uses_anonymous_args = 0
 603              	.LVL62:
 604 0000 38B5     		push	{r3, r4, r5, lr}
 605              	.LCFI21:
 606              		.cfi_def_cfa_offset 16
 607              		.cfi_offset 3, -16
 608              		.cfi_offset 4, -12
 609              		.cfi_offset 5, -8
 610              		.cfi_offset 14, -4
 611 0002 0446     		mov	r4, r0
 818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 612              		.loc 1 818 0
 613 0004 0268     		ldr	r2, [r0]
 614 0006 1368     		ldr	r3, [r2]
 615 0008 23F00503 		bic	r3, r3, #5
 616 000c 43F00403 		orr	r3, r3, #4
 617 0010 1360     		str	r3, [r2]
 821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 618              		.loc 1 821 0
 619 0012 FFF7FEFF 		bl	HAL_GetTick
 620              	.LVL63:
 621 0016 0546     		mov	r5, r0
ARM GAS  /tmp/ccMN1FNg.s 			page 48


 622              	.LVL64:
 623              	.L43:
 824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
 624              		.loc 1 824 0
 625 0018 2368     		ldr	r3, [r4]
 626 001a 1A68     		ldr	r2, [r3]
 627 001c 12F0010F 		tst	r2, #1
 628 0020 10D0     		beq	.L47
 826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     {
 629              		.loc 1 826 0
 630 0022 FFF7FEFF 		bl	HAL_GetTick
 631              	.LVL65:
 632 0026 401B     		subs	r0, r0, r5
 633 0028 B0F57A7F 		cmp	r0, #1000
 634 002c F4D9     		bls	.L43
 829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 635              		.loc 1 829 0
 636 002e E36B     		ldr	r3, [r4, #60]
 637 0030 43F02003 		orr	r3, r3, #32
 638 0034 E363     		str	r3, [r4, #60]
 832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 639              		.loc 1 832 0
 640 0036 0320     		movs	r0, #3
 641 0038 84F83900 		strb	r0, [r4, #57]
 835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 642              		.loc 1 835 0
 643 003c 0023     		movs	r3, #0
 644 003e 84F83830 		strb	r3, [r4, #56]
 837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     }
 645              		.loc 1 837 0
 646 0042 09E0     		b	.L44
 647              	.L47:
 842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 648              		.loc 1 842 0
 649 0044 1A68     		ldr	r2, [r3]
 650 0046 22F40C52 		bic	r2, r2, #8960
 651 004a 1A60     		str	r2, [r3]
 845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 652              		.loc 1 845 0
 653 004c 0123     		movs	r3, #1
 654 004e 84F83930 		strb	r3, [r4, #57]
 848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 655              		.loc 1 848 0
 656 0052 0020     		movs	r0, #0
 657 0054 84F83800 		strb	r0, [r4, #56]
 658              	.L44:
 851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 659              		.loc 1 851 0
 660 0058 38BD     		pop	{r3, r4, r5, pc}
 661              		.cfi_endproc
 662              	.LFE149:
 664              		.section	.text.HAL_DMA2D_Suspend,"ax",%progbits
 665              		.align	1
 666              		.global	HAL_DMA2D_Suspend
 667              		.syntax unified
 668              		.thumb
 669              		.thumb_func
ARM GAS  /tmp/ccMN1FNg.s 			page 49


 670              		.fpu fpv5-sp-d16
 672              	HAL_DMA2D_Suspend:
 673              	.LFB150:
 860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   uint32_t tickstart;
 674              		.loc 1 860 0
 675              		.cfi_startproc
 676              		@ args = 0, pretend = 0, frame = 0
 677              		@ frame_needed = 0, uses_anonymous_args = 0
 678              	.LVL66:
 679 0000 38B5     		push	{r3, r4, r5, lr}
 680              	.LCFI22:
 681              		.cfi_def_cfa_offset 16
 682              		.cfi_offset 3, -16
 683              		.cfi_offset 4, -12
 684              		.cfi_offset 5, -8
 685              		.cfi_offset 14, -4
 686 0002 0446     		mov	r4, r0
 867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 687              		.loc 1 867 0
 688 0004 0268     		ldr	r2, [r0]
 689 0006 1368     		ldr	r3, [r2]
 690 0008 23F00303 		bic	r3, r3, #3
 691 000c 43F00203 		orr	r3, r3, #2
 692 0010 1360     		str	r3, [r2]
 870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 693              		.loc 1 870 0
 694 0012 FFF7FEFF 		bl	HAL_GetTick
 695              	.LVL67:
 696 0016 0546     		mov	r5, r0
 697              	.LVL68:
 698              	.L49:
 873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
 699              		.loc 1 873 0
 700 0018 2268     		ldr	r2, [r4]
 701 001a 1368     		ldr	r3, [r2]
 702 001c 03F00303 		and	r3, r3, #3
 703 0020 012B     		cmp	r3, #1
 704 0022 0DD1     		bne	.L54
 875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     {
 705              		.loc 1 875 0
 706 0024 FFF7FEFF 		bl	HAL_GetTick
 707              	.LVL69:
 708 0028 401B     		subs	r0, r0, r5
 709 002a B0F57A7F 		cmp	r0, #1000
 710 002e F3D9     		bls	.L49
 878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 711              		.loc 1 878 0
 712 0030 E36B     		ldr	r3, [r4, #60]
 713 0032 43F02003 		orr	r3, r3, #32
 714 0036 E363     		str	r3, [r4, #60]
 881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 715              		.loc 1 881 0
 716 0038 0320     		movs	r0, #3
 717 003a 84F83900 		strb	r0, [r4, #57]
 718              	.L50:
 900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 719              		.loc 1 900 0
ARM GAS  /tmp/ccMN1FNg.s 			page 50


 720 003e 38BD     		pop	{r3, r4, r5, pc}
 721              	.LVL70:
 722              	.L54:
 888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
 723              		.loc 1 888 0
 724 0040 1368     		ldr	r3, [r2]
 725 0042 13F0010F 		tst	r3, #1
 726 0046 05D1     		bne	.L55
 896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
 727              		.loc 1 896 0
 728 0048 1368     		ldr	r3, [r2]
 729 004a 23F00203 		bic	r3, r3, #2
 730 004e 1360     		str	r3, [r2]
 899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
 731              		.loc 1 899 0
 732 0050 0020     		movs	r0, #0
 733 0052 F4E7     		b	.L50
 734              	.L55:
 890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
 735              		.loc 1 890 0
 736 0054 0523     		movs	r3, #5
 737 0056 84F83930 		strb	r3, [r4, #57]
 899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
 738              		.loc 1 899 0
 739 005a 0020     		movs	r0, #0
 740 005c EFE7     		b	.L50
 741              		.cfi_endproc
 742              	.LFE150:
 744              		.section	.text.HAL_DMA2D_Resume,"ax",%progbits
 745              		.align	1
 746              		.global	HAL_DMA2D_Resume
 747              		.syntax unified
 748              		.thumb
 749              		.thumb_func
 750              		.fpu fpv5-sp-d16
 752              	HAL_DMA2D_Resume:
 753              	.LFB151:
 909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Check the SUSP and START bits */
 754              		.loc 1 909 0
 755              		.cfi_startproc
 756              		@ args = 0, pretend = 0, frame = 0
 757              		@ frame_needed = 0, uses_anonymous_args = 0
 758              		@ link register save eliminated.
 759              	.LVL71:
 911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
 760              		.loc 1 911 0
 761 0000 0368     		ldr	r3, [r0]
 762 0002 1A68     		ldr	r2, [r3]
 763 0004 02F00302 		and	r2, r2, #3
 764 0008 032A     		cmp	r2, #3
 765 000a 05D0     		beq	.L58
 766              	.L57:
 921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 767              		.loc 1 921 0
 768 000c 1A68     		ldr	r2, [r3]
 769 000e 22F00302 		bic	r2, r2, #3
 770 0012 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccMN1FNg.s 			page 51


 924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 771              		.loc 1 924 0
 772 0014 0020     		movs	r0, #0
 773              	.LVL72:
 774 0016 7047     		bx	lr
 775              	.LVL73:
 776              	.L58:
 914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
 777              		.loc 1 914 0
 778 0018 0222     		movs	r2, #2
 779 001a 80F83920 		strb	r2, [r0, #57]
 780 001e F5E7     		b	.L57
 781              		.cfi_endproc
 782              	.LFE151:
 784              		.section	.text.HAL_DMA2D_EnableCLUT,"ax",%progbits
 785              		.align	1
 786              		.global	HAL_DMA2D_EnableCLUT
 787              		.syntax unified
 788              		.thumb
 789              		.thumb_func
 790              		.fpu fpv5-sp-d16
 792              	HAL_DMA2D_EnableCLUT:
 793              	.LFB152:
 937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Check the parameters */
 794              		.loc 1 937 0
 795              		.cfi_startproc
 796              		@ args = 0, pretend = 0, frame = 0
 797              		@ frame_needed = 0, uses_anonymous_args = 0
 798              		@ link register save eliminated.
 799              	.LVL74:
 942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 800              		.loc 1 942 0
 801 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 802 0004 012B     		cmp	r3, #1
 803 0006 14D0     		beq	.L62
 942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 804              		.loc 1 942 0 is_stmt 0 discriminator 2
 805 0008 0123     		movs	r3, #1
 806 000a 80F83830 		strb	r3, [r0, #56]
 945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 807              		.loc 1 945 0 is_stmt 1 discriminator 2
 808 000e 0223     		movs	r3, #2
 809 0010 80F83930 		strb	r3, [r0, #57]
 947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
 810              		.loc 1 947 0 discriminator 2
 811 0014 31B1     		cbz	r1, .L63
 955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
 812              		.loc 1 955 0
 813 0016 0268     		ldr	r2, [r0]
 814 0018 D369     		ldr	r3, [r2, #28]
 815 001a 43F02003 		orr	r3, r3, #32
 816 001e D361     		str	r3, [r2, #28]
 958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
 817              		.loc 1 958 0
 818 0020 0020     		movs	r0, #0
 819              	.LVL75:
 820 0022 7047     		bx	lr
ARM GAS  /tmp/ccMN1FNg.s 			page 52


 821              	.LVL76:
 822              	.L63:
 950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
 823              		.loc 1 950 0
 824 0024 0268     		ldr	r2, [r0]
 825 0026 536A     		ldr	r3, [r2, #36]
 826 0028 43F02003 		orr	r3, r3, #32
 827 002c 5362     		str	r3, [r2, #36]
 958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
 828              		.loc 1 958 0
 829 002e 0020     		movs	r0, #0
 830              	.LVL77:
 831 0030 7047     		bx	lr
 832              	.LVL78:
 833              	.L62:
 942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 834              		.loc 1 942 0
 835 0032 0220     		movs	r0, #2
 836              	.LVL79:
 959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 837              		.loc 1 959 0
 838 0034 7047     		bx	lr
 839              		.cfi_endproc
 840              	.LFE152:
 842              		.section	.text.HAL_DMA2D_CLUTLoad,"ax",%progbits
 843              		.align	1
 844              		.global	HAL_DMA2D_CLUTLoad
 845              		.syntax unified
 846              		.thumb
 847              		.thumb_func
 848              		.fpu fpv5-sp-d16
 850              	HAL_DMA2D_CLUTLoad:
 851              	.LFB153:
 975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Check the parameters */
 852              		.loc 1 975 0
 853              		.cfi_startproc
 854              		@ args = 4, pretend = 0, frame = 16
 855              		@ frame_needed = 0, uses_anonymous_args = 0
 856              		@ link register save eliminated.
 857              	.LVL80:
 858 0000 10B4     		push	{r4}
 859              	.LCFI23:
 860              		.cfi_def_cfa_offset 4
 861              		.cfi_offset 4, -4
 862 0002 85B0     		sub	sp, sp, #20
 863              	.LCFI24:
 864              		.cfi_def_cfa_offset 24
 865 0004 04AC     		add	r4, sp, #16
 866 0006 04E90E00 		stmdb	r4, {r1, r2, r3}
 982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 867              		.loc 1 982 0
 868 000a 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 869 000e 012B     		cmp	r3, #1
 870 0010 34D0     		beq	.L67
 982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 871              		.loc 1 982 0 is_stmt 0 discriminator 2
 872 0012 0123     		movs	r3, #1
ARM GAS  /tmp/ccMN1FNg.s 			page 53


 873 0014 80F83830 		strb	r3, [r0, #56]
 985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 874              		.loc 1 985 0 is_stmt 1 discriminator 2
 875 0018 0223     		movs	r3, #2
 876 001a 80F83930 		strb	r3, [r0, #57]
 988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
 877              		.loc 1 988 0 discriminator 2
 878 001e 069B     		ldr	r3, [sp, #24]
 879 0020 BBB1     		cbz	r3, .L69
1004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 880              		.loc 1 1004 0
 881 0022 0368     		ldr	r3, [r0]
 882 0024 019A     		ldr	r2, [sp, #4]
 883 0026 DA62     		str	r2, [r3, #44]
1007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****             ((CLUTCfg.Size << DMA2D_FGPFCCR_CS_Pos) | (CLUTCfg.CLUTColorMode << DMA2D_FGPFCCR_CCM_P
 884              		.loc 1 1007 0
 885 0028 0168     		ldr	r1, [r0]
 886 002a CA69     		ldr	r2, [r1, #28]
 887 002c 144B     		ldr	r3, .L70
 888 002e 1340     		ands	r3, r3, r2
 889 0030 029A     		ldr	r2, [sp, #8]
 890 0032 1201     		lsls	r2, r2, #4
 891 0034 039C     		ldr	r4, [sp, #12]
 892 0036 42EA0422 		orr	r2, r2, r4, lsl #8
 893 003a 1343     		orrs	r3, r3, r2
 894 003c CB61     		str	r3, [r1, #28]
1011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
 895              		.loc 1 1011 0
 896 003e 0268     		ldr	r2, [r0]
 897 0040 D369     		ldr	r3, [r2, #28]
 898 0042 43F02003 		orr	r3, r3, #32
 899 0046 D361     		str	r3, [r2, #28]
1014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
 900              		.loc 1 1014 0
 901 0048 0020     		movs	r0, #0
 902              	.LVL81:
 903              	.L65:
1015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 904              		.loc 1 1015 0
 905 004a 05B0     		add	sp, sp, #20
 906              	.LCFI25:
 907              		.cfi_remember_state
 908              		.cfi_def_cfa_offset 4
 909              		@ sp needed
 910 004c 5DF8044B 		ldr	r4, [sp], #4
 911              	.LCFI26:
 912              		.cfi_restore 4
 913              		.cfi_def_cfa_offset 0
 914              	.LVL82:
 915 0050 7047     		bx	lr
 916              	.LVL83:
 917              	.L69:
 918              	.LCFI27:
 919              		.cfi_restore_state
 991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 920              		.loc 1 991 0
 921 0052 0368     		ldr	r3, [r0]
ARM GAS  /tmp/ccMN1FNg.s 			page 54


 922 0054 019A     		ldr	r2, [sp, #4]
 923 0056 1A63     		str	r2, [r3, #48]
 994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****             ((CLUTCfg.Size << DMA2D_BGPFCCR_CS_Pos) | (CLUTCfg.CLUTColorMode << DMA2D_BGPFCCR_CCM_P
 924              		.loc 1 994 0
 925 0058 0168     		ldr	r1, [r0]
 926 005a 4A6A     		ldr	r2, [r1, #36]
 927 005c 084B     		ldr	r3, .L70
 928 005e 1340     		ands	r3, r3, r2
 929 0060 029A     		ldr	r2, [sp, #8]
 930 0062 1201     		lsls	r2, r2, #4
 931 0064 039C     		ldr	r4, [sp, #12]
 932 0066 42EA0422 		orr	r2, r2, r4, lsl #8
 933 006a 1343     		orrs	r3, r3, r2
 934 006c 4B62     		str	r3, [r1, #36]
 998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
 935              		.loc 1 998 0
 936 006e 0268     		ldr	r2, [r0]
 937 0070 536A     		ldr	r3, [r2, #36]
 938 0072 43F02003 		orr	r3, r3, #32
 939 0076 5362     		str	r3, [r2, #36]
1014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
 940              		.loc 1 1014 0
 941 0078 0020     		movs	r0, #0
 942              	.LVL84:
 943 007a E6E7     		b	.L65
 944              	.LVL85:
 945              	.L67:
 982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 946              		.loc 1 982 0
 947 007c 0220     		movs	r0, #2
 948              	.LVL86:
 949 007e E4E7     		b	.L65
 950              	.L71:
 951              		.align	2
 952              	.L70:
 953 0080 EF00FFFF 		.word	-65297
 954              		.cfi_endproc
 955              	.LFE153:
 957              		.section	.text.HAL_DMA2D_CLUTLoad_IT,"ax",%progbits
 958              		.align	1
 959              		.global	HAL_DMA2D_CLUTLoad_IT
 960              		.syntax unified
 961              		.thumb
 962              		.thumb_func
 963              		.fpu fpv5-sp-d16
 965              	HAL_DMA2D_CLUTLoad_IT:
 966              	.LFB154:
1029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Check the parameters */
 967              		.loc 1 1029 0
 968              		.cfi_startproc
 969              		@ args = 4, pretend = 0, frame = 16
 970              		@ frame_needed = 0, uses_anonymous_args = 0
 971              		@ link register save eliminated.
 972              	.LVL87:
 973 0000 10B4     		push	{r4}
 974              	.LCFI28:
 975              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/ccMN1FNg.s 			page 55


 976              		.cfi_offset 4, -4
 977 0002 85B0     		sub	sp, sp, #20
 978              	.LCFI29:
 979              		.cfi_def_cfa_offset 24
 980 0004 04AC     		add	r4, sp, #16
 981 0006 04E90E00 		stmdb	r4, {r1, r2, r3}
1036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 982              		.loc 1 1036 0
 983 000a 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 984 000e 012B     		cmp	r3, #1
 985 0010 3ED0     		beq	.L75
1036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 986              		.loc 1 1036 0 is_stmt 0 discriminator 2
 987 0012 0123     		movs	r3, #1
 988 0014 80F83830 		strb	r3, [r0, #56]
1039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 989              		.loc 1 1039 0 is_stmt 1 discriminator 2
 990 0018 0223     		movs	r3, #2
 991 001a 80F83930 		strb	r3, [r0, #57]
1042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
 992              		.loc 1 1042 0 discriminator 2
 993 001e 069B     		ldr	r3, [sp, #24]
 994 0020 E3B1     		cbz	r3, .L77
1061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 995              		.loc 1 1061 0
 996 0022 0368     		ldr	r3, [r0]
 997 0024 019A     		ldr	r2, [sp, #4]
 998 0026 DA62     		str	r2, [r3, #44]
1064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****             ((CLUTCfg.Size << DMA2D_FGPFCCR_CS_Pos) | (CLUTCfg.CLUTColorMode << DMA2D_FGPFCCR_CCM_P
 999              		.loc 1 1064 0
 1000 0028 0168     		ldr	r1, [r0]
 1001 002a CA69     		ldr	r2, [r1, #28]
 1002 002c 194B     		ldr	r3, .L78
 1003 002e 1340     		ands	r3, r3, r2
 1004 0030 029A     		ldr	r2, [sp, #8]
 1005 0032 1201     		lsls	r2, r2, #4
 1006 0034 039C     		ldr	r4, [sp, #12]
 1007 0036 42EA0422 		orr	r2, r2, r4, lsl #8
 1008 003a 1343     		orrs	r3, r3, r2
 1009 003c CB61     		str	r3, [r1, #28]
1068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 1010              		.loc 1 1068 0
 1011 003e 0268     		ldr	r2, [r0]
 1012 0040 1368     		ldr	r3, [r2]
 1013 0042 43F46453 		orr	r3, r3, #14592
 1014 0046 1360     		str	r3, [r2]
1071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
 1015              		.loc 1 1071 0
 1016 0048 0268     		ldr	r2, [r0]
 1017 004a D369     		ldr	r3, [r2, #28]
 1018 004c 43F02003 		orr	r3, r3, #32
 1019 0050 D361     		str	r3, [r2, #28]
1074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
 1020              		.loc 1 1074 0
 1021 0052 0020     		movs	r0, #0
 1022              	.LVL88:
 1023              	.L73:
ARM GAS  /tmp/ccMN1FNg.s 			page 56


1075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 1024              		.loc 1 1075 0
 1025 0054 05B0     		add	sp, sp, #20
 1026              	.LCFI30:
 1027              		.cfi_remember_state
 1028              		.cfi_def_cfa_offset 4
 1029              		@ sp needed
 1030 0056 5DF8044B 		ldr	r4, [sp], #4
 1031              	.LCFI31:
 1032              		.cfi_restore 4
 1033              		.cfi_def_cfa_offset 0
 1034              	.LVL89:
 1035 005a 7047     		bx	lr
 1036              	.LVL90:
 1037              	.L77:
 1038              	.LCFI32:
 1039              		.cfi_restore_state
1045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 1040              		.loc 1 1045 0
 1041 005c 0368     		ldr	r3, [r0]
 1042 005e 019A     		ldr	r2, [sp, #4]
 1043 0060 1A63     		str	r2, [r3, #48]
1048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****             ((CLUTCfg.Size << DMA2D_BGPFCCR_CS_Pos) | (CLUTCfg.CLUTColorMode << DMA2D_BGPFCCR_CCM_P
 1044              		.loc 1 1048 0
 1045 0062 0168     		ldr	r1, [r0]
 1046 0064 4A6A     		ldr	r2, [r1, #36]
 1047 0066 0B4B     		ldr	r3, .L78
 1048 0068 1340     		ands	r3, r3, r2
 1049 006a 029A     		ldr	r2, [sp, #8]
 1050 006c 1201     		lsls	r2, r2, #4
 1051 006e 039C     		ldr	r4, [sp, #12]
 1052 0070 42EA0422 		orr	r2, r2, r4, lsl #8
 1053 0074 1343     		orrs	r3, r3, r2
 1054 0076 4B62     		str	r3, [r1, #36]
1052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 1055              		.loc 1 1052 0
 1056 0078 0268     		ldr	r2, [r0]
 1057 007a 1368     		ldr	r3, [r2]
 1058 007c 43F46453 		orr	r3, r3, #14592
 1059 0080 1360     		str	r3, [r2]
1055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
 1060              		.loc 1 1055 0
 1061 0082 0268     		ldr	r2, [r0]
 1062 0084 536A     		ldr	r3, [r2, #36]
 1063 0086 43F02003 		orr	r3, r3, #32
 1064 008a 5362     		str	r3, [r2, #36]
1074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
 1065              		.loc 1 1074 0
 1066 008c 0020     		movs	r0, #0
 1067              	.LVL91:
 1068 008e E1E7     		b	.L73
 1069              	.LVL92:
 1070              	.L75:
1036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 1071              		.loc 1 1036 0
 1072 0090 0220     		movs	r0, #2
 1073              	.LVL93:
ARM GAS  /tmp/ccMN1FNg.s 			page 57


 1074 0092 DFE7     		b	.L73
 1075              	.L79:
 1076              		.align	2
 1077              	.L78:
 1078 0094 EF00FFFF 		.word	-65297
 1079              		.cfi_endproc
 1080              	.LFE154:
 1082              		.section	.text.HAL_DMA2D_CLUTLoading_Abort,"ax",%progbits
 1083              		.align	1
 1084              		.global	HAL_DMA2D_CLUTLoading_Abort
 1085              		.syntax unified
 1086              		.thumb
 1087              		.thumb_func
 1088              		.fpu fpv5-sp-d16
 1090              	HAL_DMA2D_CLUTLoading_Abort:
 1091              	.LFB155:
1087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   uint32_t tickstart;
 1092              		.loc 1 1087 0
 1093              		.cfi_startproc
 1094              		@ args = 0, pretend = 0, frame = 0
 1095              		@ frame_needed = 0, uses_anonymous_args = 0
 1096              	.LVL94:
 1097 0000 70B5     		push	{r4, r5, r6, lr}
 1098              	.LCFI33:
 1099              		.cfi_def_cfa_offset 16
 1100              		.cfi_offset 4, -16
 1101              		.cfi_offset 5, -12
 1102              		.cfi_offset 6, -8
 1103              		.cfi_offset 14, -4
 1104 0002 0646     		mov	r6, r0
1089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 1105              		.loc 1 1089 0
 1106 0004 0368     		ldr	r3, [r0]
 1107 0006 03F12404 		add	r4, r3, #36
 1108              	.LVL95:
1092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 1109              		.loc 1 1092 0
 1110 000a 1A68     		ldr	r2, [r3]
 1111 000c 42F00402 		orr	r2, r2, #4
 1112 0010 1A60     		str	r2, [r3]
1095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
 1113              		.loc 1 1095 0
 1114 0012 0129     		cmp	r1, #1
 1115 0014 17D0     		beq	.L86
 1116              	.L81:
1102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 1117              		.loc 1 1102 0
 1118 0016 FFF7FEFF 		bl	HAL_GetTick
 1119              	.LVL96:
 1120 001a 0546     		mov	r5, r0
 1121              	.LVL97:
 1122              	.L82:
1105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
 1123              		.loc 1 1105 0
 1124 001c 2368     		ldr	r3, [r4]
 1125 001e 13F0200F 		tst	r3, #32
 1126 0022 13D0     		beq	.L87
ARM GAS  /tmp/ccMN1FNg.s 			page 58


1107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     {
 1127              		.loc 1 1107 0
 1128 0024 FFF7FEFF 		bl	HAL_GetTick
 1129              	.LVL98:
 1130 0028 401B     		subs	r0, r0, r5
 1131 002a B0F57A7F 		cmp	r0, #1000
 1132 002e F5D9     		bls	.L82
1110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 1133              		.loc 1 1110 0
 1134 0030 F36B     		ldr	r3, [r6, #60]
 1135 0032 43F02003 		orr	r3, r3, #32
 1136 0036 F363     		str	r3, [r6, #60]
1113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 1137              		.loc 1 1113 0
 1138 0038 0320     		movs	r0, #3
 1139 003a 86F83900 		strb	r0, [r6, #57]
1116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 1140              		.loc 1 1116 0
 1141 003e 0023     		movs	r3, #0
 1142 0040 86F83830 		strb	r3, [r6, #56]
1118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     }
 1143              		.loc 1 1118 0
 1144 0044 0DE0     		b	.L83
 1145              	.LVL99:
 1146              	.L86:
1097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
 1147              		.loc 1 1097 0
 1148 0046 0468     		ldr	r4, [r0]
 1149              	.LVL100:
 1150 0048 1C34     		adds	r4, r4, #28
 1151              	.LVL101:
 1152 004a E4E7     		b	.L81
 1153              	.LVL102:
 1154              	.L87:
1123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 1155              		.loc 1 1123 0
 1156 004c 3268     		ldr	r2, [r6]
 1157 004e 1368     		ldr	r3, [r2]
 1158 0050 23F46453 		bic	r3, r3, #14592
 1159 0054 1360     		str	r3, [r2]
1126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 1160              		.loc 1 1126 0
 1161 0056 0123     		movs	r3, #1
 1162 0058 86F83930 		strb	r3, [r6, #57]
1129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 1163              		.loc 1 1129 0
 1164 005c 0020     		movs	r0, #0
 1165 005e 86F83800 		strb	r0, [r6, #56]
 1166              	.L83:
1132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 1167              		.loc 1 1132 0
 1168 0062 70BD     		pop	{r4, r5, r6, pc}
 1169              		.cfi_endproc
 1170              	.LFE155:
 1172              		.section	.text.HAL_DMA2D_DeInit,"ax",%progbits
 1173              		.align	1
 1174              		.global	HAL_DMA2D_DeInit
ARM GAS  /tmp/ccMN1FNg.s 			page 59


 1175              		.syntax unified
 1176              		.thumb
 1177              		.thumb_func
 1178              		.fpu fpv5-sp-d16
 1180              	HAL_DMA2D_DeInit:
 1181              	.LFB142:
 314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 1182              		.loc 1 314 0
 1183              		.cfi_startproc
 1184              		@ args = 0, pretend = 0, frame = 0
 1185              		@ frame_needed = 0, uses_anonymous_args = 0
 1186              	.LVL103:
 317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
 1187              		.loc 1 317 0
 1188 0000 0028     		cmp	r0, #0
 1189 0002 41D0     		beq	.L93
 314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 1190              		.loc 1 314 0
 1191 0004 38B5     		push	{r3, r4, r5, lr}
 1192              	.LCFI34:
 1193              		.cfi_def_cfa_offset 16
 1194              		.cfi_offset 3, -16
 1195              		.cfi_offset 4, -12
 1196              		.cfi_offset 5, -8
 1197              		.cfi_offset 14, -4
 1198 0006 0446     		mov	r4, r0
 324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
 1199              		.loc 1 324 0
 1200 0008 204B     		ldr	r3, .L104
 1201 000a 1B6B     		ldr	r3, [r3, #48]
 1202 000c 13F4000F 		tst	r3, #8388608
 1203 0010 0CD0     		beq	.L90
 327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     {
 1204              		.loc 1 327 0
 1205 0012 0368     		ldr	r3, [r0]
 1206 0014 1A68     		ldr	r2, [r3]
 1207 0016 12F0010F 		tst	r2, #1
 1208 001a 21D1     		bne	.L101
 338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       {
 1209              		.loc 1 338 0
 1210 001c 5A6A     		ldr	r2, [r3, #36]
 1211 001e 12F0200F 		tst	r2, #32
 1212 0022 23D1     		bne	.L102
 349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         {
 1213              		.loc 1 349 0
 1214 0024 DB69     		ldr	r3, [r3, #28]
 1215 0026 13F0200F 		tst	r3, #32
 1216 002a 26D1     		bne	.L103
 1217              	.LVL104:
 1218              	.L90:
 362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   hdma2d->Instance->IFCR     = 0x3FU;
 1219              		.loc 1 362 0
 1220 002c 2368     		ldr	r3, [r4]
 1221 002e 0025     		movs	r5, #0
 1222 0030 1D60     		str	r5, [r3]
 363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   hdma2d->Instance->FGOR     =    0U;
 1223              		.loc 1 363 0
ARM GAS  /tmp/ccMN1FNg.s 			page 60


 1224 0032 2368     		ldr	r3, [r4]
 1225 0034 3F22     		movs	r2, #63
 1226 0036 9A60     		str	r2, [r3, #8]
 364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   hdma2d->Instance->BGOR     =    0U;
 1227              		.loc 1 364 0
 1228 0038 2368     		ldr	r3, [r4]
 1229 003a 1D61     		str	r5, [r3, #16]
 365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   hdma2d->Instance->FGPFCCR  =    0U;
 1230              		.loc 1 365 0
 1231 003c 2368     		ldr	r3, [r4]
 1232 003e 9D61     		str	r5, [r3, #24]
 366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   hdma2d->Instance->BGPFCCR  =    0U;
 1233              		.loc 1 366 0
 1234 0040 2368     		ldr	r3, [r4]
 1235 0042 DD61     		str	r5, [r3, #28]
 367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   hdma2d->Instance->OPFCCR   =    0U;
 1236              		.loc 1 367 0
 1237 0044 2368     		ldr	r3, [r4]
 1238 0046 5D62     		str	r5, [r3, #36]
 368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 1239              		.loc 1 368 0
 1240 0048 2368     		ldr	r3, [r4]
 1241 004a 5D63     		str	r5, [r3, #52]
 382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** #endif /* (USE_HAL_DMA2D_REGISTER_CALLBACKS) */
 1242              		.loc 1 382 0
 1243 004c 2046     		mov	r0, r4
 1244 004e FFF7FEFF 		bl	HAL_DMA2D_MspDeInit
 1245              	.LVL105:
 386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 1246              		.loc 1 386 0
 1247 0052 E563     		str	r5, [r4, #60]
 389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 1248              		.loc 1 389 0
 1249 0054 84F83950 		strb	r5, [r4, #57]
 392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 1250              		.loc 1 392 0
 1251 0058 84F83850 		strb	r5, [r4, #56]
 394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
 1252              		.loc 1 394 0
 1253 005c 2846     		mov	r0, r5
 1254              	.L89:
 395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 1255              		.loc 1 395 0
 1256 005e 38BD     		pop	{r3, r4, r5, pc}
 1257              	.LVL106:
 1258              	.L101:
 329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       {
 1259              		.loc 1 329 0
 1260 0060 FFF7FEFF 		bl	HAL_DMA2D_Abort
 1261              	.LVL107:
 1262 0064 0028     		cmp	r0, #0
 1263 0066 E1D0     		beq	.L90
 332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       }
 1264              		.loc 1 332 0
 1265 0068 0120     		movs	r0, #1
 1266 006a F8E7     		b	.L89
 1267              	.LVL108:
ARM GAS  /tmp/ccMN1FNg.s 			page 61


 1268              	.L102:
 340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         {
 1269              		.loc 1 340 0
 1270 006c 0021     		movs	r1, #0
 1271 006e FFF7FEFF 		bl	HAL_DMA2D_CLUTLoading_Abort
 1272              	.LVL109:
 1273 0072 0028     		cmp	r0, #0
 1274 0074 DAD0     		beq	.L90
 343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         }
 1275              		.loc 1 343 0
 1276 0076 0120     		movs	r0, #1
 1277 0078 F1E7     		b	.L89
 1278              	.LVL110:
 1279              	.L103:
 351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           {
 1280              		.loc 1 351 0
 1281 007a 0121     		movs	r1, #1
 1282 007c FFF7FEFF 		bl	HAL_DMA2D_CLUTLoading_Abort
 1283              	.LVL111:
 1284 0080 0028     		cmp	r0, #0
 1285 0082 D3D0     		beq	.L90
 354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           }
 1286              		.loc 1 354 0
 1287 0084 0120     		movs	r0, #1
 1288 0086 EAE7     		b	.L89
 1289              	.LVL112:
 1290              	.L93:
 1291              	.LCFI35:
 1292              		.cfi_def_cfa_offset 0
 1293              		.cfi_restore 3
 1294              		.cfi_restore 4
 1295              		.cfi_restore 5
 1296              		.cfi_restore 14
 319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
 1297              		.loc 1 319 0
 1298 0088 0120     		movs	r0, #1
 1299              	.LVL113:
 395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 1300              		.loc 1 395 0
 1301 008a 7047     		bx	lr
 1302              	.L105:
 1303              		.align	2
 1304              	.L104:
 1305 008c 00380240 		.word	1073887232
 1306              		.cfi_endproc
 1307              	.LFE142:
 1309              		.section	.text.HAL_DMA2D_CLUTLoading_Suspend,"ax",%progbits
 1310              		.align	1
 1311              		.global	HAL_DMA2D_CLUTLoading_Suspend
 1312              		.syntax unified
 1313              		.thumb
 1314              		.thumb_func
 1315              		.fpu fpv5-sp-d16
 1317              	HAL_DMA2D_CLUTLoading_Suspend:
 1318              	.LFB156:
1144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   uint32_t tickstart;
 1319              		.loc 1 1144 0
ARM GAS  /tmp/ccMN1FNg.s 			page 62


 1320              		.cfi_startproc
 1321              		@ args = 0, pretend = 0, frame = 0
 1322              		@ frame_needed = 0, uses_anonymous_args = 0
 1323              	.LVL114:
 1324 0000 70B5     		push	{r4, r5, r6, lr}
 1325              	.LCFI36:
 1326              		.cfi_def_cfa_offset 16
 1327              		.cfi_offset 4, -16
 1328              		.cfi_offset 5, -12
 1329              		.cfi_offset 6, -8
 1330              		.cfi_offset 14, -4
 1331 0002 0446     		mov	r4, r0
1147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 1332              		.loc 1 1147 0
 1333 0004 0368     		ldr	r3, [r0]
 1334 0006 03F12405 		add	r5, r3, #36
 1335              	.LVL115:
1150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 1336              		.loc 1 1150 0
 1337 000a 1A68     		ldr	r2, [r3]
 1338 000c 42F00202 		orr	r2, r2, #2
 1339 0010 1A60     		str	r2, [r3]
1153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
 1340              		.loc 1 1153 0
 1341 0012 0129     		cmp	r1, #1
 1342 0014 0FD0     		beq	.L120
 1343              	.L107:
1159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 1344              		.loc 1 1159 0
 1345 0016 FFF7FEFF 		bl	HAL_GetTick
 1346              	.LVL116:
 1347 001a 0646     		mov	r6, r0
 1348              	.LVL117:
1162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   loadsuspended |= ((*reg & DMA2D_BGPFCCR_START) != DMA2D_BGPFCCR_START)? 1UL: 0UL; /*2nd condition
 1349              		.loc 1 1162 0
 1350 001c 2368     		ldr	r3, [r4]
 1351 001e 1B68     		ldr	r3, [r3]
 1352 0020 13F00203 		ands	r3, r3, #2
 1353 0024 00D0     		beq	.L108
 1354 0026 0123     		movs	r3, #1
 1355              	.L108:
 1356              	.LVL118:
1163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   while (loadsuspended == 0UL)
 1357              		.loc 1 1163 0 discriminator 4
 1358 0028 2A68     		ldr	r2, [r5]
 1359 002a 12F0200F 		tst	r2, #32
 1360 002e 05D1     		bne	.L117
1163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   while (loadsuspended == 0UL)
 1361              		.loc 1 1163 0 is_stmt 0
 1362 0030 0122     		movs	r2, #1
 1363              	.L109:
1163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   while (loadsuspended == 0UL)
 1364              		.loc 1 1163 0 discriminator 4
 1365 0032 1343     		orrs	r3, r3, r2
 1366              	.LVL119:
1164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
 1367              		.loc 1 1164 0 is_stmt 1 discriminator 4
ARM GAS  /tmp/ccMN1FNg.s 			page 63


 1368 0034 0EE0     		b	.L110
 1369              	.LVL120:
 1370              	.L120:
1155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
 1371              		.loc 1 1155 0
 1372 0036 0568     		ldr	r5, [r0]
 1373              	.LVL121:
 1374 0038 1C35     		adds	r5, r5, #28
 1375              	.LVL122:
 1376 003a ECE7     		b	.L107
 1377              	.LVL123:
 1378              	.L117:
1163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   while (loadsuspended == 0UL)
 1379              		.loc 1 1163 0
 1380 003c 0022     		movs	r2, #0
 1381 003e F8E7     		b	.L109
 1382              	.LVL124:
 1383              	.L122:
1169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 1384              		.loc 1 1169 0
 1385 0040 E36B     		ldr	r3, [r4, #60]
 1386 0042 43F02003 		orr	r3, r3, #32
 1387 0046 E363     		str	r3, [r4, #60]
1172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 1388              		.loc 1 1172 0
 1389 0048 0320     		movs	r0, #3
 1390 004a 84F83900 		strb	r0, [r4, #57]
 1391              	.L112:
1193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 1392              		.loc 1 1193 0
 1393 004e 70BD     		pop	{r4, r5, r6, pc}
 1394              	.LVL125:
 1395              	.L118:
1177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
 1396              		.loc 1 1177 0
 1397 0050 0022     		movs	r2, #0
 1398              	.L114:
1177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
 1399              		.loc 1 1177 0 is_stmt 0 discriminator 4
 1400 0052 1343     		orrs	r3, r3, r2
 1401              	.LVL126:
 1402              	.L110:
1164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
 1403              		.loc 1 1164 0 is_stmt 1
 1404 0054 8BB9     		cbnz	r3, .L121
1166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     {
 1405              		.loc 1 1166 0
 1406 0056 FFF7FEFF 		bl	HAL_GetTick
 1407              	.LVL127:
 1408 005a 801B     		subs	r0, r0, r6
 1409 005c B0F57A7F 		cmp	r0, #1000
 1410 0060 EED8     		bhi	.L122
1176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     loadsuspended |= ((*reg & DMA2D_BGPFCCR_START) != DMA2D_BGPFCCR_START)? 1UL: 0UL; /*2nd conditi
 1411              		.loc 1 1176 0
 1412 0062 2368     		ldr	r3, [r4]
 1413 0064 1B68     		ldr	r3, [r3]
 1414 0066 13F00203 		ands	r3, r3, #2
ARM GAS  /tmp/ccMN1FNg.s 			page 64


 1415 006a 00D0     		beq	.L113
 1416 006c 0123     		movs	r3, #1
 1417              	.L113:
 1418              	.LVL128:
1177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
 1419              		.loc 1 1177 0 discriminator 4
 1420 006e 2A68     		ldr	r2, [r5]
 1421 0070 12F0200F 		tst	r2, #32
 1422 0074 ECD1     		bne	.L118
1177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
 1423              		.loc 1 1177 0 is_stmt 0
 1424 0076 0122     		movs	r2, #1
 1425 0078 EBE7     		b	.L114
 1426              	.L121:
1181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
 1427              		.loc 1 1181 0 is_stmt 1
 1428 007a 2B68     		ldr	r3, [r5]
 1429              	.LVL129:
 1430 007c 13F0200F 		tst	r3, #32
 1431 0080 06D1     		bne	.L123
1189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
 1432              		.loc 1 1189 0
 1433 0082 2268     		ldr	r2, [r4]
 1434 0084 1368     		ldr	r3, [r2]
 1435 0086 23F00203 		bic	r3, r3, #2
 1436 008a 1360     		str	r3, [r2]
1192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
 1437              		.loc 1 1192 0
 1438 008c 0020     		movs	r0, #0
 1439 008e DEE7     		b	.L112
 1440              	.L123:
1183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
 1441              		.loc 1 1183 0
 1442 0090 0523     		movs	r3, #5
 1443 0092 84F83930 		strb	r3, [r4, #57]
1192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
 1444              		.loc 1 1192 0
 1445 0096 0020     		movs	r0, #0
 1446 0098 D9E7     		b	.L112
 1447              		.cfi_endproc
 1448              	.LFE156:
 1450              		.section	.text.HAL_DMA2D_CLUTLoading_Resume,"ax",%progbits
 1451              		.align	1
 1452              		.global	HAL_DMA2D_CLUTLoading_Resume
 1453              		.syntax unified
 1454              		.thumb
 1455              		.thumb_func
 1456              		.fpu fpv5-sp-d16
 1458              	HAL_DMA2D_CLUTLoading_Resume:
 1459              	.LFB157:
1205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Check the SUSP and START bits for background or foreground CLUT loading */
 1460              		.loc 1 1205 0
 1461              		.cfi_startproc
 1462              		@ args = 0, pretend = 0, frame = 0
 1463              		@ frame_needed = 0, uses_anonymous_args = 0
 1464              		@ link register save eliminated.
 1465              	.LVL130:
ARM GAS  /tmp/ccMN1FNg.s 			page 65


1207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
 1466              		.loc 1 1207 0
 1467 0000 61B9     		cbnz	r1, .L125
1210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     {
 1468              		.loc 1 1210 0
 1469 0002 0368     		ldr	r3, [r0]
 1470 0004 1A68     		ldr	r2, [r3]
 1471 0006 12F0020F 		tst	r2, #2
 1472 000a 13D0     		beq	.L126
1212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       {
 1473              		.loc 1 1212 0
 1474 000c 5B6A     		ldr	r3, [r3, #36]
 1475 000e 13F0200F 		tst	r3, #32
 1476 0012 0FD0     		beq	.L126
1215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     }
 1477              		.loc 1 1215 0
 1478 0014 0223     		movs	r3, #2
 1479 0016 80F83930 		strb	r3, [r0, #57]
 1480 001a 0BE0     		b	.L126
 1481              	.L125:
1222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     {
 1482              		.loc 1 1222 0
 1483 001c 0368     		ldr	r3, [r0]
 1484 001e 1A68     		ldr	r2, [r3]
 1485 0020 12F0020F 		tst	r2, #2
 1486 0024 06D0     		beq	.L126
1224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       {
 1487              		.loc 1 1224 0
 1488 0026 DB69     		ldr	r3, [r3, #28]
 1489 0028 13F0200F 		tst	r3, #32
 1490 002c 02D0     		beq	.L126
1227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     }
 1491              		.loc 1 1227 0
 1492 002e 0223     		movs	r3, #2
 1493 0030 80F83930 		strb	r3, [r0, #57]
 1494              	.L126:
1233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 1495              		.loc 1 1233 0
 1496 0034 0268     		ldr	r2, [r0]
 1497 0036 1368     		ldr	r3, [r2]
 1498 0038 23F00203 		bic	r3, r3, #2
 1499 003c 1360     		str	r3, [r2]
1236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 1500              		.loc 1 1236 0
 1501 003e 0020     		movs	r0, #0
 1502              	.LVL131:
 1503 0040 7047     		bx	lr
 1504              		.cfi_endproc
 1505              	.LFE157:
 1507              		.section	.text.HAL_DMA2D_PollForTransfer,"ax",%progbits
 1508              		.align	1
 1509              		.global	HAL_DMA2D_PollForTransfer
 1510              		.syntax unified
 1511              		.thumb
 1512              		.thumb_func
 1513              		.fpu fpv5-sp-d16
 1515              	HAL_DMA2D_PollForTransfer:
ARM GAS  /tmp/ccMN1FNg.s 			page 66


 1516              	.LFB158:
1248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   uint32_t tickstart;
 1517              		.loc 1 1248 0
 1518              		.cfi_startproc
 1519              		@ args = 0, pretend = 0, frame = 8
 1520              		@ frame_needed = 0, uses_anonymous_args = 0
 1521              	.LVL132:
 1522 0000 70B5     		push	{r4, r5, r6, lr}
 1523              	.LCFI37:
 1524              		.cfi_def_cfa_offset 16
 1525              		.cfi_offset 4, -16
 1526              		.cfi_offset 5, -12
 1527              		.cfi_offset 6, -8
 1528              		.cfi_offset 14, -4
 1529 0002 82B0     		sub	sp, sp, #8
 1530              	.LCFI38:
 1531              		.cfi_def_cfa_offset 24
 1532 0004 0446     		mov	r4, r0
 1533 0006 0D46     		mov	r5, r1
1251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 1534              		.loc 1 1251 0
 1535 0008 0023     		movs	r3, #0
 1536 000a 0193     		str	r3, [sp, #4]
1254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
 1537              		.loc 1 1254 0
 1538 000c 0368     		ldr	r3, [r0]
 1539 000e 1B68     		ldr	r3, [r3]
 1540 0010 13F0010F 		tst	r3, #1
 1541 0014 11D1     		bne	.L147
 1542              	.LVL133:
 1543              	.L128:
1303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   layer_start |= hdma2d->Instance->BGPFCCR & DMA2D_BGPFCCR_START;
 1544              		.loc 1 1303 0
 1545 0016 2268     		ldr	r2, [r4]
 1546 0018 D369     		ldr	r3, [r2, #28]
 1547              	.LVL134:
1304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   if (layer_start != 0U)
 1548              		.loc 1 1304 0
 1549 001a 526A     		ldr	r2, [r2, #36]
 1550 001c 1343     		orrs	r3, r3, r2
 1551              	.LVL135:
1305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
 1552              		.loc 1 1305 0
 1553 001e 13F0200F 		tst	r3, #32
 1554 0022 47D1     		bne	.L148
 1555              	.LVL136:
 1556              	.L137:
1359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 1557              		.loc 1 1359 0
 1558 0024 2368     		ldr	r3, [r4]
 1559 0026 1222     		movs	r2, #18
 1560 0028 9A60     		str	r2, [r3, #8]
1362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 1561              		.loc 1 1362 0
 1562 002a 0123     		movs	r3, #1
 1563 002c 84F83930 		strb	r3, [r4, #57]
1365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
ARM GAS  /tmp/ccMN1FNg.s 			page 67


 1564              		.loc 1 1365 0
 1565 0030 0020     		movs	r0, #0
 1566 0032 84F83800 		strb	r0, [r4, #56]
 1567              	.L133:
1368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
 1568              		.loc 1 1368 0
 1569 0036 02B0     		add	sp, sp, #8
 1570              	.LCFI39:
 1571              		.cfi_remember_state
 1572              		.cfi_def_cfa_offset 16
 1573              		@ sp needed
 1574 0038 70BD     		pop	{r4, r5, r6, pc}
 1575              	.LVL137:
 1576              	.L147:
 1577              	.LCFI40:
 1578              		.cfi_restore_state
1257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 1579              		.loc 1 1257 0
 1580 003a FFF7FEFF 		bl	HAL_GetTick
 1581              	.LVL138:
 1582 003e 0646     		mov	r6, r0
 1583              	.LVL139:
 1584              	.L134:
1259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     {
 1585              		.loc 1 1259 0
 1586 0040 2368     		ldr	r3, [r4]
 1587 0042 5A68     		ldr	r2, [r3, #4]
 1588 0044 12F0020F 		tst	r2, #2
 1589 0048 E5D1     		bne	.L128
1261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       if ((isrflags & (DMA2D_FLAG_CE|DMA2D_FLAG_TE)) != 0U)
 1590              		.loc 1 1261 0
 1591 004a 5A68     		ldr	r2, [r3, #4]
 1592 004c 0192     		str	r2, [sp, #4]
1262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       {
 1593              		.loc 1 1262 0
 1594 004e 019A     		ldr	r2, [sp, #4]
 1595 0050 12F0210F 		tst	r2, #33
 1596 0054 14D1     		bne	.L149
1284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       {
 1597              		.loc 1 1284 0
 1598 0056 B5F1FF3F 		cmp	r5, #-1
 1599 005a F1D0     		beq	.L134
1286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         {
 1600              		.loc 1 1286 0
 1601 005c FFF7FEFF 		bl	HAL_GetTick
 1602              	.LVL140:
 1603 0060 801B     		subs	r0, r0, r6
 1604 0062 A842     		cmp	r0, r5
 1605 0064 01D8     		bhi	.L135
1286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         {
 1606              		.loc 1 1286 0 is_stmt 0 discriminator 1
 1607 0066 002D     		cmp	r5, #0
 1608 0068 EAD1     		bne	.L134
 1609              	.L135:
1289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 1610              		.loc 1 1289 0 is_stmt 1
 1611 006a E36B     		ldr	r3, [r4, #60]
ARM GAS  /tmp/ccMN1FNg.s 			page 68


 1612 006c 43F02003 		orr	r3, r3, #32
 1613 0070 E363     		str	r3, [r4, #60]
1292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 1614              		.loc 1 1292 0
 1615 0072 0320     		movs	r0, #3
 1616 0074 84F83900 		strb	r0, [r4, #57]
1295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 1617              		.loc 1 1295 0
 1618 0078 0023     		movs	r3, #0
 1619 007a 84F83830 		strb	r3, [r4, #56]
1297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         }
 1620              		.loc 1 1297 0
 1621 007e DAE7     		b	.L133
 1622              	.L149:
1264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         {
 1623              		.loc 1 1264 0
 1624 0080 019A     		ldr	r2, [sp, #4]
 1625 0082 12F0200F 		tst	r2, #32
 1626 0086 03D0     		beq	.L131
1266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         }
 1627              		.loc 1 1266 0
 1628 0088 E26B     		ldr	r2, [r4, #60]
 1629 008a 42F00202 		orr	r2, r2, #2
 1630 008e E263     		str	r2, [r4, #60]
 1631              	.L131:
1268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         {
 1632              		.loc 1 1268 0
 1633 0090 019A     		ldr	r2, [sp, #4]
 1634 0092 12F0010F 		tst	r2, #1
 1635 0096 03D0     		beq	.L132
1270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         }
 1636              		.loc 1 1270 0
 1637 0098 E26B     		ldr	r2, [r4, #60]
 1638 009a 42F00102 		orr	r2, r2, #1
 1639 009e E263     		str	r2, [r4, #60]
 1640              	.L132:
1273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 1641              		.loc 1 1273 0
 1642 00a0 2122     		movs	r2, #33
 1643 00a2 9A60     		str	r2, [r3, #8]
1276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 1644              		.loc 1 1276 0
 1645 00a4 0423     		movs	r3, #4
 1646 00a6 84F83930 		strb	r3, [r4, #57]
1279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 1647              		.loc 1 1279 0
 1648 00aa 0023     		movs	r3, #0
 1649 00ac 84F83830 		strb	r3, [r4, #56]
1281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       }
 1650              		.loc 1 1281 0
 1651 00b0 0120     		movs	r0, #1
 1652 00b2 C0E7     		b	.L133
 1653              	.LVL141:
 1654              	.L148:
1308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 1655              		.loc 1 1308 0
 1656 00b4 FFF7FEFF 		bl	HAL_GetTick
ARM GAS  /tmp/ccMN1FNg.s 			page 69


 1657              	.LVL142:
 1658 00b8 0646     		mov	r6, r0
 1659              	.LVL143:
 1660              	.L143:
1310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     {
 1661              		.loc 1 1310 0
 1662 00ba 2368     		ldr	r3, [r4]
 1663 00bc 5A68     		ldr	r2, [r3, #4]
 1664 00be 12F0100F 		tst	r2, #16
 1665 00c2 AFD1     		bne	.L137
1312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       if ((isrflags & (DMA2D_FLAG_CAE|DMA2D_FLAG_CE|DMA2D_FLAG_TE)) != 0U)
 1666              		.loc 1 1312 0
 1667 00c4 5A68     		ldr	r2, [r3, #4]
 1668 00c6 0192     		str	r2, [sp, #4]
1313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       {
 1669              		.loc 1 1313 0
 1670 00c8 019A     		ldr	r2, [sp, #4]
 1671 00ca 12F0290F 		tst	r2, #41
 1672 00ce 14D1     		bne	.L150
1339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       {
 1673              		.loc 1 1339 0
 1674 00d0 B5F1FF3F 		cmp	r5, #-1
 1675 00d4 F1D0     		beq	.L143
1341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         {
 1676              		.loc 1 1341 0
 1677 00d6 FFF7FEFF 		bl	HAL_GetTick
 1678              	.LVL144:
 1679 00da 801B     		subs	r0, r0, r6
 1680 00dc A842     		cmp	r0, r5
 1681 00de 01D8     		bhi	.L144
1341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         {
 1682              		.loc 1 1341 0 is_stmt 0 discriminator 1
 1683 00e0 002D     		cmp	r5, #0
 1684 00e2 EAD1     		bne	.L143
 1685              	.L144:
1344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 1686              		.loc 1 1344 0 is_stmt 1
 1687 00e4 E36B     		ldr	r3, [r4, #60]
 1688 00e6 43F02003 		orr	r3, r3, #32
 1689 00ea E363     		str	r3, [r4, #60]
1347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 1690              		.loc 1 1347 0
 1691 00ec 0320     		movs	r0, #3
 1692 00ee 84F83900 		strb	r0, [r4, #57]
1350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 1693              		.loc 1 1350 0
 1694 00f2 0023     		movs	r3, #0
 1695 00f4 84F83830 		strb	r3, [r4, #56]
1352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         }
 1696              		.loc 1 1352 0
 1697 00f8 9DE7     		b	.L133
 1698              	.L150:
1315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         {
 1699              		.loc 1 1315 0
 1700 00fa 019A     		ldr	r2, [sp, #4]
 1701 00fc 12F0080F 		tst	r2, #8
 1702 0100 03D0     		beq	.L140
ARM GAS  /tmp/ccMN1FNg.s 			page 70


1317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         }
 1703              		.loc 1 1317 0
 1704 0102 E26B     		ldr	r2, [r4, #60]
 1705 0104 42F00402 		orr	r2, r2, #4
 1706 0108 E263     		str	r2, [r4, #60]
 1707              	.L140:
1319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         {
 1708              		.loc 1 1319 0
 1709 010a 019A     		ldr	r2, [sp, #4]
 1710 010c 12F0200F 		tst	r2, #32
 1711 0110 03D0     		beq	.L141
1321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         }
 1712              		.loc 1 1321 0
 1713 0112 E26B     		ldr	r2, [r4, #60]
 1714 0114 42F00202 		orr	r2, r2, #2
 1715 0118 E263     		str	r2, [r4, #60]
 1716              	.L141:
1323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         {
 1717              		.loc 1 1323 0
 1718 011a 019A     		ldr	r2, [sp, #4]
 1719 011c 12F0010F 		tst	r2, #1
 1720 0120 03D0     		beq	.L142
1325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         }
 1721              		.loc 1 1325 0
 1722 0122 E26B     		ldr	r2, [r4, #60]
 1723 0124 42F00102 		orr	r2, r2, #1
 1724 0128 E263     		str	r2, [r4, #60]
 1725              	.L142:
1328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 1726              		.loc 1 1328 0
 1727 012a 2922     		movs	r2, #41
 1728 012c 9A60     		str	r2, [r3, #8]
1331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 1729              		.loc 1 1331 0
 1730 012e 0423     		movs	r3, #4
 1731 0130 84F83930 		strb	r3, [r4, #57]
1334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 1732              		.loc 1 1334 0
 1733 0134 0023     		movs	r3, #0
 1734 0136 84F83830 		strb	r3, [r4, #56]
1336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       }
 1735              		.loc 1 1336 0
 1736 013a 0120     		movs	r0, #1
 1737 013c 7BE7     		b	.L133
 1738              		.cfi_endproc
 1739              	.LFE158:
 1741              		.section	.text.HAL_DMA2D_LineEventCallback,"ax",%progbits
 1742              		.align	1
 1743              		.weak	HAL_DMA2D_LineEventCallback
 1744              		.syntax unified
 1745              		.thumb
 1746              		.thumb_func
 1747              		.fpu fpv5-sp-d16
 1749              	HAL_DMA2D_LineEventCallback:
 1750              	.LFB160:
1546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Prevent unused argument(s) compilation warning */
 1751              		.loc 1 1546 0
ARM GAS  /tmp/ccMN1FNg.s 			page 71


 1752              		.cfi_startproc
 1753              		@ args = 0, pretend = 0, frame = 0
 1754              		@ frame_needed = 0, uses_anonymous_args = 0
 1755              		@ link register save eliminated.
 1756              	.LVL145:
1553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 1757              		.loc 1 1553 0
 1758 0000 7047     		bx	lr
 1759              		.cfi_endproc
 1760              	.LFE160:
 1762              		.section	.text.HAL_DMA2D_CLUTLoadingCpltCallback,"ax",%progbits
 1763              		.align	1
 1764              		.weak	HAL_DMA2D_CLUTLoadingCpltCallback
 1765              		.syntax unified
 1766              		.thumb
 1767              		.thumb_func
 1768              		.fpu fpv5-sp-d16
 1770              	HAL_DMA2D_CLUTLoadingCpltCallback:
 1771              	.LFB161:
1562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Prevent unused argument(s) compilation warning */
 1772              		.loc 1 1562 0
 1773              		.cfi_startproc
 1774              		@ args = 0, pretend = 0, frame = 0
 1775              		@ frame_needed = 0, uses_anonymous_args = 0
 1776              		@ link register save eliminated.
 1777              	.LVL146:
1569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 1778              		.loc 1 1569 0
 1779 0000 7047     		bx	lr
 1780              		.cfi_endproc
 1781              	.LFE161:
 1783              		.section	.text.HAL_DMA2D_IRQHandler,"ax",%progbits
 1784              		.align	1
 1785              		.global	HAL_DMA2D_IRQHandler
 1786              		.syntax unified
 1787              		.thumb
 1788              		.thumb_func
 1789              		.fpu fpv5-sp-d16
 1791              	HAL_DMA2D_IRQHandler:
 1792              	.LFB159:
1376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 1793              		.loc 1 1376 0
 1794              		.cfi_startproc
 1795              		@ args = 0, pretend = 0, frame = 0
 1796              		@ frame_needed = 0, uses_anonymous_args = 0
 1797              	.LVL147:
 1798 0000 70B5     		push	{r4, r5, r6, lr}
 1799              	.LCFI41:
 1800              		.cfi_def_cfa_offset 16
 1801              		.cfi_offset 4, -16
 1802              		.cfi_offset 5, -12
 1803              		.cfi_offset 6, -8
 1804              		.cfi_offset 14, -4
 1805 0002 0446     		mov	r4, r0
1377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 1806              		.loc 1 1377 0
 1807 0004 0368     		ldr	r3, [r0]
ARM GAS  /tmp/ccMN1FNg.s 			page 72


 1808 0006 5D68     		ldr	r5, [r3, #4]
 1809              	.LVL148:
1378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 1810              		.loc 1 1378 0
 1811 0008 1E68     		ldr	r6, [r3]
 1812              	.LVL149:
1381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
 1813              		.loc 1 1381 0
 1814 000a 15F0010F 		tst	r5, #1
 1815 000e 16D0     		beq	.L154
1383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     {
 1816              		.loc 1 1383 0
 1817 0010 16F4807F 		tst	r6, #256
 1818 0014 13D0     		beq	.L154
1386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 1819              		.loc 1 1386 0
 1820 0016 1A68     		ldr	r2, [r3]
 1821 0018 22F48072 		bic	r2, r2, #256
 1822 001c 1A60     		str	r2, [r3]
1389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 1823              		.loc 1 1389 0
 1824 001e C36B     		ldr	r3, [r0, #60]
 1825 0020 43F00103 		orr	r3, r3, #1
 1826 0024 C363     		str	r3, [r0, #60]
1392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 1827              		.loc 1 1392 0
 1828 0026 0368     		ldr	r3, [r0]
 1829 0028 0122     		movs	r2, #1
 1830 002a 9A60     		str	r2, [r3, #8]
1395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 1831              		.loc 1 1395 0
 1832 002c 0423     		movs	r3, #4
 1833 002e 80F83930 		strb	r3, [r0, #57]
1398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 1834              		.loc 1 1398 0
 1835 0032 0023     		movs	r3, #0
 1836 0034 80F83830 		strb	r3, [r0, #56]
1400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       {
 1837              		.loc 1 1400 0
 1838 0038 4369     		ldr	r3, [r0, #20]
 1839 003a 03B1     		cbz	r3, .L154
1403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       }
 1840              		.loc 1 1403 0
 1841 003c 9847     		blx	r3
 1842              	.LVL150:
 1843              	.L154:
1408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
 1844              		.loc 1 1408 0
 1845 003e 15F0200F 		tst	r5, #32
 1846 0042 18D0     		beq	.L155
1410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     {
 1847              		.loc 1 1410 0
 1848 0044 16F4005F 		tst	r6, #8192
 1849 0048 15D0     		beq	.L155
1413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 1850              		.loc 1 1413 0
 1851 004a 2268     		ldr	r2, [r4]
ARM GAS  /tmp/ccMN1FNg.s 			page 73


 1852 004c 1368     		ldr	r3, [r2]
 1853 004e 23F40053 		bic	r3, r3, #8192
 1854 0052 1360     		str	r3, [r2]
1416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 1855              		.loc 1 1416 0
 1856 0054 2368     		ldr	r3, [r4]
 1857 0056 2022     		movs	r2, #32
 1858 0058 9A60     		str	r2, [r3, #8]
1419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 1859              		.loc 1 1419 0
 1860 005a E36B     		ldr	r3, [r4, #60]
 1861 005c 43F00203 		orr	r3, r3, #2
 1862 0060 E363     		str	r3, [r4, #60]
1422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 1863              		.loc 1 1422 0
 1864 0062 0423     		movs	r3, #4
 1865 0064 84F83930 		strb	r3, [r4, #57]
1425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 1866              		.loc 1 1425 0
 1867 0068 0023     		movs	r3, #0
 1868 006a 84F83830 		strb	r3, [r4, #56]
1427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       {
 1869              		.loc 1 1427 0
 1870 006e 6369     		ldr	r3, [r4, #20]
 1871 0070 0BB1     		cbz	r3, .L155
1430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       }
 1872              		.loc 1 1430 0
 1873 0072 2046     		mov	r0, r4
 1874 0074 9847     		blx	r3
 1875              	.LVL151:
 1876              	.L155:
1435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
 1877              		.loc 1 1435 0
 1878 0076 15F0080F 		tst	r5, #8
 1879 007a 18D0     		beq	.L156
1437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     {
 1880              		.loc 1 1437 0
 1881 007c 16F4006F 		tst	r6, #2048
 1882 0080 15D0     		beq	.L156
1440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 1883              		.loc 1 1440 0
 1884 0082 2268     		ldr	r2, [r4]
 1885 0084 1368     		ldr	r3, [r2]
 1886 0086 23F40063 		bic	r3, r3, #2048
 1887 008a 1360     		str	r3, [r2]
1443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 1888              		.loc 1 1443 0
 1889 008c 2368     		ldr	r3, [r4]
 1890 008e 0822     		movs	r2, #8
 1891 0090 9A60     		str	r2, [r3, #8]
1446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 1892              		.loc 1 1446 0
 1893 0092 E36B     		ldr	r3, [r4, #60]
 1894 0094 43F00403 		orr	r3, r3, #4
 1895 0098 E363     		str	r3, [r4, #60]
1449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 1896              		.loc 1 1449 0
ARM GAS  /tmp/ccMN1FNg.s 			page 74


 1897 009a 0423     		movs	r3, #4
 1898 009c 84F83930 		strb	r3, [r4, #57]
1452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 1899              		.loc 1 1452 0
 1900 00a0 0023     		movs	r3, #0
 1901 00a2 84F83830 		strb	r3, [r4, #56]
1454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       {
 1902              		.loc 1 1454 0
 1903 00a6 6369     		ldr	r3, [r4, #20]
 1904 00a8 0BB1     		cbz	r3, .L156
1457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       }
 1905              		.loc 1 1457 0
 1906 00aa 2046     		mov	r0, r4
 1907 00ac 9847     		blx	r3
 1908              	.LVL152:
 1909              	.L156:
1462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
 1910              		.loc 1 1462 0
 1911 00ae 15F0040F 		tst	r5, #4
 1912 00b2 02D0     		beq	.L157
1464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     {
 1913              		.loc 1 1464 0
 1914 00b4 16F4806F 		tst	r6, #1024
 1915 00b8 20D1     		bne	.L161
 1916              	.L157:
1482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
 1917              		.loc 1 1482 0
 1918 00ba 15F0020F 		tst	r5, #2
 1919 00be 16D0     		beq	.L158
1484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     {
 1920              		.loc 1 1484 0
 1921 00c0 16F4007F 		tst	r6, #512
 1922 00c4 13D0     		beq	.L158
1487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 1923              		.loc 1 1487 0
 1924 00c6 2268     		ldr	r2, [r4]
 1925 00c8 1368     		ldr	r3, [r2]
 1926 00ca 23F40073 		bic	r3, r3, #512
 1927 00ce 1360     		str	r3, [r2]
1490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 1928              		.loc 1 1490 0
 1929 00d0 2368     		ldr	r3, [r4]
 1930 00d2 0222     		movs	r2, #2
 1931 00d4 9A60     		str	r2, [r3, #8]
1493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 1932              		.loc 1 1493 0
 1933 00d6 E36B     		ldr	r3, [r4, #60]
 1934 00d8 E363     		str	r3, [r4, #60]
1496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 1935              		.loc 1 1496 0
 1936 00da 0123     		movs	r3, #1
 1937 00dc 84F83930 		strb	r3, [r4, #57]
1499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 1938              		.loc 1 1499 0
 1939 00e0 0023     		movs	r3, #0
 1940 00e2 84F83830 		strb	r3, [r4, #56]
1501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       {
ARM GAS  /tmp/ccMN1FNg.s 			page 75


 1941              		.loc 1 1501 0
 1942 00e6 2369     		ldr	r3, [r4, #16]
 1943 00e8 0BB1     		cbz	r3, .L158
1504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       }
 1944              		.loc 1 1504 0
 1945 00ea 2046     		mov	r0, r4
 1946 00ec 9847     		blx	r3
 1947              	.LVL153:
 1948              	.L158:
1509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
 1949              		.loc 1 1509 0
 1950 00ee 15F0100F 		tst	r5, #16
 1951 00f2 02D0     		beq	.L153
1511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     {
 1952              		.loc 1 1511 0
 1953 00f4 16F4805F 		tst	r6, #4096
 1954 00f8 0CD1     		bne	.L162
 1955              	.L153:
1537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 1956              		.loc 1 1537 0
 1957 00fa 70BD     		pop	{r4, r5, r6, pc}
 1958              	.LVL154:
 1959              	.L161:
1467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 1960              		.loc 1 1467 0
 1961 00fc 2268     		ldr	r2, [r4]
 1962 00fe 1368     		ldr	r3, [r2]
 1963 0100 23F48063 		bic	r3, r3, #1024
 1964 0104 1360     		str	r3, [r2]
1470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 1965              		.loc 1 1470 0
 1966 0106 2368     		ldr	r3, [r4]
 1967 0108 0422     		movs	r2, #4
 1968 010a 9A60     		str	r2, [r3, #8]
1476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** #endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
 1969              		.loc 1 1476 0
 1970 010c 2046     		mov	r0, r4
 1971 010e FFF7FEFF 		bl	HAL_DMA2D_LineEventCallback
 1972              	.LVL155:
 1973 0112 D2E7     		b	.L157
 1974              	.L162:
1514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 1975              		.loc 1 1514 0
 1976 0114 2268     		ldr	r2, [r4]
 1977 0116 1368     		ldr	r3, [r2]
 1978 0118 23F48053 		bic	r3, r3, #4096
 1979 011c 1360     		str	r3, [r2]
1517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 1980              		.loc 1 1517 0
 1981 011e 2368     		ldr	r3, [r4]
 1982 0120 1022     		movs	r2, #16
 1983 0122 9A60     		str	r2, [r3, #8]
1520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 1984              		.loc 1 1520 0
 1985 0124 E36B     		ldr	r3, [r4, #60]
 1986 0126 E363     		str	r3, [r4, #60]
1523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
ARM GAS  /tmp/ccMN1FNg.s 			page 76


 1987              		.loc 1 1523 0
 1988 0128 0123     		movs	r3, #1
 1989 012a 84F83930 		strb	r3, [r4, #57]
1526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 1990              		.loc 1 1526 0
 1991 012e 0023     		movs	r3, #0
 1992 0130 84F83830 		strb	r3, [r4, #56]
1532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** #endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
 1993              		.loc 1 1532 0
 1994 0134 2046     		mov	r0, r4
 1995 0136 FFF7FEFF 		bl	HAL_DMA2D_CLUTLoadingCpltCallback
 1996              	.LVL156:
1537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 1997              		.loc 1 1537 0
 1998 013a DEE7     		b	.L153
 1999              		.cfi_endproc
 2000              	.LFE159:
 2002              		.section	.text.HAL_DMA2D_ConfigLayer,"ax",%progbits
 2003              		.align	1
 2004              		.global	HAL_DMA2D_ConfigLayer
 2005              		.syntax unified
 2006              		.thumb
 2007              		.thumb_func
 2008              		.fpu fpv5-sp-d16
 2010              	HAL_DMA2D_ConfigLayer:
 2011              	.LFB162:
1605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   DMA2D_LayerCfgTypeDef *pLayerCfg;
 2012              		.loc 1 1605 0
 2013              		.cfi_startproc
 2014              		@ args = 0, pretend = 0, frame = 0
 2015              		@ frame_needed = 0, uses_anonymous_args = 0
 2016              		@ link register save eliminated.
 2017              	.LVL157:
1626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 2018              		.loc 1 1626 0
 2019 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 2020 0004 012B     		cmp	r3, #1
 2021 0006 59D0     		beq	.L169
1605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   DMA2D_LayerCfgTypeDef *pLayerCfg;
 2022              		.loc 1 1605 0 discriminator 2
 2023 0008 30B4     		push	{r4, r5}
 2024              	.LCFI42:
 2025              		.cfi_def_cfa_offset 8
 2026              		.cfi_offset 4, -8
 2027              		.cfi_offset 5, -4
1626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 2028              		.loc 1 1626 0 discriminator 2
 2029 000a 0123     		movs	r3, #1
 2030 000c 80F83830 		strb	r3, [r0, #56]
1629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 2031              		.loc 1 1629 0 discriminator 2
 2032 0010 0223     		movs	r3, #2
 2033 0012 80F83930 		strb	r3, [r0, #57]
 2034              	.LVL158:
1639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;
 2035              		.loc 1 1639 0 discriminator 2
 2036 0016 00EB0113 		add	r3, r0, r1, lsl #4
ARM GAS  /tmp/ccMN1FNg.s 			page 77


 2037 001a DA69     		ldr	r2, [r3, #28]
 2038 001c 8B1C     		adds	r3, r1, #2
 2039 001e 1B01     		lsls	r3, r3, #4
 2040 0020 C358     		ldr	r3, [r0, r3]
 2041 0022 42EA0343 		orr	r3, r2, r3, lsl #16
 2042              	.LVL159:
1644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
 2043              		.loc 1 1644 0 discriminator 2
 2044 0026 093A     		subs	r2, r2, #9
 2045 0028 012A     		cmp	r2, #1
 2046 002a 1ED9     		bls	.L174
1650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
 2047              		.loc 1 1650 0
 2048 002c 8A1C     		adds	r2, r1, #2
 2049 002e 00EB0212 		add	r2, r0, r2, lsl #4
 2050 0032 5268     		ldr	r2, [r2, #4]
 2051 0034 43EA0263 		orr	r3, r3, r2, lsl #24
 2052              	.LVL160:
 2053              	.L166:
1654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
 2054              		.loc 1 1654 0
 2055 0038 41BB     		cbnz	r1, .L167
1657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 2056              		.loc 1 1657 0
 2057 003a 0468     		ldr	r4, [r0]
 2058 003c 656A     		ldr	r5, [r4, #36]
 2059 003e 204A     		ldr	r2, .L176
 2060 0040 2A40     		ands	r2, r2, r5
 2061 0042 1343     		orrs	r3, r3, r2
 2062              	.LVL161:
 2063 0044 6362     		str	r3, [r4, #36]
1660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 2064              		.loc 1 1660 0
 2065 0046 0268     		ldr	r2, [r0]
 2066 0048 00EB0113 		add	r3, r0, r1, lsl #4
 2067 004c 9C69     		ldr	r4, [r3, #24]
 2068 004e 9461     		str	r4, [r2, #24]
1663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     {
 2069              		.loc 1 1663 0
 2070 0050 DB69     		ldr	r3, [r3, #28]
 2071 0052 093B     		subs	r3, r3, #9
 2072 0054 012B     		cmp	r3, #1
 2073 0056 10D9     		bls	.L175
 2074              	.LVL162:
 2075              	.L168:
1686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 2076              		.loc 1 1686 0
 2077 0058 0123     		movs	r3, #1
 2078 005a 80F83930 		strb	r3, [r0, #57]
1689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 2079              		.loc 1 1689 0
 2080 005e 0023     		movs	r3, #0
 2081 0060 80F83830 		strb	r3, [r0, #56]
1691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
 2082              		.loc 1 1691 0
 2083 0064 1846     		mov	r0, r3
 2084              	.LVL163:
ARM GAS  /tmp/ccMN1FNg.s 			page 78


1692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 2085              		.loc 1 1692 0
 2086 0066 30BC     		pop	{r4, r5}
 2087              	.LCFI43:
 2088              		.cfi_remember_state
 2089              		.cfi_restore 5
 2090              		.cfi_restore 4
 2091              		.cfi_def_cfa_offset 0
 2092 0068 7047     		bx	lr
 2093              	.LVL164:
 2094              	.L174:
 2095              	.LCFI44:
 2096              		.cfi_restore_state
1646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
 2097              		.loc 1 1646 0
 2098 006a 8A1C     		adds	r2, r1, #2
 2099 006c 00EB0212 		add	r2, r0, r2, lsl #4
 2100 0070 5268     		ldr	r2, [r2, #4]
 2101 0072 02F07F42 		and	r2, r2, #-16777216
 2102 0076 1343     		orrs	r3, r3, r2
 2103              	.LVL165:
 2104 0078 DEE7     		b	.L166
 2105              	.LVL166:
 2106              	.L175:
1665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     }
 2107              		.loc 1 1665 0
 2108 007a 0231     		adds	r1, r1, #2
 2109              	.LVL167:
 2110 007c 00EB0111 		add	r1, r0, r1, lsl #4
 2111              	.LVL168:
 2112 0080 4B68     		ldr	r3, [r1, #4]
 2113 0082 0268     		ldr	r2, [r0]
 2114 0084 23F07F43 		bic	r3, r3, #-16777216
 2115 0088 9362     		str	r3, [r2, #40]
 2116 008a E5E7     		b	.L168
 2117              	.LVL169:
 2118              	.L167:
1674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 2119              		.loc 1 1674 0
 2120 008c 0468     		ldr	r4, [r0]
 2121 008e E569     		ldr	r5, [r4, #28]
 2122 0090 0B4A     		ldr	r2, .L176
 2123 0092 2A40     		ands	r2, r2, r5
 2124 0094 1343     		orrs	r3, r3, r2
 2125              	.LVL170:
 2126 0096 E361     		str	r3, [r4, #28]
1677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 2127              		.loc 1 1677 0
 2128 0098 0268     		ldr	r2, [r0]
 2129 009a 00EB0113 		add	r3, r0, r1, lsl #4
 2130 009e 9C69     		ldr	r4, [r3, #24]
 2131 00a0 1461     		str	r4, [r2, #16]
1680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     {
 2132              		.loc 1 1680 0
 2133 00a2 DB69     		ldr	r3, [r3, #28]
 2134 00a4 093B     		subs	r3, r3, #9
 2135 00a6 012B     		cmp	r3, #1
ARM GAS  /tmp/ccMN1FNg.s 			page 79


 2136 00a8 D6D8     		bhi	.L168
1682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     }
 2137              		.loc 1 1682 0
 2138 00aa 0231     		adds	r1, r1, #2
 2139              	.LVL171:
 2140 00ac 00EB0111 		add	r1, r0, r1, lsl #4
 2141              	.LVL172:
 2142 00b0 4B68     		ldr	r3, [r1, #4]
 2143 00b2 0268     		ldr	r2, [r0]
 2144 00b4 23F07F43 		bic	r3, r3, #-16777216
 2145 00b8 1362     		str	r3, [r2, #32]
 2146 00ba CDE7     		b	.L168
 2147              	.LVL173:
 2148              	.L169:
 2149              	.LCFI45:
 2150              		.cfi_def_cfa_offset 0
 2151              		.cfi_restore 4
 2152              		.cfi_restore 5
1626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 2153              		.loc 1 1626 0
 2154 00bc 0220     		movs	r0, #2
 2155              	.LVL174:
1692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 2156              		.loc 1 1692 0
 2157 00be 7047     		bx	lr
 2158              	.L177:
 2159              		.align	2
 2160              	.L176:
 2161 00c0 F0FFFC00 		.word	16580592
 2162              		.cfi_endproc
 2163              	.LFE162:
 2165              		.section	.text.HAL_DMA2D_ConfigCLUT,"ax",%progbits
 2166              		.align	1
 2167              		.global	HAL_DMA2D_ConfigCLUT
 2168              		.syntax unified
 2169              		.thumb
 2170              		.thumb_func
 2171              		.fpu fpv5-sp-d16
 2173              	HAL_DMA2D_ConfigCLUT:
 2174              	.LFB163:
1706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Check the parameters */
 2175              		.loc 1 1706 0
 2176              		.cfi_startproc
 2177              		@ args = 4, pretend = 0, frame = 16
 2178              		@ frame_needed = 0, uses_anonymous_args = 0
 2179              		@ link register save eliminated.
 2180              	.LVL175:
 2181 0000 10B4     		push	{r4}
 2182              	.LCFI46:
 2183              		.cfi_def_cfa_offset 4
 2184              		.cfi_offset 4, -4
 2185 0002 85B0     		sub	sp, sp, #20
 2186              	.LCFI47:
 2187              		.cfi_def_cfa_offset 24
 2188 0004 04AC     		add	r4, sp, #16
 2189 0006 04E90E00 		stmdb	r4, {r1, r2, r3}
1713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
ARM GAS  /tmp/ccMN1FNg.s 			page 80


 2190              		.loc 1 1713 0
 2191 000a 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 2192 000e 012B     		cmp	r3, #1
 2193 0010 2FD0     		beq	.L182
1713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 2194              		.loc 1 1713 0 is_stmt 0 discriminator 2
 2195 0012 0123     		movs	r3, #1
 2196 0014 80F83830 		strb	r3, [r0, #56]
1716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 2197              		.loc 1 1716 0 is_stmt 1 discriminator 2
 2198 0018 0223     		movs	r3, #2
 2199 001a 80F83930 		strb	r3, [r0, #57]
1719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
 2200              		.loc 1 1719 0 discriminator 2
 2201 001e 069B     		ldr	r3, [sp, #24]
 2202 0020 C3B9     		cbnz	r3, .L180
1722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 2203              		.loc 1 1722 0
 2204 0022 0368     		ldr	r3, [r0]
 2205 0024 019A     		ldr	r2, [sp, #4]
 2206 0026 1A63     		str	r2, [r3, #48]
1725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****             ((CLUTCfg.Size << DMA2D_BGPFCCR_CS_Pos) | (CLUTCfg.CLUTColorMode << DMA2D_BGPFCCR_CCM_P
 2207              		.loc 1 1725 0
 2208 0028 0168     		ldr	r1, [r0]
 2209 002a 4A6A     		ldr	r2, [r1, #36]
 2210 002c 124B     		ldr	r3, .L184
 2211 002e 1340     		ands	r3, r3, r2
 2212 0030 029A     		ldr	r2, [sp, #8]
 2213 0032 1201     		lsls	r2, r2, #4
 2214 0034 039C     		ldr	r4, [sp, #12]
 2215 0036 42EA0422 		orr	r2, r2, r4, lsl #8
 2216 003a 1343     		orrs	r3, r3, r2
 2217 003c 4B62     		str	r3, [r1, #36]
 2218              	.L181:
1740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 2219              		.loc 1 1740 0
 2220 003e 0123     		movs	r3, #1
 2221 0040 80F83930 		strb	r3, [r0, #57]
1743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 2222              		.loc 1 1743 0
 2223 0044 0023     		movs	r3, #0
 2224 0046 80F83830 		strb	r3, [r0, #56]
1745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
 2225              		.loc 1 1745 0
 2226 004a 1846     		mov	r0, r3
 2227              	.LVL176:
 2228              	.L179:
1746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 2229              		.loc 1 1746 0
 2230 004c 05B0     		add	sp, sp, #20
 2231              	.LCFI48:
 2232              		.cfi_remember_state
 2233              		.cfi_def_cfa_offset 4
 2234              		@ sp needed
 2235 004e 5DF8044B 		ldr	r4, [sp], #4
 2236              	.LCFI49:
 2237              		.cfi_restore 4
ARM GAS  /tmp/ccMN1FNg.s 			page 81


 2238              		.cfi_def_cfa_offset 0
 2239              	.LVL177:
 2240 0052 7047     		bx	lr
 2241              	.LVL178:
 2242              	.L180:
 2243              	.LCFI50:
 2244              		.cfi_restore_state
1732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 2245              		.loc 1 1732 0
 2246 0054 0368     		ldr	r3, [r0]
 2247 0056 019A     		ldr	r2, [sp, #4]
 2248 0058 DA62     		str	r2, [r3, #44]
1735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****             ((CLUTCfg.Size << DMA2D_FGPFCCR_CS_Pos) | (CLUTCfg.CLUTColorMode << DMA2D_FGPFCCR_CCM_P
 2249              		.loc 1 1735 0
 2250 005a 0168     		ldr	r1, [r0]
 2251 005c CA69     		ldr	r2, [r1, #28]
 2252 005e 064B     		ldr	r3, .L184
 2253 0060 1340     		ands	r3, r3, r2
 2254 0062 029A     		ldr	r2, [sp, #8]
 2255 0064 1201     		lsls	r2, r2, #4
 2256 0066 039C     		ldr	r4, [sp, #12]
 2257 0068 42EA0422 		orr	r2, r2, r4, lsl #8
 2258 006c 1343     		orrs	r3, r3, r2
 2259 006e CB61     		str	r3, [r1, #28]
 2260 0070 E5E7     		b	.L181
 2261              	.L182:
1713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 2262              		.loc 1 1713 0
 2263 0072 0220     		movs	r0, #2
 2264              	.LVL179:
 2265 0074 EAE7     		b	.L179
 2266              	.L185:
 2267 0076 00BF     		.align	2
 2268              	.L184:
 2269 0078 EF00FFFF 		.word	-65297
 2270              		.cfi_endproc
 2271              	.LFE163:
 2273              		.section	.text.HAL_DMA2D_ProgramLineEvent,"ax",%progbits
 2274              		.align	1
 2275              		.global	HAL_DMA2D_ProgramLineEvent
 2276              		.syntax unified
 2277              		.thumb
 2278              		.thumb_func
 2279              		.fpu fpv5-sp-d16
 2281              	HAL_DMA2D_ProgramLineEvent:
 2282              	.LFB164:
1760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Check the parameters */
 2283              		.loc 1 1760 0
 2284              		.cfi_startproc
 2285              		@ args = 0, pretend = 0, frame = 0
 2286              		@ frame_needed = 0, uses_anonymous_args = 0
 2287              		@ link register save eliminated.
 2288              	.LVL180:
1764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
 2289              		.loc 1 1764 0
 2290 0000 B1F5803F 		cmp	r1, #65536
 2291 0004 17D2     		bcs	.L188
ARM GAS  /tmp/ccMN1FNg.s 			page 82


1771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 2292              		.loc 1 1771 0
 2293 0006 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 2294 000a 012B     		cmp	r3, #1
 2295 000c 15D0     		beq	.L189
1771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 2296              		.loc 1 1771 0 is_stmt 0 discriminator 2
 2297 000e 0122     		movs	r2, #1
 2298 0010 80F83820 		strb	r2, [r0, #56]
1774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 2299              		.loc 1 1774 0 is_stmt 1 discriminator 2
 2300 0014 0223     		movs	r3, #2
 2301 0016 80F83930 		strb	r3, [r0, #57]
1777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 2302              		.loc 1 1777 0 discriminator 2
 2303 001a 0368     		ldr	r3, [r0]
 2304 001c 9964     		str	r1, [r3, #72]
1780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 2305              		.loc 1 1780 0 discriminator 2
 2306 001e 0168     		ldr	r1, [r0]
 2307              	.LVL181:
 2308 0020 0B68     		ldr	r3, [r1]
 2309              	.LVL182:
 2310 0022 43F48063 		orr	r3, r3, #1024
 2311 0026 0B60     		str	r3, [r1]
1783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 2312              		.loc 1 1783 0 discriminator 2
 2313 0028 80F83920 		strb	r2, [r0, #57]
1786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 2314              		.loc 1 1786 0 discriminator 2
 2315 002c 0023     		movs	r3, #0
 2316 002e 80F83830 		strb	r3, [r0, #56]
1788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
 2317              		.loc 1 1788 0 discriminator 2
 2318 0032 1846     		mov	r0, r3
 2319              	.LVL183:
 2320 0034 7047     		bx	lr
 2321              	.LVL184:
 2322              	.L188:
1766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
 2323              		.loc 1 1766 0
 2324 0036 0120     		movs	r0, #1
 2325              	.LVL185:
 2326 0038 7047     		bx	lr
 2327              	.LVL186:
 2328              	.L189:
1771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 2329              		.loc 1 1771 0
 2330 003a 0220     		movs	r0, #2
 2331              	.LVL187:
1790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 2332              		.loc 1 1790 0
 2333 003c 7047     		bx	lr
 2334              		.cfi_endproc
 2335              	.LFE164:
 2337              		.section	.text.HAL_DMA2D_EnableDeadTime,"ax",%progbits
 2338              		.align	1
ARM GAS  /tmp/ccMN1FNg.s 			page 83


 2339              		.global	HAL_DMA2D_EnableDeadTime
 2340              		.syntax unified
 2341              		.thumb
 2342              		.thumb_func
 2343              		.fpu fpv5-sp-d16
 2345              	HAL_DMA2D_EnableDeadTime:
 2346              	.LFB165:
1798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Process Locked */
 2347              		.loc 1 1798 0
 2348              		.cfi_startproc
 2349              		@ args = 0, pretend = 0, frame = 0
 2350              		@ frame_needed = 0, uses_anonymous_args = 0
 2351              		@ link register save eliminated.
 2352              	.LVL188:
1800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 2353              		.loc 1 1800 0
 2354 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 2355 0004 012B     		cmp	r3, #1
 2356 0006 10D0     		beq	.L192
1800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 2357              		.loc 1 1800 0 is_stmt 0 discriminator 2
 2358 0008 0122     		movs	r2, #1
 2359 000a 80F83820 		strb	r2, [r0, #56]
1802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 2360              		.loc 1 1802 0 is_stmt 1 discriminator 2
 2361 000e 0223     		movs	r3, #2
 2362 0010 80F83930 		strb	r3, [r0, #57]
1805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 2363              		.loc 1 1805 0 discriminator 2
 2364 0014 0168     		ldr	r1, [r0]
 2365 0016 CB6C     		ldr	r3, [r1, #76]
 2366 0018 1343     		orrs	r3, r3, r2
 2367 001a CB64     		str	r3, [r1, #76]
1807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 2368              		.loc 1 1807 0 discriminator 2
 2369 001c 80F83920 		strb	r2, [r0, #57]
1810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 2370              		.loc 1 1810 0 discriminator 2
 2371 0020 0023     		movs	r3, #0
 2372 0022 80F83830 		strb	r3, [r0, #56]
1812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
 2373              		.loc 1 1812 0 discriminator 2
 2374 0026 1846     		mov	r0, r3
 2375              	.LVL189:
 2376 0028 7047     		bx	lr
 2377              	.LVL190:
 2378              	.L192:
1800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 2379              		.loc 1 1800 0
 2380 002a 0220     		movs	r0, #2
 2381              	.LVL191:
1813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 2382              		.loc 1 1813 0
 2383 002c 7047     		bx	lr
 2384              		.cfi_endproc
 2385              	.LFE165:
 2387              		.section	.text.HAL_DMA2D_DisableDeadTime,"ax",%progbits
ARM GAS  /tmp/ccMN1FNg.s 			page 84


 2388              		.align	1
 2389              		.global	HAL_DMA2D_DisableDeadTime
 2390              		.syntax unified
 2391              		.thumb
 2392              		.thumb_func
 2393              		.fpu fpv5-sp-d16
 2395              	HAL_DMA2D_DisableDeadTime:
 2396              	.LFB166:
1821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Process Locked */
 2397              		.loc 1 1821 0
 2398              		.cfi_startproc
 2399              		@ args = 0, pretend = 0, frame = 0
 2400              		@ frame_needed = 0, uses_anonymous_args = 0
 2401              		@ link register save eliminated.
 2402              	.LVL192:
1823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 2403              		.loc 1 1823 0
 2404 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 2405 0004 012B     		cmp	r3, #1
 2406 0006 11D0     		beq	.L195
1823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 2407              		.loc 1 1823 0 is_stmt 0 discriminator 2
 2408 0008 0122     		movs	r2, #1
 2409 000a 80F83820 		strb	r2, [r0, #56]
1825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 2410              		.loc 1 1825 0 is_stmt 1 discriminator 2
 2411 000e 0223     		movs	r3, #2
 2412 0010 80F83930 		strb	r3, [r0, #57]
1828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 2413              		.loc 1 1828 0 discriminator 2
 2414 0014 0168     		ldr	r1, [r0]
 2415 0016 CB6C     		ldr	r3, [r1, #76]
 2416 0018 23F00103 		bic	r3, r3, #1
 2417 001c CB64     		str	r3, [r1, #76]
1830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 2418              		.loc 1 1830 0 discriminator 2
 2419 001e 80F83920 		strb	r2, [r0, #57]
1833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 2420              		.loc 1 1833 0 discriminator 2
 2421 0022 0023     		movs	r3, #0
 2422 0024 80F83830 		strb	r3, [r0, #56]
1835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
 2423              		.loc 1 1835 0 discriminator 2
 2424 0028 1846     		mov	r0, r3
 2425              	.LVL193:
 2426 002a 7047     		bx	lr
 2427              	.LVL194:
 2428              	.L195:
1823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 2429              		.loc 1 1823 0
 2430 002c 0220     		movs	r0, #2
 2431              	.LVL195:
1836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 2432              		.loc 1 1836 0
 2433 002e 7047     		bx	lr
 2434              		.cfi_endproc
 2435              	.LFE166:
ARM GAS  /tmp/ccMN1FNg.s 			page 85


 2437              		.section	.text.HAL_DMA2D_ConfigDeadTime,"ax",%progbits
 2438              		.align	1
 2439              		.global	HAL_DMA2D_ConfigDeadTime
 2440              		.syntax unified
 2441              		.thumb
 2442              		.thumb_func
 2443              		.fpu fpv5-sp-d16
 2445              	HAL_DMA2D_ConfigDeadTime:
 2446              	.LFB167:
1847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Process Locked */
 2447              		.loc 1 1847 0
 2448              		.cfi_startproc
 2449              		@ args = 0, pretend = 0, frame = 0
 2450              		@ frame_needed = 0, uses_anonymous_args = 0
 2451              		@ link register save eliminated.
 2452              	.LVL196:
1849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 2453              		.loc 1 1849 0
 2454 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 2455 0004 012B     		cmp	r3, #1
 2456 0006 16D0     		beq	.L198
1847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Process Locked */
 2457              		.loc 1 1847 0 discriminator 2
 2458 0008 10B4     		push	{r4}
 2459              	.LCFI51:
 2460              		.cfi_def_cfa_offset 4
 2461              		.cfi_offset 4, -4
1849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 2462              		.loc 1 1849 0 discriminator 2
 2463 000a 0122     		movs	r2, #1
 2464 000c 80F83820 		strb	r2, [r0, #56]
1851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 2465              		.loc 1 1851 0 discriminator 2
 2466 0010 0223     		movs	r3, #2
 2467 0012 80F83930 		strb	r3, [r0, #57]
1854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 2468              		.loc 1 1854 0 discriminator 2
 2469 0016 0468     		ldr	r4, [r0]
 2470 0018 E36C     		ldr	r3, [r4, #76]
 2471 001a 23F47F43 		bic	r3, r3, #65280
 2472 001e 43EA0121 		orr	r1, r3, r1, lsl #8
 2473              	.LVL197:
 2474 0022 E164     		str	r1, [r4, #76]
1856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 2475              		.loc 1 1856 0 discriminator 2
 2476 0024 80F83920 		strb	r2, [r0, #57]
1859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 2477              		.loc 1 1859 0 discriminator 2
 2478 0028 0023     		movs	r3, #0
 2479 002a 80F83830 		strb	r3, [r0, #56]
1861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
 2480              		.loc 1 1861 0 discriminator 2
 2481 002e 1846     		mov	r0, r3
 2482              	.LVL198:
1862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 2483              		.loc 1 1862 0 discriminator 2
 2484 0030 5DF8044B 		ldr	r4, [sp], #4
ARM GAS  /tmp/ccMN1FNg.s 			page 86


 2485              	.LCFI52:
 2486              		.cfi_restore 4
 2487              		.cfi_def_cfa_offset 0
 2488 0034 7047     		bx	lr
 2489              	.LVL199:
 2490              	.L198:
1849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 2491              		.loc 1 1849 0
 2492 0036 0220     		movs	r0, #2
 2493              	.LVL200:
1862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 2494              		.loc 1 1862 0
 2495 0038 7047     		bx	lr
 2496              		.cfi_endproc
 2497              	.LFE167:
 2499              		.section	.text.HAL_DMA2D_GetState,"ax",%progbits
 2500              		.align	1
 2501              		.global	HAL_DMA2D_GetState
 2502              		.syntax unified
 2503              		.thumb
 2504              		.thumb_func
 2505              		.fpu fpv5-sp-d16
 2507              	HAL_DMA2D_GetState:
 2508              	.LFB168:
1892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   return hdma2d->State;
 2509              		.loc 1 1892 0
 2510              		.cfi_startproc
 2511              		@ args = 0, pretend = 0, frame = 0
 2512              		@ frame_needed = 0, uses_anonymous_args = 0
 2513              		@ link register save eliminated.
 2514              	.LVL201:
1893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
 2515              		.loc 1 1893 0
 2516 0000 90F83900 		ldrb	r0, [r0, #57]	@ zero_extendqisi2
 2517              	.LVL202:
1894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 2518              		.loc 1 1894 0
 2519 0004 7047     		bx	lr
 2520              		.cfi_endproc
 2521              	.LFE168:
 2523              		.section	.text.HAL_DMA2D_GetError,"ax",%progbits
 2524              		.align	1
 2525              		.global	HAL_DMA2D_GetError
 2526              		.syntax unified
 2527              		.thumb
 2528              		.thumb_func
 2529              		.fpu fpv5-sp-d16
 2531              	HAL_DMA2D_GetError:
 2532              	.LFB169:
1903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   return hdma2d->ErrorCode;
 2533              		.loc 1 1903 0
 2534              		.cfi_startproc
 2535              		@ args = 0, pretend = 0, frame = 0
 2536              		@ frame_needed = 0, uses_anonymous_args = 0
 2537              		@ link register save eliminated.
 2538              	.LVL203:
1904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
ARM GAS  /tmp/ccMN1FNg.s 			page 87


 2539              		.loc 1 1904 0
 2540 0000 C06B     		ldr	r0, [r0, #60]
 2541              	.LVL204:
1905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 2542              		.loc 1 1905 0
 2543 0002 7047     		bx	lr
 2544              		.cfi_endproc
 2545              	.LFE169:
 2547              		.text
 2548              	.Letext0:
 2549              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 2550              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 2551              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 2552              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 2553              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 2554              		.file 7 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 2555              		.file 8 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 2556              		.file 9 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma2d.h"
 2557              		.file 10 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
ARM GAS  /tmp/ccMN1FNg.s 			page 88


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f7xx_hal_dma2d.c
     /tmp/ccMN1FNg.s:18     .text.DMA2D_SetConfig:0000000000000000 $t
     /tmp/ccMN1FNg.s:24     .text.DMA2D_SetConfig:0000000000000000 DMA2D_SetConfig
     /tmp/ccMN1FNg.s:164    .text.HAL_DMA2D_MspInit:0000000000000000 $t
     /tmp/ccMN1FNg.s:171    .text.HAL_DMA2D_MspInit:0000000000000000 HAL_DMA2D_MspInit
     /tmp/ccMN1FNg.s:185    .text.HAL_DMA2D_Init:0000000000000000 $t
     /tmp/ccMN1FNg.s:192    .text.HAL_DMA2D_Init:0000000000000000 HAL_DMA2D_Init
     /tmp/ccMN1FNg.s:268    .text.HAL_DMA2D_Init:0000000000000058 $d
     /tmp/ccMN1FNg.s:273    .text.HAL_DMA2D_MspDeInit:0000000000000000 $t
     /tmp/ccMN1FNg.s:280    .text.HAL_DMA2D_MspDeInit:0000000000000000 HAL_DMA2D_MspDeInit
     /tmp/ccMN1FNg.s:294    .text.HAL_DMA2D_Start:0000000000000000 $t
     /tmp/ccMN1FNg.s:301    .text.HAL_DMA2D_Start:0000000000000000 HAL_DMA2D_Start
     /tmp/ccMN1FNg.s:362    .text.HAL_DMA2D_Start_IT:0000000000000000 $t
     /tmp/ccMN1FNg.s:369    .text.HAL_DMA2D_Start_IT:0000000000000000 HAL_DMA2D_Start_IT
     /tmp/ccMN1FNg.s:435    .text.HAL_DMA2D_BlendingStart:0000000000000000 $t
     /tmp/ccMN1FNg.s:442    .text.HAL_DMA2D_BlendingStart:0000000000000000 HAL_DMA2D_BlendingStart
     /tmp/ccMN1FNg.s:510    .text.HAL_DMA2D_BlendingStart_IT:0000000000000000 $t
     /tmp/ccMN1FNg.s:517    .text.HAL_DMA2D_BlendingStart_IT:0000000000000000 HAL_DMA2D_BlendingStart_IT
     /tmp/ccMN1FNg.s:590    .text.HAL_DMA2D_Abort:0000000000000000 $t
     /tmp/ccMN1FNg.s:597    .text.HAL_DMA2D_Abort:0000000000000000 HAL_DMA2D_Abort
     /tmp/ccMN1FNg.s:665    .text.HAL_DMA2D_Suspend:0000000000000000 $t
     /tmp/ccMN1FNg.s:672    .text.HAL_DMA2D_Suspend:0000000000000000 HAL_DMA2D_Suspend
     /tmp/ccMN1FNg.s:745    .text.HAL_DMA2D_Resume:0000000000000000 $t
     /tmp/ccMN1FNg.s:752    .text.HAL_DMA2D_Resume:0000000000000000 HAL_DMA2D_Resume
     /tmp/ccMN1FNg.s:785    .text.HAL_DMA2D_EnableCLUT:0000000000000000 $t
     /tmp/ccMN1FNg.s:792    .text.HAL_DMA2D_EnableCLUT:0000000000000000 HAL_DMA2D_EnableCLUT
     /tmp/ccMN1FNg.s:843    .text.HAL_DMA2D_CLUTLoad:0000000000000000 $t
     /tmp/ccMN1FNg.s:850    .text.HAL_DMA2D_CLUTLoad:0000000000000000 HAL_DMA2D_CLUTLoad
     /tmp/ccMN1FNg.s:953    .text.HAL_DMA2D_CLUTLoad:0000000000000080 $d
     /tmp/ccMN1FNg.s:958    .text.HAL_DMA2D_CLUTLoad_IT:0000000000000000 $t
     /tmp/ccMN1FNg.s:965    .text.HAL_DMA2D_CLUTLoad_IT:0000000000000000 HAL_DMA2D_CLUTLoad_IT
     /tmp/ccMN1FNg.s:1078   .text.HAL_DMA2D_CLUTLoad_IT:0000000000000094 $d
     /tmp/ccMN1FNg.s:1083   .text.HAL_DMA2D_CLUTLoading_Abort:0000000000000000 $t
     /tmp/ccMN1FNg.s:1090   .text.HAL_DMA2D_CLUTLoading_Abort:0000000000000000 HAL_DMA2D_CLUTLoading_Abort
     /tmp/ccMN1FNg.s:1173   .text.HAL_DMA2D_DeInit:0000000000000000 $t
     /tmp/ccMN1FNg.s:1180   .text.HAL_DMA2D_DeInit:0000000000000000 HAL_DMA2D_DeInit
     /tmp/ccMN1FNg.s:1305   .text.HAL_DMA2D_DeInit:000000000000008c $d
     /tmp/ccMN1FNg.s:1310   .text.HAL_DMA2D_CLUTLoading_Suspend:0000000000000000 $t
     /tmp/ccMN1FNg.s:1317   .text.HAL_DMA2D_CLUTLoading_Suspend:0000000000000000 HAL_DMA2D_CLUTLoading_Suspend
     /tmp/ccMN1FNg.s:1451   .text.HAL_DMA2D_CLUTLoading_Resume:0000000000000000 $t
     /tmp/ccMN1FNg.s:1458   .text.HAL_DMA2D_CLUTLoading_Resume:0000000000000000 HAL_DMA2D_CLUTLoading_Resume
     /tmp/ccMN1FNg.s:1508   .text.HAL_DMA2D_PollForTransfer:0000000000000000 $t
     /tmp/ccMN1FNg.s:1515   .text.HAL_DMA2D_PollForTransfer:0000000000000000 HAL_DMA2D_PollForTransfer
     /tmp/ccMN1FNg.s:1742   .text.HAL_DMA2D_LineEventCallback:0000000000000000 $t
     /tmp/ccMN1FNg.s:1749   .text.HAL_DMA2D_LineEventCallback:0000000000000000 HAL_DMA2D_LineEventCallback
     /tmp/ccMN1FNg.s:1763   .text.HAL_DMA2D_CLUTLoadingCpltCallback:0000000000000000 $t
     /tmp/ccMN1FNg.s:1770   .text.HAL_DMA2D_CLUTLoadingCpltCallback:0000000000000000 HAL_DMA2D_CLUTLoadingCpltCallback
     /tmp/ccMN1FNg.s:1784   .text.HAL_DMA2D_IRQHandler:0000000000000000 $t
     /tmp/ccMN1FNg.s:1791   .text.HAL_DMA2D_IRQHandler:0000000000000000 HAL_DMA2D_IRQHandler
     /tmp/ccMN1FNg.s:2003   .text.HAL_DMA2D_ConfigLayer:0000000000000000 $t
     /tmp/ccMN1FNg.s:2010   .text.HAL_DMA2D_ConfigLayer:0000000000000000 HAL_DMA2D_ConfigLayer
     /tmp/ccMN1FNg.s:2161   .text.HAL_DMA2D_ConfigLayer:00000000000000c0 $d
     /tmp/ccMN1FNg.s:2166   .text.HAL_DMA2D_ConfigCLUT:0000000000000000 $t
     /tmp/ccMN1FNg.s:2173   .text.HAL_DMA2D_ConfigCLUT:0000000000000000 HAL_DMA2D_ConfigCLUT
     /tmp/ccMN1FNg.s:2269   .text.HAL_DMA2D_ConfigCLUT:0000000000000078 $d
     /tmp/ccMN1FNg.s:2274   .text.HAL_DMA2D_ProgramLineEvent:0000000000000000 $t
ARM GAS  /tmp/ccMN1FNg.s 			page 89


     /tmp/ccMN1FNg.s:2281   .text.HAL_DMA2D_ProgramLineEvent:0000000000000000 HAL_DMA2D_ProgramLineEvent
     /tmp/ccMN1FNg.s:2338   .text.HAL_DMA2D_EnableDeadTime:0000000000000000 $t
     /tmp/ccMN1FNg.s:2345   .text.HAL_DMA2D_EnableDeadTime:0000000000000000 HAL_DMA2D_EnableDeadTime
     /tmp/ccMN1FNg.s:2388   .text.HAL_DMA2D_DisableDeadTime:0000000000000000 $t
     /tmp/ccMN1FNg.s:2395   .text.HAL_DMA2D_DisableDeadTime:0000000000000000 HAL_DMA2D_DisableDeadTime
     /tmp/ccMN1FNg.s:2438   .text.HAL_DMA2D_ConfigDeadTime:0000000000000000 $t
     /tmp/ccMN1FNg.s:2445   .text.HAL_DMA2D_ConfigDeadTime:0000000000000000 HAL_DMA2D_ConfigDeadTime
     /tmp/ccMN1FNg.s:2500   .text.HAL_DMA2D_GetState:0000000000000000 $t
     /tmp/ccMN1FNg.s:2507   .text.HAL_DMA2D_GetState:0000000000000000 HAL_DMA2D_GetState
     /tmp/ccMN1FNg.s:2524   .text.HAL_DMA2D_GetError:0000000000000000 $t
     /tmp/ccMN1FNg.s:2531   .text.HAL_DMA2D_GetError:0000000000000000 HAL_DMA2D_GetError

UNDEFINED SYMBOLS
HAL_GetTick
