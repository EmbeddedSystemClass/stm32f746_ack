ARM GAS  /tmp/ccgdwFG7.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f7xx_hal_rtc_ex.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_RTCEx_SetTimeStamp,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_RTCEx_SetTimeStamp
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-sp-d16
  25              	HAL_RTCEx_SetTimeStamp:
  26              	.LFB141:
  27              		.file 1 "Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c"
   1:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
   2:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   ******************************************************************************
   3:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @file    stm32f7xx_hal_rtc_ex.c
   4:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @author  MCD Application Team
   5:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief   RTC HAL module driver.
   6:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *          functionalities of the Real Time Clock (RTC) Extension peripheral:
   8:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *           + RTC Time Stamp functions
   9:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *           + RTC Tamper functions
  10:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *           + RTC Wake-up functions
  11:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *           + Extension Control functions
  12:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *           + Extension RTC features functions
  13:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *
  14:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   @verbatim
  15:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   ==============================================================================
  16:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****                   ##### How to use this driver #####
  17:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   ==============================================================================
  18:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   [..]
  19:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     (+) Enable the RTC domain access.
  20:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     (+) Configure the RTC Prescaler (Asynchronous and Synchronous) and RTC hour
  21:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         format using the HAL_RTC_Init() function.
  22:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
  23:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *** RTC Wakeup configuration ***
  24:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   ================================
  25:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   [..]
  26:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     (+) To configure the RTC Wakeup Clock source and Counter use the HAL_RTC_SetWakeUpTimer()
  27:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         function. You can also configure the RTC Wakeup timer in interrupt mode
  28:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         using the HAL_RTC_SetWakeUpTimer_IT() function.
  29:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     (+) To read the RTC WakeUp Counter register, use the HAL_RTC_GetWakeUpTimer()
  30:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         function.
  31:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
ARM GAS  /tmp/ccgdwFG7.s 			page 2


  32:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *** TimeStamp configuration ***
  33:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   ===============================
  34:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   [..]
  35:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     (+) Enables the RTC TimeStamp using the HAL_RTC_SetTimeStamp() function.
  36:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         You can also configure the RTC TimeStamp with interrupt mode using the
  37:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         HAL_RTC_SetTimeStamp_IT() function.
  38:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     (+) To read the RTC TimeStamp Time and Date register, use the HAL_RTC_GetTimeStamp()
  39:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         function.
  40:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
  41:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *** Internal TimeStamp configuration ***
  42:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   ===============================
  43:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   [..]
  44:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     (+) Enables the RTC internal TimeStamp using the HAL_RTC_SetInternalTimeStamp() function.
  45:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     (+) To read the RTC TimeStamp Time and Date register, use the HAL_RTC_GetTimeStamp()
  46:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         function.
  47:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
  48:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *** Tamper configuration ***
  49:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   ============================
  50:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   [..]
  51:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     (+) Enable the RTC Tamper and Configure the Tamper filter count, trigger Edge
  52:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         or Level according to the Tamper filter (if equal to 0 Edge else Level)
  53:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         value, sampling frequency, NoErase, MaskFlag,  precharge or discharge and
  54:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         Pull-UP using the HAL_RTC_SetTamper() function. You can configure RTC Tamper
  55:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         with interrupt mode using HAL_RTC_SetTamper_IT() function.
  56:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     (+) The default configuration of the Tamper erases the backup registers. To avoid
  57:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         erase, enable the NoErase field on the RTC_TAMPCR register.
  58:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
  59:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *** Backup Data Registers configuration ***
  60:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   ===========================================
  61:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   [..]
  62:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     (+) To write to the RTC Backup Data registers, use the HAL_RTC_BKUPWrite()
  63:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         function.
  64:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     (+) To read the RTC Backup Data registers, use the HAL_RTC_BKUPRead()
  65:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         function.
  66:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
  67:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****    @endverbatim
  68:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   ******************************************************************************
  69:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @attention
  70:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *
  71:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  72:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * All rights reserved.</center></h2>
  73:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *
  74:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  75:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * the "License"; You may not use this file except in compliance with the
  76:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * License. You may obtain a copy of the License at:
  77:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                        opensource.org/licenses/BSD-3-Clause
  78:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *
  79:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   ******************************************************************************
  80:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
  81:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
  82:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /* Includes ------------------------------------------------------------------*/
  83:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** #include "stm32f7xx_hal.h"
  84:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
  85:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /** @addtogroup STM32F7xx_HAL_Driver
  86:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @{
  87:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
  88:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
ARM GAS  /tmp/ccgdwFG7.s 			page 3


  89:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /** @defgroup RTCEx RTCEx
  90:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief RTC Extended HAL module driver
  91:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @{
  92:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
  93:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
  94:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** #ifdef HAL_RTC_MODULE_ENABLED
  95:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
  96:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /* Private typedef -----------------------------------------------------------*/
  97:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /* Private define ------------------------------------------------------------*/
  98:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /* Private macro -------------------------------------------------------------*/
  99:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /* Private variables ---------------------------------------------------------*/
 100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /* Private function prototypes -----------------------------------------------*/
 101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /* Exported functions --------------------------------------------------------*/
 102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /** @defgroup RTCEx_Exported_Functions RTCEx Exported Functions
 104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @{
 105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
 106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /** @defgroup RTCEx_Group1 RTC TimeStamp and Tamper functions
 109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****  *  @brief   RTC TimeStamp and Tamper functions
 110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****  *
 111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** @verbatim
 112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****  ===============================================================================
 113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****                  ##### RTC TimeStamp and Tamper functions #####
 114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****  ===============================================================================
 115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****  [..] This section provides functions allowing to configure TimeStamp feature
 117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** @endverbatim
 119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @{
 120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
 121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
 123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Sets TimeStamp.
 124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @note   This API must be called before enabling the TimeStamp feature.
 125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
 126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
 127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  TimeStampEdge Specifies the pin edge on which the TimeStamp is
 128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *         activated.
 129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values:
 130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *             @arg RTC_TIMESTAMPEDGE_RISING: the Time stamp event occurs on the
 131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                                        rising edge of the related pin.
 132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *             @arg RTC_TIMESTAMPEDGE_FALLING: the Time stamp event occurs on the
 133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                                         falling edge of the related pin.
 134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  RTC_TimeStampPin specifies the RTC TimeStamp Pin.
 135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values:
 136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *             @arg RTC_TIMESTAMPPIN_PC13: PC13 is selected as RTC TimeStamp Pin.
 137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *             @arg RTC_TIMESTAMPPIN_PI8: PI8 is selected as RTC TimeStamp Pin.
 138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *             @arg RTC_TIMESTAMPPIN_PC1: PC1 is selected as RTC TimeStamp Pin.
 139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval HAL status
 140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
 141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetTimeStamp(RTC_HandleTypeDef *hrtc, uint32_t TimeStampEdge, uint32_t 
 142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
  28              		.loc 1 142 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccgdwFG7.s 			page 4


  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  34 0000 70B4     		push	{r4, r5, r6}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 12
  37              		.cfi_offset 4, -12
  38              		.cfi_offset 5, -8
  39              		.cfi_offset 6, -4
  40              	.LVL1:
 143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   uint32_t tmpreg = 0;
 144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Check the parameters */
 146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_TIMESTAMP_EDGE(TimeStampEdge));
 147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TIMESTAMP_PIN(RTC_TimeStampPin));
 148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Locked */
 150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
  41              		.loc 1 150 0
  42 0002 047F     		ldrb	r4, [r0, #28]	@ zero_extendqisi2
  43 0004 012C     		cmp	r4, #1
  44 0006 27D0     		beq	.L3
  45              		.loc 1 150 0 is_stmt 0 discriminator 2
  46 0008 0124     		movs	r4, #1
  47 000a 0477     		strb	r4, [r0, #28]
 151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
  48              		.loc 1 152 0 is_stmt 1 discriminator 2
  49 000c 0223     		movs	r3, #2
  50 000e 4377     		strb	r3, [r0, #29]
 153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Get the RTC_CR register and clear the bits to be configured */
 155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   tmpreg = (uint32_t)(hrtc->Instance->CR & (uint32_t)~(RTC_CR_TSEDGE | RTC_CR_TSE));
  51              		.loc 1 155 0 discriminator 2
  52 0010 0568     		ldr	r5, [r0]
  53 0012 AE68     		ldr	r6, [r5, #8]
  54 0014 A3F60B03 		subw	r3, r3, #2059
  55 0018 3340     		ands	r3, r3, r6
  56              	.LVL2:
 156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   tmpreg|= TimeStampEdge;
  57              		.loc 1 157 0 discriminator 2
  58 001a 1943     		orrs	r1, r1, r3
  59              	.LVL3:
 158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
 160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
  60              		.loc 1 160 0 discriminator 2
  61 001c CA23     		movs	r3, #202
  62 001e 6B62     		str	r3, [r5, #36]
  63 0020 0368     		ldr	r3, [r0]
  64 0022 5325     		movs	r5, #83
  65 0024 5D62     		str	r5, [r3, #36]
 161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->Instance->OR &= (uint32_t)~RTC_OR_TSINSEL;
  66              		.loc 1 162 0 discriminator 2
  67 0026 0568     		ldr	r5, [r0]
ARM GAS  /tmp/ccgdwFG7.s 			page 5


  68 0028 EB6C     		ldr	r3, [r5, #76]
  69 002a 23F00603 		bic	r3, r3, #6
  70 002e EB64     		str	r3, [r5, #76]
 163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->Instance->OR |= (uint32_t)(RTC_TimeStampPin);
  71              		.loc 1 163 0 discriminator 2
  72 0030 0568     		ldr	r5, [r0]
  73 0032 EB6C     		ldr	r3, [r5, #76]
  74 0034 1A43     		orrs	r2, r2, r3
  75              	.LVL4:
  76 0036 EA64     		str	r2, [r5, #76]
 164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Configure the Time Stamp TSEDGE and Enable bits */
 166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->Instance->CR = (uint32_t)tmpreg;
  77              		.loc 1 166 0 discriminator 2
  78 0038 0368     		ldr	r3, [r0]
  79 003a 9960     		str	r1, [r3, #8]
 167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_TIMESTAMP_ENABLE(hrtc);
  80              		.loc 1 168 0 discriminator 2
  81 003c 0268     		ldr	r2, [r0]
  82 003e 9368     		ldr	r3, [r2, #8]
  83 0040 43F40063 		orr	r3, r3, #2048
  84 0044 9360     		str	r3, [r2, #8]
 169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
 171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
  85              		.loc 1 171 0 discriminator 2
  86 0046 0368     		ldr	r3, [r0]
  87 0048 FF22     		movs	r2, #255
  88 004a 5A62     		str	r2, [r3, #36]
 172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Change RTC state */
 174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
  89              		.loc 1 174 0 discriminator 2
  90 004c 4477     		strb	r4, [r0, #29]
 175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Unlocked */
 177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
  91              		.loc 1 177 0 discriminator 2
  92 004e 0023     		movs	r3, #0
  93 0050 0377     		strb	r3, [r0, #28]
 178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return HAL_OK;
  94              		.loc 1 179 0 discriminator 2
  95 0052 1846     		mov	r0, r3
  96              	.LVL5:
  97              	.L2:
 180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
  98              		.loc 1 180 0
  99 0054 70BC     		pop	{r4, r5, r6}
 100              	.LCFI1:
 101              		.cfi_remember_state
 102              		.cfi_restore 6
 103              		.cfi_restore 5
 104              		.cfi_restore 4
 105              		.cfi_def_cfa_offset 0
 106 0056 7047     		bx	lr
ARM GAS  /tmp/ccgdwFG7.s 			page 6


 107              	.LVL6:
 108              	.L3:
 109              	.LCFI2:
 110              		.cfi_restore_state
 150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 111              		.loc 1 150 0
 112 0058 0220     		movs	r0, #2
 113              	.LVL7:
 114 005a FBE7     		b	.L2
 115              		.cfi_endproc
 116              	.LFE141:
 118              		.section	.text.HAL_RTCEx_SetTimeStamp_IT,"ax",%progbits
 119              		.align	1
 120              		.global	HAL_RTCEx_SetTimeStamp_IT
 121              		.syntax unified
 122              		.thumb
 123              		.thumb_func
 124              		.fpu fpv5-sp-d16
 126              	HAL_RTCEx_SetTimeStamp_IT:
 127              	.LFB142:
 181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
 183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Sets TimeStamp with Interrupt.
 184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
 185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
 186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @note   This API must be called before enabling the TimeStamp feature.
 187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  TimeStampEdge Specifies the pin edge on which the TimeStamp is
 188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *         activated.
 189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values:
 190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *             @arg RTC_TIMESTAMPEDGE_RISING: the Time stamp event occurs on the
 191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                                        rising edge of the related pin.
 192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *             @arg RTC_TIMESTAMPEDGE_FALLING: the Time stamp event occurs on the
 193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                                         falling edge of the related pin.
 194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  RTC_TimeStampPin Specifies the RTC TimeStamp Pin.
 195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values:
 196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *             @arg RTC_TIMESTAMPPIN_PC13: PC13 is selected as RTC TimeStamp Pin.
 197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *             @arg RTC_TIMESTAMPPIN_PI8: PI8 is selected as RTC TimeStamp Pin.
 198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *             @arg RTC_TIMESTAMPPIN_PC1: PC1 is selected as RTC TimeStamp Pin.
 199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval HAL status
 200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
 201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetTimeStamp_IT(RTC_HandleTypeDef *hrtc, uint32_t TimeStampEdge, uint32
 202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 128              		.loc 1 202 0
 129              		.cfi_startproc
 130              		@ args = 0, pretend = 0, frame = 0
 131              		@ frame_needed = 0, uses_anonymous_args = 0
 132              		@ link register save eliminated.
 133              	.LVL8:
 134 0000 70B4     		push	{r4, r5, r6}
 135              	.LCFI3:
 136              		.cfi_def_cfa_offset 12
 137              		.cfi_offset 4, -12
 138              		.cfi_offset 5, -8
 139              		.cfi_offset 6, -4
 140              	.LVL9:
 203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   uint32_t tmpreg = 0;
 204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
ARM GAS  /tmp/ccgdwFG7.s 			page 7


 205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Check the parameters */
 206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_TIMESTAMP_EDGE(TimeStampEdge));
 207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TIMESTAMP_PIN(RTC_TimeStampPin));
 208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Locked */
 210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 141              		.loc 1 210 0
 142 0002 047F     		ldrb	r4, [r0, #28]	@ zero_extendqisi2
 143 0004 012C     		cmp	r4, #1
 144 0006 3BD0     		beq	.L7
 145              		.loc 1 210 0 is_stmt 0 discriminator 2
 146 0008 0124     		movs	r4, #1
 147 000a 0477     		strb	r4, [r0, #28]
 211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 148              		.loc 1 212 0 is_stmt 1 discriminator 2
 149 000c 0223     		movs	r3, #2
 150 000e 4377     		strb	r3, [r0, #29]
 213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Get the RTC_CR register and clear the bits to be configured */
 215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   tmpreg = (uint32_t)(hrtc->Instance->CR & (uint32_t)~(RTC_CR_TSEDGE | RTC_CR_TSE));
 151              		.loc 1 215 0 discriminator 2
 152 0010 0568     		ldr	r5, [r0]
 153 0012 AE68     		ldr	r6, [r5, #8]
 154 0014 A3F60B03 		subw	r3, r3, #2059
 155 0018 3340     		ands	r3, r3, r6
 156              	.LVL10:
 216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   tmpreg |= TimeStampEdge;
 157              		.loc 1 217 0 discriminator 2
 158 001a 0B43     		orrs	r3, r3, r1
 159              	.LVL11:
 218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
 220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 160              		.loc 1 220 0 discriminator 2
 161 001c CA21     		movs	r1, #202
 162              	.LVL12:
 163 001e 6962     		str	r1, [r5, #36]
 164 0020 0168     		ldr	r1, [r0]
 165 0022 5325     		movs	r5, #83
 166 0024 4D62     		str	r5, [r1, #36]
 221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Configure the Time Stamp TSEDGE and Enable bits */
 223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->Instance->CR = (uint32_t)tmpreg;
 167              		.loc 1 223 0 discriminator 2
 168 0026 0168     		ldr	r1, [r0]
 169 0028 8B60     		str	r3, [r1, #8]
 224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->Instance->OR &= (uint32_t)~RTC_OR_TSINSEL;
 170              		.loc 1 225 0 discriminator 2
 171 002a 0168     		ldr	r1, [r0]
 172 002c CB6C     		ldr	r3, [r1, #76]
 173              	.LVL13:
 174 002e 23F00603 		bic	r3, r3, #6
 175 0032 CB64     		str	r3, [r1, #76]
 226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->Instance->OR |= (uint32_t)(RTC_TimeStampPin);
ARM GAS  /tmp/ccgdwFG7.s 			page 8


 176              		.loc 1 226 0 discriminator 2
 177 0034 0168     		ldr	r1, [r0]
 178 0036 CB6C     		ldr	r3, [r1, #76]
 179 0038 1A43     		orrs	r2, r2, r3
 180              	.LVL14:
 181 003a CA64     		str	r2, [r1, #76]
 227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Clear RTC Timestamp flag */
 229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_TIMESTAMP_CLEAR_FLAG(hrtc, RTC_FLAG_TSF);
 182              		.loc 1 229 0 discriminator 2
 183 003c 0268     		ldr	r2, [r0]
 184 003e D368     		ldr	r3, [r2, #12]
 185 0040 DBB2     		uxtb	r3, r3
 186 0042 63F40863 		orn	r3, r3, #2176
 187 0046 D360     		str	r3, [r2, #12]
 230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_TIMESTAMP_ENABLE(hrtc);
 188              		.loc 1 231 0 discriminator 2
 189 0048 0268     		ldr	r2, [r0]
 190 004a 9368     		ldr	r3, [r2, #8]
 191 004c 43F40063 		orr	r3, r3, #2048
 192 0050 9360     		str	r3, [r2, #8]
 232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Enable IT timestamp */
 234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_TIMESTAMP_ENABLE_IT(hrtc,RTC_IT_TS);
 193              		.loc 1 234 0 discriminator 2
 194 0052 0268     		ldr	r2, [r0]
 195 0054 9368     		ldr	r3, [r2, #8]
 196 0056 43F40043 		orr	r3, r3, #32768
 197 005a 9360     		str	r3, [r2, #8]
 235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* RTC timestamp Interrupt Configuration: EXTI configuration */
 237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_TIMESTAMP_EXTI_ENABLE_IT();
 198              		.loc 1 237 0 discriminator 2
 199 005c 094B     		ldr	r3, .L9
 200 005e 1A68     		ldr	r2, [r3]
 201 0060 42F40012 		orr	r2, r2, #2097152
 202 0064 1A60     		str	r2, [r3]
 238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   EXTI->RTSR |= RTC_EXTI_LINE_TAMPER_TIMESTAMP_EVENT;
 203              		.loc 1 239 0 discriminator 2
 204 0066 9A68     		ldr	r2, [r3, #8]
 205 0068 42F40012 		orr	r2, r2, #2097152
 206 006c 9A60     		str	r2, [r3, #8]
 240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
 242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 207              		.loc 1 242 0 discriminator 2
 208 006e 0368     		ldr	r3, [r0]
 209 0070 FF22     		movs	r2, #255
 210 0072 5A62     		str	r2, [r3, #36]
 243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 211              		.loc 1 244 0 discriminator 2
 212 0074 4477     		strb	r4, [r0, #29]
 245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Unlocked */
ARM GAS  /tmp/ccgdwFG7.s 			page 9


 247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 213              		.loc 1 247 0 discriminator 2
 214 0076 0023     		movs	r3, #0
 215 0078 0377     		strb	r3, [r0, #28]
 248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return HAL_OK;
 216              		.loc 1 249 0 discriminator 2
 217 007a 1846     		mov	r0, r3
 218              	.LVL15:
 219              	.L6:
 250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 220              		.loc 1 250 0
 221 007c 70BC     		pop	{r4, r5, r6}
 222              	.LCFI4:
 223              		.cfi_remember_state
 224              		.cfi_restore 6
 225              		.cfi_restore 5
 226              		.cfi_restore 4
 227              		.cfi_def_cfa_offset 0
 228 007e 7047     		bx	lr
 229              	.LVL16:
 230              	.L7:
 231              	.LCFI5:
 232              		.cfi_restore_state
 210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 233              		.loc 1 210 0
 234 0080 0220     		movs	r0, #2
 235              	.LVL17:
 236 0082 FBE7     		b	.L6
 237              	.L10:
 238              		.align	2
 239              	.L9:
 240 0084 003C0140 		.word	1073822720
 241              		.cfi_endproc
 242              	.LFE142:
 244              		.section	.text.HAL_RTCEx_DeactivateTimeStamp,"ax",%progbits
 245              		.align	1
 246              		.global	HAL_RTCEx_DeactivateTimeStamp
 247              		.syntax unified
 248              		.thumb
 249              		.thumb_func
 250              		.fpu fpv5-sp-d16
 252              	HAL_RTCEx_DeactivateTimeStamp:
 253              	.LFB143:
 251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
 253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Deactivates TimeStamp.
 254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
 255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
 256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval HAL status
 257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
 258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_DeactivateTimeStamp(RTC_HandleTypeDef *hrtc)
 259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 254              		.loc 1 259 0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 0
 257              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccgdwFG7.s 			page 10


 258              		@ link register save eliminated.
 259              	.LVL18:
 260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   uint32_t tmpreg = 0U;
 261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Locked */
 263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 260              		.loc 1 263 0
 261 0000 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
 262 0002 012B     		cmp	r3, #1
 263 0004 1ED0     		beq	.L13
 259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   uint32_t tmpreg = 0U;
 264              		.loc 1 259 0 discriminator 2
 265 0006 10B4     		push	{r4}
 266              	.LCFI6:
 267              		.cfi_def_cfa_offset 4
 268              		.cfi_offset 4, -4
 269              		.loc 1 263 0 discriminator 2
 270 0008 0122     		movs	r2, #1
 271 000a 0277     		strb	r2, [r0, #28]
 264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 272              		.loc 1 265 0 discriminator 2
 273 000c 0223     		movs	r3, #2
 274 000e 4377     		strb	r3, [r0, #29]
 266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
 268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 275              		.loc 1 268 0 discriminator 2
 276 0010 0368     		ldr	r3, [r0]
 277 0012 CA21     		movs	r1, #202
 278 0014 5962     		str	r1, [r3, #36]
 279 0016 0368     		ldr	r3, [r0]
 280 0018 5321     		movs	r1, #83
 281 001a 5962     		str	r1, [r3, #36]
 269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* In case of interrupt mode is used, the interrupt source must disabled */
 271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_TIMESTAMP_DISABLE_IT(hrtc, RTC_IT_TS);
 282              		.loc 1 271 0 discriminator 2
 283 001c 0168     		ldr	r1, [r0]
 284 001e 8B68     		ldr	r3, [r1, #8]
 285 0020 23F40043 		bic	r3, r3, #32768
 286 0024 8B60     		str	r3, [r1, #8]
 272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Get the RTC_CR register and clear the bits to be configured */
 274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   tmpreg = (uint32_t)(hrtc->Instance->CR & (uint32_t)~(RTC_CR_TSEDGE | RTC_CR_TSE));
 287              		.loc 1 274 0 discriminator 2
 288 0026 0168     		ldr	r1, [r0]
 289 0028 8C68     		ldr	r4, [r1, #8]
 290 002a 074B     		ldr	r3, .L18
 291 002c 2340     		ands	r3, r3, r4
 292              	.LVL19:
 275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Configure the Time Stamp TSEDGE and Enable bits */
 277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->Instance->CR = (uint32_t)tmpreg;
 293              		.loc 1 277 0 discriminator 2
 294 002e 8B60     		str	r3, [r1, #8]
 278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
ARM GAS  /tmp/ccgdwFG7.s 			page 11


 279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
 280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 295              		.loc 1 280 0 discriminator 2
 296 0030 0368     		ldr	r3, [r0]
 297              	.LVL20:
 298 0032 FF21     		movs	r1, #255
 299              	.LVL21:
 300 0034 5962     		str	r1, [r3, #36]
 281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 301              		.loc 1 282 0 discriminator 2
 302 0036 4277     		strb	r2, [r0, #29]
 283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Unlocked */
 285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 303              		.loc 1 285 0 discriminator 2
 304 0038 0023     		movs	r3, #0
 305 003a 0377     		strb	r3, [r0, #28]
 286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return HAL_OK;
 306              		.loc 1 287 0 discriminator 2
 307 003c 1846     		mov	r0, r3
 308              	.LVL22:
 288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 309              		.loc 1 288 0 discriminator 2
 310 003e 5DF8044B 		ldr	r4, [sp], #4
 311              	.LCFI7:
 312              		.cfi_restore 4
 313              		.cfi_def_cfa_offset 0
 314              	.LVL23:
 315 0042 7047     		bx	lr
 316              	.LVL24:
 317              	.L13:
 263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 318              		.loc 1 263 0
 319 0044 0220     		movs	r0, #2
 320              	.LVL25:
 321              		.loc 1 288 0
 322 0046 7047     		bx	lr
 323              	.L19:
 324              		.align	2
 325              	.L18:
 326 0048 F7F7FFFF 		.word	-2057
 327              		.cfi_endproc
 328              	.LFE143:
 330              		.section	.text.HAL_RTCEx_SetInternalTimeStamp,"ax",%progbits
 331              		.align	1
 332              		.global	HAL_RTCEx_SetInternalTimeStamp
 333              		.syntax unified
 334              		.thumb
 335              		.thumb_func
 336              		.fpu fpv5-sp-d16
 338              	HAL_RTCEx_SetInternalTimeStamp:
 339              	.LFB144:
 289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
 291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Sets Internal TimeStamp.
ARM GAS  /tmp/ccgdwFG7.s 			page 12


 292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @note   This API must be called before enabling the internal TimeStamp feature.
 293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
 294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
 295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval HAL status
 296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
 297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetInternalTimeStamp(RTC_HandleTypeDef *hrtc)
 298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 340              		.loc 1 298 0
 341              		.cfi_startproc
 342              		@ args = 0, pretend = 0, frame = 0
 343              		@ frame_needed = 0, uses_anonymous_args = 0
 344              		@ link register save eliminated.
 345              	.LVL26:
 299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Locked */
 300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 346              		.loc 1 300 0
 347 0000 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
 348 0002 012B     		cmp	r3, #1
 349 0004 16D0     		beq	.L22
 350              		.loc 1 300 0 is_stmt 0 discriminator 2
 351 0006 0122     		movs	r2, #1
 352 0008 0277     		strb	r2, [r0, #28]
 301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 353              		.loc 1 302 0 is_stmt 1 discriminator 2
 354 000a 0223     		movs	r3, #2
 355 000c 4377     		strb	r3, [r0, #29]
 303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
 305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 356              		.loc 1 305 0 discriminator 2
 357 000e 0368     		ldr	r3, [r0]
 358 0010 CA21     		movs	r1, #202
 359 0012 5962     		str	r1, [r3, #36]
 360 0014 0368     		ldr	r3, [r0]
 361 0016 5321     		movs	r1, #83
 362 0018 5962     		str	r1, [r3, #36]
 306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Configure the internal Time Stamp Enable bits */
 308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_INTERNAL_TIMESTAMP_ENABLE(hrtc);
 363              		.loc 1 308 0 discriminator 2
 364 001a 0168     		ldr	r1, [r0]
 365 001c 8B68     		ldr	r3, [r1, #8]
 366 001e 43F08073 		orr	r3, r3, #16777216
 367 0022 8B60     		str	r3, [r1, #8]
 309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
 311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 368              		.loc 1 311 0 discriminator 2
 369 0024 0368     		ldr	r3, [r0]
 370 0026 FF21     		movs	r1, #255
 371 0028 5962     		str	r1, [r3, #36]
 312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Change RTC state */
 314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 372              		.loc 1 314 0 discriminator 2
 373 002a 4277     		strb	r2, [r0, #29]
ARM GAS  /tmp/ccgdwFG7.s 			page 13


 315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Unlocked */
 317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 374              		.loc 1 317 0 discriminator 2
 375 002c 0023     		movs	r3, #0
 376 002e 0377     		strb	r3, [r0, #28]
 318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return HAL_OK;
 377              		.loc 1 319 0 discriminator 2
 378 0030 1846     		mov	r0, r3
 379              	.LVL27:
 380 0032 7047     		bx	lr
 381              	.LVL28:
 382              	.L22:
 300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 383              		.loc 1 300 0
 384 0034 0220     		movs	r0, #2
 385              	.LVL29:
 320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 386              		.loc 1 320 0
 387 0036 7047     		bx	lr
 388              		.cfi_endproc
 389              	.LFE144:
 391              		.section	.text.HAL_RTCEx_DeactivateInternalTimeStamp,"ax",%progbits
 392              		.align	1
 393              		.global	HAL_RTCEx_DeactivateInternalTimeStamp
 394              		.syntax unified
 395              		.thumb
 396              		.thumb_func
 397              		.fpu fpv5-sp-d16
 399              	HAL_RTCEx_DeactivateInternalTimeStamp:
 400              	.LFB145:
 321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
 323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Deactivates internal TimeStamp.
 324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
 325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
 326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval HAL status
 327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
 328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_DeactivateInternalTimeStamp(RTC_HandleTypeDef *hrtc)
 329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 401              		.loc 1 329 0
 402              		.cfi_startproc
 403              		@ args = 0, pretend = 0, frame = 0
 404              		@ frame_needed = 0, uses_anonymous_args = 0
 405              		@ link register save eliminated.
 406              	.LVL30:
 330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Locked */
 331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 407              		.loc 1 331 0
 408 0000 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
 409 0002 012B     		cmp	r3, #1
 410 0004 16D0     		beq	.L25
 411              		.loc 1 331 0 is_stmt 0 discriminator 2
 412 0006 0122     		movs	r2, #1
 413 0008 0277     		strb	r2, [r0, #28]
 332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
ARM GAS  /tmp/ccgdwFG7.s 			page 14


 333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 414              		.loc 1 333 0 is_stmt 1 discriminator 2
 415 000a 0223     		movs	r3, #2
 416 000c 4377     		strb	r3, [r0, #29]
 334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
 336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 417              		.loc 1 336 0 discriminator 2
 418 000e 0368     		ldr	r3, [r0]
 419 0010 CA21     		movs	r1, #202
 420 0012 5962     		str	r1, [r3, #36]
 421 0014 0368     		ldr	r3, [r0]
 422 0016 5321     		movs	r1, #83
 423 0018 5962     		str	r1, [r3, #36]
 337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Configure the internal Time Stamp Enable bits */
 339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_INTERNAL_TIMESTAMP_DISABLE(hrtc);
 424              		.loc 1 339 0 discriminator 2
 425 001a 0168     		ldr	r1, [r0]
 426 001c 8B68     		ldr	r3, [r1, #8]
 427 001e 23F08073 		bic	r3, r3, #16777216
 428 0022 8B60     		str	r3, [r1, #8]
 340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
 342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 429              		.loc 1 342 0 discriminator 2
 430 0024 0368     		ldr	r3, [r0]
 431 0026 FF21     		movs	r1, #255
 432 0028 5962     		str	r1, [r3, #36]
 343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 433              		.loc 1 344 0 discriminator 2
 434 002a 4277     		strb	r2, [r0, #29]
 345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Unlocked */
 347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 435              		.loc 1 347 0 discriminator 2
 436 002c 0023     		movs	r3, #0
 437 002e 0377     		strb	r3, [r0, #28]
 348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return HAL_OK;
 438              		.loc 1 349 0 discriminator 2
 439 0030 1846     		mov	r0, r3
 440              	.LVL31:
 441 0032 7047     		bx	lr
 442              	.LVL32:
 443              	.L25:
 331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 444              		.loc 1 331 0
 445 0034 0220     		movs	r0, #2
 446              	.LVL33:
 350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 447              		.loc 1 350 0
 448 0036 7047     		bx	lr
 449              		.cfi_endproc
 450              	.LFE145:
 452              		.section	.text.HAL_RTCEx_GetTimeStamp,"ax",%progbits
ARM GAS  /tmp/ccgdwFG7.s 			page 15


 453              		.align	1
 454              		.global	HAL_RTCEx_GetTimeStamp
 455              		.syntax unified
 456              		.thumb
 457              		.thumb_func
 458              		.fpu fpv5-sp-d16
 460              	HAL_RTCEx_GetTimeStamp:
 461              	.LFB146:
 351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
 353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Gets the RTC TimeStamp value.
 354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
 355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
 356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  sTimeStamp Pointer to Time structure
 357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  sTimeStampDate Pointer to Date structure
 358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  Format specifies the format of the entered parameters.
 359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values:
 360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *             FORMAT_BIN: Binary data format
 361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *             FORMAT_BCD: BCD data format
 362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval HAL status
 363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
 364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_GetTimeStamp(RTC_HandleTypeDef *hrtc, RTC_TimeTypeDef* sTimeStamp, RTC_
 365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 462              		.loc 1 365 0
 463              		.cfi_startproc
 464              		@ args = 0, pretend = 0, frame = 0
 465              		@ frame_needed = 0, uses_anonymous_args = 0
 466              	.LVL34:
 467 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 468              	.LCFI8:
 469              		.cfi_def_cfa_offset 24
 470              		.cfi_offset 3, -24
 471              		.cfi_offset 4, -20
 472              		.cfi_offset 5, -16
 473              		.cfi_offset 6, -12
 474              		.cfi_offset 7, -8
 475              		.cfi_offset 14, -4
 476 0002 0646     		mov	r6, r0
 477 0004 0C46     		mov	r4, r1
 478 0006 1546     		mov	r5, r2
 479              	.LVL35:
 366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   uint32_t tmptime = 0U, tmpdate = 0U;
 367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Check the parameters */
 369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_FORMAT(Format));
 370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Get the TimeStamp time and date registers values */
 372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   tmptime = (uint32_t)(hrtc->Instance->TSTR & RTC_TR_RESERVED_MASK);
 480              		.loc 1 372 0
 481 0008 0268     		ldr	r2, [r0]
 482              	.LVL36:
 483 000a 106B     		ldr	r0, [r2, #48]
 484              	.LVL37:
 485 000c 1E49     		ldr	r1, .L30
 486              	.LVL38:
 487 000e 0140     		ands	r1, r1, r0
 488              	.LVL39:
ARM GAS  /tmp/ccgdwFG7.s 			page 16


 373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   tmpdate = (uint32_t)(hrtc->Instance->TSDR & RTC_DR_RESERVED_MASK);
 489              		.loc 1 373 0
 490 0010 506B     		ldr	r0, [r2, #52]
 491 0012 1E4A     		ldr	r2, .L30+4
 492 0014 0240     		ands	r2, r2, r0
 493              	.LVL40:
 374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Fill the Time structure fields with the read parameters */
 376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   sTimeStamp->Hours = (uint8_t)((tmptime & (RTC_TR_HT | RTC_TR_HU)) >> 16U);
 494              		.loc 1 376 0
 495 0016 080C     		lsrs	r0, r1, #16
 496 0018 00F03F07 		and	r7, r0, #63
 497 001c 2770     		strb	r7, [r4]
 377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   sTimeStamp->Minutes = (uint8_t)((tmptime & (RTC_TR_MNT | RTC_TR_MNU)) >> 8U);
 498              		.loc 1 377 0
 499 001e C1F30627 		ubfx	r7, r1, #8, #7
 500 0022 6770     		strb	r7, [r4, #1]
 378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   sTimeStamp->Seconds = (uint8_t)(tmptime & (RTC_TR_ST | RTC_TR_SU));
 501              		.loc 1 378 0
 502 0024 A170     		strb	r1, [r4, #2]
 379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   sTimeStamp->TimeFormat = (uint8_t)((tmptime & (RTC_TR_PM)) >> 16U);
 503              		.loc 1 379 0
 504 0026 00F04000 		and	r0, r0, #64
 505 002a 2073     		strb	r0, [r4, #12]
 380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   sTimeStamp->SubSeconds = (uint32_t) hrtc->Instance->TSSSR;
 506              		.loc 1 380 0
 507 002c 3168     		ldr	r1, [r6]
 508              	.LVL41:
 509 002e 896B     		ldr	r1, [r1, #56]
 510 0030 6160     		str	r1, [r4, #4]
 381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Fill the Date structure fields with the read parameters */
 383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   sTimeStampDate->Year = 0U;
 511              		.loc 1 383 0
 512 0032 0021     		movs	r1, #0
 513 0034 E970     		strb	r1, [r5, #3]
 384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   sTimeStampDate->Month = (uint8_t)((tmpdate & (RTC_DR_MT | RTC_DR_MU)) >> 8U);
 514              		.loc 1 384 0
 515 0036 C2F30421 		ubfx	r1, r2, #8, #5
 516 003a 6970     		strb	r1, [r5, #1]
 385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   sTimeStampDate->Date = (uint8_t)(tmpdate & (RTC_DR_DT | RTC_DR_DU));
 517              		.loc 1 385 0
 518 003c AA70     		strb	r2, [r5, #2]
 386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   sTimeStampDate->WeekDay = (uint8_t)((tmpdate & (RTC_DR_WDU)) >> 13U);
 519              		.loc 1 386 0
 520 003e C2F34232 		ubfx	r2, r2, #13, #3
 521              	.LVL42:
 522 0042 2A70     		strb	r2, [r5]
 387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Check the input parameters format */
 389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   if(Format == RTC_FORMAT_BIN)
 523              		.loc 1 389 0
 524 0044 3BB1     		cbz	r3, .L29
 525              	.LVL43:
 526              	.L27:
 390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
 391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* Convert the TimeStamp structure parameters to Binary format */
ARM GAS  /tmp/ccgdwFG7.s 			page 17


 392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     sTimeStamp->Hours = (uint8_t)RTC_Bcd2ToByte(sTimeStamp->Hours);
 393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     sTimeStamp->Minutes = (uint8_t)RTC_Bcd2ToByte(sTimeStamp->Minutes);
 394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     sTimeStamp->Seconds = (uint8_t)RTC_Bcd2ToByte(sTimeStamp->Seconds);
 395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* Convert the DateTimeStamp structure parameters to Binary format */
 397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     sTimeStampDate->Month = (uint8_t)RTC_Bcd2ToByte(sTimeStampDate->Month);
 398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     sTimeStampDate->Date = (uint8_t)RTC_Bcd2ToByte(sTimeStampDate->Date);
 399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     sTimeStampDate->WeekDay = (uint8_t)RTC_Bcd2ToByte(sTimeStampDate->WeekDay);
 400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
 401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Clear the TIMESTAMP Flag */
 403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_TIMESTAMP_CLEAR_FLAG(hrtc, RTC_FLAG_TSF);
 527              		.loc 1 403 0
 528 0046 3268     		ldr	r2, [r6]
 529 0048 D368     		ldr	r3, [r2, #12]
 530 004a DBB2     		uxtb	r3, r3
 531 004c 63F40863 		orn	r3, r3, #2176
 532 0050 D360     		str	r3, [r2, #12]
 404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return HAL_OK;
 406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 533              		.loc 1 406 0
 534 0052 0020     		movs	r0, #0
 535 0054 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 536              	.LVL44:
 537              	.L29:
 392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     sTimeStamp->Minutes = (uint8_t)RTC_Bcd2ToByte(sTimeStamp->Minutes);
 538              		.loc 1 392 0
 539 0056 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 540 0058 FFF7FEFF 		bl	RTC_Bcd2ToByte
 541              	.LVL45:
 542 005c 2070     		strb	r0, [r4]
 393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     sTimeStamp->Seconds = (uint8_t)RTC_Bcd2ToByte(sTimeStamp->Seconds);
 543              		.loc 1 393 0
 544 005e 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 545 0060 FFF7FEFF 		bl	RTC_Bcd2ToByte
 546              	.LVL46:
 547 0064 6070     		strb	r0, [r4, #1]
 394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 548              		.loc 1 394 0
 549 0066 A078     		ldrb	r0, [r4, #2]	@ zero_extendqisi2
 550 0068 FFF7FEFF 		bl	RTC_Bcd2ToByte
 551              	.LVL47:
 552 006c A070     		strb	r0, [r4, #2]
 397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     sTimeStampDate->Date = (uint8_t)RTC_Bcd2ToByte(sTimeStampDate->Date);
 553              		.loc 1 397 0
 554 006e 6878     		ldrb	r0, [r5, #1]	@ zero_extendqisi2
 555 0070 FFF7FEFF 		bl	RTC_Bcd2ToByte
 556              	.LVL48:
 557 0074 6870     		strb	r0, [r5, #1]
 398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     sTimeStampDate->WeekDay = (uint8_t)RTC_Bcd2ToByte(sTimeStampDate->WeekDay);
 558              		.loc 1 398 0
 559 0076 A878     		ldrb	r0, [r5, #2]	@ zero_extendqisi2
 560 0078 FFF7FEFF 		bl	RTC_Bcd2ToByte
 561              	.LVL49:
 562 007c A870     		strb	r0, [r5, #2]
 399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
ARM GAS  /tmp/ccgdwFG7.s 			page 18


 563              		.loc 1 399 0
 564 007e 2878     		ldrb	r0, [r5]	@ zero_extendqisi2
 565 0080 FFF7FEFF 		bl	RTC_Bcd2ToByte
 566              	.LVL50:
 567 0084 2870     		strb	r0, [r5]
 568 0086 DEE7     		b	.L27
 569              	.L31:
 570              		.align	2
 571              	.L30:
 572 0088 7F7F7F00 		.word	8355711
 573 008c 3FFFFF00 		.word	16777023
 574              		.cfi_endproc
 575              	.LFE146:
 577              		.section	.text.HAL_RTCEx_SetTamper,"ax",%progbits
 578              		.align	1
 579              		.global	HAL_RTCEx_SetTamper
 580              		.syntax unified
 581              		.thumb
 582              		.thumb_func
 583              		.fpu fpv5-sp-d16
 585              	HAL_RTCEx_SetTamper:
 586              	.LFB147:
 407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
 409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Sets Tamper
 410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @note   By calling this API we disable the tamper interrupt for all tampers.
 411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
 412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
 413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  sTamper Pointer to Tamper Structure.
 414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval HAL status
 415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
 416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetTamper(RTC_HandleTypeDef *hrtc, RTC_TamperTypeDef* sTamper)
 417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 587              		.loc 1 417 0
 588              		.cfi_startproc
 589              		@ args = 0, pretend = 0, frame = 0
 590              		@ frame_needed = 0, uses_anonymous_args = 0
 591              		@ link register save eliminated.
 592              	.LVL51:
 418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   uint32_t tmpreg = 0U;
 419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Check the parameters */
 421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER(sTamper->Tamper));
 422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_TRIGGER(sTamper->Trigger));
 423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_ERASE_MODE(sTamper->NoErase));
 424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_MASKFLAG_STATE(sTamper->MaskFlag));
 425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_FILTER(sTamper->Filter));
 426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_SAMPLING_FREQ(sTamper->SamplingFrequency));
 427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_PRECHARGE_DURATION(sTamper->PrechargeDuration));
 428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_PULLUP_STATE(sTamper->TamperPullUp));
 429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_TIMESTAMPONTAMPER_DETECTION(sTamper->TimeStampOnTamperDetection));
 430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Locked */
 432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 593              		.loc 1 432 0
 594 0000 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
 595 0002 012B     		cmp	r3, #1
ARM GAS  /tmp/ccgdwFG7.s 			page 19


 596 0004 60D0     		beq	.L41
 417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   uint32_t tmpreg = 0U;
 597              		.loc 1 417 0 discriminator 2
 598 0006 30B4     		push	{r4, r5}
 599              	.LCFI9:
 600              		.cfi_def_cfa_offset 8
 601              		.cfi_offset 4, -8
 602              		.cfi_offset 5, -4
 603              		.loc 1 432 0 discriminator 2
 604 0008 0123     		movs	r3, #1
 605 000a 0377     		strb	r3, [r0, #28]
 433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 606              		.loc 1 434 0 discriminator 2
 607 000c 0223     		movs	r3, #2
 608 000e 4377     		strb	r3, [r0, #29]
 435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   if(sTamper->Trigger != RTC_TAMPERTRIGGER_RISINGEDGE)
 609              		.loc 1 436 0 discriminator 2
 610 0010 8B68     		ldr	r3, [r1, #8]
 611 0012 13B1     		cbz	r3, .L34
 437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
 438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     sTamper->Trigger = (uint32_t)(sTamper->Tamper << 1U);
 612              		.loc 1 438 0
 613 0014 0B68     		ldr	r3, [r1]
 614 0016 5B00     		lsls	r3, r3, #1
 615 0018 8B60     		str	r3, [r1, #8]
 616              	.L34:
 439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
 440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   if(sTamper->NoErase != RTC_TAMPER_ERASE_BACKUP_ENABLE)
 617              		.loc 1 441 0
 618 001a CB68     		ldr	r3, [r1, #12]
 619 001c B3B1     		cbz	r3, .L35
 442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
 443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     sTamper->NoErase = 0;
 620              		.loc 1 443 0
 621 001e 0023     		movs	r3, #0
 622 0020 CB60     		str	r3, [r1, #12]
 444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     if((sTamper->Tamper & RTC_TAMPER_1) != 0U)
 623              		.loc 1 444 0
 624 0022 0B68     		ldr	r3, [r1]
 625 0024 13F0010F 		tst	r3, #1
 626 0028 02D0     		beq	.L36
 445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
 446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       sTamper->NoErase |= RTC_TAMPCR_TAMP1NOERASE;
 627              		.loc 1 446 0
 628 002a 4FF40032 		mov	r2, #131072
 629 002e CA60     		str	r2, [r1, #12]
 630              	.L36:
 447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
 448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     if((sTamper->Tamper & RTC_TAMPER_2) != 0U)
 631              		.loc 1 448 0
 632 0030 13F0080F 		tst	r3, #8
 633 0034 03D0     		beq	.L37
 449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
 450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       sTamper->NoErase |= RTC_TAMPCR_TAMP2NOERASE;
ARM GAS  /tmp/ccgdwFG7.s 			page 20


 634              		.loc 1 450 0
 635 0036 CA68     		ldr	r2, [r1, #12]
 636 0038 42F48012 		orr	r2, r2, #1048576
 637 003c CA60     		str	r2, [r1, #12]
 638              	.L37:
 451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
 452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     if((sTamper->Tamper & RTC_TAMPER_3) != 0U)
 639              		.loc 1 452 0
 640 003e 13F0200F 		tst	r3, #32
 641 0042 03D0     		beq	.L35
 453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
 454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       sTamper->NoErase |= RTC_TAMPCR_TAMP3NOERASE;
 642              		.loc 1 454 0
 643 0044 CB68     		ldr	r3, [r1, #12]
 644 0046 43F40003 		orr	r3, r3, #8388608
 645 004a CB60     		str	r3, [r1, #12]
 646              	.L35:
 455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
 456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
 457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   if(sTamper->MaskFlag != RTC_TAMPERMASK_FLAG_DISABLE)
 647              		.loc 1 458 0
 648 004c 0B69     		ldr	r3, [r1, #16]
 649 004e B3B1     		cbz	r3, .L38
 459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
 460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     sTamper->MaskFlag = 0;
 650              		.loc 1 460 0
 651 0050 0023     		movs	r3, #0
 652 0052 0B61     		str	r3, [r1, #16]
 461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     if((sTamper->Tamper & RTC_TAMPER_1) != 0U)
 653              		.loc 1 461 0
 654 0054 0B68     		ldr	r3, [r1]
 655 0056 13F0010F 		tst	r3, #1
 656 005a 02D0     		beq	.L39
 462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
 463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       sTamper->MaskFlag |= RTC_TAMPCR_TAMP1MF;
 657              		.loc 1 463 0
 658 005c 4FF48022 		mov	r2, #262144
 659 0060 0A61     		str	r2, [r1, #16]
 660              	.L39:
 464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
 465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     if((sTamper->Tamper & RTC_TAMPER_2) != 0U)
 661              		.loc 1 465 0
 662 0062 13F0080F 		tst	r3, #8
 663 0066 03D0     		beq	.L40
 466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
 467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       sTamper->MaskFlag |= RTC_TAMPCR_TAMP2MF;
 664              		.loc 1 467 0
 665 0068 0A69     		ldr	r2, [r1, #16]
 666 006a 42F40012 		orr	r2, r2, #2097152
 667 006e 0A61     		str	r2, [r1, #16]
 668              	.L40:
 468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
 469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     if((sTamper->Tamper & RTC_TAMPER_3) != 0U)
 669              		.loc 1 469 0
 670 0070 13F0200F 		tst	r3, #32
 671 0074 03D0     		beq	.L38
ARM GAS  /tmp/ccgdwFG7.s 			page 21


 470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
 471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       sTamper->MaskFlag |= RTC_TAMPCR_TAMP3MF;
 672              		.loc 1 471 0
 673 0076 0B69     		ldr	r3, [r1, #16]
 674 0078 43F08073 		orr	r3, r3, #16777216
 675 007c 0B61     		str	r3, [r1, #16]
 676              	.L38:
 472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
 473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
 474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   tmpreg = ((uint32_t)sTamper->Tamper | (uint32_t)sTamper->Trigger  | (uint32_t)sTamper->NoErase |\
 677              		.loc 1 475 0
 678 007e 0A68     		ldr	r2, [r1]
 679 0080 8B68     		ldr	r3, [r1, #8]
 680 0082 1343     		orrs	r3, r3, r2
 681 0084 CC68     		ldr	r4, [r1, #12]
 682 0086 2343     		orrs	r3, r3, r4
 476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****             (uint32_t)sTamper->MaskFlag | (uint32_t)sTamper->Filter | (uint32_t)sTamper->SamplingFr
 683              		.loc 1 476 0
 684 0088 0C69     		ldr	r4, [r1, #16]
 475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****             (uint32_t)sTamper->MaskFlag | (uint32_t)sTamper->Filter | (uint32_t)sTamper->SamplingFr
 685              		.loc 1 475 0
 686 008a 2343     		orrs	r3, r3, r4
 687              		.loc 1 476 0
 688 008c 4C69     		ldr	r4, [r1, #20]
 689 008e 2343     		orrs	r3, r3, r4
 690 0090 8C69     		ldr	r4, [r1, #24]
 691 0092 2343     		orrs	r3, r3, r4
 477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****             (uint32_t)sTamper->PrechargeDuration | (uint32_t)sTamper->TamperPullUp | sTamper->TimeS
 692              		.loc 1 477 0
 693 0094 CC69     		ldr	r4, [r1, #28]
 476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****             (uint32_t)sTamper->MaskFlag | (uint32_t)sTamper->Filter | (uint32_t)sTamper->SamplingFr
 694              		.loc 1 476 0
 695 0096 2343     		orrs	r3, r3, r4
 696              		.loc 1 477 0
 697 0098 0C6A     		ldr	r4, [r1, #32]
 698 009a 2343     		orrs	r3, r3, r4
 699 009c 496A     		ldr	r1, [r1, #36]
 700              	.LVL52:
 475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****             (uint32_t)sTamper->MaskFlag | (uint32_t)sTamper->Filter | (uint32_t)sTamper->SamplingFr
 701              		.loc 1 475 0
 702 009e 0B43     		orrs	r3, r3, r1
 703              	.LVL53:
 478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->Instance->TAMPCR &= (uint32_t)~((uint32_t)sTamper->Tamper | (uint32_t)(sTamper->Tamper << 1
 704              		.loc 1 479 0
 705 00a0 0568     		ldr	r5, [r0]
 706 00a2 296C     		ldr	r1, [r5, #64]
 707 00a4 42EA4202 		orr	r2, r2, r2, lsl #1
 480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****                                        (uint32_t)RTC_TAMPCR_TAMPFREQ | (uint32_t)RTC_TAMPCR_TAMPFLT
 481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****                                        (uint32_t)RTC_TAMPCR_TAMPPUDIS | (uint32_t)RTC_TAMPCR_TAMPIE
 482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****                                        (uint32_t)RTC_TAMPCR_TAMP2IE | (uint32_t)RTC_TAMPCR_TAMP3IE 
 483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****                                        (uint32_t)RTC_TAMPCR_TAMP2NOERASE | (uint32_t)RTC_TAMPCR_TAM
 484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****                                        (uint32_t)RTC_TAMPCR_TAMP2MF | (uint32_t)RTC_TAMPCR_TAMP3MF)
 708              		.loc 1 484 0
 709 00a8 084C     		ldr	r4, .L46
 710 00aa 1443     		orrs	r4, r4, r2
ARM GAS  /tmp/ccgdwFG7.s 			page 22


 479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****                                        (uint32_t)RTC_TAMPCR_TAMPFREQ | (uint32_t)RTC_TAMPCR_TAMPFLT
 711              		.loc 1 479 0
 712 00ac 21EA0401 		bic	r1, r1, r4
 713 00b0 2964     		str	r1, [r5, #64]
 485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->Instance->TAMPCR |= tmpreg;
 714              		.loc 1 486 0
 715 00b2 0168     		ldr	r1, [r0]
 716 00b4 0A6C     		ldr	r2, [r1, #64]
 717 00b6 1343     		orrs	r3, r3, r2
 718              	.LVL54:
 719 00b8 0B64     		str	r3, [r1, #64]
 487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 720              		.loc 1 488 0
 721 00ba 0123     		movs	r3, #1
 722 00bc 4377     		strb	r3, [r0, #29]
 489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Unlocked */
 491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 723              		.loc 1 491 0
 724 00be 0023     		movs	r3, #0
 725 00c0 0377     		strb	r3, [r0, #28]
 492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return HAL_OK;
 726              		.loc 1 493 0
 727 00c2 1846     		mov	r0, r3
 728              	.LVL55:
 494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 729              		.loc 1 494 0
 730 00c4 30BC     		pop	{r4, r5}
 731              	.LCFI10:
 732              		.cfi_restore 5
 733              		.cfi_restore 4
 734              		.cfi_def_cfa_offset 0
 735 00c6 7047     		bx	lr
 736              	.LVL56:
 737              	.L41:
 432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 738              		.loc 1 432 0
 739 00c8 0220     		movs	r0, #2
 740              	.LVL57:
 741              		.loc 1 494 0
 742 00ca 7047     		bx	lr
 743              	.L47:
 744              		.align	2
 745              	.L46:
 746 00cc 84FFFF01 		.word	33554308
 747              		.cfi_endproc
 748              	.LFE147:
 750              		.section	.text.HAL_RTCEx_SetTamper_IT,"ax",%progbits
 751              		.align	1
 752              		.global	HAL_RTCEx_SetTamper_IT
 753              		.syntax unified
 754              		.thumb
 755              		.thumb_func
 756              		.fpu fpv5-sp-d16
ARM GAS  /tmp/ccgdwFG7.s 			page 23


 758              	HAL_RTCEx_SetTamper_IT:
 759              	.LFB148:
 495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
 497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Sets Tamper with interrupt.
 498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @note   By calling this API we force the tamper interrupt for all tampers.
 499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
 500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
 501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  sTamper Pointer to RTC Tamper.
 502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval HAL status
 503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
 504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetTamper_IT(RTC_HandleTypeDef *hrtc, RTC_TamperTypeDef* sTamper)
 505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 760              		.loc 1 505 0
 761              		.cfi_startproc
 762              		@ args = 0, pretend = 0, frame = 0
 763              		@ frame_needed = 0, uses_anonymous_args = 0
 764              		@ link register save eliminated.
 765              	.LVL58:
 506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   uint32_t tmpreg = 0;
 507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Check the parameters */
 509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER(sTamper->Tamper));
 510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_INTERRUPT(sTamper->Interrupt));
 511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_TRIGGER(sTamper->Trigger));
 512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_ERASE_MODE(sTamper->NoErase));
 513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_MASKFLAG_STATE(sTamper->MaskFlag));
 514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_FILTER(sTamper->Filter));
 515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_SAMPLING_FREQ(sTamper->SamplingFrequency));
 516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_PRECHARGE_DURATION(sTamper->PrechargeDuration));
 517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_PULLUP_STATE(sTamper->TamperPullUp));
 518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_TIMESTAMPONTAMPER_DETECTION(sTamper->TimeStampOnTamperDetection));
 519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Locked */
 521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 766              		.loc 1 521 0
 767 0000 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
 768 0002 012B     		cmp	r3, #1
 769 0004 00F08B80 		beq	.L60
 505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   uint32_t tmpreg = 0;
 770              		.loc 1 505 0 discriminator 2
 771 0008 70B4     		push	{r4, r5, r6}
 772              	.LCFI11:
 773              		.cfi_def_cfa_offset 12
 774              		.cfi_offset 4, -12
 775              		.cfi_offset 5, -8
 776              		.cfi_offset 6, -4
 777              		.loc 1 521 0 discriminator 2
 778 000a 0123     		movs	r3, #1
 779 000c 0377     		strb	r3, [r0, #28]
 522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 780              		.loc 1 523 0 discriminator 2
 781 000e 0223     		movs	r3, #2
 782 0010 4377     		strb	r3, [r0, #29]
 524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Configure the tamper trigger */
ARM GAS  /tmp/ccgdwFG7.s 			page 24


 526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   if(sTamper->Trigger != RTC_TAMPERTRIGGER_RISINGEDGE)
 783              		.loc 1 526 0 discriminator 2
 784 0012 8B68     		ldr	r3, [r1, #8]
 785 0014 13B1     		cbz	r3, .L50
 527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
 528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     sTamper->Trigger = (uint32_t)(sTamper->Tamper << 1);
 786              		.loc 1 528 0
 787 0016 0B68     		ldr	r3, [r1]
 788 0018 5B00     		lsls	r3, r3, #1
 789 001a 8B60     		str	r3, [r1, #8]
 790              	.L50:
 529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
 530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   if(sTamper->NoErase != RTC_TAMPER_ERASE_BACKUP_ENABLE)
 791              		.loc 1 531 0
 792 001c CB68     		ldr	r3, [r1, #12]
 793 001e B3B1     		cbz	r3, .L51
 532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
 533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     sTamper->NoErase = 0;
 794              		.loc 1 533 0
 795 0020 0023     		movs	r3, #0
 796 0022 CB60     		str	r3, [r1, #12]
 534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     if((sTamper->Tamper & RTC_TAMPER_1) != 0)
 797              		.loc 1 534 0
 798 0024 0B68     		ldr	r3, [r1]
 799 0026 13F0010F 		tst	r3, #1
 800 002a 02D0     		beq	.L52
 535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
 536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       sTamper->NoErase |= RTC_TAMPCR_TAMP1NOERASE;
 801              		.loc 1 536 0
 802 002c 4FF40032 		mov	r2, #131072
 803 0030 CA60     		str	r2, [r1, #12]
 804              	.L52:
 537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
 538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     if((sTamper->Tamper & RTC_TAMPER_2) != 0)
 805              		.loc 1 538 0
 806 0032 13F0080F 		tst	r3, #8
 807 0036 03D0     		beq	.L53
 539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
 540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       sTamper->NoErase |= RTC_TAMPCR_TAMP2NOERASE;
 808              		.loc 1 540 0
 809 0038 CA68     		ldr	r2, [r1, #12]
 810 003a 42F48012 		orr	r2, r2, #1048576
 811 003e CA60     		str	r2, [r1, #12]
 812              	.L53:
 541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
 542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     if((sTamper->Tamper & RTC_TAMPER_3) != 0)
 813              		.loc 1 542 0
 814 0040 13F0200F 		tst	r3, #32
 815 0044 03D0     		beq	.L51
 543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
 544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       sTamper->NoErase |= RTC_TAMPCR_TAMP3NOERASE;
 816              		.loc 1 544 0
 817 0046 CB68     		ldr	r3, [r1, #12]
 818 0048 43F40003 		orr	r3, r3, #8388608
 819 004c CB60     		str	r3, [r1, #12]
 820              	.L51:
ARM GAS  /tmp/ccgdwFG7.s 			page 25


 545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
 546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
 547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   if(sTamper->MaskFlag != RTC_TAMPERMASK_FLAG_DISABLE)
 821              		.loc 1 548 0
 822 004e 0B69     		ldr	r3, [r1, #16]
 823 0050 B3B1     		cbz	r3, .L54
 549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
 550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     sTamper->MaskFlag = 0;
 824              		.loc 1 550 0
 825 0052 0023     		movs	r3, #0
 826 0054 0B61     		str	r3, [r1, #16]
 551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     if((sTamper->Tamper & RTC_TAMPER_1) != 0)
 827              		.loc 1 551 0
 828 0056 0B68     		ldr	r3, [r1]
 829 0058 13F0010F 		tst	r3, #1
 830 005c 02D0     		beq	.L55
 552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
 553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       sTamper->MaskFlag |= RTC_TAMPCR_TAMP1MF;
 831              		.loc 1 553 0
 832 005e 4FF48022 		mov	r2, #262144
 833 0062 0A61     		str	r2, [r1, #16]
 834              	.L55:
 554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
 555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     if((sTamper->Tamper & RTC_TAMPER_2) != 0)
 835              		.loc 1 555 0
 836 0064 13F0080F 		tst	r3, #8
 837 0068 03D0     		beq	.L56
 556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
 557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       sTamper->MaskFlag |= RTC_TAMPCR_TAMP2MF;
 838              		.loc 1 557 0
 839 006a 0A69     		ldr	r2, [r1, #16]
 840 006c 42F40012 		orr	r2, r2, #2097152
 841 0070 0A61     		str	r2, [r1, #16]
 842              	.L56:
 558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
 559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     if((sTamper->Tamper & RTC_TAMPER_3) != 0)
 843              		.loc 1 559 0
 844 0072 13F0200F 		tst	r3, #32
 845 0076 03D0     		beq	.L54
 560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
 561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       sTamper->MaskFlag |= RTC_TAMPCR_TAMP3MF;
 846              		.loc 1 561 0
 847 0078 0B69     		ldr	r3, [r1, #16]
 848 007a 43F08073 		orr	r3, r3, #16777216
 849 007e 0B61     		str	r3, [r1, #16]
 850              	.L54:
 562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
 563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
 564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   tmpreg = ((uint32_t)sTamper->Tamper | (uint32_t)sTamper->Interrupt | (uint32_t)sTamper->Trigger  
 851              		.loc 1 565 0
 852 0080 0A68     		ldr	r2, [r1]
 853 0082 4B68     		ldr	r3, [r1, #4]
 854 0084 1343     		orrs	r3, r3, r2
 855 0086 8C68     		ldr	r4, [r1, #8]
 856 0088 2343     		orrs	r3, r3, r4
ARM GAS  /tmp/ccgdwFG7.s 			page 26


 857 008a CC68     		ldr	r4, [r1, #12]
 858 008c 2343     		orrs	r3, r3, r4
 566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****             (uint32_t)sTamper->MaskFlag | (uint32_t)sTamper->Filter | (uint32_t)sTamper->SamplingFr
 859              		.loc 1 566 0
 860 008e 0C69     		ldr	r4, [r1, #16]
 565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****             (uint32_t)sTamper->MaskFlag | (uint32_t)sTamper->Filter | (uint32_t)sTamper->SamplingFr
 861              		.loc 1 565 0
 862 0090 2343     		orrs	r3, r3, r4
 863              		.loc 1 566 0
 864 0092 4C69     		ldr	r4, [r1, #20]
 865 0094 2343     		orrs	r3, r3, r4
 866 0096 8C69     		ldr	r4, [r1, #24]
 867 0098 2343     		orrs	r3, r3, r4
 567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****             (uint32_t)sTamper->PrechargeDuration | (uint32_t)sTamper->TamperPullUp | sTamper->TimeS
 868              		.loc 1 567 0
 869 009a CC69     		ldr	r4, [r1, #28]
 566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****             (uint32_t)sTamper->MaskFlag | (uint32_t)sTamper->Filter | (uint32_t)sTamper->SamplingFr
 870              		.loc 1 566 0
 871 009c 2343     		orrs	r3, r3, r4
 872              		.loc 1 567 0
 873 009e 0C6A     		ldr	r4, [r1, #32]
 874 00a0 2343     		orrs	r3, r3, r4
 875 00a2 4C6A     		ldr	r4, [r1, #36]
 565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****             (uint32_t)sTamper->MaskFlag | (uint32_t)sTamper->Filter | (uint32_t)sTamper->SamplingFr
 876              		.loc 1 565 0
 877 00a4 2343     		orrs	r3, r3, r4
 878              	.LVL59:
 568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->Instance->TAMPCR &= (uint32_t)~((uint32_t)sTamper->Tamper | (uint32_t)(sTamper->Tamper << 1
 879              		.loc 1 569 0
 880 00a6 0668     		ldr	r6, [r0]
 881 00a8 346C     		ldr	r4, [r6, #64]
 882 00aa 42EA4202 		orr	r2, r2, r2, lsl #1
 570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****                                        (uint32_t)RTC_TAMPCR_TAMPFREQ | (uint32_t)RTC_TAMPCR_TAMPFLT
 571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****                                        (uint32_t)RTC_TAMPCR_TAMPPUDIS | (uint32_t)RTC_TAMPCR_TAMPIE
 572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****                                        (uint32_t)RTC_TAMPCR_TAMP2IE | (uint32_t)RTC_TAMPCR_TAMP3IE 
 573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****                                        (uint32_t)RTC_TAMPCR_TAMP2NOERASE | (uint32_t)RTC_TAMPCR_TAM
 574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****                                        (uint32_t)RTC_TAMPCR_TAMP2MF | (uint32_t)RTC_TAMPCR_TAMP3MF)
 883              		.loc 1 574 0
 884 00ae 1D4D     		ldr	r5, .L67
 885 00b0 1543     		orrs	r5, r5, r2
 569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****                                        (uint32_t)RTC_TAMPCR_TAMPFREQ | (uint32_t)RTC_TAMPCR_TAMPFLT
 886              		.loc 1 569 0
 887 00b2 24EA0504 		bic	r4, r4, r5
 888 00b6 3464     		str	r4, [r6, #64]
 575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->Instance->TAMPCR |= tmpreg;
 889              		.loc 1 576 0
 890 00b8 0468     		ldr	r4, [r0]
 891 00ba 226C     		ldr	r2, [r4, #64]
 892 00bc 1343     		orrs	r3, r3, r2
 893              	.LVL60:
 894 00be 2364     		str	r3, [r4, #64]
 577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   if(sTamper->Tamper == RTC_TAMPER_1)
 895              		.loc 1 578 0
 896 00c0 0B68     		ldr	r3, [r1]
ARM GAS  /tmp/ccgdwFG7.s 			page 27


 897 00c2 012B     		cmp	r3, #1
 898 00c4 1DD0     		beq	.L65
 579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
 580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* Clear RTC Tamper 1 flag */
 581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     __HAL_RTC_TAMPER_CLEAR_FLAG(hrtc, RTC_FLAG_TAMP1F);
 582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
 583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   else if(sTamper->Tamper == RTC_TAMPER_2)
 899              		.loc 1 583 0
 900 00c6 082B     		cmp	r3, #8
 901 00c8 22D0     		beq	.L66
 584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
 585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* Clear RTC Tamper 2 flag */
 586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     __HAL_RTC_TAMPER_CLEAR_FLAG(hrtc, RTC_FLAG_TAMP2F);
 587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
 588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   else
 589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
 590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* Clear RTC Tamper 3 flag */
 591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     __HAL_RTC_TAMPER_CLEAR_FLAG(hrtc, RTC_FLAG_TAMP3F);
 902              		.loc 1 591 0
 903 00ca 0268     		ldr	r2, [r0]
 904 00cc D368     		ldr	r3, [r2, #12]
 905 00ce DBB2     		uxtb	r3, r3
 906 00d0 43F07F43 		orr	r3, r3, #-16777216
 907 00d4 43F47F03 		orr	r3, r3, #16711680
 908 00d8 43F4FE43 		orr	r3, r3, #32512
 909 00dc 43F07F03 		orr	r3, r3, #127
 910 00e0 D360     		str	r3, [r2, #12]
 911              	.L58:
 592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
 593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* RTC Tamper Interrupt Configuration: EXTI configuration */
 595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_TIMESTAMP_EXTI_ENABLE_IT();
 912              		.loc 1 595 0
 913 00e2 114B     		ldr	r3, .L67+4
 914 00e4 1A68     		ldr	r2, [r3]
 915 00e6 42F40012 		orr	r2, r2, #2097152
 916 00ea 1A60     		str	r2, [r3]
 596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   EXTI->RTSR |= RTC_EXTI_LINE_TAMPER_TIMESTAMP_EVENT;
 917              		.loc 1 597 0
 918 00ec 9A68     		ldr	r2, [r3, #8]
 919 00ee 42F40012 		orr	r2, r2, #2097152
 920 00f2 9A60     		str	r2, [r3, #8]
 598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 921              		.loc 1 599 0
 922 00f4 0123     		movs	r3, #1
 923 00f6 4377     		strb	r3, [r0, #29]
 600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Unlocked */
 602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 924              		.loc 1 602 0
 925 00f8 0023     		movs	r3, #0
 926 00fa 0377     		strb	r3, [r0, #28]
 603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return HAL_OK;
 927              		.loc 1 604 0
ARM GAS  /tmp/ccgdwFG7.s 			page 28


 928 00fc 1846     		mov	r0, r3
 929              	.LVL61:
 605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 930              		.loc 1 605 0
 931 00fe 70BC     		pop	{r4, r5, r6}
 932              	.LCFI12:
 933              		.cfi_remember_state
 934              		.cfi_restore 6
 935              		.cfi_restore 5
 936              		.cfi_restore 4
 937              		.cfi_def_cfa_offset 0
 938 0100 7047     		bx	lr
 939              	.LVL62:
 940              	.L65:
 941              	.LCFI13:
 942              		.cfi_restore_state
 581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
 943              		.loc 1 581 0
 944 0102 0268     		ldr	r2, [r0]
 945 0104 D368     		ldr	r3, [r2, #12]
 946 0106 DBB2     		uxtb	r3, r3
 947 0108 63F40253 		orn	r3, r3, #8320
 948 010c D360     		str	r3, [r2, #12]
 949 010e E8E7     		b	.L58
 950              	.L66:
 586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
 951              		.loc 1 586 0
 952 0110 0268     		ldr	r2, [r0]
 953 0112 D368     		ldr	r3, [r2, #12]
 954 0114 DBB2     		uxtb	r3, r3
 955 0116 63F48143 		orn	r3, r3, #16512
 956 011a D360     		str	r3, [r2, #12]
 957 011c E1E7     		b	.L58
 958              	.LVL63:
 959              	.L60:
 960              	.LCFI14:
 961              		.cfi_def_cfa_offset 0
 962              		.cfi_restore 4
 963              		.cfi_restore 5
 964              		.cfi_restore 6
 521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 965              		.loc 1 521 0
 966 011e 0220     		movs	r0, #2
 967              	.LVL64:
 968              		.loc 1 605 0
 969 0120 7047     		bx	lr
 970              	.L68:
 971 0122 00BF     		.align	2
 972              	.L67:
 973 0124 84FFFF01 		.word	33554308
 974 0128 003C0140 		.word	1073822720
 975              		.cfi_endproc
 976              	.LFE148:
 978              		.section	.text.HAL_RTCEx_DeactivateTamper,"ax",%progbits
 979              		.align	1
 980              		.global	HAL_RTCEx_DeactivateTamper
 981              		.syntax unified
ARM GAS  /tmp/ccgdwFG7.s 			page 29


 982              		.thumb
 983              		.thumb_func
 984              		.fpu fpv5-sp-d16
 986              	HAL_RTCEx_DeactivateTamper:
 987              	.LFB149:
 606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
 608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Deactivates Tamper.
 609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
 610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
 611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  Tamper Selected tamper pin.
 612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *          This parameter can be RTC_Tamper_1 and/or RTC_TAMPER_2.
 613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval HAL status
 614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
 615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_DeactivateTamper(RTC_HandleTypeDef *hrtc, uint32_t Tamper)
 616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 988              		.loc 1 616 0
 989              		.cfi_startproc
 990              		@ args = 0, pretend = 0, frame = 0
 991              		@ frame_needed = 0, uses_anonymous_args = 0
 992              		@ link register save eliminated.
 993              	.LVL65:
 617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER(Tamper));
 618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Locked */
 620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 994              		.loc 1 620 0
 995 0000 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
 996 0002 012B     		cmp	r3, #1
 997 0004 29D0     		beq	.L74
 616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER(Tamper));
 998              		.loc 1 616 0 discriminator 2
 999 0006 10B4     		push	{r4}
 1000              	.LCFI15:
 1001              		.cfi_def_cfa_offset 4
 1002              		.cfi_offset 4, -4
 1003              		.loc 1 620 0 discriminator 2
 1004 0008 0123     		movs	r3, #1
 1005 000a 0377     		strb	r3, [r0, #28]
 621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 1006              		.loc 1 622 0 discriminator 2
 1007 000c 0223     		movs	r3, #2
 1008 000e 4377     		strb	r3, [r0, #29]
 623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /* Disable the selected Tamper pin */
 625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->Instance->TAMPCR &= (uint32_t)~Tamper;
 1009              		.loc 1 625 0 discriminator 2
 1010 0010 0268     		ldr	r2, [r0]
 1011 0012 136C     		ldr	r3, [r2, #64]
 1012 0014 23EA0103 		bic	r3, r3, r1
 1013 0018 1364     		str	r3, [r2, #64]
 626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   if ((Tamper & RTC_TAMPER_1) != 0)
 1014              		.loc 1 627 0 discriminator 2
 1015 001a 11F0010F 		tst	r1, #1
 1016 001e 04D0     		beq	.L71
ARM GAS  /tmp/ccgdwFG7.s 			page 30


 628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
 629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* Disable the Tamper1 interrupt */
 630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     hrtc->Instance->TAMPCR &= (uint32_t)~(RTC_IT_TAMP | RTC_IT_TAMP1);
 1017              		.loc 1 630 0
 1018 0020 0268     		ldr	r2, [r0]
 1019 0022 146C     		ldr	r4, [r2, #64]
 1020 0024 0E4B     		ldr	r3, .L79
 1021 0026 2340     		ands	r3, r3, r4
 1022 0028 1364     		str	r3, [r2, #64]
 1023              	.L71:
 631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
 632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   if ((Tamper & RTC_TAMPER_2) != 0)
 1024              		.loc 1 632 0
 1025 002a 11F0080F 		tst	r1, #8
 1026 002e 04D0     		beq	.L72
 633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
 634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* Disable the Tamper2 interrupt */
 635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     hrtc->Instance->TAMPCR &= (uint32_t)~(RTC_IT_TAMP | RTC_IT_TAMP2);
 1027              		.loc 1 635 0
 1028 0030 0268     		ldr	r2, [r0]
 1029 0032 146C     		ldr	r4, [r2, #64]
 1030 0034 0B4B     		ldr	r3, .L79+4
 1031 0036 2340     		ands	r3, r3, r4
 1032 0038 1364     		str	r3, [r2, #64]
 1033              	.L72:
 636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
 637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   if ((Tamper & RTC_TAMPER_3) != 0)
 1034              		.loc 1 637 0
 1035 003a 11F0200F 		tst	r1, #32
 1036 003e 04D0     		beq	.L73
 638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
 639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* Disable the Tamper2 interrupt */
 640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     hrtc->Instance->TAMPCR &= (uint32_t)~(RTC_IT_TAMP | RTC_IT_TAMP3);
 1037              		.loc 1 640 0
 1038 0040 0268     		ldr	r2, [r0]
 1039 0042 116C     		ldr	r1, [r2, #64]
 1040              	.LVL66:
 1041 0044 084B     		ldr	r3, .L79+8
 1042 0046 0B40     		ands	r3, r3, r1
 1043 0048 1364     		str	r3, [r2, #64]
 1044              	.L73:
 641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
 642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 1045              		.loc 1 643 0
 1046 004a 0123     		movs	r3, #1
 1047 004c 4377     		strb	r3, [r0, #29]
 644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Unlocked */
 646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 1048              		.loc 1 646 0
 1049 004e 0023     		movs	r3, #0
 1050 0050 0377     		strb	r3, [r0, #28]
 647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return HAL_OK;
 1051              		.loc 1 648 0
 1052 0052 1846     		mov	r0, r3
ARM GAS  /tmp/ccgdwFG7.s 			page 31


 1053              	.LVL67:
 649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 1054              		.loc 1 649 0
 1055 0054 5DF8044B 		ldr	r4, [sp], #4
 1056              	.LCFI16:
 1057              		.cfi_restore 4
 1058              		.cfi_def_cfa_offset 0
 1059 0058 7047     		bx	lr
 1060              	.LVL68:
 1061              	.L74:
 620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 1062              		.loc 1 620 0
 1063 005a 0220     		movs	r0, #2
 1064              	.LVL69:
 1065              		.loc 1 649 0
 1066 005c 7047     		bx	lr
 1067              	.L80:
 1068 005e 00BF     		.align	2
 1069              	.L79:
 1070 0060 FBFFFEFF 		.word	-65541
 1071 0064 FBFFF7FF 		.word	-524293
 1072 0068 FBFFBFFF 		.word	-4194309
 1073              		.cfi_endproc
 1074              	.LFE149:
 1076              		.section	.text.HAL_RTCEx_TimeStampEventCallback,"ax",%progbits
 1077              		.align	1
 1078              		.weak	HAL_RTCEx_TimeStampEventCallback
 1079              		.syntax unified
 1080              		.thumb
 1081              		.thumb_func
 1082              		.fpu fpv5-sp-d16
 1084              	HAL_RTCEx_TimeStampEventCallback:
 1085              	.LFB151:
 650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
 652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  This function handles TimeStamp interrupt request.
 653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
 654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
 655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval None
 656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
 657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** void HAL_RTCEx_TamperTimeStampIRQHandler(RTC_HandleTypeDef *hrtc)
 658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Get the TimeStamp interrupt source enable status */
 660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   if(__HAL_RTC_TIMESTAMP_GET_IT_SOURCE(hrtc, RTC_IT_TS) != (uint32_t)RESET)
 661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
 662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* Get the pending status of the TIMESTAMP Interrupt */
 663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     if(__HAL_RTC_TIMESTAMP_GET_FLAG(hrtc, RTC_FLAG_TSF) != (uint32_t)RESET)
 664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
 665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       /* TIMESTAMP callback */
 666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
 667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       hrtc->TimeStampEventCallback(hrtc);
 668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** #else
 669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       HAL_RTCEx_TimeStampEventCallback(hrtc);
 670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** #endif /* USE_HAL_RTC_REGISTER_CALLBACKS */
 671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       /* Clear the TIMESTAMP interrupt pending bit */
 673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       __HAL_RTC_TIMESTAMP_CLEAR_FLAG(hrtc,RTC_FLAG_TSF);
ARM GAS  /tmp/ccgdwFG7.s 			page 32


 674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
 675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
 676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Get the Tamper1 interrupt source enable status */
 678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   if(__HAL_RTC_TAMPER_GET_IT_SOURCE(hrtc, RTC_IT_TAMP | RTC_IT_TAMP1) != (uint32_t)RESET)
 679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
 680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* Get the pending status of the Tamper1 Interrupt */
 681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     if(__HAL_RTC_TAMPER_GET_FLAG(hrtc, RTC_FLAG_TAMP1F) != (uint32_t)RESET)
 682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
 683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       /* Tamper callback */
 684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
 685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       hrtc->Tamper1EventCallback(hrtc);
 686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** #else
 687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       HAL_RTCEx_Tamper1EventCallback(hrtc);
 688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** #endif /* USE_HAL_RTC_REGISTER_CALLBACKS */
 689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       /* Clear the Tamper interrupt pending bit */
 691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       __HAL_RTC_TAMPER_CLEAR_FLAG(hrtc,RTC_FLAG_TAMP1F);
 692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
 693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
 694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Get the Tamper2 interrupt source enable status */
 696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   if(__HAL_RTC_TAMPER_GET_IT_SOURCE(hrtc, RTC_IT_TAMP | RTC_IT_TAMP2) != (uint32_t)RESET)
 697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
 698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* Get the pending status of the Tamper2 Interrupt */
 699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     if(__HAL_RTC_TAMPER_GET_FLAG(hrtc, RTC_FLAG_TAMP2F) != (uint32_t)RESET)
 700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
 701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       /* Tamper callback */
 702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
 703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       hrtc->Tamper2EventCallback(hrtc);
 704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** #else
 705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       HAL_RTCEx_Tamper2EventCallback(hrtc);
 706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** #endif /* USE_HAL_RTC_REGISTER_CALLBACKS */
 707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       /* Clear the Tamper interrupt pending bit */
 709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       __HAL_RTC_TAMPER_CLEAR_FLAG(hrtc, RTC_FLAG_TAMP2F);
 710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
 711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
 712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Get the Tamper3 interrupt source enable status */
 714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   if(__HAL_RTC_TAMPER_GET_IT_SOURCE(hrtc, RTC_IT_TAMP | RTC_IT_TAMP3) != (uint32_t)RESET)
 715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
 716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* Get the pending status of the Tamper3 Interrupt */
 717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     if(__HAL_RTC_TAMPER_GET_FLAG(hrtc, RTC_FLAG_TAMP3F) != (uint32_t)RESET)
 718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
 719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       /* Tamper callback */
 720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
 721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       hrtc->Tamper3EventCallback(hrtc);
 722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** #else
 723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       HAL_RTCEx_Tamper3EventCallback(hrtc);
 724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** #endif /* USE_HAL_RTC_REGISTER_CALLBACKS */
 725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       /* Clear the Tamper interrupt pending bit */
 727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       __HAL_RTC_TAMPER_CLEAR_FLAG(hrtc, RTC_FLAG_TAMP3F);
 728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
 729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
 730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
ARM GAS  /tmp/ccgdwFG7.s 			page 33


 731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Clear the EXTI's Flag for RTC TimeStamp and Tamper */
 732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_TIMESTAMP_EXTI_CLEAR_FLAG();
 733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Change RTC state */
 735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
 739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  TimeStamp callback.
 740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
 741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
 742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval None
 743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
 744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_TimeStampEventCallback(RTC_HandleTypeDef *hrtc)
 745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 1086              		.loc 1 745 0
 1087              		.cfi_startproc
 1088              		@ args = 0, pretend = 0, frame = 0
 1089              		@ frame_needed = 0, uses_anonymous_args = 0
 1090              		@ link register save eliminated.
 1091              	.LVL70:
 746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
 747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   UNUSED(hrtc);
 748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****             the HAL_RTC_TimeStampEventCallback could be implemented in the user file
 751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
 752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 1092              		.loc 1 752 0
 1093 0000 7047     		bx	lr
 1094              		.cfi_endproc
 1095              	.LFE151:
 1097              		.section	.text.HAL_RTCEx_Tamper1EventCallback,"ax",%progbits
 1098              		.align	1
 1099              		.weak	HAL_RTCEx_Tamper1EventCallback
 1100              		.syntax unified
 1101              		.thumb
 1102              		.thumb_func
 1103              		.fpu fpv5-sp-d16
 1105              	HAL_RTCEx_Tamper1EventCallback:
 1106              	.LFB152:
 753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
 755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Tamper 1 callback.
 756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
 757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
 758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval None
 759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
 760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_Tamper1EventCallback(RTC_HandleTypeDef *hrtc)
 761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 1107              		.loc 1 761 0
 1108              		.cfi_startproc
 1109              		@ args = 0, pretend = 0, frame = 0
 1110              		@ frame_needed = 0, uses_anonymous_args = 0
 1111              		@ link register save eliminated.
 1112              	.LVL71:
 762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
ARM GAS  /tmp/ccgdwFG7.s 			page 34


 763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   UNUSED(hrtc);
 764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****             the HAL_RTC_Tamper1EventCallback could be implemented in the user file
 767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****    */
 768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 1113              		.loc 1 768 0
 1114 0000 7047     		bx	lr
 1115              		.cfi_endproc
 1116              	.LFE152:
 1118              		.section	.text.HAL_RTCEx_Tamper2EventCallback,"ax",%progbits
 1119              		.align	1
 1120              		.weak	HAL_RTCEx_Tamper2EventCallback
 1121              		.syntax unified
 1122              		.thumb
 1123              		.thumb_func
 1124              		.fpu fpv5-sp-d16
 1126              	HAL_RTCEx_Tamper2EventCallback:
 1127              	.LFB153:
 769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
 771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Tamper 2 callback.
 772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
 773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
 774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval None
 775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
 776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_Tamper2EventCallback(RTC_HandleTypeDef *hrtc)
 777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 1128              		.loc 1 777 0
 1129              		.cfi_startproc
 1130              		@ args = 0, pretend = 0, frame = 0
 1131              		@ frame_needed = 0, uses_anonymous_args = 0
 1132              		@ link register save eliminated.
 1133              	.LVL72:
 778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
 779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   UNUSED(hrtc);
 780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****             the HAL_RTC_Tamper2EventCallback could be implemented in the user file
 783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****    */
 784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 1134              		.loc 1 784 0
 1135 0000 7047     		bx	lr
 1136              		.cfi_endproc
 1137              	.LFE153:
 1139              		.section	.text.HAL_RTCEx_Tamper3EventCallback,"ax",%progbits
 1140              		.align	1
 1141              		.weak	HAL_RTCEx_Tamper3EventCallback
 1142              		.syntax unified
 1143              		.thumb
 1144              		.thumb_func
 1145              		.fpu fpv5-sp-d16
 1147              	HAL_RTCEx_Tamper3EventCallback:
 1148              	.LFB154:
 785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
 787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Tamper 3 callback.
ARM GAS  /tmp/ccgdwFG7.s 			page 35


 788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval None
 790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
 791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_Tamper3EventCallback(RTC_HandleTypeDef *hrtc)
 792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 1149              		.loc 1 792 0
 1150              		.cfi_startproc
 1151              		@ args = 0, pretend = 0, frame = 0
 1152              		@ frame_needed = 0, uses_anonymous_args = 0
 1153              		@ link register save eliminated.
 1154              	.LVL73:
 793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
 794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   UNUSED(hrtc);
 795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****             the HAL_RTCEx_Tamper3EventCallback could be implemented in the user file
 798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****    */
 799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 1155              		.loc 1 799 0
 1156 0000 7047     		bx	lr
 1157              		.cfi_endproc
 1158              	.LFE154:
 1160              		.section	.text.HAL_RTCEx_TamperTimeStampIRQHandler,"ax",%progbits
 1161              		.align	1
 1162              		.global	HAL_RTCEx_TamperTimeStampIRQHandler
 1163              		.syntax unified
 1164              		.thumb
 1165              		.thumb_func
 1166              		.fpu fpv5-sp-d16
 1168              	HAL_RTCEx_TamperTimeStampIRQHandler:
 1169              	.LFB150:
 658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Get the TimeStamp interrupt source enable status */
 1170              		.loc 1 658 0
 1171              		.cfi_startproc
 1172              		@ args = 0, pretend = 0, frame = 0
 1173              		@ frame_needed = 0, uses_anonymous_args = 0
 1174              	.LVL74:
 1175 0000 10B5     		push	{r4, lr}
 1176              	.LCFI17:
 1177              		.cfi_def_cfa_offset 8
 1178              		.cfi_offset 4, -8
 1179              		.cfi_offset 14, -4
 1180 0002 0446     		mov	r4, r0
 660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
 1181              		.loc 1 660 0
 1182 0004 0368     		ldr	r3, [r0]
 1183 0006 9A68     		ldr	r2, [r3, #8]
 1184 0008 12F4004F 		tst	r2, #32768
 1185 000c 03D0     		beq	.L86
 663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
 1186              		.loc 1 663 0
 1187 000e DB68     		ldr	r3, [r3, #12]
 1188 0010 13F4006F 		tst	r3, #2048
 1189 0014 21D1     		bne	.L91
 1190              	.LVL75:
 1191              	.L86:
 678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
ARM GAS  /tmp/ccgdwFG7.s 			page 36


 1192              		.loc 1 678 0
 1193 0016 2268     		ldr	r2, [r4]
 1194 0018 116C     		ldr	r1, [r2, #64]
 1195 001a 264B     		ldr	r3, .L95
 1196 001c 0B40     		ands	r3, r3, r1
 1197 001e 1BB1     		cbz	r3, .L87
 681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
 1198              		.loc 1 681 0
 1199 0020 D368     		ldr	r3, [r2, #12]
 1200 0022 13F4005F 		tst	r3, #8192
 1201 0026 21D1     		bne	.L92
 1202              	.L87:
 696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
 1203              		.loc 1 696 0
 1204 0028 2268     		ldr	r2, [r4]
 1205 002a 116C     		ldr	r1, [r2, #64]
 1206 002c 224B     		ldr	r3, .L95+4
 1207 002e 0B40     		ands	r3, r3, r1
 1208 0030 1BB1     		cbz	r3, .L88
 699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
 1209              		.loc 1 699 0
 1210 0032 D368     		ldr	r3, [r2, #12]
 1211 0034 13F4804F 		tst	r3, #16384
 1212 0038 22D1     		bne	.L93
 1213              	.L88:
 714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
 1214              		.loc 1 714 0
 1215 003a 2268     		ldr	r2, [r4]
 1216 003c 116C     		ldr	r1, [r2, #64]
 1217 003e 1F4B     		ldr	r3, .L95+8
 1218 0040 0B40     		ands	r3, r3, r1
 1219 0042 1BB1     		cbz	r3, .L89
 717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
 1220              		.loc 1 717 0
 1221 0044 D368     		ldr	r3, [r2, #12]
 1222 0046 13F4004F 		tst	r3, #32768
 1223 004a 23D1     		bne	.L94
 1224              	.L89:
 732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 1225              		.loc 1 732 0
 1226 004c 1C4B     		ldr	r3, .L95+12
 1227 004e 4FF40012 		mov	r2, #2097152
 1228 0052 5A61     		str	r2, [r3, #20]
 735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 1229              		.loc 1 735 0
 1230 0054 0123     		movs	r3, #1
 1231 0056 6377     		strb	r3, [r4, #29]
 736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 1232              		.loc 1 736 0
 1233 0058 10BD     		pop	{r4, pc}
 1234              	.LVL76:
 1235              	.L91:
 669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** #endif /* USE_HAL_RTC_REGISTER_CALLBACKS */
 1236              		.loc 1 669 0
 1237 005a FFF7FEFF 		bl	HAL_RTCEx_TimeStampEventCallback
 1238              	.LVL77:
 673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
ARM GAS  /tmp/ccgdwFG7.s 			page 37


 1239              		.loc 1 673 0
 1240 005e 2268     		ldr	r2, [r4]
 1241 0060 D368     		ldr	r3, [r2, #12]
 1242 0062 DBB2     		uxtb	r3, r3
 1243 0064 63F40863 		orn	r3, r3, #2176
 1244 0068 D360     		str	r3, [r2, #12]
 1245 006a D4E7     		b	.L86
 1246              	.L92:
 687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** #endif /* USE_HAL_RTC_REGISTER_CALLBACKS */
 1247              		.loc 1 687 0
 1248 006c 2046     		mov	r0, r4
 1249 006e FFF7FEFF 		bl	HAL_RTCEx_Tamper1EventCallback
 1250              	.LVL78:
 691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
 1251              		.loc 1 691 0
 1252 0072 2268     		ldr	r2, [r4]
 1253 0074 D368     		ldr	r3, [r2, #12]
 1254 0076 DBB2     		uxtb	r3, r3
 1255 0078 63F40253 		orn	r3, r3, #8320
 1256 007c D360     		str	r3, [r2, #12]
 1257 007e D3E7     		b	.L87
 1258              	.L93:
 705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** #endif /* USE_HAL_RTC_REGISTER_CALLBACKS */
 1259              		.loc 1 705 0
 1260 0080 2046     		mov	r0, r4
 1261 0082 FFF7FEFF 		bl	HAL_RTCEx_Tamper2EventCallback
 1262              	.LVL79:
 709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
 1263              		.loc 1 709 0
 1264 0086 2268     		ldr	r2, [r4]
 1265 0088 D368     		ldr	r3, [r2, #12]
 1266 008a DBB2     		uxtb	r3, r3
 1267 008c 63F48143 		orn	r3, r3, #16512
 1268 0090 D360     		str	r3, [r2, #12]
 1269 0092 D2E7     		b	.L88
 1270              	.L94:
 723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** #endif /* USE_HAL_RTC_REGISTER_CALLBACKS */
 1271              		.loc 1 723 0
 1272 0094 2046     		mov	r0, r4
 1273 0096 FFF7FEFF 		bl	HAL_RTCEx_Tamper3EventCallback
 1274              	.LVL80:
 727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
 1275              		.loc 1 727 0
 1276 009a 2268     		ldr	r2, [r4]
 1277 009c D368     		ldr	r3, [r2, #12]
 1278 009e DBB2     		uxtb	r3, r3
 1279 00a0 43F07F43 		orr	r3, r3, #-16777216
 1280 00a4 43F47F03 		orr	r3, r3, #16711680
 1281 00a8 43F4FE43 		orr	r3, r3, #32512
 1282 00ac 43F07F03 		orr	r3, r3, #127
 1283 00b0 D360     		str	r3, [r2, #12]
 1284 00b2 CBE7     		b	.L89
 1285              	.L96:
 1286              		.align	2
 1287              	.L95:
 1288 00b4 04000100 		.word	65540
 1289 00b8 04000800 		.word	524292
ARM GAS  /tmp/ccgdwFG7.s 			page 38


 1290 00bc 04004000 		.word	4194308
 1291 00c0 003C0140 		.word	1073822720
 1292              		.cfi_endproc
 1293              	.LFE150:
 1295              		.section	.text.HAL_RTCEx_PollForTimeStampEvent,"ax",%progbits
 1296              		.align	1
 1297              		.global	HAL_RTCEx_PollForTimeStampEvent
 1298              		.syntax unified
 1299              		.thumb
 1300              		.thumb_func
 1301              		.fpu fpv5-sp-d16
 1303              	HAL_RTCEx_PollForTimeStampEvent:
 1304              	.LFB155:
 800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
 802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  This function handles TimeStamp polling request.
 803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
 804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
 805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  Timeout Timeout duration
 806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval HAL status
 807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
 808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_PollForTimeStampEvent(RTC_HandleTypeDef *hrtc, uint32_t Timeout)
 809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 1305              		.loc 1 809 0
 1306              		.cfi_startproc
 1307              		@ args = 0, pretend = 0, frame = 0
 1308              		@ frame_needed = 0, uses_anonymous_args = 0
 1309              	.LVL81:
 1310 0000 70B5     		push	{r4, r5, r6, lr}
 1311              	.LCFI18:
 1312              		.cfi_def_cfa_offset 16
 1313              		.cfi_offset 4, -16
 1314              		.cfi_offset 5, -12
 1315              		.cfi_offset 6, -8
 1316              		.cfi_offset 14, -4
 1317 0002 0446     		mov	r4, r0
 1318 0004 0D46     		mov	r5, r1
 1319              	.LVL82:
 810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   uint32_t tickstart = 0;
 811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Get tick */
 813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   tickstart = HAL_GetTick();
 1320              		.loc 1 813 0
 1321 0006 FFF7FEFF 		bl	HAL_GetTick
 1322              	.LVL83:
 1323 000a 0646     		mov	r6, r0
 1324              	.LVL84:
 1325              	.L99:
 814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   while(__HAL_RTC_TIMESTAMP_GET_FLAG(hrtc, RTC_FLAG_TSF) == RESET)
 1326              		.loc 1 815 0
 1327 000c 2368     		ldr	r3, [r4]
 1328 000e DA68     		ldr	r2, [r3, #12]
 1329 0010 12F4006F 		tst	r2, #2048
 1330 0014 0BD1     		bne	.L105
 816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
 817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     if(Timeout != HAL_MAX_DELAY)
ARM GAS  /tmp/ccgdwFG7.s 			page 39


 1331              		.loc 1 817 0
 1332 0016 B5F1FF3F 		cmp	r5, #-1
 1333 001a F7D0     		beq	.L99
 818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
 819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       if((Timeout == 0)||((HAL_GetTick() - tickstart ) > Timeout))
 1334              		.loc 1 819 0
 1335 001c 25B1     		cbz	r5, .L100
 1336              		.loc 1 819 0 is_stmt 0 discriminator 1
 1337 001e FFF7FEFF 		bl	HAL_GetTick
 1338              	.LVL85:
 1339 0022 801B     		subs	r0, r0, r6
 1340 0024 A842     		cmp	r0, r5
 1341 0026 F1D9     		bls	.L99
 1342              	.L100:
 820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       {
 821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 1343              		.loc 1 821 0 is_stmt 1
 1344 0028 0320     		movs	r0, #3
 1345 002a 6077     		strb	r0, [r4, #29]
 822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 1346              		.loc 1 822 0
 1347 002c 06E0     		b	.L101
 1348              	.L105:
 823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       }
 824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
 825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
 826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   if(__HAL_RTC_TIMESTAMP_GET_FLAG(hrtc, RTC_FLAG_TSOVF) != RESET)
 1349              		.loc 1 827 0
 1350 002e DA68     		ldr	r2, [r3, #12]
 1351 0030 12F4805F 		tst	r2, #4096
 1352 0034 03D1     		bne	.L106
 828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
 829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* Clear the TIMESTAMP OverRun Flag */
 830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     __HAL_RTC_TIMESTAMP_CLEAR_FLAG(hrtc, RTC_FLAG_TSOVF);
 831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* Change TIMESTAMP state */
 833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     hrtc->State = HAL_RTC_STATE_ERROR;
 834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     return HAL_ERROR;
 836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****    }
 837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Change RTC state */
 839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 1353              		.loc 1 839 0
 1354 0036 0123     		movs	r3, #1
 1355 0038 6377     		strb	r3, [r4, #29]
 840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return HAL_OK;
 1356              		.loc 1 841 0
 1357 003a 0020     		movs	r0, #0
 1358              	.L101:
 842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 1359              		.loc 1 842 0
 1360 003c 70BD     		pop	{r4, r5, r6, pc}
 1361              	.LVL86:
 1362              	.L106:
ARM GAS  /tmp/ccgdwFG7.s 			page 40


 830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 1363              		.loc 1 830 0
 1364 003e DA68     		ldr	r2, [r3, #12]
 1365 0040 D2B2     		uxtb	r2, r2
 1366 0042 62F48452 		orn	r2, r2, #4224
 1367 0046 DA60     		str	r2, [r3, #12]
 833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 1368              		.loc 1 833 0
 1369 0048 0423     		movs	r3, #4
 1370 004a 6377     		strb	r3, [r4, #29]
 835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****    }
 1371              		.loc 1 835 0
 1372 004c 0120     		movs	r0, #1
 1373 004e F5E7     		b	.L101
 1374              		.cfi_endproc
 1375              	.LFE155:
 1377              		.section	.text.HAL_RTCEx_PollForTamper1Event,"ax",%progbits
 1378              		.align	1
 1379              		.global	HAL_RTCEx_PollForTamper1Event
 1380              		.syntax unified
 1381              		.thumb
 1382              		.thumb_func
 1383              		.fpu fpv5-sp-d16
 1385              	HAL_RTCEx_PollForTamper1Event:
 1386              	.LFB156:
 843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
 845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  This function handles Tamper1 Polling.
 846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
 847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
 848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  Timeout Timeout duration
 849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval HAL status
 850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
 851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_PollForTamper1Event(RTC_HandleTypeDef *hrtc, uint32_t Timeout)
 852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 1387              		.loc 1 852 0
 1388              		.cfi_startproc
 1389              		@ args = 0, pretend = 0, frame = 0
 1390              		@ frame_needed = 0, uses_anonymous_args = 0
 1391              	.LVL87:
 1392 0000 70B5     		push	{r4, r5, r6, lr}
 1393              	.LCFI19:
 1394              		.cfi_def_cfa_offset 16
 1395              		.cfi_offset 4, -16
 1396              		.cfi_offset 5, -12
 1397              		.cfi_offset 6, -8
 1398              		.cfi_offset 14, -4
 1399 0002 0446     		mov	r4, r0
 1400 0004 0D46     		mov	r5, r1
 1401              	.LVL88:
 853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   uint32_t tickstart = 0U;
 854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Get tick */
 856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   tickstart = HAL_GetTick();
 1402              		.loc 1 856 0
 1403 0006 FFF7FEFF 		bl	HAL_GetTick
 1404              	.LVL89:
ARM GAS  /tmp/ccgdwFG7.s 			page 41


 1405 000a 0646     		mov	r6, r0
 1406              	.LVL90:
 1407              	.L109:
 857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Get the status of the Interrupt */
 859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   while(__HAL_RTC_TAMPER_GET_FLAG(hrtc, RTC_FLAG_TAMP1F)== RESET)
 1408              		.loc 1 859 0
 1409 000c 2368     		ldr	r3, [r4]
 1410 000e DA68     		ldr	r2, [r3, #12]
 1411 0010 12F4005F 		tst	r2, #8192
 1412 0014 0BD1     		bne	.L114
 860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
 861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     if(Timeout != HAL_MAX_DELAY)
 1413              		.loc 1 861 0
 1414 0016 B5F1FF3F 		cmp	r5, #-1
 1415 001a F7D0     		beq	.L109
 862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
 863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 1416              		.loc 1 863 0
 1417 001c 25B1     		cbz	r5, .L110
 1418              		.loc 1 863 0 is_stmt 0 discriminator 1
 1419 001e FFF7FEFF 		bl	HAL_GetTick
 1420              	.LVL91:
 1421 0022 801B     		subs	r0, r0, r6
 1422 0024 A842     		cmp	r0, r5
 1423 0026 F1D9     		bls	.L109
 1424              	.L110:
 864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       {
 865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 1425              		.loc 1 865 0 is_stmt 1
 1426 0028 0320     		movs	r0, #3
 1427 002a 6077     		strb	r0, [r4, #29]
 866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 1428              		.loc 1 866 0
 1429 002c 07E0     		b	.L111
 1430              	.L114:
 867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       }
 868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
 869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
 870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Clear the Tamper Flag */
 872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_CLEAR_FLAG(hrtc,RTC_FLAG_TAMP1F);
 1431              		.loc 1 872 0
 1432 002e DA68     		ldr	r2, [r3, #12]
 1433 0030 D2B2     		uxtb	r2, r2
 1434 0032 62F40252 		orn	r2, r2, #8320
 1435 0036 DA60     		str	r2, [r3, #12]
 873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Change RTC state */
 875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 1436              		.loc 1 875 0
 1437 0038 0123     		movs	r3, #1
 1438 003a 6377     		strb	r3, [r4, #29]
 876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return HAL_OK;
 1439              		.loc 1 877 0
 1440 003c 0020     		movs	r0, #0
ARM GAS  /tmp/ccgdwFG7.s 			page 42


 1441              	.L111:
 878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 1442              		.loc 1 878 0
 1443 003e 70BD     		pop	{r4, r5, r6, pc}
 1444              		.cfi_endproc
 1445              	.LFE156:
 1447              		.section	.text.HAL_RTCEx_PollForTamper2Event,"ax",%progbits
 1448              		.align	1
 1449              		.global	HAL_RTCEx_PollForTamper2Event
 1450              		.syntax unified
 1451              		.thumb
 1452              		.thumb_func
 1453              		.fpu fpv5-sp-d16
 1455              	HAL_RTCEx_PollForTamper2Event:
 1456              	.LFB157:
 879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
 881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  This function handles Tamper2 Polling.
 882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
 883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
 884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  Timeout Timeout duration
 885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval HAL status
 886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
 887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_PollForTamper2Event(RTC_HandleTypeDef *hrtc, uint32_t Timeout)
 888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 1457              		.loc 1 888 0
 1458              		.cfi_startproc
 1459              		@ args = 0, pretend = 0, frame = 0
 1460              		@ frame_needed = 0, uses_anonymous_args = 0
 1461              	.LVL92:
 1462 0000 70B5     		push	{r4, r5, r6, lr}
 1463              	.LCFI20:
 1464              		.cfi_def_cfa_offset 16
 1465              		.cfi_offset 4, -16
 1466              		.cfi_offset 5, -12
 1467              		.cfi_offset 6, -8
 1468              		.cfi_offset 14, -4
 1469 0002 0446     		mov	r4, r0
 1470 0004 0D46     		mov	r5, r1
 1471              	.LVL93:
 889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   uint32_t tickstart = 0;
 890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Get tick */
 892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   tickstart = HAL_GetTick();
 1472              		.loc 1 892 0
 1473 0006 FFF7FEFF 		bl	HAL_GetTick
 1474              	.LVL94:
 1475 000a 0646     		mov	r6, r0
 1476              	.LVL95:
 1477              	.L117:
 893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Get the status of the Interrupt */
 895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   while(__HAL_RTC_TAMPER_GET_FLAG(hrtc, RTC_FLAG_TAMP2F) == RESET)
 1478              		.loc 1 895 0
 1479 000c 2368     		ldr	r3, [r4]
 1480 000e DA68     		ldr	r2, [r3, #12]
 1481 0010 12F4804F 		tst	r2, #16384
ARM GAS  /tmp/ccgdwFG7.s 			page 43


 1482 0014 0BD1     		bne	.L122
 896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
 897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     if(Timeout != HAL_MAX_DELAY)
 1483              		.loc 1 897 0
 1484 0016 B5F1FF3F 		cmp	r5, #-1
 1485 001a F7D0     		beq	.L117
 898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
 899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       if((Timeout == 0)||((HAL_GetTick() - tickstart ) > Timeout))
 1486              		.loc 1 899 0
 1487 001c 25B1     		cbz	r5, .L118
 1488              		.loc 1 899 0 is_stmt 0 discriminator 1
 1489 001e FFF7FEFF 		bl	HAL_GetTick
 1490              	.LVL96:
 1491 0022 801B     		subs	r0, r0, r6
 1492 0024 A842     		cmp	r0, r5
 1493 0026 F1D9     		bls	.L117
 1494              	.L118:
 900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       {
 901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 1495              		.loc 1 901 0 is_stmt 1
 1496 0028 0320     		movs	r0, #3
 1497 002a 6077     		strb	r0, [r4, #29]
 902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 1498              		.loc 1 902 0
 1499 002c 07E0     		b	.L119
 1500              	.L122:
 903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       }
 904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
 905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
 906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Clear the Tamper Flag */
 908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_CLEAR_FLAG(hrtc,RTC_FLAG_TAMP2F);
 1501              		.loc 1 908 0
 1502 002e DA68     		ldr	r2, [r3, #12]
 1503 0030 D2B2     		uxtb	r2, r2
 1504 0032 62F48142 		orn	r2, r2, #16512
 1505 0036 DA60     		str	r2, [r3, #12]
 909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Change RTC state */
 911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 1506              		.loc 1 911 0
 1507 0038 0123     		movs	r3, #1
 1508 003a 6377     		strb	r3, [r4, #29]
 912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return HAL_OK;
 1509              		.loc 1 913 0
 1510 003c 0020     		movs	r0, #0
 1511              	.L119:
 914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 1512              		.loc 1 914 0
 1513 003e 70BD     		pop	{r4, r5, r6, pc}
 1514              		.cfi_endproc
 1515              	.LFE157:
 1517              		.section	.text.HAL_RTCEx_PollForTamper3Event,"ax",%progbits
 1518              		.align	1
 1519              		.global	HAL_RTCEx_PollForTamper3Event
 1520              		.syntax unified
ARM GAS  /tmp/ccgdwFG7.s 			page 44


 1521              		.thumb
 1522              		.thumb_func
 1523              		.fpu fpv5-sp-d16
 1525              	HAL_RTCEx_PollForTamper3Event:
 1526              	.LFB158:
 915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
 917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  This function handles Tamper3 Polling.
 918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  Timeout Timeout duration
 920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval HAL status
 921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
 922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_PollForTamper3Event(RTC_HandleTypeDef *hrtc, uint32_t Timeout)
 923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 1527              		.loc 1 923 0
 1528              		.cfi_startproc
 1529              		@ args = 0, pretend = 0, frame = 0
 1530              		@ frame_needed = 0, uses_anonymous_args = 0
 1531              	.LVL97:
 1532 0000 70B5     		push	{r4, r5, r6, lr}
 1533              	.LCFI21:
 1534              		.cfi_def_cfa_offset 16
 1535              		.cfi_offset 4, -16
 1536              		.cfi_offset 5, -12
 1537              		.cfi_offset 6, -8
 1538              		.cfi_offset 14, -4
 1539 0002 0446     		mov	r4, r0
 1540 0004 0D46     		mov	r5, r1
 924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   uint32_t tickstart = HAL_GetTick();
 1541              		.loc 1 924 0
 1542 0006 FFF7FEFF 		bl	HAL_GetTick
 1543              	.LVL98:
 1544 000a 0646     		mov	r6, r0
 1545              	.LVL99:
 1546              	.L125:
 925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Get the status of the Interrupt */
 927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   while(__HAL_RTC_TAMPER_GET_FLAG(hrtc, RTC_FLAG_TAMP3F) == RESET)
 1547              		.loc 1 927 0
 1548 000c 2368     		ldr	r3, [r4]
 1549 000e DA68     		ldr	r2, [r3, #12]
 1550 0010 12F4004F 		tst	r2, #32768
 1551 0014 0BD1     		bne	.L130
 928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
 929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     if(Timeout != HAL_MAX_DELAY)
 1552              		.loc 1 929 0
 1553 0016 B5F1FF3F 		cmp	r5, #-1
 1554 001a F7D0     		beq	.L125
 930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
 931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       if((Timeout == 0)||((HAL_GetTick() - tickstart ) > Timeout))
 1555              		.loc 1 931 0
 1556 001c 25B1     		cbz	r5, .L126
 1557              		.loc 1 931 0 is_stmt 0 discriminator 1
 1558 001e FFF7FEFF 		bl	HAL_GetTick
 1559              	.LVL100:
 1560 0022 801B     		subs	r0, r0, r6
 1561 0024 A842     		cmp	r0, r5
ARM GAS  /tmp/ccgdwFG7.s 			page 45


 1562 0026 F1D9     		bls	.L125
 1563              	.L126:
 932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       {
 933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 1564              		.loc 1 933 0 is_stmt 1
 1565 0028 0320     		movs	r0, #3
 1566 002a 6077     		strb	r0, [r4, #29]
 934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 1567              		.loc 1 934 0
 1568 002c 0DE0     		b	.L127
 1569              	.L130:
 935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       }
 936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
 937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
 938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Clear the Tamper Flag */
 940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_CLEAR_FLAG(hrtc,RTC_FLAG_TAMP3F);
 1570              		.loc 1 940 0
 1571 002e DA68     		ldr	r2, [r3, #12]
 1572 0030 D2B2     		uxtb	r2, r2
 1573 0032 42F07F42 		orr	r2, r2, #-16777216
 1574 0036 42F47F02 		orr	r2, r2, #16711680
 1575 003a 42F4FE42 		orr	r2, r2, #32512
 1576 003e 42F07F02 		orr	r2, r2, #127
 1577 0042 DA60     		str	r2, [r3, #12]
 941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Change RTC state */
 943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 1578              		.loc 1 943 0
 1579 0044 0123     		movs	r3, #1
 1580 0046 6377     		strb	r3, [r4, #29]
 944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return HAL_OK;
 1581              		.loc 1 945 0
 1582 0048 0020     		movs	r0, #0
 1583              	.L127:
 946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 1584              		.loc 1 946 0
 1585 004a 70BD     		pop	{r4, r5, r6, pc}
 1586              		.cfi_endproc
 1587              	.LFE158:
 1589              		.section	.text.HAL_RTCEx_SetWakeUpTimer,"ax",%progbits
 1590              		.align	1
 1591              		.global	HAL_RTCEx_SetWakeUpTimer
 1592              		.syntax unified
 1593              		.thumb
 1594              		.thumb_func
 1595              		.fpu fpv5-sp-d16
 1597              	HAL_RTCEx_SetWakeUpTimer:
 1598              	.LFB159:
 947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
 949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @}
 950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
 951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /** @defgroup RTCEx_Group2 RTC Wake-up functions
 953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****  *  @brief   RTC Wake-up functions
ARM GAS  /tmp/ccgdwFG7.s 			page 46


 954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****  *
 955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** @verbatim
 956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****  ===============================================================================
 957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****                         ##### RTC Wake-up functions #####
 958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****  ===============================================================================
 959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****  [..] This section provides functions allowing to configure Wake-up feature
 961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** @endverbatim
 963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @{
 964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
 965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
 967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Sets wake up timer.
 968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
 969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
 970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  WakeUpCounter Wake up counter
 971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  WakeUpClock Wake up clock
 972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval HAL status
 973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
 974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetWakeUpTimer(RTC_HandleTypeDef *hrtc, uint32_t WakeUpCounter, uint32_
 975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 1599              		.loc 1 975 0
 1600              		.cfi_startproc
 1601              		@ args = 0, pretend = 0, frame = 0
 1602              		@ frame_needed = 0, uses_anonymous_args = 0
 1603              	.LVL101:
 1604 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1605              	.LCFI22:
 1606              		.cfi_def_cfa_offset 24
 1607              		.cfi_offset 3, -24
 1608              		.cfi_offset 4, -20
 1609              		.cfi_offset 5, -16
 1610              		.cfi_offset 6, -12
 1611              		.cfi_offset 7, -8
 1612              		.cfi_offset 14, -4
 1613              	.LVL102:
 976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   uint32_t tickstart = 0;
 977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Check the parameters */
 979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_WAKEUP_CLOCK(WakeUpClock));
 980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_WAKEUP_COUNTER(WakeUpCounter));
 981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Locked */
 983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 1614              		.loc 1 983 0
 1615 0002 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
 1616 0004 012B     		cmp	r3, #1
 1617 0006 44D0     		beq	.L136
 1618 0008 1646     		mov	r6, r2
 1619 000a 0D46     		mov	r5, r1
 1620 000c 0446     		mov	r4, r0
 1621              		.loc 1 983 0 is_stmt 0 discriminator 2
 1622 000e 0123     		movs	r3, #1
 1623 0010 0377     		strb	r3, [r0, #28]
 984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
ARM GAS  /tmp/ccgdwFG7.s 			page 47


 1624              		.loc 1 985 0 is_stmt 1 discriminator 2
 1625 0012 0223     		movs	r3, #2
 1626 0014 4377     		strb	r3, [r0, #29]
 986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
 988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 1627              		.loc 1 988 0 discriminator 2
 1628 0016 0368     		ldr	r3, [r0]
 1629 0018 CA22     		movs	r2, #202
 1630              	.LVL103:
 1631 001a 5A62     		str	r2, [r3, #36]
 1632 001c 0368     		ldr	r3, [r0]
 1633 001e 5322     		movs	r2, #83
 1634 0020 5A62     		str	r2, [r3, #36]
 989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_DISABLE(hrtc);
 1635              		.loc 1 990 0 discriminator 2
 1636 0022 0268     		ldr	r2, [r0]
 1637 0024 9368     		ldr	r3, [r2, #8]
 1638 0026 23F48063 		bic	r3, r3, #1024
 1639 002a 9360     		str	r3, [r2, #8]
 991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Get tick */
 993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   tickstart = HAL_GetTick();
 1640              		.loc 1 993 0 discriminator 2
 1641 002c FFF7FEFF 		bl	HAL_GetTick
 1642              	.LVL104:
 1643 0030 0746     		mov	r7, r0
 1644              	.LVL105:
 994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /*Check RTC WUTWF flag is reset only when wake up timer enabled*/
 996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   if((hrtc->Instance->CR & RTC_CR_WUTE) != RESET)
 1645              		.loc 1 996 0 discriminator 2
 1646 0032 2368     		ldr	r3, [r4]
 1647 0034 9B68     		ldr	r3, [r3, #8]
 1648 0036 13F4806F 		tst	r3, #1024
 1649 003a 17D1     		bne	.L133
 1650              	.LVL106:
 1651              	.L134:
 997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
 998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* Wait till RTC WUTWF flag is set and if Time out is reached exit */
 999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     while(__HAL_RTC_WAKEUPTIMER_GET_FLAG(hrtc, RTC_FLAG_WUTWF) == RESET)
1000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
1001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       if((HAL_GetTick() - tickstart ) > RTC_TIMEOUT_VALUE)
1002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       {
1003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         /* Enable the write protection for RTC registers */
1004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
1005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
1007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         /* Process Unlocked */
1009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         __HAL_UNLOCK(hrtc);
1010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
1012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       }
1013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
1014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
ARM GAS  /tmp/ccgdwFG7.s 			page 48


1015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Clear the Wakeup Timer clock source bits in CR register */
1017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->Instance->CR &= (uint32_t)~RTC_CR_WUCKSEL;
 1652              		.loc 1 1017 0
 1653 003c 2268     		ldr	r2, [r4]
 1654 003e 9368     		ldr	r3, [r2, #8]
 1655 0040 23F00703 		bic	r3, r3, #7
 1656 0044 9360     		str	r3, [r2, #8]
1018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Configure the clock source */
1020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->Instance->CR |= (uint32_t)WakeUpClock;
 1657              		.loc 1 1020 0
 1658 0046 2368     		ldr	r3, [r4]
 1659 0048 9A68     		ldr	r2, [r3, #8]
 1660 004a 1643     		orrs	r6, r6, r2
 1661              	.LVL107:
 1662 004c 9E60     		str	r6, [r3, #8]
1021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Configure the Wakeup Timer counter */
1023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->Instance->WUTR = (uint32_t)WakeUpCounter;
 1663              		.loc 1 1023 0
 1664 004e 2368     		ldr	r3, [r4]
 1665 0050 5D61     		str	r5, [r3, #20]
1024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****    /* Enable the Wakeup Timer */
1026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_ENABLE(hrtc);
 1666              		.loc 1 1026 0
 1667 0052 2268     		ldr	r2, [r4]
 1668 0054 9368     		ldr	r3, [r2, #8]
 1669 0056 43F48063 		orr	r3, r3, #1024
 1670 005a 9360     		str	r3, [r2, #8]
1027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
1029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 1671              		.loc 1 1029 0
 1672 005c 2368     		ldr	r3, [r4]
 1673 005e FF22     		movs	r2, #255
 1674 0060 5A62     		str	r2, [r3, #36]
1030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 1675              		.loc 1 1031 0
 1676 0062 0123     		movs	r3, #1
 1677 0064 6377     		strb	r3, [r4, #29]
1032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Unlocked */
1034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 1678              		.loc 1 1034 0
 1679 0066 0020     		movs	r0, #0
 1680 0068 2077     		strb	r0, [r4, #28]
 1681              	.LVL108:
 1682              	.L132:
1035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return HAL_OK;
1037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 1683              		.loc 1 1037 0
 1684 006a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1685              	.LVL109:
ARM GAS  /tmp/ccgdwFG7.s 			page 49


 1686              	.L133:
 999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
 1687              		.loc 1 999 0
 1688 006c 2368     		ldr	r3, [r4]
 1689 006e DB68     		ldr	r3, [r3, #12]
 1690 0070 13F0040F 		tst	r3, #4
 1691 0074 E2D1     		bne	.L134
1001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       {
 1692              		.loc 1 1001 0
 1693 0076 FFF7FEFF 		bl	HAL_GetTick
 1694              	.LVL110:
 1695 007a C01B     		subs	r0, r0, r7
 1696 007c B0F57A7F 		cmp	r0, #1000
 1697 0080 F4D9     		bls	.L133
1004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 1698              		.loc 1 1004 0
 1699 0082 2368     		ldr	r3, [r4]
 1700 0084 FF22     		movs	r2, #255
 1701 0086 5A62     		str	r2, [r3, #36]
1006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 1702              		.loc 1 1006 0
 1703 0088 0320     		movs	r0, #3
 1704 008a 6077     		strb	r0, [r4, #29]
1009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 1705              		.loc 1 1009 0
 1706 008c 0023     		movs	r3, #0
 1707 008e 2377     		strb	r3, [r4, #28]
1011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       }
 1708              		.loc 1 1011 0
 1709 0090 EBE7     		b	.L132
 1710              	.LVL111:
 1711              	.L136:
 983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 1712              		.loc 1 983 0
 1713 0092 0220     		movs	r0, #2
 1714              	.LVL112:
 1715 0094 E9E7     		b	.L132
 1716              		.cfi_endproc
 1717              	.LFE159:
 1719              		.section	.text.HAL_RTCEx_SetWakeUpTimer_IT,"ax",%progbits
 1720              		.align	1
 1721              		.global	HAL_RTCEx_SetWakeUpTimer_IT
 1722              		.syntax unified
 1723              		.thumb
 1724              		.thumb_func
 1725              		.fpu fpv5-sp-d16
 1727              	HAL_RTCEx_SetWakeUpTimer_IT:
 1728              	.LFB160:
1038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
1040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Sets wake up timer with interrupt
1041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
1042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
1043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  WakeUpCounter Wake up counter
1044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  WakeUpClock Wake up clock
1045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval HAL status
1046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
ARM GAS  /tmp/ccgdwFG7.s 			page 50


1047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetWakeUpTimer_IT(RTC_HandleTypeDef *hrtc, uint32_t WakeUpCounter, uint
1048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 1729              		.loc 1 1048 0
 1730              		.cfi_startproc
 1731              		@ args = 0, pretend = 0, frame = 8
 1732              		@ frame_needed = 0, uses_anonymous_args = 0
 1733              		@ link register save eliminated.
 1734              	.LVL113:
1049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __IO uint32_t count;
1050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Check the parameters */
1052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_WAKEUP_CLOCK(WakeUpClock));
1053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_WAKEUP_COUNTER(WakeUpCounter));
1054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Locked */
1056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 1735              		.loc 1 1056 0
 1736 0000 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
 1737 0002 012B     		cmp	r3, #1
 1738 0004 00F08280 		beq	.L145
1048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __IO uint32_t count;
 1739              		.loc 1 1048 0 discriminator 2
 1740 0008 30B4     		push	{r4, r5}
 1741              	.LCFI23:
 1742              		.cfi_def_cfa_offset 8
 1743              		.cfi_offset 4, -8
 1744              		.cfi_offset 5, -4
 1745 000a 82B0     		sub	sp, sp, #8
 1746              	.LCFI24:
 1747              		.cfi_def_cfa_offset 16
 1748              		.loc 1 1056 0 discriminator 2
 1749 000c 0123     		movs	r3, #1
 1750 000e 0377     		strb	r3, [r0, #28]
1057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 1751              		.loc 1 1058 0 discriminator 2
 1752 0010 0223     		movs	r3, #2
 1753 0012 4377     		strb	r3, [r0, #29]
1059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
1061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 1754              		.loc 1 1061 0 discriminator 2
 1755 0014 0368     		ldr	r3, [r0]
 1756 0016 CA24     		movs	r4, #202
 1757 0018 5C62     		str	r4, [r3, #36]
 1758 001a 0368     		ldr	r3, [r0]
 1759 001c 5324     		movs	r4, #83
 1760 001e 5C62     		str	r4, [r3, #36]
1062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_DISABLE(hrtc);
 1761              		.loc 1 1063 0 discriminator 2
 1762 0020 0468     		ldr	r4, [r0]
 1763 0022 A368     		ldr	r3, [r4, #8]
 1764 0024 23F48063 		bic	r3, r3, #1024
 1765 0028 A360     		str	r3, [r4, #8]
1064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Check RTC WUTWF flag is reset only when wake up timer enabled */
ARM GAS  /tmp/ccgdwFG7.s 			page 51


1066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   if((hrtc->Instance->CR & RTC_CR_WUTE) != RESET)
 1766              		.loc 1 1066 0 discriminator 2
 1767 002a 0468     		ldr	r4, [r0]
 1768 002c A368     		ldr	r3, [r4, #8]
 1769 002e 13F4806F 		tst	r3, #1024
 1770 0032 13D0     		beq	.L140
1067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
1068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* Wait till RTC WUTWF flag is reset and if Time out is reached exit */
1069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     count = RTC_TIMEOUT_VALUE  * (SystemCoreClock / 32U / 1000U);
 1771              		.loc 1 1069 0
 1772 0034 364B     		ldr	r3, .L152
 1773 0036 1B68     		ldr	r3, [r3]
 1774 0038 364D     		ldr	r5, .L152+4
 1775 003a A5FB0353 		umull	r5, r3, r5, r3
 1776 003e DB0A     		lsrs	r3, r3, #11
 1777 0040 4FF47A75 		mov	r5, #1000
 1778 0044 05FB03F3 		mul	r3, r5, r3
 1779 0048 0193     		str	r3, [sp, #4]
 1780              	.L142:
1070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     do
1071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
1072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       if(count-- == 0U)
 1781              		.loc 1 1072 0
 1782 004a 019B     		ldr	r3, [sp, #4]
 1783 004c 5D1E     		subs	r5, r3, #1
 1784 004e 0195     		str	r5, [sp, #4]
 1785 0050 002B     		cmp	r3, #0
 1786 0052 48D0     		beq	.L150
1073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       {
1074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         /* Enable the write protection for RTC registers */
1075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
1076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
1078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         /* Process Unlocked */
1080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         __HAL_UNLOCK(hrtc);
1081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
1083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       }
1084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
1085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     while(__HAL_RTC_WAKEUPTIMER_GET_FLAG(hrtc, RTC_FLAG_WUTWF) == SET);
 1787              		.loc 1 1085 0
 1788 0054 E368     		ldr	r3, [r4, #12]
 1789 0056 13F0040F 		tst	r3, #4
 1790 005a F6D1     		bne	.L142
 1791              	.L140:
1086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
1087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_DISABLE(hrtc);
 1792              		.loc 1 1088 0
 1793 005c A368     		ldr	r3, [r4, #8]
 1794 005e 23F48063 		bic	r3, r3, #1024
 1795 0062 A360     		str	r3, [r4, #8]
1089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Wait till RTC WUTWF flag is set and if Time out is reached exit */
1091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   count = RTC_TIMEOUT_VALUE  * (SystemCoreClock / 32U / 1000U);
 1796              		.loc 1 1091 0
ARM GAS  /tmp/ccgdwFG7.s 			page 52


 1797 0064 2A4B     		ldr	r3, .L152
 1798 0066 1B68     		ldr	r3, [r3]
 1799 0068 2A4C     		ldr	r4, .L152+4
 1800 006a A4FB0343 		umull	r4, r3, r4, r3
 1801 006e DB0A     		lsrs	r3, r3, #11
 1802 0070 4FF47A74 		mov	r4, #1000
 1803 0074 04FB03F3 		mul	r3, r4, r3
 1804 0078 0193     		str	r3, [sp, #4]
 1805              	.L144:
1092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   do
1093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
1094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     if(count-- == 0U)
 1806              		.loc 1 1094 0
 1807 007a 019B     		ldr	r3, [sp, #4]
 1808 007c 5C1E     		subs	r4, r3, #1
 1809 007e 0194     		str	r4, [sp, #4]
 1810 0080 002B     		cmp	r3, #0
 1811 0082 38D0     		beq	.L151
1095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
1096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       /* Enable the write protection for RTC registers */
1097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
1098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       hrtc->State = HAL_RTC_STATE_TIMEOUT;
1100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       /* Process Unlocked */
1102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       __HAL_UNLOCK(hrtc);
1103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       return HAL_TIMEOUT;
1105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
1106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
1107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   while(__HAL_RTC_WAKEUPTIMER_GET_FLAG(hrtc, RTC_FLAG_WUTWF) == RESET);
 1812              		.loc 1 1107 0
 1813 0084 0368     		ldr	r3, [r0]
 1814 0086 DC68     		ldr	r4, [r3, #12]
 1815 0088 14F0040F 		tst	r4, #4
 1816 008c F5D0     		beq	.L144
1108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Configure the Wake-up Timer counter */
1110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->Instance->WUTR = (uint32_t)WakeUpCounter;
 1817              		.loc 1 1110 0
 1818 008e 5961     		str	r1, [r3, #20]
1111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Clear the Wakeup Timer clock source bits in CR register */
1113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->Instance->CR &= (uint32_t)~RTC_CR_WUCKSEL;
 1819              		.loc 1 1113 0
 1820 0090 0168     		ldr	r1, [r0]
 1821              	.LVL114:
 1822 0092 8B68     		ldr	r3, [r1, #8]
 1823              	.LVL115:
 1824 0094 23F00703 		bic	r3, r3, #7
 1825 0098 8B60     		str	r3, [r1, #8]
1114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Configure the clock source */
1116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->Instance->CR |= (uint32_t)WakeUpClock;
 1826              		.loc 1 1116 0
 1827 009a 0168     		ldr	r1, [r0]
 1828 009c 8B68     		ldr	r3, [r1, #8]
ARM GAS  /tmp/ccgdwFG7.s 			page 53


 1829 009e 1A43     		orrs	r2, r2, r3
 1830              	.LVL116:
 1831 00a0 8A60     		str	r2, [r1, #8]
1117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* RTC WakeUpTimer Interrupt Configuration: EXTI configuration */
1119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_EXTI_ENABLE_IT();
 1832              		.loc 1 1119 0
 1833 00a2 1D4B     		ldr	r3, .L152+8
 1834 00a4 1A68     		ldr	r2, [r3]
 1835 00a6 42F48002 		orr	r2, r2, #4194304
 1836 00aa 1A60     		str	r2, [r3]
1120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   EXTI->RTSR |= RTC_EXTI_LINE_WAKEUPTIMER_EVENT;
 1837              		.loc 1 1121 0
 1838 00ac 9A68     		ldr	r2, [r3, #8]
 1839 00ae 42F48002 		orr	r2, r2, #4194304
 1840 00b2 9A60     		str	r2, [r3, #8]
1122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Clear RTC Wake Up timer Flag */
1124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_CLEAR_FLAG(hrtc, RTC_FLAG_WUTF);
 1841              		.loc 1 1124 0
 1842 00b4 0268     		ldr	r2, [r0]
 1843 00b6 D368     		ldr	r3, [r2, #12]
 1844 00b8 DBB2     		uxtb	r3, r3
 1845 00ba 63F49063 		orn	r3, r3, #1152
 1846 00be D360     		str	r3, [r2, #12]
1125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Configure the Interrupt in the RTC_CR register */
1127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_ENABLE_IT(hrtc,RTC_IT_WUT);
 1847              		.loc 1 1127 0
 1848 00c0 0268     		ldr	r2, [r0]
 1849 00c2 9368     		ldr	r3, [r2, #8]
 1850 00c4 43F48043 		orr	r3, r3, #16384
 1851 00c8 9360     		str	r3, [r2, #8]
1128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Enable the Wakeup Timer */
1130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_ENABLE(hrtc);
 1852              		.loc 1 1130 0
 1853 00ca 0268     		ldr	r2, [r0]
 1854 00cc 9368     		ldr	r3, [r2, #8]
 1855 00ce 43F48063 		orr	r3, r3, #1024
 1856 00d2 9360     		str	r3, [r2, #8]
1131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
1133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 1857              		.loc 1 1133 0
 1858 00d4 0368     		ldr	r3, [r0]
 1859 00d6 FF22     		movs	r2, #255
 1860 00d8 5A62     		str	r2, [r3, #36]
1134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 1861              		.loc 1 1135 0
 1862 00da 0123     		movs	r3, #1
 1863 00dc 4377     		strb	r3, [r0, #29]
1136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Unlocked */
1138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
ARM GAS  /tmp/ccgdwFG7.s 			page 54


 1864              		.loc 1 1138 0
 1865 00de 0023     		movs	r3, #0
 1866 00e0 0377     		strb	r3, [r0, #28]
1139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return HAL_OK;
 1867              		.loc 1 1140 0
 1868 00e2 1846     		mov	r0, r3
 1869              	.LVL117:
 1870 00e4 0FE0     		b	.L139
 1871              	.LVL118:
 1872              	.L150:
1075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 1873              		.loc 1 1075 0
 1874 00e6 FF23     		movs	r3, #255
 1875 00e8 6362     		str	r3, [r4, #36]
1077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 1876              		.loc 1 1077 0
 1877 00ea 0323     		movs	r3, #3
 1878 00ec 4377     		strb	r3, [r0, #29]
1080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 1879              		.loc 1 1080 0
 1880 00ee 0022     		movs	r2, #0
 1881              	.LVL119:
 1882 00f0 0277     		strb	r2, [r0, #28]
1082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       }
 1883              		.loc 1 1082 0
 1884 00f2 1846     		mov	r0, r3
 1885              	.LVL120:
 1886 00f4 07E0     		b	.L139
 1887              	.LVL121:
 1888              	.L151:
1097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 1889              		.loc 1 1097 0
 1890 00f6 0368     		ldr	r3, [r0]
 1891 00f8 FF22     		movs	r2, #255
 1892              	.LVL122:
 1893 00fa 5A62     		str	r2, [r3, #36]
1099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 1894              		.loc 1 1099 0
 1895 00fc 0323     		movs	r3, #3
 1896 00fe 4377     		strb	r3, [r0, #29]
1102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 1897              		.loc 1 1102 0
 1898 0100 0022     		movs	r2, #0
 1899 0102 0277     		strb	r2, [r0, #28]
1104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
 1900              		.loc 1 1104 0
 1901 0104 1846     		mov	r0, r3
 1902              	.LVL123:
 1903              	.L139:
1141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 1904              		.loc 1 1141 0
 1905 0106 02B0     		add	sp, sp, #8
 1906              	.LCFI25:
 1907              		.cfi_def_cfa_offset 8
 1908              		@ sp needed
 1909 0108 30BC     		pop	{r4, r5}
ARM GAS  /tmp/ccgdwFG7.s 			page 55


 1910              	.LCFI26:
 1911              		.cfi_restore 5
 1912              		.cfi_restore 4
 1913              		.cfi_def_cfa_offset 0
 1914 010a 7047     		bx	lr
 1915              	.LVL124:
 1916              	.L145:
1056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 1917              		.loc 1 1056 0
 1918 010c 0220     		movs	r0, #2
 1919              	.LVL125:
 1920              		.loc 1 1141 0
 1921 010e 7047     		bx	lr
 1922              	.L153:
 1923              		.align	2
 1924              	.L152:
 1925 0110 00000000 		.word	SystemCoreClock
 1926 0114 D34D6210 		.word	274877907
 1927 0118 003C0140 		.word	1073822720
 1928              		.cfi_endproc
 1929              	.LFE160:
 1931              		.section	.text.HAL_RTCEx_DeactivateWakeUpTimer,"ax",%progbits
 1932              		.align	1
 1933              		.global	HAL_RTCEx_DeactivateWakeUpTimer
 1934              		.syntax unified
 1935              		.thumb
 1936              		.thumb_func
 1937              		.fpu fpv5-sp-d16
 1939              	HAL_RTCEx_DeactivateWakeUpTimer:
 1940              	.LFB161:
1142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
1144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Deactivates wake up timer counter.
1145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
1146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
1147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval HAL status
1148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
1149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** uint32_t HAL_RTCEx_DeactivateWakeUpTimer(RTC_HandleTypeDef *hrtc)
1150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 1941              		.loc 1 1150 0
 1942              		.cfi_startproc
 1943              		@ args = 0, pretend = 0, frame = 0
 1944              		@ frame_needed = 0, uses_anonymous_args = 0
 1945              	.LVL126:
 1946 0000 38B5     		push	{r3, r4, r5, lr}
 1947              	.LCFI27:
 1948              		.cfi_def_cfa_offset 16
 1949              		.cfi_offset 3, -16
 1950              		.cfi_offset 4, -12
 1951              		.cfi_offset 5, -8
 1952              		.cfi_offset 14, -4
 1953              	.LVL127:
1151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   uint32_t tickstart = 0U;
1152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Locked */
1154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 1954              		.loc 1 1154 0
ARM GAS  /tmp/ccgdwFG7.s 			page 56


 1955 0002 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
 1956 0004 012B     		cmp	r3, #1
 1957 0006 31D0     		beq	.L158
 1958 0008 0446     		mov	r4, r0
 1959              		.loc 1 1154 0 is_stmt 0 discriminator 2
 1960 000a 0123     		movs	r3, #1
 1961 000c 0377     		strb	r3, [r0, #28]
1155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 1962              		.loc 1 1156 0 is_stmt 1 discriminator 2
 1963 000e 0223     		movs	r3, #2
 1964 0010 4377     		strb	r3, [r0, #29]
1157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
1159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 1965              		.loc 1 1159 0 discriminator 2
 1966 0012 0368     		ldr	r3, [r0]
 1967 0014 CA22     		movs	r2, #202
 1968 0016 5A62     		str	r2, [r3, #36]
 1969 0018 0368     		ldr	r3, [r0]
 1970 001a 5322     		movs	r2, #83
 1971 001c 5A62     		str	r2, [r3, #36]
1160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Disable the Wakeup Timer */
1162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_DISABLE(hrtc);
 1972              		.loc 1 1162 0 discriminator 2
 1973 001e 0268     		ldr	r2, [r0]
 1974 0020 9368     		ldr	r3, [r2, #8]
 1975 0022 23F48063 		bic	r3, r3, #1024
 1976 0026 9360     		str	r3, [r2, #8]
1163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* In case of interrupt mode is used, the interrupt source must disabled */
1165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_DISABLE_IT(hrtc,RTC_IT_WUT);
 1977              		.loc 1 1165 0 discriminator 2
 1978 0028 0268     		ldr	r2, [r0]
 1979 002a 9368     		ldr	r3, [r2, #8]
 1980 002c 23F48043 		bic	r3, r3, #16384
 1981 0030 9360     		str	r3, [r2, #8]
1166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Get tick */
1168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   tickstart = HAL_GetTick();
 1982              		.loc 1 1168 0 discriminator 2
 1983 0032 FFF7FEFF 		bl	HAL_GetTick
 1984              	.LVL128:
 1985 0036 0546     		mov	r5, r0
 1986              	.LVL129:
 1987              	.L156:
1169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Wait till RTC WUTWF flag is set and if Time out is reached exit */
1171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   while(__HAL_RTC_WAKEUPTIMER_GET_FLAG(hrtc, RTC_FLAG_WUTWF) == RESET)
 1988              		.loc 1 1171 0
 1989 0038 2368     		ldr	r3, [r4]
 1990 003a DA68     		ldr	r2, [r3, #12]
 1991 003c 12F0040F 		tst	r2, #4
 1992 0040 0DD1     		bne	.L160
1172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
1173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     if((HAL_GetTick() - tickstart ) > RTC_TIMEOUT_VALUE)
ARM GAS  /tmp/ccgdwFG7.s 			page 57


 1993              		.loc 1 1173 0
 1994 0042 FFF7FEFF 		bl	HAL_GetTick
 1995              	.LVL130:
 1996 0046 401B     		subs	r0, r0, r5
 1997 0048 B0F57A7F 		cmp	r0, #1000
 1998 004c F4D9     		bls	.L156
1174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
1175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       /* Enable the write protection for RTC registers */
1176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 1999              		.loc 1 1176 0
 2000 004e 2368     		ldr	r3, [r4]
 2001 0050 FF22     		movs	r2, #255
 2002 0052 5A62     		str	r2, [r3, #36]
1177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       hrtc->State = HAL_RTC_STATE_TIMEOUT;
 2003              		.loc 1 1178 0
 2004 0054 0320     		movs	r0, #3
 2005 0056 6077     		strb	r0, [r4, #29]
1179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       /* Process Unlocked */
1181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       __HAL_UNLOCK(hrtc);
 2006              		.loc 1 1181 0
 2007 0058 0023     		movs	r3, #0
 2008 005a 2377     		strb	r3, [r4, #28]
1182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       return HAL_TIMEOUT;
 2009              		.loc 1 1183 0
 2010 005c 05E0     		b	.L154
 2011              	.L160:
1184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
1185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
1186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
1188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 2012              		.loc 1 1188 0
 2013 005e FF22     		movs	r2, #255
 2014 0060 5A62     		str	r2, [r3, #36]
1189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 2015              		.loc 1 1190 0
 2016 0062 0123     		movs	r3, #1
 2017 0064 6377     		strb	r3, [r4, #29]
1191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Unlocked */
1193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 2018              		.loc 1 1193 0
 2019 0066 0020     		movs	r0, #0
 2020 0068 2077     		strb	r0, [r4, #28]
 2021              	.LVL131:
 2022              	.L154:
1194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return HAL_OK;
1196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 2023              		.loc 1 1196 0
 2024 006a 38BD     		pop	{r3, r4, r5, pc}
 2025              	.LVL132:
 2026              	.L158:
ARM GAS  /tmp/ccgdwFG7.s 			page 58


1154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 2027              		.loc 1 1154 0
 2028 006c 0220     		movs	r0, #2
 2029              	.LVL133:
 2030 006e FCE7     		b	.L154
 2031              		.cfi_endproc
 2032              	.LFE161:
 2034              		.section	.text.HAL_RTCEx_GetWakeUpTimer,"ax",%progbits
 2035              		.align	1
 2036              		.global	HAL_RTCEx_GetWakeUpTimer
 2037              		.syntax unified
 2038              		.thumb
 2039              		.thumb_func
 2040              		.fpu fpv5-sp-d16
 2042              	HAL_RTCEx_GetWakeUpTimer:
 2043              	.LFB162:
1197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
1199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Gets wake up timer counter.
1200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
1201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
1202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval Counter value
1203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
1204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** uint32_t HAL_RTCEx_GetWakeUpTimer(RTC_HandleTypeDef *hrtc)
1205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 2044              		.loc 1 1205 0
 2045              		.cfi_startproc
 2046              		@ args = 0, pretend = 0, frame = 0
 2047              		@ frame_needed = 0, uses_anonymous_args = 0
 2048              		@ link register save eliminated.
 2049              	.LVL134:
1206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Get the counter value */
1207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return ((uint32_t)(hrtc->Instance->WUTR & RTC_WUTR_WUT));
 2050              		.loc 1 1207 0
 2051 0000 0368     		ldr	r3, [r0]
 2052 0002 5869     		ldr	r0, [r3, #20]
 2053              	.LVL135:
1208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 2054              		.loc 1 1208 0
 2055 0004 80B2     		uxth	r0, r0
 2056 0006 7047     		bx	lr
 2057              		.cfi_endproc
 2058              	.LFE162:
 2060              		.section	.text.HAL_RTCEx_WakeUpTimerEventCallback,"ax",%progbits
 2061              		.align	1
 2062              		.weak	HAL_RTCEx_WakeUpTimerEventCallback
 2063              		.syntax unified
 2064              		.thumb
 2065              		.thumb_func
 2066              		.fpu fpv5-sp-d16
 2068              	HAL_RTCEx_WakeUpTimerEventCallback:
 2069              	.LFB164:
1209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
1211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  This function handles Wake Up Timer interrupt request.
1212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @note   Unlike alarm interrupt line (shared by AlarmA and AlarmB) and tamper
1213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *         interrupt line (shared by timestamp and tampers) wakeup timer
ARM GAS  /tmp/ccgdwFG7.s 			page 59


1214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *         interrupt line is exclusive to the wakeup timer.
1215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *         There is no need in this case to check on the interrupt enable
1216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *         status via __HAL_RTC_WAKEUPTIMER_GET_IT_SOURCE().
1217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
1218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
1219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval None
1220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
1221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** void HAL_RTCEx_WakeUpTimerIRQHandler(RTC_HandleTypeDef *hrtc)
1222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
1223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Get the pending status of the WAKEUPTIMER Interrupt */
1224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   if(__HAL_RTC_WAKEUPTIMER_GET_FLAG(hrtc, RTC_FLAG_WUTF) != (uint32_t)RESET)
1225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
1226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* WAKEUPTIMER callback */
1227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
1228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     hrtc->WakeUpTimerEventCallback(hrtc);
1229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** #else
1230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     HAL_RTCEx_WakeUpTimerEventCallback(hrtc);
1231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** #endif /* USE_HAL_RTC_REGISTER_CALLBACKS */
1232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* Clear the WAKEUPTIMER interrupt pending bit */
1234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     __HAL_RTC_WAKEUPTIMER_CLEAR_FLAG(hrtc, RTC_FLAG_WUTF);
1235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
1236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Clear the EXTI's line Flag for RTC WakeUpTimer */
1238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_EXTI_CLEAR_FLAG();
1239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Change RTC state */
1241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
1242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
1243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
1245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Wake Up Timer callback.
1246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
1247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
1248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval None
1249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
1250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_WakeUpTimerEventCallback(RTC_HandleTypeDef *hrtc)
1251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 2070              		.loc 1 1251 0
 2071              		.cfi_startproc
 2072              		@ args = 0, pretend = 0, frame = 0
 2073              		@ frame_needed = 0, uses_anonymous_args = 0
 2074              		@ link register save eliminated.
 2075              	.LVL136:
1252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   UNUSED(hrtc);
1254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****             the HAL_RTC_WakeUpTimerEventCallback could be implemented in the user file
1257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****    */
1258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 2076              		.loc 1 1258 0
 2077 0000 7047     		bx	lr
 2078              		.cfi_endproc
 2079              	.LFE164:
 2081              		.section	.text.HAL_RTCEx_WakeUpTimerIRQHandler,"ax",%progbits
 2082              		.align	1
ARM GAS  /tmp/ccgdwFG7.s 			page 60


 2083              		.global	HAL_RTCEx_WakeUpTimerIRQHandler
 2084              		.syntax unified
 2085              		.thumb
 2086              		.thumb_func
 2087              		.fpu fpv5-sp-d16
 2089              	HAL_RTCEx_WakeUpTimerIRQHandler:
 2090              	.LFB163:
1222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Get the pending status of the WAKEUPTIMER Interrupt */
 2091              		.loc 1 1222 0
 2092              		.cfi_startproc
 2093              		@ args = 0, pretend = 0, frame = 0
 2094              		@ frame_needed = 0, uses_anonymous_args = 0
 2095              	.LVL137:
 2096 0000 10B5     		push	{r4, lr}
 2097              	.LCFI28:
 2098              		.cfi_def_cfa_offset 8
 2099              		.cfi_offset 4, -8
 2100              		.cfi_offset 14, -4
 2101 0002 0446     		mov	r4, r0
1224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
 2102              		.loc 1 1224 0
 2103 0004 0368     		ldr	r3, [r0]
 2104 0006 DB68     		ldr	r3, [r3, #12]
 2105 0008 13F4806F 		tst	r3, #1024
 2106 000c 06D1     		bne	.L166
 2107              	.LVL138:
 2108              	.L164:
1238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 2109              		.loc 1 1238 0
 2110 000e 084B     		ldr	r3, .L167
 2111 0010 4FF48002 		mov	r2, #4194304
 2112 0014 5A61     		str	r2, [r3, #20]
1241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 2113              		.loc 1 1241 0
 2114 0016 0123     		movs	r3, #1
 2115 0018 6377     		strb	r3, [r4, #29]
1242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 2116              		.loc 1 1242 0
 2117 001a 10BD     		pop	{r4, pc}
 2118              	.LVL139:
 2119              	.L166:
1230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** #endif /* USE_HAL_RTC_REGISTER_CALLBACKS */
 2120              		.loc 1 1230 0
 2121 001c FFF7FEFF 		bl	HAL_RTCEx_WakeUpTimerEventCallback
 2122              	.LVL140:
1234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
 2123              		.loc 1 1234 0
 2124 0020 2268     		ldr	r2, [r4]
 2125 0022 D368     		ldr	r3, [r2, #12]
 2126 0024 DBB2     		uxtb	r3, r3
 2127 0026 63F49063 		orn	r3, r3, #1152
 2128 002a D360     		str	r3, [r2, #12]
 2129 002c EFE7     		b	.L164
 2130              	.L168:
 2131 002e 00BF     		.align	2
 2132              	.L167:
 2133 0030 003C0140 		.word	1073822720
ARM GAS  /tmp/ccgdwFG7.s 			page 61


 2134              		.cfi_endproc
 2135              	.LFE163:
 2137              		.section	.text.HAL_RTCEx_PollForWakeUpTimerEvent,"ax",%progbits
 2138              		.align	1
 2139              		.global	HAL_RTCEx_PollForWakeUpTimerEvent
 2140              		.syntax unified
 2141              		.thumb
 2142              		.thumb_func
 2143              		.fpu fpv5-sp-d16
 2145              	HAL_RTCEx_PollForWakeUpTimerEvent:
 2146              	.LFB165:
1259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
1261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  This function handles Wake Up Timer Polling.
1262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
1263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
1264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  Timeout Timeout duration
1265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval HAL status
1266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
1267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_PollForWakeUpTimerEvent(RTC_HandleTypeDef *hrtc, uint32_t Timeout)
1268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 2147              		.loc 1 1268 0
 2148              		.cfi_startproc
 2149              		@ args = 0, pretend = 0, frame = 0
 2150              		@ frame_needed = 0, uses_anonymous_args = 0
 2151              	.LVL141:
 2152 0000 70B5     		push	{r4, r5, r6, lr}
 2153              	.LCFI29:
 2154              		.cfi_def_cfa_offset 16
 2155              		.cfi_offset 4, -16
 2156              		.cfi_offset 5, -12
 2157              		.cfi_offset 6, -8
 2158              		.cfi_offset 14, -4
 2159 0002 0446     		mov	r4, r0
 2160 0004 0D46     		mov	r5, r1
 2161              	.LVL142:
1269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   uint32_t tickstart = 0;
1270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Get tick */
1272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   tickstart = HAL_GetTick();
 2162              		.loc 1 1272 0
 2163 0006 FFF7FEFF 		bl	HAL_GetTick
 2164              	.LVL143:
 2165 000a 0646     		mov	r6, r0
 2166              	.LVL144:
 2167              	.L171:
1273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   while(__HAL_RTC_WAKEUPTIMER_GET_FLAG(hrtc, RTC_FLAG_WUTF) == RESET)
 2168              		.loc 1 1274 0
 2169 000c 2368     		ldr	r3, [r4]
 2170 000e DA68     		ldr	r2, [r3, #12]
 2171 0010 12F4806F 		tst	r2, #1024
 2172 0014 0BD1     		bne	.L176
1275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
1276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     if(Timeout != HAL_MAX_DELAY)
 2173              		.loc 1 1276 0
 2174 0016 B5F1FF3F 		cmp	r5, #-1
ARM GAS  /tmp/ccgdwFG7.s 			page 62


 2175 001a F7D0     		beq	.L171
1277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
1278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       if((Timeout == 0)||((HAL_GetTick() - tickstart ) > Timeout))
 2176              		.loc 1 1278 0
 2177 001c 25B1     		cbz	r5, .L172
 2178              		.loc 1 1278 0 is_stmt 0 discriminator 1
 2179 001e FFF7FEFF 		bl	HAL_GetTick
 2180              	.LVL145:
 2181 0022 801B     		subs	r0, r0, r6
 2182 0024 A842     		cmp	r0, r5
 2183 0026 F1D9     		bls	.L171
 2184              	.L172:
1279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       {
1280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 2185              		.loc 1 1280 0 is_stmt 1
 2186 0028 0320     		movs	r0, #3
 2187 002a 6077     		strb	r0, [r4, #29]
1281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 2188              		.loc 1 1282 0
 2189 002c 07E0     		b	.L173
 2190              	.L176:
1283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       }
1284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
1285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
1286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Clear the WAKEUPTIMER Flag */
1288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_CLEAR_FLAG(hrtc, RTC_FLAG_WUTF);
 2191              		.loc 1 1288 0
 2192 002e DA68     		ldr	r2, [r3, #12]
 2193 0030 D2B2     		uxtb	r2, r2
 2194 0032 62F49062 		orn	r2, r2, #1152
 2195 0036 DA60     		str	r2, [r3, #12]
1289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Change RTC state */
1291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 2196              		.loc 1 1291 0
 2197 0038 0123     		movs	r3, #1
 2198 003a 6377     		strb	r3, [r4, #29]
1292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return HAL_OK;
 2199              		.loc 1 1293 0
 2200 003c 0020     		movs	r0, #0
 2201              	.L173:
1294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 2202              		.loc 1 1294 0
 2203 003e 70BD     		pop	{r4, r5, r6, pc}
 2204              		.cfi_endproc
 2205              	.LFE165:
 2207              		.section	.text.HAL_RTCEx_BKUPWrite,"ax",%progbits
 2208              		.align	1
 2209              		.global	HAL_RTCEx_BKUPWrite
 2210              		.syntax unified
 2211              		.thumb
 2212              		.thumb_func
 2213              		.fpu fpv5-sp-d16
 2215              	HAL_RTCEx_BKUPWrite:
ARM GAS  /tmp/ccgdwFG7.s 			page 63


 2216              	.LFB166:
1295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
1297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @}
1298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
1299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /** @defgroup RTCEx_Group3 Extension Peripheral Control functions
1302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****  *  @brief   Extension Peripheral Control functions
1303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****  *
1304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** @verbatim
1305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****  ===============================================================================
1306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****               ##### Extension Peripheral Control functions #####
1307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****  ===============================================================================
1308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     [..]
1309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     This subsection provides functions allowing to
1310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       (+) Write a data in a specified RTC Backup data register
1311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       (+) Read a data in a specified RTC Backup data register
1312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       (+) Set the Coarse calibration parameters.
1313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       (+) Deactivate the Coarse calibration parameters
1314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       (+) Set the Smooth calibration parameters.
1315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       (+) Configure the Synchronization Shift Control Settings.
1316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       (+) Configure the Calibration Pinout (RTC_CALIB) Selection (1Hz or 512Hz).
1317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       (+) Deactivate the Calibration Pinout (RTC_CALIB) Selection (1Hz or 512Hz).
1318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       (+) Enable the RTC reference clock detection.
1319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       (+) Disable the RTC reference clock detection.
1320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       (+) Enable the Bypass Shadow feature.
1321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       (+) Disable the Bypass Shadow feature.
1322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** @endverbatim
1324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @{
1325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
1326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
1328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Writes a data in a specified RTC Backup data register.
1329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
1330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
1331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  BackupRegister RTC Backup data Register number.
1332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *          This parameter can be: RTC_BKP_DRx where x can be from 0 to 19 to
1333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                                 specify the register.
1334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  Data Data to be written in the specified RTC Backup data register.
1335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval None
1336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
1337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** void HAL_RTCEx_BKUPWrite(RTC_HandleTypeDef *hrtc, uint32_t BackupRegister, uint32_t Data)
1338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 2217              		.loc 1 1338 0
 2218              		.cfi_startproc
 2219              		@ args = 0, pretend = 0, frame = 0
 2220              		@ frame_needed = 0, uses_anonymous_args = 0
 2221              		@ link register save eliminated.
 2222              	.LVL146:
1339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   uint32_t tmp = 0;
1340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Check the parameters */
1342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_BKP(BackupRegister));
1343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   tmp = (uint32_t)&(hrtc->Instance->BKP0R);
ARM GAS  /tmp/ccgdwFG7.s 			page 64


 2223              		.loc 1 1344 0
 2224 0000 0368     		ldr	r3, [r0]
 2225 0002 5033     		adds	r3, r3, #80
 2226              	.LVL147:
1345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   tmp += (BackupRegister * 4);
1346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Write the specified register */
1348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *(__IO uint32_t *)tmp = (uint32_t)Data;
 2227              		.loc 1 1348 0
 2228 0004 43F82120 		str	r2, [r3, r1, lsl #2]
1349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 2229              		.loc 1 1349 0
 2230 0008 7047     		bx	lr
 2231              		.cfi_endproc
 2232              	.LFE166:
 2234              		.section	.text.HAL_RTCEx_BKUPRead,"ax",%progbits
 2235              		.align	1
 2236              		.global	HAL_RTCEx_BKUPRead
 2237              		.syntax unified
 2238              		.thumb
 2239              		.thumb_func
 2240              		.fpu fpv5-sp-d16
 2242              	HAL_RTCEx_BKUPRead:
 2243              	.LFB167:
1350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
1352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Reads data from the specified RTC Backup data Register.
1353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
1354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
1355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  BackupRegister RTC Backup data Register number.
1356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *          This parameter can be: RTC_BKP_DRx where x can be from 0 to 19 to
1357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                                 specify the register.
1358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval Read value
1359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
1360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** uint32_t HAL_RTCEx_BKUPRead(RTC_HandleTypeDef *hrtc, uint32_t BackupRegister)
1361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 2244              		.loc 1 1361 0
 2245              		.cfi_startproc
 2246              		@ args = 0, pretend = 0, frame = 0
 2247              		@ frame_needed = 0, uses_anonymous_args = 0
 2248              		@ link register save eliminated.
 2249              	.LVL148:
1362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   uint32_t tmp = 0;
1363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Check the parameters */
1365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_BKP(BackupRegister));
1366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   tmp = (uint32_t)&(hrtc->Instance->BKP0R);
 2250              		.loc 1 1367 0
 2251 0000 0368     		ldr	r3, [r0]
 2252 0002 5033     		adds	r3, r3, #80
 2253              	.LVL149:
1368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   tmp += (BackupRegister * 4);
1369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Read the specified register */
1371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return (*(__IO uint32_t *)tmp);
 2254              		.loc 1 1371 0
ARM GAS  /tmp/ccgdwFG7.s 			page 65


 2255 0004 53F82100 		ldr	r0, [r3, r1, lsl #2]
 2256              	.LVL150:
1372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 2257              		.loc 1 1372 0
 2258 0008 7047     		bx	lr
 2259              		.cfi_endproc
 2260              	.LFE167:
 2262              		.section	.text.HAL_RTCEx_SetSmoothCalib,"ax",%progbits
 2263              		.align	1
 2264              		.global	HAL_RTCEx_SetSmoothCalib
 2265              		.syntax unified
 2266              		.thumb
 2267              		.thumb_func
 2268              		.fpu fpv5-sp-d16
 2270              	HAL_RTCEx_SetSmoothCalib:
 2271              	.LFB168:
1373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
1375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Sets the Smooth calibration parameters.
1376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
1377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
1378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  SmoothCalibPeriod Select the Smooth Calibration Period.
1379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *          This parameter can be can be one of the following values :
1380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *             @arg RTC_SMOOTHCALIB_PERIOD_32SEC: The smooth calibration period is 32s.
1381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *             @arg RTC_SMOOTHCALIB_PERIOD_16SEC: The smooth calibration period is 16s.
1382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *             @arg RTC_SMOOTHCALIB_PERIOD_8SEC: The smooth calibration period is 8s.
1383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  SmoothCalibPlusPulses Select to Set or reset the CALP bit.
1384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values:
1385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *             @arg RTC_SMOOTHCALIB_PLUSPULSES_SET: Add one RTCCLK pulses every 2*11 pulses.
1386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *             @arg RTC_SMOOTHCALIB_PLUSPULSES_RESET: No RTCCLK pulses are added.
1387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  SmouthCalibMinusPulsesValue Select the value of CALM[80] bits.
1388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *          This parameter can be one any value from 0 to 0x000001FF.
1389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @note   To deactivate the smooth calibration, the field SmoothCalibPlusPulses
1390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *         must be equal to SMOOTHCALIB_PLUSPULSES_RESET and the field
1391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *         SmouthCalibMinusPulsesValue must be equal to 0.
1392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval HAL status
1393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
1394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetSmoothCalib(RTC_HandleTypeDef* hrtc, uint32_t SmoothCalibPeriod, uin
1395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 2272              		.loc 1 1395 0
 2273              		.cfi_startproc
 2274              		@ args = 0, pretend = 0, frame = 0
 2275              		@ frame_needed = 0, uses_anonymous_args = 0
 2276              	.LVL151:
 2277 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2278              	.LCFI30:
 2279              		.cfi_def_cfa_offset 24
 2280              		.cfi_offset 4, -24
 2281              		.cfi_offset 5, -20
 2282              		.cfi_offset 6, -16
 2283              		.cfi_offset 7, -12
 2284              		.cfi_offset 8, -8
 2285              		.cfi_offset 14, -4
 2286              	.LVL152:
1396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   uint32_t tickstart = 0;
1397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Check the parameters */
ARM GAS  /tmp/ccgdwFG7.s 			page 66


1399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_SMOOTH_CALIB_PERIOD(SmoothCalibPeriod));
1400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_SMOOTH_CALIB_PLUS(SmoothCalibPlusPulses));
1401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_SMOOTH_CALIB_MINUS(SmouthCalibMinusPulsesValue));
1402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Locked */
1404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 2287              		.loc 1 1404 0
 2288 0004 047F     		ldrb	r4, [r0, #28]	@ zero_extendqisi2
 2289 0006 012C     		cmp	r4, #1
 2290 0008 36D0     		beq	.L184
 2291 000a 1E46     		mov	r6, r3
 2292 000c 1746     		mov	r7, r2
 2293 000e 0D46     		mov	r5, r1
 2294 0010 0446     		mov	r4, r0
 2295              		.loc 1 1404 0 is_stmt 0 discriminator 2
 2296 0012 0123     		movs	r3, #1
 2297              	.LVL153:
 2298 0014 0377     		strb	r3, [r0, #28]
1405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 2299              		.loc 1 1406 0 is_stmt 1 discriminator 2
 2300 0016 0223     		movs	r3, #2
 2301 0018 4377     		strb	r3, [r0, #29]
1407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
1409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 2302              		.loc 1 1409 0 discriminator 2
 2303 001a 0368     		ldr	r3, [r0]
 2304 001c CA22     		movs	r2, #202
 2305              	.LVL154:
 2306 001e 5A62     		str	r2, [r3, #36]
 2307 0020 0368     		ldr	r3, [r0]
 2308 0022 5322     		movs	r2, #83
 2309 0024 5A62     		str	r2, [r3, #36]
1410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* check if a calibration is pending*/
1412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   if((hrtc->Instance->ISR & RTC_ISR_RECALPF) != RESET)
 2310              		.loc 1 1412 0 discriminator 2
 2311 0026 0368     		ldr	r3, [r0]
 2312 0028 DB68     		ldr	r3, [r3, #12]
 2313 002a 13F4803F 		tst	r3, #65536
 2314 002e 0CD1     		bne	.L186
 2315              	.LVL155:
 2316              	.L181:
1413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
1414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Get tick */
1415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   tickstart = HAL_GetTick();
1416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* check if a calibration is pending*/
1418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     while((hrtc->Instance->ISR & RTC_ISR_RECALPF) != RESET)
1419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
1420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       if((HAL_GetTick() - tickstart ) > RTC_TIMEOUT_VALUE)
1421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       {
1422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         /* Enable the write protection for RTC registers */
1423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
1424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         /* Change RTC state */
ARM GAS  /tmp/ccgdwFG7.s 			page 67


1426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
1427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         /* Process Unlocked */
1429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         __HAL_UNLOCK(hrtc);
1430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
1432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       }
1433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
1434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
1435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Configure the Smooth calibration settings */
1437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->Instance->CALR = (uint32_t)((uint32_t)SmoothCalibPeriod | (uint32_t)SmoothCalibPlusPulses |
 2317              		.loc 1 1437 0
 2318 0030 3D43     		orrs	r5, r5, r7
 2319              	.LVL156:
 2320 0032 2368     		ldr	r3, [r4]
 2321 0034 3543     		orrs	r5, r5, r6
 2322 0036 DD63     		str	r5, [r3, #60]
1438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
1440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 2323              		.loc 1 1440 0
 2324 0038 2368     		ldr	r3, [r4]
 2325 003a FF22     		movs	r2, #255
 2326 003c 5A62     		str	r2, [r3, #36]
1441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Change RTC state */
1443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 2327              		.loc 1 1443 0
 2328 003e 0123     		movs	r3, #1
 2329 0040 6377     		strb	r3, [r4, #29]
1444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Unlocked */
1446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 2330              		.loc 1 1446 0
 2331 0042 0020     		movs	r0, #0
 2332 0044 2077     		strb	r0, [r4, #28]
 2333              	.LVL157:
 2334              	.L180:
1447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return HAL_OK;
1449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 2335              		.loc 1 1449 0
 2336 0046 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2337              	.LVL158:
 2338              	.L186:
1415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 2339              		.loc 1 1415 0
 2340 004a FFF7FEFF 		bl	HAL_GetTick
 2341              	.LVL159:
 2342 004e 8046     		mov	r8, r0
 2343              	.LVL160:
 2344              	.L182:
1418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
 2345              		.loc 1 1418 0
 2346 0050 2168     		ldr	r1, [r4]
 2347 0052 C968     		ldr	r1, [r1, #12]
ARM GAS  /tmp/ccgdwFG7.s 			page 68


 2348 0054 11F4803F 		tst	r1, #65536
 2349 0058 EAD0     		beq	.L181
1420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       {
 2350              		.loc 1 1420 0
 2351 005a FFF7FEFF 		bl	HAL_GetTick
 2352              	.LVL161:
 2353 005e A0EB0800 		sub	r0, r0, r8
 2354 0062 B0F57A7F 		cmp	r0, #1000
 2355 0066 F3D9     		bls	.L182
1423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 2356              		.loc 1 1423 0
 2357 0068 2368     		ldr	r3, [r4]
 2358 006a FF22     		movs	r2, #255
 2359 006c 5A62     		str	r2, [r3, #36]
1426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 2360              		.loc 1 1426 0
 2361 006e 0320     		movs	r0, #3
 2362 0070 6077     		strb	r0, [r4, #29]
1429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 2363              		.loc 1 1429 0
 2364 0072 0023     		movs	r3, #0
 2365 0074 2377     		strb	r3, [r4, #28]
1431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       }
 2366              		.loc 1 1431 0
 2367 0076 E6E7     		b	.L180
 2368              	.LVL162:
 2369              	.L184:
1404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 2370              		.loc 1 1404 0
 2371 0078 0220     		movs	r0, #2
 2372              	.LVL163:
 2373 007a E4E7     		b	.L180
 2374              		.cfi_endproc
 2375              	.LFE168:
 2377              		.section	.text.HAL_RTCEx_SetSynchroShift,"ax",%progbits
 2378              		.align	1
 2379              		.global	HAL_RTCEx_SetSynchroShift
 2380              		.syntax unified
 2381              		.thumb
 2382              		.thumb_func
 2383              		.fpu fpv5-sp-d16
 2385              	HAL_RTCEx_SetSynchroShift:
 2386              	.LFB169:
1450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
1452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Configures the Synchronization Shift Control Settings.
1453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @note   When REFCKON is set, firmware must not write to Shift control register.
1454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
1455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
1456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  ShiftAdd1S Select to add or not 1 second to the time calendar.
1457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values :
1458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *             @arg RTC_SHIFTADD1S_SET: Add one second to the clock calendar.
1459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *             @arg RTC_SHIFTADD1S_RESET: No effect.
1460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  ShiftSubFS Select the number of Second Fractions to substitute.
1461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *          This parameter can be one any value from 0 to 0x7FFF.
1462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval HAL status
1463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
ARM GAS  /tmp/ccgdwFG7.s 			page 69


1464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetSynchroShift(RTC_HandleTypeDef* hrtc, uint32_t ShiftAdd1S, uint32_t 
1465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 2387              		.loc 1 1465 0
 2388              		.cfi_startproc
 2389              		@ args = 0, pretend = 0, frame = 0
 2390              		@ frame_needed = 0, uses_anonymous_args = 0
 2391              	.LVL164:
 2392 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2393              	.LCFI31:
 2394              		.cfi_def_cfa_offset 24
 2395              		.cfi_offset 3, -24
 2396              		.cfi_offset 4, -20
 2397              		.cfi_offset 5, -16
 2398              		.cfi_offset 6, -12
 2399              		.cfi_offset 7, -8
 2400              		.cfi_offset 14, -4
 2401              	.LVL165:
1466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   uint32_t tickstart = 0;
1467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Check the parameters */
1469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_SHIFT_ADD1S(ShiftAdd1S));
1470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_SHIFT_SUBFS(ShiftSubFS));
1471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Locked */
1473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 2402              		.loc 1 1473 0
 2403 0002 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
 2404 0004 012B     		cmp	r3, #1
 2405 0006 4BD0     		beq	.L193
 2406 0008 1646     		mov	r6, r2
 2407 000a 0F46     		mov	r7, r1
 2408 000c 0446     		mov	r4, r0
 2409              		.loc 1 1473 0 is_stmt 0 discriminator 2
 2410 000e 0123     		movs	r3, #1
 2411 0010 0377     		strb	r3, [r0, #28]
1474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 2412              		.loc 1 1475 0 is_stmt 1 discriminator 2
 2413 0012 0223     		movs	r3, #2
 2414 0014 4377     		strb	r3, [r0, #29]
1476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
1478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 2415              		.loc 1 1478 0 discriminator 2
 2416 0016 0368     		ldr	r3, [r0]
 2417 0018 CA22     		movs	r2, #202
 2418              	.LVL166:
 2419 001a 5A62     		str	r2, [r3, #36]
 2420 001c 0368     		ldr	r3, [r0]
 2421 001e 5322     		movs	r2, #83
 2422 0020 5A62     		str	r2, [r3, #36]
1479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Get tick */
1481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   tickstart = HAL_GetTick();
 2423              		.loc 1 1481 0 discriminator 2
 2424 0022 FFF7FEFF 		bl	HAL_GetTick
 2425              	.LVL167:
ARM GAS  /tmp/ccgdwFG7.s 			page 70


 2426 0026 0546     		mov	r5, r0
 2427              	.LVL168:
 2428              	.L189:
1482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* Wait until the shift is completed*/
1484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     while((hrtc->Instance->ISR & RTC_ISR_SHPF) != RESET)
 2429              		.loc 1 1484 0
 2430 0028 2368     		ldr	r3, [r4]
 2431 002a D868     		ldr	r0, [r3, #12]
 2432 002c 10F0080F 		tst	r0, #8
 2433 0030 0DD0     		beq	.L195
1485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
1486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       if((HAL_GetTick() - tickstart ) > RTC_TIMEOUT_VALUE)
 2434              		.loc 1 1486 0
 2435 0032 FFF7FEFF 		bl	HAL_GetTick
 2436              	.LVL169:
 2437 0036 401B     		subs	r0, r0, r5
 2438 0038 B0F57A7F 		cmp	r0, #1000
 2439 003c F4D9     		bls	.L189
1487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       {
1488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         /* Enable the write protection for RTC registers */
1489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 2440              		.loc 1 1489 0
 2441 003e 2368     		ldr	r3, [r4]
 2442 0040 FF22     		movs	r2, #255
 2443 0042 5A62     		str	r2, [r3, #36]
1490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 2444              		.loc 1 1491 0
 2445 0044 0320     		movs	r0, #3
 2446 0046 6077     		strb	r0, [r4, #29]
1492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         /* Process Unlocked */
1494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         __HAL_UNLOCK(hrtc);
 2447              		.loc 1 1494 0
 2448 0048 0023     		movs	r3, #0
 2449 004a 2377     		strb	r3, [r4, #28]
 2450              	.LVL170:
 2451              	.L188:
1495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
1497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       }
1498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
1499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* Check if the reference clock detection is disabled */
1501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     if((hrtc->Instance->CR & RTC_CR_REFCKON) == RESET)
1502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
1503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       /* Configure the Shift settings */
1504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       hrtc->Instance->SHIFTR = (uint32_t)(uint32_t)(ShiftSubFS) | (uint32_t)(ShiftAdd1S);
1505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       /* If  RTC_CR_BYPSHAD bit = 0, wait for synchro else this check is not needed */
1507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       if((hrtc->Instance->CR & RTC_CR_BYPSHAD) == RESET)
1508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       {
1509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         if(HAL_RTC_WaitForSynchro(hrtc) != HAL_OK)
1510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         {
1511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****           /* Enable the write protection for RTC registers */
1512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****           __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
ARM GAS  /tmp/ccgdwFG7.s 			page 71


1513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****           hrtc->State = HAL_RTC_STATE_ERROR;
1515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****           /* Process Unlocked */
1517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****           __HAL_UNLOCK(hrtc);
1518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****           return HAL_ERROR;
1520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         }
1521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       }
1522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
1523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     else
1524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
1525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       /* Enable the write protection for RTC registers */
1526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
1527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       /* Change RTC state */
1529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       hrtc->State = HAL_RTC_STATE_ERROR;
1530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       /* Process Unlocked */
1532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       __HAL_UNLOCK(hrtc);
1533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       return HAL_ERROR;
1535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
1536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
1538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
1539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Change RTC state */
1541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
1542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Unlocked */
1544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
1545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return HAL_OK;
1547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 2452              		.loc 1 1547 0
 2453 004c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2454              	.LVL171:
 2455              	.L195:
1501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
 2456              		.loc 1 1501 0
 2457 004e 9A68     		ldr	r2, [r3, #8]
 2458 0050 12F0100F 		tst	r2, #16
 2459 0054 1CD1     		bne	.L191
1504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 2460              		.loc 1 1504 0
 2461 0056 3E43     		orrs	r6, r6, r7
 2462              	.LVL172:
 2463 0058 DE62     		str	r6, [r3, #44]
1507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       {
 2464              		.loc 1 1507 0
 2465 005a 2368     		ldr	r3, [r4]
 2466 005c 9B68     		ldr	r3, [r3, #8]
 2467 005e 13F0200F 		tst	r3, #32
 2468 0062 07D0     		beq	.L196
 2469              	.L192:
1538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
ARM GAS  /tmp/ccgdwFG7.s 			page 72


 2470              		.loc 1 1538 0
 2471 0064 2368     		ldr	r3, [r4]
 2472 0066 FF22     		movs	r2, #255
 2473 0068 5A62     		str	r2, [r3, #36]
1541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 2474              		.loc 1 1541 0
 2475 006a 0123     		movs	r3, #1
 2476 006c 6377     		strb	r3, [r4, #29]
1544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 2477              		.loc 1 1544 0
 2478 006e 0020     		movs	r0, #0
 2479 0070 2077     		strb	r0, [r4, #28]
1546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 2480              		.loc 1 1546 0
 2481 0072 EBE7     		b	.L188
 2482              	.L196:
1509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         {
 2483              		.loc 1 1509 0
 2484 0074 2046     		mov	r0, r4
 2485 0076 FFF7FEFF 		bl	HAL_RTC_WaitForSynchro
 2486              	.LVL173:
 2487 007a 0028     		cmp	r0, #0
 2488 007c F2D0     		beq	.L192
1512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 2489              		.loc 1 1512 0
 2490 007e 2368     		ldr	r3, [r4]
 2491 0080 FF22     		movs	r2, #255
 2492 0082 5A62     		str	r2, [r3, #36]
1514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 2493              		.loc 1 1514 0
 2494 0084 0423     		movs	r3, #4
 2495 0086 6377     		strb	r3, [r4, #29]
1517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 2496              		.loc 1 1517 0
 2497 0088 0023     		movs	r3, #0
 2498 008a 2377     		strb	r3, [r4, #28]
1519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         }
 2499              		.loc 1 1519 0
 2500 008c 0120     		movs	r0, #1
 2501 008e DDE7     		b	.L188
 2502              	.LVL174:
 2503              	.L191:
1526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 2504              		.loc 1 1526 0
 2505 0090 FF22     		movs	r2, #255
 2506 0092 5A62     		str	r2, [r3, #36]
1529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 2507              		.loc 1 1529 0
 2508 0094 0423     		movs	r3, #4
 2509 0096 6377     		strb	r3, [r4, #29]
1532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 2510              		.loc 1 1532 0
 2511 0098 0023     		movs	r3, #0
 2512 009a 2377     		strb	r3, [r4, #28]
1534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
 2513              		.loc 1 1534 0
 2514 009c 0120     		movs	r0, #1
ARM GAS  /tmp/ccgdwFG7.s 			page 73


 2515 009e D5E7     		b	.L188
 2516              	.LVL175:
 2517              	.L193:
1473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 2518              		.loc 1 1473 0
 2519 00a0 0220     		movs	r0, #2
 2520              	.LVL176:
 2521 00a2 D3E7     		b	.L188
 2522              		.cfi_endproc
 2523              	.LFE169:
 2525              		.section	.text.HAL_RTCEx_SetCalibrationOutPut,"ax",%progbits
 2526              		.align	1
 2527              		.global	HAL_RTCEx_SetCalibrationOutPut
 2528              		.syntax unified
 2529              		.thumb
 2530              		.thumb_func
 2531              		.fpu fpv5-sp-d16
 2533              	HAL_RTCEx_SetCalibrationOutPut:
 2534              	.LFB170:
1548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
1550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Configures the Calibration Pinout (RTC_CALIB) Selection (1Hz or 512Hz).
1551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
1552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
1553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  CalibOutput Select the Calibration output Selection .
1554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values:
1555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *             @arg RTC_CALIBOUTPUT_512HZ: A signal has a regular waveform at 512Hz.
1556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *             @arg RTC_CALIBOUTPUT_1HZ: A signal has a regular waveform at 1Hz.
1557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval HAL status
1558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
1559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetCalibrationOutPut(RTC_HandleTypeDef* hrtc, uint32_t CalibOutput)
1560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 2535              		.loc 1 1560 0
 2536              		.cfi_startproc
 2537              		@ args = 0, pretend = 0, frame = 0
 2538              		@ frame_needed = 0, uses_anonymous_args = 0
 2539              		@ link register save eliminated.
 2540              	.LVL177:
1561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Check the parameters */
1562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_CALIB_OUTPUT(CalibOutput));
1563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Locked */
1565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 2541              		.loc 1 1565 0
 2542 0000 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
 2543 0002 012B     		cmp	r3, #1
 2544 0004 22D0     		beq	.L199
1560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Check the parameters */
 2545              		.loc 1 1560 0 discriminator 2
 2546 0006 10B4     		push	{r4}
 2547              	.LCFI32:
 2548              		.cfi_def_cfa_offset 4
 2549              		.cfi_offset 4, -4
 2550              		.loc 1 1565 0 discriminator 2
 2551 0008 0122     		movs	r2, #1
 2552 000a 0277     		strb	r2, [r0, #28]
1566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
ARM GAS  /tmp/ccgdwFG7.s 			page 74


1567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 2553              		.loc 1 1567 0 discriminator 2
 2554 000c 0223     		movs	r3, #2
 2555 000e 4377     		strb	r3, [r0, #29]
1568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
1570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 2556              		.loc 1 1570 0 discriminator 2
 2557 0010 0368     		ldr	r3, [r0]
 2558 0012 CA24     		movs	r4, #202
 2559 0014 5C62     		str	r4, [r3, #36]
 2560 0016 0368     		ldr	r3, [r0]
 2561 0018 5324     		movs	r4, #83
 2562 001a 5C62     		str	r4, [r3, #36]
1571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Clear flags before config */
1573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->Instance->CR &= (uint32_t)~RTC_CR_COSEL;
 2563              		.loc 1 1573 0 discriminator 2
 2564 001c 0468     		ldr	r4, [r0]
 2565 001e A368     		ldr	r3, [r4, #8]
 2566 0020 23F40023 		bic	r3, r3, #524288
 2567 0024 A360     		str	r3, [r4, #8]
1574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Configure the RTC_CR register */
1576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->Instance->CR |= (uint32_t)CalibOutput;
 2568              		.loc 1 1576 0 discriminator 2
 2569 0026 0468     		ldr	r4, [r0]
 2570 0028 A368     		ldr	r3, [r4, #8]
 2571 002a 1943     		orrs	r1, r1, r3
 2572              	.LVL178:
 2573 002c A160     		str	r1, [r4, #8]
1577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_CALIBRATION_OUTPUT_ENABLE(hrtc);
 2574              		.loc 1 1578 0 discriminator 2
 2575 002e 0168     		ldr	r1, [r0]
 2576 0030 8B68     		ldr	r3, [r1, #8]
 2577 0032 43F40003 		orr	r3, r3, #8388608
 2578 0036 8B60     		str	r3, [r1, #8]
1579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
1581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 2579              		.loc 1 1581 0 discriminator 2
 2580 0038 0368     		ldr	r3, [r0]
 2581 003a FF21     		movs	r1, #255
 2582 003c 5962     		str	r1, [r3, #36]
1582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Change RTC state */
1584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 2583              		.loc 1 1584 0 discriminator 2
 2584 003e 4277     		strb	r2, [r0, #29]
1585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Unlocked */
1587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 2585              		.loc 1 1587 0 discriminator 2
 2586 0040 0023     		movs	r3, #0
 2587 0042 0377     		strb	r3, [r0, #28]
1588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
ARM GAS  /tmp/ccgdwFG7.s 			page 75


1589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return HAL_OK;
 2588              		.loc 1 1589 0 discriminator 2
 2589 0044 1846     		mov	r0, r3
 2590              	.LVL179:
1590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 2591              		.loc 1 1590 0 discriminator 2
 2592 0046 5DF8044B 		ldr	r4, [sp], #4
 2593              	.LCFI33:
 2594              		.cfi_restore 4
 2595              		.cfi_def_cfa_offset 0
 2596 004a 7047     		bx	lr
 2597              	.LVL180:
 2598              	.L199:
1565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 2599              		.loc 1 1565 0
 2600 004c 0220     		movs	r0, #2
 2601              	.LVL181:
 2602              		.loc 1 1590 0
 2603 004e 7047     		bx	lr
 2604              		.cfi_endproc
 2605              	.LFE170:
 2607              		.section	.text.HAL_RTCEx_DeactivateCalibrationOutPut,"ax",%progbits
 2608              		.align	1
 2609              		.global	HAL_RTCEx_DeactivateCalibrationOutPut
 2610              		.syntax unified
 2611              		.thumb
 2612              		.thumb_func
 2613              		.fpu fpv5-sp-d16
 2615              	HAL_RTCEx_DeactivateCalibrationOutPut:
 2616              	.LFB171:
1591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
1593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Deactivates the Calibration Pinout (RTC_CALIB) Selection (1Hz or 512Hz).
1594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
1595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
1596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval HAL status
1597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
1598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_DeactivateCalibrationOutPut(RTC_HandleTypeDef* hrtc)
1599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 2617              		.loc 1 1599 0
 2618              		.cfi_startproc
 2619              		@ args = 0, pretend = 0, frame = 0
 2620              		@ frame_needed = 0, uses_anonymous_args = 0
 2621              		@ link register save eliminated.
 2622              	.LVL182:
1600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Locked */
1601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 2623              		.loc 1 1601 0
 2624 0000 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
 2625 0002 012B     		cmp	r3, #1
 2626 0004 16D0     		beq	.L206
 2627              		.loc 1 1601 0 is_stmt 0 discriminator 2
 2628 0006 0122     		movs	r2, #1
 2629 0008 0277     		strb	r2, [r0, #28]
1602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 2630              		.loc 1 1603 0 is_stmt 1 discriminator 2
ARM GAS  /tmp/ccgdwFG7.s 			page 76


 2631 000a 0223     		movs	r3, #2
 2632 000c 4377     		strb	r3, [r0, #29]
1604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
1606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 2633              		.loc 1 1606 0 discriminator 2
 2634 000e 0368     		ldr	r3, [r0]
 2635 0010 CA21     		movs	r1, #202
 2636 0012 5962     		str	r1, [r3, #36]
 2637 0014 0368     		ldr	r3, [r0]
 2638 0016 5321     		movs	r1, #83
 2639 0018 5962     		str	r1, [r3, #36]
1607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_CALIBRATION_OUTPUT_DISABLE(hrtc);
 2640              		.loc 1 1608 0 discriminator 2
 2641 001a 0168     		ldr	r1, [r0]
 2642 001c 8B68     		ldr	r3, [r1, #8]
 2643 001e 23F40003 		bic	r3, r3, #8388608
 2644 0022 8B60     		str	r3, [r1, #8]
1609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
1611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 2645              		.loc 1 1611 0 discriminator 2
 2646 0024 0368     		ldr	r3, [r0]
 2647 0026 FF21     		movs	r1, #255
 2648 0028 5962     		str	r1, [r3, #36]
1612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Change RTC state */
1614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 2649              		.loc 1 1614 0 discriminator 2
 2650 002a 4277     		strb	r2, [r0, #29]
1615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Unlocked */
1617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 2651              		.loc 1 1617 0 discriminator 2
 2652 002c 0023     		movs	r3, #0
 2653 002e 0377     		strb	r3, [r0, #28]
1618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return HAL_OK;
 2654              		.loc 1 1619 0 discriminator 2
 2655 0030 1846     		mov	r0, r3
 2656              	.LVL183:
 2657 0032 7047     		bx	lr
 2658              	.LVL184:
 2659              	.L206:
1601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 2660              		.loc 1 1601 0
 2661 0034 0220     		movs	r0, #2
 2662              	.LVL185:
1620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 2663              		.loc 1 1620 0
 2664 0036 7047     		bx	lr
 2665              		.cfi_endproc
 2666              	.LFE171:
 2668              		.section	.text.HAL_RTCEx_SetRefClock,"ax",%progbits
 2669              		.align	1
 2670              		.global	HAL_RTCEx_SetRefClock
ARM GAS  /tmp/ccgdwFG7.s 			page 77


 2671              		.syntax unified
 2672              		.thumb
 2673              		.thumb_func
 2674              		.fpu fpv5-sp-d16
 2676              	HAL_RTCEx_SetRefClock:
 2677              	.LFB172:
1621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
1623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Enables the RTC reference clock detection.
1624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
1625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
1626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval HAL status
1627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
1628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetRefClock(RTC_HandleTypeDef* hrtc)
1629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 2678              		.loc 1 1629 0
 2679              		.cfi_startproc
 2680              		@ args = 0, pretend = 0, frame = 0
 2681              		@ frame_needed = 0, uses_anonymous_args = 0
 2682              	.LVL186:
1630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Locked */
1631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 2683              		.loc 1 1631 0
 2684 0000 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
 2685 0002 012B     		cmp	r3, #1
 2686 0004 2BD0     		beq	.L210
1629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Locked */
 2687              		.loc 1 1629 0 discriminator 2
 2688 0006 10B5     		push	{r4, lr}
 2689              	.LCFI34:
 2690              		.cfi_def_cfa_offset 8
 2691              		.cfi_offset 4, -8
 2692              		.cfi_offset 14, -4
 2693 0008 0446     		mov	r4, r0
 2694              		.loc 1 1631 0 discriminator 2
 2695 000a 0123     		movs	r3, #1
 2696 000c 0377     		strb	r3, [r0, #28]
1632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 2697              		.loc 1 1633 0 discriminator 2
 2698 000e 0223     		movs	r3, #2
 2699 0010 4377     		strb	r3, [r0, #29]
1634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
1636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 2700              		.loc 1 1636 0 discriminator 2
 2701 0012 0368     		ldr	r3, [r0]
 2702 0014 CA22     		movs	r2, #202
 2703 0016 5A62     		str	r2, [r3, #36]
 2704 0018 0368     		ldr	r3, [r0]
 2705 001a 5322     		movs	r2, #83
 2706 001c 5A62     		str	r2, [r3, #36]
1637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Set Initialization mode */
1639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   if(RTC_EnterInitMode(hrtc) != HAL_OK)
 2707              		.loc 1 1639 0 discriminator 2
 2708 001e FFF7FEFF 		bl	RTC_EnterInitMode
ARM GAS  /tmp/ccgdwFG7.s 			page 78


 2709              	.LVL187:
 2710 0022 0346     		mov	r3, r0
 2711 0024 90B9     		cbnz	r0, .L215
1640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
1641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* Enable the write protection for RTC registers */
1642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
1643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* Set RTC state*/
1645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     hrtc->State = HAL_RTC_STATE_ERROR;
1646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* Process Unlocked */
1648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     __HAL_UNLOCK(hrtc);
1649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     return HAL_ERROR;
1651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
1652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   else
1653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
1654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     __HAL_RTC_CLOCKREF_DETECTION_ENABLE(hrtc);
 2712              		.loc 1 1654 0
 2713 0026 2168     		ldr	r1, [r4]
 2714 0028 8A68     		ldr	r2, [r1, #8]
 2715 002a 42F01002 		orr	r2, r2, #16
 2716 002e 8A60     		str	r2, [r1, #8]
1655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* Exit Initialization mode */
1657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     hrtc->Instance->ISR &= (uint32_t)~RTC_ISR_INIT;
 2717              		.loc 1 1657 0
 2718 0030 2168     		ldr	r1, [r4]
 2719 0032 CA68     		ldr	r2, [r1, #12]
 2720 0034 22F08002 		bic	r2, r2, #128
 2721 0038 CA60     		str	r2, [r1, #12]
1658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
1659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
1661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 2722              		.loc 1 1661 0
 2723 003a 2268     		ldr	r2, [r4]
 2724 003c FF21     		movs	r1, #255
 2725 003e 5162     		str	r1, [r2, #36]
1662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****    /* Change RTC state */
1664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 2726              		.loc 1 1664 0
 2727 0040 0122     		movs	r2, #1
 2728 0042 6277     		strb	r2, [r4, #29]
1665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Unlocked */
1667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 2729              		.loc 1 1667 0
 2730 0044 0022     		movs	r2, #0
 2731 0046 2277     		strb	r2, [r4, #28]
 2732              	.L208:
1668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return HAL_OK;
1670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 2733              		.loc 1 1670 0
 2734 0048 1846     		mov	r0, r3
ARM GAS  /tmp/ccgdwFG7.s 			page 79


 2735 004a 10BD     		pop	{r4, pc}
 2736              	.LVL188:
 2737              	.L215:
1642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 2738              		.loc 1 1642 0
 2739 004c 2368     		ldr	r3, [r4]
 2740 004e FF22     		movs	r2, #255
 2741 0050 5A62     		str	r2, [r3, #36]
1645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 2742              		.loc 1 1645 0
 2743 0052 0423     		movs	r3, #4
 2744 0054 6377     		strb	r3, [r4, #29]
1648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 2745              		.loc 1 1648 0
 2746 0056 0023     		movs	r3, #0
 2747 0058 2377     		strb	r3, [r4, #28]
1650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
 2748              		.loc 1 1650 0
 2749 005a 0123     		movs	r3, #1
 2750 005c F4E7     		b	.L208
 2751              	.LVL189:
 2752              	.L210:
 2753              	.LCFI35:
 2754              		.cfi_def_cfa_offset 0
 2755              		.cfi_restore 4
 2756              		.cfi_restore 14
1631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 2757              		.loc 1 1631 0
 2758 005e 0223     		movs	r3, #2
 2759              		.loc 1 1670 0
 2760 0060 1846     		mov	r0, r3
 2761              	.LVL190:
 2762 0062 7047     		bx	lr
 2763              		.cfi_endproc
 2764              	.LFE172:
 2766              		.section	.text.HAL_RTCEx_DeactivateRefClock,"ax",%progbits
 2767              		.align	1
 2768              		.global	HAL_RTCEx_DeactivateRefClock
 2769              		.syntax unified
 2770              		.thumb
 2771              		.thumb_func
 2772              		.fpu fpv5-sp-d16
 2774              	HAL_RTCEx_DeactivateRefClock:
 2775              	.LFB173:
1671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
1673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Disable the RTC reference clock detection.
1674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
1675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
1676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval HAL status
1677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
1678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_DeactivateRefClock(RTC_HandleTypeDef* hrtc)
1679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 2776              		.loc 1 1679 0
 2777              		.cfi_startproc
 2778              		@ args = 0, pretend = 0, frame = 0
 2779              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccgdwFG7.s 			page 80


 2780              	.LVL191:
1680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Locked */
1681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 2781              		.loc 1 1681 0
 2782 0000 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
 2783 0002 012B     		cmp	r3, #1
 2784 0004 2BD0     		beq	.L219
1679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Locked */
 2785              		.loc 1 1679 0 discriminator 2
 2786 0006 10B5     		push	{r4, lr}
 2787              	.LCFI36:
 2788              		.cfi_def_cfa_offset 8
 2789              		.cfi_offset 4, -8
 2790              		.cfi_offset 14, -4
 2791 0008 0446     		mov	r4, r0
 2792              		.loc 1 1681 0 discriminator 2
 2793 000a 0123     		movs	r3, #1
 2794 000c 0377     		strb	r3, [r0, #28]
1682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 2795              		.loc 1 1683 0 discriminator 2
 2796 000e 0223     		movs	r3, #2
 2797 0010 4377     		strb	r3, [r0, #29]
1684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
1686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 2798              		.loc 1 1686 0 discriminator 2
 2799 0012 0368     		ldr	r3, [r0]
 2800 0014 CA22     		movs	r2, #202
 2801 0016 5A62     		str	r2, [r3, #36]
 2802 0018 0368     		ldr	r3, [r0]
 2803 001a 5322     		movs	r2, #83
 2804 001c 5A62     		str	r2, [r3, #36]
1687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Set Initialization mode */
1689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   if(RTC_EnterInitMode(hrtc) != HAL_OK)
 2805              		.loc 1 1689 0 discriminator 2
 2806 001e FFF7FEFF 		bl	RTC_EnterInitMode
 2807              	.LVL192:
 2808 0022 0346     		mov	r3, r0
 2809 0024 90B9     		cbnz	r0, .L224
1690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
1691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* Enable the write protection for RTC registers */
1692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
1693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* Set RTC state*/
1695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     hrtc->State = HAL_RTC_STATE_ERROR;
1696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* Process Unlocked */
1698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     __HAL_UNLOCK(hrtc);
1699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     return HAL_ERROR;
1701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
1702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   else
1703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
1704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     __HAL_RTC_CLOCKREF_DETECTION_DISABLE(hrtc);
 2810              		.loc 1 1704 0
ARM GAS  /tmp/ccgdwFG7.s 			page 81


 2811 0026 2168     		ldr	r1, [r4]
 2812 0028 8A68     		ldr	r2, [r1, #8]
 2813 002a 22F01002 		bic	r2, r2, #16
 2814 002e 8A60     		str	r2, [r1, #8]
1705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* Exit Initialization mode */
1707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     hrtc->Instance->ISR &= (uint32_t)~RTC_ISR_INIT;
 2815              		.loc 1 1707 0
 2816 0030 2168     		ldr	r1, [r4]
 2817 0032 CA68     		ldr	r2, [r1, #12]
 2818 0034 22F08002 		bic	r2, r2, #128
 2819 0038 CA60     		str	r2, [r1, #12]
1708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
1709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
1711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 2820              		.loc 1 1711 0
 2821 003a 2268     		ldr	r2, [r4]
 2822 003c FF21     		movs	r1, #255
 2823 003e 5162     		str	r1, [r2, #36]
1712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Change RTC state */
1714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 2824              		.loc 1 1714 0
 2825 0040 0122     		movs	r2, #1
 2826 0042 6277     		strb	r2, [r4, #29]
1715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Unlocked */
1717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 2827              		.loc 1 1717 0
 2828 0044 0022     		movs	r2, #0
 2829 0046 2277     		strb	r2, [r4, #28]
 2830              	.L217:
1718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return HAL_OK;
1720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 2831              		.loc 1 1720 0
 2832 0048 1846     		mov	r0, r3
 2833 004a 10BD     		pop	{r4, pc}
 2834              	.LVL193:
 2835              	.L224:
1692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 2836              		.loc 1 1692 0
 2837 004c 2368     		ldr	r3, [r4]
 2838 004e FF22     		movs	r2, #255
 2839 0050 5A62     		str	r2, [r3, #36]
1695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 2840              		.loc 1 1695 0
 2841 0052 0423     		movs	r3, #4
 2842 0054 6377     		strb	r3, [r4, #29]
1698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 2843              		.loc 1 1698 0
 2844 0056 0023     		movs	r3, #0
 2845 0058 2377     		strb	r3, [r4, #28]
1700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
 2846              		.loc 1 1700 0
 2847 005a 0123     		movs	r3, #1
ARM GAS  /tmp/ccgdwFG7.s 			page 82


 2848 005c F4E7     		b	.L217
 2849              	.LVL194:
 2850              	.L219:
 2851              	.LCFI37:
 2852              		.cfi_def_cfa_offset 0
 2853              		.cfi_restore 4
 2854              		.cfi_restore 14
1681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 2855              		.loc 1 1681 0
 2856 005e 0223     		movs	r3, #2
 2857              		.loc 1 1720 0
 2858 0060 1846     		mov	r0, r3
 2859              	.LVL195:
 2860 0062 7047     		bx	lr
 2861              		.cfi_endproc
 2862              	.LFE173:
 2864              		.section	.text.HAL_RTCEx_EnableBypassShadow,"ax",%progbits
 2865              		.align	1
 2866              		.global	HAL_RTCEx_EnableBypassShadow
 2867              		.syntax unified
 2868              		.thumb
 2869              		.thumb_func
 2870              		.fpu fpv5-sp-d16
 2872              	HAL_RTCEx_EnableBypassShadow:
 2873              	.LFB174:
1721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
1723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Enables the Bypass Shadow feature.
1724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
1725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
1726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @note   When the Bypass Shadow is enabled the calendar value are taken
1727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *         directly from the Calendar counter.
1728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval HAL status
1729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
1730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_EnableBypassShadow(RTC_HandleTypeDef* hrtc)
1731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 2874              		.loc 1 1731 0
 2875              		.cfi_startproc
 2876              		@ args = 0, pretend = 0, frame = 0
 2877              		@ frame_needed = 0, uses_anonymous_args = 0
 2878              		@ link register save eliminated.
 2879              	.LVL196:
1732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Locked */
1733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 2880              		.loc 1 1733 0
 2881 0000 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
 2882 0002 012B     		cmp	r3, #1
 2883 0004 16D0     		beq	.L227
 2884              		.loc 1 1733 0 is_stmt 0 discriminator 2
 2885 0006 0122     		movs	r2, #1
 2886 0008 0277     		strb	r2, [r0, #28]
1734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 2887              		.loc 1 1735 0 is_stmt 1 discriminator 2
 2888 000a 0223     		movs	r3, #2
 2889 000c 4377     		strb	r3, [r0, #29]
1736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
ARM GAS  /tmp/ccgdwFG7.s 			page 83


1737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
1738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 2890              		.loc 1 1738 0 discriminator 2
 2891 000e 0368     		ldr	r3, [r0]
 2892 0010 CA21     		movs	r1, #202
 2893 0012 5962     		str	r1, [r3, #36]
 2894 0014 0368     		ldr	r3, [r0]
 2895 0016 5321     		movs	r1, #83
 2896 0018 5962     		str	r1, [r3, #36]
1739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Set the BYPSHAD bit */
1741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->Instance->CR |= (uint8_t)RTC_CR_BYPSHAD;
 2897              		.loc 1 1741 0 discriminator 2
 2898 001a 0168     		ldr	r1, [r0]
 2899 001c 8B68     		ldr	r3, [r1, #8]
 2900 001e 43F02003 		orr	r3, r3, #32
 2901 0022 8B60     		str	r3, [r1, #8]
1742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
1744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 2902              		.loc 1 1744 0 discriminator 2
 2903 0024 0368     		ldr	r3, [r0]
 2904 0026 FF21     		movs	r1, #255
 2905 0028 5962     		str	r1, [r3, #36]
1745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Change RTC state */
1747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 2906              		.loc 1 1747 0 discriminator 2
 2907 002a 4277     		strb	r2, [r0, #29]
1748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Unlocked */
1750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 2908              		.loc 1 1750 0 discriminator 2
 2909 002c 0023     		movs	r3, #0
 2910 002e 0377     		strb	r3, [r0, #28]
1751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return HAL_OK;
 2911              		.loc 1 1752 0 discriminator 2
 2912 0030 1846     		mov	r0, r3
 2913              	.LVL197:
 2914 0032 7047     		bx	lr
 2915              	.LVL198:
 2916              	.L227:
1733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 2917              		.loc 1 1733 0
 2918 0034 0220     		movs	r0, #2
 2919              	.LVL199:
1753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 2920              		.loc 1 1753 0
 2921 0036 7047     		bx	lr
 2922              		.cfi_endproc
 2923              	.LFE174:
 2925              		.section	.text.HAL_RTCEx_DisableBypassShadow,"ax",%progbits
 2926              		.align	1
 2927              		.global	HAL_RTCEx_DisableBypassShadow
 2928              		.syntax unified
 2929              		.thumb
ARM GAS  /tmp/ccgdwFG7.s 			page 84


 2930              		.thumb_func
 2931              		.fpu fpv5-sp-d16
 2933              	HAL_RTCEx_DisableBypassShadow:
 2934              	.LFB175:
1754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
1756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Disables the Bypass Shadow feature.
1757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
1758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
1759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @note   When the Bypass Shadow is enabled the calendar value are taken
1760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *         directly from the Calendar counter.
1761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval HAL status
1762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
1763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_DisableBypassShadow(RTC_HandleTypeDef* hrtc)
1764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 2935              		.loc 1 1764 0
 2936              		.cfi_startproc
 2937              		@ args = 0, pretend = 0, frame = 0
 2938              		@ frame_needed = 0, uses_anonymous_args = 0
 2939              		@ link register save eliminated.
 2940              	.LVL200:
1765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Locked */
1766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 2941              		.loc 1 1766 0
 2942 0000 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
 2943 0002 012B     		cmp	r3, #1
 2944 0004 16D0     		beq	.L230
 2945              		.loc 1 1766 0 is_stmt 0 discriminator 2
 2946 0006 0122     		movs	r2, #1
 2947 0008 0277     		strb	r2, [r0, #28]
1767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 2948              		.loc 1 1768 0 is_stmt 1 discriminator 2
 2949 000a 0223     		movs	r3, #2
 2950 000c 4377     		strb	r3, [r0, #29]
1769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
1771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 2951              		.loc 1 1771 0 discriminator 2
 2952 000e 0368     		ldr	r3, [r0]
 2953 0010 CA21     		movs	r1, #202
 2954 0012 5962     		str	r1, [r3, #36]
 2955 0014 0368     		ldr	r3, [r0]
 2956 0016 5321     		movs	r1, #83
 2957 0018 5962     		str	r1, [r3, #36]
1772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Reset the BYPSHAD bit */
1774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->Instance->CR &= (uint8_t)~RTC_CR_BYPSHAD;
 2958              		.loc 1 1774 0 discriminator 2
 2959 001a 0168     		ldr	r1, [r0]
 2960 001c 8B68     		ldr	r3, [r1, #8]
 2961 001e 03F0DF03 		and	r3, r3, #223
 2962 0022 8B60     		str	r3, [r1, #8]
1775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
1777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 2963              		.loc 1 1777 0 discriminator 2
ARM GAS  /tmp/ccgdwFG7.s 			page 85


 2964 0024 0368     		ldr	r3, [r0]
 2965 0026 FF21     		movs	r1, #255
 2966 0028 5962     		str	r1, [r3, #36]
1778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Change RTC state */
1780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 2967              		.loc 1 1780 0 discriminator 2
 2968 002a 4277     		strb	r2, [r0, #29]
1781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Unlocked */
1783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 2969              		.loc 1 1783 0 discriminator 2
 2970 002c 0023     		movs	r3, #0
 2971 002e 0377     		strb	r3, [r0, #28]
1784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return HAL_OK;
 2972              		.loc 1 1785 0 discriminator 2
 2973 0030 1846     		mov	r0, r3
 2974              	.LVL201:
 2975 0032 7047     		bx	lr
 2976              	.LVL202:
 2977              	.L230:
1766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 2978              		.loc 1 1766 0
 2979 0034 0220     		movs	r0, #2
 2980              	.LVL203:
1786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 2981              		.loc 1 1786 0
 2982 0036 7047     		bx	lr
 2983              		.cfi_endproc
 2984              	.LFE175:
 2986              		.section	.text.HAL_RTCEx_AlarmBEventCallback,"ax",%progbits
 2987              		.align	1
 2988              		.weak	HAL_RTCEx_AlarmBEventCallback
 2989              		.syntax unified
 2990              		.thumb
 2991              		.thumb_func
 2992              		.fpu fpv5-sp-d16
 2994              	HAL_RTCEx_AlarmBEventCallback:
 2995              	.LFB176:
1787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
1789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @}
1790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
1791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /** @defgroup RTCEx_Group4 Extended features functions
1793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****  *  @brief    Extended features functions
1794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****  *
1795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** @verbatim
1796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****  ===============================================================================
1797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****                  ##### Extended features functions #####
1798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****  ===============================================================================
1799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     [..]  This section provides functions allowing to:
1800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       (+) RTC Alram B callback
1801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       (+) RTC Poll for Alarm B request
1802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** @endverbatim
ARM GAS  /tmp/ccgdwFG7.s 			page 86


1804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @{
1805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
1806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
1808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Alarm B callback.
1809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
1810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
1811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval None
1812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
1813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_AlarmBEventCallback(RTC_HandleTypeDef *hrtc)
1814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 2996              		.loc 1 1814 0
 2997              		.cfi_startproc
 2998              		@ args = 0, pretend = 0, frame = 0
 2999              		@ frame_needed = 0, uses_anonymous_args = 0
 3000              		@ link register save eliminated.
 3001              	.LVL204:
1815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   UNUSED(hrtc);
1817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****             the HAL_RTC_AlarmBEventCallback could be implemented in the user file
1820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****    */
1821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 3002              		.loc 1 1821 0
 3003 0000 7047     		bx	lr
 3004              		.cfi_endproc
 3005              	.LFE176:
 3007              		.section	.text.HAL_RTCEx_PollForAlarmBEvent,"ax",%progbits
 3008              		.align	1
 3009              		.global	HAL_RTCEx_PollForAlarmBEvent
 3010              		.syntax unified
 3011              		.thumb
 3012              		.thumb_func
 3013              		.fpu fpv5-sp-d16
 3015              	HAL_RTCEx_PollForAlarmBEvent:
 3016              	.LFB177:
1822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
1824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  This function handles AlarmB Polling request.
1825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
1826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
1827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  Timeout Timeout duration
1828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval HAL status
1829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
1830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_PollForAlarmBEvent(RTC_HandleTypeDef *hrtc, uint32_t Timeout)
1831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 3017              		.loc 1 1831 0
 3018              		.cfi_startproc
 3019              		@ args = 0, pretend = 0, frame = 0
 3020              		@ frame_needed = 0, uses_anonymous_args = 0
 3021              	.LVL205:
 3022 0000 70B5     		push	{r4, r5, r6, lr}
 3023              	.LCFI38:
 3024              		.cfi_def_cfa_offset 16
 3025              		.cfi_offset 4, -16
 3026              		.cfi_offset 5, -12
ARM GAS  /tmp/ccgdwFG7.s 			page 87


 3027              		.cfi_offset 6, -8
 3028              		.cfi_offset 14, -4
 3029 0002 0446     		mov	r4, r0
 3030 0004 0D46     		mov	r5, r1
 3031              	.LVL206:
1832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   uint32_t tickstart = 0;
1833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Get tick */
1835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   tickstart = HAL_GetTick();
 3032              		.loc 1 1835 0
 3033 0006 FFF7FEFF 		bl	HAL_GetTick
 3034              	.LVL207:
 3035 000a 0646     		mov	r6, r0
 3036              	.LVL208:
 3037              	.L234:
1836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   while(__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRBF) == RESET)
 3038              		.loc 1 1837 0
 3039 000c 2368     		ldr	r3, [r4]
 3040 000e DA68     		ldr	r2, [r3, #12]
 3041 0010 12F4007F 		tst	r2, #512
 3042 0014 0BD1     		bne	.L239
1838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
1839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     if(Timeout != HAL_MAX_DELAY)
 3043              		.loc 1 1839 0
 3044 0016 B5F1FF3F 		cmp	r5, #-1
 3045 001a F7D0     		beq	.L234
1840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
1841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       if((Timeout == 0)||((HAL_GetTick() - tickstart ) > Timeout))
 3046              		.loc 1 1841 0
 3047 001c 25B1     		cbz	r5, .L235
 3048              		.loc 1 1841 0 is_stmt 0 discriminator 1
 3049 001e FFF7FEFF 		bl	HAL_GetTick
 3050              	.LVL209:
 3051 0022 801B     		subs	r0, r0, r6
 3052 0024 A842     		cmp	r0, r5
 3053 0026 F1D9     		bls	.L234
 3054              	.L235:
1842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       {
1843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 3055              		.loc 1 1843 0 is_stmt 1
 3056 0028 0320     		movs	r0, #3
 3057 002a 6077     		strb	r0, [r4, #29]
1844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 3058              		.loc 1 1844 0
 3059 002c 07E0     		b	.L236
 3060              	.L239:
1845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       }
1846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
1847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
1848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Clear the Alarm Flag */
1850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_ALARM_CLEAR_FLAG(hrtc, RTC_FLAG_ALRBF);
 3061              		.loc 1 1850 0
 3062 002e DA68     		ldr	r2, [r3, #12]
 3063 0030 D2B2     		uxtb	r2, r2
 3064 0032 62F42072 		orn	r2, r2, #640
ARM GAS  /tmp/ccgdwFG7.s 			page 88


 3065 0036 DA60     		str	r2, [r3, #12]
1851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Change RTC state */
1853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 3066              		.loc 1 1853 0
 3067 0038 0123     		movs	r3, #1
 3068 003a 6377     		strb	r3, [r4, #29]
1854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return HAL_OK;
 3069              		.loc 1 1855 0
 3070 003c 0020     		movs	r0, #0
 3071              	.L236:
1856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 3072              		.loc 1 1856 0
 3073 003e 70BD     		pop	{r4, r5, r6, pc}
 3074              		.cfi_endproc
 3075              	.LFE177:
 3077              		.text
 3078              	.Letext0:
 3079              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 3080              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 3081              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 3082              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 3083              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 3084              		.file 7 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 3085              		.file 8 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 3086              		.file 9 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rtc.h"
 3087              		.file 10 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rtc_ex.h"
 3088              		.file 11 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
ARM GAS  /tmp/ccgdwFG7.s 			page 89


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f7xx_hal_rtc_ex.c
     /tmp/ccgdwFG7.s:18     .text.HAL_RTCEx_SetTimeStamp:0000000000000000 $t
     /tmp/ccgdwFG7.s:25     .text.HAL_RTCEx_SetTimeStamp:0000000000000000 HAL_RTCEx_SetTimeStamp
     /tmp/ccgdwFG7.s:119    .text.HAL_RTCEx_SetTimeStamp_IT:0000000000000000 $t
     /tmp/ccgdwFG7.s:126    .text.HAL_RTCEx_SetTimeStamp_IT:0000000000000000 HAL_RTCEx_SetTimeStamp_IT
     /tmp/ccgdwFG7.s:240    .text.HAL_RTCEx_SetTimeStamp_IT:0000000000000084 $d
     /tmp/ccgdwFG7.s:245    .text.HAL_RTCEx_DeactivateTimeStamp:0000000000000000 $t
     /tmp/ccgdwFG7.s:252    .text.HAL_RTCEx_DeactivateTimeStamp:0000000000000000 HAL_RTCEx_DeactivateTimeStamp
     /tmp/ccgdwFG7.s:326    .text.HAL_RTCEx_DeactivateTimeStamp:0000000000000048 $d
     /tmp/ccgdwFG7.s:331    .text.HAL_RTCEx_SetInternalTimeStamp:0000000000000000 $t
     /tmp/ccgdwFG7.s:338    .text.HAL_RTCEx_SetInternalTimeStamp:0000000000000000 HAL_RTCEx_SetInternalTimeStamp
     /tmp/ccgdwFG7.s:392    .text.HAL_RTCEx_DeactivateInternalTimeStamp:0000000000000000 $t
     /tmp/ccgdwFG7.s:399    .text.HAL_RTCEx_DeactivateInternalTimeStamp:0000000000000000 HAL_RTCEx_DeactivateInternalTimeStamp
     /tmp/ccgdwFG7.s:453    .text.HAL_RTCEx_GetTimeStamp:0000000000000000 $t
     /tmp/ccgdwFG7.s:460    .text.HAL_RTCEx_GetTimeStamp:0000000000000000 HAL_RTCEx_GetTimeStamp
     /tmp/ccgdwFG7.s:572    .text.HAL_RTCEx_GetTimeStamp:0000000000000088 $d
     /tmp/ccgdwFG7.s:578    .text.HAL_RTCEx_SetTamper:0000000000000000 $t
     /tmp/ccgdwFG7.s:585    .text.HAL_RTCEx_SetTamper:0000000000000000 HAL_RTCEx_SetTamper
     /tmp/ccgdwFG7.s:746    .text.HAL_RTCEx_SetTamper:00000000000000cc $d
     /tmp/ccgdwFG7.s:751    .text.HAL_RTCEx_SetTamper_IT:0000000000000000 $t
     /tmp/ccgdwFG7.s:758    .text.HAL_RTCEx_SetTamper_IT:0000000000000000 HAL_RTCEx_SetTamper_IT
     /tmp/ccgdwFG7.s:973    .text.HAL_RTCEx_SetTamper_IT:0000000000000124 $d
     /tmp/ccgdwFG7.s:979    .text.HAL_RTCEx_DeactivateTamper:0000000000000000 $t
     /tmp/ccgdwFG7.s:986    .text.HAL_RTCEx_DeactivateTamper:0000000000000000 HAL_RTCEx_DeactivateTamper
     /tmp/ccgdwFG7.s:1070   .text.HAL_RTCEx_DeactivateTamper:0000000000000060 $d
     /tmp/ccgdwFG7.s:1077   .text.HAL_RTCEx_TimeStampEventCallback:0000000000000000 $t
     /tmp/ccgdwFG7.s:1084   .text.HAL_RTCEx_TimeStampEventCallback:0000000000000000 HAL_RTCEx_TimeStampEventCallback
     /tmp/ccgdwFG7.s:1098   .text.HAL_RTCEx_Tamper1EventCallback:0000000000000000 $t
     /tmp/ccgdwFG7.s:1105   .text.HAL_RTCEx_Tamper1EventCallback:0000000000000000 HAL_RTCEx_Tamper1EventCallback
     /tmp/ccgdwFG7.s:1119   .text.HAL_RTCEx_Tamper2EventCallback:0000000000000000 $t
     /tmp/ccgdwFG7.s:1126   .text.HAL_RTCEx_Tamper2EventCallback:0000000000000000 HAL_RTCEx_Tamper2EventCallback
     /tmp/ccgdwFG7.s:1140   .text.HAL_RTCEx_Tamper3EventCallback:0000000000000000 $t
     /tmp/ccgdwFG7.s:1147   .text.HAL_RTCEx_Tamper3EventCallback:0000000000000000 HAL_RTCEx_Tamper3EventCallback
     /tmp/ccgdwFG7.s:1161   .text.HAL_RTCEx_TamperTimeStampIRQHandler:0000000000000000 $t
     /tmp/ccgdwFG7.s:1168   .text.HAL_RTCEx_TamperTimeStampIRQHandler:0000000000000000 HAL_RTCEx_TamperTimeStampIRQHandler
     /tmp/ccgdwFG7.s:1288   .text.HAL_RTCEx_TamperTimeStampIRQHandler:00000000000000b4 $d
     /tmp/ccgdwFG7.s:1296   .text.HAL_RTCEx_PollForTimeStampEvent:0000000000000000 $t
     /tmp/ccgdwFG7.s:1303   .text.HAL_RTCEx_PollForTimeStampEvent:0000000000000000 HAL_RTCEx_PollForTimeStampEvent
     /tmp/ccgdwFG7.s:1378   .text.HAL_RTCEx_PollForTamper1Event:0000000000000000 $t
     /tmp/ccgdwFG7.s:1385   .text.HAL_RTCEx_PollForTamper1Event:0000000000000000 HAL_RTCEx_PollForTamper1Event
     /tmp/ccgdwFG7.s:1448   .text.HAL_RTCEx_PollForTamper2Event:0000000000000000 $t
     /tmp/ccgdwFG7.s:1455   .text.HAL_RTCEx_PollForTamper2Event:0000000000000000 HAL_RTCEx_PollForTamper2Event
     /tmp/ccgdwFG7.s:1518   .text.HAL_RTCEx_PollForTamper3Event:0000000000000000 $t
     /tmp/ccgdwFG7.s:1525   .text.HAL_RTCEx_PollForTamper3Event:0000000000000000 HAL_RTCEx_PollForTamper3Event
     /tmp/ccgdwFG7.s:1590   .text.HAL_RTCEx_SetWakeUpTimer:0000000000000000 $t
     /tmp/ccgdwFG7.s:1597   .text.HAL_RTCEx_SetWakeUpTimer:0000000000000000 HAL_RTCEx_SetWakeUpTimer
     /tmp/ccgdwFG7.s:1720   .text.HAL_RTCEx_SetWakeUpTimer_IT:0000000000000000 $t
     /tmp/ccgdwFG7.s:1727   .text.HAL_RTCEx_SetWakeUpTimer_IT:0000000000000000 HAL_RTCEx_SetWakeUpTimer_IT
     /tmp/ccgdwFG7.s:1925   .text.HAL_RTCEx_SetWakeUpTimer_IT:0000000000000110 $d
     /tmp/ccgdwFG7.s:1932   .text.HAL_RTCEx_DeactivateWakeUpTimer:0000000000000000 $t
     /tmp/ccgdwFG7.s:1939   .text.HAL_RTCEx_DeactivateWakeUpTimer:0000000000000000 HAL_RTCEx_DeactivateWakeUpTimer
     /tmp/ccgdwFG7.s:2035   .text.HAL_RTCEx_GetWakeUpTimer:0000000000000000 $t
     /tmp/ccgdwFG7.s:2042   .text.HAL_RTCEx_GetWakeUpTimer:0000000000000000 HAL_RTCEx_GetWakeUpTimer
     /tmp/ccgdwFG7.s:2061   .text.HAL_RTCEx_WakeUpTimerEventCallback:0000000000000000 $t
     /tmp/ccgdwFG7.s:2068   .text.HAL_RTCEx_WakeUpTimerEventCallback:0000000000000000 HAL_RTCEx_WakeUpTimerEventCallback
     /tmp/ccgdwFG7.s:2082   .text.HAL_RTCEx_WakeUpTimerIRQHandler:0000000000000000 $t
ARM GAS  /tmp/ccgdwFG7.s 			page 90


     /tmp/ccgdwFG7.s:2089   .text.HAL_RTCEx_WakeUpTimerIRQHandler:0000000000000000 HAL_RTCEx_WakeUpTimerIRQHandler
     /tmp/ccgdwFG7.s:2133   .text.HAL_RTCEx_WakeUpTimerIRQHandler:0000000000000030 $d
     /tmp/ccgdwFG7.s:2138   .text.HAL_RTCEx_PollForWakeUpTimerEvent:0000000000000000 $t
     /tmp/ccgdwFG7.s:2145   .text.HAL_RTCEx_PollForWakeUpTimerEvent:0000000000000000 HAL_RTCEx_PollForWakeUpTimerEvent
     /tmp/ccgdwFG7.s:2208   .text.HAL_RTCEx_BKUPWrite:0000000000000000 $t
     /tmp/ccgdwFG7.s:2215   .text.HAL_RTCEx_BKUPWrite:0000000000000000 HAL_RTCEx_BKUPWrite
     /tmp/ccgdwFG7.s:2235   .text.HAL_RTCEx_BKUPRead:0000000000000000 $t
     /tmp/ccgdwFG7.s:2242   .text.HAL_RTCEx_BKUPRead:0000000000000000 HAL_RTCEx_BKUPRead
     /tmp/ccgdwFG7.s:2263   .text.HAL_RTCEx_SetSmoothCalib:0000000000000000 $t
     /tmp/ccgdwFG7.s:2270   .text.HAL_RTCEx_SetSmoothCalib:0000000000000000 HAL_RTCEx_SetSmoothCalib
     /tmp/ccgdwFG7.s:2378   .text.HAL_RTCEx_SetSynchroShift:0000000000000000 $t
     /tmp/ccgdwFG7.s:2385   .text.HAL_RTCEx_SetSynchroShift:0000000000000000 HAL_RTCEx_SetSynchroShift
     /tmp/ccgdwFG7.s:2526   .text.HAL_RTCEx_SetCalibrationOutPut:0000000000000000 $t
     /tmp/ccgdwFG7.s:2533   .text.HAL_RTCEx_SetCalibrationOutPut:0000000000000000 HAL_RTCEx_SetCalibrationOutPut
     /tmp/ccgdwFG7.s:2608   .text.HAL_RTCEx_DeactivateCalibrationOutPut:0000000000000000 $t
     /tmp/ccgdwFG7.s:2615   .text.HAL_RTCEx_DeactivateCalibrationOutPut:0000000000000000 HAL_RTCEx_DeactivateCalibrationOutPut
     /tmp/ccgdwFG7.s:2669   .text.HAL_RTCEx_SetRefClock:0000000000000000 $t
     /tmp/ccgdwFG7.s:2676   .text.HAL_RTCEx_SetRefClock:0000000000000000 HAL_RTCEx_SetRefClock
     /tmp/ccgdwFG7.s:2767   .text.HAL_RTCEx_DeactivateRefClock:0000000000000000 $t
     /tmp/ccgdwFG7.s:2774   .text.HAL_RTCEx_DeactivateRefClock:0000000000000000 HAL_RTCEx_DeactivateRefClock
     /tmp/ccgdwFG7.s:2865   .text.HAL_RTCEx_EnableBypassShadow:0000000000000000 $t
     /tmp/ccgdwFG7.s:2872   .text.HAL_RTCEx_EnableBypassShadow:0000000000000000 HAL_RTCEx_EnableBypassShadow
     /tmp/ccgdwFG7.s:2926   .text.HAL_RTCEx_DisableBypassShadow:0000000000000000 $t
     /tmp/ccgdwFG7.s:2933   .text.HAL_RTCEx_DisableBypassShadow:0000000000000000 HAL_RTCEx_DisableBypassShadow
     /tmp/ccgdwFG7.s:2987   .text.HAL_RTCEx_AlarmBEventCallback:0000000000000000 $t
     /tmp/ccgdwFG7.s:2994   .text.HAL_RTCEx_AlarmBEventCallback:0000000000000000 HAL_RTCEx_AlarmBEventCallback
     /tmp/ccgdwFG7.s:3008   .text.HAL_RTCEx_PollForAlarmBEvent:0000000000000000 $t
     /tmp/ccgdwFG7.s:3015   .text.HAL_RTCEx_PollForAlarmBEvent:0000000000000000 HAL_RTCEx_PollForAlarmBEvent

UNDEFINED SYMBOLS
RTC_Bcd2ToByte
HAL_GetTick
SystemCoreClock
HAL_RTC_WaitForSynchro
RTC_EnterInitMode
