ARM GAS  /tmp/cc8c22lT.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f7xx_hal_spi.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.SPI_WaitFlagStateUntilTimeout,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-sp-d16
  24              	SPI_WaitFlagStateUntilTimeout:
  25              	.LFB188:
  26              		.file 1 "Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c"
   1:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
   2:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   ******************************************************************************
   3:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @file    stm32f7xx_hal_spi.c
   4:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @author  MCD Application Team
   5:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief   SPI HAL module driver.
   6:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *          functionalities of the Serial Peripheral Interface (SPI) peripheral:
   8:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *           + IO operation functions
  10:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *           + Peripheral Control functions
  11:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *           + Peripheral State functions
  12:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *
  13:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   @verbatim
  14:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   ==============================================================================
  15:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                         ##### How to use this driver #####
  16:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   ==============================================================================
  17:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     [..]
  18:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       The SPI HAL driver can be used as follows:
  19:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
  20:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       (#) Declare a SPI_HandleTypeDef handle structure, for example:
  21:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           SPI_HandleTypeDef  hspi;
  22:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
  23:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       (#)Initialize the SPI low level resources by implementing the HAL_SPI_MspInit() API:
  24:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           (##) Enable the SPIx interface clock
  25:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           (##) SPI pins configuration
  26:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****               (+++) Enable the clock for the SPI GPIOs
  27:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****               (+++) Configure these SPI pins as alternate function push-pull
  28:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           (##) NVIC configuration if you need to use interrupt process
  29:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****               (+++) Configure the SPIx interrupt priority
  30:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****               (+++) Enable the NVIC SPI IRQ handle
  31:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           (##) DMA Configuration if you need to use DMA process
  32:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****               (+++) Declare a DMA_HandleTypeDef handle structure for the transmit or receive Stream
ARM GAS  /tmp/cc8c22lT.s 			page 2


  33:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****               (+++) Enable the DMAx clock
  34:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****               (+++) Configure the DMA handle parameters
  35:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****               (+++) Configure the DMA Tx or Rx Stream/Channel
  36:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****               (+++) Associate the initialized hdma_tx(or _rx)  handle to the hspi DMA Tx or Rx hand
  37:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****               (+++) Configure the priority and enable the NVIC for the transfer complete interrupt 
  38:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
  39:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       (#) Program the Mode, BidirectionalMode , Data size, Baudrate Prescaler, NSS
  40:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           management, Clock polarity and phase, FirstBit and CRC configuration in the hspi Init str
  41:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
  42:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       (#) Initialize the SPI registers by calling the HAL_SPI_Init() API:
  43:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           (++) This API configures also the low level Hardware GPIO, CLOCK, CORTEX...etc)
  44:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****               by calling the customized HAL_SPI_MspInit() API.
  45:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****      [..]
  46:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        Circular mode restriction:
  47:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       (#) The DMA circular mode cannot be used when the SPI is configured in these modes:
  48:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           (##) Master 2Lines RxOnly
  49:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           (##) Master 1Line Rx
  50:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       (#) The CRC feature is not managed when the DMA circular mode is enabled
  51:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       (#) When the SPI DMA Pause/Stop features are used, we must use the following APIs
  52:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           the HAL_SPI_DMAPause()/ HAL_SPI_DMAStop() only under the SPI callbacks
  53:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****      [..]
  54:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        Master Receive mode restriction:
  55:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       (#) In Master unidirectional receive-only mode (MSTR =1, BIDIMODE=0, RXONLY=1) or
  56:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           bidirectional receive mode (MSTR=1, BIDIMODE=1, BIDIOE=0), to ensure that the SPI
  57:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           does not initiate a new transfer the following procedure has to be respected:
  58:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           (##) HAL_SPI_DeInit()
  59:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           (##) HAL_SPI_Init()
  60:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****      [..]
  61:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        Callback registration:
  62:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
  63:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       (#) The compilation flag USE_HAL_SPI_REGISTER_CALLBACKS when set to 1U
  64:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           allows the user to configure dynamically the driver callbacks.
  65:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           Use Functions HAL_SPI_RegisterCallback() to register an interrupt callback.
  66:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
  67:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           Function HAL_SPI_RegisterCallback() allows to register following callbacks:
  68:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             (+) TxCpltCallback        : SPI Tx Completed callback
  69:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             (+) RxCpltCallback        : SPI Rx Completed callback
  70:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             (+) TxRxCpltCallback      : SPI TxRx Completed callback
  71:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             (+) TxHalfCpltCallback    : SPI Tx Half Completed callback
  72:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             (+) RxHalfCpltCallback    : SPI Rx Half Completed callback
  73:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             (+) TxRxHalfCpltCallback  : SPI TxRx Half Completed callback
  74:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             (+) ErrorCallback         : SPI Error callback
  75:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             (+) AbortCpltCallback     : SPI Abort callback
  76:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             (+) MspInitCallback       : SPI Msp Init callback
  77:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             (+) MspDeInitCallback     : SPI Msp DeInit callback
  78:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           This function takes as parameters the HAL peripheral handle, the Callback ID
  79:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           and a pointer to the user callback function.
  80:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
  81:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
  82:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       (#) Use function HAL_SPI_UnRegisterCallback to reset a callback to the default
  83:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           weak function.
  84:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           HAL_SPI_UnRegisterCallback takes as parameters the HAL peripheral handle,
  85:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           and the Callback ID.
  86:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           This function allows to reset following callbacks:
  87:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             (+) TxCpltCallback        : SPI Tx Completed callback
  88:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             (+) RxCpltCallback        : SPI Rx Completed callback
  89:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             (+) TxRxCpltCallback      : SPI TxRx Completed callback
ARM GAS  /tmp/cc8c22lT.s 			page 3


  90:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             (+) TxHalfCpltCallback    : SPI Tx Half Completed callback
  91:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             (+) RxHalfCpltCallback    : SPI Rx Half Completed callback
  92:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             (+) TxRxHalfCpltCallback  : SPI TxRx Half Completed callback
  93:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             (+) ErrorCallback         : SPI Error callback
  94:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             (+) AbortCpltCallback     : SPI Abort callback
  95:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             (+) MspInitCallback       : SPI Msp Init callback
  96:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             (+) MspDeInitCallback     : SPI Msp DeInit callback
  97:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
  98:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        By default, after the HAL_SPI_Init() and when the state is HAL_SPI_STATE_RESET
  99:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        all callbacks are set to the corresponding weak functions:
 100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        examples HAL_SPI_MasterTxCpltCallback(), HAL_SPI_MasterRxCpltCallback().
 101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        Exception done for MspInit and MspDeInit functions that are
 102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        reset to the legacy weak functions in the HAL_SPI_Init()/ HAL_SPI_DeInit() only when
 103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        these callbacks are null (not registered beforehand).
 104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        If MspInit or MspDeInit are not null, the HAL_SPI_Init()/ HAL_SPI_DeInit()
 105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        keep and use the user MspInit/MspDeInit callbacks (registered beforehand) whatever the state
 106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        Callbacks can be registered/unregistered in HAL_SPI_STATE_READY state only.
 108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        Exception done MspInit/MspDeInit functions that can be registered/unregistered
 109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        in HAL_SPI_STATE_READY or HAL_SPI_STATE_RESET state,
 110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        thus registered (user) MspInit/DeInit callbacks can be used during the Init/DeInit.
 111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        Then, the user first registers the MspInit/MspDeInit user callbacks
 112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        using HAL_SPI_RegisterCallback() before calling HAL_SPI_DeInit()
 113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        or HAL_SPI_Init() function.
 114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        When The compilation define USE_HAL_PPP_REGISTER_CALLBACKS is set to 0 or
 116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        not defined, the callback registering feature is not available
 117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        and weak (surcharged) callbacks are used.
 118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****      [..]
 120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        Using the HAL it is not possible to reach all supported SPI frequency with the different SPI
 121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        the following table resume the max SPI frequency reached with data size 8bits/16bits,
 122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****          according to frequency of the APBx Peripheral Clock (fPCLK) used by the SPI instance.
 123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   @endverbatim
 125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   Additional table :
 127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        DataSize = SPI_DATASIZE_8BIT:
 129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        +-------------------------------------------------------------------------------------------
 130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |         |                | 2Lines Fullduplex   |     2Lines RxOnly    |         1Line     
 131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        | Process | Tranfert mode  |---------------------|----------------------|-------------------
 132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |         |                |  Master  |  Slave   |  Master   |  Slave   |  Master   |  Slave
 133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |===========================================================================================
 134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |    T    |     Polling    | Fpclk/4  | Fpclk/8  |    NA     |    NA    |    NA     |   NA  
 135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |    /    |     Interrupt  | Fpclk/4  | Fpclk/16 |    NA     |    NA    |    NA     |   NA  
 137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |    R    |----------------|----------|----------|-----------|----------|-----------|-------
 138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |    X    |       DMA      | Fpclk/2  | Fpclk/2  |    NA     |    NA    |    NA     |   NA  
 139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |=========|================|==========|==========|===========|==========|===========|=======
 140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |         |     Polling    | Fpclk/4  | Fpclk/8  | Fpclk/16  | Fpclk/8  | Fpclk/8   | Fpclk/
 141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |         |----------------|----------|----------|-----------|----------|-----------|-------
 142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |    R    |     Interrupt  | Fpclk/8  | Fpclk/16 | Fpclk/8   | Fpclk/8  | Fpclk/8   | Fpclk/
 143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |         |       DMA      | Fpclk/4  | Fpclk/2  | Fpclk/2   | Fpclk/16 | Fpclk/2   | Fpclk/
 145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |=========|================|==========|==========|===========|==========|===========|=======
 146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |         |     Polling    | Fpclk/8  | Fpclk/2  |     NA    |    NA    | Fpclk/8   | Fpclk/
ARM GAS  /tmp/cc8c22lT.s 			page 4


 147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |         |----------------|----------|----------|-----------|----------|-----------|-------
 148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |    T    |     Interrupt  | Fpclk/2  | Fpclk/4  |     NA    |    NA    | Fpclk/16  | Fpclk/
 149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |         |       DMA      | Fpclk/2  | Fpclk/2  |     NA    |    NA    | Fpclk/8   | Fpclk/
 151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        +-------------------------------------------------------------------------------------------
 152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        DataSize = SPI_DATASIZE_16BIT:
 154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        +-------------------------------------------------------------------------------------------
 155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |         |                | 2Lines Fullduplex   |     2Lines RxOnly    |         1Line     
 156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        | Process | Tranfert mode  |---------------------|----------------------|-------------------
 157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |         |                |  Master  |  Slave   |  Master   |  Slave   |  Master   |  Slave
 158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |===========================================================================================
 159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |    T    |     Polling    | Fpclk/4  | Fpclk/8  |    NA     |    NA    |    NA     |   NA  
 160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |    /    |     Interrupt  | Fpclk/4  | Fpclk/16 |    NA     |    NA    |    NA     |   NA  
 162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |    R    |----------------|----------|----------|-----------|----------|-----------|-------
 163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |    X    |       DMA      | Fpclk/2  | Fpclk/2  |    NA     |    NA    |    NA     |   NA  
 164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |=========|================|==========|==========|===========|==========|===========|=======
 165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |         |     Polling    | Fpclk/4  | Fpclk/8  | Fpclk/16  | Fpclk/8  | Fpclk/8   | Fpclk/
 166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |         |----------------|----------|----------|-----------|----------|-----------|-------
 167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |    R    |     Interrupt  | Fpclk/8  | Fpclk/16 | Fpclk/8   | Fpclk/8  | Fpclk/8   | Fpclk/
 168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |         |       DMA      | Fpclk/4  | Fpclk/2  | Fpclk/2   | Fpclk/16 | Fpclk/2   | Fpclk/
 170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |=========|================|==========|==========|===========|==========|===========|=======
 171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |         |     Polling    | Fpclk/8  | Fpclk/2  |     NA    |    NA    | Fpclk/8   | Fpclk/
 172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |         |----------------|----------|----------|-----------|----------|-----------|-------
 173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |    T    |     Interrupt  | Fpclk/2  | Fpclk/4  |     NA    |    NA    | Fpclk/16  | Fpclk/
 174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |         |       DMA      | Fpclk/2  | Fpclk/2  |     NA    |    NA    | Fpclk/8   | Fpclk/
 176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        +-------------------------------------------------------------------------------------------
 177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        @note The max SPI frequency depend on SPI data size (4bits, 5bits,..., 8bits,...15bits, 16bi
 178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****              SPI mode(2 Lines fullduplex, 2 lines RxOnly, 1 line TX/RX) and Process mode (Polling, 
 179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        @note
 180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             (#) TX/RX processes are HAL_SPI_TransmitReceive(), HAL_SPI_TransmitReceive_IT() and HAL
 181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             (#) RX processes are HAL_SPI_Receive(), HAL_SPI_Receive_IT() and HAL_SPI_Receive_DMA()
 182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             (#) TX processes are HAL_SPI_Transmit(), HAL_SPI_Transmit_IT() and HAL_SPI_Transmit_DMA
 183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   ******************************************************************************
 185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @attention
 186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *
 187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
 188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * All rights reserved.</center></h2>
 189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *
 190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * the "License"; You may not use this file except in compliance with the
 192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * License. You may obtain a copy of the License at:
 193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *                        opensource.org/licenses/BSD-3-Clause
 194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *
 195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   ******************************************************************************
 196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
 197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /* Includes ------------------------------------------------------------------*/
 199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #include "stm32f7xx_hal.h"
 200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /** @addtogroup STM32F7xx_HAL_Driver
 202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @{
 203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
ARM GAS  /tmp/cc8c22lT.s 			page 5


 204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /** @defgroup SPI SPI
 206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief SPI HAL module driver
 207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @{
 208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
 209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #ifdef HAL_SPI_MODULE_ENABLED
 210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /* Private typedef -----------------------------------------------------------*/
 212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /* Private defines -----------------------------------------------------------*/
 213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /** @defgroup SPI_Private_Constants SPI Private Constants
 214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @{
 215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
 216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #define SPI_DEFAULT_TIMEOUT 100U
 217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
 218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @}
 219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
 220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /* Private macros ------------------------------------------------------------*/
 222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /* Private variables ---------------------------------------------------------*/
 223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /* Private function prototypes -----------------------------------------------*/
 224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /** @defgroup SPI_Private_Functions SPI Private Functions
 225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @{
 226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
 227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_DMATransmitReceiveCplt(DMA_HandleTypeDef *hdma);
 230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_DMAHalfTransmitCplt(DMA_HandleTypeDef *hdma);
 231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_DMAHalfReceiveCplt(DMA_HandleTypeDef *hdma);
 232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_DMAHalfTransmitReceiveCplt(DMA_HandleTypeDef *hdma);
 233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_DMAError(DMA_HandleTypeDef *hdma);
 234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, Flag
 238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                                                        uint32_t Timeout, uint32_t Tickstart);
 239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static HAL_StatusTypeDef SPI_WaitFifoStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Fifo, uint
 240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                                                        uint32_t Timeout, uint32_t Tickstart);
 241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_TxISR_8BIT(struct __SPI_HandleTypeDef *hspi);
 242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_TxISR_16BIT(struct __SPI_HandleTypeDef *hspi);
 243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_RxISR_8BIT(struct __SPI_HandleTypeDef *hspi);
 244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_RxISR_16BIT(struct __SPI_HandleTypeDef *hspi);
 245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_2linesRxISR_8BIT(struct __SPI_HandleTypeDef *hspi);
 246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_2linesTxISR_8BIT(struct __SPI_HandleTypeDef *hspi);
 247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_2linesTxISR_16BIT(struct __SPI_HandleTypeDef *hspi);
 248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_2linesRxISR_16BIT(struct __SPI_HandleTypeDef *hspi);
 249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_RxISR_8BITCRC(struct __SPI_HandleTypeDef *hspi);
 251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_RxISR_16BITCRC(struct __SPI_HandleTypeDef *hspi);
 252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_2linesRxISR_8BITCRC(struct __SPI_HandleTypeDef *hspi);
 253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_2linesRxISR_16BITCRC(struct __SPI_HandleTypeDef *hspi);
 254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_AbortRx_ISR(SPI_HandleTypeDef *hspi);
 256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_AbortTx_ISR(SPI_HandleTypeDef *hspi);
 257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_CloseRxTx_ISR(SPI_HandleTypeDef *hspi);
 258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_CloseRx_ISR(SPI_HandleTypeDef *hspi);
 259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_CloseTx_ISR(SPI_HandleTypeDef *hspi);
 260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t T
ARM GAS  /tmp/cc8c22lT.s 			page 6


 261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t
 262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
 263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @}
 264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
 265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /* Exported functions --------------------------------------------------------*/
 267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /** @defgroup SPI_Exported_Functions SPI Exported Functions
 268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @{
 269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
 270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /** @defgroup SPI_Exported_Functions_Group1 Initialization and de-initialization functions
 272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****  *  @brief    Initialization and Configuration functions
 273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****  *
 274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** @verbatim
 275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****  ===============================================================================
 276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****               ##### Initialization and de-initialization functions #####
 277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****  ===============================================================================
 278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     [..]  This subsection provides a set of functions allowing to initialize and
 279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           de-initialize the SPIx peripheral:
 280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       (+) User must implement HAL_SPI_MspInit() function in which he configures
 282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           all related peripherals resources (CLOCK, GPIO, DMA, IT and NVIC ).
 283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       (+) Call the function HAL_SPI_Init() to configure the selected device with
 285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           the selected configuration:
 286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         (++) Mode
 287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         (++) Direction
 288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         (++) Data Size
 289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         (++) Clock Polarity and Phase
 290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         (++) NSS Management
 291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         (++) BaudRate Prescaler
 292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         (++) FirstBit
 293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         (++) TIMode
 294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         (++) CRC Calculation
 295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         (++) CRC Polynomial if CRC enabled
 296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         (++) CRC Length, used only with Data8 and Data16
 297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         (++) FIFO reception threshold
 298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       (+) Call the function HAL_SPI_DeInit() to restore the default configuration
 300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           of the selected SPIx peripheral.
 301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** @endverbatim
 303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @{
 304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
 305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
 307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Initialize the SPI according to the specified parameters
 308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *         in the SPI_InitTypeDef and initialize the associated handle.
 309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
 311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval HAL status
 312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
 313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Init(SPI_HandleTypeDef *hspi)
 314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t frxth;
 316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check the SPI handle allocation */
ARM GAS  /tmp/cc8c22lT.s 			page 7


 318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi == NULL)
 319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     return HAL_ERROR;
 321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check the parameters */
 324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   assert_param(IS_SPI_ALL_INSTANCE(hspi->Instance));
 325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   assert_param(IS_SPI_MODE(hspi->Init.Mode));
 326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION(hspi->Init.Direction));
 327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   assert_param(IS_SPI_DATASIZE(hspi->Init.DataSize));
 328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   assert_param(IS_SPI_NSS(hspi->Init.NSS));
 329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   assert_param(IS_SPI_NSSP(hspi->Init.NSSPMode));
 330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
 331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   assert_param(IS_SPI_FIRST_BIT(hspi->Init.FirstBit));
 332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   assert_param(IS_SPI_TIMODE(hspi->Init.TIMode));
 333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     assert_param(IS_SPI_CPOL(hspi->Init.CLKPolarity));
 336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     assert_param(IS_SPI_CPHA(hspi->Init.CLKPhase));
 337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   assert_param(IS_SPI_CRC_CALCULATION(hspi->Init.CRCCalculation));
 340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     assert_param(IS_SPI_CRC_POLYNOMIAL(hspi->Init.CRCPolynomial));
 343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     assert_param(IS_SPI_CRC_LENGTH(hspi->Init.CRCLength));
 344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #else
 346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->State == HAL_SPI_STATE_RESET)
 350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Allocate lock resource and initialize it */
 352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->Lock = HAL_UNLOCKED;
 353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
 355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Init the SPI Callback settings */
 356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->TxCpltCallback       = HAL_SPI_TxCpltCallback;       /* Legacy weak TxCpltCallback       
 357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->RxCpltCallback       = HAL_SPI_RxCpltCallback;       /* Legacy weak RxCpltCallback       
 358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->TxRxCpltCallback     = HAL_SPI_TxRxCpltCallback;     /* Legacy weak TxRxCpltCallback     
 359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->TxHalfCpltCallback   = HAL_SPI_TxHalfCpltCallback;   /* Legacy weak TxHalfCpltCallback   
 360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->RxHalfCpltCallback   = HAL_SPI_RxHalfCpltCallback;   /* Legacy weak RxHalfCpltCallback   
 361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->TxRxHalfCpltCallback = HAL_SPI_TxRxHalfCpltCallback; /* Legacy weak TxRxHalfCpltCallback 
 362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->ErrorCallback        = HAL_SPI_ErrorCallback;        /* Legacy weak ErrorCallback        
 363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->AbortCpltCallback    = HAL_SPI_AbortCpltCallback;    /* Legacy weak AbortCpltCallback    
 364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->MspInitCallback == NULL)
 366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->MspInitCallback = HAL_SPI_MspInit; /* Legacy weak MspInit  */
 368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC... */
 371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->MspInitCallback(hspi);
 372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #else
 373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC... */
 374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     HAL_SPI_MspInit(hspi);
ARM GAS  /tmp/cc8c22lT.s 			page 8


 375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_BUSY;
 379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable the selected SPI peripheral */
 381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Align by default the rs fifo threshold on the data size */
 384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     frxth = SPI_RXFIFO_THRESHOLD_HF;
 387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
 389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     frxth = SPI_RXFIFO_THRESHOLD_QF;
 391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* CRC calculation is valid only for 16Bit and 8 Bit */
 394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->Init.DataSize != SPI_DATASIZE_16BIT) && (hspi->Init.DataSize != SPI_DATASIZE_8BIT))
 395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* CRC must be disabled */
 397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Align the CRC Length on the data size */
 401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.CRCLength == SPI_CRC_LENGTH_DATASIZE)
 402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* CRC Length aligned on the data size : value set by default */
 404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->Init.CRCLength = SPI_CRC_LENGTH_16BIT;
 407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     else
 409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->Init.CRCLength = SPI_CRC_LENGTH_8BIT;
 411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /*----------------------- SPIx CR1 & CR2 Configuration ---------------------*/
 415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Configure : SPI Mode, Communication Mode, Clock polarity and phase, NSS management,
 416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   Communication speed, First bit and CRC calculation state */
 417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction |
 418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                                   hspi->Init.CLKPolarity | hspi->Init.CLKPhase | (hspi->Init.NSS & 
 419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                                   hspi->Init.BaudRatePrescaler | hspi->Init.FirstBit  | hspi->Init.
 420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Configure : CRC Length */
 422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.CRCLength == SPI_CRC_LENGTH_16BIT)
 423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->Instance->CR1 |= SPI_CR1_CRCL;
 425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Configure : NSS management, TI Mode, NSS Pulse, Data size and Rx Fifo threshold */
 429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | hspi->Init.TIMode |
 430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                                   hspi->Init.NSSPMode | hspi->Init.DataSize) | frxth);
 431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
ARM GAS  /tmp/cc8c22lT.s 			page 9


 432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /*---------------------------- SPIx CRCPOLY Configuration ------------------*/
 434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Configure : CRC Polynomial */
 435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     WRITE_REG(hspi->Instance->CRCPR, hspi->Init.CRCPolynomial);
 438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if defined(SPI_I2SCFGR_I2SMOD)
 442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Activate the SPI mode (Make sure that I2SMOD bit in I2SCFGR register is reset) */
 443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* SPI_I2SCFGR_I2SMOD */
 445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State     = HAL_SPI_STATE_READY;
 448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return HAL_OK;
 450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
 453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  De-Initialize the SPI peripheral.
 454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
 456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval HAL status
 457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
 458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DeInit(SPI_HandleTypeDef *hspi)
 459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check the SPI handle allocation */
 461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi == NULL)
 462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     return HAL_ERROR;
 464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check SPI Instance parameter */
 467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   assert_param(IS_SPI_ALL_INSTANCE(hspi->Instance));
 468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_BUSY;
 470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable the SPI Peripheral Clock */
 472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
 475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->MspDeInitCallback == NULL)
 476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->MspDeInitCallback = HAL_SPI_MspDeInit; /* Legacy weak MspDeInit  */
 478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC... */
 481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->MspDeInitCallback(hspi);
 482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #else
 483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC... */
 484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_SPI_MspDeInit(hspi);
 485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_RESET;
ARM GAS  /tmp/cc8c22lT.s 			page 10


 489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Release Lock */
 491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return HAL_OK;
 494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
 497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Initialize the SPI MSP.
 498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
 500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
 501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
 502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** __weak void HAL_SPI_MspInit(SPI_HandleTypeDef *hspi)
 503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   UNUSED(hspi);
 506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             the HAL_SPI_MspInit should be implemented in the user file
 509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****    */
 510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
 513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  De-Initialize the SPI MSP.
 514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
 516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
 517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
 518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** __weak void HAL_SPI_MspDeInit(SPI_HandleTypeDef *hspi)
 519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   UNUSED(hspi);
 522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             the HAL_SPI_MspDeInit should be implemented in the user file
 525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****    */
 526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
 529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
 530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Register a User SPI Callback
 531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *         To be used instead of the weak predefined callback
 532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi Pointer to a SPI_HandleTypeDef structure that contains
 533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *                the configuration information for the specified SPI.
 534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  CallbackID ID of the callback to be registered
 535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  pCallback pointer to the Callback function
 536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval HAL status
 537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
 538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_RegisterCallback(SPI_HandleTypeDef *hspi, HAL_SPI_CallbackIDTypeDef Callb
 539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_StatusTypeDef status = HAL_OK;
 541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (pCallback == NULL)
 543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Update the error code */
 545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->ErrorCode |= HAL_SPI_ERROR_INVALID_CALLBACK;
ARM GAS  /tmp/cc8c22lT.s 			page 11


 546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     return HAL_ERROR;
 548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process locked */
 550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_LOCK(hspi);
 551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (HAL_SPI_STATE_READY == hspi->State)
 553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     switch (CallbackID)
 555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       case HAL_SPI_TX_COMPLETE_CB_ID :
 557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->TxCpltCallback = pCallback;
 558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         break;
 559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       case HAL_SPI_RX_COMPLETE_CB_ID :
 561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->RxCpltCallback = pCallback;
 562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         break;
 563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       case HAL_SPI_TX_RX_COMPLETE_CB_ID :
 565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->TxRxCpltCallback = pCallback;
 566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         break;
 567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       case HAL_SPI_TX_HALF_COMPLETE_CB_ID :
 569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->TxHalfCpltCallback = pCallback;
 570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         break;
 571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       case HAL_SPI_RX_HALF_COMPLETE_CB_ID :
 573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->RxHalfCpltCallback = pCallback;
 574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         break;
 575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       case HAL_SPI_TX_RX_HALF_COMPLETE_CB_ID :
 577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->TxRxHalfCpltCallback = pCallback;
 578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         break;
 579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       case HAL_SPI_ERROR_CB_ID :
 581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->ErrorCallback = pCallback;
 582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         break;
 583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       case HAL_SPI_ABORT_CB_ID :
 585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->AbortCpltCallback = pCallback;
 586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         break;
 587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       case HAL_SPI_MSPINIT_CB_ID :
 589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->MspInitCallback = pCallback;
 590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         break;
 591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       case HAL_SPI_MSPDEINIT_CB_ID :
 593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->MspDeInitCallback = pCallback;
 594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         break;
 595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       default :
 597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Update the error code */
 598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Return error status */
 601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         status =  HAL_ERROR;
 602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         break;
ARM GAS  /tmp/cc8c22lT.s 			page 12


 603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else if (HAL_SPI_STATE_RESET == hspi->State)
 606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     switch (CallbackID)
 608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       case HAL_SPI_MSPINIT_CB_ID :
 610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->MspInitCallback = pCallback;
 611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         break;
 612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       case HAL_SPI_MSPDEINIT_CB_ID :
 614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->MspDeInitCallback = pCallback;
 615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         break;
 616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       default :
 618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Update the error code */
 619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Return error status */
 622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         status =  HAL_ERROR;
 623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         break;
 624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
 627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Update the error code */
 629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Return error status */
 632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     status =  HAL_ERROR;
 633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Release Lock */
 636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return status;
 638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
 641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Unregister an SPI Callback
 642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *         SPI callback is redirected to the weak predefined callback
 643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi Pointer to a SPI_HandleTypeDef structure that contains
 644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *                the configuration information for the specified SPI.
 645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  CallbackID ID of the callback to be unregistered
 646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval HAL status
 647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
 648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_UnRegisterCallback(SPI_HandleTypeDef *hspi, HAL_SPI_CallbackIDTypeDef Cal
 649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_StatusTypeDef status = HAL_OK;
 651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process locked */
 653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_LOCK(hspi);
 654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (HAL_SPI_STATE_READY == hspi->State)
 656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     switch (CallbackID)
 658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       case HAL_SPI_TX_COMPLETE_CB_ID :
ARM GAS  /tmp/cc8c22lT.s 			page 13


 660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->TxCpltCallback = HAL_SPI_TxCpltCallback;             /* Legacy weak TxCpltCallback   
 661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         break;
 662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       case HAL_SPI_RX_COMPLETE_CB_ID :
 664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->RxCpltCallback = HAL_SPI_RxCpltCallback;             /* Legacy weak RxCpltCallback   
 665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         break;
 666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       case HAL_SPI_TX_RX_COMPLETE_CB_ID :
 668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->TxRxCpltCallback = HAL_SPI_TxRxCpltCallback;         /* Legacy weak TxRxCpltCallback 
 669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         break;
 670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       case HAL_SPI_TX_HALF_COMPLETE_CB_ID :
 672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->TxHalfCpltCallback = HAL_SPI_TxHalfCpltCallback;     /* Legacy weak TxHalfCpltCallbac
 673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         break;
 674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       case HAL_SPI_RX_HALF_COMPLETE_CB_ID :
 676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->RxHalfCpltCallback = HAL_SPI_RxHalfCpltCallback;     /* Legacy weak RxHalfCpltCallbac
 677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         break;
 678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       case HAL_SPI_TX_RX_HALF_COMPLETE_CB_ID :
 680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->TxRxHalfCpltCallback = HAL_SPI_TxRxHalfCpltCallback; /* Legacy weak TxRxHalfCpltCallb
 681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         break;
 682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       case HAL_SPI_ERROR_CB_ID :
 684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->ErrorCallback = HAL_SPI_ErrorCallback;               /* Legacy weak ErrorCallback    
 685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         break;
 686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       case HAL_SPI_ABORT_CB_ID :
 688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->AbortCpltCallback = HAL_SPI_AbortCpltCallback;       /* Legacy weak AbortCpltCallback
 689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         break;
 690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       case HAL_SPI_MSPINIT_CB_ID :
 692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->MspInitCallback = HAL_SPI_MspInit;                   /* Legacy weak MspInit          
 693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         break;
 694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       case HAL_SPI_MSPDEINIT_CB_ID :
 696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->MspDeInitCallback = HAL_SPI_MspDeInit;               /* Legacy weak MspDeInit        
 697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         break;
 698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       default :
 700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Update the error code */
 701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Return error status */
 704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         status =  HAL_ERROR;
 705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         break;
 706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else if (HAL_SPI_STATE_RESET == hspi->State)
 709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     switch (CallbackID)
 711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       case HAL_SPI_MSPINIT_CB_ID :
 713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->MspInitCallback = HAL_SPI_MspInit;                   /* Legacy weak MspInit          
 714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         break;
 715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       case HAL_SPI_MSPDEINIT_CB_ID :
ARM GAS  /tmp/cc8c22lT.s 			page 14


 717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->MspDeInitCallback = HAL_SPI_MspDeInit;               /* Legacy weak MspDeInit        
 718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         break;
 719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       default :
 721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Update the error code */
 722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Return error status */
 725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         status =  HAL_ERROR;
 726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         break;
 727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
 730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Update the error code */
 732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Return error status */
 735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     status =  HAL_ERROR;
 736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Release Lock */
 739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return status;
 741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
 744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @}
 745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
 746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /** @defgroup SPI_Exported_Functions_Group2 IO operation functions
 748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****  *  @brief   Data transfers functions
 749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****  *
 750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** @verbatim
 751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   ==============================================================================
 752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                       ##### IO operation functions #####
 753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****  ===============================================================================
 754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****  [..]
 755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     This subsection provides a set of functions allowing to manage the SPI
 756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     data transfers.
 757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     [..] The SPI supports master and slave mode :
 759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     (#) There are two modes of transfer:
 761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        (++) Blocking mode: The communication is performed in polling mode.
 762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             The HAL status of all data processing is returned by the same function
 763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             after finishing transfer.
 764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        (++) No-Blocking mode: The communication is performed using Interrupts
 765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             or DMA, These APIs return the HAL status.
 766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             The end of the data processing will be indicated through the
 767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             dedicated SPI IRQ when using Interrupt mode or the DMA IRQ when
 768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             using DMA mode.
 769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             The HAL_SPI_TxCpltCallback(), HAL_SPI_RxCpltCallback() and HAL_SPI_TxRxCpltCallback() u
 770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             will be executed respectively at the end of the transmit or Receive process
 771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             The HAL_SPI_ErrorCallback()user callback will be executed when a communication error is
 772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     (#) APIs provided for these 2 transfer modes (Blocking mode or Non blocking mode using either I
ARM GAS  /tmp/cc8c22lT.s 			page 15


 774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         exist for 1Line (simplex) and 2Lines (full duplex) modes.
 775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** @endverbatim
 777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @{
 778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
 779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
 781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Transmit an amount of data in blocking mode.
 782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
 784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  pData pointer to data buffer
 785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  Size amount of data to be sent
 786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  Timeout Timeout duration
 787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval HAL status
 788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
 789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Transmit(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t
 790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t tickstart;
 792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint16_t initial_TxXferCount;
 794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check Direction parameter */
 796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));
 797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process Locked */
 799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_LOCK(hspi);
 800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Init tickstart for timeout management*/
 802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   tickstart = HAL_GetTick();
 803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   initial_TxXferCount = Size;
 804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
 806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_BUSY;
 808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
 812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_ERROR;
 814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the transaction information */
 818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_TX;
 819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
 821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount = Size;
 823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /*Init field not used in handle to zero */
 825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)NULL;
 826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
 827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxISR       = NULL;
 829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxISR       = NULL;
 830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
ARM GAS  /tmp/cc8c22lT.s 			page 16


 831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Configure communication direction : 1Line */
 832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SPI_1LINE_TX(hspi);
 835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Reset CRC Calculation */
 839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
 842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check if the SPI is already enabled */
 846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Enable SPI peripheral */
 849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
 850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
 853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint16_t);
 859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->TxXferCount--;
 860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Transmit data in 16 Bit mode */
 862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     while (hspi->TxXferCount > 0U)
 863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Wait until TXE flag is set to send data */
 865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint16_t);
 869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->TxXferCount--;
 870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       else
 872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Timeout management */
 874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout =
 875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
 876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           errorcode = HAL_TIMEOUT;
 877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           goto error;
 878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
 879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Transmit data in 8 Bit mode */
 883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
 884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (hspi->TxXferCount > 1U)
ARM GAS  /tmp/cc8c22lT.s 			page 17


 888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* write on the data register in packing mode */
 890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint16_t);
 892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->TxXferCount -= 2U;
 893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       else
 895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->pTxBuffPtr ++;
 898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->TxXferCount--;
 899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     while (hspi->TxXferCount > 0U)
 902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Wait until TXE flag is set to send data */
 904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         if (hspi->TxXferCount > 1U)
 907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
 908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           /* write on the data register in packing mode */
 909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           hspi->pTxBuffPtr += sizeof(uint16_t);
 911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           hspi->TxXferCount -= 2U;
 912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
 913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         else
 914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
 915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           hspi->pTxBuffPtr++;
 917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           hspi->TxXferCount--;
 918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
 919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       else
 921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Timeout management */
 923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout =
 924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
 925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           errorcode = HAL_TIMEOUT;
 926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           goto error;
 927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
 928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Enable CRC Transmission */
 933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
 936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check the end of the transaction */
 940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
ARM GAS  /tmp/cc8c22lT.s 			page 18


 945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Clear overrun flag in 2 Lines communication mode because received is not read */
 946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_CLEAR_OVRFLAG(hspi);
 949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_ERROR;
 954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** error:
 957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process Unlocked */
 959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return errorcode;
 961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
 964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Receive an amount of data in blocking mode.
 965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
 967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  pData pointer to data buffer
 968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  Size amount of data to be received
 969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  Timeout Timeout duration
 970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval HAL status
 971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
 972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Receive(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t 
 973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t tickstart;
 975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_RX;
 980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line 
 981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process Locked */
 985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_LOCK(hspi);
 986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Init tickstart for timeout management*/
 988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   tickstart = HAL_GetTick();
 989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
 991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_BUSY;
 993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
 997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_ERROR;
 999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
1000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
ARM GAS  /tmp/cc8c22lT.s 			page 19


1002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the transaction information */
1003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_RX;
1004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
1006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferSize  = Size;
1007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount = Size;
1008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /*Init field not used in handle to zero */
1010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)NULL;
1011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
1012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount = 0U;
1013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxISR       = NULL;
1014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxISR       = NULL;
1015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Reset CRC Calculation */
1018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* this is done to handle the CRCNEXT before the latest data */
1022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->RxXferCount--;
1023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the Rx Fifo threshold */
1027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
1028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Set RX Fifo threshold according the reception data length: 16bit */
1030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
1031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
1033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Set RX Fifo threshold according the reception data length: 8bit */
1035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
1036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Configure communication direction: 1Line */
1039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
1040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SPI_1LINE_RX(hspi);
1042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
1046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Enable SPI peripheral */
1048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
1049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Receive data in 8 Bit mode */
1052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.DataSize <= SPI_DATASIZE_8BIT)
1053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Transfer loop */
1055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     while (hspi->RxXferCount > 0U)
1056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
1057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Check the RXNE flag */
1058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
ARM GAS  /tmp/cc8c22lT.s 			page 20


1059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
1060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* read the received data */
1061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
1062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint8_t);
1063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->RxXferCount--;
1064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
1065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       else
1066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
1067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Timeout management */
1068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout =
1069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
1070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           errorcode = HAL_TIMEOUT;
1071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           goto error;
1072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
1073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
1074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
1075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
1077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Transfer loop */
1079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     while (hspi->RxXferCount > 0U)
1080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
1081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Check the RXNE flag */
1082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
1083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
1084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
1085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint16_t);
1086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->RxXferCount--;
1087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
1088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       else
1089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
1090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Timeout management */
1091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout =
1092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
1093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           errorcode = HAL_TIMEOUT;
1094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           goto error;
1095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
1096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
1097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
1098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Handle the CRC Transmission */
1102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* freeze the CRC before the latest data */
1105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
1106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Read the latest data */
1108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, Timeout, tickstart) != HAL_OK)
1109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
1110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* the latest data has not been received */
1111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       errorcode = HAL_TIMEOUT;
1112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       goto error;
1113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
1114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Receive last data in 16 Bit mode */
ARM GAS  /tmp/cc8c22lT.s 			page 21


1116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
1117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
1118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
1119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
1120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Receive last data in 8 Bit mode */
1121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     else
1122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
1123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       (*(uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
1124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
1125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Wait the CRC data */
1127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, Timeout, tickstart) != HAL_OK)
1128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
1129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
1130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       errorcode = HAL_TIMEOUT;
1131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       goto error;
1132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
1133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Read CRC to Flush DR and RXNE flag */
1135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
1136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
1137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Read 16bit CRC */
1138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       READ_REG(hspi->Instance->DR);
1139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
1140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     else
1141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
1142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Read 8bit CRC */
1143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       READ_REG(*(__IO uint8_t *)&hspi->Instance->DR);
1144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if ((hspi->Init.DataSize == SPI_DATASIZE_8BIT) && (hspi->Init.CRCLength == SPI_CRC_LENGTH_16B
1146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
1147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, Timeout, tickstart) != HAL_OK)
1148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
1149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           /* Error on the CRC reception */
1150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
1151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           errorcode = HAL_TIMEOUT;
1152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           goto error;
1153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
1154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Read 8bit CRC again in case of 16bit CRC in 8bit Data mode */
1155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         READ_REG(*(__IO uint8_t *)&hspi->Instance->DR);
1156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
1157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
1158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check the end of the transaction */
1162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
1163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
1165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check if CRC error occurred */
1169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR))
1170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
1172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
ARM GAS  /tmp/cc8c22lT.s 			page 22


1173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
1177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_ERROR;
1179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** error :
1182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
1183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return errorcode;
1185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
1186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
1188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Transmit and Receive an amount of data in blocking mode.
1189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
1191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  pTxData pointer to transmission data buffer
1192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  pRxData pointer to reception data buffer
1193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  Size amount of data to be sent and received
1194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  Timeout Timeout duration
1195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval HAL status
1196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
1197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_TransmitReceive(SPI_HandleTypeDef *hspi, uint8_t *pTxData, uint8_t *pRxDa
1198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                                           uint32_t Timeout)
1199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
1200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint16_t             initial_TxXferCount;
1201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint16_t             initial_RxXferCount;
1202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t             tmp_mode;
1203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_SPI_StateTypeDef tmp_state;
1204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t             tickstart;
1205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t             spi_cr1;
1207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t             spi_cr2;
1208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Variable used to alternate Rx and Tx during transfer */
1211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t             txallowed = 1U;
1212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_StatusTypeDef    errorcode = HAL_OK;
1213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check Direction parameter */
1215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));
1216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process Locked */
1218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_LOCK(hspi);
1219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Init tickstart for timeout management*/
1221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   tickstart = HAL_GetTick();
1222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Init temporary variables */
1224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   tmp_state           = hspi->State;
1225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   tmp_mode            = hspi->Init.Mode;
1226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   initial_TxXferCount = Size;
1227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   initial_RxXferCount = Size;
1228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   spi_cr1             = READ_REG(hspi->Instance->CR1);
ARM GAS  /tmp/cc8c22lT.s 			page 23


1230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   spi_cr2             = READ_REG(hspi->Instance->CR2);
1231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (!((tmp_state == HAL_SPI_STATE_READY) || \
1234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
1235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_BUSY;
1237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
1238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
1241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_ERROR;
1243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
1244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
1247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_BUSY_RX)
1248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
1250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the transaction information */
1253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
1255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount = Size;
1256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferSize  = Size;
1257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
1258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount = Size;
1259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferSize  = Size;
1260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /*Init field not used in handle to zero */
1262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxISR       = NULL;
1263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxISR       = NULL;
1264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Reset CRC Calculation */
1267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the Rx Fifo threshold */
1274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) || (initial_RxXferCount > 1U))
1275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Set fiforxthreshold according the reception data length: 16bit */
1277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
1278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
1280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Set fiforxthreshold according the reception data length: 8bit */
1282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
1283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
ARM GAS  /tmp/cc8c22lT.s 			page 24


1287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Enable SPI peripheral */
1289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
1290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Transmit and Receive data in 16 Bit mode */
1293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
1294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
1296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
1297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
1298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint16_t);
1299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->TxXferCount--;
1300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
1301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
1302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
1303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Check TXE flag */
1304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U)
1305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
1306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
1307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint16_t);
1308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->TxXferCount--;
1309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Next Data is a reception (Rx). Tx not allowed */
1310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         txallowed = 0U;
1311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Enable CRC Transmission */
1314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         if ((hspi->TxXferCount == 0U) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE))
1315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
1316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           /* Set NSS Soft to received correctly the CRC on slave mode with NSS pulse activated */
1317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           if ((READ_BIT(spi_cr1, SPI_CR1_MSTR) == 0U) && (READ_BIT(spi_cr2, SPI_CR2_NSSP) == SPI_CR
1318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           {
1319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             SET_BIT(hspi->Instance->CR1, SPI_CR1_SSM);
1320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           }
1321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
1322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
1323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
1325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Check RXNE flag */
1327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
1328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
1329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
1330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint16_t);
1331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->RxXferCount--;
1332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Next Data is a Transmission (Tx). Tx is allowed */
1333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         txallowed = 1U;
1334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
1335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
1336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
1337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         errorcode = HAL_TIMEOUT;
1338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         goto error;
1339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
1340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
1341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Transmit and Receive data in 8 Bit mode */
1343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
ARM GAS  /tmp/cc8c22lT.s 			page 25


1344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
1346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
1347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (hspi->TxXferCount > 1U)
1348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
1349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
1350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint16_t);
1351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->TxXferCount -= 2U;
1352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
1353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       else
1354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
1355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
1356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->pTxBuffPtr++;
1357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->TxXferCount--;
1358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
1359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
1360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
1361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
1362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Check TXE flag */
1363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U)
1364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
1365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         if (hspi->TxXferCount > 1U)
1366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
1367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
1368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           hspi->pTxBuffPtr += sizeof(uint16_t);
1369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           hspi->TxXferCount -= 2U;
1370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
1371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         else
1372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
1373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
1374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           hspi->pTxBuffPtr++;
1375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           hspi->TxXferCount--;
1376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
1377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Next Data is a reception (Rx). Tx not allowed */
1378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         txallowed = 0U;
1379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Enable CRC Transmission */
1382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         if ((hspi->TxXferCount == 0U) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE))
1383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
1384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           /* Set NSS Soft to received correctly the CRC on slave mode with NSS pulse activated */
1385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           if ((READ_BIT(spi_cr1, SPI_CR1_MSTR) == 0U) && (READ_BIT(spi_cr2, SPI_CR2_NSSP) == SPI_CR
1386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           {
1387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             SET_BIT(hspi->Instance->CR1, SPI_CR1_SSM);
1388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           }
1389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
1390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
1391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
1393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Wait until RXNE flag is reset */
1395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
1396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
1397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         if (hspi->RxXferCount > 1U)
1398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
1399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
1400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           hspi->pRxBuffPtr += sizeof(uint16_t);
ARM GAS  /tmp/cc8c22lT.s 			page 26


1401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           hspi->RxXferCount -= 2U;
1402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           if (hspi->RxXferCount <= 1U)
1403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           {
1404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             /* Set RX Fifo threshold before to switch on 8 bit data size */
1405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
1406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           }
1407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
1408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         else
1409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
1410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           (*(uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
1411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           hspi->pRxBuffPtr++;
1412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           hspi->RxXferCount--;
1413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
1414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Next Data is a Transmission (Tx). Tx is allowed */
1415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         txallowed = 1U;
1416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
1417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout =
1418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
1419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         errorcode = HAL_TIMEOUT;
1420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         goto error;
1421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
1422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
1423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Read CRC from DR to close CRC calculation process */
1427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Wait until TXE flag */
1430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, Timeout, tickstart) != HAL_OK)
1431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
1432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Error on the CRC reception */
1433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
1434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       errorcode = HAL_TIMEOUT;
1435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       goto error;
1436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
1437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Read CRC */
1438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
1439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
1440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Read 16bit CRC */
1441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       READ_REG(hspi->Instance->DR);
1442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
1443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     else
1444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
1445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Read 8bit CRC */
1446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       READ_REG(*(__IO uint8_t *)&hspi->Instance->DR);
1447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (hspi->Init.CRCLength == SPI_CRC_LENGTH_16BIT)
1449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
1450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, Timeout, tickstart) != HAL_OK)
1451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
1452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           /* Error on the CRC reception */
1453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
1454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           errorcode = HAL_TIMEOUT;
1455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           goto error;
1456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
1457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Read 8bit CRC again in case of 16bit CRC in 8bit Data mode */
ARM GAS  /tmp/cc8c22lT.s 			page 27


1458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         READ_REG(*(__IO uint8_t *)&hspi->Instance->DR);
1459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
1460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
1461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check if CRC error occurred */
1464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR))
1465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
1467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Clear CRC Flag */
1468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
1469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_ERROR;
1471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check the end of the transaction */
1475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
1476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_ERROR;
1478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
1479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** error :
1482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
1483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return errorcode;
1485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
1486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
1488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Transmit an amount of data in non-blocking mode with Interrupt.
1489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
1491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  pData pointer to data buffer
1492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  Size amount of data to be sent
1493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval HAL status
1494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
1495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Transmit_IT(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
1496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
1497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
1498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check Direction parameter */
1500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));
1501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process Locked */
1503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_LOCK(hspi);
1504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
1506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_ERROR;
1508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
1509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
1512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_BUSY;
1514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
ARM GAS  /tmp/cc8c22lT.s 			page 28


1515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the transaction information */
1518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_TX;
1519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
1521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferSize  = Size;
1522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount = Size;
1523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Init field not used in handle to zero */
1525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)NULL;
1526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
1527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount = 0U;
1528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxISR       = NULL;
1529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the function for IT treatment */
1531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
1532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->TxISR = SPI_TxISR_16BIT;
1534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
1536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->TxISR = SPI_TxISR_8BIT;
1538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Configure communication direction : 1Line */
1541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
1542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SPI_1LINE_TX(hspi);
1544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Reset CRC Calculation */
1548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Enable TXE and ERR interrupt */
1555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_ERR));
1556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
1560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Enable SPI peripheral */
1562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
1563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** error :
1566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return errorcode;
1568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
1569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
1571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Receive an amount of data in non-blocking mode with Interrupt.
ARM GAS  /tmp/cc8c22lT.s 			page 29


1572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
1574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  pData pointer to data buffer
1575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  Size amount of data to be sent
1576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval HAL status
1577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
1578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Receive_IT(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
1579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
1580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
1581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->Init.Direction == SPI_DIRECTION_2LINES) && (hspi->Init.Mode == SPI_MODE_MASTER))
1583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_RX;
1585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line 
1586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     return HAL_SPI_TransmitReceive_IT(hspi, pData, pData, Size);
1587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process Locked */
1590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_LOCK(hspi);
1591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
1593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_BUSY;
1595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
1596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
1599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_ERROR;
1601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
1602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the transaction information */
1605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_RX;
1606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
1608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferSize  = Size;
1609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount = Size;
1610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Init field not used in handle to zero */
1612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)NULL;
1613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
1614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount = 0U;
1615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxISR       = NULL;
1616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check the data size to adapt Rx threshold and the set the function for IT treatment */
1618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
1619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Set RX Fifo threshold according the reception data length: 16 bit */
1621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
1622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->RxISR = SPI_RxISR_16BIT;
1623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
1625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Set RX Fifo threshold according the reception data length: 8 bit */
1627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
1628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->RxISR = SPI_RxISR_8BIT;
ARM GAS  /tmp/cc8c22lT.s 			page 30


1629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Configure communication direction : 1Line */
1632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
1633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SPI_1LINE_RX(hspi);
1635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Reset CRC Calculation */
1639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->CRCSize = 1U;
1642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if ((hspi->Init.DataSize <= SPI_DATASIZE_8BIT) && (hspi->Init.CRCLength == SPI_CRC_LENGTH_16BIT
1643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
1644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->CRCSize = 2U;
1645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
1646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
1649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->CRCSize = 0U;
1651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Enable TXE and ERR interrupt */
1655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
1656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Note : The SPI must be enabled after unlocking current process
1658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             to avoid the risk of SPI interrupt handle execution before current
1659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             process unlock */
1660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
1663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Enable SPI peripheral */
1665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
1666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** error :
1669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process Unlocked */
1670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return errorcode;
1672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
1673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
1675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Transmit and Receive an amount of data in non-blocking mode with Interrupt.
1676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
1678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  pTxData pointer to transmission data buffer
1679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  pRxData pointer to reception data buffer
1680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  Size amount of data to be sent and received
1681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval HAL status
1682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
1683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_TransmitReceive_IT(SPI_HandleTypeDef *hspi, uint8_t *pTxData, uint8_t *pR
1684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
1685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t             tmp_mode;
ARM GAS  /tmp/cc8c22lT.s 			page 31


1686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_SPI_StateTypeDef tmp_state;
1687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_StatusTypeDef    errorcode = HAL_OK;
1688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check Direction parameter */
1690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));
1691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process locked */
1693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_LOCK(hspi);
1694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Init temporary variables */
1696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   tmp_state           = hspi->State;
1697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   tmp_mode            = hspi->Init.Mode;
1698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (!((tmp_state == HAL_SPI_STATE_READY) || \
1700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
1701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_BUSY;
1703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
1704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
1707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_ERROR;
1709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
1710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
1713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_BUSY_RX)
1714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
1716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the transaction information */
1719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
1721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferSize  = Size;
1722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount = Size;
1723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
1724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferSize  = Size;
1725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount = Size;
1726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the function for IT treatment */
1728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
1729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->RxISR     = SPI_2linesRxISR_16BIT;
1731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->TxISR     = SPI_2linesTxISR_16BIT;
1732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
1734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->RxISR     = SPI_2linesRxISR_8BIT;
1736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->TxISR     = SPI_2linesTxISR_8BIT;
1737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Reset CRC Calculation */
1741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
ARM GAS  /tmp/cc8c22lT.s 			page 32


1743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->CRCSize = 1U;
1744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if ((hspi->Init.DataSize <= SPI_DATASIZE_8BIT) && (hspi->Init.CRCLength == SPI_CRC_LENGTH_16BIT
1745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
1746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->CRCSize = 2U;
1747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
1748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
1751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->CRCSize = 0U;
1753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check if packing mode is enabled and if there is more than 2 data to receive */
1757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) || (Size >= 2U))
1758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Set RX Fifo threshold according the reception data length: 16 bit */
1760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
1761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
1763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Set RX Fifo threshold according the reception data length: 8 bit */
1765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
1766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Enable TXE, RXNE and ERR interrupt */
1769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
1770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
1773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Enable SPI peripheral */
1775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
1776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** error :
1779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process Unlocked */
1780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return errorcode;
1782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
1783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
1785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Transmit an amount of data in non-blocking mode with DMA.
1786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
1788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  pData pointer to data buffer
1789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  Size amount of data to be sent
1790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval HAL status
1791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
1792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Transmit_DMA(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
1793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
1794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
1795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check tx dma handle */
1797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   assert_param(IS_SPI_DMA_HANDLE(hspi->hdmatx));
1798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check Direction parameter */
ARM GAS  /tmp/cc8c22lT.s 			page 33


1800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));
1801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process Locked */
1803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_LOCK(hspi);
1804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
1806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_BUSY;
1808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
1809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
1812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_ERROR;
1814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
1815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the transaction information */
1818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_TX;
1819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
1821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferSize  = Size;
1822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount = Size;
1823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Init field not used in handle to zero */
1825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)NULL;
1826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxISR       = NULL;
1827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxISR       = NULL;
1828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
1829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount = 0U;
1830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Configure communication direction : 1Line */
1832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
1833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SPI_1LINE_TX(hspi);
1835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Reset CRC Calculation */
1839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the SPI TxDMA Half transfer complete callback */
1846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->hdmatx->XferHalfCpltCallback = SPI_DMAHalfTransmitCplt;
1847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the SPI TxDMA transfer complete callback */
1849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->hdmatx->XferCpltCallback = SPI_DMATransmitCplt;
1850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the DMA error callback */
1852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->hdmatx->XferErrorCallback = SPI_DMAError;
1853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the DMA AbortCpltCallback */
1855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->hdmatx->XferAbortCallback = NULL;
1856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
ARM GAS  /tmp/cc8c22lT.s 			page 34


1857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_LDMATX);
1858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Packing mode is enabled only if the DMA setting is HALWORD */
1859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->Init.DataSize <= SPI_DATASIZE_8BIT) && (hspi->hdmatx->Init.MemDataAlignment == DMA_MDA
1860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Check the even/odd of the data size + crc if enabled */
1862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if ((hspi->TxXferCount & 0x1U) == 0U)
1863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
1864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_LDMATX);
1865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->TxXferCount = (hspi->TxXferCount >> 1U);
1866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
1867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     else
1868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
1869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR2, SPI_CR2_LDMATX);
1870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->TxXferCount = (hspi->TxXferCount >> 1U) + 1U;
1871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
1872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Enable the Tx DMA Stream/Channel */
1875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instanc
1876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Update SPI error code */
1878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
1879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_ERROR;
1880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
1882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
1883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
1887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Enable SPI peripheral */
1889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
1890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Enable the SPI Error Interrupt Bit */
1893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_ERR));
1894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Enable Tx DMA Request */
1896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
1897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** error :
1899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process Unlocked */
1900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return errorcode;
1902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
1903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
1905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Receive an amount of data in non-blocking mode with DMA.
1906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @note   In case of MASTER mode and SPI_DIRECTION_2LINES direction, hdmatx shall be defined.
1907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
1909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  pData pointer to data buffer
1910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @note   When the CRC feature is enabled the pData Length must be Size + 1.
1911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  Size amount of data to be sent
1912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval HAL status
1913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
ARM GAS  /tmp/cc8c22lT.s 			page 35


1914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Receive_DMA(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
1915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
1916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
1917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check rx dma handle */
1919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   assert_param(IS_SPI_DMA_HANDLE(hspi->hdmarx));
1920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->Init.Direction == SPI_DIRECTION_2LINES) && (hspi->Init.Mode == SPI_MODE_MASTER))
1922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_RX;
1924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Check tx dma handle */
1926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     assert_param(IS_SPI_DMA_HANDLE(hspi->hdmatx));
1927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line 
1929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     return HAL_SPI_TransmitReceive_DMA(hspi, pData, pData, Size);
1930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process Locked */
1933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_LOCK(hspi);
1934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
1936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_BUSY;
1938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
1939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
1942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_ERROR;
1944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
1945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the transaction information */
1948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_RX;
1949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
1951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferSize  = Size;
1952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount = Size;
1953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /*Init field not used in handle to zero */
1955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxISR       = NULL;
1956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxISR       = NULL;
1957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
1958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount = 0U;
1959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Configure communication direction : 1Line */
1961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
1962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SPI_1LINE_RX(hspi);
1964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Reset CRC Calculation */
1968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
ARM GAS  /tmp/cc8c22lT.s 			page 36


1971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_LDMARX);
1976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
1977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Set RX Fifo threshold according the reception data length: 16bit */
1979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
1980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
1982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Set RX Fifo threshold according the reception data length: 8bit */
1984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
1985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->hdmarx->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
1987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
1988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Set RX Fifo threshold according the reception data length: 16bit */
1989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       CLEAR_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
1990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if ((hspi->RxXferCount & 0x1U) == 0x0U)
1992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
1993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_LDMARX);
1994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->RxXferCount = hspi->RxXferCount >> 1U;
1995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
1996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       else
1997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
1998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         SET_BIT(hspi->Instance->CR2, SPI_CR2_LDMARX);
1999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->RxXferCount = (hspi->RxXferCount >> 1U) + 1U;
2000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
2001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the SPI RxDMA Half transfer complete callback */
2005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->hdmarx->XferHalfCpltCallback = SPI_DMAHalfReceiveCplt;
2006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the SPI Rx DMA transfer complete callback */
2008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->hdmarx->XferCpltCallback = SPI_DMAReceiveCplt;
2009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the DMA error callback */
2011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->hdmarx->XferErrorCallback = SPI_DMAError;
2012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the DMA AbortCpltCallback */
2014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->hdmarx->XferAbortCallback = NULL;
2015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Enable the Rx DMA Stream/Channel  */
2017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmarx, (uint32_t)&hspi->Instance->DR, (uint32_t)hspi->pRxBu
2018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Update SPI error code */
2020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
2021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_ERROR;
2022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
2024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
2025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check if the SPI is already enabled */
ARM GAS  /tmp/cc8c22lT.s 			page 37


2028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
2029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Enable SPI peripheral */
2031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
2032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Enable the SPI Error Interrupt Bit */
2035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_ERR));
2036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Enable Rx DMA Request */
2038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_RXDMAEN);
2039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** error:
2041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process Unlocked */
2042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
2043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return errorcode;
2044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
2045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Transmit and Receive an amount of data in non-blocking mode with DMA.
2048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
2050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  pTxData pointer to transmission data buffer
2051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  pRxData pointer to reception data buffer
2052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @note   When the CRC feature is enabled the pRxData Length must be Size + 1
2053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  Size amount of data to be sent
2054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval HAL status
2055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_TransmitReceive_DMA(SPI_HandleTypeDef *hspi, uint8_t *pTxData, uint8_t *p
2057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                                               uint16_t Size)
2058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
2059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t             tmp_mode;
2060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_SPI_StateTypeDef tmp_state;
2061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
2062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check rx & tx dma handles */
2064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   assert_param(IS_SPI_DMA_HANDLE(hspi->hdmarx));
2065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   assert_param(IS_SPI_DMA_HANDLE(hspi->hdmatx));
2066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check Direction parameter */
2068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));
2069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process locked */
2071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_LOCK(hspi);
2072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Init temporary variables */
2074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   tmp_state           = hspi->State;
2075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   tmp_mode            = hspi->Init.Mode;
2076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (!((tmp_state == HAL_SPI_STATE_READY) ||
2078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
2079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_BUSY;
2081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
2082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
ARM GAS  /tmp/cc8c22lT.s 			page 38


2085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_ERROR;
2087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
2088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
2091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_BUSY_RX)
2092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
2094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the transaction information */
2097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
2098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
2099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferSize  = Size;
2100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount = Size;
2101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
2102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferSize  = Size;
2103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount = Size;
2104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Init field not used in handle to zero */
2106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxISR       = NULL;
2107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxISR       = NULL;
2108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Reset CRC Calculation */
2111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
2112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
2114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
2116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Reset the threshold bit */
2118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_LDMATX | SPI_CR2_LDMARX);
2119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* The packing mode management is enabled by the DMA settings according the spi data size */
2121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
2122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Set fiforxthreshold according the reception data length: 16bit */
2124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
2125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
2127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Set RX Fifo threshold according the reception data length: 8bit */
2129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
2130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->hdmatx->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
2132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if ((hspi->TxXferSize & 0x1U) == 0x0U)
2134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
2135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_LDMATX);
2136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->TxXferCount = hspi->TxXferCount >> 1U;
2137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
2138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       else
2139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
2140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         SET_BIT(hspi->Instance->CR2, SPI_CR2_LDMATX);
2141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->TxXferCount = (hspi->TxXferCount >> 1U) + 1U;
ARM GAS  /tmp/cc8c22lT.s 			page 39


2142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
2143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->hdmarx->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
2146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Set RX Fifo threshold according the reception data length: 16bit */
2148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       CLEAR_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
2149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if ((hspi->RxXferCount & 0x1U) == 0x0U)
2151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
2152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_LDMARX);
2153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->RxXferCount = hspi->RxXferCount >> 1U;
2154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
2155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       else
2156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
2157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         SET_BIT(hspi->Instance->CR2, SPI_CR2_LDMARX);
2158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->RxXferCount = (hspi->RxXferCount >> 1U) + 1U;
2159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
2160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check if we are in Rx only or in Rx/Tx Mode and configure the DMA transfer complete callback *
2164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->State == HAL_SPI_STATE_BUSY_RX)
2165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Set the SPI Rx DMA Half transfer complete callback */
2167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->hdmarx->XferHalfCpltCallback = SPI_DMAHalfReceiveCplt;
2168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->hdmarx->XferCpltCallback     = SPI_DMAReceiveCplt;
2169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
2171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Set the SPI Tx/Rx DMA Half transfer complete callback */
2173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->hdmarx->XferHalfCpltCallback = SPI_DMAHalfTransmitReceiveCplt;
2174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->hdmarx->XferCpltCallback     = SPI_DMATransmitReceiveCplt;
2175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the DMA error callback */
2178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->hdmarx->XferErrorCallback = SPI_DMAError;
2179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the DMA AbortCpltCallback */
2181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->hdmarx->XferAbortCallback = NULL;
2182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Enable the Rx DMA Stream/Channel  */
2184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmarx, (uint32_t)&hspi->Instance->DR, (uint32_t)hspi->pRxBu
2185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Update SPI error code */
2187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
2188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_ERROR;
2189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
2191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
2192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Enable Rx DMA Request */
2195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_RXDMAEN);
2196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the SPI Tx DMA transfer complete callback as NULL because the communication closing
2198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   is performed in DMA reception complete callback  */
ARM GAS  /tmp/cc8c22lT.s 			page 40


2199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->hdmatx->XferHalfCpltCallback = NULL;
2200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->hdmatx->XferCpltCallback     = NULL;
2201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->hdmatx->XferErrorCallback    = NULL;
2202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->hdmatx->XferAbortCallback    = NULL;
2203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Enable the Tx DMA Stream/Channel  */
2205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instanc
2206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Update SPI error code */
2208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
2209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_ERROR;
2210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
2212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
2213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check if the SPI is already enabled */
2216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
2217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Enable SPI peripheral */
2219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
2220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Enable the SPI Error Interrupt Bit */
2222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_ERR));
2223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Enable Tx DMA Request */
2225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
2226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** error :
2228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process Unlocked */
2229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
2230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return errorcode;
2231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
2232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Abort ongoing transfer (blocking mode).
2235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi SPI handle.
2236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @note   This procedure could be used for aborting any ongoing transfer (Tx and Rx),
2237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *         started in Interrupt or DMA mode.
2238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *         This procedure performs following operations :
2239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *           - Disable SPI Interrupts (depending of transfer direction)
2240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
2242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *           - Set handle State to READY
2243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
2244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval HAL status
2245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** */
2246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Abort(SPI_HandleTypeDef *hspi)
2247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
2248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode;
2249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __IO uint32_t count, resetcount;
2250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Initialized local variable  */
2252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   errorcode = HAL_OK;
2253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   resetcount = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
2254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   count = resetcount;
2255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
ARM GAS  /tmp/cc8c22lT.s 			page 41


2256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Clear ERRIE interrupt to avoid error interrupts generation during Abort procedure */
2257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_ERRIE);
2258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable TXEIE, RXNEIE and ERRIE(mode fault event, overrun error, TI frame error) interrupts */
2260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXEIE))
2261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->TxISR = SPI_AbortTx_ISR;
2263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
2264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     do
2265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (count == 0U)
2267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
2268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
2269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         break;
2270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
2271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       count--;
2272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     while (hspi->State != HAL_SPI_STATE_ABORT);
2274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Reset Timeout Counter */
2275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     count = resetcount;
2276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXNEIE))
2279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->RxISR = SPI_AbortRx_ISR;
2281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
2282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     do
2283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (count == 0U)
2285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
2286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
2287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         break;
2288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
2289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       count--;
2290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     while (hspi->State != HAL_SPI_STATE_ABORT);
2292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Reset Timeout Counter */
2293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     count = resetcount;
2294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable the SPI DMA Tx request if enabled */
2297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXDMAEN))
2298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Abort the SPI DMA Tx Stream/Channel : use blocking DMA Abort API (no callback) */
2300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->hdmatx != NULL)
2301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Set the SPI DMA Abort callback :
2303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       will lead to call HAL_SPI_AbortCpltCallback() at end of DMA abort procedure */
2304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->hdmatx->XferAbortCallback = NULL;
2305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Abort DMA Tx Handle linked to SPI Peripheral */
2307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (HAL_DMA_Abort(hspi->hdmatx) != HAL_OK)
2308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
2309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
2310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
2311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Disable Tx DMA Request */
ARM GAS  /tmp/cc8c22lT.s 			page 42


2313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXDMAEN));
2314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, HAL_GetTick()) != HAL_OK)
2316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
2317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
2318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
2319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Disable SPI Peripheral */
2321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       __HAL_SPI_DISABLE(hspi);
2322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Empty the FRLVL fifo */
2324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, SPI_DEFAULT_TIMEOUT,
2325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
2326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
2327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
2328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable the SPI DMA Rx request if enabled */
2332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXDMAEN))
2333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Abort the SPI DMA Rx Stream/Channel : use blocking DMA Abort API (no callback) */
2335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->hdmarx != NULL)
2336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Set the SPI DMA Abort callback :
2338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       will lead to call HAL_SPI_AbortCpltCallback() at end of DMA abort procedure */
2339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->hdmarx->XferAbortCallback = NULL;
2340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Abort DMA Rx Handle linked to SPI Peripheral */
2342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (HAL_DMA_Abort(hspi->hdmarx) != HAL_OK)
2343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
2344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
2345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
2346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Disable peripheral */
2348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       __HAL_SPI_DISABLE(hspi);
2349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Control the BSY flag */
2351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, SPI_DEFAULT_TIMEOUT, HAL_GetTick
2352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
2353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
2354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
2355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Empty the FRLVL fifo */
2357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, SPI_DEFAULT_TIMEOUT,
2358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
2359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
2360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
2361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Disable Rx DMA Request */
2363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_RXDMAEN));
2364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Reset Tx and Rx transfer counters */
2367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount = 0U;
2368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount = 0U;
2369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
ARM GAS  /tmp/cc8c22lT.s 			page 43


2370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check error during Abort procedure */
2371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->ErrorCode == HAL_SPI_ERROR_ABORT)
2372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* return HAL_Error in case of error during Abort procedure */
2374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_ERROR;
2375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
2377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Reset errorCode */
2379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_NONE;
2380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Clear the Error flags in the SR register */
2383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_CLEAR_OVRFLAG(hspi);
2384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_CLEAR_FREFLAG(hspi);
2385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Restore hspi->state to ready */
2387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
2388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return errorcode;
2390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
2391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Abort ongoing transfer (Interrupt mode).
2394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi SPI handle.
2395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @note   This procedure could be used for aborting any ongoing transfer (Tx and Rx),
2396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *         started in Interrupt or DMA mode.
2397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *         This procedure performs following operations :
2398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *           - Disable SPI Interrupts (depending of transfer direction)
2399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *           - Set handle State to READY
2402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *           - At abort completion, call user abort complete callback
2403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval HAL status
2406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** */
2407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Abort_IT(SPI_HandleTypeDef *hspi)
2408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
2409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode;
2410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t abortcplt ;
2411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __IO uint32_t count, resetcount;
2412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Initialized local variable  */
2414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   errorcode = HAL_OK;
2415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   abortcplt = 1U;
2416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   resetcount = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
2417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   count = resetcount;
2418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Clear ERRIE interrupt to avoid error interrupts generation during Abort procedure */
2420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_ERRIE);
2421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Change Rx and Tx Irq Handler to Disable TXEIE, RXNEIE and ERRIE interrupts */
2423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXEIE))
2424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->TxISR = SPI_AbortTx_ISR;
2426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
ARM GAS  /tmp/cc8c22lT.s 			page 44


2427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     do
2428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (count == 0U)
2430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
2431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
2432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         break;
2433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
2434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       count--;
2435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     while (hspi->State != HAL_SPI_STATE_ABORT);
2437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Reset Timeout Counter */
2438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     count = resetcount;
2439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXNEIE))
2442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->RxISR = SPI_AbortRx_ISR;
2444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
2445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     do
2446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (count == 0U)
2448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
2449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
2450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         break;
2451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
2452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       count--;
2453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     while (hspi->State != HAL_SPI_STATE_ABORT);
2455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Reset Timeout Counter */
2456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     count = resetcount;
2457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to SPI Handle, DMA Abort complete callbacks sho
2460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****      before any call to DMA Abort functions */
2461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* DMA Tx Handle is valid */
2462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->hdmatx != NULL)
2463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
2465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        Otherwise, set it to NULL */
2466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXDMAEN))
2467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->hdmatx->XferAbortCallback = SPI_DMATxAbortCallback;
2469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     else
2471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->hdmatx->XferAbortCallback = NULL;
2473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* DMA Rx Handle is valid */
2476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->hdmarx != NULL)
2477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
2479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        Otherwise, set it to NULL */
2480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXDMAEN))
2481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->hdmarx->XferAbortCallback = SPI_DMARxAbortCallback;
2483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
ARM GAS  /tmp/cc8c22lT.s 			page 45


2484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     else
2485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->hdmarx->XferAbortCallback = NULL;
2487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable the SPI DMA Tx request if enabled */
2491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXDMAEN))
2492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Abort the SPI DMA Tx Stream/Channel */
2494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->hdmatx != NULL)
2495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Abort DMA Tx Handle linked to SPI Peripheral */
2497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (HAL_DMA_Abort_IT(hspi->hdmatx) != HAL_OK)
2498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
2499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->hdmatx->XferAbortCallback = NULL;
2500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
2501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
2502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       else
2503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
2504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         abortcplt = 0U;
2505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
2506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable the SPI DMA Rx request if enabled */
2509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXDMAEN))
2510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Abort the SPI DMA Rx Stream/Channel */
2512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->hdmarx != NULL)
2513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Abort DMA Rx Handle linked to SPI Peripheral */
2515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (HAL_DMA_Abort_IT(hspi->hdmarx) !=  HAL_OK)
2516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
2517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->hdmarx->XferAbortCallback = NULL;
2518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
2519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
2520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       else
2521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
2522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         abortcplt = 0U;
2523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
2524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (abortcplt == 1U)
2528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Reset Tx and Rx transfer counters */
2530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->RxXferCount = 0U;
2531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->TxXferCount = 0U;
2532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Check error during Abort procedure */
2534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->ErrorCode == HAL_SPI_ERROR_ABORT)
2535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* return HAL_Error in case of error during Abort procedure */
2537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       errorcode = HAL_ERROR;
2538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     else
2540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
ARM GAS  /tmp/cc8c22lT.s 			page 46


2541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Reset errorCode */
2542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->ErrorCode = HAL_SPI_ERROR_NONE;
2543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Clear the Error flags in the SR register */
2546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_CLEAR_OVRFLAG(hspi);
2547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_CLEAR_FREFLAG(hspi);
2548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Restore hspi->State to Ready */
2550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
2551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->AbortCpltCallback(hspi);
2555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #else
2556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     HAL_SPI_AbortCpltCallback(hspi);
2557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return errorcode;
2561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
2562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Pause the DMA Transfer.
2565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for the specified SPI module.
2567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval HAL status
2568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DMAPause(SPI_HandleTypeDef *hspi)
2570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
2571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process Locked */
2572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_LOCK(hspi);
2573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable the SPI DMA Tx & Rx requests */
2575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
2576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process Unlocked */
2578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
2579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return HAL_OK;
2581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
2582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Resume the DMA Transfer.
2585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for the specified SPI module.
2587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval HAL status
2588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DMAResume(SPI_HandleTypeDef *hspi)
2590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
2591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process Locked */
2592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_LOCK(hspi);
2593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Enable the SPI DMA Tx & Rx requests */
2595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
2596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process Unlocked */
ARM GAS  /tmp/cc8c22lT.s 			page 47


2598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
2599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return HAL_OK;
2601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
2602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Stop the DMA Transfer.
2605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for the specified SPI module.
2607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval HAL status
2608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DMAStop(SPI_HandleTypeDef *hspi)
2610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
2611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
2612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* The Lock is not implemented on this API to allow the user application
2613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****      to call the HAL SPI API under callbacks HAL_SPI_TxCpltCallback() or HAL_SPI_RxCpltCallback() o
2614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****      when calling HAL_DMA_Abort() API the DMA TX/RX Transfer complete interrupt is generated
2615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****      and the correspond call back is executed HAL_SPI_TxCpltCallback() or HAL_SPI_RxCpltCallback() 
2616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****      */
2617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Abort the SPI DMA tx Stream/Channel  */
2619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->hdmatx != NULL)
2620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (HAL_OK != HAL_DMA_Abort(hspi->hdmatx))
2622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
2624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       errorcode = HAL_ERROR;
2625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Abort the SPI DMA rx Stream/Channel  */
2628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->hdmarx != NULL)
2629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (HAL_OK != HAL_DMA_Abort(hspi->hdmarx))
2631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
2633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       errorcode = HAL_ERROR;
2634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable the SPI DMA Tx & Rx requests */
2638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
2639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
2640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return errorcode;
2641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
2642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Handle SPI interrupt request.
2645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for the specified SPI module.
2647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
2648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** void HAL_SPI_IRQHandler(SPI_HandleTypeDef *hspi)
2650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
2651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t itsource = hspi->Instance->CR2;
2652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t itflag   = hspi->Instance->SR;
2653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* SPI in mode Receiver ----------------------------------------------------*/
ARM GAS  /tmp/cc8c22lT.s 			page 48


2655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) == RESET) &&
2656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       (SPI_CHECK_FLAG(itflag, SPI_FLAG_RXNE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_RXN
2657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->RxISR(hspi);
2659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     return;
2660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* SPI in mode Transmitter -------------------------------------------------*/
2663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((SPI_CHECK_FLAG(itflag, SPI_FLAG_TXE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_TXE)
2664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->TxISR(hspi);
2666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     return;
2667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* SPI in Error Treatment --------------------------------------------------*/
2670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (((SPI_CHECK_FLAG(itflag, SPI_FLAG_MODF) != RESET) || (SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) !=
2671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* SPI Overrun error interrupt occurred ----------------------------------*/
2673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) != RESET)
2674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (hspi->State != HAL_SPI_STATE_BUSY_TX)
2676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
2677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_OVR);
2678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         __HAL_SPI_CLEAR_OVRFLAG(hspi);
2679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
2680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       else
2681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
2682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         __HAL_SPI_CLEAR_OVRFLAG(hspi);
2683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         return;
2684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
2685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* SPI Mode Fault error interrupt occurred -------------------------------*/
2688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (SPI_CHECK_FLAG(itflag, SPI_FLAG_MODF) != RESET)
2689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_MODF);
2691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       __HAL_SPI_CLEAR_MODFFLAG(hspi);
2692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* SPI Frame error interrupt occurred ------------------------------------*/
2695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (SPI_CHECK_FLAG(itflag, SPI_FLAG_FRE) != RESET)
2696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FRE);
2698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       __HAL_SPI_CLEAR_FREFLAG(hspi);
2699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
2702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Disable all interrupts */
2704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXNE | SPI_IT_TXE | SPI_IT_ERR);
2705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->State = HAL_SPI_STATE_READY;
2707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Disable the SPI DMA requests if enabled */
2708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if ((HAL_IS_BIT_SET(itsource, SPI_CR2_TXDMAEN)) || (HAL_IS_BIT_SET(itsource, SPI_CR2_RXDMAEN)
2709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
2710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN));
2711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
ARM GAS  /tmp/cc8c22lT.s 			page 49


2712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Abort the SPI DMA Rx channel */
2713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         if (hspi->hdmarx != NULL)
2714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
2715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           /* Set the SPI DMA Abort callback :
2716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           will lead to call HAL_SPI_ErrorCallback() at end of DMA abort procedure */
2717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           hspi->hdmarx->XferAbortCallback = SPI_DMAAbortOnError;
2718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmarx))
2719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           {
2720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
2721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           }
2722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
2723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Abort the SPI DMA Tx channel */
2724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         if (hspi->hdmatx != NULL)
2725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
2726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           /* Set the SPI DMA Abort callback :
2727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           will lead to call HAL_SPI_ErrorCallback() at end of DMA abort procedure */
2728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           hspi->hdmatx->XferAbortCallback = SPI_DMAAbortOnError;
2729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmatx))
2730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           {
2731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
2732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           }
2733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
2734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
2735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       else
2736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
2737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Call user error callback */
2738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->ErrorCallback(hspi);
2740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #else
2741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         HAL_SPI_ErrorCallback(hspi);
2742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
2744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     return;
2746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
2748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Tx Transfer completed callback.
2751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
2753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
2754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** __weak void HAL_SPI_TxCpltCallback(SPI_HandleTypeDef *hspi)
2756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
2757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   UNUSED(hspi);
2759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             the HAL_SPI_TxCpltCallback should be implemented in the user file
2762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****    */
2763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
2764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Rx Transfer completed callback.
2767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
ARM GAS  /tmp/cc8c22lT.s 			page 50


2769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
2770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** __weak void HAL_SPI_RxCpltCallback(SPI_HandleTypeDef *hspi)
2772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
2773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   UNUSED(hspi);
2775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             the HAL_SPI_RxCpltCallback should be implemented in the user file
2778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****    */
2779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
2780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Tx and Rx Transfer completed callback.
2783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
2785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
2786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** __weak void HAL_SPI_TxRxCpltCallback(SPI_HandleTypeDef *hspi)
2788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
2789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   UNUSED(hspi);
2791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             the HAL_SPI_TxRxCpltCallback should be implemented in the user file
2794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****    */
2795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
2796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Tx Half Transfer completed callback.
2799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
2801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
2802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** __weak void HAL_SPI_TxHalfCpltCallback(SPI_HandleTypeDef *hspi)
2804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
2805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   UNUSED(hspi);
2807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             the HAL_SPI_TxHalfCpltCallback should be implemented in the user file
2810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****    */
2811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
2812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Rx Half Transfer completed callback.
2815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
2817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
2818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** __weak void HAL_SPI_RxHalfCpltCallback(SPI_HandleTypeDef *hspi)
2820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
2821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   UNUSED(hspi);
2823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             the HAL_SPI_RxHalfCpltCallback() should be implemented in the user file
ARM GAS  /tmp/cc8c22lT.s 			page 51


2826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****    */
2827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
2828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Tx and Rx Half Transfer callback.
2831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
2833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
2834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** __weak void HAL_SPI_TxRxHalfCpltCallback(SPI_HandleTypeDef *hspi)
2836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
2837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   UNUSED(hspi);
2839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             the HAL_SPI_TxRxHalfCpltCallback() should be implemented in the user file
2842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****    */
2843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
2844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  SPI error callback.
2847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
2849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
2850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** __weak void HAL_SPI_ErrorCallback(SPI_HandleTypeDef *hspi)
2852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
2853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   UNUSED(hspi);
2855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             the HAL_SPI_ErrorCallback should be implemented in the user file
2858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****    */
2859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* NOTE : The ErrorCode parameter in the hspi handle is updated by the SPI processes
2860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             and user can use HAL_SPI_GetError() API to check the latest error occurred
2861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****    */
2862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
2863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  SPI Abort Complete callback.
2866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi SPI handle.
2867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
2868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** __weak void HAL_SPI_AbortCpltCallback(SPI_HandleTypeDef *hspi)
2870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
2871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   UNUSED(hspi);
2873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             the HAL_SPI_AbortCpltCallback can be implemented in the user file.
2876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****    */
2877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
2878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @}
2881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
ARM GAS  /tmp/cc8c22lT.s 			page 52


2883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /** @defgroup SPI_Exported_Functions_Group3 Peripheral State and Errors functions
2884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief   SPI control functions
2885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *
2886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** @verbatim
2887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****  ===============================================================================
2888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                       ##### Peripheral State and Errors functions #####
2889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****  ===============================================================================
2890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     [..]
2891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     This subsection provides a set of functions allowing to control the SPI.
2892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****      (+) HAL_SPI_GetState() API can be helpful to check in run-time the state of the SPI peripheral
2893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****      (+) HAL_SPI_GetError() check in run-time Errors occurring during communication
2894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** @endverbatim
2895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @{
2896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Return the SPI handle state.
2900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
2902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval SPI state
2903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** HAL_SPI_StateTypeDef HAL_SPI_GetState(SPI_HandleTypeDef *hspi)
2905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
2906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Return SPI handle state */
2907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return hspi->State;
2908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
2909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Return the SPI error code.
2912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
2914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval SPI error code in bitmap format
2915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** uint32_t HAL_SPI_GetError(SPI_HandleTypeDef *hspi)
2917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
2918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Return SPI ErrorCode */
2919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return hspi->ErrorCode;
2920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
2921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @}
2924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @}
2928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /** @addtogroup SPI_Private_Functions
2931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief   Private functions
2932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @{
2933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  DMA SPI transmit process complete callback.
2937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
2939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
ARM GAS  /tmp/cc8c22lT.s 			page 53


2940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_DMATransmitCplt(DMA_HandleTypeDef *hdma)
2942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
2943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
2944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t tickstart;
2945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Init tickstart for timeout management*/
2947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   tickstart = HAL_GetTick();
2948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* DMA Normal Mode */
2950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hdma->Instance->CR & DMA_SxCR_CIRC) != DMA_SxCR_CIRC)
2951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Disable ERR interrupt */
2953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
2954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Disable Tx DMA Request */
2956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
2957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Check the end of the transaction */
2959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
2960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
2962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Clear overrun flag in 2 Lines communication mode because received data is not read */
2965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
2966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       __HAL_SPI_CLEAR_OVRFLAG(hspi);
2968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->TxXferCount = 0U;
2971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
2972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
2974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Call user error callback */
2976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->ErrorCallback(hspi);
2978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #else
2979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
2980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       return;
2982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Call user Tx complete callback */
2985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxCpltCallback(hspi);
2987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #else
2988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_SPI_TxCpltCallback(hspi);
2989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
2991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  DMA SPI receive process complete callback.
2994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
2996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
ARM GAS  /tmp/cc8c22lT.s 			page 54


2997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
2999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
3000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
3001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t tickstart;
3002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Init tickstart for timeout management*/
3004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   tickstart = HAL_GetTick();
3005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* DMA Normal Mode */
3007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hdma->Instance->CR & DMA_SxCR_CIRC) != DMA_SxCR_CIRC)
3008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Disable ERR interrupt */
3010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
3011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* CRC handling */
3014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Wait until RXNE flag */
3017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, SPI_DEFAULT_TIMEOUT, tickstart) !
3018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
3019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Error on the CRC reception */
3020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
3021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
3022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Read CRC */
3023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
3024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
3025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Read 16bit CRC */
3026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         READ_REG(hspi->Instance->DR);
3027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
3028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       else
3029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
3030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Read 8bit CRC */
3031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         READ_REG(*(__IO uint8_t *)&hspi->Instance->DR);
3032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         if (hspi->Init.CRCLength == SPI_CRC_LENGTH_16BIT)
3034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
3035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, SPI_DEFAULT_TIMEOUT, tickstar
3036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           {
3037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             /* Error on the CRC reception */
3038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
3039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           }
3040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           /* Read 8bit CRC again in case of 16bit CRC in 8bit Data mode */
3041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           READ_REG(*(__IO uint8_t *)&hspi->Instance->DR);
3042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
3043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
3044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Disable Rx/Tx DMA Request (done by default to handle the case master rx direction 2 lines) *
3048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
3049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Check the end of the transaction */
3051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (SPI_EndRxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
3052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
ARM GAS  /tmp/cc8c22lT.s 			page 55


3054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->RxXferCount = 0U;
3057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
3058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Check if CRC error occurred */
3061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR))
3062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
3064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
3065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
3069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Call user error callback */
3071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->ErrorCallback(hspi);
3073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #else
3074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
3075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       return;
3077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Call user Rx complete callback */
3080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxCpltCallback(hspi);
3082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #else
3083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_SPI_RxCpltCallback(hspi);
3084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
3086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  DMA SPI transmit receive process complete callback.
3089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
3090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
3091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
3092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_DMATransmitReceiveCplt(DMA_HandleTypeDef *hdma)
3094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
3095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
3096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t tickstart;
3097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Init tickstart for timeout management*/
3099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   tickstart = HAL_GetTick();
3100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* DMA Normal Mode */
3102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hdma->Instance->CR & DMA_SxCR_CIRC) != DMA_SxCR_CIRC)
3103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Disable ERR interrupt */
3105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
3106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* CRC handling */
3109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
ARM GAS  /tmp/cc8c22lT.s 			page 56


3111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if ((hspi->Init.DataSize == SPI_DATASIZE_8BIT) && (hspi->Init.CRCLength == SPI_CRC_LENGTH_8BI
3112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
3113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_QUARTER_FULL, SPI_DEFAULT
3114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                                           tickstart) != HAL_OK)
3115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
3116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           /* Error on the CRC reception */
3117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
3118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
3119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Read CRC to Flush DR and RXNE flag */
3120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         READ_REG(*(__IO uint8_t *)&hspi->Instance->DR);
3121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
3122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       else
3123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
3124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_HALF_FULL, SPI_DEFAULT_TI
3125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
3126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           /* Error on the CRC reception */
3127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
3128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
3129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Read CRC to Flush DR and RXNE flag */
3130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         READ_REG(hspi->Instance->DR);
3131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
3132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Check the end of the transaction */
3136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
3137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Disable Rx/Tx DMA Request */
3142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
3143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->TxXferCount = 0U;
3145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->RxXferCount = 0U;
3146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
3147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Check if CRC error occurred */
3150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR))
3151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
3153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
3154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
3158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Call user error callback */
3160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->ErrorCallback(hspi);
3162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #else
3163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
3164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       return;
3166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
ARM GAS  /tmp/cc8c22lT.s 			page 57


3168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Call user TxRx complete callback */
3169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxRxCpltCallback(hspi);
3171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #else
3172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_SPI_TxRxCpltCallback(hspi);
3173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
3175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  DMA SPI half transmit process complete callback.
3178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
3179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
3180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
3181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_DMAHalfTransmitCplt(DMA_HandleTypeDef *hdma)
3183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
3184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
3185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Call user Tx half complete callback */
3187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxHalfCpltCallback(hspi);
3189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #else
3190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_SPI_TxHalfCpltCallback(hspi);
3191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
3193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  DMA SPI half receive process complete callback
3196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
3197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
3198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
3199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_DMAHalfReceiveCplt(DMA_HandleTypeDef *hdma)
3201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
3202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
3203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Call user Rx half complete callback */
3205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxHalfCpltCallback(hspi);
3207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #else
3208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_SPI_RxHalfCpltCallback(hspi);
3209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
3211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  DMA SPI half transmit receive process complete callback.
3214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
3215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
3216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
3217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_DMAHalfTransmitReceiveCplt(DMA_HandleTypeDef *hdma)
3219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
3220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
3221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Call user TxRx half complete callback */
3223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxRxHalfCpltCallback(hspi);
ARM GAS  /tmp/cc8c22lT.s 			page 58


3225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #else
3226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_SPI_TxRxHalfCpltCallback(hspi);
3227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
3229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  DMA SPI communication error callback.
3232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
3233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
3234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
3235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_DMAError(DMA_HandleTypeDef *hdma)
3237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
3238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
3239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Stop the disable DMA transfer on SPI side */
3241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
3242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
3244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
3245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Call user error callback */
3246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->ErrorCallback(hspi);
3248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #else
3249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_SPI_ErrorCallback(hspi);
3250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
3252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  DMA SPI communication abort callback, when initiated by HAL services on Error
3255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
3256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hdma DMA handle.
3257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
3258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_DMAAbortOnError(DMA_HandleTypeDef *hdma)
3260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
3261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
3262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount = 0U;
3263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount = 0U;
3264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Call user error callback */
3266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->ErrorCallback(hspi);
3268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #else
3269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_SPI_ErrorCallback(hspi);
3270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
3272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  DMA SPI Tx communication abort callback, when initiated by user
3275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
3276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *         Abort still ongoing for Rx DMA Handle.
3278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hdma DMA handle.
3279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
3280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
ARM GAS  /tmp/cc8c22lT.s 			page 59


3282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
3283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
3284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->hdmatx->XferAbortCallback = NULL;
3286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable Tx DMA Request */
3288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
3289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, HAL_GetTick()) != HAL_OK)
3291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
3293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable SPI Peripheral */
3296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
3297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Empty the FRLVL fifo */
3299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, SPI_DEFAULT_TIMEOUT, HAL
3300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
3302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check if an Abort process is still ongoing */
3305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->hdmarx != NULL)
3306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->hdmarx->XferAbortCallback != NULL)
3308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       return;
3310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* No Abort process still ongoing : All DMA Stream/Channel are aborted, call user Abort Complete 
3314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount = 0U;
3315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount = 0U;
3316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check no error during Abort procedure */
3318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_ABORT)
3319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Reset errorCode */
3321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_NONE;
3322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Clear the Error flags in the SR register */
3325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_CLEAR_OVRFLAG(hspi);
3326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_CLEAR_FREFLAG(hspi);
3327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Restore hspi->State to Ready */
3329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State  = HAL_SPI_STATE_READY;
3330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Call user Abort complete callback */
3332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->AbortCpltCallback(hspi);
3334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #else
3335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_SPI_AbortCpltCallback(hspi);
3336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
3338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
ARM GAS  /tmp/cc8c22lT.s 			page 60


3339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  DMA SPI Rx communication abort callback, when initiated by user
3341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
3342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *         Abort still ongoing for Tx DMA Handle.
3344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hdma DMA handle.
3345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
3346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
3348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
3349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
3350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable SPI Peripheral */
3352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
3353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->hdmarx->XferAbortCallback = NULL;
3355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable Rx DMA Request */
3357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_RXDMAEN);
3358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Control the BSY flag */
3360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, SPI_DEFAULT_TIMEOUT, HAL_GetTick()) 
3361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
3363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Empty the FRLVL fifo */
3366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, SPI_DEFAULT_TIMEOUT, HAL
3367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
3369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check if an Abort process is still ongoing */
3372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->hdmatx != NULL)
3373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->hdmatx->XferAbortCallback != NULL)
3375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       return;
3377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* No Abort process still ongoing : All DMA Stream/Channel are aborted, call user Abort Complete 
3381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount = 0U;
3382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount = 0U;
3383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check no error during Abort procedure */
3385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_ABORT)
3386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Reset errorCode */
3388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_NONE;
3389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Clear the Error flags in the SR register */
3392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_CLEAR_OVRFLAG(hspi);
3393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_CLEAR_FREFLAG(hspi);
3394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Restore hspi->State to Ready */
ARM GAS  /tmp/cc8c22lT.s 			page 61


3396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State  = HAL_SPI_STATE_READY;
3397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Call user Abort complete callback */
3399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->AbortCpltCallback(hspi);
3401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #else
3402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_SPI_AbortCpltCallback(hspi);
3403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
3405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Rx 8-bit handler for Transmit and Receive in Interrupt mode.
3408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
3410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
3411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_2linesRxISR_8BIT(struct __SPI_HandleTypeDef *hspi)
3413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
3414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Receive data in packing mode */
3415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->RxXferCount > 1U)
3416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)(hspi->Instance->DR);
3418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->pRxBuffPtr += sizeof(uint16_t);
3419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->RxXferCount -= 2U;
3420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->RxXferCount == 1U)
3421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Set RX Fifo threshold according the reception data length: 8bit */
3423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
3424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Receive data in 8 Bit mode */
3427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
3428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     *hspi->pRxBuffPtr = *((__IO uint8_t *)&hspi->Instance->DR);
3430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->pRxBuffPtr++;
3431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->RxXferCount--;
3432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check end of the reception */
3435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->RxXferCount == 0U)
3436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
3441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->RxISR =  SPI_2linesRxISR_8BITCRC;
3442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       return;
3443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Disable RXNE  and ERR interrupt */
3447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
3448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->TxXferCount == 0U)
3450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SPI_CloseRxTx_ISR(hspi);
3452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
ARM GAS  /tmp/cc8c22lT.s 			page 62


3453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
3455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Rx 8-bit handler for Transmit and Receive in Interrupt mode.
3459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
3461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
3462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_2linesRxISR_8BITCRC(struct __SPI_HandleTypeDef *hspi)
3464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
3465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Read 8bit CRC to flush Data Regsiter */
3466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   READ_REG(*(__IO uint8_t *)&hspi->Instance->DR);
3467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->CRCSize--;
3469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check end of the reception */
3471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->CRCSize == 0U)
3472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Disable RXNE and ERR interrupt */
3474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
3475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->TxXferCount == 0U)
3477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SPI_CloseRxTx_ISR(hspi);
3479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
3482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Tx 8-bit handler for Transmit and Receive in Interrupt mode.
3486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
3488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
3489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_2linesTxISR_8BIT(struct __SPI_HandleTypeDef *hspi)
3491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
3492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Transmit data in packing Bit mode */
3493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->TxXferCount >= 2U)
3494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
3496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->pTxBuffPtr += sizeof(uint16_t);
3497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->TxXferCount -= 2U;
3498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Transmit data in 8 Bit mode */
3500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
3501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
3503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->pTxBuffPtr++;
3504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->TxXferCount--;
3505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check the end of the transmission */
3508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->TxXferCount == 0U)
3509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
ARM GAS  /tmp/cc8c22lT.s 			page 63


3510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Set CRC Next Bit to send CRC */
3514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Disable TXE interrupt */
3516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXE);
3517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       return;
3518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Disable TXE interrupt */
3522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXE);
3523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->RxXferCount == 0U)
3525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SPI_CloseRxTx_ISR(hspi);
3527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
3530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Rx 16-bit handler for Transmit and Receive in Interrupt mode.
3533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
3535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
3536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_2linesRxISR_16BIT(struct __SPI_HandleTypeDef *hspi)
3538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
3539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Receive data in 16 Bit mode */
3540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)(hspi->Instance->DR);
3541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pRxBuffPtr += sizeof(uint16_t);
3542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount--;
3543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->RxXferCount == 0U)
3545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->RxISR =  SPI_2linesRxISR_16BITCRC;
3550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       return;
3551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Disable RXNE interrupt */
3555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXNE);
3556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->TxXferCount == 0U)
3558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SPI_CloseRxTx_ISR(hspi);
3560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
3563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Manage the CRC 16-bit receive for Transmit and Receive in Interrupt mode.
ARM GAS  /tmp/cc8c22lT.s 			page 64


3567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
3569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
3570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_2linesRxISR_16BITCRC(struct __SPI_HandleTypeDef *hspi)
3572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
3573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Read 16bit CRC to flush Data Regsiter */
3574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   READ_REG(hspi->Instance->DR);
3575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable RXNE interrupt */
3577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXNE);
3578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SPI_CloseRxTx_ISR(hspi);
3580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
3581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Tx 16-bit handler for Transmit and Receive in Interrupt mode.
3585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
3587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
3588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_2linesTxISR_16BIT(struct __SPI_HandleTypeDef *hspi)
3590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
3591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
3592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
3593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pTxBuffPtr += sizeof(uint16_t);
3594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount--;
3595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Enable CRC Transmission */
3597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->TxXferCount == 0U)
3598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Set CRC Next Bit to send CRC */
3603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Disable TXE interrupt */
3605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXE);
3606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       return;
3607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Disable TXE interrupt */
3611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXE);
3612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->RxXferCount == 0U)
3614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SPI_CloseRxTx_ISR(hspi);
3616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
3619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Manage the CRC 8-bit receive in Interrupt context.
3623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
ARM GAS  /tmp/cc8c22lT.s 			page 65


3624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
3625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
3626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_RxISR_8BITCRC(struct __SPI_HandleTypeDef *hspi)
3628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
3629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Read 8bit CRC to flush Data Register */
3630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   READ_REG(*(__IO uint8_t *)&hspi->Instance->DR);
3631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->CRCSize--;
3633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->CRCSize == 0U)
3635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SPI_CloseRx_ISR(hspi);
3637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
3639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Manage the receive 8-bit in Interrupt context.
3643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
3645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
3646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_RxISR_8BIT(struct __SPI_HandleTypeDef *hspi)
3648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
3649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *hspi->pRxBuffPtr = (*(__IO uint8_t *)&hspi->Instance->DR);
3650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pRxBuffPtr++;
3651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount--;
3652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Enable CRC Transmission */
3655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->RxXferCount == 1U) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE))
3656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->RxXferCount == 0U)
3662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->RxISR =  SPI_RxISR_8BITCRC;
3667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       return;
3668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SPI_CloseRx_ISR(hspi);
3671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
3673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Manage the CRC 16-bit receive in Interrupt context.
3677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
3679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
3680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
ARM GAS  /tmp/cc8c22lT.s 			page 66


3681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_RxISR_16BITCRC(struct __SPI_HandleTypeDef *hspi)
3682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
3683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Read 16bit CRC to flush Data Register */
3684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   READ_REG(hspi->Instance->DR);
3685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable RXNE and ERR interrupt */
3687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
3688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SPI_CloseRx_ISR(hspi);
3690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
3691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Manage the 16-bit receive in Interrupt context.
3695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
3697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
3698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_RxISR_16BIT(struct __SPI_HandleTypeDef *hspi)
3700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
3701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)(hspi->Instance->DR);
3702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pRxBuffPtr += sizeof(uint16_t);
3703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount--;
3704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Enable CRC Transmission */
3707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->RxXferCount == 1U) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE))
3708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->RxXferCount == 0U)
3714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->RxISR = SPI_RxISR_16BITCRC;
3719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       return;
3720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SPI_CloseRx_ISR(hspi);
3723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
3725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Handle the data 8-bit transmit in Interrupt mode.
3728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
3730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
3731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_TxISR_8BIT(struct __SPI_HandleTypeDef *hspi)
3733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
3734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
3735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pTxBuffPtr++;
3736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount--;
3737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
ARM GAS  /tmp/cc8c22lT.s 			page 67


3738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->TxXferCount == 0U)
3739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Enable CRC Transmission */
3744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SPI_CloseTx_ISR(hspi);
3748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
3750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Handle the data 16-bit transmit in Interrupt mode.
3753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
3755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
3756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_TxISR_16BIT(struct __SPI_HandleTypeDef *hspi)
3758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
3759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
3760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
3761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pTxBuffPtr += sizeof(uint16_t);
3762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount--;
3763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->TxXferCount == 0U)
3765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Enable CRC Transmission */
3770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SPI_CloseTx_ISR(hspi);
3774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
3776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Handle SPI Communication Timeout.
3779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *              the configuration information for SPI module.
3781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  Flag SPI flag to check
3782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  State flag state to check
3783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  Timeout Timeout duration
3784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  Tickstart tick start value
3785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval HAL status
3786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, Flag
3788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                                                        uint32_t Timeout, uint32_t Tickstart)
3789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
  27              		.loc 1 3789 0
  28              		.cfi_startproc
  29              		@ args = 4, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LVL0:
ARM GAS  /tmp/cc8c22lT.s 			page 68


  32 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 24
  35              		.cfi_offset 3, -24
  36              		.cfi_offset 4, -20
  37              		.cfi_offset 5, -16
  38              		.cfi_offset 6, -12
  39              		.cfi_offset 7, -8
  40              		.cfi_offset 14, -4
  41 0002 0546     		mov	r5, r0
  42 0004 0F46     		mov	r7, r1
  43 0006 1646     		mov	r6, r2
  44 0008 1C46     		mov	r4, r3
  45              	.LVL1:
  46              	.L3:
3790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
  47              		.loc 1 3790 0
  48 000a 2B68     		ldr	r3, [r5]
  49 000c 9B68     		ldr	r3, [r3, #8]
  50 000e 37EA0303 		bics	r3, r7, r3
  51 0012 0CBF     		ite	eq
  52 0014 0123     		moveq	r3, #1
  53 0016 0023     		movne	r3, #0
  54 0018 B342     		cmp	r3, r6
  55 001a 37D0     		beq	.L10
3791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (Timeout != HAL_MAX_DELAY)
  56              		.loc 1 3792 0
  57 001c B4F1FF3F 		cmp	r4, #-1
  58 0020 F3D0     		beq	.L3
3793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (((HAL_GetTick() - Tickstart) >= Timeout) || (Timeout == 0U))
  59              		.loc 1 3794 0
  60 0022 FFF7FEFF 		bl	HAL_GetTick
  61              	.LVL2:
  62 0026 069B     		ldr	r3, [sp, #24]
  63 0028 C01A     		subs	r0, r0, r3
  64 002a A042     		cmp	r0, r4
  65 002c 01D2     		bcs	.L4
  66              		.loc 1 3794 0 is_stmt 0 discriminator 1
  67 002e 002C     		cmp	r4, #0
  68 0030 EBD1     		bne	.L3
  69              	.L4:
3795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
3796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Disable the SPI and reset the CRC: the CRC value should be cleared
3797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         on both master and slave sides in order to resynchronize the master
3798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         and slave for their respective CRC calculation */
3799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Disable TXE, RXNE and ERR interrupts for the interrupt process */
3801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
  70              		.loc 1 3801 0 is_stmt 1
  71 0032 2A68     		ldr	r2, [r5]
  72 0034 5368     		ldr	r3, [r2, #4]
  73 0036 23F0E003 		bic	r3, r3, #224
  74 003a 5360     		str	r3, [r2, #4]
3802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
ARM GAS  /tmp/cc8c22lT.s 			page 69


  75              		.loc 1 3803 0
  76 003c 6B68     		ldr	r3, [r5, #4]
  77 003e B3F5827F 		cmp	r3, #260
  78 0042 0BD0     		beq	.L11
  79              	.L5:
3804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                                                      || (hspi->Init.Direction == SPI_DIRECTION_2LIN
3805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
3806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           /* Disable SPI peripheral */
3807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           __HAL_SPI_DISABLE(hspi);
3808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
3809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Reset CRC Calculation */
3811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
  80              		.loc 1 3811 0
  81 0044 AB6A     		ldr	r3, [r5, #40]
  82 0046 B3F5005F 		cmp	r3, #8192
  83 004a 14D0     		beq	.L12
  84              	.L6:
3812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
3813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           SPI_RESET_CRC(hspi);
3814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
3815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
  85              		.loc 1 3816 0
  86 004c 0123     		movs	r3, #1
  87 004e 85F85D30 		strb	r3, [r5, #93]
3817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Process Unlocked */
3819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         __HAL_UNLOCK(hspi);
  88              		.loc 1 3819 0
  89 0052 0023     		movs	r3, #0
  90 0054 85F85C30 		strb	r3, [r5, #92]
3820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         return HAL_TIMEOUT;
  91              		.loc 1 3821 0
  92 0058 0320     		movs	r0, #3
  93 005a 18E0     		b	.L7
  94              	.L11:
3803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                                                      || (hspi->Init.Direction == SPI_DIRECTION_2LIN
  95              		.loc 1 3803 0 discriminator 1
  96 005c AB68     		ldr	r3, [r5, #8]
  97 005e B3F5806F 		cmp	r3, #1024
  98 0062 18BF     		it	ne
  99 0064 B3F5004F 		cmpne	r3, #32768
 100 0068 ECD1     		bne	.L5
3807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
 101              		.loc 1 3807 0
 102 006a 2A68     		ldr	r2, [r5]
 103 006c 1368     		ldr	r3, [r2]
 104 006e 23F04003 		bic	r3, r3, #64
 105 0072 1360     		str	r3, [r2]
 106 0074 E6E7     		b	.L5
 107              	.L12:
3813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
 108              		.loc 1 3813 0
 109 0076 2A68     		ldr	r2, [r5]
 110 0078 1368     		ldr	r3, [r2]
ARM GAS  /tmp/cc8c22lT.s 			page 70


 111 007a 23F40053 		bic	r3, r3, #8192
 112 007e 1360     		str	r3, [r2]
 113 0080 2A68     		ldr	r2, [r5]
 114 0082 1368     		ldr	r3, [r2]
 115 0084 43F40053 		orr	r3, r3, #8192
 116 0088 1360     		str	r3, [r2]
 117 008a DFE7     		b	.L6
 118              	.L10:
3822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
3823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return HAL_OK;
 119              		.loc 1 3826 0
 120 008c 0020     		movs	r0, #0
 121              	.L7:
3827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 122              		.loc 1 3827 0
 123 008e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 124              		.cfi_endproc
 125              	.LFE188:
 127              		.section	.text.SPI_WaitFifoStateUntilTimeout,"ax",%progbits
 128              		.align	1
 129              		.syntax unified
 130              		.thumb
 131              		.thumb_func
 132              		.fpu fpv5-sp-d16
 134              	SPI_WaitFifoStateUntilTimeout:
 135              	.LFB189:
3828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Handle SPI FIFO Communication Timeout.
3831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *              the configuration information for SPI module.
3833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  Fifo Fifo to check
3834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  State Fifo state to check
3835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  Timeout Timeout duration
3836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  Tickstart tick start value
3837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval HAL status
3838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static HAL_StatusTypeDef SPI_WaitFifoStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Fifo, uint
3840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                                                        uint32_t Timeout, uint32_t Tickstart)
3841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 136              		.loc 1 3841 0
 137              		.cfi_startproc
 138              		@ args = 4, pretend = 0, frame = 0
 139              		@ frame_needed = 0, uses_anonymous_args = 0
 140              	.LVL3:
 141 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 142              	.LCFI1:
 143              		.cfi_def_cfa_offset 24
 144              		.cfi_offset 3, -24
 145              		.cfi_offset 4, -20
 146              		.cfi_offset 5, -16
 147              		.cfi_offset 6, -12
 148              		.cfi_offset 7, -8
 149              		.cfi_offset 14, -4
ARM GAS  /tmp/cc8c22lT.s 			page 71


 150 0002 0746     		mov	r7, r0
 151 0004 0D46     		mov	r5, r1
 152 0006 1446     		mov	r4, r2
 153 0008 1E46     		mov	r6, r3
3842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   while ((hspi->Instance->SR & Fifo) != State)
 154              		.loc 1 3842 0
 155 000a 02E0     		b	.L16
 156              	.LVL4:
 157              	.L15:
3843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if ((Fifo == SPI_SR_FRLVL) && (State == SPI_FRLVL_EMPTY))
3845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Read 8bit CRC to flush Data Register */
3847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       READ_REG(*((__IO uint8_t *)&hspi->Instance->DR));
3848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (Timeout != HAL_MAX_DELAY)
 158              		.loc 1 3850 0
 159 000c B6F1FF3F 		cmp	r6, #-1
 160 0010 0BD1     		bne	.L23
 161              	.L16:
3842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   while ((hspi->Instance->SR & Fifo) != State)
 162              		.loc 1 3842 0
 163 0012 3A68     		ldr	r2, [r7]
 164 0014 9368     		ldr	r3, [r2, #8]
 165 0016 2B40     		ands	r3, r3, r5
 166 0018 A342     		cmp	r3, r4
 167 001a 3BD0     		beq	.L24
3844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 168              		.loc 1 3844 0
 169 001c B5F5C06F 		cmp	r5, #1536
 170 0020 08BF     		it	eq
 171 0022 002C     		cmpeq	r4, #0
 172 0024 F2D1     		bne	.L15
3847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 173              		.loc 1 3847 0
 174 0026 137B     		ldrb	r3, [r2, #12]	@ zero_extendqisi2
 175 0028 F0E7     		b	.L15
 176              	.L23:
3851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (((HAL_GetTick() - Tickstart) >= Timeout) || (Timeout == 0U))
 177              		.loc 1 3852 0
 178 002a FFF7FEFF 		bl	HAL_GetTick
 179              	.LVL5:
 180 002e 069B     		ldr	r3, [sp, #24]
 181 0030 C01A     		subs	r0, r0, r3
 182 0032 B042     		cmp	r0, r6
 183 0034 01D2     		bcs	.L17
 184              		.loc 1 3852 0 is_stmt 0 discriminator 1
 185 0036 002E     		cmp	r6, #0
 186 0038 EBD1     		bne	.L16
 187              	.L17:
3853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
3854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Disable the SPI and reset the CRC: the CRC value should be cleared
3855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****            on both master and slave sides in order to resynchronize the master
3856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****            and slave for their respective CRC calculation */
3857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
ARM GAS  /tmp/cc8c22lT.s 			page 72


3858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Disable TXE, RXNE and ERR interrupts for the interrupt process */
3859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 188              		.loc 1 3859 0 is_stmt 1
 189 003a 3A68     		ldr	r2, [r7]
 190 003c 5368     		ldr	r3, [r2, #4]
 191 003e 23F0E003 		bic	r3, r3, #224
 192 0042 5360     		str	r3, [r2, #4]
3860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 193              		.loc 1 3861 0
 194 0044 7B68     		ldr	r3, [r7, #4]
 195 0046 B3F5827F 		cmp	r3, #260
 196 004a 0BD0     		beq	.L25
 197              	.L18:
3862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                                                      || (hspi->Init.Direction == SPI_DIRECTION_2LIN
3863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
3864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           /* Disable SPI peripheral */
3865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           __HAL_SPI_DISABLE(hspi);
3866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
3867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Reset CRC Calculation */
3869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 198              		.loc 1 3869 0
 199 004c BB6A     		ldr	r3, [r7, #40]
 200 004e B3F5005F 		cmp	r3, #8192
 201 0052 14D0     		beq	.L26
 202              	.L19:
3870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
3871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           SPI_RESET_CRC(hspi);
3872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
3873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
 203              		.loc 1 3874 0
 204 0054 0123     		movs	r3, #1
 205 0056 87F85D30 		strb	r3, [r7, #93]
3875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Process Unlocked */
3877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         __HAL_UNLOCK(hspi);
 206              		.loc 1 3877 0
 207 005a 0023     		movs	r3, #0
 208 005c 87F85C30 		strb	r3, [r7, #92]
3878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         return HAL_TIMEOUT;
 209              		.loc 1 3879 0
 210 0060 0320     		movs	r0, #3
 211 0062 18E0     		b	.L20
 212              	.L25:
3861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                                                      || (hspi->Init.Direction == SPI_DIRECTION_2LIN
 213              		.loc 1 3861 0 discriminator 1
 214 0064 BB68     		ldr	r3, [r7, #8]
 215 0066 B3F5806F 		cmp	r3, #1024
 216 006a 18BF     		it	ne
 217 006c B3F5004F 		cmpne	r3, #32768
 218 0070 ECD1     		bne	.L18
3865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
 219              		.loc 1 3865 0
 220 0072 3A68     		ldr	r2, [r7]
ARM GAS  /tmp/cc8c22lT.s 			page 73


 221 0074 1368     		ldr	r3, [r2]
 222 0076 23F04003 		bic	r3, r3, #64
 223 007a 1360     		str	r3, [r2]
 224 007c E6E7     		b	.L18
 225              	.L26:
3871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
 226              		.loc 1 3871 0
 227 007e 3A68     		ldr	r2, [r7]
 228 0080 1368     		ldr	r3, [r2]
 229 0082 23F40053 		bic	r3, r3, #8192
 230 0086 1360     		str	r3, [r2]
 231 0088 3A68     		ldr	r2, [r7]
 232 008a 1368     		ldr	r3, [r2]
 233 008c 43F40053 		orr	r3, r3, #8192
 234 0090 1360     		str	r3, [r2]
 235 0092 DFE7     		b	.L19
 236              	.L24:
3880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
3881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return HAL_OK;
 237              		.loc 1 3884 0
 238 0094 0020     		movs	r0, #0
 239              	.L20:
3885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 240              		.loc 1 3885 0
 241 0096 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 242              		.cfi_endproc
 243              	.LFE189:
 245              		.section	.text.SPI_EndRxTxTransaction,"ax",%progbits
 246              		.align	1
 247              		.syntax unified
 248              		.thumb
 249              		.thumb_func
 250              		.fpu fpv5-sp-d16
 252              	SPI_EndRxTxTransaction:
 253              	.LFB191:
3886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Handle the check of the RX transaction complete.
3889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
3891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  Timeout Timeout duration
3892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  Tickstart tick start value
3893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval HAL status
3894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t 
3896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
3897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
3898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                                                || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXO
3899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Disable SPI peripheral */
3901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_DISABLE(hspi);
3902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Control the BSY flag */
ARM GAS  /tmp/cc8c22lT.s 			page 74


3905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
3906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     return HAL_TIMEOUT;
3909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
3912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                                                || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXO
3913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Empty the FRLVL fifo */
3915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, Timeout, Tickstart) !=
3916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       return HAL_TIMEOUT;
3919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return HAL_OK;
3922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
3923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Handle the check of the RXTX or TX transaction complete.
3926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi SPI handle
3927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  Timeout Timeout duration
3928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  Tickstart tick start value
3929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval HAL status
3930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t
3932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 254              		.loc 1 3932 0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 0
 257              		@ frame_needed = 0, uses_anonymous_args = 0
 258              	.LVL6:
 259 0000 70B5     		push	{r4, r5, r6, lr}
 260              	.LCFI2:
 261              		.cfi_def_cfa_offset 16
 262              		.cfi_offset 4, -16
 263              		.cfi_offset 5, -12
 264              		.cfi_offset 6, -8
 265              		.cfi_offset 14, -4
 266 0002 82B0     		sub	sp, sp, #8
 267              	.LCFI3:
 268              		.cfi_def_cfa_offset 24
 269 0004 0446     		mov	r4, r0
 270 0006 0D46     		mov	r5, r1
 271 0008 1646     		mov	r6, r2
3933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Control if the TX fifo is empty */
3934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FTLVL, SPI_FTLVL_EMPTY, Timeout, Tickstart) != H
 272              		.loc 1 3934 0
 273 000a 0092     		str	r2, [sp]
 274 000c 0B46     		mov	r3, r1
 275 000e 0022     		movs	r2, #0
 276              	.LVL7:
 277 0010 4FF4C051 		mov	r1, #6144
 278              	.LVL8:
 279 0014 FFF7FEFF 		bl	SPI_WaitFifoStateUntilTimeout
 280              	.LVL9:
ARM GAS  /tmp/cc8c22lT.s 			page 75


 281 0018 B8B9     		cbnz	r0, .L32
3935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     return HAL_TIMEOUT;
3938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Control the BSY flag */
3941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 282              		.loc 1 3941 0
 283 001a 0096     		str	r6, [sp]
 284 001c 2B46     		mov	r3, r5
 285 001e 0022     		movs	r2, #0
 286 0020 8021     		movs	r1, #128
 287 0022 2046     		mov	r0, r4
 288 0024 FFF7FEFF 		bl	SPI_WaitFlagStateUntilTimeout
 289              	.LVL10:
 290 0028 B8B9     		cbnz	r0, .L33
3942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     return HAL_TIMEOUT;
3945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Control if the RX fifo is empty */
3948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, Timeout, Tickstart) != H
 291              		.loc 1 3948 0
 292 002a 0096     		str	r6, [sp]
 293 002c 2B46     		mov	r3, r5
 294 002e 0022     		movs	r2, #0
 295 0030 4FF4C061 		mov	r1, #1536
 296 0034 2046     		mov	r0, r4
 297 0036 FFF7FEFF 		bl	SPI_WaitFifoStateUntilTimeout
 298              	.LVL11:
 299 003a 0346     		mov	r3, r0
 300 003c 50B1     		cbz	r0, .L29
3949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 301              		.loc 1 3950 0
 302 003e 236E     		ldr	r3, [r4, #96]
 303 0040 43F02003 		orr	r3, r3, #32
 304 0044 2366     		str	r3, [r4, #96]
3951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     return HAL_TIMEOUT;
 305              		.loc 1 3951 0
 306 0046 0323     		movs	r3, #3
 307 0048 04E0     		b	.L29
 308              	.L32:
3936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     return HAL_TIMEOUT;
 309              		.loc 1 3936 0
 310 004a 236E     		ldr	r3, [r4, #96]
 311 004c 43F02003 		orr	r3, r3, #32
 312 0050 2366     		str	r3, [r4, #96]
3937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 313              		.loc 1 3937 0
 314 0052 0323     		movs	r3, #3
 315              	.L29:
3952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return HAL_OK;
ARM GAS  /tmp/cc8c22lT.s 			page 76


3955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 316              		.loc 1 3955 0
 317 0054 1846     		mov	r0, r3
 318 0056 02B0     		add	sp, sp, #8
 319              	.LCFI4:
 320              		.cfi_remember_state
 321              		.cfi_def_cfa_offset 16
 322              		@ sp needed
 323 0058 70BD     		pop	{r4, r5, r6, pc}
 324              	.LVL12:
 325              	.L33:
 326              	.LCFI5:
 327              		.cfi_restore_state
3943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     return HAL_TIMEOUT;
 328              		.loc 1 3943 0
 329 005a 236E     		ldr	r3, [r4, #96]
 330 005c 43F02003 		orr	r3, r3, #32
 331 0060 2366     		str	r3, [r4, #96]
3944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 332              		.loc 1 3944 0
 333 0062 0323     		movs	r3, #3
 334 0064 F6E7     		b	.L29
 335              		.cfi_endproc
 336              	.LFE191:
 338              		.section	.text.SPI_EndRxTransaction,"ax",%progbits
 339              		.align	1
 340              		.syntax unified
 341              		.thumb
 342              		.thumb_func
 343              		.fpu fpv5-sp-d16
 345              	SPI_EndRxTransaction:
 346              	.LFB190:
3896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 347              		.loc 1 3896 0
 348              		.cfi_startproc
 349              		@ args = 0, pretend = 0, frame = 0
 350              		@ frame_needed = 0, uses_anonymous_args = 0
 351              	.LVL13:
 352 0000 70B5     		push	{r4, r5, r6, lr}
 353              	.LCFI6:
 354              		.cfi_def_cfa_offset 16
 355              		.cfi_offset 4, -16
 356              		.cfi_offset 5, -12
 357              		.cfi_offset 6, -8
 358              		.cfi_offset 14, -4
 359 0002 82B0     		sub	sp, sp, #8
 360              	.LCFI7:
 361              		.cfi_def_cfa_offset 24
 362 0004 0446     		mov	r4, r0
 363 0006 0D46     		mov	r5, r1
 364 0008 1646     		mov	r6, r2
3897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                                                || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXO
 365              		.loc 1 3897 0
 366 000a 4368     		ldr	r3, [r0, #4]
 367 000c B3F5827F 		cmp	r3, #260
 368 0010 0FD0     		beq	.L39
 369              	.LVL14:
ARM GAS  /tmp/cc8c22lT.s 			page 77


 370              	.L35:
3905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 371              		.loc 1 3905 0
 372 0012 0096     		str	r6, [sp]
 373 0014 2B46     		mov	r3, r5
 374 0016 0022     		movs	r2, #0
 375 0018 8021     		movs	r1, #128
 376              	.LVL15:
 377 001a 2046     		mov	r0, r4
 378              	.LVL16:
 379 001c FFF7FEFF 		bl	SPI_WaitFlagStateUntilTimeout
 380              	.LVL17:
 381 0020 0346     		mov	r3, r0
 382 0022 98B9     		cbnz	r0, .L40
3911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                                                || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXO
 383              		.loc 1 3911 0
 384 0024 6268     		ldr	r2, [r4, #4]
 385 0026 B2F5827F 		cmp	r2, #260
 386 002a 15D0     		beq	.L41
 387              	.L37:
3922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 388              		.loc 1 3922 0
 389 002c 1846     		mov	r0, r3
 390 002e 02B0     		add	sp, sp, #8
 391              	.LCFI8:
 392              		.cfi_remember_state
 393              		.cfi_def_cfa_offset 16
 394              		@ sp needed
 395 0030 70BD     		pop	{r4, r5, r6, pc}
 396              	.LVL18:
 397              	.L39:
 398              	.LCFI9:
 399              		.cfi_restore_state
3897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                                                || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXO
 400              		.loc 1 3897 0 discriminator 1
 401 0032 8368     		ldr	r3, [r0, #8]
 402 0034 B3F5806F 		cmp	r3, #1024
 403 0038 18BF     		it	ne
 404 003a B3F5004F 		cmpne	r3, #32768
 405 003e E8D1     		bne	.L35
3901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 406              		.loc 1 3901 0
 407 0040 0268     		ldr	r2, [r0]
 408              	.LVL19:
 409 0042 1368     		ldr	r3, [r2]
 410 0044 23F04003 		bic	r3, r3, #64
 411 0048 1360     		str	r3, [r2]
 412 004a E2E7     		b	.L35
 413              	.LVL20:
 414              	.L40:
3907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     return HAL_TIMEOUT;
 415              		.loc 1 3907 0
 416 004c 236E     		ldr	r3, [r4, #96]
 417 004e 43F02003 		orr	r3, r3, #32
 418 0052 2366     		str	r3, [r4, #96]
3908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 419              		.loc 1 3908 0
ARM GAS  /tmp/cc8c22lT.s 			page 78


 420 0054 0323     		movs	r3, #3
 421 0056 E9E7     		b	.L37
 422              	.L41:
3911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                                                || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXO
 423              		.loc 1 3911 0 discriminator 1
 424 0058 A268     		ldr	r2, [r4, #8]
 425 005a B2F5806F 		cmp	r2, #1024
 426 005e 18BF     		it	ne
 427 0060 B2F5004F 		cmpne	r2, #32768
 428 0064 E2D1     		bne	.L37
3915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 429              		.loc 1 3915 0
 430 0066 0096     		str	r6, [sp]
 431 0068 2B46     		mov	r3, r5
 432 006a 0022     		movs	r2, #0
 433 006c 4FF4C061 		mov	r1, #1536
 434 0070 2046     		mov	r0, r4
 435 0072 FFF7FEFF 		bl	SPI_WaitFifoStateUntilTimeout
 436              	.LVL21:
 437 0076 0346     		mov	r3, r0
 438 0078 0028     		cmp	r0, #0
 439 007a D7D0     		beq	.L37
3917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       return HAL_TIMEOUT;
 440              		.loc 1 3917 0
 441 007c 236E     		ldr	r3, [r4, #96]
 442 007e 43F02003 		orr	r3, r3, #32
 443 0082 2366     		str	r3, [r4, #96]
3918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 444              		.loc 1 3918 0
 445 0084 0323     		movs	r3, #3
 446 0086 D1E7     		b	.L37
 447              		.cfi_endproc
 448              	.LFE190:
 450              		.section	.text.SPI_AbortRx_ISR,"ax",%progbits
 451              		.align	1
 452              		.syntax unified
 453              		.thumb
 454              		.thumb_func
 455              		.fpu fpv5-sp-d16
 457              	SPI_AbortRx_ISR:
 458              	.LFB195:
3956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Handle the end of the RXTX transaction.
3959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
3961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
3962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_CloseRxTx_ISR(SPI_HandleTypeDef *hspi)
3964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
3965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t tickstart;
3966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Init tickstart for timeout managment*/
3968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   tickstart = HAL_GetTick();
3969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable ERR interrupt */
3971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
ARM GAS  /tmp/cc8c22lT.s 			page 79


3972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check the end of the transaction */
3974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
3975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check if CRC error occurred */
3981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR) != RESET)
3982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
3984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
3985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
3986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Call user error callback */
3987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->ErrorCallback(hspi);
3989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #else
3990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     HAL_SPI_ErrorCallback(hspi);
3991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
3994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->ErrorCode == HAL_SPI_ERROR_NONE)
3997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (hspi->State == HAL_SPI_STATE_BUSY_RX)
3999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
4000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
4001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Call user Rx complete callback */
4002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
4003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->RxCpltCallback(hspi);
4004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #else
4005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         HAL_SPI_RxCpltCallback(hspi);
4006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
4007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
4008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       else
4009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
4010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
4011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Call user TxRx complete callback */
4012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
4013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->TxRxCpltCallback(hspi);
4014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #else
4015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         HAL_SPI_TxRxCpltCallback(hspi);
4016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
4017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
4018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
4019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     else
4020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
4021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->State = HAL_SPI_STATE_READY;
4022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Call user error callback */
4023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
4024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->ErrorCallback(hspi);
4025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #else
4026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
4027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
4028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
ARM GAS  /tmp/cc8c22lT.s 			page 80


4029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
4030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
4031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
4032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
4033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
4034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
4035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Handle the end of the RX transaction.
4036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
4037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
4038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
4039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
4040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_CloseRx_ISR(SPI_HandleTypeDef *hspi)
4041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
4042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable RXNE and ERR interrupt */
4043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
4044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
4045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check the end of the transaction */
4046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (SPI_EndRxTransaction(hspi, SPI_DEFAULT_TIMEOUT, HAL_GetTick()) != HAL_OK)
4047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
4048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
4049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
4050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
4051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
4052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
4053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check if CRC error occurred */
4054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR) != RESET)
4055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
4056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
4057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
4058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Call user error callback */
4059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
4060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->ErrorCallback(hspi);
4061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #else
4062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     HAL_SPI_ErrorCallback(hspi);
4063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
4064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
4065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
4066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
4067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
4068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->ErrorCode == HAL_SPI_ERROR_NONE)
4069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
4070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Call user Rx complete callback */
4071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
4072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->RxCpltCallback(hspi);
4073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #else
4074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       HAL_SPI_RxCpltCallback(hspi);
4075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
4076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
4077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     else
4078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
4079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Call user error callback */
4080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
4081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->ErrorCallback(hspi);
4082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #else
4083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
4084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
4085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
ARM GAS  /tmp/cc8c22lT.s 			page 81


4086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
4087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
4088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
4089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
4090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
4091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
4092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Handle the end of the TX transaction.
4093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
4094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
4095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
4096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
4097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_CloseTx_ISR(SPI_HandleTypeDef *hspi)
4098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
4099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t tickstart;
4100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
4101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Init tickstart for timeout management*/
4102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   tickstart = HAL_GetTick();
4103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
4104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable TXE and ERR interrupt */
4105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_ERR));
4106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
4107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check the end of the transaction */
4108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
4109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
4110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
4111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
4112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
4113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Clear overrun flag in 2 Lines communication mode because received is not read */
4114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
4115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
4116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_CLEAR_OVRFLAG(hspi);
4117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
4118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
4119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
4120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
4121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
4122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Call user error callback */
4123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
4124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->ErrorCallback(hspi);
4125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #else
4126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     HAL_SPI_ErrorCallback(hspi);
4127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
4128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
4129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
4130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
4131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Call user Rx complete callback */
4132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
4133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->TxCpltCallback(hspi);
4134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #else
4135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     HAL_SPI_TxCpltCallback(hspi);
4136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
4137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
4138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
4139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
4140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
4141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Handle abort a Rx transaction.
4142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
ARM GAS  /tmp/cc8c22lT.s 			page 82


4143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
4144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
4145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
4146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_AbortRx_ISR(SPI_HandleTypeDef *hspi)
4147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 459              		.loc 1 4147 0
 460              		.cfi_startproc
 461              		@ args = 0, pretend = 0, frame = 8
 462              		@ frame_needed = 0, uses_anonymous_args = 0
 463              	.LVL22:
 464 0000 10B5     		push	{r4, lr}
 465              	.LCFI10:
 466              		.cfi_def_cfa_offset 8
 467              		.cfi_offset 4, -8
 468              		.cfi_offset 14, -4
 469 0002 84B0     		sub	sp, sp, #16
 470              	.LCFI11:
 471              		.cfi_def_cfa_offset 24
 472 0004 0446     		mov	r4, r0
4148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __IO uint32_t count;
4149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
4150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable SPI Peripheral */
4151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 473              		.loc 1 4151 0
 474 0006 0268     		ldr	r2, [r0]
 475 0008 1368     		ldr	r3, [r2]
 476 000a 23F04003 		bic	r3, r3, #64
 477 000e 1360     		str	r3, [r2]
4152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
4153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   count = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
 478              		.loc 1 4153 0
 479 0010 1D4B     		ldr	r3, .L50
 480 0012 1B68     		ldr	r3, [r3]
 481 0014 1D4A     		ldr	r2, .L50+4
 482 0016 A2FB0323 		umull	r2, r3, r2, r3
 483 001a 5B0A     		lsrs	r3, r3, #9
 484 001c 6422     		movs	r2, #100
 485 001e 02FB03F3 		mul	r3, r2, r3
 486 0022 0393     		str	r3, [sp, #12]
4154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
4155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable RXNEIE interrupt */
4156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_RXNEIE));
 487              		.loc 1 4156 0
 488 0024 0268     		ldr	r2, [r0]
 489 0026 5368     		ldr	r3, [r2, #4]
 490 0028 23F04003 		bic	r3, r3, #64
 491 002c 5360     		str	r3, [r2, #4]
 492              	.L45:
4157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
4158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check RXNEIE is disabled */
4159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   do
4160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
4161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (count == 0U)
 493              		.loc 1 4161 0
 494 002e 039B     		ldr	r3, [sp, #12]
 495 0030 43B1     		cbz	r3, .L49
4162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
ARM GAS  /tmp/cc8c22lT.s 			page 83


4163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
4164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       break;
4165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
4166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     count--;
 496              		.loc 1 4166 0
 497 0032 039B     		ldr	r3, [sp, #12]
 498 0034 013B     		subs	r3, r3, #1
 499 0036 0393     		str	r3, [sp, #12]
4167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
4168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   while (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXNEIE));
 500              		.loc 1 4168 0
 501 0038 2368     		ldr	r3, [r4]
 502 003a 5B68     		ldr	r3, [r3, #4]
 503 003c 13F0400F 		tst	r3, #64
 504 0040 F5D1     		bne	.L45
 505 0042 03E0     		b	.L44
 506              	.L49:
4163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       break;
 507              		.loc 1 4163 0
 508 0044 236E     		ldr	r3, [r4, #96]
 509 0046 43F04003 		orr	r3, r3, #64
 510 004a 2366     		str	r3, [r4, #96]
 511              	.L44:
4169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
4170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Control the BSY flag */
4171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, SPI_DEFAULT_TIMEOUT, HAL_GetTick()) 
 512              		.loc 1 4171 0
 513 004c FFF7FEFF 		bl	HAL_GetTick
 514              	.LVL23:
 515 0050 0090     		str	r0, [sp]
 516 0052 6423     		movs	r3, #100
 517 0054 0022     		movs	r2, #0
 518 0056 8021     		movs	r1, #128
 519 0058 2046     		mov	r0, r4
 520 005a FFF7FEFF 		bl	SPI_WaitFlagStateUntilTimeout
 521              	.LVL24:
 522 005e 08B1     		cbz	r0, .L46
4172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
4173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 523              		.loc 1 4173 0
 524 0060 4023     		movs	r3, #64
 525 0062 2366     		str	r3, [r4, #96]
 526              	.L46:
4174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
4175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
4176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Empty the FRLVL fifo */
4177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, SPI_DEFAULT_TIMEOUT, HAL
 527              		.loc 1 4177 0
 528 0064 FFF7FEFF 		bl	HAL_GetTick
 529              	.LVL25:
 530 0068 0090     		str	r0, [sp]
 531 006a 6423     		movs	r3, #100
 532 006c 0022     		movs	r2, #0
 533 006e 4FF4C061 		mov	r1, #1536
 534 0072 2046     		mov	r0, r4
 535 0074 FFF7FEFF 		bl	SPI_WaitFifoStateUntilTimeout
 536              	.LVL26:
ARM GAS  /tmp/cc8c22lT.s 			page 84


 537 0078 08B1     		cbz	r0, .L47
4178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
4179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 538              		.loc 1 4179 0
 539 007a 4023     		movs	r3, #64
 540 007c 2366     		str	r3, [r4, #96]
 541              	.L47:
4180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
4181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
4182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_ABORT;
 542              		.loc 1 4182 0
 543 007e 0723     		movs	r3, #7
 544 0080 84F85D30 		strb	r3, [r4, #93]
4183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 545              		.loc 1 4183 0
 546 0084 04B0     		add	sp, sp, #16
 547              	.LCFI12:
 548              		.cfi_def_cfa_offset 8
 549              		@ sp needed
 550 0086 10BD     		pop	{r4, pc}
 551              	.LVL27:
 552              	.L51:
 553              		.align	2
 554              	.L50:
 555 0088 00000000 		.word	SystemCoreClock
 556 008c F1197605 		.word	91625969
 557              		.cfi_endproc
 558              	.LFE195:
 560              		.section	.text.SPI_AbortTx_ISR,"ax",%progbits
 561              		.align	1
 562              		.syntax unified
 563              		.thumb
 564              		.thumb_func
 565              		.fpu fpv5-sp-d16
 567              	SPI_AbortTx_ISR:
 568              	.LFB196:
4184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
4185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
4186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Handle abort a Tx or Rx/Tx transaction.
4187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
4188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
4189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
4190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
4191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_AbortTx_ISR(SPI_HandleTypeDef *hspi)
4192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 569              		.loc 1 4192 0
 570              		.cfi_startproc
 571              		@ args = 0, pretend = 0, frame = 8
 572              		@ frame_needed = 0, uses_anonymous_args = 0
 573              	.LVL28:
 574 0000 10B5     		push	{r4, lr}
 575              	.LCFI13:
 576              		.cfi_def_cfa_offset 8
 577              		.cfi_offset 4, -8
 578              		.cfi_offset 14, -4
 579 0002 84B0     		sub	sp, sp, #16
 580              	.LCFI14:
ARM GAS  /tmp/cc8c22lT.s 			page 85


 581              		.cfi_def_cfa_offset 24
 582 0004 0446     		mov	r4, r0
4193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __IO uint32_t count;
4194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
4195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   count = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
 583              		.loc 1 4195 0
 584 0006 384B     		ldr	r3, .L66
 585 0008 1B68     		ldr	r3, [r3]
 586 000a 384A     		ldr	r2, .L66+4
 587 000c A2FB0323 		umull	r2, r3, r2, r3
 588 0010 5B0A     		lsrs	r3, r3, #9
 589 0012 6422     		movs	r2, #100
 590 0014 02FB03F3 		mul	r3, r2, r3
 591 0018 0393     		str	r3, [sp, #12]
4196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
4197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable TXEIE interrupt */
4198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXEIE));
 592              		.loc 1 4198 0
 593 001a 0268     		ldr	r2, [r0]
 594 001c 5368     		ldr	r3, [r2, #4]
 595 001e 23F08003 		bic	r3, r3, #128
 596 0022 5360     		str	r3, [r2, #4]
 597              	.L55:
4199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
4200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check TXEIE is disabled */
4201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   do
4202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
4203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (count == 0U)
 598              		.loc 1 4203 0
 599 0024 039B     		ldr	r3, [sp, #12]
 600 0026 43B1     		cbz	r3, .L64
4204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
4205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
4206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       break;
4207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
4208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     count--;
 601              		.loc 1 4208 0
 602 0028 039B     		ldr	r3, [sp, #12]
 603 002a 013B     		subs	r3, r3, #1
 604 002c 0393     		str	r3, [sp, #12]
4209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
4210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   while (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXEIE));
 605              		.loc 1 4210 0
 606 002e 2368     		ldr	r3, [r4]
 607 0030 5B68     		ldr	r3, [r3, #4]
 608 0032 13F0800F 		tst	r3, #128
 609 0036 F5D1     		bne	.L55
 610 0038 03E0     		b	.L54
 611              	.L64:
4205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       break;
 612              		.loc 1 4205 0
 613 003a 236E     		ldr	r3, [r4, #96]
 614 003c 43F04003 		orr	r3, r3, #64
 615 0040 2366     		str	r3, [r4, #96]
 616              	.L54:
4211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
4212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, HAL_GetTick()) != HAL_OK)
ARM GAS  /tmp/cc8c22lT.s 			page 86


 617              		.loc 1 4212 0
 618 0042 FFF7FEFF 		bl	HAL_GetTick
 619              	.LVL29:
 620 0046 0246     		mov	r2, r0
 621 0048 6421     		movs	r1, #100
 622 004a 2046     		mov	r0, r4
 623 004c FFF7FEFF 		bl	SPI_EndRxTxTransaction
 624              	.LVL30:
 625 0050 08B1     		cbz	r0, .L56
4213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
4214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 626              		.loc 1 4214 0
 627 0052 4023     		movs	r3, #64
 628 0054 2366     		str	r3, [r4, #96]
 629              	.L56:
4215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
4216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
4217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable SPI Peripheral */
4218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 630              		.loc 1 4218 0
 631 0056 2268     		ldr	r2, [r4]
 632 0058 1368     		ldr	r3, [r2]
 633 005a 23F04003 		bic	r3, r3, #64
 634 005e 1360     		str	r3, [r2]
4219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
4220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Empty the FRLVL fifo */
4221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, SPI_DEFAULT_TIMEOUT, HAL
 635              		.loc 1 4221 0
 636 0060 FFF7FEFF 		bl	HAL_GetTick
 637              	.LVL31:
 638 0064 0090     		str	r0, [sp]
 639 0066 6423     		movs	r3, #100
 640 0068 0022     		movs	r2, #0
 641 006a 4FF4C061 		mov	r1, #1536
 642 006e 2046     		mov	r0, r4
 643 0070 FFF7FEFF 		bl	SPI_WaitFifoStateUntilTimeout
 644              	.LVL32:
 645 0074 08B1     		cbz	r0, .L57
4222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
4223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 646              		.loc 1 4223 0
 647 0076 4023     		movs	r3, #64
 648 0078 2366     		str	r3, [r4, #96]
 649              	.L57:
4224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
4225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
4226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check case of Full-Duplex Mode and disable directly RXNEIE interrupt */
4227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXNEIE))
 650              		.loc 1 4227 0
 651 007a 2368     		ldr	r3, [r4]
 652 007c 5A68     		ldr	r2, [r3, #4]
 653 007e 12F0400F 		tst	r2, #64
 654 0082 2BD0     		beq	.L58
4228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
4229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Disable RXNEIE interrupt */
4230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_RXNEIE));
 655              		.loc 1 4230 0
ARM GAS  /tmp/cc8c22lT.s 			page 87


 656 0084 5A68     		ldr	r2, [r3, #4]
 657 0086 22F04002 		bic	r2, r2, #64
 658 008a 5A60     		str	r2, [r3, #4]
 659              	.L61:
4231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
4232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Check RXNEIE is disabled */
4233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     do
4234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
4235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (count == 0U)
 660              		.loc 1 4235 0
 661 008c 039B     		ldr	r3, [sp, #12]
 662 008e 43B1     		cbz	r3, .L65
4236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
4237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
4238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         break;
4239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
4240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       count--;
 663              		.loc 1 4240 0
 664 0090 039B     		ldr	r3, [sp, #12]
 665 0092 013B     		subs	r3, r3, #1
 666 0094 0393     		str	r3, [sp, #12]
4241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
4242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     while (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXNEIE));
 667              		.loc 1 4242 0
 668 0096 2368     		ldr	r3, [r4]
 669 0098 5B68     		ldr	r3, [r3, #4]
 670 009a 13F0400F 		tst	r3, #64
 671 009e F5D1     		bne	.L61
 672 00a0 03E0     		b	.L60
 673              	.L65:
4237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         break;
 674              		.loc 1 4237 0
 675 00a2 236E     		ldr	r3, [r4, #96]
 676 00a4 43F04003 		orr	r3, r3, #64
 677 00a8 2366     		str	r3, [r4, #96]
 678              	.L60:
4243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
4244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Control the BSY flag */
4245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, SPI_DEFAULT_TIMEOUT, HAL_GetTick()
 679              		.loc 1 4245 0
 680 00aa FFF7FEFF 		bl	HAL_GetTick
 681              	.LVL33:
 682 00ae 0090     		str	r0, [sp]
 683 00b0 6423     		movs	r3, #100
 684 00b2 0022     		movs	r2, #0
 685 00b4 8021     		movs	r1, #128
 686 00b6 2046     		mov	r0, r4
 687 00b8 FFF7FEFF 		bl	SPI_WaitFlagStateUntilTimeout
 688              	.LVL34:
 689 00bc 08B1     		cbz	r0, .L62
4246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
4247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 690              		.loc 1 4247 0
 691 00be 4023     		movs	r3, #64
 692 00c0 2366     		str	r3, [r4, #96]
 693              	.L62:
4248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
ARM GAS  /tmp/cc8c22lT.s 			page 88


4249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
4250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Empty the FRLVL fifo */
4251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, SPI_DEFAULT_TIMEOUT, H
 694              		.loc 1 4251 0
 695 00c2 FFF7FEFF 		bl	HAL_GetTick
 696              	.LVL35:
 697 00c6 0090     		str	r0, [sp]
 698 00c8 6423     		movs	r3, #100
 699 00ca 0022     		movs	r2, #0
 700 00cc 4FF4C061 		mov	r1, #1536
 701 00d0 2046     		mov	r0, r4
 702 00d2 FFF7FEFF 		bl	SPI_WaitFifoStateUntilTimeout
 703              	.LVL36:
 704 00d6 08B1     		cbz	r0, .L58
4252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
4253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 705              		.loc 1 4253 0
 706 00d8 4023     		movs	r3, #64
 707 00da 2366     		str	r3, [r4, #96]
 708              	.L58:
4254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
4255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
4256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_ABORT;
 709              		.loc 1 4256 0
 710 00dc 0723     		movs	r3, #7
 711 00de 84F85D30 		strb	r3, [r4, #93]
4257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 712              		.loc 1 4257 0
 713 00e2 04B0     		add	sp, sp, #16
 714              	.LCFI15:
 715              		.cfi_def_cfa_offset 8
 716              		@ sp needed
 717 00e4 10BD     		pop	{r4, pc}
 718              	.LVL37:
 719              	.L67:
 720 00e6 00BF     		.align	2
 721              	.L66:
 722 00e8 00000000 		.word	SystemCoreClock
 723 00ec F1197605 		.word	91625969
 724              		.cfi_endproc
 725              	.LFE196:
 727              		.section	.text.HAL_SPI_MspInit,"ax",%progbits
 728              		.align	1
 729              		.weak	HAL_SPI_MspInit
 730              		.syntax unified
 731              		.thumb
 732              		.thumb_func
 733              		.fpu fpv5-sp-d16
 735              	HAL_SPI_MspInit:
 736              	.LFB143:
 503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 737              		.loc 1 503 0
 738              		.cfi_startproc
 739              		@ args = 0, pretend = 0, frame = 0
 740              		@ frame_needed = 0, uses_anonymous_args = 0
 741              		@ link register save eliminated.
 742              	.LVL38:
ARM GAS  /tmp/cc8c22lT.s 			page 89


 510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 743              		.loc 1 510 0
 744 0000 7047     		bx	lr
 745              		.cfi_endproc
 746              	.LFE143:
 748              		.section	.text.HAL_SPI_Init,"ax",%progbits
 749              		.align	1
 750              		.global	HAL_SPI_Init
 751              		.syntax unified
 752              		.thumb
 753              		.thumb_func
 754              		.fpu fpv5-sp-d16
 756              	HAL_SPI_Init:
 757              	.LFB141:
 314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t frxth;
 758              		.loc 1 314 0
 759              		.cfi_startproc
 760              		@ args = 0, pretend = 0, frame = 0
 761              		@ frame_needed = 0, uses_anonymous_args = 0
 762              	.LVL39:
 318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 763              		.loc 1 318 0
 764 0000 0028     		cmp	r0, #0
 765 0002 58D0     		beq	.L76
 314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t frxth;
 766              		.loc 1 314 0
 767 0004 10B5     		push	{r4, lr}
 768              	.LCFI16:
 769              		.cfi_def_cfa_offset 8
 770              		.cfi_offset 4, -8
 771              		.cfi_offset 14, -4
 772 0006 0446     		mov	r4, r0
 346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 773              		.loc 1 346 0
 774 0008 0023     		movs	r3, #0
 775 000a 8362     		str	r3, [r0, #40]
 349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 776              		.loc 1 349 0
 777 000c 90F85D30 		ldrb	r3, [r0, #93]	@ zero_extendqisi2
 778 0010 002B     		cmp	r3, #0
 779 0012 45D0     		beq	.L82
 780              	.LVL40:
 781              	.L71:
 378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 782              		.loc 1 378 0
 783 0014 0223     		movs	r3, #2
 784 0016 84F85D30 		strb	r3, [r4, #93]
 381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 785              		.loc 1 381 0
 786 001a 2268     		ldr	r2, [r4]
 787 001c 1368     		ldr	r3, [r2]
 788 001e 23F04003 		bic	r3, r3, #64
 789 0022 1360     		str	r3, [r2]
 384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 790              		.loc 1 384 0
 791 0024 E368     		ldr	r3, [r4, #12]
 792 0026 B3F5E06F 		cmp	r3, #1792
ARM GAS  /tmp/cc8c22lT.s 			page 90


 793 002a 3ED9     		bls	.L77
 386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 794              		.loc 1 386 0
 795 002c 0022     		movs	r2, #0
 796              	.L72:
 797              	.LVL41:
 394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 798              		.loc 1 394 0
 799 002e B3F5706F 		cmp	r3, #3840
 800 0032 18BF     		it	ne
 801 0034 B3F5E06F 		cmpne	r3, #1792
 802 0038 01D0     		beq	.L73
 397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 803              		.loc 1 397 0
 804 003a 0021     		movs	r1, #0
 805 003c A162     		str	r1, [r4, #40]
 806              	.L73:
 401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 807              		.loc 1 401 0
 808 003e 216B     		ldr	r1, [r4, #48]
 809 0040 21B9     		cbnz	r1, .L74
 404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 810              		.loc 1 404 0
 811 0042 B3F5E06F 		cmp	r3, #1792
 812 0046 33D9     		bls	.L75
 406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 813              		.loc 1 406 0
 814 0048 0223     		movs	r3, #2
 815 004a 2363     		str	r3, [r4, #48]
 816              	.L74:
 417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                                   hspi->Init.CLKPolarity | hspi->Init.CLKPhase | (hspi->Init.NSS & 
 817              		.loc 1 417 0
 818 004c 6368     		ldr	r3, [r4, #4]
 819 004e A168     		ldr	r1, [r4, #8]
 820 0050 0B43     		orrs	r3, r3, r1
 821 0052 2169     		ldr	r1, [r4, #16]
 822 0054 0B43     		orrs	r3, r3, r1
 823 0056 6169     		ldr	r1, [r4, #20]
 824 0058 0B43     		orrs	r3, r3, r1
 825 005a A169     		ldr	r1, [r4, #24]
 826 005c 01F40071 		and	r1, r1, #512
 827 0060 0B43     		orrs	r3, r3, r1
 828 0062 E169     		ldr	r1, [r4, #28]
 829 0064 0B43     		orrs	r3, r3, r1
 830 0066 216A     		ldr	r1, [r4, #32]
 831 0068 0B43     		orrs	r3, r3, r1
 832 006a A06A     		ldr	r0, [r4, #40]
 833 006c 2168     		ldr	r1, [r4]
 834 006e 0343     		orrs	r3, r3, r0
 835 0070 0B60     		str	r3, [r1]
 429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                                   hspi->Init.NSSPMode | hspi->Init.DataSize) | frxth);
 836              		.loc 1 429 0
 837 0072 638B     		ldrh	r3, [r4, #26]
 838 0074 03F00403 		and	r3, r3, #4
 839 0078 616A     		ldr	r1, [r4, #36]
 840 007a 0B43     		orrs	r3, r3, r1
 841 007c 616B     		ldr	r1, [r4, #52]
ARM GAS  /tmp/cc8c22lT.s 			page 91


 842 007e 0B43     		orrs	r3, r3, r1
 843 0080 E168     		ldr	r1, [r4, #12]
 844 0082 0B43     		orrs	r3, r3, r1
 845 0084 2168     		ldr	r1, [r4]
 846 0086 1343     		orrs	r3, r3, r2
 847 0088 4B60     		str	r3, [r1, #4]
 443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* SPI_I2SCFGR_I2SMOD */
 848              		.loc 1 443 0
 849 008a 2268     		ldr	r2, [r4]
 850              	.LVL42:
 851 008c D369     		ldr	r3, [r2, #28]
 852 008e 23F40063 		bic	r3, r3, #2048
 853 0092 D361     		str	r3, [r2, #28]
 446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State     = HAL_SPI_STATE_READY;
 854              		.loc 1 446 0
 855 0094 0020     		movs	r0, #0
 856 0096 2066     		str	r0, [r4, #96]
 447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 857              		.loc 1 447 0
 858 0098 0123     		movs	r3, #1
 859 009a 84F85D30 		strb	r3, [r4, #93]
 450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 860              		.loc 1 450 0
 861 009e 10BD     		pop	{r4, pc}
 862              	.LVL43:
 863              	.L82:
 352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 864              		.loc 1 352 0
 865 00a0 80F85C30 		strb	r3, [r0, #92]
 374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 866              		.loc 1 374 0
 867 00a4 FFF7FEFF 		bl	HAL_SPI_MspInit
 868              	.LVL44:
 869 00a8 B4E7     		b	.L71
 870              	.L77:
 390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 871              		.loc 1 390 0
 872 00aa 4FF48052 		mov	r2, #4096
 873 00ae BEE7     		b	.L72
 874              	.LVL45:
 875              	.L75:
 410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 876              		.loc 1 410 0
 877 00b0 0123     		movs	r3, #1
 878 00b2 2363     		str	r3, [r4, #48]
 879 00b4 CAE7     		b	.L74
 880              	.LVL46:
 881              	.L76:
 882              	.LCFI17:
 883              		.cfi_def_cfa_offset 0
 884              		.cfi_restore 4
 885              		.cfi_restore 14
 320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 886              		.loc 1 320 0
 887 00b6 0120     		movs	r0, #1
 888              	.LVL47:
 450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
ARM GAS  /tmp/cc8c22lT.s 			page 92


 889              		.loc 1 450 0
 890 00b8 7047     		bx	lr
 891              		.cfi_endproc
 892              	.LFE141:
 894              		.section	.text.HAL_SPI_MspDeInit,"ax",%progbits
 895              		.align	1
 896              		.weak	HAL_SPI_MspDeInit
 897              		.syntax unified
 898              		.thumb
 899              		.thumb_func
 900              		.fpu fpv5-sp-d16
 902              	HAL_SPI_MspDeInit:
 903              	.LFB144:
 519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 904              		.loc 1 519 0
 905              		.cfi_startproc
 906              		@ args = 0, pretend = 0, frame = 0
 907              		@ frame_needed = 0, uses_anonymous_args = 0
 908              		@ link register save eliminated.
 909              	.LVL48:
 526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 910              		.loc 1 526 0
 911 0000 7047     		bx	lr
 912              		.cfi_endproc
 913              	.LFE144:
 915              		.section	.text.HAL_SPI_DeInit,"ax",%progbits
 916              		.align	1
 917              		.global	HAL_SPI_DeInit
 918              		.syntax unified
 919              		.thumb
 920              		.thumb_func
 921              		.fpu fpv5-sp-d16
 923              	HAL_SPI_DeInit:
 924              	.LFB142:
 459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check the SPI handle allocation */
 925              		.loc 1 459 0
 926              		.cfi_startproc
 927              		@ args = 0, pretend = 0, frame = 0
 928              		@ frame_needed = 0, uses_anonymous_args = 0
 929              	.LVL49:
 461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 930              		.loc 1 461 0
 931 0000 90B1     		cbz	r0, .L86
 459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check the SPI handle allocation */
 932              		.loc 1 459 0
 933 0002 10B5     		push	{r4, lr}
 934              	.LCFI18:
 935              		.cfi_def_cfa_offset 8
 936              		.cfi_offset 4, -8
 937              		.cfi_offset 14, -4
 938 0004 0446     		mov	r4, r0
 469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 939              		.loc 1 469 0
 940 0006 0223     		movs	r3, #2
 941 0008 80F85D30 		strb	r3, [r0, #93]
 472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 942              		.loc 1 472 0
ARM GAS  /tmp/cc8c22lT.s 			page 93


 943 000c 0268     		ldr	r2, [r0]
 944 000e 1368     		ldr	r3, [r2]
 945 0010 23F04003 		bic	r3, r3, #64
 946 0014 1360     		str	r3, [r2]
 484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 947              		.loc 1 484 0
 948 0016 FFF7FEFF 		bl	HAL_SPI_MspDeInit
 949              	.LVL50:
 487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_RESET;
 950              		.loc 1 487 0
 951 001a 0020     		movs	r0, #0
 952 001c 2066     		str	r0, [r4, #96]
 488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 953              		.loc 1 488 0
 954 001e 84F85D00 		strb	r0, [r4, #93]
 491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 955              		.loc 1 491 0
 956 0022 84F85C00 		strb	r0, [r4, #92]
 494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 957              		.loc 1 494 0
 958 0026 10BD     		pop	{r4, pc}
 959              	.LVL51:
 960              	.L86:
 961              	.LCFI19:
 962              		.cfi_def_cfa_offset 0
 963              		.cfi_restore 4
 964              		.cfi_restore 14
 463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 965              		.loc 1 463 0
 966 0028 0120     		movs	r0, #1
 967              	.LVL52:
 494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 968              		.loc 1 494 0
 969 002a 7047     		bx	lr
 970              		.cfi_endproc
 971              	.LFE142:
 973              		.section	.text.HAL_SPI_Transmit,"ax",%progbits
 974              		.align	1
 975              		.global	HAL_SPI_Transmit
 976              		.syntax unified
 977              		.thumb
 978              		.thumb_func
 979              		.fpu fpv5-sp-d16
 981              	HAL_SPI_Transmit:
 982              	.LFB145:
 790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t tickstart;
 983              		.loc 1 790 0
 984              		.cfi_startproc
 985              		@ args = 0, pretend = 0, frame = 8
 986              		@ frame_needed = 0, uses_anonymous_args = 0
 987              	.LVL53:
 988 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 989              	.LCFI20:
 990              		.cfi_def_cfa_offset 24
 991              		.cfi_offset 4, -24
 992              		.cfi_offset 5, -20
 993              		.cfi_offset 6, -16
ARM GAS  /tmp/cc8c22lT.s 			page 94


 994              		.cfi_offset 7, -12
 995              		.cfi_offset 8, -8
 996              		.cfi_offset 14, -4
 997 0004 82B0     		sub	sp, sp, #8
 998              	.LCFI21:
 999              		.cfi_def_cfa_offset 32
 1000              	.LVL54:
 799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 1001              		.loc 1 799 0
 1002 0006 90F85C40 		ldrb	r4, [r0, #92]	@ zero_extendqisi2
 1003 000a 012C     		cmp	r4, #1
 1004 000c 00F0E580 		beq	.L116
 1005 0010 1D46     		mov	r5, r3
 1006 0012 1746     		mov	r7, r2
 1007 0014 8846     		mov	r8, r1
 1008 0016 0446     		mov	r4, r0
 799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 1009              		.loc 1 799 0 is_stmt 0 discriminator 2
 1010 0018 0123     		movs	r3, #1
 1011              	.LVL55:
 1012 001a 80F85C30 		strb	r3, [r0, #92]
 802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   initial_TxXferCount = Size;
 1013              		.loc 1 802 0 is_stmt 1 discriminator 2
 1014 001e FFF7FEFF 		bl	HAL_GetTick
 1015              	.LVL56:
 1016 0022 0646     		mov	r6, r0
 1017              	.LVL57:
 805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 1018              		.loc 1 805 0 discriminator 2
 1019 0024 94F85D30 		ldrb	r3, [r4, #93]	@ zero_extendqisi2
 1020 0028 DBB2     		uxtb	r3, r3
 1021 002a 012B     		cmp	r3, #1
 1022 002c 09D0     		beq	.L125
 807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 1023              		.loc 1 807 0
 1024 002e 0220     		movs	r0, #2
 1025              	.LVL58:
 1026              	.L93:
 957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process Unlocked */
 1027              		.loc 1 957 0
 1028 0030 0123     		movs	r3, #1
 1029 0032 84F85D30 		strb	r3, [r4, #93]
 959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return errorcode;
 1030              		.loc 1 959 0
 1031 0036 0023     		movs	r3, #0
 1032 0038 84F85C30 		strb	r3, [r4, #92]
 1033              	.LVL59:
 1034              	.L92:
 961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 1035              		.loc 1 961 0
 1036 003c 02B0     		add	sp, sp, #8
 1037              	.LCFI22:
 1038              		.cfi_remember_state
 1039              		.cfi_def_cfa_offset 24
 1040              		@ sp needed
 1041 003e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1042              	.LVL60:
ARM GAS  /tmp/cc8c22lT.s 			page 95


 1043              	.L125:
 1044              	.LCFI23:
 1045              		.cfi_restore_state
 811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 1046              		.loc 1 811 0
 1047 0042 B7FA87F3 		clz	r3, r7
 1048 0046 5B09     		lsrs	r3, r3, #5
 1049 0048 B8F1000F 		cmp	r8, #0
 1050 004c 08BF     		it	eq
 1051 004e 0123     		moveq	r3, #1
 1052 0050 002B     		cmp	r3, #0
 1053 0052 40F0B680 		bne	.L118
 818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 1054              		.loc 1 818 0
 1055 0056 0323     		movs	r3, #3
 1056 0058 84F85D30 		strb	r3, [r4, #93]
 819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
 1057              		.loc 1 819 0
 1058 005c 0023     		movs	r3, #0
 1059 005e 2366     		str	r3, [r4, #96]
 820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 1060              		.loc 1 820 0
 1061 0060 C4F83880 		str	r8, [r4, #56]
 821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount = Size;
 1062              		.loc 1 821 0
 1063 0064 A787     		strh	r7, [r4, #60]	@ movhi
 822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 1064              		.loc 1 822 0
 1065 0066 E787     		strh	r7, [r4, #62]	@ movhi
 825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
 1066              		.loc 1 825 0
 1067 0068 2364     		str	r3, [r4, #64]
 826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 1068              		.loc 1 826 0
 1069 006a A4F84430 		strh	r3, [r4, #68]	@ movhi
 827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxISR       = NULL;
 1070              		.loc 1 827 0
 1071 006e A4F84630 		strh	r3, [r4, #70]	@ movhi
 828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxISR       = NULL;
 1072              		.loc 1 828 0
 1073 0072 2365     		str	r3, [r4, #80]
 829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 1074              		.loc 1 829 0
 1075 0074 E364     		str	r3, [r4, #76]
 832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 1076              		.loc 1 832 0
 1077 0076 A368     		ldr	r3, [r4, #8]
 1078 0078 B3F5004F 		cmp	r3, #32768
 1079 007c 1CD0     		beq	.L126
 1080              	.L94:
 846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 1081              		.loc 1 846 0
 1082 007e 2368     		ldr	r3, [r4]
 1083 0080 1A68     		ldr	r2, [r3]
 1084 0082 12F0400F 		tst	r2, #64
 1085 0086 03D1     		bne	.L95
 849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
ARM GAS  /tmp/cc8c22lT.s 			page 96


 1086              		.loc 1 849 0
 1087 0088 1A68     		ldr	r2, [r3]
 1088 008a 42F04002 		orr	r2, r2, #64
 1089 008e 1A60     		str	r2, [r3]
 1090              	.L95:
 853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 1091              		.loc 1 853 0
 1092 0090 E368     		ldr	r3, [r4, #12]
 1093 0092 B3F5E06F 		cmp	r3, #1792
 1094 0096 33D9     		bls	.L96
 855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 1095              		.loc 1 855 0
 1096 0098 6368     		ldr	r3, [r4, #4]
 1097 009a 0BB1     		cbz	r3, .L97
 855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 1098              		.loc 1 855 0 is_stmt 0 discriminator 1
 1099 009c 012F     		cmp	r7, #1
 1100 009e 1BD1     		bne	.L99
 1101              	.L97:
 857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint16_t);
 1102              		.loc 1 857 0 is_stmt 1
 1103 00a0 A26B     		ldr	r2, [r4, #56]
 1104 00a2 2368     		ldr	r3, [r4]
 1105 00a4 1288     		ldrh	r2, [r2]
 1106 00a6 DA60     		str	r2, [r3, #12]
 858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->TxXferCount--;
 1107              		.loc 1 858 0
 1108 00a8 A36B     		ldr	r3, [r4, #56]
 1109 00aa 0233     		adds	r3, r3, #2
 1110 00ac A363     		str	r3, [r4, #56]
 859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 1111              		.loc 1 859 0
 1112 00ae E38F     		ldrh	r3, [r4, #62]
 1113 00b0 013B     		subs	r3, r3, #1
 1114 00b2 9BB2     		uxth	r3, r3
 1115 00b4 E387     		strh	r3, [r4, #62]	@ movhi
 1116 00b6 0FE0     		b	.L99
 1117              	.L126:
 834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 1118              		.loc 1 834 0
 1119 00b8 2268     		ldr	r2, [r4]
 1120 00ba 1368     		ldr	r3, [r2]
 1121 00bc 43F48043 		orr	r3, r3, #16384
 1122 00c0 1360     		str	r3, [r2]
 1123 00c2 DCE7     		b	.L94
 1124              	.LVL61:
 1125              	.L100:
 874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
 1126              		.loc 1 874 0
 1127 00c4 FFF7FEFF 		bl	HAL_GetTick
 1128              	.LVL62:
 1129 00c8 801B     		subs	r0, r0, r6
 1130 00ca A842     		cmp	r0, r5
 1131 00cc 02D3     		bcc	.L102
 874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
 1132              		.loc 1 874 0 is_stmt 0 discriminator 1
 1133 00ce B5F1FF3F 		cmp	r5, #-1
ARM GAS  /tmp/cc8c22lT.s 			page 97


 1134 00d2 78D1     		bne	.L119
 1135              	.L102:
 874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
 1136              		.loc 1 874 0 discriminator 3
 1137 00d4 002D     		cmp	r5, #0
 1138 00d6 78D0     		beq	.L120
 1139              	.L99:
 862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 1140              		.loc 1 862 0 is_stmt 1
 1141 00d8 E38F     		ldrh	r3, [r4, #62]
 1142 00da 9BB2     		uxth	r3, r3
 1143 00dc 002B     		cmp	r3, #0
 1144 00de 5BD0     		beq	.L104
 865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 1145              		.loc 1 865 0
 1146 00e0 2368     		ldr	r3, [r4]
 1147 00e2 9A68     		ldr	r2, [r3, #8]
 1148 00e4 12F0020F 		tst	r2, #2
 1149 00e8 ECD0     		beq	.L100
 867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint16_t);
 1150              		.loc 1 867 0
 1151 00ea A26B     		ldr	r2, [r4, #56]
 1152 00ec 1288     		ldrh	r2, [r2]
 1153 00ee DA60     		str	r2, [r3, #12]
 868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->TxXferCount--;
 1154              		.loc 1 868 0
 1155 00f0 A36B     		ldr	r3, [r4, #56]
 1156 00f2 0233     		adds	r3, r3, #2
 1157 00f4 A363     		str	r3, [r4, #56]
 869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 1158              		.loc 1 869 0
 1159 00f6 E38F     		ldrh	r3, [r4, #62]
 1160 00f8 013B     		subs	r3, r3, #1
 1161 00fa 9BB2     		uxth	r3, r3
 1162 00fc E387     		strh	r3, [r4, #62]	@ movhi
 1163 00fe EBE7     		b	.L99
 1164              	.LVL63:
 1165              	.L96:
 885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 1166              		.loc 1 885 0
 1167 0100 6368     		ldr	r3, [r4, #4]
 1168 0102 0BB1     		cbz	r3, .L105
 885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 1169              		.loc 1 885 0 is_stmt 0 discriminator 1
 1170 0104 012F     		cmp	r7, #1
 1171 0106 30D1     		bne	.L108
 1172              	.L105:
 887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 1173              		.loc 1 887 0 is_stmt 1
 1174 0108 E38F     		ldrh	r3, [r4, #62]
 1175 010a 9BB2     		uxth	r3, r3
 1176 010c 012B     		cmp	r3, #1
 1177 010e 0BD9     		bls	.L107
 890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint16_t);
 1178              		.loc 1 890 0
 1179 0110 A26B     		ldr	r2, [r4, #56]
 1180 0112 2368     		ldr	r3, [r4]
ARM GAS  /tmp/cc8c22lT.s 			page 98


 1181 0114 1288     		ldrh	r2, [r2]
 1182 0116 DA60     		str	r2, [r3, #12]
 891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->TxXferCount -= 2U;
 1183              		.loc 1 891 0
 1184 0118 A36B     		ldr	r3, [r4, #56]
 1185 011a 0233     		adds	r3, r3, #2
 1186 011c A363     		str	r3, [r4, #56]
 892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 1187              		.loc 1 892 0
 1188 011e E38F     		ldrh	r3, [r4, #62]
 1189 0120 023B     		subs	r3, r3, #2
 1190 0122 9BB2     		uxth	r3, r3
 1191 0124 E387     		strh	r3, [r4, #62]	@ movhi
 1192 0126 20E0     		b	.L108
 1193              	.L107:
 896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->pTxBuffPtr ++;
 1194              		.loc 1 896 0
 1195 0128 A26B     		ldr	r2, [r4, #56]
 1196 012a 2368     		ldr	r3, [r4]
 1197 012c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1198 012e 1A73     		strb	r2, [r3, #12]
 897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->TxXferCount--;
 1199              		.loc 1 897 0
 1200 0130 A36B     		ldr	r3, [r4, #56]
 1201 0132 0133     		adds	r3, r3, #1
 1202 0134 A363     		str	r3, [r4, #56]
 898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 1203              		.loc 1 898 0
 1204 0136 E38F     		ldrh	r3, [r4, #62]
 1205 0138 013B     		subs	r3, r3, #1
 1206 013a 9BB2     		uxth	r3, r3
 1207 013c E387     		strh	r3, [r4, #62]	@ movhi
 1208 013e 14E0     		b	.L108
 1209              	.LVL64:
 1210              	.L110:
 915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           hspi->pTxBuffPtr++;
 1211              		.loc 1 915 0
 1212 0140 A36B     		ldr	r3, [r4, #56]
 1213 0142 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1214 0144 1373     		strb	r3, [r2, #12]
 916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           hspi->TxXferCount--;
 1215              		.loc 1 916 0
 1216 0146 A36B     		ldr	r3, [r4, #56]
 1217 0148 0133     		adds	r3, r3, #1
 1218 014a A363     		str	r3, [r4, #56]
 917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
 1219              		.loc 1 917 0
 1220 014c E38F     		ldrh	r3, [r4, #62]
 1221 014e 013B     		subs	r3, r3, #1
 1222 0150 9BB2     		uxth	r3, r3
 1223 0152 E387     		strh	r3, [r4, #62]	@ movhi
 1224 0154 09E0     		b	.L108
 1225              	.L109:
 923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
 1226              		.loc 1 923 0
 1227 0156 FFF7FEFF 		bl	HAL_GetTick
 1228              	.LVL65:
ARM GAS  /tmp/cc8c22lT.s 			page 99


 1229 015a 801B     		subs	r0, r0, r6
 1230 015c A842     		cmp	r0, r5
 1231 015e 02D3     		bcc	.L112
 923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
 1232              		.loc 1 923 0 is_stmt 0 discriminator 1
 1233 0160 B5F1FF3F 		cmp	r5, #-1
 1234 0164 33D1     		bne	.L121
 1235              	.L112:
 923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
 1236              		.loc 1 923 0 discriminator 3
 1237 0166 002D     		cmp	r5, #0
 1238 0168 33D0     		beq	.L122
 1239              	.L108:
 901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 1240              		.loc 1 901 0 is_stmt 1
 1241 016a E38F     		ldrh	r3, [r4, #62]
 1242 016c 9BB2     		uxth	r3, r3
 1243 016e 9BB1     		cbz	r3, .L104
 904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 1244              		.loc 1 904 0
 1245 0170 2268     		ldr	r2, [r4]
 1246 0172 9368     		ldr	r3, [r2, #8]
 1247 0174 13F0020F 		tst	r3, #2
 1248 0178 EDD0     		beq	.L109
 906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
 1249              		.loc 1 906 0
 1250 017a E38F     		ldrh	r3, [r4, #62]
 1251 017c 9BB2     		uxth	r3, r3
 1252 017e 012B     		cmp	r3, #1
 1253 0180 DED9     		bls	.L110
 909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           hspi->pTxBuffPtr += sizeof(uint16_t);
 1254              		.loc 1 909 0
 1255 0182 A36B     		ldr	r3, [r4, #56]
 1256 0184 1B88     		ldrh	r3, [r3]
 1257 0186 D360     		str	r3, [r2, #12]
 910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           hspi->TxXferCount -= 2U;
 1258              		.loc 1 910 0
 1259 0188 A36B     		ldr	r3, [r4, #56]
 1260 018a 0233     		adds	r3, r3, #2
 1261 018c A363     		str	r3, [r4, #56]
 911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
 1262              		.loc 1 911 0
 1263 018e E38F     		ldrh	r3, [r4, #62]
 1264 0190 023B     		subs	r3, r3, #2
 1265 0192 9BB2     		uxth	r3, r3
 1266 0194 E387     		strh	r3, [r4, #62]	@ movhi
 1267 0196 E8E7     		b	.L108
 1268              	.L104:
 940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 1269              		.loc 1 940 0
 1270 0198 3246     		mov	r2, r6
 1271 019a 2946     		mov	r1, r5
 1272 019c 2046     		mov	r0, r4
 1273 019e FFF7FEFF 		bl	SPI_EndRxTxTransaction
 1274              	.LVL66:
 1275 01a2 08B1     		cbz	r0, .L114
 942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
ARM GAS  /tmp/cc8c22lT.s 			page 100


 1276              		.loc 1 942 0
 1277 01a4 2023     		movs	r3, #32
 1278 01a6 2366     		str	r3, [r4, #96]
 1279              	.L114:
 946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 1280              		.loc 1 946 0
 1281 01a8 A368     		ldr	r3, [r4, #8]
 1282 01aa 33B9     		cbnz	r3, .L115
 1283              	.LBB2:
 948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 1284              		.loc 1 948 0
 1285 01ac 0193     		str	r3, [sp, #4]
 1286 01ae 2368     		ldr	r3, [r4]
 1287 01b0 DA68     		ldr	r2, [r3, #12]
 1288 01b2 0192     		str	r2, [sp, #4]
 1289 01b4 9B68     		ldr	r3, [r3, #8]
 1290 01b6 0193     		str	r3, [sp, #4]
 1291 01b8 019B     		ldr	r3, [sp, #4]
 1292              	.L115:
 1293              	.LBE2:
 951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 1294              		.loc 1 951 0
 1295 01ba 236E     		ldr	r3, [r4, #96]
 1296 01bc 5BB9     		cbnz	r3, .L123
 792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint16_t initial_TxXferCount;
 1297              		.loc 1 792 0
 1298 01be 0020     		movs	r0, #0
 1299 01c0 36E7     		b	.L93
 1300              	.LVL67:
 1301              	.L118:
 813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 1302              		.loc 1 813 0
 1303 01c2 0120     		movs	r0, #1
 1304              	.LVL68:
 1305 01c4 34E7     		b	.L93
 1306              	.L119:
 876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           goto error;
 1307              		.loc 1 876 0
 1308 01c6 0320     		movs	r0, #3
 1309 01c8 32E7     		b	.L93
 1310              	.L120:
 1311 01ca 0320     		movs	r0, #3
 1312 01cc 30E7     		b	.L93
 1313              	.L121:
 925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           goto error;
 1314              		.loc 1 925 0
 1315 01ce 0320     		movs	r0, #3
 1316 01d0 2EE7     		b	.L93
 1317              	.L122:
 1318 01d2 0320     		movs	r0, #3
 1319 01d4 2CE7     		b	.L93
 1320              	.L123:
 953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 1321              		.loc 1 953 0
 1322 01d6 0120     		movs	r0, #1
 1323 01d8 2AE7     		b	.L93
 1324              	.LVL69:
ARM GAS  /tmp/cc8c22lT.s 			page 101


 1325              	.L116:
 799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 1326              		.loc 1 799 0
 1327 01da 0220     		movs	r0, #2
 1328              	.LVL70:
 1329 01dc 2EE7     		b	.L92
 1330              		.cfi_endproc
 1331              	.LFE145:
 1333              		.section	.text.HAL_SPI_TransmitReceive,"ax",%progbits
 1334              		.align	1
 1335              		.global	HAL_SPI_TransmitReceive
 1336              		.syntax unified
 1337              		.thumb
 1338              		.thumb_func
 1339              		.fpu fpv5-sp-d16
 1341              	HAL_SPI_TransmitReceive:
 1342              	.LFB147:
1199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint16_t             initial_TxXferCount;
 1343              		.loc 1 1199 0
 1344              		.cfi_startproc
 1345              		@ args = 4, pretend = 0, frame = 0
 1346              		@ frame_needed = 0, uses_anonymous_args = 0
 1347              	.LVL71:
 1348 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 1349              	.LCFI24:
 1350              		.cfi_def_cfa_offset 32
 1351              		.cfi_offset 3, -32
 1352              		.cfi_offset 4, -28
 1353              		.cfi_offset 5, -24
 1354              		.cfi_offset 6, -20
 1355              		.cfi_offset 7, -16
 1356              		.cfi_offset 8, -12
 1357              		.cfi_offset 9, -8
 1358              		.cfi_offset 14, -4
 1359 0004 DDF82080 		ldr	r8, [sp, #32]
 1360              	.LVL72:
1218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 1361              		.loc 1 1218 0
 1362 0008 90F85C40 		ldrb	r4, [r0, #92]	@ zero_extendqisi2
 1363 000c 012C     		cmp	r4, #1
 1364 000e 00F05D81 		beq	.L154
 1365 0012 1D46     		mov	r5, r3
 1366 0014 1746     		mov	r7, r2
 1367 0016 0E46     		mov	r6, r1
 1368 0018 0446     		mov	r4, r0
1218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 1369              		.loc 1 1218 0 is_stmt 0 discriminator 2
 1370 001a 0123     		movs	r3, #1
 1371              	.LVL73:
 1372 001c 80F85C30 		strb	r3, [r0, #92]
1221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 1373              		.loc 1 1221 0 is_stmt 1 discriminator 2
 1374 0020 FFF7FEFF 		bl	HAL_GetTick
 1375              	.LVL74:
 1376 0024 8146     		mov	r9, r0
 1377              	.LVL75:
1224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   tmp_mode            = hspi->Init.Mode;
ARM GAS  /tmp/cc8c22lT.s 			page 102


 1378              		.loc 1 1224 0 discriminator 2
 1379 0026 94F85D00 		ldrb	r0, [r4, #93]	@ zero_extendqisi2
 1380              	.LVL76:
 1381 002a C0B2     		uxtb	r0, r0
 1382              	.LVL77:
1225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   initial_TxXferCount = Size;
 1383              		.loc 1 1225 0 discriminator 2
 1384 002c 6368     		ldr	r3, [r4, #4]
 1385              	.LVL78:
1233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
 1386              		.loc 1 1233 0 discriminator 2
 1387 002e 0128     		cmp	r0, #1
 1388 0030 14D0     		beq	.L129
1233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
 1389              		.loc 1 1233 0 is_stmt 0 discriminator 1
 1390 0032 B3F5827F 		cmp	r3, #260
 1391 0036 09D0     		beq	.L165
1236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 1392              		.loc 1 1236 0 is_stmt 1
 1393 0038 0223     		movs	r3, #2
 1394              	.LVL79:
 1395              	.L130:
1482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 1396              		.loc 1 1482 0
 1397 003a 0122     		movs	r2, #1
 1398 003c 84F85D20 		strb	r2, [r4, #93]
1483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return errorcode;
 1399              		.loc 1 1483 0
 1400 0040 0022     		movs	r2, #0
 1401 0042 84F85C20 		strb	r2, [r4, #92]
 1402              	.LVL80:
 1403              	.L128:
1485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 1404              		.loc 1 1485 0
 1405 0046 1846     		mov	r0, r3
 1406 0048 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1407              	.LVL81:
 1408              	.L165:
1234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 1409              		.loc 1 1234 0
 1410 004c A368     		ldr	r3, [r4, #8]
 1411              	.LVL82:
 1412 004e 002B     		cmp	r3, #0
 1413 0050 40F03081 		bne	.L156
1234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 1414              		.loc 1 1234 0 is_stmt 0 discriminator 1
 1415 0054 0428     		cmp	r0, #4
 1416 0056 01D0     		beq	.L129
1236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 1417              		.loc 1 1236 0 is_stmt 1
 1418 0058 0223     		movs	r3, #2
 1419 005a EEE7     		b	.L130
 1420              	.L129:
1240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 1421              		.loc 1 1240 0
 1422 005c B7FA87F3 		clz	r3, r7
 1423 0060 5B09     		lsrs	r3, r3, #5
ARM GAS  /tmp/cc8c22lT.s 			page 103


 1424 0062 002E     		cmp	r6, #0
 1425 0064 08BF     		it	eq
 1426 0066 0123     		moveq	r3, #1
 1427 0068 002B     		cmp	r3, #0
 1428 006a 40F02581 		bne	.L158
1240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 1429              		.loc 1 1240 0 is_stmt 0 discriminator 1
 1430 006e 002D     		cmp	r5, #0
 1431 0070 00F02481 		beq	.L159
1247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 1432              		.loc 1 1247 0 is_stmt 1
 1433 0074 94F85D30 		ldrb	r3, [r4, #93]	@ zero_extendqisi2
 1434 0078 DBB2     		uxtb	r3, r3
 1435 007a 042B     		cmp	r3, #4
 1436 007c 02D0     		beq	.L131
1249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 1437              		.loc 1 1249 0
 1438 007e 0523     		movs	r3, #5
 1439 0080 84F85D30 		strb	r3, [r4, #93]
 1440              	.L131:
1253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 1441              		.loc 1 1253 0
 1442 0084 0023     		movs	r3, #0
 1443 0086 2366     		str	r3, [r4, #96]
1254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount = Size;
 1444              		.loc 1 1254 0
 1445 0088 2764     		str	r7, [r4, #64]
1255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 1446              		.loc 1 1255 0
 1447 008a A4F84650 		strh	r5, [r4, #70]	@ movhi
1256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 1448              		.loc 1 1256 0
 1449 008e A4F84450 		strh	r5, [r4, #68]	@ movhi
1257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount = Size;
 1450              		.loc 1 1257 0
 1451 0092 A663     		str	r6, [r4, #56]
1258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 1452              		.loc 1 1258 0
 1453 0094 E587     		strh	r5, [r4, #62]	@ movhi
1259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 1454              		.loc 1 1259 0
 1455 0096 A587     		strh	r5, [r4, #60]	@ movhi
1262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxISR       = NULL;
 1456              		.loc 1 1262 0
 1457 0098 E364     		str	r3, [r4, #76]
1263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 1458              		.loc 1 1263 0
 1459 009a 2365     		str	r3, [r4, #80]
1274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 1460              		.loc 1 1274 0
 1461 009c E368     		ldr	r3, [r4, #12]
 1462 009e B3F5E06F 		cmp	r3, #1792
 1463 00a2 01D8     		bhi	.L132
1274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 1464              		.loc 1 1274 0 is_stmt 0 discriminator 1
 1465 00a4 012D     		cmp	r5, #1
 1466 00a6 22D9     		bls	.L133
ARM GAS  /tmp/cc8c22lT.s 			page 104


 1467              	.L132:
1277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 1468              		.loc 1 1277 0 is_stmt 1
 1469 00a8 2268     		ldr	r2, [r4]
 1470 00aa 5368     		ldr	r3, [r2, #4]
 1471 00ac 23F48053 		bic	r3, r3, #4096
 1472 00b0 5360     		str	r3, [r2, #4]
 1473              	.LVL83:
 1474              	.L134:
1286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 1475              		.loc 1 1286 0
 1476 00b2 2368     		ldr	r3, [r4]
 1477 00b4 1A68     		ldr	r2, [r3]
 1478 00b6 12F0400F 		tst	r2, #64
 1479 00ba 03D1     		bne	.L135
1289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 1480              		.loc 1 1289 0
 1481 00bc 1A68     		ldr	r2, [r3]
 1482 00be 42F04002 		orr	r2, r2, #64
 1483 00c2 1A60     		str	r2, [r3]
 1484              	.L135:
1293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 1485              		.loc 1 1293 0
 1486 00c4 E368     		ldr	r3, [r4, #12]
 1487 00c6 B3F5E06F 		cmp	r3, #1792
 1488 00ca 56D9     		bls	.L136
1295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 1489              		.loc 1 1295 0
 1490 00cc 6368     		ldr	r3, [r4, #4]
 1491 00ce 0BB1     		cbz	r3, .L137
1295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 1492              		.loc 1 1295 0 is_stmt 0 discriminator 1
 1493 00d0 012D     		cmp	r5, #1
 1494 00d2 0AD1     		bne	.L138
 1495              	.L137:
1297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint16_t);
 1496              		.loc 1 1297 0 is_stmt 1
 1497 00d4 A26B     		ldr	r2, [r4, #56]
 1498 00d6 2368     		ldr	r3, [r4]
 1499 00d8 1288     		ldrh	r2, [r2]
 1500 00da DA60     		str	r2, [r3, #12]
1298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->TxXferCount--;
 1501              		.loc 1 1298 0
 1502 00dc A36B     		ldr	r3, [r4, #56]
 1503 00de 0233     		adds	r3, r3, #2
 1504 00e0 A363     		str	r3, [r4, #56]
1299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 1505              		.loc 1 1299 0
 1506 00e2 E38F     		ldrh	r3, [r4, #62]
 1507 00e4 013B     		subs	r3, r3, #1
 1508 00e6 9BB2     		uxth	r3, r3
 1509 00e8 E387     		strh	r3, [r4, #62]	@ movhi
 1510              	.L138:
1333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 1511              		.loc 1 1333 0
 1512 00ea 0125     		movs	r5, #1
 1513              	.LVL84:
ARM GAS  /tmp/cc8c22lT.s 			page 105


 1514 00ec 25E0     		b	.L139
 1515              	.LVL85:
 1516              	.L133:
1282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 1517              		.loc 1 1282 0
 1518 00ee 2268     		ldr	r2, [r4]
 1519 00f0 5368     		ldr	r3, [r2, #4]
 1520 00f2 43F48053 		orr	r3, r3, #4096
 1521 00f6 5360     		str	r3, [r2, #4]
 1522              	.LVL86:
 1523 00f8 DBE7     		b	.L134
 1524              	.LVL87:
 1525              	.L140:
1327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 1526              		.loc 1 1327 0
 1527 00fa 2368     		ldr	r3, [r4]
 1528 00fc 9A68     		ldr	r2, [r3, #8]
 1529 00fe 12F0010F 		tst	r2, #1
 1530 0102 10D0     		beq	.L141
1327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 1531              		.loc 1 1327 0 is_stmt 0 discriminator 1
 1532 0104 B4F84620 		ldrh	r2, [r4, #70]
 1533 0108 92B2     		uxth	r2, r2
 1534 010a 62B1     		cbz	r2, .L141
1329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint16_t);
 1535              		.loc 1 1329 0 is_stmt 1
 1536 010c DA68     		ldr	r2, [r3, #12]
 1537 010e 236C     		ldr	r3, [r4, #64]
 1538 0110 1A80     		strh	r2, [r3]	@ movhi
1330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->RxXferCount--;
 1539              		.loc 1 1330 0
 1540 0112 236C     		ldr	r3, [r4, #64]
 1541 0114 0233     		adds	r3, r3, #2
 1542 0116 2364     		str	r3, [r4, #64]
1331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Next Data is a Transmission (Tx). Tx is allowed */
 1543              		.loc 1 1331 0
 1544 0118 B4F84630 		ldrh	r3, [r4, #70]
 1545 011c 013B     		subs	r3, r3, #1
 1546 011e 9BB2     		uxth	r3, r3
 1547 0120 A4F84630 		strh	r3, [r4, #70]	@ movhi
 1548              	.LVL88:
1333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 1549              		.loc 1 1333 0
 1550 0124 0125     		movs	r5, #1
 1551              	.LVL89:
 1552              	.L141:
1335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 1553              		.loc 1 1335 0
 1554 0126 FFF7FEFF 		bl	HAL_GetTick
 1555              	.LVL90:
 1556 012a A0EB0900 		sub	r0, r0, r9
 1557 012e 4045     		cmp	r0, r8
 1558 0130 03D3     		bcc	.L139
1335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 1559              		.loc 1 1335 0 is_stmt 0 discriminator 1
 1560 0132 B8F1FF3F 		cmp	r8, #-1
 1561 0136 40F0C380 		bne	.L160
ARM GAS  /tmp/cc8c22lT.s 			page 106


 1562              	.LVL91:
 1563              	.L139:
1301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 1564              		.loc 1 1301 0 is_stmt 1
 1565 013a E38F     		ldrh	r3, [r4, #62]
 1566 013c 9BB2     		uxth	r3, r3
 1567 013e 2BB9     		cbnz	r3, .L142
1301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 1568              		.loc 1 1301 0 is_stmt 0 discriminator 1
 1569 0140 B4F84630 		ldrh	r3, [r4, #70]
 1570 0144 9BB2     		uxth	r3, r3
 1571 0146 002B     		cmp	r3, #0
 1572 0148 00F0A780 		beq	.L143
 1573              	.L142:
1304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 1574              		.loc 1 1304 0 is_stmt 1
 1575 014c 2368     		ldr	r3, [r4]
 1576 014e 9A68     		ldr	r2, [r3, #8]
 1577 0150 12F0020F 		tst	r2, #2
 1578 0154 D1D0     		beq	.L140
1304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 1579              		.loc 1 1304 0 is_stmt 0 discriminator 1
 1580 0156 E28F     		ldrh	r2, [r4, #62]
 1581 0158 92B2     		uxth	r2, r2
 1582 015a 002A     		cmp	r2, #0
 1583 015c CDD0     		beq	.L140
1304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 1584              		.loc 1 1304 0 discriminator 2
 1585 015e 002D     		cmp	r5, #0
 1586 0160 CBD0     		beq	.L140
1306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint16_t);
 1587              		.loc 1 1306 0 is_stmt 1
 1588 0162 A26B     		ldr	r2, [r4, #56]
 1589 0164 1288     		ldrh	r2, [r2]
 1590 0166 DA60     		str	r2, [r3, #12]
1307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->TxXferCount--;
 1591              		.loc 1 1307 0
 1592 0168 A36B     		ldr	r3, [r4, #56]
 1593 016a 0233     		adds	r3, r3, #2
 1594 016c A363     		str	r3, [r4, #56]
1308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Next Data is a reception (Rx). Tx not allowed */
 1595              		.loc 1 1308 0
 1596 016e E38F     		ldrh	r3, [r4, #62]
 1597 0170 013B     		subs	r3, r3, #1
 1598 0172 9BB2     		uxth	r3, r3
 1599 0174 E387     		strh	r3, [r4, #62]	@ movhi
 1600              	.LVL92:
1310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 1601              		.loc 1 1310 0
 1602 0176 0025     		movs	r5, #0
 1603 0178 BFE7     		b	.L140
 1604              	.LVL93:
 1605              	.L136:
1345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 1606              		.loc 1 1345 0
 1607 017a 6368     		ldr	r3, [r4, #4]
 1608 017c 0BB1     		cbz	r3, .L144
ARM GAS  /tmp/cc8c22lT.s 			page 107


1345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 1609              		.loc 1 1345 0 is_stmt 0 discriminator 1
 1610 017e 012D     		cmp	r5, #1
 1611 0180 0ED1     		bne	.L145
 1612              	.L144:
1347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 1613              		.loc 1 1347 0 is_stmt 1
 1614 0182 E38F     		ldrh	r3, [r4, #62]
 1615 0184 9BB2     		uxth	r3, r3
 1616 0186 012B     		cmp	r3, #1
 1617 0188 0CD9     		bls	.L146
1349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint16_t);
 1618              		.loc 1 1349 0
 1619 018a A26B     		ldr	r2, [r4, #56]
 1620 018c 2368     		ldr	r3, [r4]
 1621 018e 1288     		ldrh	r2, [r2]
 1622 0190 DA60     		str	r2, [r3, #12]
1350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->TxXferCount -= 2U;
 1623              		.loc 1 1350 0
 1624 0192 A36B     		ldr	r3, [r4, #56]
 1625 0194 0233     		adds	r3, r3, #2
 1626 0196 A363     		str	r3, [r4, #56]
1351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 1627              		.loc 1 1351 0
 1628 0198 E38F     		ldrh	r3, [r4, #62]
 1629 019a 023B     		subs	r3, r3, #2
 1630 019c 9BB2     		uxth	r3, r3
 1631 019e E387     		strh	r3, [r4, #62]	@ movhi
 1632              	.L145:
1415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 1633              		.loc 1 1415 0
 1634 01a0 0125     		movs	r5, #1
 1635              	.LVL94:
 1636 01a2 47E0     		b	.L152
 1637              	.LVL95:
 1638              	.L146:
1355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->pTxBuffPtr++;
 1639              		.loc 1 1355 0
 1640 01a4 A26B     		ldr	r2, [r4, #56]
 1641 01a6 2368     		ldr	r3, [r4]
 1642 01a8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1643 01aa 1A73     		strb	r2, [r3, #12]
1356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->TxXferCount--;
 1644              		.loc 1 1356 0
 1645 01ac A36B     		ldr	r3, [r4, #56]
 1646 01ae 0133     		adds	r3, r3, #1
 1647 01b0 A363     		str	r3, [r4, #56]
1357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 1648              		.loc 1 1357 0
 1649 01b2 E38F     		ldrh	r3, [r4, #62]
 1650 01b4 013B     		subs	r3, r3, #1
 1651 01b6 9BB2     		uxth	r3, r3
 1652 01b8 E387     		strh	r3, [r4, #62]	@ movhi
 1653 01ba F1E7     		b	.L145
 1654              	.LVL96:
 1655              	.L167:
1365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
ARM GAS  /tmp/cc8c22lT.s 			page 108


 1656              		.loc 1 1365 0
 1657 01bc E28F     		ldrh	r2, [r4, #62]
 1658 01be 92B2     		uxth	r2, r2
 1659 01c0 012A     		cmp	r2, #1
 1660 01c2 0BD9     		bls	.L148
1367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           hspi->pTxBuffPtr += sizeof(uint16_t);
 1661              		.loc 1 1367 0
 1662 01c4 A26B     		ldr	r2, [r4, #56]
 1663 01c6 1288     		ldrh	r2, [r2]
 1664 01c8 DA60     		str	r2, [r3, #12]
1368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           hspi->TxXferCount -= 2U;
 1665              		.loc 1 1368 0
 1666 01ca A36B     		ldr	r3, [r4, #56]
 1667 01cc 0233     		adds	r3, r3, #2
 1668 01ce A363     		str	r3, [r4, #56]
1369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
 1669              		.loc 1 1369 0
 1670 01d0 E38F     		ldrh	r3, [r4, #62]
 1671 01d2 023B     		subs	r3, r3, #2
 1672 01d4 9BB2     		uxth	r3, r3
 1673 01d6 E387     		strh	r3, [r4, #62]	@ movhi
1378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 1674              		.loc 1 1378 0
 1675 01d8 0025     		movs	r5, #0
 1676              	.LVL97:
 1677 01da 3CE0     		b	.L147
 1678              	.LVL98:
 1679              	.L148:
1373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           hspi->pTxBuffPtr++;
 1680              		.loc 1 1373 0
 1681 01dc A26B     		ldr	r2, [r4, #56]
 1682 01de 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1683 01e0 1A73     		strb	r2, [r3, #12]
1374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           hspi->TxXferCount--;
 1684              		.loc 1 1374 0
 1685 01e2 A36B     		ldr	r3, [r4, #56]
 1686 01e4 0133     		adds	r3, r3, #1
 1687 01e6 A363     		str	r3, [r4, #56]
1375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
 1688              		.loc 1 1375 0
 1689 01e8 E38F     		ldrh	r3, [r4, #62]
 1690 01ea 013B     		subs	r3, r3, #1
 1691 01ec 9BB2     		uxth	r3, r3
 1692 01ee E387     		strh	r3, [r4, #62]	@ movhi
1378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 1693              		.loc 1 1378 0
 1694 01f0 0025     		movs	r5, #0
 1695              	.LVL99:
 1696 01f2 30E0     		b	.L147
 1697              	.LVL100:
 1698              	.L168:
1405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           }
 1699              		.loc 1 1405 0
 1700 01f4 2268     		ldr	r2, [r4]
 1701 01f6 5368     		ldr	r3, [r2, #4]
 1702 01f8 43F48053 		orr	r3, r3, #4096
 1703 01fc 5360     		str	r3, [r2, #4]
ARM GAS  /tmp/cc8c22lT.s 			page 109


1415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 1704              		.loc 1 1415 0
 1705 01fe 0125     		movs	r5, #1
 1706              	.LVL101:
 1707 0200 0CE0     		b	.L149
 1708              	.LVL102:
 1709              	.L150:
1410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           hspi->pRxBuffPtr++;
 1710              		.loc 1 1410 0
 1711 0202 226C     		ldr	r2, [r4, #64]
 1712 0204 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 1713 0206 1370     		strb	r3, [r2]
1411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           hspi->RxXferCount--;
 1714              		.loc 1 1411 0
 1715 0208 236C     		ldr	r3, [r4, #64]
 1716 020a 0133     		adds	r3, r3, #1
 1717 020c 2364     		str	r3, [r4, #64]
1412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
 1718              		.loc 1 1412 0
 1719 020e B4F84630 		ldrh	r3, [r4, #70]
 1720 0212 013B     		subs	r3, r3, #1
 1721 0214 9BB2     		uxth	r3, r3
 1722 0216 A4F84630 		strh	r3, [r4, #70]	@ movhi
1415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 1723              		.loc 1 1415 0
 1724 021a 0125     		movs	r5, #1
 1725              	.LVL103:
 1726              	.L149:
1417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 1727              		.loc 1 1417 0
 1728 021c FFF7FEFF 		bl	HAL_GetTick
 1729              	.LVL104:
 1730 0220 A0EB0900 		sub	r0, r0, r9
 1731 0224 4045     		cmp	r0, r8
 1732 0226 02D3     		bcc	.L151
1417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 1733              		.loc 1 1417 0 is_stmt 0 discriminator 1
 1734 0228 B8F1FF3F 		cmp	r8, #-1
 1735 022c 4AD1     		bne	.L162
 1736              	.L151:
1417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 1737              		.loc 1 1417 0 discriminator 3
 1738 022e B8F1000F 		cmp	r8, #0
 1739 0232 49D0     		beq	.L166
 1740              	.LVL105:
 1741              	.L152:
1360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 1742              		.loc 1 1360 0 is_stmt 1
 1743 0234 E38F     		ldrh	r3, [r4, #62]
 1744 0236 9BB2     		uxth	r3, r3
 1745 0238 1BB9     		cbnz	r3, .L153
1360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 1746              		.loc 1 1360 0 is_stmt 0 discriminator 1
 1747 023a B4F84630 		ldrh	r3, [r4, #70]
 1748 023e 9BB2     		uxth	r3, r3
 1749 0240 5BB3     		cbz	r3, .L143
 1750              	.L153:
ARM GAS  /tmp/cc8c22lT.s 			page 110


1363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 1751              		.loc 1 1363 0 is_stmt 1
 1752 0242 2368     		ldr	r3, [r4]
 1753 0244 9A68     		ldr	r2, [r3, #8]
 1754 0246 12F0020F 		tst	r2, #2
 1755 024a 04D0     		beq	.L147
1363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 1756              		.loc 1 1363 0 is_stmt 0 discriminator 1
 1757 024c E28F     		ldrh	r2, [r4, #62]
 1758 024e 92B2     		uxth	r2, r2
 1759 0250 0AB1     		cbz	r2, .L147
1363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 1760              		.loc 1 1363 0 discriminator 2
 1761 0252 002D     		cmp	r5, #0
 1762 0254 B2D1     		bne	.L167
 1763              	.LVL106:
 1764              	.L147:
1395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 1765              		.loc 1 1395 0 is_stmt 1
 1766 0256 2368     		ldr	r3, [r4]
 1767 0258 9A68     		ldr	r2, [r3, #8]
 1768 025a 12F0010F 		tst	r2, #1
 1769 025e DDD0     		beq	.L149
1395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 1770              		.loc 1 1395 0 is_stmt 0 discriminator 1
 1771 0260 B4F84620 		ldrh	r2, [r4, #70]
 1772 0264 92B2     		uxth	r2, r2
 1773 0266 002A     		cmp	r2, #0
 1774 0268 D8D0     		beq	.L149
1397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
 1775              		.loc 1 1397 0 is_stmt 1
 1776 026a B4F84620 		ldrh	r2, [r4, #70]
 1777 026e 92B2     		uxth	r2, r2
 1778 0270 012A     		cmp	r2, #1
 1779 0272 C6D9     		bls	.L150
1399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           hspi->pRxBuffPtr += sizeof(uint16_t);
 1780              		.loc 1 1399 0
 1781 0274 DA68     		ldr	r2, [r3, #12]
 1782 0276 236C     		ldr	r3, [r4, #64]
 1783 0278 1A80     		strh	r2, [r3]	@ movhi
1400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           hspi->RxXferCount -= 2U;
 1784              		.loc 1 1400 0
 1785 027a 236C     		ldr	r3, [r4, #64]
 1786 027c 0233     		adds	r3, r3, #2
 1787 027e 2364     		str	r3, [r4, #64]
1401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           if (hspi->RxXferCount <= 1U)
 1788              		.loc 1 1401 0
 1789 0280 B4F84630 		ldrh	r3, [r4, #70]
 1790 0284 023B     		subs	r3, r3, #2
 1791 0286 9BB2     		uxth	r3, r3
 1792 0288 A4F84630 		strh	r3, [r4, #70]	@ movhi
1402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           {
 1793              		.loc 1 1402 0
 1794 028c B4F84630 		ldrh	r3, [r4, #70]
 1795 0290 9BB2     		uxth	r3, r3
 1796 0292 012B     		cmp	r3, #1
 1797 0294 AED9     		bls	.L168
ARM GAS  /tmp/cc8c22lT.s 			page 111


1415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 1798              		.loc 1 1415 0
 1799 0296 0125     		movs	r5, #1
 1800              	.LVL107:
 1801 0298 C0E7     		b	.L149
 1802              	.LVL108:
 1803              	.L143:
1475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 1804              		.loc 1 1475 0
 1805 029a 4A46     		mov	r2, r9
 1806 029c 4146     		mov	r1, r8
 1807 029e 2046     		mov	r0, r4
 1808 02a0 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 1809              	.LVL109:
 1810 02a4 0346     		mov	r3, r0
 1811 02a6 0028     		cmp	r0, #0
 1812 02a8 3FF4C7AE 		beq	.L130
 1813              	.LVL110:
1478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 1814              		.loc 1 1478 0
 1815 02ac 2023     		movs	r3, #32
 1816 02ae 2366     		str	r3, [r4, #96]
1477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 1817              		.loc 1 1477 0
 1818 02b0 0123     		movs	r3, #1
 1819 02b2 C2E6     		b	.L130
 1820              	.LVL111:
 1821              	.L156:
1236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 1822              		.loc 1 1236 0
 1823 02b4 0223     		movs	r3, #2
 1824 02b6 C0E6     		b	.L130
 1825              	.L158:
1242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 1826              		.loc 1 1242 0
 1827 02b8 0123     		movs	r3, #1
 1828 02ba BEE6     		b	.L130
 1829              	.L159:
 1830 02bc 0123     		movs	r3, #1
 1831 02be BCE6     		b	.L130
 1832              	.LVL112:
 1833              	.L160:
1337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         goto error;
 1834              		.loc 1 1337 0
 1835 02c0 0323     		movs	r3, #3
 1836 02c2 BAE6     		b	.L130
 1837              	.L162:
1419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         goto error;
 1838              		.loc 1 1419 0
 1839 02c4 0323     		movs	r3, #3
 1840 02c6 B8E6     		b	.L130
 1841              	.L166:
 1842 02c8 0323     		movs	r3, #3
 1843 02ca B6E6     		b	.L130
 1844              	.LVL113:
 1845              	.L154:
1218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
ARM GAS  /tmp/cc8c22lT.s 			page 112


 1846              		.loc 1 1218 0
 1847 02cc 0223     		movs	r3, #2
 1848              	.LVL114:
 1849 02ce BAE6     		b	.L128
 1850              		.cfi_endproc
 1851              	.LFE147:
 1853              		.section	.text.HAL_SPI_Receive,"ax",%progbits
 1854              		.align	1
 1855              		.global	HAL_SPI_Receive
 1856              		.syntax unified
 1857              		.thumb
 1858              		.thumb_func
 1859              		.fpu fpv5-sp-d16
 1861              	HAL_SPI_Receive:
 1862              	.LFB146:
 973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t tickstart;
 1863              		.loc 1 973 0
 1864              		.cfi_startproc
 1865              		@ args = 0, pretend = 0, frame = 0
 1866              		@ frame_needed = 0, uses_anonymous_args = 0
 1867              	.LVL115:
 1868 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1869              	.LCFI25:
 1870              		.cfi_def_cfa_offset 24
 1871              		.cfi_offset 4, -24
 1872              		.cfi_offset 5, -20
 1873              		.cfi_offset 6, -16
 1874              		.cfi_offset 7, -12
 1875              		.cfi_offset 8, -8
 1876              		.cfi_offset 14, -4
 1877 0004 82B0     		sub	sp, sp, #8
 1878              	.LCFI26:
 1879              		.cfi_def_cfa_offset 32
 1880 0006 0446     		mov	r4, r0
 1881 0008 8846     		mov	r8, r1
 1882 000a 1746     		mov	r7, r2
 1883 000c 1D46     		mov	r5, r3
 1884              	.LVL116:
 977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 1885              		.loc 1 977 0
 1886 000e 4368     		ldr	r3, [r0, #4]
 1887              	.LVL117:
 1888 0010 B3F5827F 		cmp	r3, #260
 1889 0014 19D0     		beq	.L198
 1890              	.L170:
 985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 1891              		.loc 1 985 0
 1892 0016 94F85C30 		ldrb	r3, [r4, #92]	@ zero_extendqisi2
 1893 001a 012B     		cmp	r3, #1
 1894 001c 00F0BA80 		beq	.L189
 985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 1895              		.loc 1 985 0 is_stmt 0 discriminator 2
 1896 0020 0123     		movs	r3, #1
 1897 0022 84F85C30 		strb	r3, [r4, #92]
 988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 1898              		.loc 1 988 0 is_stmt 1 discriminator 2
 1899 0026 FFF7FEFF 		bl	HAL_GetTick
ARM GAS  /tmp/cc8c22lT.s 			page 113


 1900              	.LVL118:
 1901 002a 0646     		mov	r6, r0
 1902              	.LVL119:
 990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 1903              		.loc 1 990 0 discriminator 2
 1904 002c 94F85D30 		ldrb	r3, [r4, #93]	@ zero_extendqisi2
 1905 0030 DBB2     		uxtb	r3, r3
 1906 0032 012B     		cmp	r3, #1
 1907 0034 15D0     		beq	.L199
 992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 1908              		.loc 1 992 0
 1909 0036 0220     		movs	r0, #2
 1910              	.LVL120:
 1911              	.L172:
1182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 1912              		.loc 1 1182 0
 1913 0038 0123     		movs	r3, #1
 1914 003a 84F85D30 		strb	r3, [r4, #93]
1183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return errorcode;
 1915              		.loc 1 1183 0
 1916 003e 0023     		movs	r3, #0
 1917 0040 84F85C30 		strb	r3, [r4, #92]
 1918              	.LVL121:
 1919              	.L171:
1185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 1920              		.loc 1 1185 0
 1921 0044 02B0     		add	sp, sp, #8
 1922              	.LCFI27:
 1923              		.cfi_remember_state
 1924              		.cfi_def_cfa_offset 24
 1925              		@ sp needed
 1926 0046 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1927              	.LVL122:
 1928              	.L198:
 1929              	.LCFI28:
 1930              		.cfi_restore_state
 977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 1931              		.loc 1 977 0 discriminator 1
 1932 004a 8368     		ldr	r3, [r0, #8]
 1933 004c 002B     		cmp	r3, #0
 1934 004e E2D1     		bne	.L170
 979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line 
 1935              		.loc 1 979 0
 1936 0050 0423     		movs	r3, #4
 1937 0052 80F85D30 		strb	r3, [r0, #93]
 981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 1938              		.loc 1 981 0
 1939 0056 0095     		str	r5, [sp]
 1940 0058 1346     		mov	r3, r2
 1941 005a 0A46     		mov	r2, r1
 1942              	.LVL123:
 1943 005c FFF7FEFF 		bl	HAL_SPI_TransmitReceive
 1944              	.LVL124:
 1945 0060 F0E7     		b	.L171
 1946              	.LVL125:
 1947              	.L199:
 996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
ARM GAS  /tmp/cc8c22lT.s 			page 114


 1948              		.loc 1 996 0
 1949 0062 B7FA87F3 		clz	r3, r7
 1950 0066 5B09     		lsrs	r3, r3, #5
 1951 0068 B8F1000F 		cmp	r8, #0
 1952 006c 08BF     		it	eq
 1953 006e 0123     		moveq	r3, #1
 1954 0070 002B     		cmp	r3, #0
 1955 0072 40F08380 		bne	.L191
1003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 1956              		.loc 1 1003 0
 1957 0076 0423     		movs	r3, #4
 1958 0078 84F85D30 		strb	r3, [r4, #93]
1004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
 1959              		.loc 1 1004 0
 1960 007c 0023     		movs	r3, #0
 1961 007e 2366     		str	r3, [r4, #96]
1005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 1962              		.loc 1 1005 0
 1963 0080 C4F84080 		str	r8, [r4, #64]
1006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount = Size;
 1964              		.loc 1 1006 0
 1965 0084 A4F84470 		strh	r7, [r4, #68]	@ movhi
1007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 1966              		.loc 1 1007 0
 1967 0088 A4F84670 		strh	r7, [r4, #70]	@ movhi
1010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
 1968              		.loc 1 1010 0
 1969 008c A363     		str	r3, [r4, #56]
1011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 1970              		.loc 1 1011 0
 1971 008e A387     		strh	r3, [r4, #60]	@ movhi
1012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxISR       = NULL;
 1972              		.loc 1 1012 0
 1973 0090 E387     		strh	r3, [r4, #62]	@ movhi
1013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxISR       = NULL;
 1974              		.loc 1 1013 0
 1975 0092 E364     		str	r3, [r4, #76]
1014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 1976              		.loc 1 1014 0
 1977 0094 2365     		str	r3, [r4, #80]
1027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 1978              		.loc 1 1027 0
 1979 0096 E368     		ldr	r3, [r4, #12]
 1980 0098 B3F5E06F 		cmp	r3, #1792
 1981 009c 16D9     		bls	.L173
1030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 1982              		.loc 1 1030 0
 1983 009e 2268     		ldr	r2, [r4]
 1984 00a0 5368     		ldr	r3, [r2, #4]
 1985 00a2 23F48053 		bic	r3, r3, #4096
 1986 00a6 5360     		str	r3, [r2, #4]
 1987              	.L174:
1039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 1988              		.loc 1 1039 0
 1989 00a8 A368     		ldr	r3, [r4, #8]
 1990 00aa B3F5004F 		cmp	r3, #32768
 1991 00ae 13D0     		beq	.L200
ARM GAS  /tmp/cc8c22lT.s 			page 115


 1992              	.L175:
1045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 1993              		.loc 1 1045 0
 1994 00b0 2368     		ldr	r3, [r4]
 1995 00b2 1A68     		ldr	r2, [r3]
 1996 00b4 12F0400F 		tst	r2, #64
 1997 00b8 03D1     		bne	.L176
1048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 1998              		.loc 1 1048 0
 1999 00ba 1A68     		ldr	r2, [r3]
 2000 00bc 42F04002 		orr	r2, r2, #64
 2001 00c0 1A60     		str	r2, [r3]
 2002              	.L176:
1052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 2003              		.loc 1 1052 0
 2004 00c2 E368     		ldr	r3, [r4, #12]
 2005 00c4 B3F5E06F 		cmp	r3, #1792
 2006 00c8 16D9     		bls	.L177
 2007 00ca 35E0     		b	.L178
 2008              	.L173:
1035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 2009              		.loc 1 1035 0
 2010 00cc 2268     		ldr	r2, [r4]
 2011 00ce 5368     		ldr	r3, [r2, #4]
 2012 00d0 43F48053 		orr	r3, r3, #4096
 2013 00d4 5360     		str	r3, [r2, #4]
 2014 00d6 E7E7     		b	.L174
 2015              	.L200:
1041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 2016              		.loc 1 1041 0
 2017 00d8 2268     		ldr	r2, [r4]
 2018 00da 1368     		ldr	r3, [r2]
 2019 00dc 23F48043 		bic	r3, r3, #16384
 2020 00e0 1360     		str	r3, [r2]
 2021 00e2 E5E7     		b	.L175
 2022              	.LVL126:
 2023              	.L179:
1068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
 2024              		.loc 1 1068 0
 2025 00e4 FFF7FEFF 		bl	HAL_GetTick
 2026              	.LVL127:
 2027 00e8 801B     		subs	r0, r0, r6
 2028 00ea A842     		cmp	r0, r5
 2029 00ec 02D3     		bcc	.L181
1068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
 2030              		.loc 1 1068 0 is_stmt 0 discriminator 1
 2031 00ee B5F1FF3F 		cmp	r5, #-1
 2032 00f2 45D1     		bne	.L192
 2033              	.L181:
1068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
 2034              		.loc 1 1068 0 discriminator 3
 2035 00f4 002D     		cmp	r5, #0
 2036 00f6 45D0     		beq	.L193
 2037              	.L177:
1055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 2038              		.loc 1 1055 0 is_stmt 1
 2039 00f8 B4F84630 		ldrh	r3, [r4, #70]
ARM GAS  /tmp/cc8c22lT.s 			page 116


 2040 00fc 9BB2     		uxth	r3, r3
 2041 00fe 002B     		cmp	r3, #0
 2042 0100 30D0     		beq	.L183
1058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 2043              		.loc 1 1058 0
 2044 0102 2368     		ldr	r3, [r4]
 2045 0104 9A68     		ldr	r2, [r3, #8]
 2046 0106 12F0010F 		tst	r2, #1
 2047 010a EBD0     		beq	.L179
1061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint8_t);
 2048              		.loc 1 1061 0
 2049 010c 226C     		ldr	r2, [r4, #64]
 2050 010e 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 2051 0110 1370     		strb	r3, [r2]
1062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->RxXferCount--;
 2052              		.loc 1 1062 0
 2053 0112 236C     		ldr	r3, [r4, #64]
 2054 0114 0133     		adds	r3, r3, #1
 2055 0116 2364     		str	r3, [r4, #64]
1063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 2056              		.loc 1 1063 0
 2057 0118 B4F84630 		ldrh	r3, [r4, #70]
 2058 011c 013B     		subs	r3, r3, #1
 2059 011e 9BB2     		uxth	r3, r3
 2060 0120 A4F84630 		strh	r3, [r4, #70]	@ movhi
 2061 0124 E8E7     		b	.L177
 2062              	.L184:
1091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
 2063              		.loc 1 1091 0
 2064 0126 FFF7FEFF 		bl	HAL_GetTick
 2065              	.LVL128:
 2066 012a 801B     		subs	r0, r0, r6
 2067 012c A842     		cmp	r0, r5
 2068 012e 02D3     		bcc	.L186
1091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
 2069              		.loc 1 1091 0 is_stmt 0 discriminator 1
 2070 0130 B5F1FF3F 		cmp	r5, #-1
 2071 0134 28D1     		bne	.L194
 2072              	.L186:
1091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
 2073              		.loc 1 1091 0 discriminator 3
 2074 0136 4DB3     		cbz	r5, .L195
 2075              	.L178:
1079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 2076              		.loc 1 1079 0 is_stmt 1
 2077 0138 B4F84630 		ldrh	r3, [r4, #70]
 2078 013c 9BB2     		uxth	r3, r3
 2079 013e 8BB1     		cbz	r3, .L183
1082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 2080              		.loc 1 1082 0
 2081 0140 2368     		ldr	r3, [r4]
 2082 0142 9A68     		ldr	r2, [r3, #8]
 2083 0144 12F0010F 		tst	r2, #1
 2084 0148 EDD0     		beq	.L184
1084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint16_t);
 2085              		.loc 1 1084 0
 2086 014a DA68     		ldr	r2, [r3, #12]
ARM GAS  /tmp/cc8c22lT.s 			page 117


 2087 014c 236C     		ldr	r3, [r4, #64]
 2088 014e 1A80     		strh	r2, [r3]	@ movhi
1085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->RxXferCount--;
 2089              		.loc 1 1085 0
 2090 0150 236C     		ldr	r3, [r4, #64]
 2091 0152 0233     		adds	r3, r3, #2
 2092 0154 2364     		str	r3, [r4, #64]
1086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 2093              		.loc 1 1086 0
 2094 0156 B4F84630 		ldrh	r3, [r4, #70]
 2095 015a 013B     		subs	r3, r3, #1
 2096 015c 9BB2     		uxth	r3, r3
 2097 015e A4F84630 		strh	r3, [r4, #70]	@ movhi
 2098 0162 E9E7     		b	.L178
 2099              	.L183:
1162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 2100              		.loc 1 1162 0
 2101 0164 3246     		mov	r2, r6
 2102 0166 2946     		mov	r1, r5
 2103 0168 2046     		mov	r0, r4
 2104 016a FFF7FEFF 		bl	SPI_EndRxTransaction
 2105              	.LVL129:
 2106 016e 08B1     		cbz	r0, .L188
1164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 2107              		.loc 1 1164 0
 2108 0170 2023     		movs	r3, #32
 2109 0172 2366     		str	r3, [r4, #96]
 2110              	.L188:
1176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 2111              		.loc 1 1176 0
 2112 0174 236E     		ldr	r3, [r4, #96]
 2113 0176 5BB9     		cbnz	r3, .L196
 975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2114              		.loc 1 975 0
 2115 0178 0020     		movs	r0, #0
 2116 017a 5DE7     		b	.L172
 2117              	.LVL130:
 2118              	.L191:
 998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 2119              		.loc 1 998 0
 2120 017c 0120     		movs	r0, #1
 2121              	.LVL131:
 2122 017e 5BE7     		b	.L172
 2123              	.L192:
1070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           goto error;
 2124              		.loc 1 1070 0
 2125 0180 0320     		movs	r0, #3
 2126 0182 59E7     		b	.L172
 2127              	.L193:
 2128 0184 0320     		movs	r0, #3
 2129 0186 57E7     		b	.L172
 2130              	.L194:
1093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           goto error;
 2131              		.loc 1 1093 0
 2132 0188 0320     		movs	r0, #3
 2133 018a 55E7     		b	.L172
 2134              	.L195:
ARM GAS  /tmp/cc8c22lT.s 			page 118


 2135 018c 0320     		movs	r0, #3
 2136 018e 53E7     		b	.L172
 2137              	.L196:
1178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 2138              		.loc 1 1178 0
 2139 0190 0120     		movs	r0, #1
 2140 0192 51E7     		b	.L172
 2141              	.LVL132:
 2142              	.L189:
 985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2143              		.loc 1 985 0
 2144 0194 0220     		movs	r0, #2
 2145              	.LVL133:
 2146 0196 55E7     		b	.L171
 2147              		.cfi_endproc
 2148              	.LFE146:
 2150              		.section	.text.HAL_SPI_Transmit_IT,"ax",%progbits
 2151              		.align	1
 2152              		.global	HAL_SPI_Transmit_IT
 2153              		.syntax unified
 2154              		.thumb
 2155              		.thumb_func
 2156              		.fpu fpv5-sp-d16
 2158              	HAL_SPI_Transmit_IT:
 2159              	.LFB148:
1496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 2160              		.loc 1 1496 0
 2161              		.cfi_startproc
 2162              		@ args = 0, pretend = 0, frame = 0
 2163              		@ frame_needed = 0, uses_anonymous_args = 0
 2164              		@ link register save eliminated.
 2165              	.LVL134:
 2166 0000 0346     		mov	r3, r0
 2167              	.LVL135:
1503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2168              		.loc 1 1503 0
 2169 0002 90F85C00 		ldrb	r0, [r0, #92]	@ zero_extendqisi2
 2170              	.LVL136:
 2171 0006 0128     		cmp	r0, #1
 2172 0008 49D0     		beq	.L207
1503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2173              		.loc 1 1503 0 is_stmt 0 discriminator 2
 2174 000a 0120     		movs	r0, #1
 2175 000c 83F85C00 		strb	r0, [r3, #92]
1505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 2176              		.loc 1 1505 0 is_stmt 1 discriminator 2
 2177 0010 B2FA82F0 		clz	r0, r2
 2178 0014 4009     		lsrs	r0, r0, #5
 2179 0016 0029     		cmp	r1, #0
 2180 0018 08BF     		it	eq
 2181 001a 0120     		moveq	r0, #1
 2182 001c 0028     		cmp	r0, #0
 2183 001e 37D1     		bne	.L208
1511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 2184              		.loc 1 1511 0
 2185 0020 93F85D00 		ldrb	r0, [r3, #93]	@ zero_extendqisi2
 2186 0024 C0B2     		uxtb	r0, r0
ARM GAS  /tmp/cc8c22lT.s 			page 119


 2187 0026 0128     		cmp	r0, #1
 2188 0028 01D0     		beq	.L211
1513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 2189              		.loc 1 1513 0
 2190 002a 0220     		movs	r0, #2
 2191 002c 31E0     		b	.L203
 2192              	.L211:
1518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 2193              		.loc 1 1518 0
 2194 002e 0320     		movs	r0, #3
 2195 0030 83F85D00 		strb	r0, [r3, #93]
1519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
 2196              		.loc 1 1519 0
 2197 0034 0020     		movs	r0, #0
 2198 0036 1866     		str	r0, [r3, #96]
1520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 2199              		.loc 1 1520 0
 2200 0038 9963     		str	r1, [r3, #56]
1521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount = Size;
 2201              		.loc 1 1521 0
 2202 003a 9A87     		strh	r2, [r3, #60]	@ movhi
1522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2203              		.loc 1 1522 0
 2204 003c DA87     		strh	r2, [r3, #62]	@ movhi
1525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
 2205              		.loc 1 1525 0
 2206 003e 1864     		str	r0, [r3, #64]
1526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 2207              		.loc 1 1526 0
 2208 0040 A3F84400 		strh	r0, [r3, #68]	@ movhi
1527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxISR       = NULL;
 2209              		.loc 1 1527 0
 2210 0044 A3F84600 		strh	r0, [r3, #70]	@ movhi
1528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2211              		.loc 1 1528 0
 2212 0048 D864     		str	r0, [r3, #76]
1531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 2213              		.loc 1 1531 0
 2214 004a DA68     		ldr	r2, [r3, #12]
 2215              	.LVL137:
 2216 004c B2F5E06F 		cmp	r2, #1792
 2217 0050 15D9     		bls	.L204
1533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 2218              		.loc 1 1533 0
 2219 0052 144A     		ldr	r2, .L213
 2220 0054 1A65     		str	r2, [r3, #80]
 2221              	.L205:
1541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 2222              		.loc 1 1541 0
 2223 0056 9A68     		ldr	r2, [r3, #8]
 2224 0058 B2F5004F 		cmp	r2, #32768
 2225 005c 12D0     		beq	.L212
 2226              	.LVL138:
 2227              	.L206:
1555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2228              		.loc 1 1555 0
 2229 005e 1968     		ldr	r1, [r3]
ARM GAS  /tmp/cc8c22lT.s 			page 120


 2230 0060 4A68     		ldr	r2, [r1, #4]
 2231 0062 42F0A002 		orr	r2, r2, #160
 2232 0066 4A60     		str	r2, [r1, #4]
1559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 2233              		.loc 1 1559 0
 2234 0068 1A68     		ldr	r2, [r3]
 2235 006a 1168     		ldr	r1, [r2]
 2236 006c 11F0400F 		tst	r1, #64
 2237 0070 13D1     		bne	.L210
1562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 2238              		.loc 1 1562 0
 2239 0072 1168     		ldr	r1, [r2]
 2240 0074 41F04001 		orr	r1, r1, #64
 2241 0078 1160     		str	r1, [r2]
1497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2242              		.loc 1 1497 0
 2243 007a 0020     		movs	r0, #0
 2244 007c 09E0     		b	.L203
 2245              	.LVL139:
 2246              	.L204:
1537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 2247              		.loc 1 1537 0
 2248 007e 0A4A     		ldr	r2, .L213+4
 2249 0080 1A65     		str	r2, [r3, #80]
 2250 0082 E8E7     		b	.L205
 2251              	.L212:
1543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 2252              		.loc 1 1543 0
 2253 0084 1968     		ldr	r1, [r3]
 2254              	.LVL140:
 2255 0086 0A68     		ldr	r2, [r1]
 2256 0088 42F48042 		orr	r2, r2, #16384
 2257 008c 0A60     		str	r2, [r1]
 2258              	.LVL141:
 2259 008e E6E7     		b	.L206
 2260              	.LVL142:
 2261              	.L208:
1507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 2262              		.loc 1 1507 0
 2263 0090 0120     		movs	r0, #1
 2264              	.LVL143:
 2265              	.L203:
1566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return errorcode;
 2266              		.loc 1 1566 0
 2267 0092 0022     		movs	r2, #0
 2268 0094 83F85C20 		strb	r2, [r3, #92]
1567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 2269              		.loc 1 1567 0
 2270 0098 7047     		bx	lr
 2271              	.LVL144:
 2272              	.L210:
1497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2273              		.loc 1 1497 0
 2274 009a 0020     		movs	r0, #0
 2275 009c F9E7     		b	.L203
 2276              	.LVL145:
 2277              	.L207:
ARM GAS  /tmp/cc8c22lT.s 			page 121


1503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2278              		.loc 1 1503 0
 2279 009e 0220     		movs	r0, #2
1568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2280              		.loc 1 1568 0
 2281 00a0 7047     		bx	lr
 2282              	.L214:
 2283 00a2 00BF     		.align	2
 2284              	.L213:
 2285 00a4 00000000 		.word	SPI_TxISR_16BIT
 2286 00a8 00000000 		.word	SPI_TxISR_8BIT
 2287              		.cfi_endproc
 2288              	.LFE148:
 2290              		.section	.text.HAL_SPI_TransmitReceive_IT,"ax",%progbits
 2291              		.align	1
 2292              		.global	HAL_SPI_TransmitReceive_IT
 2293              		.syntax unified
 2294              		.thumb
 2295              		.thumb_func
 2296              		.fpu fpv5-sp-d16
 2298              	HAL_SPI_TransmitReceive_IT:
 2299              	.LFB150:
1684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t             tmp_mode;
 2300              		.loc 1 1684 0
 2301              		.cfi_startproc
 2302              		@ args = 0, pretend = 0, frame = 0
 2303              		@ frame_needed = 0, uses_anonymous_args = 0
 2304              		@ link register save eliminated.
 2305              	.LVL146:
 2306 0000 30B4     		push	{r4, r5}
 2307              	.LCFI29:
 2308              		.cfi_def_cfa_offset 8
 2309              		.cfi_offset 4, -8
 2310              		.cfi_offset 5, -4
 2311              	.LVL147:
1693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2312              		.loc 1 1693 0
 2313 0002 90F85C40 		ldrb	r4, [r0, #92]	@ zero_extendqisi2
 2314 0006 012C     		cmp	r4, #1
 2315 0008 6BD0     		beq	.L225
1693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2316              		.loc 1 1693 0 is_stmt 0 discriminator 2
 2317 000a 0124     		movs	r4, #1
 2318 000c 80F85C40 		strb	r4, [r0, #92]
1696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   tmp_mode            = hspi->Init.Mode;
 2319              		.loc 1 1696 0 is_stmt 1 discriminator 2
 2320 0010 90F85D40 		ldrb	r4, [r0, #93]	@ zero_extendqisi2
 2321 0014 E4B2     		uxtb	r4, r4
 2322              	.LVL148:
1697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2323              		.loc 1 1697 0 discriminator 2
 2324 0016 4568     		ldr	r5, [r0, #4]
 2325              	.LVL149:
1699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
 2326              		.loc 1 1699 0 discriminator 2
 2327 0018 012C     		cmp	r4, #1
 2328 001a 10D0     		beq	.L217
ARM GAS  /tmp/cc8c22lT.s 			page 122


1699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
 2329              		.loc 1 1699 0 is_stmt 0 discriminator 1
 2330 001c B5F5827F 		cmp	r5, #260
 2331 0020 06D0     		beq	.L233
1702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 2332              		.loc 1 1702 0 is_stmt 1
 2333 0022 0223     		movs	r3, #2
 2334              	.LVL150:
 2335              	.L218:
1780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return errorcode;
 2336              		.loc 1 1780 0
 2337 0024 0022     		movs	r2, #0
 2338 0026 80F85C20 		strb	r2, [r0, #92]
 2339              	.LVL151:
 2340              	.L216:
1782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2341              		.loc 1 1782 0
 2342 002a 1846     		mov	r0, r3
 2343              	.LVL152:
 2344 002c 30BC     		pop	{r4, r5}
 2345              	.LCFI30:
 2346              		.cfi_remember_state
 2347              		.cfi_restore 5
 2348              		.cfi_restore 4
 2349              		.cfi_def_cfa_offset 0
 2350 002e 7047     		bx	lr
 2351              	.LVL153:
 2352              	.L233:
 2353              	.LCFI31:
 2354              		.cfi_restore_state
1700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 2355              		.loc 1 1700 0
 2356 0030 8568     		ldr	r5, [r0, #8]
 2357              	.LVL154:
 2358 0032 002D     		cmp	r5, #0
 2359 0034 4DD1     		bne	.L227
1700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 2360              		.loc 1 1700 0 is_stmt 0 discriminator 1
 2361 0036 042C     		cmp	r4, #4
 2362 0038 01D0     		beq	.L217
1702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 2363              		.loc 1 1702 0 is_stmt 1
 2364 003a 0223     		movs	r3, #2
 2365              	.LVL155:
 2366 003c F2E7     		b	.L218
 2367              	.LVL156:
 2368              	.L217:
1706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 2369              		.loc 1 1706 0
 2370 003e B2FA82F4 		clz	r4, r2
 2371              	.LVL157:
 2372 0042 6409     		lsrs	r4, r4, #5
 2373 0044 0029     		cmp	r1, #0
 2374 0046 08BF     		it	eq
 2375 0048 0124     		moveq	r4, #1
 2376 004a 002C     		cmp	r4, #0
 2377 004c 43D1     		bne	.L229
ARM GAS  /tmp/cc8c22lT.s 			page 123


1706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 2378              		.loc 1 1706 0 is_stmt 0 discriminator 1
 2379 004e 002B     		cmp	r3, #0
 2380 0050 43D0     		beq	.L230
1713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 2381              		.loc 1 1713 0 is_stmt 1
 2382 0052 90F85D40 		ldrb	r4, [r0, #93]	@ zero_extendqisi2
 2383 0056 E4B2     		uxtb	r4, r4
 2384 0058 042C     		cmp	r4, #4
 2385 005a 02D0     		beq	.L219
1715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 2386              		.loc 1 1715 0
 2387 005c 0524     		movs	r4, #5
 2388 005e 80F85D40 		strb	r4, [r0, #93]
 2389              	.L219:
1719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 2390              		.loc 1 1719 0
 2391 0062 0024     		movs	r4, #0
 2392 0064 0466     		str	r4, [r0, #96]
1720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 2393              		.loc 1 1720 0
 2394 0066 8163     		str	r1, [r0, #56]
1721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount = Size;
 2395              		.loc 1 1721 0
 2396 0068 8387     		strh	r3, [r0, #60]	@ movhi
1722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 2397              		.loc 1 1722 0
 2398 006a C387     		strh	r3, [r0, #62]	@ movhi
1723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 2399              		.loc 1 1723 0
 2400 006c 0264     		str	r2, [r0, #64]
1724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount = Size;
 2401              		.loc 1 1724 0
 2402 006e A0F84430 		strh	r3, [r0, #68]	@ movhi
1725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2403              		.loc 1 1725 0
 2404 0072 A0F84630 		strh	r3, [r0, #70]	@ movhi
1728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 2405              		.loc 1 1728 0
 2406 0076 C268     		ldr	r2, [r0, #12]
 2407              	.LVL158:
 2408 0078 B2F5E06F 		cmp	r2, #1792
 2409 007c 1ED9     		bls	.L220
1730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->TxISR     = SPI_2linesTxISR_16BIT;
 2410              		.loc 1 1730 0
 2411 007e 1A4A     		ldr	r2, .L234
 2412 0080 C264     		str	r2, [r0, #76]
1731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 2413              		.loc 1 1731 0
 2414 0082 1A4A     		ldr	r2, .L234+4
 2415 0084 0265     		str	r2, [r0, #80]
 2416              	.L221:
1757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 2417              		.loc 1 1757 0
 2418 0086 C268     		ldr	r2, [r0, #12]
 2419 0088 B2F5E06F 		cmp	r2, #1792
 2420 008c 01D8     		bhi	.L222
ARM GAS  /tmp/cc8c22lT.s 			page 124


1757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 2421              		.loc 1 1757 0 is_stmt 0 discriminator 1
 2422 008e 012B     		cmp	r3, #1
 2423 0090 19D9     		bls	.L223
 2424              	.L222:
1760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 2425              		.loc 1 1760 0 is_stmt 1
 2426 0092 0268     		ldr	r2, [r0]
 2427 0094 5368     		ldr	r3, [r2, #4]
 2428              	.LVL159:
 2429 0096 23F48053 		bic	r3, r3, #4096
 2430 009a 5360     		str	r3, [r2, #4]
 2431              	.LVL160:
 2432              	.L224:
1769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2433              		.loc 1 1769 0
 2434 009c 0268     		ldr	r2, [r0]
 2435 009e 5368     		ldr	r3, [r2, #4]
 2436 00a0 43F0E003 		orr	r3, r3, #224
 2437 00a4 5360     		str	r3, [r2, #4]
1772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 2438              		.loc 1 1772 0
 2439 00a6 0368     		ldr	r3, [r0]
 2440 00a8 1A68     		ldr	r2, [r3]
 2441 00aa 12F0400F 		tst	r2, #64
 2442 00ae 16D1     		bne	.L231
1775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 2443              		.loc 1 1775 0
 2444 00b0 1A68     		ldr	r2, [r3]
 2445 00b2 42F04002 		orr	r2, r2, #64
 2446 00b6 1A60     		str	r2, [r3]
1687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2447              		.loc 1 1687 0
 2448 00b8 0023     		movs	r3, #0
 2449 00ba B3E7     		b	.L218
 2450              	.LVL161:
 2451              	.L220:
1735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->TxISR     = SPI_2linesTxISR_8BIT;
 2452              		.loc 1 1735 0
 2453 00bc 0C4A     		ldr	r2, .L234+8
 2454 00be C264     		str	r2, [r0, #76]
1736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 2455              		.loc 1 1736 0
 2456 00c0 0C4A     		ldr	r2, .L234+12
 2457 00c2 0265     		str	r2, [r0, #80]
 2458 00c4 DFE7     		b	.L221
 2459              	.L223:
1765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 2460              		.loc 1 1765 0
 2461 00c6 0268     		ldr	r2, [r0]
 2462 00c8 5368     		ldr	r3, [r2, #4]
 2463              	.LVL162:
 2464 00ca 43F48053 		orr	r3, r3, #4096
 2465 00ce 5360     		str	r3, [r2, #4]
 2466              	.LVL163:
 2467 00d0 E4E7     		b	.L224
 2468              	.LVL164:
ARM GAS  /tmp/cc8c22lT.s 			page 125


 2469              	.L227:
1702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 2470              		.loc 1 1702 0
 2471 00d2 0223     		movs	r3, #2
 2472              	.LVL165:
 2473 00d4 A6E7     		b	.L218
 2474              	.LVL166:
 2475              	.L229:
1708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 2476              		.loc 1 1708 0
 2477 00d6 0123     		movs	r3, #1
 2478              	.LVL167:
 2479 00d8 A4E7     		b	.L218
 2480              	.LVL168:
 2481              	.L230:
 2482 00da 0123     		movs	r3, #1
 2483              	.LVL169:
 2484 00dc A2E7     		b	.L218
 2485              	.LVL170:
 2486              	.L231:
1687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2487              		.loc 1 1687 0
 2488 00de 0023     		movs	r3, #0
 2489 00e0 A0E7     		b	.L218
 2490              	.LVL171:
 2491              	.L225:
1693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2492              		.loc 1 1693 0
 2493 00e2 0223     		movs	r3, #2
 2494              	.LVL172:
 2495 00e4 A1E7     		b	.L216
 2496              	.L235:
 2497 00e6 00BF     		.align	2
 2498              	.L234:
 2499 00e8 00000000 		.word	SPI_2linesRxISR_16BIT
 2500 00ec 00000000 		.word	SPI_2linesTxISR_16BIT
 2501 00f0 00000000 		.word	SPI_2linesRxISR_8BIT
 2502 00f4 00000000 		.word	SPI_2linesTxISR_8BIT
 2503              		.cfi_endproc
 2504              	.LFE150:
 2506              		.section	.text.HAL_SPI_Receive_IT,"ax",%progbits
 2507              		.align	1
 2508              		.global	HAL_SPI_Receive_IT
 2509              		.syntax unified
 2510              		.thumb
 2511              		.thumb_func
 2512              		.fpu fpv5-sp-d16
 2514              	HAL_SPI_Receive_IT:
 2515              	.LFB149:
1579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 2516              		.loc 1 1579 0
 2517              		.cfi_startproc
 2518              		@ args = 0, pretend = 0, frame = 0
 2519              		@ frame_needed = 0, uses_anonymous_args = 0
 2520              	.LVL173:
 2521 0000 10B5     		push	{r4, lr}
 2522              	.LCFI32:
ARM GAS  /tmp/cc8c22lT.s 			page 126


 2523              		.cfi_def_cfa_offset 8
 2524              		.cfi_offset 4, -8
 2525              		.cfi_offset 14, -4
 2526 0002 0446     		mov	r4, r0
 2527              	.LVL174:
1582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 2528              		.loc 1 1582 0
 2529 0004 8068     		ldr	r0, [r0, #8]
 2530              	.LVL175:
 2531 0006 18B9     		cbnz	r0, .L237
1582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 2532              		.loc 1 1582 0 is_stmt 0 discriminator 1
 2533 0008 6368     		ldr	r3, [r4, #4]
 2534 000a B3F5827F 		cmp	r3, #260
 2535 000e 10D0     		beq	.L248
 2536              	.L237:
1590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2537              		.loc 1 1590 0 is_stmt 1
 2538 0010 94F85C00 		ldrb	r0, [r4, #92]	@ zero_extendqisi2
 2539 0014 0128     		cmp	r0, #1
 2540 0016 5CD0     		beq	.L243
1590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2541              		.loc 1 1590 0 is_stmt 0 discriminator 2
 2542 0018 0123     		movs	r3, #1
 2543 001a 84F85C30 		strb	r3, [r4, #92]
1592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 2544              		.loc 1 1592 0 is_stmt 1 discriminator 2
 2545 001e 94F85D00 		ldrb	r0, [r4, #93]	@ zero_extendqisi2
 2546 0022 C0B2     		uxtb	r0, r0
 2547 0024 9842     		cmp	r0, r3
 2548 0026 0DD0     		beq	.L249
1594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 2549              		.loc 1 1594 0
 2550 0028 0220     		movs	r0, #2
 2551              	.LVL176:
 2552              	.L239:
1670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return errorcode;
 2553              		.loc 1 1670 0
 2554 002a 0023     		movs	r3, #0
 2555 002c 84F85C30 		strb	r3, [r4, #92]
 2556              	.LVL177:
 2557              	.L238:
1672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2558              		.loc 1 1672 0
 2559 0030 10BD     		pop	{r4, pc}
 2560              	.LVL178:
 2561              	.L248:
 2562 0032 1346     		mov	r3, r2
 2563 0034 2046     		mov	r0, r4
1584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line 
 2564              		.loc 1 1584 0
 2565 0036 0422     		movs	r2, #4
 2566              	.LVL179:
 2567 0038 84F85D20 		strb	r2, [r4, #93]
1586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 2568              		.loc 1 1586 0
 2569 003c 0A46     		mov	r2, r1
ARM GAS  /tmp/cc8c22lT.s 			page 127


 2570 003e FFF7FEFF 		bl	HAL_SPI_TransmitReceive_IT
 2571              	.LVL180:
 2572 0042 F5E7     		b	.L238
 2573              	.LVL181:
 2574              	.L249:
1598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 2575              		.loc 1 1598 0
 2576 0044 B2FA82F3 		clz	r3, r2
 2577 0048 5B09     		lsrs	r3, r3, #5
 2578 004a 0029     		cmp	r1, #0
 2579 004c 08BF     		it	eq
 2580 004e 0123     		moveq	r3, #1
 2581 0050 002B     		cmp	r3, #0
 2582 0052 3AD1     		bne	.L245
1605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 2583              		.loc 1 1605 0
 2584 0054 0423     		movs	r3, #4
 2585 0056 84F85D30 		strb	r3, [r4, #93]
1606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
 2586              		.loc 1 1606 0
 2587 005a 0023     		movs	r3, #0
 2588 005c 2366     		str	r3, [r4, #96]
1607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 2589              		.loc 1 1607 0
 2590 005e 2164     		str	r1, [r4, #64]
1608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount = Size;
 2591              		.loc 1 1608 0
 2592 0060 A4F84420 		strh	r2, [r4, #68]	@ movhi
1609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2593              		.loc 1 1609 0
 2594 0064 A4F84620 		strh	r2, [r4, #70]	@ movhi
1612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
 2595              		.loc 1 1612 0
 2596 0068 A363     		str	r3, [r4, #56]
1613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 2597              		.loc 1 1613 0
 2598 006a A387     		strh	r3, [r4, #60]	@ movhi
1614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxISR       = NULL;
 2599              		.loc 1 1614 0
 2600 006c E387     		strh	r3, [r4, #62]	@ movhi
1615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2601              		.loc 1 1615 0
 2602 006e 2365     		str	r3, [r4, #80]
1618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 2603              		.loc 1 1618 0
 2604 0070 E368     		ldr	r3, [r4, #12]
 2605 0072 B3F5E06F 		cmp	r3, #1792
 2606 0076 1AD9     		bls	.L240
1621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->RxISR = SPI_RxISR_16BIT;
 2607              		.loc 1 1621 0
 2608 0078 2268     		ldr	r2, [r4]
 2609              	.LVL182:
 2610 007a 5368     		ldr	r3, [r2, #4]
 2611 007c 23F48053 		bic	r3, r3, #4096
 2612 0080 5360     		str	r3, [r2, #4]
 2613              	.LVL183:
1622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
ARM GAS  /tmp/cc8c22lT.s 			page 128


 2614              		.loc 1 1622 0
 2615 0082 154B     		ldr	r3, .L251
 2616 0084 E364     		str	r3, [r4, #76]
 2617              	.L241:
1632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 2618              		.loc 1 1632 0
 2619 0086 A368     		ldr	r3, [r4, #8]
 2620 0088 B3F5004F 		cmp	r3, #32768
 2621 008c 17D0     		beq	.L250
 2622              	.L242:
1655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2623              		.loc 1 1655 0
 2624 008e 2268     		ldr	r2, [r4]
 2625 0090 5368     		ldr	r3, [r2, #4]
 2626 0092 43F06003 		orr	r3, r3, #96
 2627 0096 5360     		str	r3, [r2, #4]
1662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 2628              		.loc 1 1662 0
 2629 0098 2368     		ldr	r3, [r4]
 2630 009a 1A68     		ldr	r2, [r3]
 2631 009c 12F0400F 		tst	r2, #64
 2632 00a0 15D1     		bne	.L246
1665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 2633              		.loc 1 1665 0
 2634 00a2 1A68     		ldr	r2, [r3]
 2635 00a4 42F04002 		orr	r2, r2, #64
 2636 00a8 1A60     		str	r2, [r3]
1580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2637              		.loc 1 1580 0
 2638 00aa 0020     		movs	r0, #0
 2639 00ac BDE7     		b	.L239
 2640              	.LVL184:
 2641              	.L240:
1627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->RxISR = SPI_RxISR_8BIT;
 2642              		.loc 1 1627 0
 2643 00ae 2268     		ldr	r2, [r4]
 2644              	.LVL185:
 2645 00b0 5368     		ldr	r3, [r2, #4]
 2646 00b2 43F48053 		orr	r3, r3, #4096
 2647 00b6 5360     		str	r3, [r2, #4]
 2648              	.LVL186:
1628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 2649              		.loc 1 1628 0
 2650 00b8 084B     		ldr	r3, .L251+4
 2651 00ba E364     		str	r3, [r4, #76]
 2652 00bc E3E7     		b	.L241
 2653              	.L250:
1634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 2654              		.loc 1 1634 0
 2655 00be 2268     		ldr	r2, [r4]
 2656 00c0 1368     		ldr	r3, [r2]
 2657 00c2 23F48043 		bic	r3, r3, #16384
 2658 00c6 1360     		str	r3, [r2]
 2659 00c8 E1E7     		b	.L242
 2660              	.LVL187:
 2661              	.L245:
1600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
ARM GAS  /tmp/cc8c22lT.s 			page 129


 2662              		.loc 1 1600 0
 2663 00ca 0120     		movs	r0, #1
 2664 00cc ADE7     		b	.L239
 2665              	.LVL188:
 2666              	.L246:
1580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2667              		.loc 1 1580 0
 2668 00ce 0020     		movs	r0, #0
 2669 00d0 ABE7     		b	.L239
 2670              	.LVL189:
 2671              	.L243:
1590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2672              		.loc 1 1590 0
 2673 00d2 0220     		movs	r0, #2
 2674 00d4 ACE7     		b	.L238
 2675              	.L252:
 2676 00d6 00BF     		.align	2
 2677              	.L251:
 2678 00d8 00000000 		.word	SPI_RxISR_16BIT
 2679 00dc 00000000 		.word	SPI_RxISR_8BIT
 2680              		.cfi_endproc
 2681              	.LFE149:
 2683              		.section	.text.HAL_SPI_Transmit_DMA,"ax",%progbits
 2684              		.align	1
 2685              		.global	HAL_SPI_Transmit_DMA
 2686              		.syntax unified
 2687              		.thumb
 2688              		.thumb_func
 2689              		.fpu fpv5-sp-d16
 2691              	HAL_SPI_Transmit_DMA:
 2692              	.LFB151:
1793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 2693              		.loc 1 1793 0
 2694              		.cfi_startproc
 2695              		@ args = 0, pretend = 0, frame = 0
 2696              		@ frame_needed = 0, uses_anonymous_args = 0
 2697              	.LVL190:
1803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2698              		.loc 1 1803 0
 2699 0000 90F85C30 		ldrb	r3, [r0, #92]	@ zero_extendqisi2
 2700 0004 012B     		cmp	r3, #1
 2701 0006 00F08980 		beq	.L261
1793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 2702              		.loc 1 1793 0 discriminator 2
 2703 000a 10B5     		push	{r4, lr}
 2704              	.LCFI33:
 2705              		.cfi_def_cfa_offset 8
 2706              		.cfi_offset 4, -8
 2707              		.cfi_offset 14, -4
 2708 000c 0446     		mov	r4, r0
1803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2709              		.loc 1 1803 0 discriminator 2
 2710 000e 0123     		movs	r3, #1
 2711 0010 80F85C30 		strb	r3, [r0, #92]
1805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 2712              		.loc 1 1805 0 discriminator 2
 2713 0014 90F85D30 		ldrb	r3, [r0, #93]	@ zero_extendqisi2
ARM GAS  /tmp/cc8c22lT.s 			page 130


 2714 0018 DBB2     		uxtb	r3, r3
 2715 001a 012B     		cmp	r3, #1
 2716 001c 05D0     		beq	.L268
1807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 2717              		.loc 1 1807 0
 2718 001e 0223     		movs	r3, #2
 2719              	.LVL191:
 2720              	.L255:
1900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return errorcode;
 2721              		.loc 1 1900 0
 2722 0020 0022     		movs	r2, #0
 2723 0022 84F85C20 		strb	r2, [r4, #92]
1902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2724              		.loc 1 1902 0
 2725 0026 1846     		mov	r0, r3
 2726 0028 10BD     		pop	{r4, pc}
 2727              	.LVL192:
 2728              	.L268:
1811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 2729              		.loc 1 1811 0
 2730 002a B2FA82F3 		clz	r3, r2
 2731 002e 5B09     		lsrs	r3, r3, #5
 2732 0030 0029     		cmp	r1, #0
 2733 0032 08BF     		it	eq
 2734 0034 0123     		moveq	r3, #1
 2735 0036 002B     		cmp	r3, #0
 2736 0038 6ED1     		bne	.L263
1818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 2737              		.loc 1 1818 0
 2738 003a 0323     		movs	r3, #3
 2739 003c 80F85D30 		strb	r3, [r0, #93]
1819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
 2740              		.loc 1 1819 0
 2741 0040 0023     		movs	r3, #0
 2742 0042 0366     		str	r3, [r0, #96]
1820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 2743              		.loc 1 1820 0
 2744 0044 8163     		str	r1, [r0, #56]
1821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount = Size;
 2745              		.loc 1 1821 0
 2746 0046 8287     		strh	r2, [r0, #60]	@ movhi
1822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2747              		.loc 1 1822 0
 2748 0048 C287     		strh	r2, [r0, #62]	@ movhi
1825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxISR       = NULL;
 2749              		.loc 1 1825 0
 2750 004a 0364     		str	r3, [r0, #64]
1826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxISR       = NULL;
 2751              		.loc 1 1826 0
 2752 004c 0365     		str	r3, [r0, #80]
1827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
 2753              		.loc 1 1827 0
 2754 004e C364     		str	r3, [r0, #76]
1828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 2755              		.loc 1 1828 0
 2756 0050 A0F84430 		strh	r3, [r0, #68]	@ movhi
1829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
ARM GAS  /tmp/cc8c22lT.s 			page 131


 2757              		.loc 1 1829 0
 2758 0054 A0F84630 		strh	r3, [r0, #70]	@ movhi
1832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 2759              		.loc 1 1832 0
 2760 0058 8368     		ldr	r3, [r0, #8]
 2761 005a B3F5004F 		cmp	r3, #32768
 2762 005e 2AD0     		beq	.L269
 2763              	.LVL193:
 2764              	.L256:
1846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2765              		.loc 1 1846 0
 2766 0060 636D     		ldr	r3, [r4, #84]
 2767 0062 304A     		ldr	r2, .L271
 2768 0064 1A64     		str	r2, [r3, #64]
1849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2769              		.loc 1 1849 0
 2770 0066 636D     		ldr	r3, [r4, #84]
 2771 0068 2F4A     		ldr	r2, .L271+4
 2772 006a DA63     		str	r2, [r3, #60]
1852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2773              		.loc 1 1852 0
 2774 006c 636D     		ldr	r3, [r4, #84]
 2775 006e 2F4A     		ldr	r2, .L271+8
 2776 0070 DA64     		str	r2, [r3, #76]
1855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2777              		.loc 1 1855 0
 2778 0072 636D     		ldr	r3, [r4, #84]
 2779 0074 0022     		movs	r2, #0
 2780 0076 1A65     		str	r2, [r3, #80]
1857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Packing mode is enabled only if the DMA setting is HALWORD */
 2781              		.loc 1 1857 0
 2782 0078 2268     		ldr	r2, [r4]
 2783 007a 5368     		ldr	r3, [r2, #4]
 2784 007c 23F48043 		bic	r3, r3, #16384
 2785 0080 5360     		str	r3, [r2, #4]
1859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 2786              		.loc 1 1859 0
 2787 0082 E368     		ldr	r3, [r4, #12]
 2788 0084 B3F5E06F 		cmp	r3, #1792
 2789 0088 04D8     		bhi	.L257
1859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 2790              		.loc 1 1859 0 is_stmt 0 discriminator 1
 2791 008a 636D     		ldr	r3, [r4, #84]
 2792 008c 9B69     		ldr	r3, [r3, #24]
 2793 008e B3F5005F 		cmp	r3, #8192
 2794 0092 16D0     		beq	.L270
 2795              	.L257:
1875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 2796              		.loc 1 1875 0 is_stmt 1
 2797 0094 2268     		ldr	r2, [r4]
 2798 0096 E38F     		ldrh	r3, [r4, #62]
 2799 0098 0C32     		adds	r2, r2, #12
 2800 009a A16B     		ldr	r1, [r4, #56]
 2801              	.LVL194:
 2802 009c 606D     		ldr	r0, [r4, #84]
 2803              	.LVL195:
 2804 009e FFF7FEFF 		bl	HAL_DMA_Start_IT
ARM GAS  /tmp/cc8c22lT.s 			page 132


 2805              	.LVL196:
 2806 00a2 0346     		mov	r3, r0
 2807 00a4 20B3     		cbz	r0, .L259
1878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_ERROR;
 2808              		.loc 1 1878 0
 2809 00a6 236E     		ldr	r3, [r4, #96]
 2810 00a8 43F01003 		orr	r3, r3, #16
 2811 00ac 2366     		str	r3, [r4, #96]
 2812              	.LVL197:
1881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 2813              		.loc 1 1881 0
 2814 00ae 0123     		movs	r3, #1
 2815 00b0 84F85D30 		strb	r3, [r4, #93]
1882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 2816              		.loc 1 1882 0
 2817 00b4 B4E7     		b	.L255
 2818              	.LVL198:
 2819              	.L269:
1834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 2820              		.loc 1 1834 0
 2821 00b6 0268     		ldr	r2, [r0]
 2822              	.LVL199:
 2823 00b8 1368     		ldr	r3, [r2]
 2824 00ba 43F48043 		orr	r3, r3, #16384
 2825 00be 1360     		str	r3, [r2]
 2826              	.LVL200:
 2827 00c0 CEE7     		b	.L256
 2828              	.L270:
1862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 2829              		.loc 1 1862 0
 2830 00c2 E38F     		ldrh	r3, [r4, #62]
 2831 00c4 13F0010F 		tst	r3, #1
 2832 00c8 08D1     		bne	.L258
1864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->TxXferCount = (hspi->TxXferCount >> 1U);
 2833              		.loc 1 1864 0
 2834 00ca 2268     		ldr	r2, [r4]
 2835 00cc 5368     		ldr	r3, [r2, #4]
 2836 00ce 23F48043 		bic	r3, r3, #16384
 2837 00d2 5360     		str	r3, [r2, #4]
1865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 2838              		.loc 1 1865 0
 2839 00d4 E38F     		ldrh	r3, [r4, #62]
 2840 00d6 5B08     		lsrs	r3, r3, #1
 2841 00d8 E387     		strh	r3, [r4, #62]	@ movhi
 2842 00da DBE7     		b	.L257
 2843              	.L258:
1869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->TxXferCount = (hspi->TxXferCount >> 1U) + 1U;
 2844              		.loc 1 1869 0
 2845 00dc 2268     		ldr	r2, [r4]
 2846 00de 5368     		ldr	r3, [r2, #4]
 2847 00e0 43F48043 		orr	r3, r3, #16384
 2848 00e4 5360     		str	r3, [r2, #4]
1870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 2849              		.loc 1 1870 0
 2850 00e6 E38F     		ldrh	r3, [r4, #62]
 2851 00e8 5B08     		lsrs	r3, r3, #1
 2852 00ea 0133     		adds	r3, r3, #1
ARM GAS  /tmp/cc8c22lT.s 			page 133


 2853 00ec E387     		strh	r3, [r4, #62]	@ movhi
 2854 00ee D1E7     		b	.L257
 2855              	.LVL201:
 2856              	.L259:
1886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 2857              		.loc 1 1886 0
 2858 00f0 2268     		ldr	r2, [r4]
 2859 00f2 1168     		ldr	r1, [r2]
 2860 00f4 11F0400F 		tst	r1, #64
 2861 00f8 03D1     		bne	.L260
1889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 2862              		.loc 1 1889 0
 2863 00fa 1168     		ldr	r1, [r2]
 2864 00fc 41F04001 		orr	r1, r1, #64
 2865 0100 1160     		str	r1, [r2]
 2866              	.L260:
1893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2867              		.loc 1 1893 0
 2868 0102 2168     		ldr	r1, [r4]
 2869 0104 4A68     		ldr	r2, [r1, #4]
 2870 0106 42F02002 		orr	r2, r2, #32
 2871 010a 4A60     		str	r2, [r1, #4]
1896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2872              		.loc 1 1896 0
 2873 010c 2168     		ldr	r1, [r4]
 2874 010e 4A68     		ldr	r2, [r1, #4]
 2875 0110 42F00202 		orr	r2, r2, #2
 2876 0114 4A60     		str	r2, [r1, #4]
 2877 0116 83E7     		b	.L255
 2878              	.LVL202:
 2879              	.L263:
1813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 2880              		.loc 1 1813 0
 2881 0118 0123     		movs	r3, #1
 2882 011a 81E7     		b	.L255
 2883              	.L261:
 2884              	.LCFI34:
 2885              		.cfi_def_cfa_offset 0
 2886              		.cfi_restore 4
 2887              		.cfi_restore 14
1803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2888              		.loc 1 1803 0
 2889 011c 0223     		movs	r3, #2
1902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2890              		.loc 1 1902 0
 2891 011e 1846     		mov	r0, r3
 2892              	.LVL203:
 2893 0120 7047     		bx	lr
 2894              	.L272:
 2895 0122 00BF     		.align	2
 2896              	.L271:
 2897 0124 00000000 		.word	SPI_DMAHalfTransmitCplt
 2898 0128 00000000 		.word	SPI_DMATransmitCplt
 2899 012c 00000000 		.word	SPI_DMAError
 2900              		.cfi_endproc
 2901              	.LFE151:
 2903              		.section	.text.HAL_SPI_TransmitReceive_DMA,"ax",%progbits
ARM GAS  /tmp/cc8c22lT.s 			page 134


 2904              		.align	1
 2905              		.global	HAL_SPI_TransmitReceive_DMA
 2906              		.syntax unified
 2907              		.thumb
 2908              		.thumb_func
 2909              		.fpu fpv5-sp-d16
 2911              	HAL_SPI_TransmitReceive_DMA:
 2912              	.LFB153:
2058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t             tmp_mode;
 2913              		.loc 1 2058 0
 2914              		.cfi_startproc
 2915              		@ args = 0, pretend = 0, frame = 0
 2916              		@ frame_needed = 0, uses_anonymous_args = 0
 2917              	.LVL204:
 2918 0000 38B5     		push	{r3, r4, r5, lr}
 2919              	.LCFI35:
 2920              		.cfi_def_cfa_offset 16
 2921              		.cfi_offset 3, -16
 2922              		.cfi_offset 4, -12
 2923              		.cfi_offset 5, -8
 2924              		.cfi_offset 14, -4
 2925              	.LVL205:
2071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2926              		.loc 1 2071 0
 2927 0002 90F85C40 		ldrb	r4, [r0, #92]	@ zero_extendqisi2
 2928 0006 012C     		cmp	r4, #1
 2929 0008 00F0F380 		beq	.L288
 2930 000c 0446     		mov	r4, r0
2071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2931              		.loc 1 2071 0 is_stmt 0 discriminator 2
 2932 000e 0120     		movs	r0, #1
 2933              	.LVL206:
 2934 0010 84F85C00 		strb	r0, [r4, #92]
2074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   tmp_mode            = hspi->Init.Mode;
 2935              		.loc 1 2074 0 is_stmt 1 discriminator 2
 2936 0014 94F85D00 		ldrb	r0, [r4, #93]	@ zero_extendqisi2
 2937 0018 C0B2     		uxtb	r0, r0
 2938              	.LVL207:
2075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2939              		.loc 1 2075 0 discriminator 2
 2940 001a 6568     		ldr	r5, [r4, #4]
 2941              	.LVL208:
2077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
 2942              		.loc 1 2077 0 discriminator 2
 2943 001c 0128     		cmp	r0, #1
 2944 001e 10D0     		beq	.L275
2077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
 2945              		.loc 1 2077 0 is_stmt 0 discriminator 1
 2946 0020 B5F5827F 		cmp	r5, #260
 2947 0024 05D0     		beq	.L295
2080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 2948              		.loc 1 2080 0 is_stmt 1
 2949 0026 0223     		movs	r3, #2
 2950              	.LVL209:
 2951              	.L276:
2229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return errorcode;
 2952              		.loc 1 2229 0
ARM GAS  /tmp/cc8c22lT.s 			page 135


 2953 0028 0022     		movs	r2, #0
 2954 002a 84F85C20 		strb	r2, [r4, #92]
 2955              	.LVL210:
 2956              	.L274:
2231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2957              		.loc 1 2231 0
 2958 002e 1846     		mov	r0, r3
 2959 0030 38BD     		pop	{r3, r4, r5, pc}
 2960              	.LVL211:
 2961              	.L295:
2078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 2962              		.loc 1 2078 0
 2963 0032 A568     		ldr	r5, [r4, #8]
 2964              	.LVL212:
 2965 0034 002D     		cmp	r5, #0
 2966 0036 40F0D680 		bne	.L290
2078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 2967              		.loc 1 2078 0 is_stmt 0 discriminator 1
 2968 003a 0428     		cmp	r0, #4
 2969 003c 01D0     		beq	.L275
2080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 2970              		.loc 1 2080 0 is_stmt 1
 2971 003e 0223     		movs	r3, #2
 2972              	.LVL213:
 2973 0040 F2E7     		b	.L276
 2974              	.LVL214:
 2975              	.L275:
2084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 2976              		.loc 1 2084 0
 2977 0042 B2FA82F0 		clz	r0, r2
 2978              	.LVL215:
 2979 0046 4009     		lsrs	r0, r0, #5
 2980 0048 0029     		cmp	r1, #0
 2981 004a 08BF     		it	eq
 2982 004c 0120     		moveq	r0, #1
 2983 004e 0028     		cmp	r0, #0
 2984 0050 40F0CB80 		bne	.L292
2084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 2985              		.loc 1 2084 0 is_stmt 0 discriminator 1
 2986 0054 002B     		cmp	r3, #0
 2987 0056 00F0CA80 		beq	.L293
2091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 2988              		.loc 1 2091 0 is_stmt 1
 2989 005a 94F85D00 		ldrb	r0, [r4, #93]	@ zero_extendqisi2
 2990 005e C0B2     		uxtb	r0, r0
 2991 0060 0428     		cmp	r0, #4
 2992 0062 02D0     		beq	.L277
2093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 2993              		.loc 1 2093 0
 2994 0064 0520     		movs	r0, #5
 2995 0066 84F85D00 		strb	r0, [r4, #93]
 2996              	.L277:
2097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 2997              		.loc 1 2097 0
 2998 006a 0020     		movs	r0, #0
 2999 006c 2066     		str	r0, [r4, #96]
2098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferSize  = Size;
ARM GAS  /tmp/cc8c22lT.s 			page 136


 3000              		.loc 1 2098 0
 3001 006e A163     		str	r1, [r4, #56]
2099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount = Size;
 3002              		.loc 1 2099 0
 3003 0070 A387     		strh	r3, [r4, #60]	@ movhi
2100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 3004              		.loc 1 2100 0
 3005 0072 E387     		strh	r3, [r4, #62]	@ movhi
2101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 3006              		.loc 1 2101 0
 3007 0074 2264     		str	r2, [r4, #64]
2102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount = Size;
 3008              		.loc 1 2102 0
 3009 0076 A4F84430 		strh	r3, [r4, #68]	@ movhi
2103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3010              		.loc 1 2103 0
 3011 007a A4F84630 		strh	r3, [r4, #70]	@ movhi
2106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxISR       = NULL;
 3012              		.loc 1 2106 0
 3013 007e E064     		str	r0, [r4, #76]
2107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3014              		.loc 1 2107 0
 3015 0080 2065     		str	r0, [r4, #80]
2118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3016              		.loc 1 2118 0
 3017 0082 2268     		ldr	r2, [r4]
 3018              	.LVL216:
 3019 0084 5368     		ldr	r3, [r2, #4]
 3020              	.LVL217:
 3021 0086 23F4C043 		bic	r3, r3, #24576
 3022 008a 5360     		str	r3, [r2, #4]
 3023              	.LVL218:
2121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 3024              		.loc 1 2121 0
 3025 008c E368     		ldr	r3, [r4, #12]
 3026 008e B3F5E06F 		cmp	r3, #1792
 3027 0092 27D9     		bls	.L278
2124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 3028              		.loc 1 2124 0
 3029 0094 2268     		ldr	r2, [r4]
 3030 0096 5368     		ldr	r3, [r2, #4]
 3031 0098 23F48053 		bic	r3, r3, #4096
 3032 009c 5360     		str	r3, [r2, #4]
 3033              	.L279:
2164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 3034              		.loc 1 2164 0
 3035 009e 94F85D30 		ldrb	r3, [r4, #93]	@ zero_extendqisi2
 3036 00a2 DBB2     		uxtb	r3, r3
 3037 00a4 042B     		cmp	r3, #4
 3038 00a6 64D0     		beq	.L296
2173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->hdmarx->XferCpltCallback     = SPI_DMATransmitReceiveCplt;
 3039              		.loc 1 2173 0
 3040 00a8 A36D     		ldr	r3, [r4, #88]
 3041 00aa 534A     		ldr	r2, .L298
 3042 00ac 1A64     		str	r2, [r3, #64]
2174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 3043              		.loc 1 2174 0
ARM GAS  /tmp/cc8c22lT.s 			page 137


 3044 00ae A36D     		ldr	r3, [r4, #88]
 3045 00b0 524A     		ldr	r2, .L298+4
 3046 00b2 DA63     		str	r2, [r3, #60]
 3047              	.L284:
2178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3048              		.loc 1 2178 0
 3049 00b4 A36D     		ldr	r3, [r4, #88]
 3050 00b6 524A     		ldr	r2, .L298+8
 3051 00b8 DA64     		str	r2, [r3, #76]
2181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3052              		.loc 1 2181 0
 3053 00ba A36D     		ldr	r3, [r4, #88]
 3054 00bc 0022     		movs	r2, #0
 3055 00be 1A65     		str	r2, [r3, #80]
2184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 3056              		.loc 1 2184 0
 3057 00c0 2168     		ldr	r1, [r4]
 3058              	.LVL219:
 3059 00c2 B4F84630 		ldrh	r3, [r4, #70]
 3060 00c6 226C     		ldr	r2, [r4, #64]
 3061 00c8 0C31     		adds	r1, r1, #12
 3062 00ca A06D     		ldr	r0, [r4, #88]
 3063 00cc FFF7FEFF 		bl	HAL_DMA_Start_IT
 3064              	.LVL220:
 3065 00d0 0028     		cmp	r0, #0
 3066 00d2 55D0     		beq	.L285
2187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_ERROR;
 3067              		.loc 1 2187 0
 3068 00d4 236E     		ldr	r3, [r4, #96]
 3069 00d6 43F01003 		orr	r3, r3, #16
 3070 00da 2366     		str	r3, [r4, #96]
 3071              	.LVL221:
2190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 3072              		.loc 1 2190 0
 3073 00dc 0123     		movs	r3, #1
 3074 00de 84F85D30 		strb	r3, [r4, #93]
2191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 3075              		.loc 1 2191 0
 3076 00e2 A1E7     		b	.L276
 3077              	.LVL222:
 3078              	.L278:
2129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3079              		.loc 1 2129 0
 3080 00e4 2268     		ldr	r2, [r4]
 3081 00e6 5368     		ldr	r3, [r2, #4]
 3082 00e8 43F48053 		orr	r3, r3, #4096
 3083 00ec 5360     		str	r3, [r2, #4]
2131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 3084              		.loc 1 2131 0
 3085 00ee 636D     		ldr	r3, [r4, #84]
 3086 00f0 9B69     		ldr	r3, [r3, #24]
 3087 00f2 B3F5005F 		cmp	r3, #8192
 3088 00f6 19D0     		beq	.L297
 3089              	.L280:
2145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 3090              		.loc 1 2145 0
 3091 00f8 A36D     		ldr	r3, [r4, #88]
ARM GAS  /tmp/cc8c22lT.s 			page 138


 3092 00fa 9B69     		ldr	r3, [r3, #24]
 3093 00fc B3F5005F 		cmp	r3, #8192
 3094 0100 CDD1     		bne	.L279
2148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3095              		.loc 1 2148 0
 3096 0102 2268     		ldr	r2, [r4]
 3097 0104 5368     		ldr	r3, [r2, #4]
 3098 0106 23F48053 		bic	r3, r3, #4096
 3099 010a 5360     		str	r3, [r2, #4]
2150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 3100              		.loc 1 2150 0
 3101 010c B4F84630 		ldrh	r3, [r4, #70]
 3102 0110 13F0010F 		tst	r3, #1
 3103 0114 21D1     		bne	.L282
2152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->RxXferCount = hspi->RxXferCount >> 1U;
 3104              		.loc 1 2152 0
 3105 0116 2268     		ldr	r2, [r4]
 3106 0118 5368     		ldr	r3, [r2, #4]
 3107 011a 23F40053 		bic	r3, r3, #8192
 3108 011e 5360     		str	r3, [r2, #4]
2153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 3109              		.loc 1 2153 0
 3110 0120 B4F84630 		ldrh	r3, [r4, #70]
 3111 0124 5B08     		lsrs	r3, r3, #1
 3112 0126 A4F84630 		strh	r3, [r4, #70]	@ movhi
 3113 012a B8E7     		b	.L279
 3114              	.L297:
2133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 3115              		.loc 1 2133 0
 3116 012c A38F     		ldrh	r3, [r4, #60]
 3117 012e 13F0010F 		tst	r3, #1
 3118 0132 08D1     		bne	.L281
2135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->TxXferCount = hspi->TxXferCount >> 1U;
 3119              		.loc 1 2135 0
 3120 0134 2268     		ldr	r2, [r4]
 3121 0136 5368     		ldr	r3, [r2, #4]
 3122 0138 23F48043 		bic	r3, r3, #16384
 3123 013c 5360     		str	r3, [r2, #4]
2136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 3124              		.loc 1 2136 0
 3125 013e E38F     		ldrh	r3, [r4, #62]
 3126 0140 5B08     		lsrs	r3, r3, #1
 3127 0142 E387     		strh	r3, [r4, #62]	@ movhi
 3128 0144 D8E7     		b	.L280
 3129              	.L281:
2140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->TxXferCount = (hspi->TxXferCount >> 1U) + 1U;
 3130              		.loc 1 2140 0
 3131 0146 2268     		ldr	r2, [r4]
 3132 0148 5368     		ldr	r3, [r2, #4]
 3133 014a 43F48043 		orr	r3, r3, #16384
 3134 014e 5360     		str	r3, [r2, #4]
2141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 3135              		.loc 1 2141 0
 3136 0150 E38F     		ldrh	r3, [r4, #62]
 3137 0152 5B08     		lsrs	r3, r3, #1
 3138 0154 0133     		adds	r3, r3, #1
 3139 0156 E387     		strh	r3, [r4, #62]	@ movhi
ARM GAS  /tmp/cc8c22lT.s 			page 139


 3140 0158 CEE7     		b	.L280
 3141              	.L282:
2157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->RxXferCount = (hspi->RxXferCount >> 1U) + 1U;
 3142              		.loc 1 2157 0
 3143 015a 2268     		ldr	r2, [r4]
 3144 015c 5368     		ldr	r3, [r2, #4]
 3145 015e 43F40053 		orr	r3, r3, #8192
 3146 0162 5360     		str	r3, [r2, #4]
2158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 3147              		.loc 1 2158 0
 3148 0164 B4F84630 		ldrh	r3, [r4, #70]
 3149 0168 5B08     		lsrs	r3, r3, #1
 3150 016a 0133     		adds	r3, r3, #1
 3151 016c A4F84630 		strh	r3, [r4, #70]	@ movhi
 3152 0170 95E7     		b	.L279
 3153              	.L296:
2167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->hdmarx->XferCpltCallback     = SPI_DMAReceiveCplt;
 3154              		.loc 1 2167 0
 3155 0172 A36D     		ldr	r3, [r4, #88]
 3156 0174 234A     		ldr	r2, .L298+12
 3157 0176 1A64     		str	r2, [r3, #64]
2168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 3158              		.loc 1 2168 0
 3159 0178 A36D     		ldr	r3, [r4, #88]
 3160 017a 234A     		ldr	r2, .L298+16
 3161 017c DA63     		str	r2, [r3, #60]
 3162 017e 99E7     		b	.L284
 3163              	.LVL223:
 3164              	.L285:
2195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3165              		.loc 1 2195 0
 3166 0180 2268     		ldr	r2, [r4]
 3167 0182 5368     		ldr	r3, [r2, #4]
 3168 0184 43F00103 		orr	r3, r3, #1
 3169 0188 5360     		str	r3, [r2, #4]
2199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->hdmatx->XferCpltCallback     = NULL;
 3170              		.loc 1 2199 0
 3171 018a 626D     		ldr	r2, [r4, #84]
 3172 018c 0023     		movs	r3, #0
 3173 018e 1364     		str	r3, [r2, #64]
2200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->hdmatx->XferErrorCallback    = NULL;
 3174              		.loc 1 2200 0
 3175 0190 626D     		ldr	r2, [r4, #84]
 3176 0192 D363     		str	r3, [r2, #60]
2201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->hdmatx->XferAbortCallback    = NULL;
 3177              		.loc 1 2201 0
 3178 0194 626D     		ldr	r2, [r4, #84]
 3179 0196 D364     		str	r3, [r2, #76]
2202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3180              		.loc 1 2202 0
 3181 0198 626D     		ldr	r2, [r4, #84]
 3182 019a 1365     		str	r3, [r2, #80]
2205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 3183              		.loc 1 2205 0
 3184 019c 2268     		ldr	r2, [r4]
 3185 019e E38F     		ldrh	r3, [r4, #62]
 3186 01a0 0C32     		adds	r2, r2, #12
ARM GAS  /tmp/cc8c22lT.s 			page 140


 3187 01a2 A16B     		ldr	r1, [r4, #56]
 3188 01a4 606D     		ldr	r0, [r4, #84]
 3189 01a6 FFF7FEFF 		bl	HAL_DMA_Start_IT
 3190              	.LVL224:
 3191 01aa 0346     		mov	r3, r0
 3192 01ac 38B1     		cbz	r0, .L286
2208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_ERROR;
 3193              		.loc 1 2208 0
 3194 01ae 236E     		ldr	r3, [r4, #96]
 3195 01b0 43F01003 		orr	r3, r3, #16
 3196 01b4 2366     		str	r3, [r4, #96]
 3197              	.LVL225:
2211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 3198              		.loc 1 2211 0
 3199 01b6 0123     		movs	r3, #1
 3200 01b8 84F85D30 		strb	r3, [r4, #93]
2212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 3201              		.loc 1 2212 0
 3202 01bc 34E7     		b	.L276
 3203              	.LVL226:
 3204              	.L286:
2216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 3205              		.loc 1 2216 0
 3206 01be 2268     		ldr	r2, [r4]
 3207 01c0 1168     		ldr	r1, [r2]
 3208 01c2 11F0400F 		tst	r1, #64
 3209 01c6 03D1     		bne	.L287
2219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 3210              		.loc 1 2219 0
 3211 01c8 1168     		ldr	r1, [r2]
 3212 01ca 41F04001 		orr	r1, r1, #64
 3213 01ce 1160     		str	r1, [r2]
 3214              	.L287:
2222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3215              		.loc 1 2222 0
 3216 01d0 2168     		ldr	r1, [r4]
 3217 01d2 4A68     		ldr	r2, [r1, #4]
 3218 01d4 42F02002 		orr	r2, r2, #32
 3219 01d8 4A60     		str	r2, [r1, #4]
2225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3220              		.loc 1 2225 0
 3221 01da 2168     		ldr	r1, [r4]
 3222 01dc 4A68     		ldr	r2, [r1, #4]
 3223 01de 42F00202 		orr	r2, r2, #2
 3224 01e2 4A60     		str	r2, [r1, #4]
 3225 01e4 20E7     		b	.L276
 3226              	.LVL227:
 3227              	.L290:
2080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 3228              		.loc 1 2080 0
 3229 01e6 0223     		movs	r3, #2
 3230              	.LVL228:
 3231 01e8 1EE7     		b	.L276
 3232              	.LVL229:
 3233              	.L292:
2086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 3234              		.loc 1 2086 0
ARM GAS  /tmp/cc8c22lT.s 			page 141


 3235 01ea 0123     		movs	r3, #1
 3236              	.LVL230:
 3237 01ec 1CE7     		b	.L276
 3238              	.LVL231:
 3239              	.L293:
 3240 01ee 0123     		movs	r3, #1
 3241              	.LVL232:
 3242 01f0 1AE7     		b	.L276
 3243              	.LVL233:
 3244              	.L288:
2071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3245              		.loc 1 2071 0
 3246 01f2 0223     		movs	r3, #2
 3247              	.LVL234:
 3248 01f4 1BE7     		b	.L274
 3249              	.L299:
 3250 01f6 00BF     		.align	2
 3251              	.L298:
 3252 01f8 00000000 		.word	SPI_DMAHalfTransmitReceiveCplt
 3253 01fc 00000000 		.word	SPI_DMATransmitReceiveCplt
 3254 0200 00000000 		.word	SPI_DMAError
 3255 0204 00000000 		.word	SPI_DMAHalfReceiveCplt
 3256 0208 00000000 		.word	SPI_DMAReceiveCplt
 3257              		.cfi_endproc
 3258              	.LFE153:
 3260              		.section	.text.HAL_SPI_Receive_DMA,"ax",%progbits
 3261              		.align	1
 3262              		.global	HAL_SPI_Receive_DMA
 3263              		.syntax unified
 3264              		.thumb
 3265              		.thumb_func
 3266              		.fpu fpv5-sp-d16
 3268              	HAL_SPI_Receive_DMA:
 3269              	.LFB152:
1915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 3270              		.loc 1 1915 0
 3271              		.cfi_startproc
 3272              		@ args = 0, pretend = 0, frame = 0
 3273              		@ frame_needed = 0, uses_anonymous_args = 0
 3274              	.LVL235:
 3275 0000 38B5     		push	{r3, r4, r5, lr}
 3276              	.LCFI36:
 3277              		.cfi_def_cfa_offset 16
 3278              		.cfi_offset 3, -16
 3279              		.cfi_offset 4, -12
 3280              		.cfi_offset 5, -8
 3281              		.cfi_offset 14, -4
 3282 0002 0446     		mov	r4, r0
 3283              	.LVL236:
1921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 3284              		.loc 1 1921 0
 3285 0004 8568     		ldr	r5, [r0, #8]
 3286 0006 1DB9     		cbnz	r5, .L301
1921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 3287              		.loc 1 1921 0 is_stmt 0 discriminator 1
 3288 0008 4368     		ldr	r3, [r0, #4]
 3289 000a B3F5827F 		cmp	r3, #260
ARM GAS  /tmp/cc8c22lT.s 			page 142


 3290 000e 12D0     		beq	.L314
 3291              	.L301:
1933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3292              		.loc 1 1933 0 is_stmt 1
 3293 0010 94F85C00 		ldrb	r0, [r4, #92]	@ zero_extendqisi2
 3294              	.LVL237:
 3295 0014 0128     		cmp	r0, #1
 3296 0016 00F0A580 		beq	.L310
1933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3297              		.loc 1 1933 0 is_stmt 0 discriminator 2
 3298 001a 0123     		movs	r3, #1
 3299 001c 84F85C30 		strb	r3, [r4, #92]
1935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 3300              		.loc 1 1935 0 is_stmt 1 discriminator 2
 3301 0020 94F85D00 		ldrb	r0, [r4, #93]	@ zero_extendqisi2
 3302 0024 C0B2     		uxtb	r0, r0
 3303 0026 9842     		cmp	r0, r3
 3304 0028 0ED0     		beq	.L315
1937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 3305              		.loc 1 1937 0
 3306 002a 0223     		movs	r3, #2
 3307              	.LVL238:
 3308              	.L303:
2042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return errorcode;
 3309              		.loc 1 2042 0
 3310 002c 0022     		movs	r2, #0
 3311 002e 84F85C20 		strb	r2, [r4, #92]
 3312              	.LVL239:
 3313              	.L302:
2044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3314              		.loc 1 2044 0
 3315 0032 1846     		mov	r0, r3
 3316 0034 38BD     		pop	{r3, r4, r5, pc}
 3317              	.LVL240:
 3318              	.L314:
1923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3319              		.loc 1 1923 0
 3320 0036 0423     		movs	r3, #4
 3321 0038 80F85D30 		strb	r3, [r0, #93]
1929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 3322              		.loc 1 1929 0
 3323 003c 1346     		mov	r3, r2
 3324 003e 0A46     		mov	r2, r1
 3325              	.LVL241:
 3326 0040 FFF7FEFF 		bl	HAL_SPI_TransmitReceive_DMA
 3327              	.LVL242:
 3328 0044 0346     		mov	r3, r0
 3329 0046 F4E7     		b	.L302
 3330              	.LVL243:
 3331              	.L315:
1941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 3332              		.loc 1 1941 0
 3333 0048 B2FA82F3 		clz	r3, r2
 3334 004c 5B09     		lsrs	r3, r3, #5
 3335 004e 0029     		cmp	r1, #0
 3336 0050 08BF     		it	eq
 3337 0052 0123     		moveq	r3, #1
ARM GAS  /tmp/cc8c22lT.s 			page 143


 3338 0054 002B     		cmp	r3, #0
 3339 0056 40F08380 		bne	.L312
1948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 3340              		.loc 1 1948 0
 3341 005a 0423     		movs	r3, #4
 3342 005c 84F85D30 		strb	r3, [r4, #93]
1949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
 3343              		.loc 1 1949 0
 3344 0060 0023     		movs	r3, #0
 3345 0062 2366     		str	r3, [r4, #96]
1950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 3346              		.loc 1 1950 0
 3347 0064 2164     		str	r1, [r4, #64]
1951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount = Size;
 3348              		.loc 1 1951 0
 3349 0066 A4F84420 		strh	r2, [r4, #68]	@ movhi
1952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3350              		.loc 1 1952 0
 3351 006a A4F84620 		strh	r2, [r4, #70]	@ movhi
1955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxISR       = NULL;
 3352              		.loc 1 1955 0
 3353 006e E364     		str	r3, [r4, #76]
1956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
 3354              		.loc 1 1956 0
 3355 0070 2365     		str	r3, [r4, #80]
1957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 3356              		.loc 1 1957 0
 3357 0072 A387     		strh	r3, [r4, #60]	@ movhi
1958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3358              		.loc 1 1958 0
 3359 0074 E387     		strh	r3, [r4, #62]	@ movhi
1961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 3360              		.loc 1 1961 0
 3361 0076 B5F5004F 		cmp	r5, #32768
 3362 007a 2CD0     		beq	.L316
 3363              	.LVL244:
 3364              	.L304:
1975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 3365              		.loc 1 1975 0
 3366 007c 2268     		ldr	r2, [r4]
 3367 007e 5368     		ldr	r3, [r2, #4]
 3368 0080 23F40053 		bic	r3, r3, #8192
 3369 0084 5360     		str	r3, [r2, #4]
1976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 3370              		.loc 1 1976 0
 3371 0086 E368     		ldr	r3, [r4, #12]
 3372 0088 B3F5E06F 		cmp	r3, #1792
 3373 008c 29D9     		bls	.L305
1979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 3374              		.loc 1 1979 0
 3375 008e 2268     		ldr	r2, [r4]
 3376 0090 5368     		ldr	r3, [r2, #4]
 3377 0092 23F48053 		bic	r3, r3, #4096
 3378 0096 5360     		str	r3, [r2, #4]
 3379              	.L306:
2005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3380              		.loc 1 2005 0
ARM GAS  /tmp/cc8c22lT.s 			page 144


 3381 0098 A36D     		ldr	r3, [r4, #88]
 3382 009a 334A     		ldr	r2, .L317
 3383 009c 1A64     		str	r2, [r3, #64]
2008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3384              		.loc 1 2008 0
 3385 009e A36D     		ldr	r3, [r4, #88]
 3386 00a0 324A     		ldr	r2, .L317+4
 3387 00a2 DA63     		str	r2, [r3, #60]
2011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3388              		.loc 1 2011 0
 3389 00a4 A36D     		ldr	r3, [r4, #88]
 3390 00a6 324A     		ldr	r2, .L317+8
 3391 00a8 DA64     		str	r2, [r3, #76]
2014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3392              		.loc 1 2014 0
 3393 00aa A36D     		ldr	r3, [r4, #88]
 3394 00ac 0022     		movs	r2, #0
 3395 00ae 1A65     		str	r2, [r3, #80]
2017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 3396              		.loc 1 2017 0
 3397 00b0 2168     		ldr	r1, [r4]
 3398              	.LVL245:
 3399 00b2 B4F84630 		ldrh	r3, [r4, #70]
 3400 00b6 226C     		ldr	r2, [r4, #64]
 3401 00b8 0C31     		adds	r1, r1, #12
 3402 00ba A06D     		ldr	r0, [r4, #88]
 3403 00bc FFF7FEFF 		bl	HAL_DMA_Start_IT
 3404              	.LVL246:
 3405 00c0 0346     		mov	r3, r0
 3406 00c2 0028     		cmp	r0, #0
 3407 00c4 38D0     		beq	.L308
2020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_ERROR;
 3408              		.loc 1 2020 0
 3409 00c6 236E     		ldr	r3, [r4, #96]
 3410 00c8 43F01003 		orr	r3, r3, #16
 3411 00cc 2366     		str	r3, [r4, #96]
 3412              	.LVL247:
2023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 3413              		.loc 1 2023 0
 3414 00ce 0123     		movs	r3, #1
 3415 00d0 84F85D30 		strb	r3, [r4, #93]
2024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 3416              		.loc 1 2024 0
 3417 00d4 AAE7     		b	.L303
 3418              	.LVL248:
 3419              	.L316:
1963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 3420              		.loc 1 1963 0
 3421 00d6 2268     		ldr	r2, [r4]
 3422              	.LVL249:
 3423 00d8 1368     		ldr	r3, [r2]
 3424 00da 23F48043 		bic	r3, r3, #16384
 3425 00de 1360     		str	r3, [r2]
 3426              	.LVL250:
 3427 00e0 CCE7     		b	.L304
 3428              	.L305:
1984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
ARM GAS  /tmp/cc8c22lT.s 			page 145


 3429              		.loc 1 1984 0
 3430 00e2 2268     		ldr	r2, [r4]
 3431 00e4 5368     		ldr	r3, [r2, #4]
 3432 00e6 43F48053 		orr	r3, r3, #4096
 3433 00ea 5360     		str	r3, [r2, #4]
1986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 3434              		.loc 1 1986 0
 3435 00ec A36D     		ldr	r3, [r4, #88]
 3436 00ee 9B69     		ldr	r3, [r3, #24]
 3437 00f0 B3F5005F 		cmp	r3, #8192
 3438 00f4 D0D1     		bne	.L306
1989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3439              		.loc 1 1989 0
 3440 00f6 2268     		ldr	r2, [r4]
 3441 00f8 5368     		ldr	r3, [r2, #4]
 3442 00fa 23F48053 		bic	r3, r3, #4096
 3443 00fe 5360     		str	r3, [r2, #4]
1991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 3444              		.loc 1 1991 0
 3445 0100 B4F84630 		ldrh	r3, [r4, #70]
 3446 0104 13F0010F 		tst	r3, #1
 3447 0108 0AD1     		bne	.L307
1993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->RxXferCount = hspi->RxXferCount >> 1U;
 3448              		.loc 1 1993 0
 3449 010a 2268     		ldr	r2, [r4]
 3450 010c 5368     		ldr	r3, [r2, #4]
 3451 010e 23F40053 		bic	r3, r3, #8192
 3452 0112 5360     		str	r3, [r2, #4]
1994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 3453              		.loc 1 1994 0
 3454 0114 B4F84630 		ldrh	r3, [r4, #70]
 3455 0118 5B08     		lsrs	r3, r3, #1
 3456 011a A4F84630 		strh	r3, [r4, #70]	@ movhi
 3457 011e BBE7     		b	.L306
 3458              	.L307:
1998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->RxXferCount = (hspi->RxXferCount >> 1U) + 1U;
 3459              		.loc 1 1998 0
 3460 0120 2268     		ldr	r2, [r4]
 3461 0122 5368     		ldr	r3, [r2, #4]
 3462 0124 43F40053 		orr	r3, r3, #8192
 3463 0128 5360     		str	r3, [r2, #4]
1999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 3464              		.loc 1 1999 0
 3465 012a B4F84630 		ldrh	r3, [r4, #70]
 3466 012e 5B08     		lsrs	r3, r3, #1
 3467 0130 0133     		adds	r3, r3, #1
 3468 0132 A4F84630 		strh	r3, [r4, #70]	@ movhi
 3469 0136 AFE7     		b	.L306
 3470              	.LVL251:
 3471              	.L308:
2028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 3472              		.loc 1 2028 0
 3473 0138 2268     		ldr	r2, [r4]
 3474 013a 1168     		ldr	r1, [r2]
 3475 013c 11F0400F 		tst	r1, #64
 3476 0140 03D1     		bne	.L309
2031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
ARM GAS  /tmp/cc8c22lT.s 			page 146


 3477              		.loc 1 2031 0
 3478 0142 1168     		ldr	r1, [r2]
 3479 0144 41F04001 		orr	r1, r1, #64
 3480 0148 1160     		str	r1, [r2]
 3481              	.L309:
2035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3482              		.loc 1 2035 0
 3483 014a 2168     		ldr	r1, [r4]
 3484 014c 4A68     		ldr	r2, [r1, #4]
 3485 014e 42F02002 		orr	r2, r2, #32
 3486 0152 4A60     		str	r2, [r1, #4]
2038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3487              		.loc 1 2038 0
 3488 0154 2168     		ldr	r1, [r4]
 3489 0156 4A68     		ldr	r2, [r1, #4]
 3490 0158 42F00102 		orr	r2, r2, #1
 3491 015c 4A60     		str	r2, [r1, #4]
 3492 015e 65E7     		b	.L303
 3493              	.LVL252:
 3494              	.L312:
1943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 3495              		.loc 1 1943 0
 3496 0160 0123     		movs	r3, #1
 3497 0162 63E7     		b	.L303
 3498              	.L310:
1933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3499              		.loc 1 1933 0
 3500 0164 0223     		movs	r3, #2
 3501 0166 64E7     		b	.L302
 3502              	.L318:
 3503              		.align	2
 3504              	.L317:
 3505 0168 00000000 		.word	SPI_DMAHalfReceiveCplt
 3506 016c 00000000 		.word	SPI_DMAReceiveCplt
 3507 0170 00000000 		.word	SPI_DMAError
 3508              		.cfi_endproc
 3509              	.LFE152:
 3511              		.section	.text.HAL_SPI_Abort,"ax",%progbits
 3512              		.align	1
 3513              		.global	HAL_SPI_Abort
 3514              		.syntax unified
 3515              		.thumb
 3516              		.thumb_func
 3517              		.fpu fpv5-sp-d16
 3519              	HAL_SPI_Abort:
 3520              	.LFB154:
2247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode;
 3521              		.loc 1 2247 0
 3522              		.cfi_startproc
 3523              		@ args = 0, pretend = 0, frame = 16
 3524              		@ frame_needed = 0, uses_anonymous_args = 0
 3525              	.LVL253:
 3526 0000 10B5     		push	{r4, lr}
 3527              	.LCFI37:
 3528              		.cfi_def_cfa_offset 8
 3529              		.cfi_offset 4, -8
 3530              		.cfi_offset 14, -4
ARM GAS  /tmp/cc8c22lT.s 			page 147


 3531 0002 86B0     		sub	sp, sp, #24
 3532              	.LCFI38:
 3533              		.cfi_def_cfa_offset 32
 3534 0004 0446     		mov	r4, r0
 3535              	.LVL254:
2253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   count = resetcount;
 3536              		.loc 1 2253 0
 3537 0006 5E4B     		ldr	r3, .L340
 3538 0008 1B68     		ldr	r3, [r3]
 3539 000a 5E4A     		ldr	r2, .L340+4
 3540 000c A2FB0323 		umull	r2, r3, r2, r3
 3541 0010 5B0A     		lsrs	r3, r3, #9
 3542 0012 6422     		movs	r2, #100
 3543 0014 02FB03F3 		mul	r3, r2, r3
 3544 0018 0493     		str	r3, [sp, #16]
2254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3545              		.loc 1 2254 0
 3546 001a 049B     		ldr	r3, [sp, #16]
 3547 001c 0593     		str	r3, [sp, #20]
2257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3548              		.loc 1 2257 0
 3549 001e 0268     		ldr	r2, [r0]
 3550 0020 5368     		ldr	r3, [r2, #4]
 3551 0022 23F02003 		bic	r3, r3, #32
 3552 0026 5360     		str	r3, [r2, #4]
2260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 3553              		.loc 1 2260 0
 3554 0028 0268     		ldr	r2, [r0]
 3555 002a 5368     		ldr	r3, [r2, #4]
 3556 002c 13F0800F 		tst	r3, #128
 3557 0030 12D0     		beq	.L320
2262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
 3558              		.loc 1 2262 0
 3559 0032 554B     		ldr	r3, .L340+8
 3560 0034 0365     		str	r3, [r0, #80]
 3561              	.L323:
2266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 3562              		.loc 1 2266 0
 3563 0036 059B     		ldr	r3, [sp, #20]
 3564 0038 43B1     		cbz	r3, .L338
2271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 3565              		.loc 1 2271 0
 3566 003a 059B     		ldr	r3, [sp, #20]
 3567 003c 013B     		subs	r3, r3, #1
 3568 003e 0593     		str	r3, [sp, #20]
2273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Reset Timeout Counter */
 3569              		.loc 1 2273 0
 3570 0040 94F85D30 		ldrb	r3, [r4, #93]	@ zero_extendqisi2
 3571 0044 DBB2     		uxtb	r3, r3
 3572 0046 072B     		cmp	r3, #7
 3573 0048 F5D1     		bne	.L323
 3574 004a 03E0     		b	.L322
 3575              	.L338:
2268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         break;
 3576              		.loc 1 2268 0
 3577 004c 236E     		ldr	r3, [r4, #96]
 3578 004e 43F04003 		orr	r3, r3, #64
ARM GAS  /tmp/cc8c22lT.s 			page 148


 3579 0052 2366     		str	r3, [r4, #96]
 3580              	.L322:
2275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 3581              		.loc 1 2275 0
 3582 0054 049B     		ldr	r3, [sp, #16]
 3583 0056 0593     		str	r3, [sp, #20]
 3584              	.L320:
2278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 3585              		.loc 1 2278 0
 3586 0058 5368     		ldr	r3, [r2, #4]
 3587 005a 13F0400F 		tst	r3, #64
 3588 005e 12D0     		beq	.L324
2280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
 3589              		.loc 1 2280 0
 3590 0060 4A4B     		ldr	r3, .L340+12
 3591 0062 E364     		str	r3, [r4, #76]
 3592              	.L327:
2284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 3593              		.loc 1 2284 0
 3594 0064 059B     		ldr	r3, [sp, #20]
 3595 0066 43B1     		cbz	r3, .L339
2289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 3596              		.loc 1 2289 0
 3597 0068 059B     		ldr	r3, [sp, #20]
 3598 006a 013B     		subs	r3, r3, #1
 3599 006c 0593     		str	r3, [sp, #20]
2291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Reset Timeout Counter */
 3600              		.loc 1 2291 0
 3601 006e 94F85D30 		ldrb	r3, [r4, #93]	@ zero_extendqisi2
 3602 0072 DBB2     		uxtb	r3, r3
 3603 0074 072B     		cmp	r3, #7
 3604 0076 F5D1     		bne	.L327
 3605 0078 03E0     		b	.L326
 3606              	.L339:
2286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         break;
 3607              		.loc 1 2286 0
 3608 007a 236E     		ldr	r3, [r4, #96]
 3609 007c 43F04003 		orr	r3, r3, #64
 3610 0080 2366     		str	r3, [r4, #96]
 3611              	.L326:
2293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 3612              		.loc 1 2293 0
 3613 0082 049B     		ldr	r3, [sp, #16]
 3614 0084 0593     		str	r3, [sp, #20]
 3615              	.L324:
2297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 3616              		.loc 1 2297 0
 3617 0086 5368     		ldr	r3, [r2, #4]
 3618 0088 13F0020F 		tst	r3, #2
 3619 008c 2AD0     		beq	.L328
2300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 3620              		.loc 1 2300 0
 3621 008e 636D     		ldr	r3, [r4, #84]
 3622 0090 43B3     		cbz	r3, .L328
2304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3623              		.loc 1 2304 0
 3624 0092 0022     		movs	r2, #0
ARM GAS  /tmp/cc8c22lT.s 			page 149


 3625 0094 1A65     		str	r2, [r3, #80]
2307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 3626              		.loc 1 2307 0
 3627 0096 606D     		ldr	r0, [r4, #84]
 3628              	.LVL255:
 3629 0098 FFF7FEFF 		bl	HAL_DMA_Abort
 3630              	.LVL256:
 3631 009c 08B1     		cbz	r0, .L329
2309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 3632              		.loc 1 2309 0
 3633 009e 4023     		movs	r3, #64
 3634 00a0 2366     		str	r3, [r4, #96]
 3635              	.L329:
2313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3636              		.loc 1 2313 0
 3637 00a2 2268     		ldr	r2, [r4]
 3638 00a4 5368     		ldr	r3, [r2, #4]
 3639 00a6 23F00203 		bic	r3, r3, #2
 3640 00aa 5360     		str	r3, [r2, #4]
2315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 3641              		.loc 1 2315 0
 3642 00ac FFF7FEFF 		bl	HAL_GetTick
 3643              	.LVL257:
 3644 00b0 0246     		mov	r2, r0
 3645 00b2 6421     		movs	r1, #100
 3646 00b4 2046     		mov	r0, r4
 3647 00b6 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 3648              	.LVL258:
 3649 00ba 08B1     		cbz	r0, .L330
2317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 3650              		.loc 1 2317 0
 3651 00bc 4023     		movs	r3, #64
 3652 00be 2366     		str	r3, [r4, #96]
 3653              	.L330:
2321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3654              		.loc 1 2321 0
 3655 00c0 2268     		ldr	r2, [r4]
 3656 00c2 1368     		ldr	r3, [r2]
 3657 00c4 23F04003 		bic	r3, r3, #64
 3658 00c8 1360     		str	r3, [r2]
2324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 3659              		.loc 1 2324 0
 3660 00ca FFF7FEFF 		bl	HAL_GetTick
 3661              	.LVL259:
 3662 00ce 0090     		str	r0, [sp]
 3663 00d0 6423     		movs	r3, #100
 3664 00d2 0022     		movs	r2, #0
 3665 00d4 4FF4C061 		mov	r1, #1536
 3666 00d8 2046     		mov	r0, r4
 3667 00da FFF7FEFF 		bl	SPI_WaitFifoStateUntilTimeout
 3668              	.LVL260:
 3669 00de 08B1     		cbz	r0, .L328
2326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 3670              		.loc 1 2326 0
 3671 00e0 4023     		movs	r3, #64
 3672 00e2 2366     		str	r3, [r4, #96]
 3673              	.L328:
ARM GAS  /tmp/cc8c22lT.s 			page 150


2332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 3674              		.loc 1 2332 0
 3675 00e4 2368     		ldr	r3, [r4]
 3676 00e6 5B68     		ldr	r3, [r3, #4]
 3677 00e8 13F0010F 		tst	r3, #1
 3678 00ec 2CD0     		beq	.L331
2335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 3679              		.loc 1 2335 0
 3680 00ee A36D     		ldr	r3, [r4, #88]
 3681 00f0 53B3     		cbz	r3, .L331
2339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3682              		.loc 1 2339 0
 3683 00f2 0022     		movs	r2, #0
 3684 00f4 1A65     		str	r2, [r3, #80]
2342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 3685              		.loc 1 2342 0
 3686 00f6 A06D     		ldr	r0, [r4, #88]
 3687 00f8 FFF7FEFF 		bl	HAL_DMA_Abort
 3688              	.LVL261:
 3689 00fc 08B1     		cbz	r0, .L332
2344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 3690              		.loc 1 2344 0
 3691 00fe 4023     		movs	r3, #64
 3692 0100 2366     		str	r3, [r4, #96]
 3693              	.L332:
2348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3694              		.loc 1 2348 0
 3695 0102 2268     		ldr	r2, [r4]
 3696 0104 1368     		ldr	r3, [r2]
 3697 0106 23F04003 		bic	r3, r3, #64
 3698 010a 1360     		str	r3, [r2]
2351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 3699              		.loc 1 2351 0
 3700 010c FFF7FEFF 		bl	HAL_GetTick
 3701              	.LVL262:
 3702 0110 0090     		str	r0, [sp]
 3703 0112 6423     		movs	r3, #100
 3704 0114 0022     		movs	r2, #0
 3705 0116 8021     		movs	r1, #128
 3706 0118 2046     		mov	r0, r4
 3707 011a FFF7FEFF 		bl	SPI_WaitFlagStateUntilTimeout
 3708              	.LVL263:
 3709 011e 08B1     		cbz	r0, .L333
2353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 3710              		.loc 1 2353 0
 3711 0120 4023     		movs	r3, #64
 3712 0122 2366     		str	r3, [r4, #96]
 3713              	.L333:
2357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 3714              		.loc 1 2357 0
 3715 0124 FFF7FEFF 		bl	HAL_GetTick
 3716              	.LVL264:
 3717 0128 0090     		str	r0, [sp]
 3718 012a 6423     		movs	r3, #100
 3719 012c 0022     		movs	r2, #0
 3720 012e 4FF4C061 		mov	r1, #1536
 3721 0132 2046     		mov	r0, r4
ARM GAS  /tmp/cc8c22lT.s 			page 151


 3722 0134 FFF7FEFF 		bl	SPI_WaitFifoStateUntilTimeout
 3723              	.LVL265:
 3724 0138 08B1     		cbz	r0, .L334
2359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 3725              		.loc 1 2359 0
 3726 013a 4023     		movs	r3, #64
 3727 013c 2366     		str	r3, [r4, #96]
 3728              	.L334:
2363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 3729              		.loc 1 2363 0
 3730 013e 2268     		ldr	r2, [r4]
 3731 0140 5368     		ldr	r3, [r2, #4]
 3732 0142 23F00103 		bic	r3, r3, #1
 3733 0146 5360     		str	r3, [r2, #4]
 3734              	.L331:
2367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 3735              		.loc 1 2367 0
 3736 0148 0023     		movs	r3, #0
 3737 014a A4F84630 		strh	r3, [r4, #70]	@ movhi
2368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3738              		.loc 1 2368 0
 3739 014e E387     		strh	r3, [r4, #62]	@ movhi
2371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 3740              		.loc 1 2371 0
 3741 0150 236E     		ldr	r3, [r4, #96]
 3742 0152 402B     		cmp	r3, #64
 3743 0154 12D0     		beq	.L336
2379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 3744              		.loc 1 2379 0
 3745 0156 0020     		movs	r0, #0
 3746 0158 2066     		str	r0, [r4, #96]
 3747              	.L335:
 3748              	.LVL266:
 3749              	.LBB3:
2383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_CLEAR_FREFLAG(hspi);
 3750              		.loc 1 2383 0
 3751 015a 0022     		movs	r2, #0
 3752 015c 0292     		str	r2, [sp, #8]
 3753 015e 2368     		ldr	r3, [r4]
 3754 0160 D968     		ldr	r1, [r3, #12]
 3755 0162 0291     		str	r1, [sp, #8]
 3756 0164 9968     		ldr	r1, [r3, #8]
 3757 0166 0291     		str	r1, [sp, #8]
 3758 0168 0299     		ldr	r1, [sp, #8]
 3759              	.LBE3:
 3760              	.LBB4:
2384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3761              		.loc 1 2384 0
 3762 016a 0392     		str	r2, [sp, #12]
 3763 016c 9B68     		ldr	r3, [r3, #8]
 3764 016e 0393     		str	r3, [sp, #12]
 3765 0170 039B     		ldr	r3, [sp, #12]
 3766              	.LBE4:
2387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3767              		.loc 1 2387 0
 3768 0172 0123     		movs	r3, #1
 3769 0174 84F85D30 		strb	r3, [r4, #93]
ARM GAS  /tmp/cc8c22lT.s 			page 152


2390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3770              		.loc 1 2390 0
 3771 0178 06B0     		add	sp, sp, #24
 3772              	.LCFI39:
 3773              		.cfi_remember_state
 3774              		.cfi_def_cfa_offset 8
 3775              		@ sp needed
 3776 017a 10BD     		pop	{r4, pc}
 3777              	.LVL267:
 3778              	.L336:
 3779              	.LCFI40:
 3780              		.cfi_restore_state
2374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 3781              		.loc 1 2374 0
 3782 017c 0120     		movs	r0, #1
 3783 017e ECE7     		b	.L335
 3784              	.L341:
 3785              		.align	2
 3786              	.L340:
 3787 0180 00000000 		.word	SystemCoreClock
 3788 0184 F1197605 		.word	91625969
 3789 0188 00000000 		.word	SPI_AbortTx_ISR
 3790 018c 00000000 		.word	SPI_AbortRx_ISR
 3791              		.cfi_endproc
 3792              	.LFE154:
 3794              		.section	.text.HAL_SPI_DMAPause,"ax",%progbits
 3795              		.align	1
 3796              		.global	HAL_SPI_DMAPause
 3797              		.syntax unified
 3798              		.thumb
 3799              		.thumb_func
 3800              		.fpu fpv5-sp-d16
 3802              	HAL_SPI_DMAPause:
 3803              	.LFB156:
2570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process Locked */
 3804              		.loc 1 2570 0
 3805              		.cfi_startproc
 3806              		@ args = 0, pretend = 0, frame = 0
 3807              		@ frame_needed = 0, uses_anonymous_args = 0
 3808              		@ link register save eliminated.
 3809              	.LVL268:
2572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3810              		.loc 1 2572 0
 3811 0000 90F85C30 		ldrb	r3, [r0, #92]	@ zero_extendqisi2
 3812 0004 012B     		cmp	r3, #1
 3813 0006 0CD0     		beq	.L344
2572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3814              		.loc 1 2572 0 is_stmt 0 discriminator 2
 3815 0008 0123     		movs	r3, #1
 3816 000a 80F85C30 		strb	r3, [r0, #92]
2575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3817              		.loc 1 2575 0 is_stmt 1 discriminator 2
 3818 000e 0268     		ldr	r2, [r0]
 3819 0010 5368     		ldr	r3, [r2, #4]
 3820 0012 23F00303 		bic	r3, r3, #3
 3821 0016 5360     		str	r3, [r2, #4]
2578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
ARM GAS  /tmp/cc8c22lT.s 			page 153


 3822              		.loc 1 2578 0 discriminator 2
 3823 0018 0023     		movs	r3, #0
 3824 001a 80F85C30 		strb	r3, [r0, #92]
2580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 3825              		.loc 1 2580 0 discriminator 2
 3826 001e 1846     		mov	r0, r3
 3827              	.LVL269:
 3828 0020 7047     		bx	lr
 3829              	.LVL270:
 3830              	.L344:
2572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3831              		.loc 1 2572 0
 3832 0022 0220     		movs	r0, #2
 3833              	.LVL271:
2581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3834              		.loc 1 2581 0
 3835 0024 7047     		bx	lr
 3836              		.cfi_endproc
 3837              	.LFE156:
 3839              		.section	.text.HAL_SPI_DMAResume,"ax",%progbits
 3840              		.align	1
 3841              		.global	HAL_SPI_DMAResume
 3842              		.syntax unified
 3843              		.thumb
 3844              		.thumb_func
 3845              		.fpu fpv5-sp-d16
 3847              	HAL_SPI_DMAResume:
 3848              	.LFB157:
2590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process Locked */
 3849              		.loc 1 2590 0
 3850              		.cfi_startproc
 3851              		@ args = 0, pretend = 0, frame = 0
 3852              		@ frame_needed = 0, uses_anonymous_args = 0
 3853              		@ link register save eliminated.
 3854              	.LVL272:
2592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3855              		.loc 1 2592 0
 3856 0000 90F85C30 		ldrb	r3, [r0, #92]	@ zero_extendqisi2
 3857 0004 012B     		cmp	r3, #1
 3858 0006 0CD0     		beq	.L347
2592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3859              		.loc 1 2592 0 is_stmt 0 discriminator 2
 3860 0008 0123     		movs	r3, #1
 3861 000a 80F85C30 		strb	r3, [r0, #92]
2595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3862              		.loc 1 2595 0 is_stmt 1 discriminator 2
 3863 000e 0268     		ldr	r2, [r0]
 3864 0010 5368     		ldr	r3, [r2, #4]
 3865 0012 43F00303 		orr	r3, r3, #3
 3866 0016 5360     		str	r3, [r2, #4]
2598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3867              		.loc 1 2598 0 discriminator 2
 3868 0018 0023     		movs	r3, #0
 3869 001a 80F85C30 		strb	r3, [r0, #92]
2600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 3870              		.loc 1 2600 0 discriminator 2
 3871 001e 1846     		mov	r0, r3
ARM GAS  /tmp/cc8c22lT.s 			page 154


 3872              	.LVL273:
 3873 0020 7047     		bx	lr
 3874              	.LVL274:
 3875              	.L347:
2592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3876              		.loc 1 2592 0
 3877 0022 0220     		movs	r0, #2
 3878              	.LVL275:
2601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3879              		.loc 1 2601 0
 3880 0024 7047     		bx	lr
 3881              		.cfi_endproc
 3882              	.LFE157:
 3884              		.section	.text.HAL_SPI_DMAStop,"ax",%progbits
 3885              		.align	1
 3886              		.global	HAL_SPI_DMAStop
 3887              		.syntax unified
 3888              		.thumb
 3889              		.thumb_func
 3890              		.fpu fpv5-sp-d16
 3892              	HAL_SPI_DMAStop:
 3893              	.LFB158:
2610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 3894              		.loc 1 2610 0
 3895              		.cfi_startproc
 3896              		@ args = 0, pretend = 0, frame = 0
 3897              		@ frame_needed = 0, uses_anonymous_args = 0
 3898              	.LVL276:
 3899 0000 38B5     		push	{r3, r4, r5, lr}
 3900              	.LCFI41:
 3901              		.cfi_def_cfa_offset 16
 3902              		.cfi_offset 3, -16
 3903              		.cfi_offset 4, -12
 3904              		.cfi_offset 5, -8
 3905              		.cfi_offset 14, -4
 3906 0002 0446     		mov	r4, r0
 3907              	.LVL277:
2619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 3908              		.loc 1 2619 0
 3909 0004 406D     		ldr	r0, [r0, #84]
 3910              	.LVL278:
 3911 0006 48B1     		cbz	r0, .L351
2621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 3912              		.loc 1 2621 0
 3913 0008 FFF7FEFF 		bl	HAL_DMA_Abort
 3914              	.LVL279:
 3915 000c 0546     		mov	r5, r0
 3916 000e 30B1     		cbz	r0, .L349
2623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       errorcode = HAL_ERROR;
 3917              		.loc 1 2623 0
 3918 0010 236E     		ldr	r3, [r4, #96]
 3919 0012 43F01003 		orr	r3, r3, #16
 3920 0016 2366     		str	r3, [r4, #96]
 3921              	.LVL280:
2624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 3922              		.loc 1 2624 0
 3923 0018 0125     		movs	r5, #1
ARM GAS  /tmp/cc8c22lT.s 			page 155


 3924 001a 00E0     		b	.L349
 3925              	.LVL281:
 3926              	.L351:
2611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* The Lock is not implemented on this API to allow the user application
 3927              		.loc 1 2611 0
 3928 001c 0025     		movs	r5, #0
 3929              	.LVL282:
 3930              	.L349:
2628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 3931              		.loc 1 2628 0
 3932 001e A06D     		ldr	r0, [r4, #88]
 3933 0020 38B1     		cbz	r0, .L350
2630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 3934              		.loc 1 2630 0
 3935 0022 FFF7FEFF 		bl	HAL_DMA_Abort
 3936              	.LVL283:
 3937 0026 20B1     		cbz	r0, .L350
2632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       errorcode = HAL_ERROR;
 3938              		.loc 1 2632 0
 3939 0028 236E     		ldr	r3, [r4, #96]
 3940 002a 43F01003 		orr	r3, r3, #16
 3941 002e 2366     		str	r3, [r4, #96]
 3942              	.LVL284:
2633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 3943              		.loc 1 2633 0
 3944 0030 0125     		movs	r5, #1
 3945              	.LVL285:
 3946              	.L350:
2638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 3947              		.loc 1 2638 0
 3948 0032 2268     		ldr	r2, [r4]
 3949 0034 5368     		ldr	r3, [r2, #4]
 3950 0036 23F00303 		bic	r3, r3, #3
 3951 003a 5360     		str	r3, [r2, #4]
2639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return errorcode;
 3952              		.loc 1 2639 0
 3953 003c 0123     		movs	r3, #1
 3954 003e 84F85D30 		strb	r3, [r4, #93]
2641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3955              		.loc 1 2641 0
 3956 0042 2846     		mov	r0, r5
 3957 0044 38BD     		pop	{r3, r4, r5, pc}
 3958              		.cfi_endproc
 3959              	.LFE158:
 3961              		.section	.text.HAL_SPI_TxCpltCallback,"ax",%progbits
 3962              		.align	1
 3963              		.weak	HAL_SPI_TxCpltCallback
 3964              		.syntax unified
 3965              		.thumb
 3966              		.thumb_func
 3967              		.fpu fpv5-sp-d16
 3969              	HAL_SPI_TxCpltCallback:
 3970              	.LFB160:
2756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 3971              		.loc 1 2756 0
 3972              		.cfi_startproc
 3973              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cc8c22lT.s 			page 156


 3974              		@ frame_needed = 0, uses_anonymous_args = 0
 3975              		@ link register save eliminated.
 3976              	.LVL286:
2763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3977              		.loc 1 2763 0
 3978 0000 7047     		bx	lr
 3979              		.cfi_endproc
 3980              	.LFE160:
 3982              		.section	.text.HAL_SPI_RxCpltCallback,"ax",%progbits
 3983              		.align	1
 3984              		.weak	HAL_SPI_RxCpltCallback
 3985              		.syntax unified
 3986              		.thumb
 3987              		.thumb_func
 3988              		.fpu fpv5-sp-d16
 3990              	HAL_SPI_RxCpltCallback:
 3991              	.LFB161:
2772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 3992              		.loc 1 2772 0
 3993              		.cfi_startproc
 3994              		@ args = 0, pretend = 0, frame = 0
 3995              		@ frame_needed = 0, uses_anonymous_args = 0
 3996              		@ link register save eliminated.
 3997              	.LVL287:
2779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3998              		.loc 1 2779 0
 3999 0000 7047     		bx	lr
 4000              		.cfi_endproc
 4001              	.LFE161:
 4003              		.section	.text.HAL_SPI_TxRxCpltCallback,"ax",%progbits
 4004              		.align	1
 4005              		.weak	HAL_SPI_TxRxCpltCallback
 4006              		.syntax unified
 4007              		.thumb
 4008              		.thumb_func
 4009              		.fpu fpv5-sp-d16
 4011              	HAL_SPI_TxRxCpltCallback:
 4012              	.LFB162:
2788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 4013              		.loc 1 2788 0
 4014              		.cfi_startproc
 4015              		@ args = 0, pretend = 0, frame = 0
 4016              		@ frame_needed = 0, uses_anonymous_args = 0
 4017              		@ link register save eliminated.
 4018              	.LVL288:
2795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 4019              		.loc 1 2795 0
 4020 0000 7047     		bx	lr
 4021              		.cfi_endproc
 4022              	.LFE162:
 4024              		.section	.text.HAL_SPI_TxHalfCpltCallback,"ax",%progbits
 4025              		.align	1
 4026              		.weak	HAL_SPI_TxHalfCpltCallback
 4027              		.syntax unified
 4028              		.thumb
 4029              		.thumb_func
 4030              		.fpu fpv5-sp-d16
ARM GAS  /tmp/cc8c22lT.s 			page 157


 4032              	HAL_SPI_TxHalfCpltCallback:
 4033              	.LFB163:
2804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 4034              		.loc 1 2804 0
 4035              		.cfi_startproc
 4036              		@ args = 0, pretend = 0, frame = 0
 4037              		@ frame_needed = 0, uses_anonymous_args = 0
 4038              		@ link register save eliminated.
 4039              	.LVL289:
2811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 4040              		.loc 1 2811 0
 4041 0000 7047     		bx	lr
 4042              		.cfi_endproc
 4043              	.LFE163:
 4045              		.section	.text.SPI_DMAHalfTransmitCplt,"ax",%progbits
 4046              		.align	1
 4047              		.syntax unified
 4048              		.thumb
 4049              		.thumb_func
 4050              		.fpu fpv5-sp-d16
 4052              	SPI_DMAHalfTransmitCplt:
 4053              	.LFB173:
3183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 4054              		.loc 1 3183 0
 4055              		.cfi_startproc
 4056              		@ args = 0, pretend = 0, frame = 0
 4057              		@ frame_needed = 0, uses_anonymous_args = 0
 4058              	.LVL290:
 4059 0000 08B5     		push	{r3, lr}
 4060              	.LCFI42:
 4061              		.cfi_def_cfa_offset 8
 4062              		.cfi_offset 3, -8
 4063              		.cfi_offset 14, -4
 4064              	.LVL291:
3190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4065              		.loc 1 3190 0
 4066 0002 806B     		ldr	r0, [r0, #56]
 4067              	.LVL292:
 4068 0004 FFF7FEFF 		bl	HAL_SPI_TxHalfCpltCallback
 4069              	.LVL293:
3192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 4070              		.loc 1 3192 0
 4071 0008 08BD     		pop	{r3, pc}
 4072              		.cfi_endproc
 4073              	.LFE173:
 4075              		.section	.text.HAL_SPI_RxHalfCpltCallback,"ax",%progbits
 4076              		.align	1
 4077              		.weak	HAL_SPI_RxHalfCpltCallback
 4078              		.syntax unified
 4079              		.thumb
 4080              		.thumb_func
 4081              		.fpu fpv5-sp-d16
 4083              	HAL_SPI_RxHalfCpltCallback:
 4084              	.LFB164:
2820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 4085              		.loc 1 2820 0
 4086              		.cfi_startproc
ARM GAS  /tmp/cc8c22lT.s 			page 158


 4087              		@ args = 0, pretend = 0, frame = 0
 4088              		@ frame_needed = 0, uses_anonymous_args = 0
 4089              		@ link register save eliminated.
 4090              	.LVL294:
2827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 4091              		.loc 1 2827 0
 4092 0000 7047     		bx	lr
 4093              		.cfi_endproc
 4094              	.LFE164:
 4096              		.section	.text.SPI_DMAHalfReceiveCplt,"ax",%progbits
 4097              		.align	1
 4098              		.syntax unified
 4099              		.thumb
 4100              		.thumb_func
 4101              		.fpu fpv5-sp-d16
 4103              	SPI_DMAHalfReceiveCplt:
 4104              	.LFB174:
3201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 4105              		.loc 1 3201 0
 4106              		.cfi_startproc
 4107              		@ args = 0, pretend = 0, frame = 0
 4108              		@ frame_needed = 0, uses_anonymous_args = 0
 4109              	.LVL295:
 4110 0000 08B5     		push	{r3, lr}
 4111              	.LCFI43:
 4112              		.cfi_def_cfa_offset 8
 4113              		.cfi_offset 3, -8
 4114              		.cfi_offset 14, -4
 4115              	.LVL296:
3208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4116              		.loc 1 3208 0
 4117 0002 806B     		ldr	r0, [r0, #56]
 4118              	.LVL297:
 4119 0004 FFF7FEFF 		bl	HAL_SPI_RxHalfCpltCallback
 4120              	.LVL298:
3210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 4121              		.loc 1 3210 0
 4122 0008 08BD     		pop	{r3, pc}
 4123              		.cfi_endproc
 4124              	.LFE174:
 4126              		.section	.text.HAL_SPI_TxRxHalfCpltCallback,"ax",%progbits
 4127              		.align	1
 4128              		.weak	HAL_SPI_TxRxHalfCpltCallback
 4129              		.syntax unified
 4130              		.thumb
 4131              		.thumb_func
 4132              		.fpu fpv5-sp-d16
 4134              	HAL_SPI_TxRxHalfCpltCallback:
 4135              	.LFB165:
2836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 4136              		.loc 1 2836 0
 4137              		.cfi_startproc
 4138              		@ args = 0, pretend = 0, frame = 0
 4139              		@ frame_needed = 0, uses_anonymous_args = 0
 4140              		@ link register save eliminated.
 4141              	.LVL299:
2843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
ARM GAS  /tmp/cc8c22lT.s 			page 159


 4142              		.loc 1 2843 0
 4143 0000 7047     		bx	lr
 4144              		.cfi_endproc
 4145              	.LFE165:
 4147              		.section	.text.SPI_DMAHalfTransmitReceiveCplt,"ax",%progbits
 4148              		.align	1
 4149              		.syntax unified
 4150              		.thumb
 4151              		.thumb_func
 4152              		.fpu fpv5-sp-d16
 4154              	SPI_DMAHalfTransmitReceiveCplt:
 4155              	.LFB175:
3219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 4156              		.loc 1 3219 0
 4157              		.cfi_startproc
 4158              		@ args = 0, pretend = 0, frame = 0
 4159              		@ frame_needed = 0, uses_anonymous_args = 0
 4160              	.LVL300:
 4161 0000 08B5     		push	{r3, lr}
 4162              	.LCFI44:
 4163              		.cfi_def_cfa_offset 8
 4164              		.cfi_offset 3, -8
 4165              		.cfi_offset 14, -4
 4166              	.LVL301:
3226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4167              		.loc 1 3226 0
 4168 0002 806B     		ldr	r0, [r0, #56]
 4169              	.LVL302:
 4170 0004 FFF7FEFF 		bl	HAL_SPI_TxRxHalfCpltCallback
 4171              	.LVL303:
3228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 4172              		.loc 1 3228 0
 4173 0008 08BD     		pop	{r3, pc}
 4174              		.cfi_endproc
 4175              	.LFE175:
 4177              		.section	.text.HAL_SPI_ErrorCallback,"ax",%progbits
 4178              		.align	1
 4179              		.weak	HAL_SPI_ErrorCallback
 4180              		.syntax unified
 4181              		.thumb
 4182              		.thumb_func
 4183              		.fpu fpv5-sp-d16
 4185              	HAL_SPI_ErrorCallback:
 4186              	.LFB166:
2852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 4187              		.loc 1 2852 0
 4188              		.cfi_startproc
 4189              		@ args = 0, pretend = 0, frame = 0
 4190              		@ frame_needed = 0, uses_anonymous_args = 0
 4191              		@ link register save eliminated.
 4192              	.LVL304:
2862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 4193              		.loc 1 2862 0
 4194 0000 7047     		bx	lr
 4195              		.cfi_endproc
 4196              	.LFE166:
 4198              		.section	.text.SPI_CloseTx_ISR,"ax",%progbits
ARM GAS  /tmp/cc8c22lT.s 			page 160


 4199              		.align	1
 4200              		.syntax unified
 4201              		.thumb
 4202              		.thumb_func
 4203              		.fpu fpv5-sp-d16
 4205              	SPI_CloseTx_ISR:
 4206              	.LFB194:
4098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t tickstart;
 4207              		.loc 1 4098 0
 4208              		.cfi_startproc
 4209              		@ args = 0, pretend = 0, frame = 8
 4210              		@ frame_needed = 0, uses_anonymous_args = 0
 4211              	.LVL305:
 4212 0000 10B5     		push	{r4, lr}
 4213              	.LCFI45:
 4214              		.cfi_def_cfa_offset 8
 4215              		.cfi_offset 4, -8
 4216              		.cfi_offset 14, -4
 4217 0002 82B0     		sub	sp, sp, #8
 4218              	.LCFI46:
 4219              		.cfi_def_cfa_offset 16
 4220 0004 0446     		mov	r4, r0
4102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 4221              		.loc 1 4102 0
 4222 0006 FFF7FEFF 		bl	HAL_GetTick
 4223              	.LVL306:
4105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 4224              		.loc 1 4105 0
 4225 000a 2268     		ldr	r2, [r4]
 4226 000c 5368     		ldr	r3, [r2, #4]
 4227 000e 23F0A003 		bic	r3, r3, #160
 4228 0012 5360     		str	r3, [r2, #4]
4108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 4229              		.loc 1 4108 0
 4230 0014 0246     		mov	r2, r0
 4231 0016 6421     		movs	r1, #100
 4232 0018 2046     		mov	r0, r4
 4233              	.LVL307:
 4234 001a FFF7FEFF 		bl	SPI_EndRxTxTransaction
 4235              	.LVL308:
 4236 001e 18B1     		cbz	r0, .L367
4110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 4237              		.loc 1 4110 0
 4238 0020 236E     		ldr	r3, [r4, #96]
 4239 0022 43F02003 		orr	r3, r3, #32
 4240 0026 2366     		str	r3, [r4, #96]
 4241              	.L367:
4114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 4242              		.loc 1 4114 0
 4243 0028 A368     		ldr	r3, [r4, #8]
 4244 002a 33B9     		cbnz	r3, .L368
 4245              	.LBB5:
4116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 4246              		.loc 1 4116 0
 4247 002c 0193     		str	r3, [sp, #4]
 4248 002e 2368     		ldr	r3, [r4]
 4249 0030 DA68     		ldr	r2, [r3, #12]
ARM GAS  /tmp/cc8c22lT.s 			page 161


 4250 0032 0192     		str	r2, [sp, #4]
 4251 0034 9B68     		ldr	r3, [r3, #8]
 4252 0036 0193     		str	r3, [sp, #4]
 4253 0038 019B     		ldr	r3, [sp, #4]
 4254              	.L368:
 4255              	.LBE5:
4119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 4256              		.loc 1 4119 0
 4257 003a 0123     		movs	r3, #1
 4258 003c 84F85D30 		strb	r3, [r4, #93]
4120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 4259              		.loc 1 4120 0
 4260 0040 236E     		ldr	r3, [r4, #96]
 4261 0042 23B9     		cbnz	r3, .L372
4135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4262              		.loc 1 4135 0
 4263 0044 2046     		mov	r0, r4
 4264 0046 FFF7FEFF 		bl	HAL_SPI_TxCpltCallback
 4265              	.LVL309:
 4266              	.L366:
4138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 4267              		.loc 1 4138 0
 4268 004a 02B0     		add	sp, sp, #8
 4269              	.LCFI47:
 4270              		.cfi_remember_state
 4271              		.cfi_def_cfa_offset 8
 4272              		@ sp needed
 4273 004c 10BD     		pop	{r4, pc}
 4274              	.LVL310:
 4275              	.L372:
 4276              	.LCFI48:
 4277              		.cfi_restore_state
4126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4278              		.loc 1 4126 0
 4279 004e 2046     		mov	r0, r4
 4280 0050 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 4281              	.LVL311:
 4282 0054 F9E7     		b	.L366
 4283              		.cfi_endproc
 4284              	.LFE194:
 4286              		.section	.text.SPI_TxISR_8BIT,"ax",%progbits
 4287              		.align	1
 4288              		.syntax unified
 4289              		.thumb
 4290              		.thumb_func
 4291              		.fpu fpv5-sp-d16
 4293              	SPI_TxISR_8BIT:
 4294              	.LFB186:
3733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 4295              		.loc 1 3733 0
 4296              		.cfi_startproc
 4297              		@ args = 0, pretend = 0, frame = 0
 4298              		@ frame_needed = 0, uses_anonymous_args = 0
 4299              	.LVL312:
 4300 0000 08B5     		push	{r3, lr}
 4301              	.LCFI49:
 4302              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/cc8c22lT.s 			page 162


 4303              		.cfi_offset 3, -8
 4304              		.cfi_offset 14, -4
3734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pTxBuffPtr++;
 4305              		.loc 1 3734 0
 4306 0002 826B     		ldr	r2, [r0, #56]
 4307 0004 0368     		ldr	r3, [r0]
 4308 0006 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 4309 0008 1A73     		strb	r2, [r3, #12]
3735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount--;
 4310              		.loc 1 3735 0
 4311 000a 836B     		ldr	r3, [r0, #56]
 4312 000c 0133     		adds	r3, r3, #1
 4313 000e 8363     		str	r3, [r0, #56]
3736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 4314              		.loc 1 3736 0
 4315 0010 C38F     		ldrh	r3, [r0, #62]
 4316 0012 013B     		subs	r3, r3, #1
 4317 0014 9BB2     		uxth	r3, r3
 4318 0016 C387     		strh	r3, [r0, #62]	@ movhi
3738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 4319              		.loc 1 3738 0
 4320 0018 C38F     		ldrh	r3, [r0, #62]
 4321 001a 9BB2     		uxth	r3, r3
 4322 001c 03B1     		cbz	r3, .L376
 4323              	.LVL313:
 4324              	.L373:
3749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 4325              		.loc 1 3749 0
 4326 001e 08BD     		pop	{r3, pc}
 4327              	.LVL314:
 4328              	.L376:
3747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 4329              		.loc 1 3747 0
 4330 0020 FFF7FEFF 		bl	SPI_CloseTx_ISR
 4331              	.LVL315:
3749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 4332              		.loc 1 3749 0
 4333 0024 FBE7     		b	.L373
 4334              		.cfi_endproc
 4335              	.LFE186:
 4337              		.section	.text.SPI_TxISR_16BIT,"ax",%progbits
 4338              		.align	1
 4339              		.syntax unified
 4340              		.thumb
 4341              		.thumb_func
 4342              		.fpu fpv5-sp-d16
 4344              	SPI_TxISR_16BIT:
 4345              	.LFB187:
3758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
 4346              		.loc 1 3758 0
 4347              		.cfi_startproc
 4348              		@ args = 0, pretend = 0, frame = 0
 4349              		@ frame_needed = 0, uses_anonymous_args = 0
 4350              	.LVL316:
 4351 0000 08B5     		push	{r3, lr}
 4352              	.LCFI50:
 4353              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/cc8c22lT.s 			page 163


 4354              		.cfi_offset 3, -8
 4355              		.cfi_offset 14, -4
3760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pTxBuffPtr += sizeof(uint16_t);
 4356              		.loc 1 3760 0
 4357 0002 826B     		ldr	r2, [r0, #56]
 4358 0004 0368     		ldr	r3, [r0]
 4359 0006 1288     		ldrh	r2, [r2]
 4360 0008 DA60     		str	r2, [r3, #12]
3761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount--;
 4361              		.loc 1 3761 0
 4362 000a 836B     		ldr	r3, [r0, #56]
 4363 000c 0233     		adds	r3, r3, #2
 4364 000e 8363     		str	r3, [r0, #56]
3762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 4365              		.loc 1 3762 0
 4366 0010 C38F     		ldrh	r3, [r0, #62]
 4367 0012 013B     		subs	r3, r3, #1
 4368 0014 9BB2     		uxth	r3, r3
 4369 0016 C387     		strh	r3, [r0, #62]	@ movhi
3764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 4370              		.loc 1 3764 0
 4371 0018 C38F     		ldrh	r3, [r0, #62]
 4372 001a 9BB2     		uxth	r3, r3
 4373 001c 03B1     		cbz	r3, .L380
 4374              	.LVL317:
 4375              	.L377:
3775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 4376              		.loc 1 3775 0
 4377 001e 08BD     		pop	{r3, pc}
 4378              	.LVL318:
 4379              	.L380:
3773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 4380              		.loc 1 3773 0
 4381 0020 FFF7FEFF 		bl	SPI_CloseTx_ISR
 4382              	.LVL319:
3775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 4383              		.loc 1 3775 0
 4384 0024 FBE7     		b	.L377
 4385              		.cfi_endproc
 4386              	.LFE187:
 4388              		.section	.text.SPI_CloseRx_ISR,"ax",%progbits
 4389              		.align	1
 4390              		.syntax unified
 4391              		.thumb
 4392              		.thumb_func
 4393              		.fpu fpv5-sp-d16
 4395              	SPI_CloseRx_ISR:
 4396              	.LFB193:
4041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable RXNE and ERR interrupt */
 4397              		.loc 1 4041 0
 4398              		.cfi_startproc
 4399              		@ args = 0, pretend = 0, frame = 0
 4400              		@ frame_needed = 0, uses_anonymous_args = 0
 4401              	.LVL320:
 4402 0000 10B5     		push	{r4, lr}
 4403              	.LCFI51:
 4404              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/cc8c22lT.s 			page 164


 4405              		.cfi_offset 4, -8
 4406              		.cfi_offset 14, -4
 4407 0002 0446     		mov	r4, r0
4043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 4408              		.loc 1 4043 0
 4409 0004 0268     		ldr	r2, [r0]
 4410 0006 5368     		ldr	r3, [r2, #4]
 4411 0008 23F06003 		bic	r3, r3, #96
 4412 000c 5360     		str	r3, [r2, #4]
4046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 4413              		.loc 1 4046 0
 4414 000e FFF7FEFF 		bl	HAL_GetTick
 4415              	.LVL321:
 4416 0012 0246     		mov	r2, r0
 4417 0014 6421     		movs	r1, #100
 4418 0016 2046     		mov	r0, r4
 4419 0018 FFF7FEFF 		bl	SPI_EndRxTransaction
 4420              	.LVL322:
 4421 001c 18B1     		cbz	r0, .L382
4048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 4422              		.loc 1 4048 0
 4423 001e 236E     		ldr	r3, [r4, #96]
 4424 0020 43F02003 		orr	r3, r3, #32
 4425 0024 2366     		str	r3, [r4, #96]
 4426              	.L382:
4050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 4427              		.loc 1 4050 0
 4428 0026 0123     		movs	r3, #1
 4429 0028 84F85D30 		strb	r3, [r4, #93]
4068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 4430              		.loc 1 4068 0
 4431 002c 236E     		ldr	r3, [r4, #96]
 4432 002e 1BB1     		cbz	r3, .L386
4083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4433              		.loc 1 4083 0
 4434 0030 2046     		mov	r0, r4
 4435 0032 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 4436              	.LVL323:
 4437              	.L381:
4089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 4438              		.loc 1 4089 0
 4439 0036 10BD     		pop	{r4, pc}
 4440              	.LVL324:
 4441              	.L386:
4074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4442              		.loc 1 4074 0
 4443 0038 2046     		mov	r0, r4
 4444 003a FFF7FEFF 		bl	HAL_SPI_RxCpltCallback
 4445              	.LVL325:
 4446 003e FAE7     		b	.L381
 4447              		.cfi_endproc
 4448              	.LFE193:
 4450              		.section	.text.SPI_RxISR_8BIT,"ax",%progbits
 4451              		.align	1
 4452              		.syntax unified
 4453              		.thumb
 4454              		.thumb_func
ARM GAS  /tmp/cc8c22lT.s 			page 165


 4455              		.fpu fpv5-sp-d16
 4457              	SPI_RxISR_8BIT:
 4458              	.LFB184:
3648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *hspi->pRxBuffPtr = (*(__IO uint8_t *)&hspi->Instance->DR);
 4459              		.loc 1 3648 0
 4460              		.cfi_startproc
 4461              		@ args = 0, pretend = 0, frame = 0
 4462              		@ frame_needed = 0, uses_anonymous_args = 0
 4463              	.LVL326:
 4464 0000 08B5     		push	{r3, lr}
 4465              	.LCFI52:
 4466              		.cfi_def_cfa_offset 8
 4467              		.cfi_offset 3, -8
 4468              		.cfi_offset 14, -4
3649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pRxBuffPtr++;
 4469              		.loc 1 3649 0
 4470 0002 0268     		ldr	r2, [r0]
 4471 0004 036C     		ldr	r3, [r0, #64]
 4472 0006 127B     		ldrb	r2, [r2, #12]	@ zero_extendqisi2
 4473 0008 1A70     		strb	r2, [r3]
3650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount--;
 4474              		.loc 1 3650 0
 4475 000a 036C     		ldr	r3, [r0, #64]
 4476 000c 0133     		adds	r3, r3, #1
 4477 000e 0364     		str	r3, [r0, #64]
3651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 4478              		.loc 1 3651 0
 4479 0010 B0F84630 		ldrh	r3, [r0, #70]
 4480 0014 013B     		subs	r3, r3, #1
 4481 0016 9BB2     		uxth	r3, r3
 4482 0018 A0F84630 		strh	r3, [r0, #70]	@ movhi
3661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 4483              		.loc 1 3661 0
 4484 001c B0F84630 		ldrh	r3, [r0, #70]
 4485 0020 9BB2     		uxth	r3, r3
 4486 0022 03B1     		cbz	r3, .L390
 4487              	.LVL327:
 4488              	.L387:
3672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 4489              		.loc 1 3672 0
 4490 0024 08BD     		pop	{r3, pc}
 4491              	.LVL328:
 4492              	.L390:
3670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 4493              		.loc 1 3670 0
 4494 0026 FFF7FEFF 		bl	SPI_CloseRx_ISR
 4495              	.LVL329:
3672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 4496              		.loc 1 3672 0
 4497 002a FBE7     		b	.L387
 4498              		.cfi_endproc
 4499              	.LFE184:
 4501              		.section	.text.SPI_RxISR_16BIT,"ax",%progbits
 4502              		.align	1
 4503              		.syntax unified
 4504              		.thumb
 4505              		.thumb_func
ARM GAS  /tmp/cc8c22lT.s 			page 166


 4506              		.fpu fpv5-sp-d16
 4508              	SPI_RxISR_16BIT:
 4509              	.LFB185:
3700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)(hspi->Instance->DR);
 4510              		.loc 1 3700 0
 4511              		.cfi_startproc
 4512              		@ args = 0, pretend = 0, frame = 0
 4513              		@ frame_needed = 0, uses_anonymous_args = 0
 4514              	.LVL330:
 4515 0000 08B5     		push	{r3, lr}
 4516              	.LCFI53:
 4517              		.cfi_def_cfa_offset 8
 4518              		.cfi_offset 3, -8
 4519              		.cfi_offset 14, -4
3701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pRxBuffPtr += sizeof(uint16_t);
 4520              		.loc 1 3701 0
 4521 0002 0368     		ldr	r3, [r0]
 4522 0004 DA68     		ldr	r2, [r3, #12]
 4523 0006 036C     		ldr	r3, [r0, #64]
 4524 0008 1A80     		strh	r2, [r3]	@ movhi
3702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount--;
 4525              		.loc 1 3702 0
 4526 000a 036C     		ldr	r3, [r0, #64]
 4527 000c 0233     		adds	r3, r3, #2
 4528 000e 0364     		str	r3, [r0, #64]
3703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 4529              		.loc 1 3703 0
 4530 0010 B0F84630 		ldrh	r3, [r0, #70]
 4531 0014 013B     		subs	r3, r3, #1
 4532 0016 9BB2     		uxth	r3, r3
 4533 0018 A0F84630 		strh	r3, [r0, #70]	@ movhi
3713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 4534              		.loc 1 3713 0
 4535 001c B0F84630 		ldrh	r3, [r0, #70]
 4536 0020 9BB2     		uxth	r3, r3
 4537 0022 03B1     		cbz	r3, .L394
 4538              	.LVL331:
 4539              	.L391:
3724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 4540              		.loc 1 3724 0
 4541 0024 08BD     		pop	{r3, pc}
 4542              	.LVL332:
 4543              	.L394:
3722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 4544              		.loc 1 3722 0
 4545 0026 FFF7FEFF 		bl	SPI_CloseRx_ISR
 4546              	.LVL333:
3724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 4547              		.loc 1 3724 0
 4548 002a FBE7     		b	.L391
 4549              		.cfi_endproc
 4550              	.LFE185:
 4552              		.section	.text.SPI_CloseRxTx_ISR,"ax",%progbits
 4553              		.align	1
 4554              		.syntax unified
 4555              		.thumb
 4556              		.thumb_func
ARM GAS  /tmp/cc8c22lT.s 			page 167


 4557              		.fpu fpv5-sp-d16
 4559              	SPI_CloseRxTx_ISR:
 4560              	.LFB192:
3964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t tickstart;
 4561              		.loc 1 3964 0
 4562              		.cfi_startproc
 4563              		@ args = 0, pretend = 0, frame = 0
 4564              		@ frame_needed = 0, uses_anonymous_args = 0
 4565              	.LVL334:
 4566 0000 10B5     		push	{r4, lr}
 4567              	.LCFI54:
 4568              		.cfi_def_cfa_offset 8
 4569              		.cfi_offset 4, -8
 4570              		.cfi_offset 14, -4
 4571 0002 0446     		mov	r4, r0
3968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 4572              		.loc 1 3968 0
 4573 0004 FFF7FEFF 		bl	HAL_GetTick
 4574              	.LVL335:
3971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 4575              		.loc 1 3971 0
 4576 0008 2268     		ldr	r2, [r4]
 4577 000a 5368     		ldr	r3, [r2, #4]
 4578 000c 23F02003 		bic	r3, r3, #32
 4579 0010 5360     		str	r3, [r2, #4]
3974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 4580              		.loc 1 3974 0
 4581 0012 0246     		mov	r2, r0
 4582 0014 6421     		movs	r1, #100
 4583 0016 2046     		mov	r0, r4
 4584              	.LVL336:
 4585 0018 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 4586              	.LVL337:
 4587 001c 18B1     		cbz	r0, .L396
3976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 4588              		.loc 1 3976 0
 4589 001e 236E     		ldr	r3, [r4, #96]
 4590 0020 43F02003 		orr	r3, r3, #32
 4591 0024 2366     		str	r3, [r4, #96]
 4592              	.L396:
3996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 4593              		.loc 1 3996 0
 4594 0026 236E     		ldr	r3, [r4, #96]
 4595 0028 93B9     		cbnz	r3, .L397
3998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 4596              		.loc 1 3998 0
 4597 002a 94F85D30 		ldrb	r3, [r4, #93]	@ zero_extendqisi2
 4598 002e DBB2     		uxtb	r3, r3
 4599 0030 042B     		cmp	r3, #4
 4600 0032 06D0     		beq	.L401
4010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Call user TxRx complete callback */
 4601              		.loc 1 4010 0
 4602 0034 0123     		movs	r3, #1
 4603 0036 84F85D30 		strb	r3, [r4, #93]
4015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4604              		.loc 1 4015 0
 4605 003a 2046     		mov	r0, r4
ARM GAS  /tmp/cc8c22lT.s 			page 168


 4606 003c FFF7FEFF 		bl	HAL_SPI_TxRxCpltCallback
 4607              	.LVL338:
 4608              	.L395:
4032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 4609              		.loc 1 4032 0
 4610 0040 10BD     		pop	{r4, pc}
 4611              	.LVL339:
 4612              	.L401:
4000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Call user Rx complete callback */
 4613              		.loc 1 4000 0
 4614 0042 0123     		movs	r3, #1
 4615 0044 84F85D30 		strb	r3, [r4, #93]
4005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4616              		.loc 1 4005 0
 4617 0048 2046     		mov	r0, r4
 4618 004a FFF7FEFF 		bl	HAL_SPI_RxCpltCallback
 4619              	.LVL340:
 4620 004e F7E7     		b	.L395
 4621              	.L397:
4021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Call user error callback */
 4622              		.loc 1 4021 0
 4623 0050 0123     		movs	r3, #1
 4624 0052 84F85D30 		strb	r3, [r4, #93]
4026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4625              		.loc 1 4026 0
 4626 0056 2046     		mov	r0, r4
 4627 0058 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 4628              	.LVL341:
4032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 4629              		.loc 1 4032 0
 4630 005c F0E7     		b	.L395
 4631              		.cfi_endproc
 4632              	.LFE192:
 4634              		.section	.text.SPI_2linesTxISR_8BIT,"ax",%progbits
 4635              		.align	1
 4636              		.syntax unified
 4637              		.thumb
 4638              		.thumb_func
 4639              		.fpu fpv5-sp-d16
 4641              	SPI_2linesTxISR_8BIT:
 4642              	.LFB181:
3491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Transmit data in packing Bit mode */
 4643              		.loc 1 3491 0
 4644              		.cfi_startproc
 4645              		@ args = 0, pretend = 0, frame = 0
 4646              		@ frame_needed = 0, uses_anonymous_args = 0
 4647              	.LVL342:
 4648 0000 08B5     		push	{r3, lr}
 4649              	.LCFI55:
 4650              		.cfi_def_cfa_offset 8
 4651              		.cfi_offset 3, -8
 4652              		.cfi_offset 14, -4
3493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 4653              		.loc 1 3493 0
 4654 0002 C38F     		ldrh	r3, [r0, #62]
 4655 0004 9BB2     		uxth	r3, r3
 4656 0006 012B     		cmp	r3, #1
ARM GAS  /tmp/cc8c22lT.s 			page 169


 4657 0008 17D9     		bls	.L403
3495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->pTxBuffPtr += sizeof(uint16_t);
 4658              		.loc 1 3495 0
 4659 000a 826B     		ldr	r2, [r0, #56]
 4660 000c 0368     		ldr	r3, [r0]
 4661 000e 1288     		ldrh	r2, [r2]
 4662 0010 DA60     		str	r2, [r3, #12]
3496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->TxXferCount -= 2U;
 4663              		.loc 1 3496 0
 4664 0012 836B     		ldr	r3, [r0, #56]
 4665 0014 0233     		adds	r3, r3, #2
 4666 0016 8363     		str	r3, [r0, #56]
3497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 4667              		.loc 1 3497 0
 4668 0018 C38F     		ldrh	r3, [r0, #62]
 4669 001a 023B     		subs	r3, r3, #2
 4670 001c 9BB2     		uxth	r3, r3
 4671 001e C387     		strh	r3, [r0, #62]	@ movhi
 4672              	.L404:
3508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 4673              		.loc 1 3508 0
 4674 0020 C38F     		ldrh	r3, [r0, #62]
 4675 0022 9BB2     		uxth	r3, r3
 4676 0024 43B9     		cbnz	r3, .L402
3522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 4677              		.loc 1 3522 0
 4678 0026 0268     		ldr	r2, [r0]
 4679 0028 5368     		ldr	r3, [r2, #4]
 4680 002a 23F08003 		bic	r3, r3, #128
 4681 002e 5360     		str	r3, [r2, #4]
3524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 4682              		.loc 1 3524 0
 4683 0030 B0F84630 		ldrh	r3, [r0, #70]
 4684 0034 9BB2     		uxth	r3, r3
 4685 0036 63B1     		cbz	r3, .L407
 4686              	.LVL343:
 4687              	.L402:
3529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 4688              		.loc 1 3529 0
 4689 0038 08BD     		pop	{r3, pc}
 4690              	.LVL344:
 4691              	.L403:
3502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->pTxBuffPtr++;
 4692              		.loc 1 3502 0
 4693 003a 826B     		ldr	r2, [r0, #56]
 4694 003c 0368     		ldr	r3, [r0]
 4695 003e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 4696 0040 1A73     		strb	r2, [r3, #12]
3503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->TxXferCount--;
 4697              		.loc 1 3503 0
 4698 0042 836B     		ldr	r3, [r0, #56]
 4699 0044 0133     		adds	r3, r3, #1
 4700 0046 8363     		str	r3, [r0, #56]
3504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 4701              		.loc 1 3504 0
 4702 0048 C38F     		ldrh	r3, [r0, #62]
 4703 004a 013B     		subs	r3, r3, #1
ARM GAS  /tmp/cc8c22lT.s 			page 170


 4704 004c 9BB2     		uxth	r3, r3
 4705 004e C387     		strh	r3, [r0, #62]	@ movhi
 4706 0050 E6E7     		b	.L404
 4707              	.L407:
3526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 4708              		.loc 1 3526 0
 4709 0052 FFF7FEFF 		bl	SPI_CloseRxTx_ISR
 4710              	.LVL345:
3529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 4711              		.loc 1 3529 0
 4712 0056 EFE7     		b	.L402
 4713              		.cfi_endproc
 4714              	.LFE181:
 4716              		.section	.text.SPI_2linesRxISR_8BIT,"ax",%progbits
 4717              		.align	1
 4718              		.syntax unified
 4719              		.thumb
 4720              		.thumb_func
 4721              		.fpu fpv5-sp-d16
 4723              	SPI_2linesRxISR_8BIT:
 4724              	.LFB180:
3413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Receive data in packing mode */
 4725              		.loc 1 3413 0
 4726              		.cfi_startproc
 4727              		@ args = 0, pretend = 0, frame = 0
 4728              		@ frame_needed = 0, uses_anonymous_args = 0
 4729              	.LVL346:
 4730 0000 08B5     		push	{r3, lr}
 4731              	.LCFI56:
 4732              		.cfi_def_cfa_offset 8
 4733              		.cfi_offset 3, -8
 4734              		.cfi_offset 14, -4
3415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 4735              		.loc 1 3415 0
 4736 0002 B0F84630 		ldrh	r3, [r0, #70]
 4737 0006 9BB2     		uxth	r3, r3
 4738 0008 012B     		cmp	r3, #1
 4739 000a 24D9     		bls	.L409
3417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->pRxBuffPtr += sizeof(uint16_t);
 4740              		.loc 1 3417 0
 4741 000c 0368     		ldr	r3, [r0]
 4742 000e DA68     		ldr	r2, [r3, #12]
 4743 0010 036C     		ldr	r3, [r0, #64]
 4744 0012 1A80     		strh	r2, [r3]	@ movhi
3418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->RxXferCount -= 2U;
 4745              		.loc 1 3418 0
 4746 0014 036C     		ldr	r3, [r0, #64]
 4747 0016 0233     		adds	r3, r3, #2
 4748 0018 0364     		str	r3, [r0, #64]
3419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->RxXferCount == 1U)
 4749              		.loc 1 3419 0
 4750 001a B0F84630 		ldrh	r3, [r0, #70]
 4751 001e 023B     		subs	r3, r3, #2
 4752 0020 9BB2     		uxth	r3, r3
 4753 0022 A0F84630 		strh	r3, [r0, #70]	@ movhi
3420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 4754              		.loc 1 3420 0
ARM GAS  /tmp/cc8c22lT.s 			page 171


 4755 0026 B0F84630 		ldrh	r3, [r0, #70]
 4756 002a 9BB2     		uxth	r3, r3
 4757 002c 012B     		cmp	r3, #1
 4758 002e 0CD0     		beq	.L413
 4759              	.L410:
3435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 4760              		.loc 1 3435 0
 4761 0030 B0F84630 		ldrh	r3, [r0, #70]
 4762 0034 9BB2     		uxth	r3, r3
 4763 0036 3BB9     		cbnz	r3, .L408
3447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 4764              		.loc 1 3447 0
 4765 0038 0268     		ldr	r2, [r0]
 4766 003a 5368     		ldr	r3, [r2, #4]
 4767 003c 23F06003 		bic	r3, r3, #96
 4768 0040 5360     		str	r3, [r2, #4]
3449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 4769              		.loc 1 3449 0
 4770 0042 C38F     		ldrh	r3, [r0, #62]
 4771 0044 9BB2     		uxth	r3, r3
 4772 0046 A3B1     		cbz	r3, .L414
 4773              	.LVL347:
 4774              	.L408:
3454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 4775              		.loc 1 3454 0
 4776 0048 08BD     		pop	{r3, pc}
 4777              	.LVL348:
 4778              	.L413:
3423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 4779              		.loc 1 3423 0
 4780 004a 0268     		ldr	r2, [r0]
 4781 004c 5368     		ldr	r3, [r2, #4]
 4782 004e 43F48053 		orr	r3, r3, #4096
 4783 0052 5360     		str	r3, [r2, #4]
 4784 0054 ECE7     		b	.L410
 4785              	.L409:
3429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->pRxBuffPtr++;
 4786              		.loc 1 3429 0
 4787 0056 0268     		ldr	r2, [r0]
 4788 0058 036C     		ldr	r3, [r0, #64]
 4789 005a 127B     		ldrb	r2, [r2, #12]	@ zero_extendqisi2
 4790 005c 1A70     		strb	r2, [r3]
3430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->RxXferCount--;
 4791              		.loc 1 3430 0
 4792 005e 036C     		ldr	r3, [r0, #64]
 4793 0060 0133     		adds	r3, r3, #1
 4794 0062 0364     		str	r3, [r0, #64]
3431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 4795              		.loc 1 3431 0
 4796 0064 B0F84630 		ldrh	r3, [r0, #70]
 4797 0068 013B     		subs	r3, r3, #1
 4798 006a 9BB2     		uxth	r3, r3
 4799 006c A0F84630 		strh	r3, [r0, #70]	@ movhi
 4800 0070 DEE7     		b	.L410
 4801              	.L414:
3451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 4802              		.loc 1 3451 0
ARM GAS  /tmp/cc8c22lT.s 			page 172


 4803 0072 FFF7FEFF 		bl	SPI_CloseRxTx_ISR
 4804              	.LVL349:
3454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 4805              		.loc 1 3454 0
 4806 0076 E7E7     		b	.L408
 4807              		.cfi_endproc
 4808              	.LFE180:
 4810              		.section	.text.SPI_2linesTxISR_16BIT,"ax",%progbits
 4811              		.align	1
 4812              		.syntax unified
 4813              		.thumb
 4814              		.thumb_func
 4815              		.fpu fpv5-sp-d16
 4817              	SPI_2linesTxISR_16BIT:
 4818              	.LFB183:
3590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
 4819              		.loc 1 3590 0
 4820              		.cfi_startproc
 4821              		@ args = 0, pretend = 0, frame = 0
 4822              		@ frame_needed = 0, uses_anonymous_args = 0
 4823              	.LVL350:
 4824 0000 08B5     		push	{r3, lr}
 4825              	.LCFI57:
 4826              		.cfi_def_cfa_offset 8
 4827              		.cfi_offset 3, -8
 4828              		.cfi_offset 14, -4
3592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pTxBuffPtr += sizeof(uint16_t);
 4829              		.loc 1 3592 0
 4830 0002 826B     		ldr	r2, [r0, #56]
 4831 0004 0368     		ldr	r3, [r0]
 4832 0006 1288     		ldrh	r2, [r2]
 4833 0008 DA60     		str	r2, [r3, #12]
3593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount--;
 4834              		.loc 1 3593 0
 4835 000a 836B     		ldr	r3, [r0, #56]
 4836 000c 0233     		adds	r3, r3, #2
 4837 000e 8363     		str	r3, [r0, #56]
3594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 4838              		.loc 1 3594 0
 4839 0010 C38F     		ldrh	r3, [r0, #62]
 4840 0012 013B     		subs	r3, r3, #1
 4841 0014 9BB2     		uxth	r3, r3
 4842 0016 C387     		strh	r3, [r0, #62]	@ movhi
3597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 4843              		.loc 1 3597 0
 4844 0018 C38F     		ldrh	r3, [r0, #62]
 4845 001a 9BB2     		uxth	r3, r3
 4846 001c 43B9     		cbnz	r3, .L415
3611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 4847              		.loc 1 3611 0
 4848 001e 0268     		ldr	r2, [r0]
 4849 0020 5368     		ldr	r3, [r2, #4]
 4850 0022 23F08003 		bic	r3, r3, #128
 4851 0026 5360     		str	r3, [r2, #4]
3613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 4852              		.loc 1 3613 0
 4853 0028 B0F84630 		ldrh	r3, [r0, #70]
ARM GAS  /tmp/cc8c22lT.s 			page 173


 4854 002c 9BB2     		uxth	r3, r3
 4855 002e 03B1     		cbz	r3, .L418
 4856              	.LVL351:
 4857              	.L415:
3618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 4858              		.loc 1 3618 0
 4859 0030 08BD     		pop	{r3, pc}
 4860              	.LVL352:
 4861              	.L418:
3615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 4862              		.loc 1 3615 0
 4863 0032 FFF7FEFF 		bl	SPI_CloseRxTx_ISR
 4864              	.LVL353:
3618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 4865              		.loc 1 3618 0
 4866 0036 FBE7     		b	.L415
 4867              		.cfi_endproc
 4868              	.LFE183:
 4870              		.section	.text.SPI_2linesRxISR_16BIT,"ax",%progbits
 4871              		.align	1
 4872              		.syntax unified
 4873              		.thumb
 4874              		.thumb_func
 4875              		.fpu fpv5-sp-d16
 4877              	SPI_2linesRxISR_16BIT:
 4878              	.LFB182:
3538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Receive data in 16 Bit mode */
 4879              		.loc 1 3538 0
 4880              		.cfi_startproc
 4881              		@ args = 0, pretend = 0, frame = 0
 4882              		@ frame_needed = 0, uses_anonymous_args = 0
 4883              	.LVL354:
 4884 0000 08B5     		push	{r3, lr}
 4885              	.LCFI58:
 4886              		.cfi_def_cfa_offset 8
 4887              		.cfi_offset 3, -8
 4888              		.cfi_offset 14, -4
3540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pRxBuffPtr += sizeof(uint16_t);
 4889              		.loc 1 3540 0
 4890 0002 0368     		ldr	r3, [r0]
 4891 0004 DA68     		ldr	r2, [r3, #12]
 4892 0006 036C     		ldr	r3, [r0, #64]
 4893 0008 1A80     		strh	r2, [r3]	@ movhi
3541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount--;
 4894              		.loc 1 3541 0
 4895 000a 036C     		ldr	r3, [r0, #64]
 4896 000c 0233     		adds	r3, r3, #2
 4897 000e 0364     		str	r3, [r0, #64]
3542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 4898              		.loc 1 3542 0
 4899 0010 B0F84630 		ldrh	r3, [r0, #70]
 4900 0014 013B     		subs	r3, r3, #1
 4901 0016 9BB2     		uxth	r3, r3
 4902 0018 A0F84630 		strh	r3, [r0, #70]	@ movhi
3544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 4903              		.loc 1 3544 0
 4904 001c B0F84630 		ldrh	r3, [r0, #70]
ARM GAS  /tmp/cc8c22lT.s 			page 174


 4905 0020 9BB2     		uxth	r3, r3
 4906 0022 3BB9     		cbnz	r3, .L419
3555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 4907              		.loc 1 3555 0
 4908 0024 0268     		ldr	r2, [r0]
 4909 0026 5368     		ldr	r3, [r2, #4]
 4910 0028 23F04003 		bic	r3, r3, #64
 4911 002c 5360     		str	r3, [r2, #4]
3557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 4912              		.loc 1 3557 0
 4913 002e C38F     		ldrh	r3, [r0, #62]
 4914 0030 9BB2     		uxth	r3, r3
 4915 0032 03B1     		cbz	r3, .L422
 4916              	.LVL355:
 4917              	.L419:
3562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 4918              		.loc 1 3562 0
 4919 0034 08BD     		pop	{r3, pc}
 4920              	.LVL356:
 4921              	.L422:
3559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 4922              		.loc 1 3559 0
 4923 0036 FFF7FEFF 		bl	SPI_CloseRxTx_ISR
 4924              	.LVL357:
3562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 4925              		.loc 1 3562 0
 4926 003a FBE7     		b	.L419
 4927              		.cfi_endproc
 4928              	.LFE182:
 4930              		.section	.text.SPI_DMAError,"ax",%progbits
 4931              		.align	1
 4932              		.syntax unified
 4933              		.thumb
 4934              		.thumb_func
 4935              		.fpu fpv5-sp-d16
 4937              	SPI_DMAError:
 4938              	.LFB176:
3237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 4939              		.loc 1 3237 0
 4940              		.cfi_startproc
 4941              		@ args = 0, pretend = 0, frame = 0
 4942              		@ frame_needed = 0, uses_anonymous_args = 0
 4943              	.LVL358:
 4944 0000 08B5     		push	{r3, lr}
 4945              	.LCFI59:
 4946              		.cfi_def_cfa_offset 8
 4947              		.cfi_offset 3, -8
 4948              		.cfi_offset 14, -4
3238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 4949              		.loc 1 3238 0
 4950 0002 806B     		ldr	r0, [r0, #56]
 4951              	.LVL359:
3241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 4952              		.loc 1 3241 0
 4953 0004 0268     		ldr	r2, [r0]
 4954 0006 5368     		ldr	r3, [r2, #4]
 4955 0008 23F00303 		bic	r3, r3, #3
ARM GAS  /tmp/cc8c22lT.s 			page 175


 4956 000c 5360     		str	r3, [r2, #4]
3243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 4957              		.loc 1 3243 0
 4958 000e 036E     		ldr	r3, [r0, #96]
 4959 0010 43F01003 		orr	r3, r3, #16
 4960 0014 0366     		str	r3, [r0, #96]
3244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Call user error callback */
 4961              		.loc 1 3244 0
 4962 0016 0123     		movs	r3, #1
 4963 0018 80F85D30 		strb	r3, [r0, #93]
3249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4964              		.loc 1 3249 0
 4965 001c FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 4966              	.LVL360:
3251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 4967              		.loc 1 3251 0
 4968 0020 08BD     		pop	{r3, pc}
 4969              		.cfi_endproc
 4970              	.LFE176:
 4972              		.section	.text.SPI_DMATransmitCplt,"ax",%progbits
 4973              		.align	1
 4974              		.syntax unified
 4975              		.thumb
 4976              		.thumb_func
 4977              		.fpu fpv5-sp-d16
 4979              	SPI_DMATransmitCplt:
 4980              	.LFB170:
2942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 4981              		.loc 1 2942 0
 4982              		.cfi_startproc
 4983              		@ args = 0, pretend = 0, frame = 8
 4984              		@ frame_needed = 0, uses_anonymous_args = 0
 4985              	.LVL361:
 4986 0000 30B5     		push	{r4, r5, lr}
 4987              	.LCFI60:
 4988              		.cfi_def_cfa_offset 12
 4989              		.cfi_offset 4, -12
 4990              		.cfi_offset 5, -8
 4991              		.cfi_offset 14, -4
 4992 0002 83B0     		sub	sp, sp, #12
 4993              	.LCFI61:
 4994              		.cfi_def_cfa_offset 24
 4995 0004 0546     		mov	r5, r0
2943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t tickstart;
 4996              		.loc 1 2943 0
 4997 0006 846B     		ldr	r4, [r0, #56]
 4998              	.LVL362:
2947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 4999              		.loc 1 2947 0
 5000 0008 FFF7FEFF 		bl	HAL_GetTick
 5001              	.LVL363:
2950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 5002              		.loc 1 2950 0
 5003 000c 2B68     		ldr	r3, [r5]
 5004 000e 1B68     		ldr	r3, [r3]
 5005 0010 13F4807F 		tst	r3, #256
 5006 0014 23D1     		bne	.L426
ARM GAS  /tmp/cc8c22lT.s 			page 176


2953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 5007              		.loc 1 2953 0
 5008 0016 2268     		ldr	r2, [r4]
 5009 0018 5368     		ldr	r3, [r2, #4]
 5010 001a 23F02003 		bic	r3, r3, #32
 5011 001e 5360     		str	r3, [r2, #4]
2956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 5012              		.loc 1 2956 0
 5013 0020 2268     		ldr	r2, [r4]
 5014 0022 5368     		ldr	r3, [r2, #4]
 5015 0024 23F00203 		bic	r3, r3, #2
 5016 0028 5360     		str	r3, [r2, #4]
2959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 5017              		.loc 1 2959 0
 5018 002a 0246     		mov	r2, r0
 5019 002c 6421     		movs	r1, #100
 5020 002e 2046     		mov	r0, r4
 5021              	.LVL364:
 5022 0030 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 5023              	.LVL365:
 5024 0034 18B1     		cbz	r0, .L427
2961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 5025              		.loc 1 2961 0
 5026 0036 236E     		ldr	r3, [r4, #96]
 5027 0038 43F02003 		orr	r3, r3, #32
 5028 003c 2366     		str	r3, [r4, #96]
 5029              	.L427:
2965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 5030              		.loc 1 2965 0
 5031 003e A368     		ldr	r3, [r4, #8]
 5032 0040 33B9     		cbnz	r3, .L428
 5033              	.LBB6:
2967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 5034              		.loc 1 2967 0
 5035 0042 0193     		str	r3, [sp, #4]
 5036 0044 2368     		ldr	r3, [r4]
 5037 0046 DA68     		ldr	r2, [r3, #12]
 5038 0048 0192     		str	r2, [sp, #4]
 5039 004a 9B68     		ldr	r3, [r3, #8]
 5040 004c 0193     		str	r3, [sp, #4]
 5041 004e 019B     		ldr	r3, [sp, #4]
 5042              	.L428:
 5043              	.LBE6:
2970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
 5044              		.loc 1 2970 0
 5045 0050 0023     		movs	r3, #0
 5046 0052 E387     		strh	r3, [r4, #62]	@ movhi
2971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 5047              		.loc 1 2971 0
 5048 0054 0123     		movs	r3, #1
 5049 0056 84F85D30 		strb	r3, [r4, #93]
2973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 5050              		.loc 1 2973 0
 5051 005a 236E     		ldr	r3, [r4, #96]
 5052 005c 23B9     		cbnz	r3, .L431
 5053              	.L426:
2988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
ARM GAS  /tmp/cc8c22lT.s 			page 177


 5054              		.loc 1 2988 0
 5055 005e 2046     		mov	r0, r4
 5056 0060 FFF7FEFF 		bl	HAL_SPI_TxCpltCallback
 5057              	.LVL366:
 5058              	.L425:
2990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 5059              		.loc 1 2990 0
 5060 0064 03B0     		add	sp, sp, #12
 5061              	.LCFI62:
 5062              		.cfi_remember_state
 5063              		.cfi_def_cfa_offset 12
 5064              		@ sp needed
 5065 0066 30BD     		pop	{r4, r5, pc}
 5066              	.LVL367:
 5067              	.L431:
 5068              	.LCFI63:
 5069              		.cfi_restore_state
2979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 5070              		.loc 1 2979 0
 5071 0068 2046     		mov	r0, r4
 5072 006a FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 5073              	.LVL368:
2981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 5074              		.loc 1 2981 0
 5075 006e F9E7     		b	.L425
 5076              		.cfi_endproc
 5077              	.LFE170:
 5079              		.section	.text.SPI_DMAReceiveCplt,"ax",%progbits
 5080              		.align	1
 5081              		.syntax unified
 5082              		.thumb
 5083              		.thumb_func
 5084              		.fpu fpv5-sp-d16
 5086              	SPI_DMAReceiveCplt:
 5087              	.LFB171:
2999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 5088              		.loc 1 2999 0
 5089              		.cfi_startproc
 5090              		@ args = 0, pretend = 0, frame = 0
 5091              		@ frame_needed = 0, uses_anonymous_args = 0
 5092              	.LVL369:
 5093 0000 38B5     		push	{r3, r4, r5, lr}
 5094              	.LCFI64:
 5095              		.cfi_def_cfa_offset 16
 5096              		.cfi_offset 3, -16
 5097              		.cfi_offset 4, -12
 5098              		.cfi_offset 5, -8
 5099              		.cfi_offset 14, -4
 5100 0002 0546     		mov	r5, r0
3000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t tickstart;
 5101              		.loc 1 3000 0
 5102 0004 846B     		ldr	r4, [r0, #56]
 5103              	.LVL370:
3004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 5104              		.loc 1 3004 0
 5105 0006 FFF7FEFF 		bl	HAL_GetTick
 5106              	.LVL371:
ARM GAS  /tmp/cc8c22lT.s 			page 178


3007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 5107              		.loc 1 3007 0
 5108 000a 2B68     		ldr	r3, [r5]
 5109 000c 1B68     		ldr	r3, [r3]
 5110 000e 13F4807F 		tst	r3, #256
 5111 0012 19D1     		bne	.L433
3010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 5112              		.loc 1 3010 0
 5113 0014 2268     		ldr	r2, [r4]
 5114 0016 5368     		ldr	r3, [r2, #4]
 5115 0018 23F02003 		bic	r3, r3, #32
 5116 001c 5360     		str	r3, [r2, #4]
3048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 5117              		.loc 1 3048 0
 5118 001e 2268     		ldr	r2, [r4]
 5119 0020 5368     		ldr	r3, [r2, #4]
 5120 0022 23F00303 		bic	r3, r3, #3
 5121 0026 5360     		str	r3, [r2, #4]
3051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 5122              		.loc 1 3051 0
 5123 0028 0246     		mov	r2, r0
 5124 002a 6421     		movs	r1, #100
 5125 002c 2046     		mov	r0, r4
 5126              	.LVL372:
 5127 002e FFF7FEFF 		bl	SPI_EndRxTransaction
 5128              	.LVL373:
 5129 0032 08B1     		cbz	r0, .L434
3053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 5130              		.loc 1 3053 0
 5131 0034 2023     		movs	r3, #32
 5132 0036 2366     		str	r3, [r4, #96]
 5133              	.L434:
3056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
 5134              		.loc 1 3056 0
 5135 0038 0023     		movs	r3, #0
 5136 003a A4F84630 		strh	r3, [r4, #70]	@ movhi
3057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 5137              		.loc 1 3057 0
 5138 003e 0123     		movs	r3, #1
 5139 0040 84F85D30 		strb	r3, [r4, #93]
3068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 5140              		.loc 1 3068 0
 5141 0044 236E     		ldr	r3, [r4, #96]
 5142 0046 1BB9     		cbnz	r3, .L437
 5143              	.L433:
3083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 5144              		.loc 1 3083 0
 5145 0048 2046     		mov	r0, r4
 5146 004a FFF7FEFF 		bl	HAL_SPI_RxCpltCallback
 5147              	.LVL374:
 5148              	.L432:
3085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 5149              		.loc 1 3085 0
 5150 004e 38BD     		pop	{r3, r4, r5, pc}
 5151              	.LVL375:
 5152              	.L437:
3074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
ARM GAS  /tmp/cc8c22lT.s 			page 179


 5153              		.loc 1 3074 0
 5154 0050 2046     		mov	r0, r4
 5155 0052 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 5156              	.LVL376:
3076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 5157              		.loc 1 3076 0
 5158 0056 FAE7     		b	.L432
 5159              		.cfi_endproc
 5160              	.LFE171:
 5162              		.section	.text.SPI_DMATransmitReceiveCplt,"ax",%progbits
 5163              		.align	1
 5164              		.syntax unified
 5165              		.thumb
 5166              		.thumb_func
 5167              		.fpu fpv5-sp-d16
 5169              	SPI_DMATransmitReceiveCplt:
 5170              	.LFB172:
3094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 5171              		.loc 1 3094 0
 5172              		.cfi_startproc
 5173              		@ args = 0, pretend = 0, frame = 0
 5174              		@ frame_needed = 0, uses_anonymous_args = 0
 5175              	.LVL377:
 5176 0000 38B5     		push	{r3, r4, r5, lr}
 5177              	.LCFI65:
 5178              		.cfi_def_cfa_offset 16
 5179              		.cfi_offset 3, -16
 5180              		.cfi_offset 4, -12
 5181              		.cfi_offset 5, -8
 5182              		.cfi_offset 14, -4
 5183 0002 0546     		mov	r5, r0
3095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t tickstart;
 5184              		.loc 1 3095 0
 5185 0004 846B     		ldr	r4, [r0, #56]
 5186              	.LVL378:
3099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 5187              		.loc 1 3099 0
 5188 0006 FFF7FEFF 		bl	HAL_GetTick
 5189              	.LVL379:
3102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 5190              		.loc 1 3102 0
 5191 000a 2B68     		ldr	r3, [r5]
 5192 000c 1B68     		ldr	r3, [r3]
 5193 000e 13F4807F 		tst	r3, #256
 5194 0012 1CD1     		bne	.L439
3105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 5195              		.loc 1 3105 0
 5196 0014 2268     		ldr	r2, [r4]
 5197 0016 5368     		ldr	r3, [r2, #4]
 5198 0018 23F02003 		bic	r3, r3, #32
 5199 001c 5360     		str	r3, [r2, #4]
3136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 5200              		.loc 1 3136 0
 5201 001e 0246     		mov	r2, r0
 5202 0020 6421     		movs	r1, #100
 5203 0022 2046     		mov	r0, r4
 5204              	.LVL380:
ARM GAS  /tmp/cc8c22lT.s 			page 180


 5205 0024 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 5206              	.LVL381:
 5207 0028 18B1     		cbz	r0, .L440
3138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 5208              		.loc 1 3138 0
 5209 002a 236E     		ldr	r3, [r4, #96]
 5210 002c 43F02003 		orr	r3, r3, #32
 5211 0030 2366     		str	r3, [r4, #96]
 5212              	.L440:
3142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 5213              		.loc 1 3142 0
 5214 0032 2268     		ldr	r2, [r4]
 5215 0034 5368     		ldr	r3, [r2, #4]
 5216 0036 23F00303 		bic	r3, r3, #3
 5217 003a 5360     		str	r3, [r2, #4]
3144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->RxXferCount = 0U;
 5218              		.loc 1 3144 0
 5219 003c 0023     		movs	r3, #0
 5220 003e E387     		strh	r3, [r4, #62]	@ movhi
3145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
 5221              		.loc 1 3145 0
 5222 0040 A4F84630 		strh	r3, [r4, #70]	@ movhi
3146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 5223              		.loc 1 3146 0
 5224 0044 0123     		movs	r3, #1
 5225 0046 84F85D30 		strb	r3, [r4, #93]
3157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 5226              		.loc 1 3157 0
 5227 004a 236E     		ldr	r3, [r4, #96]
 5228 004c 1BB9     		cbnz	r3, .L443
 5229              	.L439:
3172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 5230              		.loc 1 3172 0
 5231 004e 2046     		mov	r0, r4
 5232 0050 FFF7FEFF 		bl	HAL_SPI_TxRxCpltCallback
 5233              	.LVL382:
 5234              	.L438:
3174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 5235              		.loc 1 3174 0
 5236 0054 38BD     		pop	{r3, r4, r5, pc}
 5237              	.LVL383:
 5238              	.L443:
3163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 5239              		.loc 1 3163 0
 5240 0056 2046     		mov	r0, r4
 5241 0058 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 5242              	.LVL384:
3165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 5243              		.loc 1 3165 0
 5244 005c FAE7     		b	.L438
 5245              		.cfi_endproc
 5246              	.LFE172:
 5248              		.section	.text.HAL_SPI_IRQHandler,"ax",%progbits
 5249              		.align	1
 5250              		.global	HAL_SPI_IRQHandler
 5251              		.syntax unified
 5252              		.thumb
ARM GAS  /tmp/cc8c22lT.s 			page 181


 5253              		.thumb_func
 5254              		.fpu fpv5-sp-d16
 5256              	HAL_SPI_IRQHandler:
 5257              	.LFB159:
2650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t itsource = hspi->Instance->CR2;
 5258              		.loc 1 2650 0
 5259              		.cfi_startproc
 5260              		@ args = 0, pretend = 0, frame = 16
 5261              		@ frame_needed = 0, uses_anonymous_args = 0
 5262              	.LVL385:
 5263 0000 30B5     		push	{r4, r5, lr}
 5264              	.LCFI66:
 5265              		.cfi_def_cfa_offset 12
 5266              		.cfi_offset 4, -12
 5267              		.cfi_offset 5, -8
 5268              		.cfi_offset 14, -4
 5269 0002 85B0     		sub	sp, sp, #20
 5270              	.LCFI67:
 5271              		.cfi_def_cfa_offset 32
 5272 0004 0446     		mov	r4, r0
2651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t itflag   = hspi->Instance->SR;
 5273              		.loc 1 2651 0
 5274 0006 0268     		ldr	r2, [r0]
 5275 0008 5068     		ldr	r0, [r2, #4]
 5276              	.LVL386:
2652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 5277              		.loc 1 2652 0
 5278 000a 9368     		ldr	r3, [r2, #8]
 5279              	.LVL387:
2655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       (SPI_CHECK_FLAG(itflag, SPI_FLAG_RXNE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_RXN
 5280              		.loc 1 2655 0
 5281 000c C3F38011 		ubfx	r1, r3, #6, #1
 5282 0010 49B9     		cbnz	r1, .L445
2655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       (SPI_CHECK_FLAG(itflag, SPI_FLAG_RXNE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_RXN
 5283              		.loc 1 2655 0 is_stmt 0 discriminator 1
 5284 0012 13F0010F 		tst	r3, #1
 5285 0016 06D0     		beq	.L445
2656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 5286              		.loc 1 2656 0 is_stmt 1
 5287 0018 10F0400F 		tst	r0, #64
 5288 001c 03D0     		beq	.L445
2658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     return;
 5289              		.loc 1 2658 0
 5290 001e E36C     		ldr	r3, [r4, #76]
 5291              	.LVL388:
 5292 0020 2046     		mov	r0, r4
 5293              	.LVL389:
 5294 0022 9847     		blx	r3
 5295              	.LVL390:
2659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 5296              		.loc 1 2659 0
 5297 0024 08E0     		b	.L444
 5298              	.LVL391:
 5299              	.L445:
2663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 5300              		.loc 1 2663 0
 5301 0026 13F0020F 		tst	r3, #2
ARM GAS  /tmp/cc8c22lT.s 			page 182


 5302 002a 07D0     		beq	.L447
2663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 5303              		.loc 1 2663 0 is_stmt 0 discriminator 1
 5304 002c 10F0800F 		tst	r0, #128
 5305 0030 04D0     		beq	.L447
2665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     return;
 5306              		.loc 1 2665 0 is_stmt 1
 5307 0032 236D     		ldr	r3, [r4, #80]
 5308              	.LVL392:
 5309 0034 2046     		mov	r0, r4
 5310              	.LVL393:
 5311 0036 9847     		blx	r3
 5312              	.LVL394:
 5313              	.L444:
2747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 5314              		.loc 1 2747 0
 5315 0038 05B0     		add	sp, sp, #20
 5316              	.LCFI68:
 5317              		.cfi_remember_state
 5318              		.cfi_def_cfa_offset 12
 5319              		@ sp needed
 5320 003a 30BD     		pop	{r4, r5, pc}
 5321              	.LVL395:
 5322              	.L447:
 5323              	.LCFI69:
 5324              		.cfi_restore_state
2670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 5325              		.loc 1 2670 0
 5326 003c C3F34015 		ubfx	r5, r3, #5, #1
 5327 0040 1DB9     		cbnz	r5, .L448
2670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 5328              		.loc 1 2670 0 is_stmt 0 discriminator 2
 5329 0042 11B9     		cbnz	r1, .L448
2670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 5330              		.loc 1 2670 0 discriminator 4
 5331 0044 13F4807F 		tst	r3, #256
 5332 0048 F6D0     		beq	.L444
 5333              	.L448:
2670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 5334              		.loc 1 2670 0 discriminator 5
 5335 004a 10F0200F 		tst	r0, #32
 5336 004e F3D0     		beq	.L444
2673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 5337              		.loc 1 2673 0 is_stmt 1
 5338 0050 79B1     		cbz	r1, .L449
2675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 5339              		.loc 1 2675 0
 5340 0052 94F85D10 		ldrb	r1, [r4, #93]	@ zero_extendqisi2
 5341 0056 C9B2     		uxtb	r1, r1
 5342 0058 0329     		cmp	r1, #3
 5343 005a 53D0     		beq	.L450
2677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         __HAL_SPI_CLEAR_OVRFLAG(hspi);
 5344              		.loc 1 2677 0
 5345 005c 216E     		ldr	r1, [r4, #96]
 5346 005e 41F00401 		orr	r1, r1, #4
 5347 0062 2166     		str	r1, [r4, #96]
 5348              	.LBB7:
ARM GAS  /tmp/cc8c22lT.s 			page 183


2678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 5349              		.loc 1 2678 0
 5350 0064 0021     		movs	r1, #0
 5351 0066 0091     		str	r1, [sp]
 5352 0068 D168     		ldr	r1, [r2, #12]
 5353 006a 0091     		str	r1, [sp]
 5354 006c 9168     		ldr	r1, [r2, #8]
 5355 006e 0091     		str	r1, [sp]
 5356 0070 0099     		ldr	r1, [sp]
 5357              	.L449:
 5358              	.LBE7:
2688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 5359              		.loc 1 2688 0
 5360 0072 65B1     		cbz	r5, .L451
2690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       __HAL_SPI_CLEAR_MODFFLAG(hspi);
 5361              		.loc 1 2690 0
 5362 0074 216E     		ldr	r1, [r4, #96]
 5363 0076 41F00101 		orr	r1, r1, #1
 5364 007a 2166     		str	r1, [r4, #96]
 5365              	.LBB8:
2691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 5366              		.loc 1 2691 0
 5367 007c 0021     		movs	r1, #0
 5368 007e 0291     		str	r1, [sp, #8]
 5369 0080 9168     		ldr	r1, [r2, #8]
 5370 0082 0291     		str	r1, [sp, #8]
 5371 0084 1168     		ldr	r1, [r2]
 5372 0086 21F04001 		bic	r1, r1, #64
 5373 008a 1160     		str	r1, [r2]
 5374 008c 029A     		ldr	r2, [sp, #8]
 5375              	.L451:
 5376              	.LBE8:
2695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 5377              		.loc 1 2695 0
 5378 008e 13F4807F 		tst	r3, #256
 5379 0092 09D0     		beq	.L452
2697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       __HAL_SPI_CLEAR_FREFLAG(hspi);
 5380              		.loc 1 2697 0
 5381 0094 236E     		ldr	r3, [r4, #96]
 5382              	.LVL396:
 5383 0096 43F00803 		orr	r3, r3, #8
 5384 009a 2366     		str	r3, [r4, #96]
 5385              	.LBB9:
2698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 5386              		.loc 1 2698 0
 5387 009c 0023     		movs	r3, #0
 5388 009e 0393     		str	r3, [sp, #12]
 5389 00a0 2368     		ldr	r3, [r4]
 5390 00a2 9B68     		ldr	r3, [r3, #8]
 5391 00a4 0393     		str	r3, [sp, #12]
 5392 00a6 039B     		ldr	r3, [sp, #12]
 5393              	.L452:
 5394              	.LBE9:
2701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 5395              		.loc 1 2701 0
 5396 00a8 236E     		ldr	r3, [r4, #96]
 5397 00aa 002B     		cmp	r3, #0
ARM GAS  /tmp/cc8c22lT.s 			page 184


 5398 00ac C4D0     		beq	.L444
2704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 5399              		.loc 1 2704 0
 5400 00ae 2268     		ldr	r2, [r4]
 5401 00b0 5368     		ldr	r3, [r2, #4]
 5402 00b2 23F0E003 		bic	r3, r3, #224
 5403 00b6 5360     		str	r3, [r2, #4]
2706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Disable the SPI DMA requests if enabled */
 5404              		.loc 1 2706 0
 5405 00b8 0123     		movs	r3, #1
 5406 00ba 84F85D30 		strb	r3, [r4, #93]
2708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 5407              		.loc 1 2708 0
 5408 00be 10F0030F 		tst	r0, #3
 5409 00c2 27D0     		beq	.L453
2710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 5410              		.loc 1 2710 0
 5411 00c4 2268     		ldr	r2, [r4]
 5412 00c6 5368     		ldr	r3, [r2, #4]
 5413 00c8 23F00303 		bic	r3, r3, #3
 5414 00cc 5360     		str	r3, [r2, #4]
2713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
 5415              		.loc 1 2713 0
 5416 00ce A36D     		ldr	r3, [r4, #88]
 5417 00d0 4BB1     		cbz	r3, .L454
2717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmarx))
 5418              		.loc 1 2717 0
 5419 00d2 124A     		ldr	r2, .L456
 5420 00d4 1A65     		str	r2, [r3, #80]
2718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           {
 5421              		.loc 1 2718 0
 5422 00d6 A06D     		ldr	r0, [r4, #88]
 5423              	.LVL397:
 5424 00d8 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 5425              	.LVL398:
 5426 00dc 18B1     		cbz	r0, .L454
2720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           }
 5427              		.loc 1 2720 0
 5428 00de 236E     		ldr	r3, [r4, #96]
 5429 00e0 43F04003 		orr	r3, r3, #64
 5430 00e4 2366     		str	r3, [r4, #96]
 5431              	.L454:
2724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
 5432              		.loc 1 2724 0
 5433 00e6 636D     		ldr	r3, [r4, #84]
 5434 00e8 002B     		cmp	r3, #0
 5435 00ea A5D0     		beq	.L444
2728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmatx))
 5436              		.loc 1 2728 0
 5437 00ec 0B4A     		ldr	r2, .L456
 5438 00ee 1A65     		str	r2, [r3, #80]
2729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           {
 5439              		.loc 1 2729 0
 5440 00f0 606D     		ldr	r0, [r4, #84]
 5441 00f2 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 5442              	.LVL399:
 5443 00f6 0028     		cmp	r0, #0
ARM GAS  /tmp/cc8c22lT.s 			page 185


 5444 00f8 9ED0     		beq	.L444
2731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           }
 5445              		.loc 1 2731 0
 5446 00fa 236E     		ldr	r3, [r4, #96]
 5447 00fc 43F04003 		orr	r3, r3, #64
 5448 0100 2366     		str	r3, [r4, #96]
 5449 0102 99E7     		b	.L444
 5450              	.LVL400:
 5451              	.L450:
 5452              	.LBB10:
2682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         return;
 5453              		.loc 1 2682 0
 5454 0104 0023     		movs	r3, #0
 5455              	.LVL401:
 5456 0106 0193     		str	r3, [sp, #4]
 5457 0108 D368     		ldr	r3, [r2, #12]
 5458 010a 0193     		str	r3, [sp, #4]
 5459 010c 9368     		ldr	r3, [r2, #8]
 5460 010e 0193     		str	r3, [sp, #4]
 5461 0110 019B     		ldr	r3, [sp, #4]
 5462              	.LBE10:
2683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 5463              		.loc 1 2683 0
 5464 0112 91E7     		b	.L444
 5465              	.L453:
2741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 5466              		.loc 1 2741 0
 5467 0114 2046     		mov	r0, r4
 5468              	.LVL402:
 5469 0116 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 5470              	.LVL403:
 5471 011a 8DE7     		b	.L444
 5472              	.L457:
 5473              		.align	2
 5474              	.L456:
 5475 011c 00000000 		.word	SPI_DMAAbortOnError
 5476              		.cfi_endproc
 5477              	.LFE159:
 5479              		.section	.text.SPI_DMAAbortOnError,"ax",%progbits
 5480              		.align	1
 5481              		.syntax unified
 5482              		.thumb
 5483              		.thumb_func
 5484              		.fpu fpv5-sp-d16
 5486              	SPI_DMAAbortOnError:
 5487              	.LFB177:
3260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 5488              		.loc 1 3260 0
 5489              		.cfi_startproc
 5490              		@ args = 0, pretend = 0, frame = 0
 5491              		@ frame_needed = 0, uses_anonymous_args = 0
 5492              	.LVL404:
 5493 0000 08B5     		push	{r3, lr}
 5494              	.LCFI70:
 5495              		.cfi_def_cfa_offset 8
 5496              		.cfi_offset 3, -8
 5497              		.cfi_offset 14, -4
ARM GAS  /tmp/cc8c22lT.s 			page 186


3261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 5498              		.loc 1 3261 0
 5499 0002 806B     		ldr	r0, [r0, #56]
 5500              	.LVL405:
3262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 5501              		.loc 1 3262 0
 5502 0004 0023     		movs	r3, #0
 5503 0006 A0F84630 		strh	r3, [r0, #70]	@ movhi
3263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 5504              		.loc 1 3263 0
 5505 000a C387     		strh	r3, [r0, #62]	@ movhi
3269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 5506              		.loc 1 3269 0
 5507 000c FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 5508              	.LVL406:
3271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 5509              		.loc 1 3271 0
 5510 0010 08BD     		pop	{r3, pc}
 5511              		.cfi_endproc
 5512              	.LFE177:
 5514              		.section	.text.HAL_SPI_AbortCpltCallback,"ax",%progbits
 5515              		.align	1
 5516              		.weak	HAL_SPI_AbortCpltCallback
 5517              		.syntax unified
 5518              		.thumb
 5519              		.thumb_func
 5520              		.fpu fpv5-sp-d16
 5522              	HAL_SPI_AbortCpltCallback:
 5523              	.LFB167:
2870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 5524              		.loc 1 2870 0
 5525              		.cfi_startproc
 5526              		@ args = 0, pretend = 0, frame = 0
 5527              		@ frame_needed = 0, uses_anonymous_args = 0
 5528              		@ link register save eliminated.
 5529              	.LVL407:
2877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 5530              		.loc 1 2877 0
 5531 0000 7047     		bx	lr
 5532              		.cfi_endproc
 5533              	.LFE167:
 5535              		.section	.text.HAL_SPI_Abort_IT,"ax",%progbits
 5536              		.align	1
 5537              		.global	HAL_SPI_Abort_IT
 5538              		.syntax unified
 5539              		.thumb
 5540              		.thumb_func
 5541              		.fpu fpv5-sp-d16
 5543              	HAL_SPI_Abort_IT:
 5544              	.LFB155:
2408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode;
 5545              		.loc 1 2408 0
 5546              		.cfi_startproc
 5547              		@ args = 0, pretend = 0, frame = 16
 5548              		@ frame_needed = 0, uses_anonymous_args = 0
 5549              	.LVL408:
 5550 0000 70B5     		push	{r4, r5, r6, lr}
ARM GAS  /tmp/cc8c22lT.s 			page 187


 5551              	.LCFI71:
 5552              		.cfi_def_cfa_offset 16
 5553              		.cfi_offset 4, -16
 5554              		.cfi_offset 5, -12
 5555              		.cfi_offset 6, -8
 5556              		.cfi_offset 14, -4
 5557 0002 84B0     		sub	sp, sp, #16
 5558              	.LCFI72:
 5559              		.cfi_def_cfa_offset 32
 5560 0004 0446     		mov	r4, r0
 5561              	.LVL409:
2416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   count = resetcount;
 5562              		.loc 1 2416 0
 5563 0006 504B     		ldr	r3, .L487
 5564 0008 1B68     		ldr	r3, [r3]
 5565 000a 504A     		ldr	r2, .L487+4
 5566 000c A2FB0323 		umull	r2, r3, r2, r3
 5567 0010 5B0A     		lsrs	r3, r3, #9
 5568 0012 6422     		movs	r2, #100
 5569 0014 02FB03F3 		mul	r3, r2, r3
 5570 0018 0293     		str	r3, [sp, #8]
2417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 5571              		.loc 1 2417 0
 5572 001a 029B     		ldr	r3, [sp, #8]
 5573 001c 0393     		str	r3, [sp, #12]
2420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 5574              		.loc 1 2420 0
 5575 001e 0268     		ldr	r2, [r0]
 5576 0020 5368     		ldr	r3, [r2, #4]
 5577 0022 23F02003 		bic	r3, r3, #32
 5578 0026 5360     		str	r3, [r2, #4]
2423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 5579              		.loc 1 2423 0
 5580 0028 0268     		ldr	r2, [r0]
 5581 002a 5368     		ldr	r3, [r2, #4]
 5582 002c 13F0800F 		tst	r3, #128
 5583 0030 12D0     		beq	.L462
2425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
 5584              		.loc 1 2425 0
 5585 0032 474B     		ldr	r3, .L487+8
 5586 0034 0365     		str	r3, [r0, #80]
 5587              	.L465:
2429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 5588              		.loc 1 2429 0
 5589 0036 039B     		ldr	r3, [sp, #12]
 5590 0038 43B1     		cbz	r3, .L484
2434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 5591              		.loc 1 2434 0
 5592 003a 039B     		ldr	r3, [sp, #12]
 5593 003c 013B     		subs	r3, r3, #1
 5594 003e 0393     		str	r3, [sp, #12]
2436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Reset Timeout Counter */
 5595              		.loc 1 2436 0
 5596 0040 94F85D30 		ldrb	r3, [r4, #93]	@ zero_extendqisi2
 5597 0044 DBB2     		uxtb	r3, r3
 5598 0046 072B     		cmp	r3, #7
 5599 0048 F5D1     		bne	.L465
ARM GAS  /tmp/cc8c22lT.s 			page 188


 5600 004a 03E0     		b	.L464
 5601              	.L484:
2431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         break;
 5602              		.loc 1 2431 0
 5603 004c 236E     		ldr	r3, [r4, #96]
 5604 004e 43F04003 		orr	r3, r3, #64
 5605 0052 2366     		str	r3, [r4, #96]
 5606              	.L464:
2438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 5607              		.loc 1 2438 0
 5608 0054 029B     		ldr	r3, [sp, #8]
 5609 0056 0393     		str	r3, [sp, #12]
 5610              	.L462:
2441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 5611              		.loc 1 2441 0
 5612 0058 5368     		ldr	r3, [r2, #4]
 5613 005a 13F0400F 		tst	r3, #64
 5614 005e 12D0     		beq	.L466
2443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
 5615              		.loc 1 2443 0
 5616 0060 3C4B     		ldr	r3, .L487+12
 5617 0062 E364     		str	r3, [r4, #76]
 5618              	.L469:
2447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 5619              		.loc 1 2447 0
 5620 0064 039B     		ldr	r3, [sp, #12]
 5621 0066 43B1     		cbz	r3, .L485
2452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 5622              		.loc 1 2452 0
 5623 0068 039B     		ldr	r3, [sp, #12]
 5624 006a 013B     		subs	r3, r3, #1
 5625 006c 0393     		str	r3, [sp, #12]
2454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Reset Timeout Counter */
 5626              		.loc 1 2454 0
 5627 006e 94F85D30 		ldrb	r3, [r4, #93]	@ zero_extendqisi2
 5628 0072 DBB2     		uxtb	r3, r3
 5629 0074 072B     		cmp	r3, #7
 5630 0076 F5D1     		bne	.L469
 5631 0078 03E0     		b	.L468
 5632              	.L485:
2449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         break;
 5633              		.loc 1 2449 0
 5634 007a 236E     		ldr	r3, [r4, #96]
 5635 007c 43F04003 		orr	r3, r3, #64
 5636 0080 2366     		str	r3, [r4, #96]
 5637              	.L468:
2456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 5638              		.loc 1 2456 0
 5639 0082 029B     		ldr	r3, [sp, #8]
 5640 0084 0393     		str	r3, [sp, #12]
 5641              	.L466:
2462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 5642              		.loc 1 2462 0
 5643 0086 636D     		ldr	r3, [r4, #84]
 5644 0088 2BB1     		cbz	r3, .L470
2466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 5645              		.loc 1 2466 0
ARM GAS  /tmp/cc8c22lT.s 			page 189


 5646 008a 5268     		ldr	r2, [r2, #4]
 5647 008c 12F0020F 		tst	r2, #2
 5648 0090 1BD0     		beq	.L471
2468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 5649              		.loc 1 2468 0
 5650 0092 314A     		ldr	r2, .L487+16
 5651 0094 1A65     		str	r2, [r3, #80]
 5652              	.L470:
2476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 5653              		.loc 1 2476 0
 5654 0096 A36D     		ldr	r3, [r4, #88]
 5655 0098 33B1     		cbz	r3, .L472
2480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 5656              		.loc 1 2480 0
 5657 009a 2268     		ldr	r2, [r4]
 5658 009c 5268     		ldr	r2, [r2, #4]
 5659 009e 12F0010F 		tst	r2, #1
 5660 00a2 15D0     		beq	.L473
2482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 5661              		.loc 1 2482 0
 5662 00a4 2D4A     		ldr	r2, .L487+20
 5663 00a6 1A65     		str	r2, [r3, #80]
 5664              	.L472:
2491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 5665              		.loc 1 2491 0
 5666 00a8 2368     		ldr	r3, [r4]
 5667 00aa 5B68     		ldr	r3, [r3, #4]
 5668 00ac 13F0020F 		tst	r3, #2
 5669 00b0 11D0     		beq	.L478
2494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 5670              		.loc 1 2494 0
 5671 00b2 606D     		ldr	r0, [r4, #84]
 5672              	.LVL410:
 5673 00b4 28B3     		cbz	r0, .L479
2497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 5674              		.loc 1 2497 0
 5675 00b6 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 5676              	.LVL411:
 5677 00ba 20B3     		cbz	r0, .L480
2499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 5678              		.loc 1 2499 0
 5679 00bc 636D     		ldr	r3, [r4, #84]
 5680 00be 0022     		movs	r2, #0
 5681 00c0 1A65     		str	r2, [r3, #80]
2500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 5682              		.loc 1 2500 0
 5683 00c2 4023     		movs	r3, #64
 5684 00c4 2366     		str	r3, [r4, #96]
2415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   resetcount = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
 5685              		.loc 1 2415 0
 5686 00c6 0126     		movs	r6, #1
 5687 00c8 06E0     		b	.L474
 5688              	.LVL412:
 5689              	.L471:
2472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 5690              		.loc 1 2472 0
 5691 00ca 0022     		movs	r2, #0
ARM GAS  /tmp/cc8c22lT.s 			page 190


 5692 00cc 1A65     		str	r2, [r3, #80]
 5693 00ce E2E7     		b	.L470
 5694              	.L473:
2486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 5695              		.loc 1 2486 0
 5696 00d0 0022     		movs	r2, #0
 5697 00d2 1A65     		str	r2, [r3, #80]
 5698 00d4 E8E7     		b	.L472
 5699              	.L478:
2415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   resetcount = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
 5700              		.loc 1 2415 0
 5701 00d6 0126     		movs	r6, #1
 5702              	.LVL413:
 5703              	.L474:
2509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 5704              		.loc 1 2509 0
 5705 00d8 2368     		ldr	r3, [r4]
 5706 00da 5B68     		ldr	r3, [r3, #4]
 5707 00dc 13F0010F 		tst	r3, #1
 5708 00e0 0AD0     		beq	.L475
2512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 5709              		.loc 1 2512 0
 5710 00e2 A06D     		ldr	r0, [r4, #88]
 5711 00e4 40B1     		cbz	r0, .L475
2515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 5712              		.loc 1 2515 0
 5713 00e6 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 5714              	.LVL414:
 5715 00ea 0546     		mov	r5, r0
 5716 00ec 30B1     		cbz	r0, .L476
2517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 5717              		.loc 1 2517 0
 5718 00ee A36D     		ldr	r3, [r4, #88]
 5719 00f0 0022     		movs	r2, #0
 5720 00f2 1A65     		str	r2, [r3, #80]
2518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 5721              		.loc 1 2518 0
 5722 00f4 4023     		movs	r3, #64
 5723 00f6 2366     		str	r3, [r4, #96]
 5724              	.L475:
2527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 5725              		.loc 1 2527 0
 5726 00f8 3EB9     		cbnz	r6, .L486
2414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   abortcplt = 1U;
 5727              		.loc 1 2414 0
 5728 00fa 0025     		movs	r5, #0
 5729              	.LVL415:
 5730              	.L476:
2561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 5731              		.loc 1 2561 0
 5732 00fc 2846     		mov	r0, r5
 5733 00fe 04B0     		add	sp, sp, #16
 5734              	.LCFI73:
 5735              		.cfi_remember_state
 5736              		.cfi_def_cfa_offset 16
 5737              		@ sp needed
 5738 0100 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  /tmp/cc8c22lT.s 			page 191


 5739              	.LVL416:
 5740              	.L479:
 5741              	.LCFI74:
 5742              		.cfi_restore_state
2415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   resetcount = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
 5743              		.loc 1 2415 0
 5744 0102 0126     		movs	r6, #1
 5745 0104 E8E7     		b	.L474
 5746              	.L480:
2504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 5747              		.loc 1 2504 0
 5748 0106 0026     		movs	r6, #0
 5749 0108 E6E7     		b	.L474
 5750              	.LVL417:
 5751              	.L486:
2530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->TxXferCount = 0U;
 5752              		.loc 1 2530 0
 5753 010a 0023     		movs	r3, #0
 5754 010c A4F84630 		strh	r3, [r4, #70]	@ movhi
2531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 5755              		.loc 1 2531 0
 5756 0110 E387     		strh	r3, [r4, #62]	@ movhi
2534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 5757              		.loc 1 2534 0
 5758 0112 236E     		ldr	r3, [r4, #96]
 5759 0114 402B     		cmp	r3, #64
 5760 0116 14D0     		beq	.L482
2542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 5761              		.loc 1 2542 0
 5762 0118 0025     		movs	r5, #0
 5763 011a 2566     		str	r5, [r4, #96]
 5764              	.L477:
 5765              	.LVL418:
 5766              	.LBB11:
2546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_CLEAR_FREFLAG(hspi);
 5767              		.loc 1 2546 0
 5768 011c 0022     		movs	r2, #0
 5769 011e 0092     		str	r2, [sp]
 5770 0120 2368     		ldr	r3, [r4]
 5771 0122 D968     		ldr	r1, [r3, #12]
 5772 0124 0091     		str	r1, [sp]
 5773 0126 9968     		ldr	r1, [r3, #8]
 5774 0128 0091     		str	r1, [sp]
 5775 012a 0099     		ldr	r1, [sp]
 5776              	.LBE11:
 5777              	.LBB12:
2547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 5778              		.loc 1 2547 0
 5779 012c 0192     		str	r2, [sp, #4]
 5780 012e 9B68     		ldr	r3, [r3, #8]
 5781 0130 0193     		str	r3, [sp, #4]
 5782 0132 019B     		ldr	r3, [sp, #4]
 5783              	.LBE12:
2550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 5784              		.loc 1 2550 0
 5785 0134 0123     		movs	r3, #1
 5786 0136 84F85D30 		strb	r3, [r4, #93]
ARM GAS  /tmp/cc8c22lT.s 			page 192


2556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 5787              		.loc 1 2556 0
 5788 013a 2046     		mov	r0, r4
 5789 013c FFF7FEFF 		bl	HAL_SPI_AbortCpltCallback
 5790              	.LVL419:
 5791 0140 DCE7     		b	.L476
 5792              	.LVL420:
 5793              	.L482:
2537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 5794              		.loc 1 2537 0
 5795 0142 0125     		movs	r5, #1
 5796 0144 EAE7     		b	.L477
 5797              	.L488:
 5798 0146 00BF     		.align	2
 5799              	.L487:
 5800 0148 00000000 		.word	SystemCoreClock
 5801 014c F1197605 		.word	91625969
 5802 0150 00000000 		.word	SPI_AbortTx_ISR
 5803 0154 00000000 		.word	SPI_AbortRx_ISR
 5804 0158 00000000 		.word	SPI_DMATxAbortCallback
 5805 015c 00000000 		.word	SPI_DMARxAbortCallback
 5806              		.cfi_endproc
 5807              	.LFE155:
 5809              		.section	.text.SPI_DMARxAbortCallback,"ax",%progbits
 5810              		.align	1
 5811              		.syntax unified
 5812              		.thumb
 5813              		.thumb_func
 5814              		.fpu fpv5-sp-d16
 5816              	SPI_DMARxAbortCallback:
 5817              	.LFB179:
3348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 5818              		.loc 1 3348 0
 5819              		.cfi_startproc
 5820              		@ args = 0, pretend = 0, frame = 8
 5821              		@ frame_needed = 0, uses_anonymous_args = 0
 5822              	.LVL421:
 5823 0000 30B5     		push	{r4, r5, lr}
 5824              	.LCFI75:
 5825              		.cfi_def_cfa_offset 12
 5826              		.cfi_offset 4, -12
 5827              		.cfi_offset 5, -8
 5828              		.cfi_offset 14, -4
 5829 0002 85B0     		sub	sp, sp, #20
 5830              	.LCFI76:
 5831              		.cfi_def_cfa_offset 32
3349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 5832              		.loc 1 3349 0
 5833 0004 846B     		ldr	r4, [r0, #56]
 5834              	.LVL422:
3352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 5835              		.loc 1 3352 0
 5836 0006 2268     		ldr	r2, [r4]
 5837 0008 1368     		ldr	r3, [r2]
 5838 000a 23F04003 		bic	r3, r3, #64
 5839 000e 1360     		str	r3, [r2]
3354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
ARM GAS  /tmp/cc8c22lT.s 			page 193


 5840              		.loc 1 3354 0
 5841 0010 A36D     		ldr	r3, [r4, #88]
 5842 0012 0025     		movs	r5, #0
 5843 0014 1D65     		str	r5, [r3, #80]
3357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 5844              		.loc 1 3357 0
 5845 0016 2268     		ldr	r2, [r4]
 5846 0018 5368     		ldr	r3, [r2, #4]
 5847 001a 23F00103 		bic	r3, r3, #1
 5848 001e 5360     		str	r3, [r2, #4]
3360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 5849              		.loc 1 3360 0
 5850 0020 FFF7FEFF 		bl	HAL_GetTick
 5851              	.LVL423:
 5852 0024 0090     		str	r0, [sp]
 5853 0026 6423     		movs	r3, #100
 5854 0028 2A46     		mov	r2, r5
 5855 002a 8021     		movs	r1, #128
 5856 002c 2046     		mov	r0, r4
 5857 002e FFF7FEFF 		bl	SPI_WaitFlagStateUntilTimeout
 5858              	.LVL424:
 5859 0032 08B1     		cbz	r0, .L490
3362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 5860              		.loc 1 3362 0
 5861 0034 4023     		movs	r3, #64
 5862 0036 2366     		str	r3, [r4, #96]
 5863              	.L490:
3366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 5864              		.loc 1 3366 0
 5865 0038 FFF7FEFF 		bl	HAL_GetTick
 5866              	.LVL425:
 5867 003c 0090     		str	r0, [sp]
 5868 003e 6423     		movs	r3, #100
 5869 0040 0022     		movs	r2, #0
 5870 0042 4FF4C061 		mov	r1, #1536
 5871 0046 2046     		mov	r0, r4
 5872 0048 FFF7FEFF 		bl	SPI_WaitFifoStateUntilTimeout
 5873              	.LVL426:
 5874 004c 08B1     		cbz	r0, .L491
3368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 5875              		.loc 1 3368 0
 5876 004e 4023     		movs	r3, #64
 5877 0050 2366     		str	r3, [r4, #96]
 5878              	.L491:
3372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 5879              		.loc 1 3372 0
 5880 0052 636D     		ldr	r3, [r4, #84]
 5881 0054 0BB1     		cbz	r3, .L492
3374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 5882              		.loc 1 3374 0
 5883 0056 1B6D     		ldr	r3, [r3, #80]
 5884 0058 D3B9     		cbnz	r3, .L489
 5885              	.L492:
3381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 5886              		.loc 1 3381 0
 5887 005a 0023     		movs	r3, #0
 5888 005c A4F84630 		strh	r3, [r4, #70]	@ movhi
ARM GAS  /tmp/cc8c22lT.s 			page 194


3382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 5889              		.loc 1 3382 0
 5890 0060 E387     		strh	r3, [r4, #62]	@ movhi
3385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 5891              		.loc 1 3385 0
 5892 0062 236E     		ldr	r3, [r4, #96]
 5893 0064 402B     		cmp	r3, #64
 5894 0066 01D0     		beq	.L494
3388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 5895              		.loc 1 3388 0
 5896 0068 0023     		movs	r3, #0
 5897 006a 2366     		str	r3, [r4, #96]
 5898              	.L494:
 5899              	.LBB13:
3392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_CLEAR_FREFLAG(hspi);
 5900              		.loc 1 3392 0
 5901 006c 0022     		movs	r2, #0
 5902 006e 0292     		str	r2, [sp, #8]
 5903 0070 2368     		ldr	r3, [r4]
 5904 0072 D968     		ldr	r1, [r3, #12]
 5905 0074 0291     		str	r1, [sp, #8]
 5906 0076 9968     		ldr	r1, [r3, #8]
 5907 0078 0291     		str	r1, [sp, #8]
 5908 007a 0299     		ldr	r1, [sp, #8]
 5909              	.LBE13:
 5910              	.LBB14:
3393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 5911              		.loc 1 3393 0
 5912 007c 0392     		str	r2, [sp, #12]
 5913 007e 9B68     		ldr	r3, [r3, #8]
 5914 0080 0393     		str	r3, [sp, #12]
 5915 0082 039B     		ldr	r3, [sp, #12]
 5916              	.LBE14:
3396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 5917              		.loc 1 3396 0
 5918 0084 0123     		movs	r3, #1
 5919 0086 84F85D30 		strb	r3, [r4, #93]
3402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 5920              		.loc 1 3402 0
 5921 008a 2046     		mov	r0, r4
 5922 008c FFF7FEFF 		bl	HAL_SPI_AbortCpltCallback
 5923              	.LVL427:
 5924              	.L489:
3404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 5925              		.loc 1 3404 0
 5926 0090 05B0     		add	sp, sp, #20
 5927              	.LCFI77:
 5928              		.cfi_def_cfa_offset 12
 5929              		@ sp needed
 5930 0092 30BD     		pop	{r4, r5, pc}
 5931              		.cfi_endproc
 5932              	.LFE179:
 5934              		.section	.text.SPI_DMATxAbortCallback,"ax",%progbits
 5935              		.align	1
 5936              		.syntax unified
 5937              		.thumb
 5938              		.thumb_func
ARM GAS  /tmp/cc8c22lT.s 			page 195


 5939              		.fpu fpv5-sp-d16
 5941              	SPI_DMATxAbortCallback:
 5942              	.LFB178:
3282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 5943              		.loc 1 3282 0
 5944              		.cfi_startproc
 5945              		@ args = 0, pretend = 0, frame = 8
 5946              		@ frame_needed = 0, uses_anonymous_args = 0
 5947              	.LVL428:
 5948 0000 10B5     		push	{r4, lr}
 5949              	.LCFI78:
 5950              		.cfi_def_cfa_offset 8
 5951              		.cfi_offset 4, -8
 5952              		.cfi_offset 14, -4
 5953 0002 84B0     		sub	sp, sp, #16
 5954              	.LCFI79:
 5955              		.cfi_def_cfa_offset 24
3283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 5956              		.loc 1 3283 0
 5957 0004 846B     		ldr	r4, [r0, #56]
 5958              	.LVL429:
3285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 5959              		.loc 1 3285 0
 5960 0006 636D     		ldr	r3, [r4, #84]
 5961 0008 0022     		movs	r2, #0
 5962 000a 1A65     		str	r2, [r3, #80]
3288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 5963              		.loc 1 3288 0
 5964 000c 2268     		ldr	r2, [r4]
 5965 000e 5368     		ldr	r3, [r2, #4]
 5966 0010 23F00203 		bic	r3, r3, #2
 5967 0014 5360     		str	r3, [r2, #4]
3290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 5968              		.loc 1 3290 0
 5969 0016 FFF7FEFF 		bl	HAL_GetTick
 5970              	.LVL430:
 5971 001a 0246     		mov	r2, r0
 5972 001c 6421     		movs	r1, #100
 5973 001e 2046     		mov	r0, r4
 5974 0020 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 5975              	.LVL431:
 5976 0024 08B1     		cbz	r0, .L497
3292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 5977              		.loc 1 3292 0
 5978 0026 4023     		movs	r3, #64
 5979 0028 2366     		str	r3, [r4, #96]
 5980              	.L497:
3296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 5981              		.loc 1 3296 0
 5982 002a 2268     		ldr	r2, [r4]
 5983 002c 1368     		ldr	r3, [r2]
 5984 002e 23F04003 		bic	r3, r3, #64
 5985 0032 1360     		str	r3, [r2]
3299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 5986              		.loc 1 3299 0
 5987 0034 FFF7FEFF 		bl	HAL_GetTick
 5988              	.LVL432:
ARM GAS  /tmp/cc8c22lT.s 			page 196


 5989 0038 0090     		str	r0, [sp]
 5990 003a 6423     		movs	r3, #100
 5991 003c 0022     		movs	r2, #0
 5992 003e 4FF4C061 		mov	r1, #1536
 5993 0042 2046     		mov	r0, r4
 5994 0044 FFF7FEFF 		bl	SPI_WaitFifoStateUntilTimeout
 5995              	.LVL433:
 5996 0048 08B1     		cbz	r0, .L498
3301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 5997              		.loc 1 3301 0
 5998 004a 4023     		movs	r3, #64
 5999 004c 2366     		str	r3, [r4, #96]
 6000              	.L498:
3305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 6001              		.loc 1 3305 0
 6002 004e A36D     		ldr	r3, [r4, #88]
 6003 0050 0BB1     		cbz	r3, .L499
3307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 6004              		.loc 1 3307 0
 6005 0052 1B6D     		ldr	r3, [r3, #80]
 6006 0054 D3B9     		cbnz	r3, .L496
 6007              	.L499:
3314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 6008              		.loc 1 3314 0
 6009 0056 0023     		movs	r3, #0
 6010 0058 A4F84630 		strh	r3, [r4, #70]	@ movhi
3315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 6011              		.loc 1 3315 0
 6012 005c E387     		strh	r3, [r4, #62]	@ movhi
3318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 6013              		.loc 1 3318 0
 6014 005e 236E     		ldr	r3, [r4, #96]
 6015 0060 402B     		cmp	r3, #64
 6016 0062 01D0     		beq	.L501
3321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 6017              		.loc 1 3321 0
 6018 0064 0023     		movs	r3, #0
 6019 0066 2366     		str	r3, [r4, #96]
 6020              	.L501:
 6021              	.LBB15:
3325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_CLEAR_FREFLAG(hspi);
 6022              		.loc 1 3325 0
 6023 0068 0022     		movs	r2, #0
 6024 006a 0292     		str	r2, [sp, #8]
 6025 006c 2368     		ldr	r3, [r4]
 6026 006e D968     		ldr	r1, [r3, #12]
 6027 0070 0291     		str	r1, [sp, #8]
 6028 0072 9968     		ldr	r1, [r3, #8]
 6029 0074 0291     		str	r1, [sp, #8]
 6030 0076 0299     		ldr	r1, [sp, #8]
 6031              	.LBE15:
 6032              	.LBB16:
3326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 6033              		.loc 1 3326 0
 6034 0078 0392     		str	r2, [sp, #12]
 6035 007a 9B68     		ldr	r3, [r3, #8]
 6036 007c 0393     		str	r3, [sp, #12]
ARM GAS  /tmp/cc8c22lT.s 			page 197


 6037 007e 039B     		ldr	r3, [sp, #12]
 6038              	.LBE16:
3329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 6039              		.loc 1 3329 0
 6040 0080 0123     		movs	r3, #1
 6041 0082 84F85D30 		strb	r3, [r4, #93]
3335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 6042              		.loc 1 3335 0
 6043 0086 2046     		mov	r0, r4
 6044 0088 FFF7FEFF 		bl	HAL_SPI_AbortCpltCallback
 6045              	.LVL434:
 6046              	.L496:
3337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 6047              		.loc 1 3337 0
 6048 008c 04B0     		add	sp, sp, #16
 6049              	.LCFI80:
 6050              		.cfi_def_cfa_offset 8
 6051              		@ sp needed
 6052 008e 10BD     		pop	{r4, pc}
 6053              		.cfi_endproc
 6054              	.LFE178:
 6056              		.section	.text.HAL_SPI_GetState,"ax",%progbits
 6057              		.align	1
 6058              		.global	HAL_SPI_GetState
 6059              		.syntax unified
 6060              		.thumb
 6061              		.thumb_func
 6062              		.fpu fpv5-sp-d16
 6064              	HAL_SPI_GetState:
 6065              	.LFB168:
2905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Return SPI handle state */
 6066              		.loc 1 2905 0
 6067              		.cfi_startproc
 6068              		@ args = 0, pretend = 0, frame = 0
 6069              		@ frame_needed = 0, uses_anonymous_args = 0
 6070              		@ link register save eliminated.
 6071              	.LVL435:
2907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 6072              		.loc 1 2907 0
 6073 0000 90F85D00 		ldrb	r0, [r0, #93]	@ zero_extendqisi2
 6074              	.LVL436:
2908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 6075              		.loc 1 2908 0
 6076 0004 7047     		bx	lr
 6077              		.cfi_endproc
 6078              	.LFE168:
 6080              		.section	.text.HAL_SPI_GetError,"ax",%progbits
 6081              		.align	1
 6082              		.global	HAL_SPI_GetError
 6083              		.syntax unified
 6084              		.thumb
 6085              		.thumb_func
 6086              		.fpu fpv5-sp-d16
 6088              	HAL_SPI_GetError:
 6089              	.LFB169:
2917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Return SPI ErrorCode */
 6090              		.loc 1 2917 0
ARM GAS  /tmp/cc8c22lT.s 			page 198


 6091              		.cfi_startproc
 6092              		@ args = 0, pretend = 0, frame = 0
 6093              		@ frame_needed = 0, uses_anonymous_args = 0
 6094              		@ link register save eliminated.
 6095              	.LVL437:
2919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 6096              		.loc 1 2919 0
 6097 0000 006E     		ldr	r0, [r0, #96]
 6098              	.LVL438:
2920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 6099              		.loc 1 2920 0
 6100 0002 7047     		bx	lr
 6101              		.cfi_endproc
 6102              	.LFE169:
 6104              		.text
 6105              	.Letext0:
 6106              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 6107              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 6108              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 6109              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 6110              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 6111              		.file 7 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 6112              		.file 8 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 6113              		.file 9 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 6114              		.file 10 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_spi.h"
 6115              		.file 11 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
ARM GAS  /tmp/cc8c22lT.s 			page 199


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f7xx_hal_spi.c
     /tmp/cc8c22lT.s:18     .text.SPI_WaitFlagStateUntilTimeout:0000000000000000 $t
     /tmp/cc8c22lT.s:24     .text.SPI_WaitFlagStateUntilTimeout:0000000000000000 SPI_WaitFlagStateUntilTimeout
     /tmp/cc8c22lT.s:128    .text.SPI_WaitFifoStateUntilTimeout:0000000000000000 $t
     /tmp/cc8c22lT.s:134    .text.SPI_WaitFifoStateUntilTimeout:0000000000000000 SPI_WaitFifoStateUntilTimeout
     /tmp/cc8c22lT.s:246    .text.SPI_EndRxTxTransaction:0000000000000000 $t
     /tmp/cc8c22lT.s:252    .text.SPI_EndRxTxTransaction:0000000000000000 SPI_EndRxTxTransaction
     /tmp/cc8c22lT.s:339    .text.SPI_EndRxTransaction:0000000000000000 $t
     /tmp/cc8c22lT.s:345    .text.SPI_EndRxTransaction:0000000000000000 SPI_EndRxTransaction
     /tmp/cc8c22lT.s:451    .text.SPI_AbortRx_ISR:0000000000000000 $t
     /tmp/cc8c22lT.s:457    .text.SPI_AbortRx_ISR:0000000000000000 SPI_AbortRx_ISR
     /tmp/cc8c22lT.s:555    .text.SPI_AbortRx_ISR:0000000000000088 $d
     /tmp/cc8c22lT.s:561    .text.SPI_AbortTx_ISR:0000000000000000 $t
     /tmp/cc8c22lT.s:567    .text.SPI_AbortTx_ISR:0000000000000000 SPI_AbortTx_ISR
     /tmp/cc8c22lT.s:722    .text.SPI_AbortTx_ISR:00000000000000e8 $d
     /tmp/cc8c22lT.s:728    .text.HAL_SPI_MspInit:0000000000000000 $t
     /tmp/cc8c22lT.s:735    .text.HAL_SPI_MspInit:0000000000000000 HAL_SPI_MspInit
     /tmp/cc8c22lT.s:749    .text.HAL_SPI_Init:0000000000000000 $t
     /tmp/cc8c22lT.s:756    .text.HAL_SPI_Init:0000000000000000 HAL_SPI_Init
     /tmp/cc8c22lT.s:895    .text.HAL_SPI_MspDeInit:0000000000000000 $t
     /tmp/cc8c22lT.s:902    .text.HAL_SPI_MspDeInit:0000000000000000 HAL_SPI_MspDeInit
     /tmp/cc8c22lT.s:916    .text.HAL_SPI_DeInit:0000000000000000 $t
     /tmp/cc8c22lT.s:923    .text.HAL_SPI_DeInit:0000000000000000 HAL_SPI_DeInit
     /tmp/cc8c22lT.s:974    .text.HAL_SPI_Transmit:0000000000000000 $t
     /tmp/cc8c22lT.s:981    .text.HAL_SPI_Transmit:0000000000000000 HAL_SPI_Transmit
     /tmp/cc8c22lT.s:1334   .text.HAL_SPI_TransmitReceive:0000000000000000 $t
     /tmp/cc8c22lT.s:1341   .text.HAL_SPI_TransmitReceive:0000000000000000 HAL_SPI_TransmitReceive
     /tmp/cc8c22lT.s:1854   .text.HAL_SPI_Receive:0000000000000000 $t
     /tmp/cc8c22lT.s:1861   .text.HAL_SPI_Receive:0000000000000000 HAL_SPI_Receive
     /tmp/cc8c22lT.s:2151   .text.HAL_SPI_Transmit_IT:0000000000000000 $t
     /tmp/cc8c22lT.s:2158   .text.HAL_SPI_Transmit_IT:0000000000000000 HAL_SPI_Transmit_IT
     /tmp/cc8c22lT.s:2285   .text.HAL_SPI_Transmit_IT:00000000000000a4 $d
     /tmp/cc8c22lT.s:4344   .text.SPI_TxISR_16BIT:0000000000000000 SPI_TxISR_16BIT
     /tmp/cc8c22lT.s:4293   .text.SPI_TxISR_8BIT:0000000000000000 SPI_TxISR_8BIT
     /tmp/cc8c22lT.s:2291   .text.HAL_SPI_TransmitReceive_IT:0000000000000000 $t
     /tmp/cc8c22lT.s:2298   .text.HAL_SPI_TransmitReceive_IT:0000000000000000 HAL_SPI_TransmitReceive_IT
     /tmp/cc8c22lT.s:2499   .text.HAL_SPI_TransmitReceive_IT:00000000000000e8 $d
     /tmp/cc8c22lT.s:4877   .text.SPI_2linesRxISR_16BIT:0000000000000000 SPI_2linesRxISR_16BIT
     /tmp/cc8c22lT.s:4817   .text.SPI_2linesTxISR_16BIT:0000000000000000 SPI_2linesTxISR_16BIT
     /tmp/cc8c22lT.s:4723   .text.SPI_2linesRxISR_8BIT:0000000000000000 SPI_2linesRxISR_8BIT
     /tmp/cc8c22lT.s:4641   .text.SPI_2linesTxISR_8BIT:0000000000000000 SPI_2linesTxISR_8BIT
     /tmp/cc8c22lT.s:2507   .text.HAL_SPI_Receive_IT:0000000000000000 $t
     /tmp/cc8c22lT.s:2514   .text.HAL_SPI_Receive_IT:0000000000000000 HAL_SPI_Receive_IT
     /tmp/cc8c22lT.s:2678   .text.HAL_SPI_Receive_IT:00000000000000d8 $d
     /tmp/cc8c22lT.s:4508   .text.SPI_RxISR_16BIT:0000000000000000 SPI_RxISR_16BIT
     /tmp/cc8c22lT.s:4457   .text.SPI_RxISR_8BIT:0000000000000000 SPI_RxISR_8BIT
     /tmp/cc8c22lT.s:2684   .text.HAL_SPI_Transmit_DMA:0000000000000000 $t
     /tmp/cc8c22lT.s:2691   .text.HAL_SPI_Transmit_DMA:0000000000000000 HAL_SPI_Transmit_DMA
     /tmp/cc8c22lT.s:2897   .text.HAL_SPI_Transmit_DMA:0000000000000124 $d
     /tmp/cc8c22lT.s:4052   .text.SPI_DMAHalfTransmitCplt:0000000000000000 SPI_DMAHalfTransmitCplt
     /tmp/cc8c22lT.s:4979   .text.SPI_DMATransmitCplt:0000000000000000 SPI_DMATransmitCplt
     /tmp/cc8c22lT.s:4937   .text.SPI_DMAError:0000000000000000 SPI_DMAError
     /tmp/cc8c22lT.s:2904   .text.HAL_SPI_TransmitReceive_DMA:0000000000000000 $t
     /tmp/cc8c22lT.s:2911   .text.HAL_SPI_TransmitReceive_DMA:0000000000000000 HAL_SPI_TransmitReceive_DMA
     /tmp/cc8c22lT.s:3252   .text.HAL_SPI_TransmitReceive_DMA:00000000000001f8 $d
     /tmp/cc8c22lT.s:4154   .text.SPI_DMAHalfTransmitReceiveCplt:0000000000000000 SPI_DMAHalfTransmitReceiveCplt
ARM GAS  /tmp/cc8c22lT.s 			page 200


     /tmp/cc8c22lT.s:5169   .text.SPI_DMATransmitReceiveCplt:0000000000000000 SPI_DMATransmitReceiveCplt
     /tmp/cc8c22lT.s:4103   .text.SPI_DMAHalfReceiveCplt:0000000000000000 SPI_DMAHalfReceiveCplt
     /tmp/cc8c22lT.s:5086   .text.SPI_DMAReceiveCplt:0000000000000000 SPI_DMAReceiveCplt
     /tmp/cc8c22lT.s:3261   .text.HAL_SPI_Receive_DMA:0000000000000000 $t
     /tmp/cc8c22lT.s:3268   .text.HAL_SPI_Receive_DMA:0000000000000000 HAL_SPI_Receive_DMA
     /tmp/cc8c22lT.s:3505   .text.HAL_SPI_Receive_DMA:0000000000000168 $d
     /tmp/cc8c22lT.s:3512   .text.HAL_SPI_Abort:0000000000000000 $t
     /tmp/cc8c22lT.s:3519   .text.HAL_SPI_Abort:0000000000000000 HAL_SPI_Abort
     /tmp/cc8c22lT.s:3787   .text.HAL_SPI_Abort:0000000000000180 $d
     /tmp/cc8c22lT.s:3795   .text.HAL_SPI_DMAPause:0000000000000000 $t
     /tmp/cc8c22lT.s:3802   .text.HAL_SPI_DMAPause:0000000000000000 HAL_SPI_DMAPause
     /tmp/cc8c22lT.s:3840   .text.HAL_SPI_DMAResume:0000000000000000 $t
     /tmp/cc8c22lT.s:3847   .text.HAL_SPI_DMAResume:0000000000000000 HAL_SPI_DMAResume
     /tmp/cc8c22lT.s:3885   .text.HAL_SPI_DMAStop:0000000000000000 $t
     /tmp/cc8c22lT.s:3892   .text.HAL_SPI_DMAStop:0000000000000000 HAL_SPI_DMAStop
     /tmp/cc8c22lT.s:3962   .text.HAL_SPI_TxCpltCallback:0000000000000000 $t
     /tmp/cc8c22lT.s:3969   .text.HAL_SPI_TxCpltCallback:0000000000000000 HAL_SPI_TxCpltCallback
     /tmp/cc8c22lT.s:3983   .text.HAL_SPI_RxCpltCallback:0000000000000000 $t
     /tmp/cc8c22lT.s:3990   .text.HAL_SPI_RxCpltCallback:0000000000000000 HAL_SPI_RxCpltCallback
     /tmp/cc8c22lT.s:4004   .text.HAL_SPI_TxRxCpltCallback:0000000000000000 $t
     /tmp/cc8c22lT.s:4011   .text.HAL_SPI_TxRxCpltCallback:0000000000000000 HAL_SPI_TxRxCpltCallback
     /tmp/cc8c22lT.s:4025   .text.HAL_SPI_TxHalfCpltCallback:0000000000000000 $t
     /tmp/cc8c22lT.s:4032   .text.HAL_SPI_TxHalfCpltCallback:0000000000000000 HAL_SPI_TxHalfCpltCallback
     /tmp/cc8c22lT.s:4046   .text.SPI_DMAHalfTransmitCplt:0000000000000000 $t
     /tmp/cc8c22lT.s:4076   .text.HAL_SPI_RxHalfCpltCallback:0000000000000000 $t
     /tmp/cc8c22lT.s:4083   .text.HAL_SPI_RxHalfCpltCallback:0000000000000000 HAL_SPI_RxHalfCpltCallback
     /tmp/cc8c22lT.s:4097   .text.SPI_DMAHalfReceiveCplt:0000000000000000 $t
     /tmp/cc8c22lT.s:4127   .text.HAL_SPI_TxRxHalfCpltCallback:0000000000000000 $t
     /tmp/cc8c22lT.s:4134   .text.HAL_SPI_TxRxHalfCpltCallback:0000000000000000 HAL_SPI_TxRxHalfCpltCallback
     /tmp/cc8c22lT.s:4148   .text.SPI_DMAHalfTransmitReceiveCplt:0000000000000000 $t
     /tmp/cc8c22lT.s:4178   .text.HAL_SPI_ErrorCallback:0000000000000000 $t
     /tmp/cc8c22lT.s:4185   .text.HAL_SPI_ErrorCallback:0000000000000000 HAL_SPI_ErrorCallback
     /tmp/cc8c22lT.s:4199   .text.SPI_CloseTx_ISR:0000000000000000 $t
     /tmp/cc8c22lT.s:4205   .text.SPI_CloseTx_ISR:0000000000000000 SPI_CloseTx_ISR
     /tmp/cc8c22lT.s:4287   .text.SPI_TxISR_8BIT:0000000000000000 $t
     /tmp/cc8c22lT.s:4338   .text.SPI_TxISR_16BIT:0000000000000000 $t
     /tmp/cc8c22lT.s:4389   .text.SPI_CloseRx_ISR:0000000000000000 $t
     /tmp/cc8c22lT.s:4395   .text.SPI_CloseRx_ISR:0000000000000000 SPI_CloseRx_ISR
     /tmp/cc8c22lT.s:4451   .text.SPI_RxISR_8BIT:0000000000000000 $t
     /tmp/cc8c22lT.s:4502   .text.SPI_RxISR_16BIT:0000000000000000 $t
     /tmp/cc8c22lT.s:4553   .text.SPI_CloseRxTx_ISR:0000000000000000 $t
     /tmp/cc8c22lT.s:4559   .text.SPI_CloseRxTx_ISR:0000000000000000 SPI_CloseRxTx_ISR
     /tmp/cc8c22lT.s:4635   .text.SPI_2linesTxISR_8BIT:0000000000000000 $t
     /tmp/cc8c22lT.s:4717   .text.SPI_2linesRxISR_8BIT:0000000000000000 $t
     /tmp/cc8c22lT.s:4811   .text.SPI_2linesTxISR_16BIT:0000000000000000 $t
     /tmp/cc8c22lT.s:4871   .text.SPI_2linesRxISR_16BIT:0000000000000000 $t
     /tmp/cc8c22lT.s:4931   .text.SPI_DMAError:0000000000000000 $t
     /tmp/cc8c22lT.s:4973   .text.SPI_DMATransmitCplt:0000000000000000 $t
     /tmp/cc8c22lT.s:5080   .text.SPI_DMAReceiveCplt:0000000000000000 $t
     /tmp/cc8c22lT.s:5163   .text.SPI_DMATransmitReceiveCplt:0000000000000000 $t
     /tmp/cc8c22lT.s:5249   .text.HAL_SPI_IRQHandler:0000000000000000 $t
     /tmp/cc8c22lT.s:5256   .text.HAL_SPI_IRQHandler:0000000000000000 HAL_SPI_IRQHandler
     /tmp/cc8c22lT.s:5475   .text.HAL_SPI_IRQHandler:000000000000011c $d
     /tmp/cc8c22lT.s:5486   .text.SPI_DMAAbortOnError:0000000000000000 SPI_DMAAbortOnError
     /tmp/cc8c22lT.s:5480   .text.SPI_DMAAbortOnError:0000000000000000 $t
     /tmp/cc8c22lT.s:5515   .text.HAL_SPI_AbortCpltCallback:0000000000000000 $t
     /tmp/cc8c22lT.s:5522   .text.HAL_SPI_AbortCpltCallback:0000000000000000 HAL_SPI_AbortCpltCallback
ARM GAS  /tmp/cc8c22lT.s 			page 201


     /tmp/cc8c22lT.s:5536   .text.HAL_SPI_Abort_IT:0000000000000000 $t
     /tmp/cc8c22lT.s:5543   .text.HAL_SPI_Abort_IT:0000000000000000 HAL_SPI_Abort_IT
     /tmp/cc8c22lT.s:5800   .text.HAL_SPI_Abort_IT:0000000000000148 $d
     /tmp/cc8c22lT.s:5941   .text.SPI_DMATxAbortCallback:0000000000000000 SPI_DMATxAbortCallback
     /tmp/cc8c22lT.s:5816   .text.SPI_DMARxAbortCallback:0000000000000000 SPI_DMARxAbortCallback
     /tmp/cc8c22lT.s:5810   .text.SPI_DMARxAbortCallback:0000000000000000 $t
     /tmp/cc8c22lT.s:5935   .text.SPI_DMATxAbortCallback:0000000000000000 $t
     /tmp/cc8c22lT.s:6057   .text.HAL_SPI_GetState:0000000000000000 $t
     /tmp/cc8c22lT.s:6064   .text.HAL_SPI_GetState:0000000000000000 HAL_SPI_GetState
     /tmp/cc8c22lT.s:6081   .text.HAL_SPI_GetError:0000000000000000 $t
     /tmp/cc8c22lT.s:6088   .text.HAL_SPI_GetError:0000000000000000 HAL_SPI_GetError

UNDEFINED SYMBOLS
HAL_GetTick
SystemCoreClock
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_Abort_IT
