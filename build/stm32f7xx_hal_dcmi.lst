ARM GAS  /tmp/cclUKF5F.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f7xx_hal_dcmi.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.DCMI_DMAXferCplt,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-sp-d16
  24              	DCMI_DMAXferCplt:
  25              	.LFB160:
  26              		.file 1 "Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c"
   1:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** /**
   2:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   ******************************************************************************
   3:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @file    stm32f7xx_hal_dcmi.c
   4:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @author  MCD Application Team
   5:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @brief   DCMI HAL module driver
   6:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   *          functionalities of the Digital Camera Interface (DCMI) peripheral:
   8:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   *           + IO operation functions
  10:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   *           + Peripheral Control functions
  11:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   *           + Peripheral State and Error functions
  12:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   *
  13:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   @verbatim
  14:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   ==============================================================================
  15:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****                         ##### How to use this driver #####
  16:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   ==============================================================================
  17:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   [..]
  18:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       The sequence below describes how to use this driver to capture image
  19:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       from a camera module connected to the DCMI Interface.
  20:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       This sequence does not take into account the configuration of the
  21:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       camera module, which should be made before to configure and enable
  22:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       the DCMI to capture images.
  23:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
  24:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     (#) Program the required configuration through following parameters:
  25:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****         horizontal and vertical polarity, pixel clock polarity, Capture Rate,
  26:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****         Synchronization Mode, code of the frame delimiter and data width
  27:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****         using HAL_DCMI_Init() function.
  28:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
  29:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     (#) Configure the DMA2_Stream1 channel1 to transfer Data from DCMI DR
  30:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****         register to the destination memory buffer.
  31:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
  32:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     (#) Program the required configuration through following parameters:
ARM GAS  /tmp/cclUKF5F.s 			page 2


  33:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****         DCMI mode, destination memory Buffer address and the data length
  34:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****         and enable capture using HAL_DCMI_Start_DMA() function.
  35:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
  36:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     (#) Optionally, configure and Enable the CROP feature to select a rectangular
  37:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****         window from the received image using HAL_DCMI_ConfigCrop()
  38:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****         and HAL_DCMI_EnableCROP() functions
  39:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
  40:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     (#) The capture can be stopped using HAL_DCMI_Stop() function.
  41:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
  42:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     (#) To control DCMI state you can use the function HAL_DCMI_GetState().
  43:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
  44:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****      *** DCMI HAL driver macros list ***
  45:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****      =============================================
  46:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****      [..]
  47:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****        Below the list of most used macros in DCMI HAL driver.
  48:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
  49:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       (+) __HAL_DCMI_ENABLE: Enable the DCMI peripheral.
  50:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       (+) __HAL_DCMI_DISABLE: Disable the DCMI peripheral.
  51:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       (+) __HAL_DCMI_GET_FLAG: Get the DCMI pending flags.
  52:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       (+) __HAL_DCMI_CLEAR_FLAG: Clear the DCMI pending flags.
  53:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       (+) __HAL_DCMI_ENABLE_IT: Enable the specified DCMI interrupts.
  54:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       (+) __HAL_DCMI_DISABLE_IT: Disable the specified DCMI interrupts.
  55:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       (+) __HAL_DCMI_GET_IT_SOURCE: Check whether the specified DCMI interrupt has occurred or not.
  56:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
  57:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****      [..]
  58:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****        (@) You can refer to the DCMI HAL driver header file for more useful macros
  59:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
  60:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     *** Callback registration ***
  61:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     =============================
  62:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
  63:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     The compilation define USE_HAL_DCMI_REGISTER_CALLBACKS when set to 1
  64:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     allows the user to configure dynamically the driver callbacks.
  65:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     Use functions @ref HAL_DCMI_RegisterCallback() to register a user callback.
  66:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
  67:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     Function @ref HAL_DCMI_RegisterCallback() allows to register following callbacks:
  68:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       (+) FrameEventCallback : DCMI Frame Event.
  69:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       (+) VsyncEventCallback : DCMI Vsync Event.
  70:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       (+) LineEventCallback  : DCMI Line Event.
  71:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       (+) ErrorCallback      : DCMI error.
  72:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       (+) MspInitCallback    : DCMI MspInit.
  73:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       (+) MspDeInitCallback  : DCMI MspDeInit.
  74:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     This function takes as parameters the HAL peripheral handle, the callback ID
  75:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     and a pointer to the user callback function.
  76:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
  77:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     Use function @ref HAL_DCMI_UnRegisterCallback() to reset a callback to the default
  78:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     weak (surcharged) function.
  79:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     @ref HAL_DCMI_UnRegisterCallback() takes as parameters the HAL peripheral handle,
  80:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     and the callback ID.
  81:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     This function allows to reset following callbacks:
  82:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       (+) FrameEventCallback : DCMI Frame Event.
  83:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       (+) VsyncEventCallback : DCMI Vsync Event.
  84:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       (+) LineEventCallback  : DCMI Line Event.
  85:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       (+) ErrorCallback      : DCMI error.
  86:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       (+) MspInitCallback    : DCMI MspInit.
  87:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       (+) MspDeInitCallback  : DCMI MspDeInit.
  88:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
  89:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     By default, after the @ref HAL_DCMI_Init and if the state is HAL_DCMI_STATE_RESET
ARM GAS  /tmp/cclUKF5F.s 			page 3


  90:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     all callbacks are reset to the corresponding legacy weak (surcharged) functions:
  91:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     examples @ref FrameEventCallback(), @ref HAL_DCMI_ErrorCallback().
  92:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     Exception done for MspInit and MspDeInit callbacks that are respectively
  93:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     reset to the legacy weak (surcharged) functions in the @ref HAL_DCMI_Init
  94:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     and @ref  HAL_DCMI_DeInit only when these callbacks are null (not registered beforehand).
  95:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     If not, MspInit or MspDeInit are not null, the @ref HAL_DCMI_Init and @ref HAL_DCMI_DeInit
  96:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     keep and use the user MspInit/MspDeInit callbacks (registered beforehand).
  97:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
  98:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     Callbacks can be registered/unregistered in READY state only.
  99:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     Exception done for MspInit/MspDeInit callbacks that can be registered/unregistered
 100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     in READY or RESET state, thus registered (user) MspInit/DeInit callbacks can be used
 101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     during the Init/DeInit.
 102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     In that case first register the MspInit/MspDeInit user callbacks
 103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     using @ref HAL_DCMI_RegisterCallback before calling @ref HAL_DCMI_DeInit
 104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     or @ref HAL_DCMI_Init function.
 105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     When the compilation define USE_HAL_DCMI_REGISTER_CALLBACKS is set to 0 or
 107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     not defined, the callback registering feature is not available
 108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     and weak (surcharged) callbacks are used.
 109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   @endverbatim
 111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   ******************************************************************************
 112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @attention
 113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   *
 114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
 115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * All rights reserved.</center></h2>
 116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   *
 117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * the "License"; You may not use this file except in compliance with the
 119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * License. You may obtain a copy of the License at:
 120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   *                        opensource.org/licenses/BSD-3-Clause
 121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   *
 122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   ******************************************************************************
 123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   */
 124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** /* Includes ------------------------------------------------------------------*/
 126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** #include "stm32f7xx_hal.h"
 127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** /** @addtogroup STM32F7xx_HAL_Driver
 129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @{
 130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   */
 131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** /** @defgroup DCMI DCMI
 132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @brief DCMI HAL module driver
 133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @{
 134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   */
 135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** #ifdef HAL_DCMI_MODULE_ENABLED
 137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** #if defined (DCMI)
 138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** /* Private typedef -----------------------------------------------------------*/
 140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** /* Private define ------------------------------------------------------------*/
 141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** #define HAL_TIMEOUT_DCMI_STOP    ((uint32_t)1000) /* Set timeout to 1s  */
 142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** /* Private macro -------------------------------------------------------------*/
 144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** /* Private variables ---------------------------------------------------------*/
 145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** /* Private function prototypes -----------------------------------------------*/
 146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** static void       DCMI_DMAXferCplt(DMA_HandleTypeDef *hdma);
ARM GAS  /tmp/cclUKF5F.s 			page 4


 147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** static void       DCMI_DMAError(DMA_HandleTypeDef *hdma);
 148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** /* Exported functions --------------------------------------------------------*/
 150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** /** @defgroup DCMI_Exported_Functions DCMI Exported Functions
 152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @{
 153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   */
 154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** /** @defgroup DCMI_Exported_Functions_Group1 Initialization and Configuration functions
 156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****  *  @brief   Initialization and Configuration functions
 157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****  *
 158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** @verbatim
 159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****  ===============================================================================
 160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****                 ##### Initialization and Configuration functions #####
 161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****  ===============================================================================
 162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     [..]  This section provides functions allowing to:
 163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       (+) Initialize and configure the DCMI
 164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       (+) De-initialize the DCMI
 165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** @endverbatim
 167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @{
 168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   */
 169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** /**
 171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @brief  Initializes the DCMI according to the specified
 172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   *         parameters in the DCMI_InitTypeDef and create the associated handle.
 173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @param  hdcmi pointer to a DCMI_HandleTypeDef structure that contains
 174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   *                the configuration information for DCMI.
 175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @retval HAL status
 176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   */
 177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** HAL_StatusTypeDef HAL_DCMI_Init(DCMI_HandleTypeDef *hdcmi)
 178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** {
 179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Check the DCMI peripheral state */
 180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   if (hdcmi == NULL)
 181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   {
 182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     return HAL_ERROR;
 183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   }
 184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Check function parameters */
 186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   assert_param(IS_DCMI_ALL_INSTANCE(hdcmi->Instance));
 187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   assert_param(IS_DCMI_PCKPOLARITY(hdcmi->Init.PCKPolarity));
 188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   assert_param(IS_DCMI_VSPOLARITY(hdcmi->Init.VSPolarity));
 189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   assert_param(IS_DCMI_HSPOLARITY(hdcmi->Init.HSPolarity));
 190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   assert_param(IS_DCMI_SYNCHRO(hdcmi->Init.SynchroMode));
 191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   assert_param(IS_DCMI_CAPTURE_RATE(hdcmi->Init.CaptureRate));
 192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   assert_param(IS_DCMI_EXTENDED_DATA(hdcmi->Init.ExtendedDataMode));
 193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   assert_param(IS_DCMI_MODE_JPEG(hdcmi->Init.JPEGMode));
 194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** #ifdef DCMI_CR_BSM
 196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   assert_param(IS_DCMI_BYTE_SELECT_MODE(hdcmi->Init.ByteSelectMode));
 197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   assert_param(IS_DCMI_BYTE_SELECT_START(hdcmi->Init.ByteSelectStart));
 198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   assert_param(IS_DCMI_LINE_SELECT_MODE(hdcmi->Init.LineSelectMode));
 199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   assert_param(IS_DCMI_LINE_SELECT_START(hdcmi->Init.LineSelectStart));
 200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** #endif
 201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   if (hdcmi->State == HAL_DCMI_STATE_RESET)
 203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   {
ARM GAS  /tmp/cclUKF5F.s 			page 5


 204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     /* Init the DCMI Callback settings */
 205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** #if (USE_HAL_DCMI_REGISTER_CALLBACKS == 1)
 206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     hdcmi->FrameEventCallback = HAL_DCMI_FrameEventCallback; /* Legacy weak FrameEventCallback  */
 207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     hdcmi->VsyncEventCallback = HAL_DCMI_VsyncEventCallback; /* Legacy weak VsyncEventCallback  */
 208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     hdcmi->LineEventCallback  = HAL_DCMI_LineEventCallback;  /* Legacy weak LineEventCallback   */
 209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     hdcmi->ErrorCallback      = HAL_DCMI_ErrorCallback;      /* Legacy weak ErrorCallback       */
 210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     if (hdcmi->MspInitCallback == NULL)
 212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     {
 213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       /* Legacy weak MspInit Callback        */
 214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       hdcmi->MspInitCallback = HAL_DCMI_MspInit;
 215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     }
 216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     /* Initialize the low level hardware (MSP) */
 217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     hdcmi->MspInitCallback(hdcmi);
 218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** #else
 219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC and DMA */
 220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     HAL_DCMI_MspInit(hdcmi);
 221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** #endif /* (USE_HAL_DCMI_REGISTER_CALLBACKS) */
 222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   }
 223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Change the DCMI state */
 225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   hdcmi->State = HAL_DCMI_STATE_BUSY;
 226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** #ifdef DCMI_CR_BSM
 228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   if (hdcmi->Init.ExtendedDataMode != DCMI_EXTEND_DATA_8B)
 229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   {
 230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     /* Byte select mode must be programmed to the reset value if the extended mode
 231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     is not set to 8-bit data capture on every pixel clock */
 232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     hdcmi->Init.ByteSelectMode = DCMI_BSM_ALL;
 233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   }
 234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** #endif
 235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Configures the HS, VS, DE and PC polarity */
 236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** #ifdef DCMI_CR_BSM
 237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   hdcmi->Instance->CR &= ~(DCMI_CR_PCKPOL | DCMI_CR_HSPOL  | DCMI_CR_VSPOL  | DCMI_CR_EDM_0 | \
 238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****                            DCMI_CR_EDM_1  | DCMI_CR_FCRC_0 | DCMI_CR_FCRC_1 | DCMI_CR_JPEG  | \
 239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****                            DCMI_CR_ESS | DCMI_CR_BSM_0 | DCMI_CR_BSM_1 | DCMI_CR_OEBS | \
 240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****                            DCMI_CR_LSM | DCMI_CR_OELS);
 241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   hdcmi->Instance->CR |= (uint32_t)(hdcmi->Init.SynchroMode | hdcmi->Init.CaptureRate | \
 243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****                                     hdcmi->Init.VSPolarity  | hdcmi->Init.HSPolarity  | \
 244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****                                     hdcmi->Init.PCKPolarity | hdcmi->Init.ExtendedDataMode | \
 245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****                                     hdcmi->Init.JPEGMode | hdcmi->Init.ByteSelectMode | \
 246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****                                     hdcmi->Init.ByteSelectStart | hdcmi->Init.LineSelectMode | \
 247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****                                     hdcmi->Init.LineSelectStart);
 248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** #else
 249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   hdcmi->Instance->CR &= ~(DCMI_CR_PCKPOL | DCMI_CR_HSPOL  | DCMI_CR_VSPOL  | DCMI_CR_EDM_0 | \
 250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****                            DCMI_CR_EDM_1  | DCMI_CR_FCRC_0 | DCMI_CR_FCRC_1 | DCMI_CR_JPEG);
 251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   hdcmi->Instance->CR |= (uint32_t)(hdcmi->Init.SynchroMode | hdcmi->Init.CaptureRate | \
 253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****                                     hdcmi->Init.VSPolarity  | hdcmi->Init.HSPolarity  | \
 254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****                                     hdcmi->Init.PCKPolarity | hdcmi->Init.ExtendedDataMode | \
 255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****                                     hdcmi->Init.JPEGMode);
 256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** #endif
 257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   if (hdcmi->Init.SynchroMode == DCMI_SYNCHRO_EMBEDDED)
 259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   {
 260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     hdcmi->Instance->ESCR = (((uint32_t)hdcmi->Init.SyncroCode.FrameStartCode)    | \
ARM GAS  /tmp/cclUKF5F.s 			page 6


 261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****                              ((uint32_t)hdcmi->Init.SyncroCode.LineStartCode << DCMI_ESCR_LSC_Pos) 
 262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****                              ((uint32_t)hdcmi->Init.SyncroCode.LineEndCode << DCMI_ESCR_LEC_Pos) | 
 263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****                              ((uint32_t)hdcmi->Init.SyncroCode.FrameEndCode << DCMI_ESCR_FEC_Pos));
 264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   }
 266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Enable the Line, Vsync, Error and Overrun interrupts */
 268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   __HAL_DCMI_ENABLE_IT(hdcmi, DCMI_IT_LINE | DCMI_IT_VSYNC | DCMI_IT_ERR | DCMI_IT_OVR);
 269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Update error code */
 271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   hdcmi->ErrorCode = HAL_DCMI_ERROR_NONE;
 272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Initialize the DCMI state*/
 274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   hdcmi->State  = HAL_DCMI_STATE_READY;
 275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   return HAL_OK;
 277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** }
 278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** /**
 280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @brief  Deinitializes the DCMI peripheral registers to their default reset
 281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   *         values.
 282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @param  hdcmi pointer to a DCMI_HandleTypeDef structure that contains
 283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   *                the configuration information for DCMI.
 284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @retval HAL status
 285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   */
 286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** HAL_StatusTypeDef HAL_DCMI_DeInit(DCMI_HandleTypeDef *hdcmi)
 288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** {
 289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** #if (USE_HAL_DCMI_REGISTER_CALLBACKS == 1)
 290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   if (hdcmi->MspDeInitCallback == NULL)
 291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   {
 292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     hdcmi->MspDeInitCallback = HAL_DCMI_MspDeInit;
 293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   }
 294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* De-Initialize the low level hardware (MSP) */
 295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   hdcmi->MspDeInitCallback(hdcmi);
 296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** #else
 297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC and DMA */
 298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   HAL_DCMI_MspDeInit(hdcmi);
 299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** #endif /* (USE_HAL_DCMI_REGISTER_CALLBACKS) */
 300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Update error code */
 302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   hdcmi->ErrorCode = HAL_DCMI_ERROR_NONE;
 303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Initialize the DCMI state*/
 305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   hdcmi->State = HAL_DCMI_STATE_RESET;
 306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Release Lock */
 308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   __HAL_UNLOCK(hdcmi);
 309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   return HAL_OK;
 311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** }
 312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** /**
 314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @brief  Initializes the DCMI MSP.
 315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @param  hdcmi pointer to a DCMI_HandleTypeDef structure that contains
 316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   *                the configuration information for DCMI.
 317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @retval None
ARM GAS  /tmp/cclUKF5F.s 			page 7


 318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   */
 319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** __weak void HAL_DCMI_MspInit(DCMI_HandleTypeDef *hdcmi)
 320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** {
 321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Prevent unused argument(s) compilation warning */
 322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   UNUSED(hdcmi);
 323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****             the HAL_DCMI_MspInit could be implemented in the user file
 326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****    */
 327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** }
 328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** /**
 330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @brief  DeInitializes the DCMI MSP.
 331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @param  hdcmi pointer to a DCMI_HandleTypeDef structure that contains
 332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   *                the configuration information for DCMI.
 333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @retval None
 334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   */
 335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** __weak void HAL_DCMI_MspDeInit(DCMI_HandleTypeDef *hdcmi)
 336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** {
 337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Prevent unused argument(s) compilation warning */
 338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   UNUSED(hdcmi);
 339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****             the HAL_DCMI_MspDeInit could be implemented in the user file
 342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****    */
 343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** }
 344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** /**
 346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @}
 347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   */
 348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** /** @defgroup DCMI_Exported_Functions_Group2 IO operation functions
 349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****  *  @brief   IO operation functions
 350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****  *
 351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** @verbatim
 352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****  ===============================================================================
 353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****                       #####  IO operation functions  #####
 354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****  ===============================================================================
 355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     [..]  This section provides functions allowing to:
 356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       (+) Configure destination address and data length and
 357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****           Enables DCMI DMA request and enables DCMI capture
 358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       (+) Stop the DCMI capture.
 359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       (+) Handles DCMI interrupt request.
 360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** @endverbatim
 362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @{
 363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   */
 364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** /**
 366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @brief  Enables DCMI DMA request and enables DCMI capture
 367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @param  hdcmi     pointer to a DCMI_HandleTypeDef structure that contains
 368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   *                    the configuration information for DCMI.
 369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @param  DCMI_Mode DCMI capture mode snapshot or continuous grab.
 370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @param  pData     The destination memory Buffer address (LCD Frame buffer).
 371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @param  Length    The length of capture to be transferred.
 372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @retval HAL status
 373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   */
 374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** HAL_StatusTypeDef HAL_DCMI_Start_DMA(DCMI_HandleTypeDef *hdcmi, uint32_t DCMI_Mode, uint32_t pData,
ARM GAS  /tmp/cclUKF5F.s 			page 8


 375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** {
 376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Initialize the second memory address */
 377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   uint32_t SecondMemAddress = 0;
 378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Check function parameters */
 380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   assert_param(IS_DCMI_CAPTURE_MODE(DCMI_Mode));
 381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Process Locked */
 383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   __HAL_LOCK(hdcmi);
 384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Lock the DCMI peripheral state */
 386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   hdcmi->State = HAL_DCMI_STATE_BUSY;
 387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Enable DCMI by setting DCMIEN bit */
 389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   __HAL_DCMI_ENABLE(hdcmi);
 390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Configure the DCMI Mode */
 392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   hdcmi->Instance->CR &= ~(DCMI_CR_CM);
 393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   hdcmi->Instance->CR |= (uint32_t)(DCMI_Mode);
 394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Set the DMA memory0 conversion complete callback */
 396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   hdcmi->DMA_Handle->XferCpltCallback = DCMI_DMAXferCplt;
 397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Set the DMA error callback */
 399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   hdcmi->DMA_Handle->XferErrorCallback = DCMI_DMAError;
 400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Set the dma abort callback */
 402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   hdcmi->DMA_Handle->XferAbortCallback = NULL;
 403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Reset transfer counters value */
 405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   hdcmi->XferCount = 0;
 406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   hdcmi->XferTransferNumber = 0;
 407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   hdcmi->XferSize = 0;
 408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   hdcmi->pBuffPtr = 0;
 409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   if (Length <= 0xFFFFU)
 411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   {
 412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     /* Enable the DMA Stream */
 413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     if (HAL_DMA_Start_IT(hdcmi->DMA_Handle, (uint32_t)&hdcmi->Instance->DR, (uint32_t)pData, Length
 414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     {
 415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       return HAL_ERROR;
 416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     }
 417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   }
 418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   else /* DCMI_DOUBLE_BUFFER Mode */
 419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   {
 420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     /* Set the DMA memory1 conversion complete callback */
 421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     hdcmi->DMA_Handle->XferM1CpltCallback = DCMI_DMAXferCplt;
 422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     /* Initialize transfer parameters */
 424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     hdcmi->XferCount = 1;
 425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     hdcmi->XferSize = Length;
 426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     hdcmi->pBuffPtr = pData;
 427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     /* Get the number of buffer */
 429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     while (hdcmi->XferSize > 0xFFFFU)
 430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     {
 431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       hdcmi->XferSize = (hdcmi->XferSize / 2U);
ARM GAS  /tmp/cclUKF5F.s 			page 9


 432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       hdcmi->XferCount = hdcmi->XferCount * 2U;
 433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     }
 434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     /* Update DCMI counter  and transfer number*/
 436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     hdcmi->XferCount = (hdcmi->XferCount - 2U);
 437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     hdcmi->XferTransferNumber = hdcmi->XferCount;
 438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     /* Update second memory address */
 440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     SecondMemAddress = (uint32_t)(pData + (4 * hdcmi->XferSize));
 441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     /* Start DMA multi buffer transfer */
 443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     if (HAL_DMAEx_MultiBufferStart_IT(hdcmi->DMA_Handle, (uint32_t)&hdcmi->Instance->DR, (uint32_t)
 444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     {
 445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       return HAL_ERROR;
 446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     }
 447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   }
 448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Enable Capture */
 450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   hdcmi->Instance->CR |= DCMI_CR_CAPTURE;
 451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Release Lock */
 453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   __HAL_UNLOCK(hdcmi);
 454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Return function status */
 456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   return HAL_OK;
 457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** }
 458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** /**
 460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @brief  Disable DCMI DMA request and Disable DCMI capture
 461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @param  hdcmi pointer to a DCMI_HandleTypeDef structure that contains
 462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   *                the configuration information for DCMI.
 463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @retval HAL status
 464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   */
 465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** HAL_StatusTypeDef HAL_DCMI_Stop(DCMI_HandleTypeDef *hdcmi)
 466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** {
 467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   register uint32_t count = HAL_TIMEOUT_DCMI_STOP * (SystemCoreClock / 8U / 1000U);
 468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   HAL_StatusTypeDef status = HAL_OK;
 469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Process locked */
 471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   __HAL_LOCK(hdcmi);
 472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Lock the DCMI peripheral state */
 474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   hdcmi->State = HAL_DCMI_STATE_BUSY;
 475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Disable Capture */
 477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   hdcmi->Instance->CR &= ~(DCMI_CR_CAPTURE);
 478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Check if the DCMI capture effectively disabled */
 480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   do
 481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   {
 482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     if (count-- == 0U)
 483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     {
 484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       /* Update error code */
 485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       hdcmi->ErrorCode |= HAL_DCMI_ERROR_TIMEOUT;
 486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       status = HAL_TIMEOUT;
 488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       break;
ARM GAS  /tmp/cclUKF5F.s 			page 10


 489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     }
 490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   }
 491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   while ((hdcmi->Instance->CR & DCMI_CR_CAPTURE) != 0U);
 492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Disable the DCMI */
 494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   __HAL_DCMI_DISABLE(hdcmi);
 495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Disable the DMA */
 497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   (void)HAL_DMA_Abort(hdcmi->DMA_Handle);
 498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Update error code */
 500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   hdcmi->ErrorCode |= HAL_DCMI_ERROR_NONE;
 501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Change DCMI state */
 503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   hdcmi->State = HAL_DCMI_STATE_READY;
 504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Process Unlocked */
 506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   __HAL_UNLOCK(hdcmi);
 507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Return function status */
 509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   return status;
 510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** }
 511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** /**
 513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @brief  Suspend DCMI capture
 514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @param  hdcmi pointer to a DCMI_HandleTypeDef structure that contains
 515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   *                the configuration information for DCMI.
 516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @retval HAL status
 517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   */
 518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** HAL_StatusTypeDef HAL_DCMI_Suspend(DCMI_HandleTypeDef *hdcmi)
 519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** {
 520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   register uint32_t count = HAL_TIMEOUT_DCMI_STOP * (SystemCoreClock / 8U / 1000U);
 521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   HAL_StatusTypeDef status = HAL_OK;
 522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Process locked */
 524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   __HAL_LOCK(hdcmi);
 525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   if (hdcmi->State == HAL_DCMI_STATE_BUSY)
 527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   {
 528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     /* Change DCMI state */
 529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     hdcmi->State = HAL_DCMI_STATE_SUSPENDED;
 530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     /* Disable Capture */
 532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     hdcmi->Instance->CR &= ~(DCMI_CR_CAPTURE);
 533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     /* Check if the DCMI capture effectively disabled */
 535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     do
 536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     {
 537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       if (count-- == 0U)
 538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       {
 539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****         /* Update error code */
 540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****         hdcmi->ErrorCode |= HAL_DCMI_ERROR_TIMEOUT;
 541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****         /* Change DCMI state */
 543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****         hdcmi->State = HAL_DCMI_STATE_READY;
 544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****         status = HAL_TIMEOUT;
ARM GAS  /tmp/cclUKF5F.s 			page 11


 546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****         break;
 547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       }
 548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     }
 549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     while ((hdcmi->Instance->CR & DCMI_CR_CAPTURE) != 0U);
 550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   }
 551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Process Unlocked */
 552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   __HAL_UNLOCK(hdcmi);
 553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Return function status */
 555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   return status;
 556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** }
 557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** /**
 559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @brief  Resume DCMI capture
 560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @param  hdcmi pointer to a DCMI_HandleTypeDef structure that contains
 561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   *                the configuration information for DCMI.
 562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @retval HAL status
 563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   */
 564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** HAL_StatusTypeDef HAL_DCMI_Resume(DCMI_HandleTypeDef *hdcmi)
 565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** {
 566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Process locked */
 567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   __HAL_LOCK(hdcmi);
 568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   if (hdcmi->State == HAL_DCMI_STATE_SUSPENDED)
 570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   {
 571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     /* Change DCMI state */
 572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     hdcmi->State = HAL_DCMI_STATE_BUSY;
 573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     /* Disable Capture */
 575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     hdcmi->Instance->CR |= DCMI_CR_CAPTURE;
 576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   }
 577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Process Unlocked */
 578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   __HAL_UNLOCK(hdcmi);
 579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Return function status */
 581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   return HAL_OK;
 582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** }
 583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** /**
 585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @brief  Handles DCMI interrupt request.
 586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @param  hdcmi pointer to a DCMI_HandleTypeDef structure that contains
 587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   *                the configuration information for the DCMI.
 588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @retval None
 589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   */
 590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** void HAL_DCMI_IRQHandler(DCMI_HandleTypeDef *hdcmi)
 591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** {
 592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   uint32_t isr_value = READ_REG(hdcmi->Instance->MISR);
 593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Synchronization error interrupt management *******************************/
 595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   if ((isr_value & DCMI_FLAG_ERRRI) == DCMI_FLAG_ERRRI)
 596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   {
 597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     /* Clear the Synchronization error flag */
 598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     __HAL_DCMI_CLEAR_FLAG(hdcmi, DCMI_FLAG_ERRRI);
 599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     /* Update error code */
 601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     hdcmi->ErrorCode |= HAL_DCMI_ERROR_SYNC;
 602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
ARM GAS  /tmp/cclUKF5F.s 			page 12


 603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     /* Change DCMI state */
 604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     hdcmi->State = HAL_DCMI_STATE_ERROR;
 605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     /* Set the synchronization error callback */
 607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     hdcmi->DMA_Handle->XferAbortCallback = DCMI_DMAError;
 608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     /* Abort the DMA Transfer */
 610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     (void)HAL_DMA_Abort_IT(hdcmi->DMA_Handle);
 611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   }
 612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Overflow interrupt management ********************************************/
 613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   if ((isr_value & DCMI_FLAG_OVRRI) == DCMI_FLAG_OVRRI)
 614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   {
 615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     /* Clear the Overflow flag */
 616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     __HAL_DCMI_CLEAR_FLAG(hdcmi, DCMI_FLAG_OVRRI);
 617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     /* Update error code */
 619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     hdcmi->ErrorCode |= HAL_DCMI_ERROR_OVR;
 620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     /* Change DCMI state */
 622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     hdcmi->State = HAL_DCMI_STATE_ERROR;
 623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     /* Set the overflow callback */
 625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     hdcmi->DMA_Handle->XferAbortCallback = DCMI_DMAError;
 626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     /* Abort the DMA Transfer */
 628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     if (HAL_DMA_Abort_IT(hdcmi->DMA_Handle) != HAL_OK)
 629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     {
 630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       DCMI_DMAError(hdcmi->DMA_Handle);
 631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     }
 632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   }
 633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Line Interrupt management ************************************************/
 634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   if ((isr_value & DCMI_FLAG_LINERI) == DCMI_FLAG_LINERI)
 635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   {
 636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     /* Clear the Line interrupt flag */
 637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     __HAL_DCMI_CLEAR_FLAG(hdcmi, DCMI_FLAG_LINERI);
 638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     /* Line interrupt Callback */
 640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** #if (USE_HAL_DCMI_REGISTER_CALLBACKS == 1)
 641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     /*Call registered DCMI line event callback*/
 642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     hdcmi->LineEventCallback(hdcmi);
 643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** #else
 644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     HAL_DCMI_LineEventCallback(hdcmi);
 645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** #endif /* USE_HAL_DCMI_REGISTER_CALLBACKS */
 646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   }
 647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* VSYNC interrupt management ***********************************************/
 648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   if ((isr_value & DCMI_FLAG_VSYNCRI) == DCMI_FLAG_VSYNCRI)
 649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   {
 650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     /* Clear the VSYNC flag */
 651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     __HAL_DCMI_CLEAR_FLAG(hdcmi, DCMI_FLAG_VSYNCRI);
 652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     /* VSYNC Callback */
 654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** #if (USE_HAL_DCMI_REGISTER_CALLBACKS == 1)
 655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     /*Call registered DCMI vsync event callback*/
 656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     hdcmi->VsyncEventCallback(hdcmi);
 657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** #else
 658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     HAL_DCMI_VsyncEventCallback(hdcmi);
 659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** #endif /* USE_HAL_DCMI_REGISTER_CALLBACKS */
ARM GAS  /tmp/cclUKF5F.s 			page 13


 660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   }
 661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* FRAME interrupt management ***********************************************/
 662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   if ((isr_value & DCMI_FLAG_FRAMERI) == DCMI_FLAG_FRAMERI)
 663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   {
 664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     /* When snapshot mode, disable Vsync, Error and Overrun interrupts */
 665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     if ((hdcmi->Instance->CR & DCMI_CR_CM) == DCMI_MODE_SNAPSHOT)
 666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     {
 667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       /* Disable the Line, Vsync, Error and Overrun interrupts */
 668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       __HAL_DCMI_DISABLE_IT(hdcmi, DCMI_IT_LINE | DCMI_IT_VSYNC | DCMI_IT_ERR | DCMI_IT_OVR);
 669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     }
 670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     /* Disable the Frame interrupt */
 672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     __HAL_DCMI_DISABLE_IT(hdcmi, DCMI_IT_FRAME);
 673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     /* Clear the End of Frame flag */
 675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     __HAL_DCMI_CLEAR_FLAG(hdcmi, DCMI_FLAG_FRAMERI);
 676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     /* Frame Callback */
 678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** #if (USE_HAL_DCMI_REGISTER_CALLBACKS == 1)
 679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     /*Call registered DCMI frame event callback*/
 680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     hdcmi->FrameEventCallback(hdcmi);
 681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** #else
 682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     HAL_DCMI_FrameEventCallback(hdcmi);
 683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** #endif /* USE_HAL_DCMI_REGISTER_CALLBACKS */
 684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   }
 685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** }
 686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** /**
 688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @brief  Error DCMI callback.
 689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @param  hdcmi pointer to a DCMI_HandleTypeDef structure that contains
 690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   *                the configuration information for DCMI.
 691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @retval None
 692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   */
 693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** __weak void HAL_DCMI_ErrorCallback(DCMI_HandleTypeDef *hdcmi)
 694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** {
 695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Prevent unused argument(s) compilation warning */
 696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   UNUSED(hdcmi);
 697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****             the HAL_DCMI_ErrorCallback could be implemented in the user file
 700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****    */
 701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** }
 702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** /**
 704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @brief  Line Event callback.
 705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @param  hdcmi pointer to a DCMI_HandleTypeDef structure that contains
 706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   *                the configuration information for DCMI.
 707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @retval None
 708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   */
 709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** __weak void HAL_DCMI_LineEventCallback(DCMI_HandleTypeDef *hdcmi)
 710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** {
 711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****             the HAL_DCMI_LineEventCallback could be implemented in the user file
 713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****    */
 714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** }
 715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** /**
ARM GAS  /tmp/cclUKF5F.s 			page 14


 717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @brief  VSYNC Event callback.
 718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @param  hdcmi pointer to a DCMI_HandleTypeDef structure that contains
 719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   *                the configuration information for DCMI.
 720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @retval None
 721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   */
 722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** __weak void HAL_DCMI_VsyncEventCallback(DCMI_HandleTypeDef *hdcmi)
 723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** {
 724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Prevent unused argument(s) compilation warning */
 725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   UNUSED(hdcmi);
 726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****             the HAL_DCMI_VsyncEventCallback could be implemented in the user file
 729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****    */
 730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** }
 731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** /**
 733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @brief  Frame Event callback.
 734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @param  hdcmi pointer to a DCMI_HandleTypeDef structure that contains
 735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   *                the configuration information for DCMI.
 736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @retval None
 737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   */
 738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** __weak void HAL_DCMI_FrameEventCallback(DCMI_HandleTypeDef *hdcmi)
 739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** {
 740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Prevent unused argument(s) compilation warning */
 741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   UNUSED(hdcmi);
 742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****             the HAL_DCMI_FrameEventCallback could be implemented in the user file
 745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****    */
 746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** }
 747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** /**
 749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @}
 750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   */
 751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** /** @defgroup DCMI_Exported_Functions_Group3 Peripheral Control functions
 753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****  *  @brief    Peripheral Control functions
 754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****  *
 755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** @verbatim
 756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****  ===============================================================================
 757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****                     ##### Peripheral Control functions #####
 758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****  ===============================================================================
 759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** [..]  This section provides functions allowing to:
 760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       (+) Configure the CROP feature.
 761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       (+) Enable/Disable the CROP feature.
 762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       (+) Set embedded synchronization delimiters unmasks.
 763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** @endverbatim
 765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @{
 766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   */
 767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** /**
 769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @brief  Configure the DCMI CROP coordinate.
 770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @param  hdcmi pointer to a DCMI_HandleTypeDef structure that contains
 771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   *                the configuration information for DCMI.
 772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @param  YSize DCMI Line number
 773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @param  XSize DCMI Pixel per line
ARM GAS  /tmp/cclUKF5F.s 			page 15


 774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @param  X0    DCMI window X offset
 775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @param  Y0    DCMI window Y offset
 776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @retval HAL status
 777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   */
 778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** HAL_StatusTypeDef HAL_DCMI_ConfigCrop(DCMI_HandleTypeDef *hdcmi, uint32_t X0, uint32_t Y0, uint32_t
 779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** {
 780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Process Locked */
 781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   __HAL_LOCK(hdcmi);
 782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Lock the DCMI peripheral state */
 784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   hdcmi->State = HAL_DCMI_STATE_BUSY;
 785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Check the parameters */
 787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   assert_param(IS_DCMI_WINDOW_COORDINATE(X0));
 788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   assert_param(IS_DCMI_WINDOW_HEIGHT(Y0));
 789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   assert_param(IS_DCMI_WINDOW_COORDINATE(XSize));
 790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   assert_param(IS_DCMI_WINDOW_COORDINATE(YSize));
 791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Configure CROP */
 793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   hdcmi->Instance->CWSIZER = (XSize | (YSize << DCMI_CWSIZE_VLINE_Pos));
 794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   hdcmi->Instance->CWSTRTR = (X0 | (Y0 << DCMI_CWSTRT_VST_Pos));
 795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Initialize the DCMI state*/
 797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   hdcmi->State  = HAL_DCMI_STATE_READY;
 798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Process Unlocked */
 800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   __HAL_UNLOCK(hdcmi);
 801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   return HAL_OK;
 803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** }
 804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** /**
 806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @brief  Disable the Crop feature.
 807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @param  hdcmi pointer to a DCMI_HandleTypeDef structure that contains
 808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   *                the configuration information for DCMI.
 809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @retval HAL status
 810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   */
 811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** HAL_StatusTypeDef HAL_DCMI_DisableCrop(DCMI_HandleTypeDef *hdcmi)
 812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** {
 813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Process Locked */
 814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   __HAL_LOCK(hdcmi);
 815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Lock the DCMI peripheral state */
 817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   hdcmi->State = HAL_DCMI_STATE_BUSY;
 818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Disable DCMI Crop feature */
 820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   hdcmi->Instance->CR &= ~(uint32_t)DCMI_CR_CROP;
 821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Change the DCMI state*/
 823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   hdcmi->State = HAL_DCMI_STATE_READY;
 824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Process Unlocked */
 826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   __HAL_UNLOCK(hdcmi);
 827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   return HAL_OK;
 829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** }
 830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
ARM GAS  /tmp/cclUKF5F.s 			page 16


 831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** /**
 832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @brief  Enable the Crop feature.
 833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @param  hdcmi pointer to a DCMI_HandleTypeDef structure that contains
 834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   *                the configuration information for DCMI.
 835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @retval HAL status
 836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   */
 837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** HAL_StatusTypeDef HAL_DCMI_EnableCrop(DCMI_HandleTypeDef *hdcmi)
 838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** {
 839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Process Locked */
 840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   __HAL_LOCK(hdcmi);
 841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Lock the DCMI peripheral state */
 843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   hdcmi->State = HAL_DCMI_STATE_BUSY;
 844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Enable DCMI Crop feature */
 846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   hdcmi->Instance->CR |= (uint32_t)DCMI_CR_CROP;
 847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Change the DCMI state*/
 849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   hdcmi->State = HAL_DCMI_STATE_READY;
 850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Process Unlocked */
 852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   __HAL_UNLOCK(hdcmi);
 853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   return HAL_OK;
 855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** }
 856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** /**
 858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @brief  Set embedded synchronization delimiters unmasks.
 859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @param  hdcmi pointer to a DCMI_HandleTypeDef structure that contains
 860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   *               the configuration information for DCMI.
 861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @param  SyncUnmask pointer to a DCMI_SyncUnmaskTypeDef structure that contains
 862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   *                    the embedded synchronization delimiters unmasks.
 863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @retval HAL status
 864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   */
 865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** HAL_StatusTypeDef  HAL_DCMI_ConfigSyncUnmask(DCMI_HandleTypeDef *hdcmi, DCMI_SyncUnmaskTypeDef *Syn
 866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** {
 867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Process Locked */
 868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   __HAL_LOCK(hdcmi);
 869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Lock the DCMI peripheral state */
 871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   hdcmi->State = HAL_DCMI_STATE_BUSY;
 872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Write DCMI embedded synchronization unmask register */
 874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   hdcmi->Instance->ESUR = (((uint32_t)SyncUnmask->FrameStartUnmask) | \
 875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****                            ((uint32_t)SyncUnmask->LineStartUnmask << DCMI_ESUR_LSU_Pos) | \
 876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****                            ((uint32_t)SyncUnmask->LineEndUnmask << DCMI_ESUR_LEU_Pos) | \
 877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****                            ((uint32_t)SyncUnmask->FrameEndUnmask << DCMI_ESUR_FEU_Pos));
 878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Change the DCMI state*/
 880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   hdcmi->State = HAL_DCMI_STATE_READY;
 881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Process Unlocked */
 883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   __HAL_UNLOCK(hdcmi);
 884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   return HAL_OK;
 886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** }
 887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
ARM GAS  /tmp/cclUKF5F.s 			page 17


 888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** /**
 889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @}
 890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   */
 891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** /** @defgroup DCMI_Exported_Functions_Group4 Peripheral State functions
 893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****  *  @brief    Peripheral State functions
 894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****  *
 895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** @verbatim
 896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****  ===============================================================================
 897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****                ##### Peripheral State and Errors functions #####
 898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****  ===============================================================================
 899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     [..]
 900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     This subsection provides functions allowing to
 901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       (+) Check the DCMI state.
 902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       (+) Get the specific DCMI error flag.
 903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** @endverbatim
 905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @{
 906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   */
 907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** /**
 909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @brief  Return the DCMI state
 910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @param  hdcmi pointer to a DCMI_HandleTypeDef structure that contains
 911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   *                the configuration information for DCMI.
 912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @retval HAL state
 913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   */
 914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** HAL_DCMI_StateTypeDef HAL_DCMI_GetState(DCMI_HandleTypeDef *hdcmi)
 915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** {
 916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   return hdcmi->State;
 917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** }
 918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** /**
 920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** * @brief  Return the DCMI error code
 921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** * @param  hdcmi  pointer to a DCMI_HandleTypeDef structure that contains
 922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   *               the configuration information for DCMI.
 923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** * @retval DCMI Error Code
 924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** */
 925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** uint32_t HAL_DCMI_GetError(DCMI_HandleTypeDef *hdcmi)
 926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** {
 927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   return hdcmi->ErrorCode;
 928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** }
 929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** #if (USE_HAL_DCMI_REGISTER_CALLBACKS == 1)
 931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** /**
 932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @brief DCMI Callback registering
 933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @param hdcmi        pointer to a DCMI_HandleTypeDef structure that contains
 934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   *                     the configuration information for DCMI.
 935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @param CallbackID   dcmi Callback ID
 936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @param pCallback    pointer to DCMI_CallbackTypeDef structure
 937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @retval status
 938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   */
 939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** HAL_StatusTypeDef HAL_DCMI_RegisterCallback(DCMI_HandleTypeDef *hdcmi, HAL_DCMI_CallbackIDTypeDef C
 940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** {
 941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   HAL_StatusTypeDef status = HAL_OK;
 942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   if (pCallback == NULL)
 944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   {
ARM GAS  /tmp/cclUKF5F.s 			page 18


 945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     /* update the error code */
 946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     hdcmi->ErrorCode |= HAL_DCMI_ERROR_INVALID_CALLBACK;
 947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     /* update return status */
 948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     status = HAL_ERROR;
 949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   }
 950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   else
 951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   {
 952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     if (hdcmi->State == HAL_DCMI_STATE_READY)
 953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     {
 954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       switch (CallbackID)
 955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       {
 956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****         case HAL_DCMI_FRAME_EVENT_CB_ID :
 957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****           hdcmi->FrameEventCallback = pCallback;
 958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****           break;
 959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****         case HAL_DCMI_VSYNC_EVENT_CB_ID :
 961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****           hdcmi->VsyncEventCallback = pCallback;
 962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****           break;
 963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****         case HAL_DCMI_LINE_EVENT_CB_ID :
 965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****           hdcmi->LineEventCallback = pCallback;
 966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****           break;
 967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****         case HAL_DCMI_ERROR_CB_ID :
 969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****           hdcmi->ErrorCallback = pCallback;
 970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****           break;
 971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****         case HAL_DCMI_MSPINIT_CB_ID :
 973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****           hdcmi->MspInitCallback = pCallback;
 974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****           break;
 975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****         case HAL_DCMI_MSPDEINIT_CB_ID :
 977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****           hdcmi->MspDeInitCallback = pCallback;
 978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****           break;
 979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****         default :
 981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****           /* Return error status */
 982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****           status =  HAL_ERROR;
 983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****           break;
 984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       }
 985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     }
 986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     else if (hdcmi->State == HAL_DCMI_STATE_RESET)
 987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     {
 988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       switch (CallbackID)
 989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       {
 990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****         case HAL_DCMI_MSPINIT_CB_ID :
 991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****           hdcmi->MspInitCallback = pCallback;
 992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****           break;
 993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****         case HAL_DCMI_MSPDEINIT_CB_ID :
 995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****           hdcmi->MspDeInitCallback = pCallback;
 996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****           break;
 997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****         default :
 999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****           /* update the error code */
1000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****           hdcmi->ErrorCode |= HAL_DCMI_ERROR_INVALID_CALLBACK;
1001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****           /* update return status */
ARM GAS  /tmp/cclUKF5F.s 			page 19


1002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****           status = HAL_ERROR;
1003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****           break;
1004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       }
1005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     }
1006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     else
1007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     {
1008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       /* update the error code */
1009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       hdcmi->ErrorCode |= HAL_DCMI_ERROR_INVALID_CALLBACK;
1010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       /* update return status */
1011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       status = HAL_ERROR;
1012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     }
1013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   }
1014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
1015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   return status;
1016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** }
1017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
1018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** /**
1019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @brief DCMI Callback Unregistering
1020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @param hdcmi       dcmi handle
1021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @param CallbackID  dcmi Callback ID
1022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @retval status
1023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   */
1024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** HAL_StatusTypeDef HAL_DCMI_UnRegisterCallback(DCMI_HandleTypeDef *hdcmi, HAL_DCMI_CallbackIDTypeDef
1025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** {
1026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   HAL_StatusTypeDef status = HAL_OK;
1027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
1028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   if (hdcmi->State == HAL_DCMI_STATE_READY)
1029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   {
1030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     switch (CallbackID)
1031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     {
1032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       case HAL_DCMI_FRAME_EVENT_CB_ID :
1033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****         hdcmi->FrameEventCallback = HAL_DCMI_FrameEventCallback;  /* Legacy weak  FrameEventCallbac
1034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****         break;
1035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
1036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       case HAL_DCMI_VSYNC_EVENT_CB_ID :
1037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****         hdcmi->VsyncEventCallback = HAL_DCMI_VsyncEventCallback;  /* Legacy weak VsyncEventCallback
1038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****         break;
1039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
1040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       case HAL_DCMI_LINE_EVENT_CB_ID :
1041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****         hdcmi->LineEventCallback = HAL_DCMI_LineEventCallback;    /* Legacy weak LineEventCallback 
1042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****         break;
1043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
1044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       case HAL_DCMI_ERROR_CB_ID :
1045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****         hdcmi->ErrorCallback = HAL_DCMI_ErrorCallback;           /* Legacy weak ErrorCallback      
1046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****         break;
1047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
1048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       case HAL_DCMI_MSPINIT_CB_ID :
1049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****         hdcmi->MspInitCallback = HAL_DCMI_MspInit;
1050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****         break;
1051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
1052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       case HAL_DCMI_MSPDEINIT_CB_ID :
1053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****         hdcmi->MspDeInitCallback = HAL_DCMI_MspDeInit;
1054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****         break;
1055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
1056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       default :
1057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****         /* update the error code */
1058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****         hdcmi->ErrorCode |= HAL_DCMI_ERROR_INVALID_CALLBACK;
ARM GAS  /tmp/cclUKF5F.s 			page 20


1059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****         /* update return status */
1060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****         status = HAL_ERROR;
1061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****         break;
1062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     }
1063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   }
1064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   else if (hdcmi->State == HAL_DCMI_STATE_RESET)
1065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   {
1066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     switch (CallbackID)
1067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     {
1068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       case HAL_DCMI_MSPINIT_CB_ID :
1069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****         hdcmi->MspInitCallback = HAL_DCMI_MspInit;
1070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****         break;
1071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
1072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       case HAL_DCMI_MSPDEINIT_CB_ID :
1073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****         hdcmi->MspDeInitCallback = HAL_DCMI_MspDeInit;
1074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****         break;
1075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
1076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       default :
1077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****         /* update the error code */
1078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****         hdcmi->ErrorCode |= HAL_DCMI_ERROR_INVALID_CALLBACK;
1079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****         /* update return status */
1080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****         status = HAL_ERROR;
1081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****         break;
1082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     }
1083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   }
1084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   else
1085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   {
1086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     /* update the error code */
1087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     hdcmi->ErrorCode |= HAL_DCMI_ERROR_INVALID_CALLBACK;
1088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     /* update return status */
1089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     status = HAL_ERROR;
1090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   }
1091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
1092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   return status;
1093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** }
1094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** #endif /* USE_HAL_DCMI_REGISTER_CALLBACKS */
1095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
1096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** /**
1097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @}
1098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   */
1099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** /* Private functions ---------------------------------------------------------*/
1100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** /** @defgroup DCMI_Private_Functions DCMI Private Functions
1101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @{
1102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   */
1103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** /**
1104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** * @brief  DMA conversion complete callback.
1105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
1106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** *                the configuration information for the specified DMA module.
1107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** * @retval None
1108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** */
1109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** static void DCMI_DMAXferCplt(DMA_HandleTypeDef *hdma)
1110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** {
  27              		.loc 1 1110 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LVL0:
ARM GAS  /tmp/cclUKF5F.s 			page 21


  32 0000 10B5     		push	{r4, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 4, -8
  36              		.cfi_offset 14, -4
  37              	.LVL1:
1111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   uint32_t tmp = 0;
1112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
1113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   DCMI_HandleTypeDef *hdcmi = (DCMI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
  38              		.loc 1 1113 0
  39 0002 846B     		ldr	r4, [r0, #56]
  40              	.LVL2:
1114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
1115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   if (hdcmi->XferCount != 0)
  41              		.loc 1 1115 0
  42 0004 A36B     		ldr	r3, [r4, #56]
  43 0006 43B3     		cbz	r3, .L2
1116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   {
1117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     /* Update memory 0 address location */
1118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     tmp = ((hdcmi->DMA_Handle->Instance->CR) & DMA_SxCR_CT);
  44              		.loc 1 1118 0
  45 0008 A06C     		ldr	r0, [r4, #72]
  46              	.LVL3:
  47 000a 0268     		ldr	r2, [r0]
  48 000c 1368     		ldr	r3, [r2]
  49 000e 03F40023 		and	r3, r3, #524288
  50              	.LVL4:
1119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     if (((hdcmi->XferCount % 2) == 0) && (tmp != 0))
  51              		.loc 1 1119 0
  52 0012 A16B     		ldr	r1, [r4, #56]
  53 0014 11F0010F 		tst	r1, #1
  54 0018 00D1     		bne	.L3
  55              		.loc 1 1119 0 is_stmt 0 discriminator 1
  56 001a 43B9     		cbnz	r3, .L8
  57              	.L3:
1120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     {
1121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       tmp = hdcmi->DMA_Handle->Instance->M0AR;
1122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       HAL_DMAEx_ChangeMemory(hdcmi->DMA_Handle, (tmp + (8 * hdcmi->XferSize)), MEMORY0);
1123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       hdcmi->XferCount--;
1124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     }
1125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     /* Update memory 1 address location */
1126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     else if ((hdcmi->DMA_Handle->Instance->CR & DMA_SxCR_CT) == 0)
  58              		.loc 1 1126 0 is_stmt 1
  59 001c 1368     		ldr	r3, [r2]
  60              	.LVL5:
  61 001e 13F4002F 		tst	r3, #524288
  62 0022 0FD0     		beq	.L9
  63              	.L4:
1127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     {
1128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       tmp = hdcmi->DMA_Handle->Instance->M1AR;
1129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       HAL_DMAEx_ChangeMemory(hdcmi->DMA_Handle, (tmp + (8 * hdcmi->XferSize)), MEMORY1);
1130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       hdcmi->XferCount--;
1131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     }
1132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   }
1133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Update memory 0 address location */
1134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   else if ((hdcmi->DMA_Handle->Instance->CR & DMA_SxCR_CT) != 0)
1135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   {
ARM GAS  /tmp/cclUKF5F.s 			page 22


1136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     hdcmi->DMA_Handle->Instance->M0AR = hdcmi->pBuffPtr;
1137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   }
1138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Update memory 1 address location */
1139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   else if ((hdcmi->DMA_Handle->Instance->CR & DMA_SxCR_CT) == 0)
1140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   {
1141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     tmp = hdcmi->pBuffPtr;
1142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     hdcmi->DMA_Handle->Instance->M1AR = (tmp + (4 * hdcmi->XferSize));
1143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     hdcmi->XferCount = hdcmi->XferTransferNumber;
1144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   }
1145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
1146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Check if the frame is transferred */
1147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   if (hdcmi->XferCount == hdcmi->XferTransferNumber)
  64              		.loc 1 1147 0
  65 0024 A26B     		ldr	r2, [r4, #56]
  66 0026 236C     		ldr	r3, [r4, #64]
  67 0028 9A42     		cmp	r2, r3
  68 002a 2BD0     		beq	.L10
  69              	.L1:
1148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   {
1149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     /* Enable the Frame interrupt */
1150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     __HAL_DCMI_ENABLE_IT(hdcmi, DCMI_IT_FRAME);
1151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
1152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     /* When snapshot mode, set dcmi state to ready */
1153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     if ((hdcmi->Instance->CR & DCMI_CR_CM) == DCMI_MODE_SNAPSHOT)
1154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     {
1155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       hdcmi->State = HAL_DCMI_STATE_READY;
1156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     }
1157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   }
1158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** }
  70              		.loc 1 1158 0
  71 002c 10BD     		pop	{r4, pc}
  72              	.LVL6:
  73              	.L8:
1121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       HAL_DMAEx_ChangeMemory(hdcmi->DMA_Handle, (tmp + (8 * hdcmi->XferSize)), MEMORY0);
  74              		.loc 1 1121 0
  75 002e D368     		ldr	r3, [r2, #12]
  76              	.LVL7:
1122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       hdcmi->XferCount--;
  77              		.loc 1 1122 0
  78 0030 E16B     		ldr	r1, [r4, #60]
  79 0032 0022     		movs	r2, #0
  80 0034 03EBC101 		add	r1, r3, r1, lsl #3
  81 0038 FFF7FEFF 		bl	HAL_DMAEx_ChangeMemory
  82              	.LVL8:
1123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     }
  83              		.loc 1 1123 0
  84 003c A36B     		ldr	r3, [r4, #56]
  85 003e 013B     		subs	r3, r3, #1
  86 0040 A363     		str	r3, [r4, #56]
  87 0042 EFE7     		b	.L4
  88              	.L9:
1128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       HAL_DMAEx_ChangeMemory(hdcmi->DMA_Handle, (tmp + (8 * hdcmi->XferSize)), MEMORY1);
  89              		.loc 1 1128 0
  90 0044 1369     		ldr	r3, [r2, #16]
  91              	.LVL9:
1129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       hdcmi->XferCount--;
  92              		.loc 1 1129 0
ARM GAS  /tmp/cclUKF5F.s 			page 23


  93 0046 E16B     		ldr	r1, [r4, #60]
  94 0048 0122     		movs	r2, #1
  95 004a 03EBC101 		add	r1, r3, r1, lsl #3
  96 004e FFF7FEFF 		bl	HAL_DMAEx_ChangeMemory
  97              	.LVL10:
1130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     }
  98              		.loc 1 1130 0
  99 0052 A36B     		ldr	r3, [r4, #56]
 100 0054 013B     		subs	r3, r3, #1
 101 0056 A363     		str	r3, [r4, #56]
 102 0058 E4E7     		b	.L4
 103              	.LVL11:
 104              	.L2:
1134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   {
 105              		.loc 1 1134 0
 106 005a A36C     		ldr	r3, [r4, #72]
 107 005c 1B68     		ldr	r3, [r3]
 108 005e 1A68     		ldr	r2, [r3]
 109 0060 12F4002F 		tst	r2, #524288
 110 0064 02D0     		beq	.L5
1136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   }
 111              		.loc 1 1136 0
 112 0066 626C     		ldr	r2, [r4, #68]
 113 0068 DA60     		str	r2, [r3, #12]
 114 006a DBE7     		b	.L4
 115              	.L5:
1139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   {
 116              		.loc 1 1139 0
 117 006c 1A68     		ldr	r2, [r3]
 118 006e 12F4002F 		tst	r2, #524288
 119 0072 D7D1     		bne	.L4
1141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     hdcmi->DMA_Handle->Instance->M1AR = (tmp + (4 * hdcmi->XferSize));
 120              		.loc 1 1141 0
 121 0074 626C     		ldr	r2, [r4, #68]
 122              	.LVL12:
1142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     hdcmi->XferCount = hdcmi->XferTransferNumber;
 123              		.loc 1 1142 0
 124 0076 E16B     		ldr	r1, [r4, #60]
 125 0078 02EB8102 		add	r2, r2, r1, lsl #2
 126              	.LVL13:
 127 007c 1A61     		str	r2, [r3, #16]
 128              	.LVL14:
1143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   }
 129              		.loc 1 1143 0
 130 007e 236C     		ldr	r3, [r4, #64]
 131 0080 A363     		str	r3, [r4, #56]
 132 0082 CFE7     		b	.L4
 133              	.LVL15:
 134              	.L10:
1150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 135              		.loc 1 1150 0
 136 0084 2268     		ldr	r2, [r4]
 137 0086 D368     		ldr	r3, [r2, #12]
 138 0088 43F00103 		orr	r3, r3, #1
 139 008c D360     		str	r3, [r2, #12]
1153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     {
 140              		.loc 1 1153 0
ARM GAS  /tmp/cclUKF5F.s 			page 24


 141 008e 2368     		ldr	r3, [r4]
 142 0090 1B68     		ldr	r3, [r3]
 143 0092 13F0020F 		tst	r3, #2
 144 0096 C9D0     		beq	.L1
1155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     }
 145              		.loc 1 1155 0
 146 0098 0123     		movs	r3, #1
 147 009a 84F83530 		strb	r3, [r4, #53]
 148              		.loc 1 1158 0
 149 009e C5E7     		b	.L1
 150              		.cfi_endproc
 151              	.LFE160:
 153              		.section	.text.HAL_DCMI_MspInit,"ax",%progbits
 154              		.align	1
 155              		.weak	HAL_DCMI_MspInit
 156              		.syntax unified
 157              		.thumb
 158              		.thumb_func
 159              		.fpu fpv5-sp-d16
 161              	HAL_DCMI_MspInit:
 162              	.LFB143:
 320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Prevent unused argument(s) compilation warning */
 163              		.loc 1 320 0
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 0
 166              		@ frame_needed = 0, uses_anonymous_args = 0
 167              		@ link register save eliminated.
 168              	.LVL16:
 327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 169              		.loc 1 327 0
 170 0000 7047     		bx	lr
 171              		.cfi_endproc
 172              	.LFE143:
 174              		.section	.text.HAL_DCMI_Init,"ax",%progbits
 175              		.align	1
 176              		.global	HAL_DCMI_Init
 177              		.syntax unified
 178              		.thumb
 179              		.thumb_func
 180              		.fpu fpv5-sp-d16
 182              	HAL_DCMI_Init:
 183              	.LFB141:
 178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Check the DCMI peripheral state */
 184              		.loc 1 178 0
 185              		.cfi_startproc
 186              		@ args = 0, pretend = 0, frame = 0
 187              		@ frame_needed = 0, uses_anonymous_args = 0
 188              	.LVL17:
 180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   {
 189              		.loc 1 180 0
 190 0000 0028     		cmp	r0, #0
 191 0002 48D0     		beq	.L17
 178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Check the DCMI peripheral state */
 192              		.loc 1 178 0
 193 0004 10B5     		push	{r4, lr}
 194              	.LCFI1:
 195              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/cclUKF5F.s 			page 25


 196              		.cfi_offset 4, -8
 197              		.cfi_offset 14, -4
 198 0006 0446     		mov	r4, r0
 202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   {
 199              		.loc 1 202 0
 200 0008 90F83530 		ldrb	r3, [r0, #53]	@ zero_extendqisi2
 201 000c 002B     		cmp	r3, #0
 202 000e 32D0     		beq	.L22
 203              	.LVL18:
 204              	.L14:
 225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 205              		.loc 1 225 0
 206 0010 0223     		movs	r3, #2
 207 0012 84F83530 		strb	r3, [r4, #53]
 228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   {
 208              		.loc 1 228 0
 209 0016 A369     		ldr	r3, [r4, #24]
 210 0018 0BB1     		cbz	r3, .L15
 232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   }
 211              		.loc 1 232 0
 212 001a 0023     		movs	r3, #0
 213 001c 6362     		str	r3, [r4, #36]
 214              	.L15:
 237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****                            DCMI_CR_EDM_1  | DCMI_CR_FCRC_0 | DCMI_CR_FCRC_1 | DCMI_CR_JPEG  | \
 215              		.loc 1 237 0
 216 001e 2268     		ldr	r2, [r4]
 217 0020 1168     		ldr	r1, [r2]
 218 0022 1E4B     		ldr	r3, .L24
 219 0024 0B40     		ands	r3, r3, r1
 220 0026 1360     		str	r3, [r2]
 242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****                                     hdcmi->Init.VSPolarity  | hdcmi->Init.HSPolarity  | \
 221              		.loc 1 242 0
 222 0028 2268     		ldr	r2, [r4]
 223 002a 1168     		ldr	r1, [r2]
 224 002c 6368     		ldr	r3, [r4, #4]
 225 002e 6069     		ldr	r0, [r4, #20]
 226 0030 0343     		orrs	r3, r3, r0
 243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****                                     hdcmi->Init.PCKPolarity | hdcmi->Init.ExtendedDataMode | \
 227              		.loc 1 243 0
 228 0032 E068     		ldr	r0, [r4, #12]
 242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****                                     hdcmi->Init.VSPolarity  | hdcmi->Init.HSPolarity  | \
 229              		.loc 1 242 0
 230 0034 0343     		orrs	r3, r3, r0
 243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****                                     hdcmi->Init.PCKPolarity | hdcmi->Init.ExtendedDataMode | \
 231              		.loc 1 243 0
 232 0036 2069     		ldr	r0, [r4, #16]
 233 0038 0343     		orrs	r3, r3, r0
 244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****                                     hdcmi->Init.JPEGMode | hdcmi->Init.ByteSelectMode | \
 234              		.loc 1 244 0
 235 003a A068     		ldr	r0, [r4, #8]
 243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****                                     hdcmi->Init.PCKPolarity | hdcmi->Init.ExtendedDataMode | \
 236              		.loc 1 243 0
 237 003c 0343     		orrs	r3, r3, r0
 244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****                                     hdcmi->Init.JPEGMode | hdcmi->Init.ByteSelectMode | \
 238              		.loc 1 244 0
 239 003e A069     		ldr	r0, [r4, #24]
 240 0040 0343     		orrs	r3, r3, r0
ARM GAS  /tmp/cclUKF5F.s 			page 26


 245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****                                     hdcmi->Init.ByteSelectStart | hdcmi->Init.LineSelectMode | \
 241              		.loc 1 245 0
 242 0042 206A     		ldr	r0, [r4, #32]
 244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****                                     hdcmi->Init.JPEGMode | hdcmi->Init.ByteSelectMode | \
 243              		.loc 1 244 0
 244 0044 0343     		orrs	r3, r3, r0
 245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****                                     hdcmi->Init.ByteSelectStart | hdcmi->Init.LineSelectMode | \
 245              		.loc 1 245 0
 246 0046 606A     		ldr	r0, [r4, #36]
 247 0048 0343     		orrs	r3, r3, r0
 246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****                                     hdcmi->Init.LineSelectStart);
 248              		.loc 1 246 0
 249 004a A06A     		ldr	r0, [r4, #40]
 245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****                                     hdcmi->Init.ByteSelectStart | hdcmi->Init.LineSelectMode | \
 250              		.loc 1 245 0
 251 004c 0343     		orrs	r3, r3, r0
 246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****                                     hdcmi->Init.LineSelectStart);
 252              		.loc 1 246 0
 253 004e E06A     		ldr	r0, [r4, #44]
 254 0050 0343     		orrs	r3, r3, r0
 247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** #else
 255              		.loc 1 247 0
 256 0052 206B     		ldr	r0, [r4, #48]
 246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****                                     hdcmi->Init.LineSelectStart);
 257              		.loc 1 246 0
 258 0054 0343     		orrs	r3, r3, r0
 242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****                                     hdcmi->Init.VSPolarity  | hdcmi->Init.HSPolarity  | \
 259              		.loc 1 242 0
 260 0056 0B43     		orrs	r3, r3, r1
 261 0058 1360     		str	r3, [r2]
 258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   {
 262              		.loc 1 258 0
 263 005a 6368     		ldr	r3, [r4, #4]
 264 005c 102B     		cmp	r3, #16
 265 005e 0DD0     		beq	.L23
 266              	.L16:
 268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 267              		.loc 1 268 0
 268 0060 2268     		ldr	r2, [r4]
 269 0062 D368     		ldr	r3, [r2, #12]
 270 0064 43F01E03 		orr	r3, r3, #30
 271 0068 D360     		str	r3, [r2, #12]
 271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 272              		.loc 1 271 0
 273 006a 0020     		movs	r0, #0
 274 006c E064     		str	r0, [r4, #76]
 274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 275              		.loc 1 274 0
 276 006e 0123     		movs	r3, #1
 277 0070 84F83530 		strb	r3, [r4, #53]
 277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 278              		.loc 1 277 0
 279 0074 10BD     		pop	{r4, pc}
 280              	.LVL19:
 281              	.L22:
 220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** #endif /* (USE_HAL_DCMI_REGISTER_CALLBACKS) */
 282              		.loc 1 220 0
ARM GAS  /tmp/cclUKF5F.s 			page 27


 283 0076 FFF7FEFF 		bl	HAL_DCMI_MspInit
 284              	.LVL20:
 285 007a C9E7     		b	.L14
 286              	.L23:
 260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****                              ((uint32_t)hdcmi->Init.SyncroCode.LineStartCode << DCMI_ESCR_LSC_Pos) 
 287              		.loc 1 260 0
 288 007c 237F     		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****                              ((uint32_t)hdcmi->Init.SyncroCode.LineEndCode << DCMI_ESCR_LEC_Pos) | 
 289              		.loc 1 261 0
 290 007e 627F     		ldrb	r2, [r4, #29]	@ zero_extendqisi2
 260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****                              ((uint32_t)hdcmi->Init.SyncroCode.LineStartCode << DCMI_ESCR_LSC_Pos) 
 291              		.loc 1 260 0
 292 0080 43EA0223 		orr	r3, r3, r2, lsl #8
 262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****                              ((uint32_t)hdcmi->Init.SyncroCode.FrameEndCode << DCMI_ESCR_FEC_Pos));
 293              		.loc 1 262 0
 294 0084 A27F     		ldrb	r2, [r4, #30]	@ zero_extendqisi2
 261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****                              ((uint32_t)hdcmi->Init.SyncroCode.LineEndCode << DCMI_ESCR_LEC_Pos) | 
 295              		.loc 1 261 0
 296 0086 43EA0243 		orr	r3, r3, r2, lsl #16
 263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 297              		.loc 1 263 0
 298 008a E17F     		ldrb	r1, [r4, #31]	@ zero_extendqisi2
 260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****                              ((uint32_t)hdcmi->Init.SyncroCode.LineStartCode << DCMI_ESCR_LSC_Pos) 
 299              		.loc 1 260 0
 300 008c 2268     		ldr	r2, [r4]
 262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****                              ((uint32_t)hdcmi->Init.SyncroCode.FrameEndCode << DCMI_ESCR_FEC_Pos));
 301              		.loc 1 262 0
 302 008e 43EA0163 		orr	r3, r3, r1, lsl #24
 260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****                              ((uint32_t)hdcmi->Init.SyncroCode.LineStartCode << DCMI_ESCR_LSC_Pos) 
 303              		.loc 1 260 0
 304 0092 9361     		str	r3, [r2, #24]
 305 0094 E4E7     		b	.L16
 306              	.LVL21:
 307              	.L17:
 308              	.LCFI2:
 309              		.cfi_def_cfa_offset 0
 310              		.cfi_restore 4
 311              		.cfi_restore 14
 182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   }
 312              		.loc 1 182 0
 313 0096 0120     		movs	r0, #1
 314              	.LVL22:
 277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 315              		.loc 1 277 0
 316 0098 7047     		bx	lr
 317              	.L25:
 318 009a 00BF     		.align	2
 319              	.L24:
 320 009c 07F0E0FF 		.word	-2035705
 321              		.cfi_endproc
 322              	.LFE141:
 324              		.section	.text.HAL_DCMI_MspDeInit,"ax",%progbits
 325              		.align	1
 326              		.weak	HAL_DCMI_MspDeInit
 327              		.syntax unified
 328              		.thumb
 329              		.thumb_func
ARM GAS  /tmp/cclUKF5F.s 			page 28


 330              		.fpu fpv5-sp-d16
 332              	HAL_DCMI_MspDeInit:
 333              	.LFB144:
 336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Prevent unused argument(s) compilation warning */
 334              		.loc 1 336 0
 335              		.cfi_startproc
 336              		@ args = 0, pretend = 0, frame = 0
 337              		@ frame_needed = 0, uses_anonymous_args = 0
 338              		@ link register save eliminated.
 339              	.LVL23:
 343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 340              		.loc 1 343 0
 341 0000 7047     		bx	lr
 342              		.cfi_endproc
 343              	.LFE144:
 345              		.section	.text.HAL_DCMI_DeInit,"ax",%progbits
 346              		.align	1
 347              		.global	HAL_DCMI_DeInit
 348              		.syntax unified
 349              		.thumb
 350              		.thumb_func
 351              		.fpu fpv5-sp-d16
 353              	HAL_DCMI_DeInit:
 354              	.LFB142:
 288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** #if (USE_HAL_DCMI_REGISTER_CALLBACKS == 1)
 355              		.loc 1 288 0
 356              		.cfi_startproc
 357              		@ args = 0, pretend = 0, frame = 0
 358              		@ frame_needed = 0, uses_anonymous_args = 0
 359              	.LVL24:
 360 0000 10B5     		push	{r4, lr}
 361              	.LCFI3:
 362              		.cfi_def_cfa_offset 8
 363              		.cfi_offset 4, -8
 364              		.cfi_offset 14, -4
 365 0002 0446     		mov	r4, r0
 298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** #endif /* (USE_HAL_DCMI_REGISTER_CALLBACKS) */
 366              		.loc 1 298 0
 367 0004 FFF7FEFF 		bl	HAL_DCMI_MspDeInit
 368              	.LVL25:
 302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 369              		.loc 1 302 0
 370 0008 0020     		movs	r0, #0
 371 000a E064     		str	r0, [r4, #76]
 305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 372              		.loc 1 305 0
 373 000c 84F83500 		strb	r0, [r4, #53]
 308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 374              		.loc 1 308 0
 375 0010 84F83400 		strb	r0, [r4, #52]
 311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 376              		.loc 1 311 0
 377 0014 10BD     		pop	{r4, pc}
 378              		.cfi_endproc
 379              	.LFE142:
 381              		.section	.text.HAL_DCMI_Start_DMA,"ax",%progbits
 382              		.align	1
ARM GAS  /tmp/cclUKF5F.s 			page 29


 383              		.global	HAL_DCMI_Start_DMA
 384              		.syntax unified
 385              		.thumb
 386              		.thumb_func
 387              		.fpu fpv5-sp-d16
 389              	HAL_DCMI_Start_DMA:
 390              	.LFB145:
 375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Initialize the second memory address */
 391              		.loc 1 375 0
 392              		.cfi_startproc
 393              		@ args = 0, pretend = 0, frame = 0
 394              		@ frame_needed = 0, uses_anonymous_args = 0
 395              	.LVL26:
 396 0000 30B5     		push	{r4, r5, lr}
 397              	.LCFI4:
 398              		.cfi_def_cfa_offset 12
 399              		.cfi_offset 4, -12
 400              		.cfi_offset 5, -8
 401              		.cfi_offset 14, -4
 402 0002 83B0     		sub	sp, sp, #12
 403              	.LCFI5:
 404              		.cfi_def_cfa_offset 24
 405              	.LVL27:
 383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 406              		.loc 1 383 0
 407 0004 90F83440 		ldrb	r4, [r0, #52]	@ zero_extendqisi2
 408 0008 012C     		cmp	r4, #1
 409 000a 58D0     		beq	.L35
 410 000c 0446     		mov	r4, r0
 383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 411              		.loc 1 383 0 is_stmt 0 discriminator 2
 412 000e 0120     		movs	r0, #1
 413              	.LVL28:
 414 0010 84F83400 		strb	r0, [r4, #52]
 386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 415              		.loc 1 386 0 is_stmt 1 discriminator 2
 416 0014 0220     		movs	r0, #2
 417 0016 84F83500 		strb	r0, [r4, #53]
 389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 418              		.loc 1 389 0 discriminator 2
 419 001a 2568     		ldr	r5, [r4]
 420 001c 2868     		ldr	r0, [r5]
 421 001e 40F48040 		orr	r0, r0, #16384
 422 0022 2860     		str	r0, [r5]
 392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   hdcmi->Instance->CR |= (uint32_t)(DCMI_Mode);
 423              		.loc 1 392 0 discriminator 2
 424 0024 2568     		ldr	r5, [r4]
 425 0026 2868     		ldr	r0, [r5]
 426 0028 20F00200 		bic	r0, r0, #2
 427 002c 2860     		str	r0, [r5]
 393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 428              		.loc 1 393 0 discriminator 2
 429 002e 2568     		ldr	r5, [r4]
 430 0030 2868     		ldr	r0, [r5]
 431 0032 0143     		orrs	r1, r1, r0
 432              	.LVL29:
 433 0034 2960     		str	r1, [r5]
ARM GAS  /tmp/cclUKF5F.s 			page 30


 396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 434              		.loc 1 396 0 discriminator 2
 435 0036 A16C     		ldr	r1, [r4, #72]
 436 0038 2348     		ldr	r0, .L40
 437 003a C863     		str	r0, [r1, #60]
 399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 438              		.loc 1 399 0 discriminator 2
 439 003c A16C     		ldr	r1, [r4, #72]
 440 003e 2348     		ldr	r0, .L40+4
 441 0040 C864     		str	r0, [r1, #76]
 402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 442              		.loc 1 402 0 discriminator 2
 443 0042 A06C     		ldr	r0, [r4, #72]
 444 0044 0021     		movs	r1, #0
 445 0046 0165     		str	r1, [r0, #80]
 405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   hdcmi->XferTransferNumber = 0;
 446              		.loc 1 405 0 discriminator 2
 447 0048 A163     		str	r1, [r4, #56]
 406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   hdcmi->XferSize = 0;
 448              		.loc 1 406 0 discriminator 2
 449 004a 2164     		str	r1, [r4, #64]
 407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   hdcmi->pBuffPtr = 0;
 450              		.loc 1 407 0 discriminator 2
 451 004c E163     		str	r1, [r4, #60]
 408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 452              		.loc 1 408 0 discriminator 2
 453 004e 6164     		str	r1, [r4, #68]
 410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   {
 454              		.loc 1 410 0 discriminator 2
 455 0050 B3F5803F 		cmp	r3, #65536
 456 0054 07D3     		bcc	.L39
 421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 457              		.loc 1 421 0
 458 0056 A16C     		ldr	r1, [r4, #72]
 459 0058 1B48     		ldr	r0, .L40
 460 005a 4864     		str	r0, [r1, #68]
 424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     hdcmi->XferSize = Length;
 461              		.loc 1 424 0
 462 005c 0121     		movs	r1, #1
 463 005e A163     		str	r1, [r4, #56]
 425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     hdcmi->pBuffPtr = pData;
 464              		.loc 1 425 0
 465 0060 E363     		str	r3, [r4, #60]
 426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 466              		.loc 1 426 0
 467 0062 6264     		str	r2, [r4, #68]
 429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     {
 468              		.loc 1 429 0
 469 0064 0DE0     		b	.L33
 470              	.L39:
 413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     {
 471              		.loc 1 413 0
 472 0066 2168     		ldr	r1, [r4]
 473 0068 2831     		adds	r1, r1, #40
 474 006a A06C     		ldr	r0, [r4, #72]
 475 006c FFF7FEFF 		bl	HAL_DMA_Start_IT
 476              	.LVL30:
ARM GAS  /tmp/cclUKF5F.s 			page 31


 477 0070 D8B1     		cbz	r0, .L32
 415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     }
 478              		.loc 1 415 0
 479 0072 0120     		movs	r0, #1
 480 0074 21E0     		b	.L30
 481              	.LVL31:
 482              	.L34:
 431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       hdcmi->XferCount = hdcmi->XferCount * 2U;
 483              		.loc 1 431 0
 484 0076 E36B     		ldr	r3, [r4, #60]
 485 0078 5B08     		lsrs	r3, r3, #1
 486 007a E363     		str	r3, [r4, #60]
 432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     }
 487              		.loc 1 432 0
 488 007c A36B     		ldr	r3, [r4, #56]
 489 007e 5B00     		lsls	r3, r3, #1
 490 0080 A363     		str	r3, [r4, #56]
 491              	.L33:
 429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     {
 492              		.loc 1 429 0
 493 0082 E36B     		ldr	r3, [r4, #60]
 494 0084 B3F5803F 		cmp	r3, #65536
 495 0088 F5D2     		bcs	.L34
 436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     hdcmi->XferTransferNumber = hdcmi->XferCount;
 496              		.loc 1 436 0
 497 008a A36B     		ldr	r3, [r4, #56]
 498 008c 023B     		subs	r3, r3, #2
 499 008e A363     		str	r3, [r4, #56]
 437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 500              		.loc 1 437 0
 501 0090 A36B     		ldr	r3, [r4, #56]
 502 0092 2364     		str	r3, [r4, #64]
 440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 503              		.loc 1 440 0
 504 0094 E36B     		ldr	r3, [r4, #60]
 505              	.LVL32:
 443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     {
 506              		.loc 1 443 0
 507 0096 2168     		ldr	r1, [r4]
 508 0098 E06B     		ldr	r0, [r4, #60]
 509 009a 0090     		str	r0, [sp]
 510 009c 02EB8303 		add	r3, r2, r3, lsl #2
 511              	.LVL33:
 512 00a0 2831     		adds	r1, r1, #40
 513 00a2 A06C     		ldr	r0, [r4, #72]
 514 00a4 FFF7FEFF 		bl	HAL_DMAEx_MultiBufferStart_IT
 515              	.LVL34:
 516 00a8 58B9     		cbnz	r0, .L37
 517              	.L32:
 450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 518              		.loc 1 450 0
 519 00aa 2268     		ldr	r2, [r4]
 520 00ac 1368     		ldr	r3, [r2]
 521 00ae 43F00103 		orr	r3, r3, #1
 522 00b2 1360     		str	r3, [r2]
 453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 523              		.loc 1 453 0
ARM GAS  /tmp/cclUKF5F.s 			page 32


 524 00b4 0020     		movs	r0, #0
 525 00b6 84F83400 		strb	r0, [r4, #52]
 526              	.LVL35:
 527              	.L30:
 457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 528              		.loc 1 457 0
 529 00ba 03B0     		add	sp, sp, #12
 530              	.LCFI6:
 531              		.cfi_remember_state
 532              		.cfi_def_cfa_offset 12
 533              		@ sp needed
 534 00bc 30BD     		pop	{r4, r5, pc}
 535              	.LVL36:
 536              	.L35:
 537              	.LCFI7:
 538              		.cfi_restore_state
 383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 539              		.loc 1 383 0
 540 00be 0220     		movs	r0, #2
 541              	.LVL37:
 542 00c0 FBE7     		b	.L30
 543              	.LVL38:
 544              	.L37:
 445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     }
 545              		.loc 1 445 0
 546 00c2 0120     		movs	r0, #1
 547 00c4 F9E7     		b	.L30
 548              	.L41:
 549 00c6 00BF     		.align	2
 550              	.L40:
 551 00c8 00000000 		.word	DCMI_DMAXferCplt
 552 00cc 00000000 		.word	DCMI_DMAError
 553              		.cfi_endproc
 554              	.LFE145:
 556              		.section	.text.HAL_DCMI_Stop,"ax",%progbits
 557              		.align	1
 558              		.global	HAL_DCMI_Stop
 559              		.syntax unified
 560              		.thumb
 561              		.thumb_func
 562              		.fpu fpv5-sp-d16
 564              	HAL_DCMI_Stop:
 565              	.LFB146:
 466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   register uint32_t count = HAL_TIMEOUT_DCMI_STOP * (SystemCoreClock / 8U / 1000U);
 566              		.loc 1 466 0
 567              		.cfi_startproc
 568              		@ args = 0, pretend = 0, frame = 0
 569              		@ frame_needed = 0, uses_anonymous_args = 0
 570              	.LVL39:
 571 0000 38B5     		push	{r3, r4, r5, lr}
 572              	.LCFI8:
 573              		.cfi_def_cfa_offset 16
 574              		.cfi_offset 3, -16
 575              		.cfi_offset 4, -12
 576              		.cfi_offset 5, -8
 577              		.cfi_offset 14, -4
 467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   HAL_StatusTypeDef status = HAL_OK;
ARM GAS  /tmp/cclUKF5F.s 			page 33


 578              		.loc 1 467 0
 579 0002 1E4B     		ldr	r3, .L50
 580 0004 1B68     		ldr	r3, [r3]
 581 0006 1E4A     		ldr	r2, .L50+4
 582 0008 A2FB0323 		umull	r2, r3, r2, r3
 583 000c 5A0A     		lsrs	r2, r3, #9
 584 000e 4FF47A73 		mov	r3, #1000
 585 0012 03FB02F3 		mul	r3, r3, r2
 586              	.LVL40:
 471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 587              		.loc 1 471 0
 588 0016 90F83420 		ldrb	r2, [r0, #52]	@ zero_extendqisi2
 589 001a 012A     		cmp	r2, #1
 590 001c 2CD0     		beq	.L47
 471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 591              		.loc 1 471 0 is_stmt 0 discriminator 2
 592 001e 0122     		movs	r2, #1
 593 0020 80F83420 		strb	r2, [r0, #52]
 474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 594              		.loc 1 474 0 is_stmt 1 discriminator 2
 595 0024 0222     		movs	r2, #2
 596 0026 80F83520 		strb	r2, [r0, #53]
 477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 597              		.loc 1 477 0 discriminator 2
 598 002a 0168     		ldr	r1, [r0]
 599 002c 0A68     		ldr	r2, [r1]
 600 002e 22F00102 		bic	r2, r2, #1
 601 0032 0A60     		str	r2, [r1]
 602              	.L46:
 482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     {
 603              		.loc 1 482 0
 604 0034 5A1E     		subs	r2, r3, #1
 605              	.LVL41:
 606 0036 3BB1     		cbz	r3, .L49
 491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 607              		.loc 1 491 0
 608 0038 0368     		ldr	r3, [r0]
 609 003a 1968     		ldr	r1, [r3]
 482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     {
 610              		.loc 1 482 0
 611 003c 1346     		mov	r3, r2
 491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 612              		.loc 1 491 0
 613 003e 11F0010F 		tst	r1, #1
 614 0042 F7D1     		bne	.L46
 468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 615              		.loc 1 468 0
 616 0044 0025     		movs	r5, #0
 617 0046 04E0     		b	.L45
 618              	.L49:
 485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 619              		.loc 1 485 0
 620 0048 C36C     		ldr	r3, [r0, #76]
 621 004a 43F02003 		orr	r3, r3, #32
 622 004e C364     		str	r3, [r0, #76]
 623              	.LVL42:
 487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       break;
ARM GAS  /tmp/cclUKF5F.s 			page 34


 624              		.loc 1 487 0
 625 0050 0325     		movs	r5, #3
 626              	.LVL43:
 627              	.L45:
 628 0052 0446     		mov	r4, r0
 629              	.LVL44:
 494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 630              		.loc 1 494 0
 631 0054 0268     		ldr	r2, [r0]
 632              	.LVL45:
 633 0056 1368     		ldr	r3, [r2]
 634 0058 23F48043 		bic	r3, r3, #16384
 635 005c 1360     		str	r3, [r2]
 497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 636              		.loc 1 497 0
 637 005e 806C     		ldr	r0, [r0, #72]
 638              	.LVL46:
 639 0060 FFF7FEFF 		bl	HAL_DMA_Abort
 640              	.LVL47:
 500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 641              		.loc 1 500 0
 642 0064 E36C     		ldr	r3, [r4, #76]
 643 0066 E364     		str	r3, [r4, #76]
 503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 644              		.loc 1 503 0
 645 0068 0123     		movs	r3, #1
 646 006a 84F83530 		strb	r3, [r4, #53]
 506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 647              		.loc 1 506 0
 648 006e 0023     		movs	r3, #0
 649 0070 84F83430 		strb	r3, [r4, #52]
 650              	.LVL48:
 651              	.L43:
 510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 652              		.loc 1 510 0
 653 0074 2846     		mov	r0, r5
 654 0076 38BD     		pop	{r3, r4, r5, pc}
 655              	.LVL49:
 656              	.L47:
 471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 657              		.loc 1 471 0
 658 0078 0225     		movs	r5, #2
 659 007a FBE7     		b	.L43
 660              	.L51:
 661              		.align	2
 662              	.L50:
 663 007c 00000000 		.word	SystemCoreClock
 664 0080 D34D6210 		.word	274877907
 665              		.cfi_endproc
 666              	.LFE146:
 668              		.section	.text.HAL_DCMI_Suspend,"ax",%progbits
 669              		.align	1
 670              		.global	HAL_DCMI_Suspend
 671              		.syntax unified
 672              		.thumb
 673              		.thumb_func
 674              		.fpu fpv5-sp-d16
ARM GAS  /tmp/cclUKF5F.s 			page 35


 676              	HAL_DCMI_Suspend:
 677              	.LFB147:
 519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   register uint32_t count = HAL_TIMEOUT_DCMI_STOP * (SystemCoreClock / 8U / 1000U);
 678              		.loc 1 519 0
 679              		.cfi_startproc
 680              		@ args = 0, pretend = 0, frame = 0
 681              		@ frame_needed = 0, uses_anonymous_args = 0
 682              		@ link register save eliminated.
 683              	.LVL50:
 684 0000 0246     		mov	r2, r0
 520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   HAL_StatusTypeDef status = HAL_OK;
 685              		.loc 1 520 0
 686 0002 1C4B     		ldr	r3, .L61
 687 0004 1B68     		ldr	r3, [r3]
 688 0006 1C49     		ldr	r1, .L61+4
 689 0008 A1FB0313 		umull	r1, r3, r1, r3
 690 000c 590A     		lsrs	r1, r3, #9
 691 000e 4FF47A73 		mov	r3, #1000
 692 0012 03FB01F3 		mul	r3, r3, r1
 693              	.LVL51:
 524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 694              		.loc 1 524 0
 695 0016 90F83410 		ldrb	r1, [r0, #52]	@ zero_extendqisi2
 696 001a 0129     		cmp	r1, #1
 697 001c 27D0     		beq	.L57
 524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 698              		.loc 1 524 0 is_stmt 0 discriminator 2
 699 001e 0121     		movs	r1, #1
 700 0020 80F83410 		strb	r1, [r0, #52]
 526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   {
 701              		.loc 1 526 0 is_stmt 1 discriminator 2
 702 0024 90F83510 		ldrb	r1, [r0, #53]	@ zero_extendqisi2
 703 0028 C9B2     		uxtb	r1, r1
 704 002a 0229     		cmp	r1, #2
 705 002c 04D0     		beq	.L59
 521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 706              		.loc 1 521 0
 707 002e 0020     		movs	r0, #0
 708              	.LVL52:
 709              	.L54:
 552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 710              		.loc 1 552 0
 711 0030 0023     		movs	r3, #0
 712 0032 82F83430 		strb	r3, [r2, #52]
 555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** }
 713              		.loc 1 555 0
 714 0036 7047     		bx	lr
 715              	.LVL53:
 716              	.L59:
 529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 717              		.loc 1 529 0
 718 0038 0521     		movs	r1, #5
 719 003a 80F83510 		strb	r1, [r0, #53]
 532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 720              		.loc 1 532 0
 721 003e 0068     		ldr	r0, [r0]
 722              	.LVL54:
ARM GAS  /tmp/cclUKF5F.s 			page 36


 723 0040 0168     		ldr	r1, [r0]
 724 0042 21F00101 		bic	r1, r1, #1
 725 0046 0160     		str	r1, [r0]
 726              	.L56:
 537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       {
 727              		.loc 1 537 0
 728 0048 591E     		subs	r1, r3, #1
 729              	.LVL55:
 730 004a 3BB1     		cbz	r3, .L60
 549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   }
 731              		.loc 1 549 0
 732 004c 1368     		ldr	r3, [r2]
 733 004e 1868     		ldr	r0, [r3]
 537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       {
 734              		.loc 1 537 0
 735 0050 0B46     		mov	r3, r1
 549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   }
 736              		.loc 1 549 0
 737 0052 10F0010F 		tst	r0, #1
 738 0056 F7D1     		bne	.L56
 521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 739              		.loc 1 521 0
 740 0058 0020     		movs	r0, #0
 741 005a E9E7     		b	.L54
 742              	.L60:
 540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 743              		.loc 1 540 0
 744 005c D36C     		ldr	r3, [r2, #76]
 745 005e 43F02003 		orr	r3, r3, #32
 746 0062 D364     		str	r3, [r2, #76]
 543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 747              		.loc 1 543 0
 748 0064 0123     		movs	r3, #1
 749 0066 82F83530 		strb	r3, [r2, #53]
 750              	.LVL56:
 545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****         break;
 751              		.loc 1 545 0
 752 006a 0320     		movs	r0, #3
 546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****       }
 753              		.loc 1 546 0
 754 006c E0E7     		b	.L54
 755              	.LVL57:
 756              	.L57:
 524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 757              		.loc 1 524 0
 758 006e 0220     		movs	r0, #2
 759              	.LVL58:
 556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 760              		.loc 1 556 0
 761 0070 7047     		bx	lr
 762              	.L62:
 763 0072 00BF     		.align	2
 764              	.L61:
 765 0074 00000000 		.word	SystemCoreClock
 766 0078 D34D6210 		.word	274877907
 767              		.cfi_endproc
 768              	.LFE147:
ARM GAS  /tmp/cclUKF5F.s 			page 37


 770              		.section	.text.HAL_DCMI_Resume,"ax",%progbits
 771              		.align	1
 772              		.global	HAL_DCMI_Resume
 773              		.syntax unified
 774              		.thumb
 775              		.thumb_func
 776              		.fpu fpv5-sp-d16
 778              	HAL_DCMI_Resume:
 779              	.LFB148:
 565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Process locked */
 780              		.loc 1 565 0
 781              		.cfi_startproc
 782              		@ args = 0, pretend = 0, frame = 0
 783              		@ frame_needed = 0, uses_anonymous_args = 0
 784              		@ link register save eliminated.
 785              	.LVL59:
 567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 786              		.loc 1 567 0
 787 0000 90F83430 		ldrb	r3, [r0, #52]	@ zero_extendqisi2
 788 0004 012B     		cmp	r3, #1
 789 0006 15D0     		beq	.L66
 567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 790              		.loc 1 567 0 is_stmt 0 discriminator 2
 791 0008 0123     		movs	r3, #1
 792 000a 80F83430 		strb	r3, [r0, #52]
 569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   {
 793              		.loc 1 569 0 is_stmt 1 discriminator 2
 794 000e 90F83530 		ldrb	r3, [r0, #53]	@ zero_extendqisi2
 795 0012 DBB2     		uxtb	r3, r3
 796 0014 052B     		cmp	r3, #5
 797 0016 04D0     		beq	.L67
 798              	.L65:
 578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 799              		.loc 1 578 0
 800 0018 0023     		movs	r3, #0
 801 001a 80F83430 		strb	r3, [r0, #52]
 581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** }
 802              		.loc 1 581 0
 803 001e 1846     		mov	r0, r3
 804              	.LVL60:
 805 0020 7047     		bx	lr
 806              	.LVL61:
 807              	.L67:
 572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 808              		.loc 1 572 0
 809 0022 0223     		movs	r3, #2
 810 0024 80F83530 		strb	r3, [r0, #53]
 575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   }
 811              		.loc 1 575 0
 812 0028 0268     		ldr	r2, [r0]
 813 002a 1368     		ldr	r3, [r2]
 814 002c 43F00103 		orr	r3, r3, #1
 815 0030 1360     		str	r3, [r2]
 816 0032 F1E7     		b	.L65
 817              	.L66:
 567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 818              		.loc 1 567 0
ARM GAS  /tmp/cclUKF5F.s 			page 38


 819 0034 0220     		movs	r0, #2
 820              	.LVL62:
 582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 821              		.loc 1 582 0
 822 0036 7047     		bx	lr
 823              		.cfi_endproc
 824              	.LFE148:
 826              		.section	.text.HAL_DCMI_ErrorCallback,"ax",%progbits
 827              		.align	1
 828              		.weak	HAL_DCMI_ErrorCallback
 829              		.syntax unified
 830              		.thumb
 831              		.thumb_func
 832              		.fpu fpv5-sp-d16
 834              	HAL_DCMI_ErrorCallback:
 835              	.LFB150:
 694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Prevent unused argument(s) compilation warning */
 836              		.loc 1 694 0
 837              		.cfi_startproc
 838              		@ args = 0, pretend = 0, frame = 0
 839              		@ frame_needed = 0, uses_anonymous_args = 0
 840              		@ link register save eliminated.
 841              	.LVL63:
 701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 842              		.loc 1 701 0
 843 0000 7047     		bx	lr
 844              		.cfi_endproc
 845              	.LFE150:
 847              		.section	.text.DCMI_DMAError,"ax",%progbits
 848              		.align	1
 849              		.syntax unified
 850              		.thumb
 851              		.thumb_func
 852              		.fpu fpv5-sp-d16
 854              	DCMI_DMAError:
 855              	.LFB161:
1159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
1160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** /**
1161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @brief  DMA error callback
1162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
1163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   *                the configuration information for the specified DMA module.
1164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   * @retval None
1165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   */
1166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** static void DCMI_DMAError(DMA_HandleTypeDef *hdma)
1167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** {
 856              		.loc 1 1167 0
 857              		.cfi_startproc
 858              		@ args = 0, pretend = 0, frame = 0
 859              		@ frame_needed = 0, uses_anonymous_args = 0
 860              	.LVL64:
 861 0000 08B5     		push	{r3, lr}
 862              	.LCFI9:
 863              		.cfi_def_cfa_offset 8
 864              		.cfi_offset 3, -8
 865              		.cfi_offset 14, -4
1168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   DCMI_HandleTypeDef *hdcmi = (DCMI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 866              		.loc 1 1168 0
ARM GAS  /tmp/cclUKF5F.s 			page 39


 867 0002 806B     		ldr	r0, [r0, #56]
 868              	.LVL65:
1169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
1170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   if (hdcmi->DMA_Handle->ErrorCode != HAL_DMA_ERROR_FE)
 869              		.loc 1 1170 0
 870 0004 836C     		ldr	r3, [r0, #72]
 871 0006 5B6D     		ldr	r3, [r3, #84]
 872 0008 022B     		cmp	r3, #2
 873 000a 06D0     		beq	.L70
1171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   {
1172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     /* Initialize the DCMI state*/
1173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     hdcmi->State = HAL_DCMI_STATE_READY;
 874              		.loc 1 1173 0
 875 000c 0123     		movs	r3, #1
 876 000e 80F83530 		strb	r3, [r0, #53]
1174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
1175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     /* Set DCMI Error Code */
1176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     hdcmi->ErrorCode |= HAL_DCMI_ERROR_DMA;
 877              		.loc 1 1176 0
 878 0012 C36C     		ldr	r3, [r0, #76]
 879 0014 43F04003 		orr	r3, r3, #64
 880 0018 C364     		str	r3, [r0, #76]
 881              	.L70:
1177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   }
1178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
1179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* DCMI error Callback */
1180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** #if (USE_HAL_DCMI_REGISTER_CALLBACKS == 1)
1181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /*Call registered DCMI error callback*/
1182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   hdcmi->ErrorCallback(hdcmi);
1183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** #else
1184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   HAL_DCMI_ErrorCallback(hdcmi);
 882              		.loc 1 1184 0
 883 001a FFF7FEFF 		bl	HAL_DCMI_ErrorCallback
 884              	.LVL66:
1185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** #endif /* USE_HAL_DCMI_REGISTER_CALLBACKS */
1186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
1187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** }
 885              		.loc 1 1187 0
 886 001e 08BD     		pop	{r3, pc}
 887              		.cfi_endproc
 888              	.LFE161:
 890              		.section	.text.HAL_DCMI_LineEventCallback,"ax",%progbits
 891              		.align	1
 892              		.weak	HAL_DCMI_LineEventCallback
 893              		.syntax unified
 894              		.thumb
 895              		.thumb_func
 896              		.fpu fpv5-sp-d16
 898              	HAL_DCMI_LineEventCallback:
 899              	.LFB151:
 710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 900              		.loc 1 710 0
 901              		.cfi_startproc
 902              		@ args = 0, pretend = 0, frame = 0
 903              		@ frame_needed = 0, uses_anonymous_args = 0
 904              		@ link register save eliminated.
 905              	.LVL67:
ARM GAS  /tmp/cclUKF5F.s 			page 40


 714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 906              		.loc 1 714 0
 907 0000 7047     		bx	lr
 908              		.cfi_endproc
 909              	.LFE151:
 911              		.section	.text.HAL_DCMI_VsyncEventCallback,"ax",%progbits
 912              		.align	1
 913              		.weak	HAL_DCMI_VsyncEventCallback
 914              		.syntax unified
 915              		.thumb
 916              		.thumb_func
 917              		.fpu fpv5-sp-d16
 919              	HAL_DCMI_VsyncEventCallback:
 920              	.LFB152:
 723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Prevent unused argument(s) compilation warning */
 921              		.loc 1 723 0
 922              		.cfi_startproc
 923              		@ args = 0, pretend = 0, frame = 0
 924              		@ frame_needed = 0, uses_anonymous_args = 0
 925              		@ link register save eliminated.
 926              	.LVL68:
 730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 927              		.loc 1 730 0
 928 0000 7047     		bx	lr
 929              		.cfi_endproc
 930              	.LFE152:
 932              		.section	.text.HAL_DCMI_FrameEventCallback,"ax",%progbits
 933              		.align	1
 934              		.weak	HAL_DCMI_FrameEventCallback
 935              		.syntax unified
 936              		.thumb
 937              		.thumb_func
 938              		.fpu fpv5-sp-d16
 940              	HAL_DCMI_FrameEventCallback:
 941              	.LFB153:
 739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Prevent unused argument(s) compilation warning */
 942              		.loc 1 739 0
 943              		.cfi_startproc
 944              		@ args = 0, pretend = 0, frame = 0
 945              		@ frame_needed = 0, uses_anonymous_args = 0
 946              		@ link register save eliminated.
 947              	.LVL69:
 746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 948              		.loc 1 746 0
 949 0000 7047     		bx	lr
 950              		.cfi_endproc
 951              	.LFE153:
 953              		.section	.text.HAL_DCMI_IRQHandler,"ax",%progbits
 954              		.align	1
 955              		.global	HAL_DCMI_IRQHandler
 956              		.syntax unified
 957              		.thumb
 958              		.thumb_func
 959              		.fpu fpv5-sp-d16
 961              	HAL_DCMI_IRQHandler:
 962              	.LFB149:
 591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   uint32_t isr_value = READ_REG(hdcmi->Instance->MISR);
ARM GAS  /tmp/cclUKF5F.s 			page 41


 963              		.loc 1 591 0
 964              		.cfi_startproc
 965              		@ args = 0, pretend = 0, frame = 0
 966              		@ frame_needed = 0, uses_anonymous_args = 0
 967              	.LVL70:
 968 0000 38B5     		push	{r3, r4, r5, lr}
 969              	.LCFI10:
 970              		.cfi_def_cfa_offset 16
 971              		.cfi_offset 3, -16
 972              		.cfi_offset 4, -12
 973              		.cfi_offset 5, -8
 974              		.cfi_offset 14, -4
 975 0002 0446     		mov	r4, r0
 592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 976              		.loc 1 592 0
 977 0004 0368     		ldr	r3, [r0]
 978 0006 1D69     		ldr	r5, [r3, #16]
 979              	.LVL71:
 595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   {
 980              		.loc 1 595 0
 981 0008 15F0040F 		tst	r5, #4
 982 000c 20D1     		bne	.L83
 983              	.LVL72:
 984              	.L76:
 613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   {
 985              		.loc 1 613 0
 986 000e 15F0020F 		tst	r5, #2
 987 0012 2CD1     		bne	.L84
 988              	.L77:
 634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   {
 989              		.loc 1 634 0
 990 0014 15F0100F 		tst	r5, #16
 991 0018 3FD1     		bne	.L85
 992              	.L78:
 648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   {
 993              		.loc 1 648 0
 994 001a 15F0080F 		tst	r5, #8
 995 001e 43D1     		bne	.L86
 996              	.L79:
 662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   {
 997              		.loc 1 662 0
 998 0020 15F0010F 		tst	r5, #1
 999 0024 13D0     		beq	.L75
 665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     {
 1000              		.loc 1 665 0
 1001 0026 2368     		ldr	r3, [r4]
 1002 0028 1A68     		ldr	r2, [r3]
 1003 002a 12F0020F 		tst	r2, #2
 1004 002e 03D0     		beq	.L81
 668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     }
 1005              		.loc 1 668 0
 1006 0030 DA68     		ldr	r2, [r3, #12]
 1007 0032 22F01E02 		bic	r2, r2, #30
 1008 0036 DA60     		str	r2, [r3, #12]
 1009              	.L81:
 672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 1010              		.loc 1 672 0
ARM GAS  /tmp/cclUKF5F.s 			page 42


 1011 0038 2268     		ldr	r2, [r4]
 1012 003a D368     		ldr	r3, [r2, #12]
 1013 003c 23F00103 		bic	r3, r3, #1
 1014 0040 D360     		str	r3, [r2, #12]
 675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 1015              		.loc 1 675 0
 1016 0042 2368     		ldr	r3, [r4]
 1017 0044 0122     		movs	r2, #1
 1018 0046 5A61     		str	r2, [r3, #20]
 682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** #endif /* USE_HAL_DCMI_REGISTER_CALLBACKS */
 1019              		.loc 1 682 0
 1020 0048 2046     		mov	r0, r4
 1021 004a FFF7FEFF 		bl	HAL_DCMI_FrameEventCallback
 1022              	.LVL73:
 1023              	.L75:
 685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 1024              		.loc 1 685 0
 1025 004e 38BD     		pop	{r3, r4, r5, pc}
 1026              	.LVL74:
 1027              	.L83:
 598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 1028              		.loc 1 598 0
 1029 0050 0422     		movs	r2, #4
 1030 0052 5A61     		str	r2, [r3, #20]
 601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 1031              		.loc 1 601 0
 1032 0054 C36C     		ldr	r3, [r0, #76]
 1033 0056 43F00203 		orr	r3, r3, #2
 1034 005a C364     		str	r3, [r0, #76]
 604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 1035              		.loc 1 604 0
 1036 005c 80F83520 		strb	r2, [r0, #53]
 607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 1037              		.loc 1 607 0
 1038 0060 836C     		ldr	r3, [r0, #72]
 1039 0062 154A     		ldr	r2, .L87
 1040 0064 1A65     		str	r2, [r3, #80]
 610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   }
 1041              		.loc 1 610 0
 1042 0066 806C     		ldr	r0, [r0, #72]
 1043              	.LVL75:
 1044 0068 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 1045              	.LVL76:
 1046 006c CFE7     		b	.L76
 1047              	.L84:
 616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 1048              		.loc 1 616 0
 1049 006e 2368     		ldr	r3, [r4]
 1050 0070 0222     		movs	r2, #2
 1051 0072 5A61     		str	r2, [r3, #20]
 619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 1052              		.loc 1 619 0
 1053 0074 E36C     		ldr	r3, [r4, #76]
 1054 0076 43F00103 		orr	r3, r3, #1
 1055 007a E364     		str	r3, [r4, #76]
 622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 1056              		.loc 1 622 0
ARM GAS  /tmp/cclUKF5F.s 			page 43


 1057 007c 0423     		movs	r3, #4
 1058 007e 84F83530 		strb	r3, [r4, #53]
 625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 1059              		.loc 1 625 0
 1060 0082 A36C     		ldr	r3, [r4, #72]
 1061 0084 0C4A     		ldr	r2, .L87
 1062 0086 1A65     		str	r2, [r3, #80]
 628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     {
 1063              		.loc 1 628 0
 1064 0088 A06C     		ldr	r0, [r4, #72]
 1065 008a FFF7FEFF 		bl	HAL_DMA_Abort_IT
 1066              	.LVL77:
 1067 008e 0028     		cmp	r0, #0
 1068 0090 C0D0     		beq	.L77
 630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****     }
 1069              		.loc 1 630 0
 1070 0092 A06C     		ldr	r0, [r4, #72]
 1071 0094 FFF7FEFF 		bl	DCMI_DMAError
 1072              	.LVL78:
 1073 0098 BCE7     		b	.L77
 1074              	.L85:
 637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 1075              		.loc 1 637 0
 1076 009a 2368     		ldr	r3, [r4]
 1077 009c 1022     		movs	r2, #16
 1078 009e 5A61     		str	r2, [r3, #20]
 644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** #endif /* USE_HAL_DCMI_REGISTER_CALLBACKS */
 1079              		.loc 1 644 0
 1080 00a0 2046     		mov	r0, r4
 1081 00a2 FFF7FEFF 		bl	HAL_DCMI_LineEventCallback
 1082              	.LVL79:
 1083 00a6 B8E7     		b	.L78
 1084              	.L86:
 651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 1085              		.loc 1 651 0
 1086 00a8 2368     		ldr	r3, [r4]
 1087 00aa 0822     		movs	r2, #8
 1088 00ac 5A61     		str	r2, [r3, #20]
 658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** #endif /* USE_HAL_DCMI_REGISTER_CALLBACKS */
 1089              		.loc 1 658 0
 1090 00ae 2046     		mov	r0, r4
 1091 00b0 FFF7FEFF 		bl	HAL_DCMI_VsyncEventCallback
 1092              	.LVL80:
 1093 00b4 B4E7     		b	.L79
 1094              	.L88:
 1095 00b6 00BF     		.align	2
 1096              	.L87:
 1097 00b8 00000000 		.word	DCMI_DMAError
 1098              		.cfi_endproc
 1099              	.LFE149:
 1101              		.section	.text.HAL_DCMI_ConfigCrop,"ax",%progbits
 1102              		.align	1
 1103              		.global	HAL_DCMI_ConfigCrop
 1104              		.syntax unified
 1105              		.thumb
 1106              		.thumb_func
 1107              		.fpu fpv5-sp-d16
ARM GAS  /tmp/cclUKF5F.s 			page 44


 1109              	HAL_DCMI_ConfigCrop:
 1110              	.LFB154:
 779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Process Locked */
 1111              		.loc 1 779 0
 1112              		.cfi_startproc
 1113              		@ args = 4, pretend = 0, frame = 0
 1114              		@ frame_needed = 0, uses_anonymous_args = 0
 1115              		@ link register save eliminated.
 1116              	.LVL81:
 1117 0000 30B4     		push	{r4, r5}
 1118              	.LCFI11:
 1119              		.cfi_def_cfa_offset 8
 1120              		.cfi_offset 4, -8
 1121              		.cfi_offset 5, -4
 781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 1122              		.loc 1 781 0
 1123 0002 90F83440 		ldrb	r4, [r0, #52]	@ zero_extendqisi2
 1124 0006 012C     		cmp	r4, #1
 1125 0008 14D0     		beq	.L91
 784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 1126              		.loc 1 784 0 discriminator 2
 1127 000a 0224     		movs	r4, #2
 1128 000c 80F83540 		strb	r4, [r0, #53]
 793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   hdcmi->Instance->CWSTRTR = (X0 | (Y0 << DCMI_CWSTRT_VST_Pos));
 1129              		.loc 1 793 0 discriminator 2
 1130 0010 0468     		ldr	r4, [r0]
 1131 0012 029D     		ldr	r5, [sp, #8]
 1132 0014 43EA0543 		orr	r3, r3, r5, lsl #16
 1133              	.LVL82:
 1134 0018 6362     		str	r3, [r4, #36]
 794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 1135              		.loc 1 794 0 discriminator 2
 1136 001a 0368     		ldr	r3, [r0]
 1137 001c 41EA0241 		orr	r1, r1, r2, lsl #16
 1138              	.LVL83:
 1139 0020 1962     		str	r1, [r3, #32]
 797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 1140              		.loc 1 797 0 discriminator 2
 1141 0022 0123     		movs	r3, #1
 1142 0024 80F83530 		strb	r3, [r0, #53]
 800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 1143              		.loc 1 800 0 discriminator 2
 1144 0028 0023     		movs	r3, #0
 1145 002a 80F83430 		strb	r3, [r0, #52]
 802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** }
 1146              		.loc 1 802 0 discriminator 2
 1147 002e 1846     		mov	r0, r3
 1148              	.LVL84:
 1149              	.L90:
 803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 1150              		.loc 1 803 0
 1151 0030 30BC     		pop	{r4, r5}
 1152              	.LCFI12:
 1153              		.cfi_remember_state
 1154              		.cfi_restore 5
 1155              		.cfi_restore 4
 1156              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/cclUKF5F.s 			page 45


 1157              	.LVL85:
 1158 0032 7047     		bx	lr
 1159              	.LVL86:
 1160              	.L91:
 1161              	.LCFI13:
 1162              		.cfi_restore_state
 781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 1163              		.loc 1 781 0
 1164 0034 0220     		movs	r0, #2
 1165              	.LVL87:
 1166 0036 FBE7     		b	.L90
 1167              		.cfi_endproc
 1168              	.LFE154:
 1170              		.section	.text.HAL_DCMI_DisableCrop,"ax",%progbits
 1171              		.align	1
 1172              		.global	HAL_DCMI_DisableCrop
 1173              		.syntax unified
 1174              		.thumb
 1175              		.thumb_func
 1176              		.fpu fpv5-sp-d16
 1178              	HAL_DCMI_DisableCrop:
 1179              	.LFB155:
 812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Process Locked */
 1180              		.loc 1 812 0
 1181              		.cfi_startproc
 1182              		@ args = 0, pretend = 0, frame = 0
 1183              		@ frame_needed = 0, uses_anonymous_args = 0
 1184              		@ link register save eliminated.
 1185              	.LVL88:
 814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 1186              		.loc 1 814 0
 1187 0000 90F83430 		ldrb	r3, [r0, #52]	@ zero_extendqisi2
 1188 0004 012B     		cmp	r3, #1
 1189 0006 11D0     		beq	.L95
 814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 1190              		.loc 1 814 0 is_stmt 0 discriminator 2
 1191 0008 0122     		movs	r2, #1
 1192 000a 80F83420 		strb	r2, [r0, #52]
 817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 1193              		.loc 1 817 0 is_stmt 1 discriminator 2
 1194 000e 0223     		movs	r3, #2
 1195 0010 80F83530 		strb	r3, [r0, #53]
 820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 1196              		.loc 1 820 0 discriminator 2
 1197 0014 0168     		ldr	r1, [r0]
 1198 0016 0B68     		ldr	r3, [r1]
 1199 0018 23F00403 		bic	r3, r3, #4
 1200 001c 0B60     		str	r3, [r1]
 823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 1201              		.loc 1 823 0 discriminator 2
 1202 001e 80F83520 		strb	r2, [r0, #53]
 826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 1203              		.loc 1 826 0 discriminator 2
 1204 0022 0023     		movs	r3, #0
 1205 0024 80F83430 		strb	r3, [r0, #52]
 828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** }
 1206              		.loc 1 828 0 discriminator 2
ARM GAS  /tmp/cclUKF5F.s 			page 46


 1207 0028 1846     		mov	r0, r3
 1208              	.LVL89:
 1209 002a 7047     		bx	lr
 1210              	.LVL90:
 1211              	.L95:
 814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 1212              		.loc 1 814 0
 1213 002c 0220     		movs	r0, #2
 1214              	.LVL91:
 829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 1215              		.loc 1 829 0
 1216 002e 7047     		bx	lr
 1217              		.cfi_endproc
 1218              	.LFE155:
 1220              		.section	.text.HAL_DCMI_EnableCrop,"ax",%progbits
 1221              		.align	1
 1222              		.global	HAL_DCMI_EnableCrop
 1223              		.syntax unified
 1224              		.thumb
 1225              		.thumb_func
 1226              		.fpu fpv5-sp-d16
 1228              	HAL_DCMI_EnableCrop:
 1229              	.LFB156:
 838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Process Locked */
 1230              		.loc 1 838 0
 1231              		.cfi_startproc
 1232              		@ args = 0, pretend = 0, frame = 0
 1233              		@ frame_needed = 0, uses_anonymous_args = 0
 1234              		@ link register save eliminated.
 1235              	.LVL92:
 840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 1236              		.loc 1 840 0
 1237 0000 90F83430 		ldrb	r3, [r0, #52]	@ zero_extendqisi2
 1238 0004 012B     		cmp	r3, #1
 1239 0006 11D0     		beq	.L98
 840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 1240              		.loc 1 840 0 is_stmt 0 discriminator 2
 1241 0008 0122     		movs	r2, #1
 1242 000a 80F83420 		strb	r2, [r0, #52]
 843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 1243              		.loc 1 843 0 is_stmt 1 discriminator 2
 1244 000e 0223     		movs	r3, #2
 1245 0010 80F83530 		strb	r3, [r0, #53]
 846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 1246              		.loc 1 846 0 discriminator 2
 1247 0014 0168     		ldr	r1, [r0]
 1248 0016 0B68     		ldr	r3, [r1]
 1249 0018 43F00403 		orr	r3, r3, #4
 1250 001c 0B60     		str	r3, [r1]
 849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 1251              		.loc 1 849 0 discriminator 2
 1252 001e 80F83520 		strb	r2, [r0, #53]
 852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 1253              		.loc 1 852 0 discriminator 2
 1254 0022 0023     		movs	r3, #0
 1255 0024 80F83430 		strb	r3, [r0, #52]
 854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** }
ARM GAS  /tmp/cclUKF5F.s 			page 47


 1256              		.loc 1 854 0 discriminator 2
 1257 0028 1846     		mov	r0, r3
 1258              	.LVL93:
 1259 002a 7047     		bx	lr
 1260              	.LVL94:
 1261              	.L98:
 840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 1262              		.loc 1 840 0
 1263 002c 0220     		movs	r0, #2
 1264              	.LVL95:
 855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 1265              		.loc 1 855 0
 1266 002e 7047     		bx	lr
 1267              		.cfi_endproc
 1268              	.LFE156:
 1270              		.section	.text.HAL_DCMI_ConfigSyncUnmask,"ax",%progbits
 1271              		.align	1
 1272              		.global	HAL_DCMI_ConfigSyncUnmask
 1273              		.syntax unified
 1274              		.thumb
 1275              		.thumb_func
 1276              		.fpu fpv5-sp-d16
 1278              	HAL_DCMI_ConfigSyncUnmask:
 1279              	.LFB157:
 866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Process Locked */
 1280              		.loc 1 866 0
 1281              		.cfi_startproc
 1282              		@ args = 0, pretend = 0, frame = 0
 1283              		@ frame_needed = 0, uses_anonymous_args = 0
 1284              		@ link register save eliminated.
 1285              	.LVL96:
 868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 1286              		.loc 1 868 0
 1287 0000 90F83430 		ldrb	r3, [r0, #52]	@ zero_extendqisi2
 1288 0004 012B     		cmp	r3, #1
 1289 0006 1BD0     		beq	.L101
 866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   /* Process Locked */
 1290              		.loc 1 866 0 discriminator 2
 1291 0008 10B4     		push	{r4}
 1292              	.LCFI14:
 1293              		.cfi_def_cfa_offset 4
 1294              		.cfi_offset 4, -4
 868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 1295              		.loc 1 868 0 discriminator 2
 1296 000a 0122     		movs	r2, #1
 1297 000c 80F83420 		strb	r2, [r0, #52]
 871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 1298              		.loc 1 871 0 discriminator 2
 1299 0010 0223     		movs	r3, #2
 1300 0012 80F83530 		strb	r3, [r0, #53]
 874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****                            ((uint32_t)SyncUnmask->LineStartUnmask << DCMI_ESUR_LSU_Pos) | \
 1301              		.loc 1 874 0 discriminator 2
 1302 0016 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****                            ((uint32_t)SyncUnmask->LineEndUnmask << DCMI_ESUR_LEU_Pos) | \
 1303              		.loc 1 875 0 discriminator 2
 1304 0018 4C78     		ldrb	r4, [r1, #1]	@ zero_extendqisi2
 874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****                            ((uint32_t)SyncUnmask->LineStartUnmask << DCMI_ESUR_LSU_Pos) | \
ARM GAS  /tmp/cclUKF5F.s 			page 48


 1305              		.loc 1 874 0 discriminator 2
 1306 001a 43EA0423 		orr	r3, r3, r4, lsl #8
 876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****                            ((uint32_t)SyncUnmask->FrameEndUnmask << DCMI_ESUR_FEU_Pos));
 1307              		.loc 1 876 0 discriminator 2
 1308 001e 8C78     		ldrb	r4, [r1, #2]	@ zero_extendqisi2
 875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****                            ((uint32_t)SyncUnmask->LineEndUnmask << DCMI_ESUR_LEU_Pos) | \
 1309              		.loc 1 875 0 discriminator 2
 1310 0020 43EA0443 		orr	r3, r3, r4, lsl #16
 877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 1311              		.loc 1 877 0 discriminator 2
 1312 0024 CC78     		ldrb	r4, [r1, #3]	@ zero_extendqisi2
 874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****                            ((uint32_t)SyncUnmask->LineStartUnmask << DCMI_ESUR_LSU_Pos) | \
 1313              		.loc 1 874 0 discriminator 2
 1314 0026 0168     		ldr	r1, [r0]
 1315              	.LVL97:
 876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****                            ((uint32_t)SyncUnmask->FrameEndUnmask << DCMI_ESUR_FEU_Pos));
 1316              		.loc 1 876 0 discriminator 2
 1317 0028 43EA0463 		orr	r3, r3, r4, lsl #24
 874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****                            ((uint32_t)SyncUnmask->LineStartUnmask << DCMI_ESUR_LSU_Pos) | \
 1318              		.loc 1 874 0 discriminator 2
 1319 002c CB61     		str	r3, [r1, #28]
 880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 1320              		.loc 1 880 0 discriminator 2
 1321 002e 80F83520 		strb	r2, [r0, #53]
 883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 1322              		.loc 1 883 0 discriminator 2
 1323 0032 0023     		movs	r3, #0
 1324 0034 80F83430 		strb	r3, [r0, #52]
 885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** }
 1325              		.loc 1 885 0 discriminator 2
 1326 0038 1846     		mov	r0, r3
 1327              	.LVL98:
 886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 1328              		.loc 1 886 0 discriminator 2
 1329 003a 5DF8044B 		ldr	r4, [sp], #4
 1330              	.LCFI15:
 1331              		.cfi_restore 4
 1332              		.cfi_def_cfa_offset 0
 1333 003e 7047     		bx	lr
 1334              	.LVL99:
 1335              	.L101:
 868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 1336              		.loc 1 868 0
 1337 0040 0220     		movs	r0, #2
 1338              	.LVL100:
 886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 1339              		.loc 1 886 0
 1340 0042 7047     		bx	lr
 1341              		.cfi_endproc
 1342              	.LFE157:
 1344              		.section	.text.HAL_DCMI_GetState,"ax",%progbits
 1345              		.align	1
 1346              		.global	HAL_DCMI_GetState
 1347              		.syntax unified
 1348              		.thumb
 1349              		.thumb_func
 1350              		.fpu fpv5-sp-d16
ARM GAS  /tmp/cclUKF5F.s 			page 49


 1352              	HAL_DCMI_GetState:
 1353              	.LFB158:
 915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   return hdcmi->State;
 1354              		.loc 1 915 0
 1355              		.cfi_startproc
 1356              		@ args = 0, pretend = 0, frame = 0
 1357              		@ frame_needed = 0, uses_anonymous_args = 0
 1358              		@ link register save eliminated.
 1359              	.LVL101:
 916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** }
 1360              		.loc 1 916 0
 1361 0000 90F83500 		ldrb	r0, [r0, #53]	@ zero_extendqisi2
 1362              	.LVL102:
 917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 1363              		.loc 1 917 0
 1364 0004 7047     		bx	lr
 1365              		.cfi_endproc
 1366              	.LFE158:
 1368              		.section	.text.HAL_DCMI_GetError,"ax",%progbits
 1369              		.align	1
 1370              		.global	HAL_DCMI_GetError
 1371              		.syntax unified
 1372              		.thumb
 1373              		.thumb_func
 1374              		.fpu fpv5-sp-d16
 1376              	HAL_DCMI_GetError:
 1377              	.LFB159:
 926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c ****   return hdcmi->ErrorCode;
 1378              		.loc 1 926 0
 1379              		.cfi_startproc
 1380              		@ args = 0, pretend = 0, frame = 0
 1381              		@ frame_needed = 0, uses_anonymous_args = 0
 1382              		@ link register save eliminated.
 1383              	.LVL103:
 927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** }
 1384              		.loc 1 927 0
 1385 0000 C06C     		ldr	r0, [r0, #76]
 1386              	.LVL104:
 928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dcmi.c **** 
 1387              		.loc 1 928 0
 1388 0002 7047     		bx	lr
 1389              		.cfi_endproc
 1390              	.LFE159:
 1392              		.text
 1393              	.Letext0:
 1394              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 1395              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 1396              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 1397              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 1398              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 1399              		.file 7 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 1400              		.file 8 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 1401              		.file 9 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma_ex.h"
 1402              		.file 10 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dcmi.h"
 1403              		.file 11 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
ARM GAS  /tmp/cclUKF5F.s 			page 50


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f7xx_hal_dcmi.c
     /tmp/cclUKF5F.s:18     .text.DCMI_DMAXferCplt:0000000000000000 $t
     /tmp/cclUKF5F.s:24     .text.DCMI_DMAXferCplt:0000000000000000 DCMI_DMAXferCplt
     /tmp/cclUKF5F.s:154    .text.HAL_DCMI_MspInit:0000000000000000 $t
     /tmp/cclUKF5F.s:161    .text.HAL_DCMI_MspInit:0000000000000000 HAL_DCMI_MspInit
     /tmp/cclUKF5F.s:175    .text.HAL_DCMI_Init:0000000000000000 $t
     /tmp/cclUKF5F.s:182    .text.HAL_DCMI_Init:0000000000000000 HAL_DCMI_Init
     /tmp/cclUKF5F.s:320    .text.HAL_DCMI_Init:000000000000009c $d
     /tmp/cclUKF5F.s:325    .text.HAL_DCMI_MspDeInit:0000000000000000 $t
     /tmp/cclUKF5F.s:332    .text.HAL_DCMI_MspDeInit:0000000000000000 HAL_DCMI_MspDeInit
     /tmp/cclUKF5F.s:346    .text.HAL_DCMI_DeInit:0000000000000000 $t
     /tmp/cclUKF5F.s:353    .text.HAL_DCMI_DeInit:0000000000000000 HAL_DCMI_DeInit
     /tmp/cclUKF5F.s:382    .text.HAL_DCMI_Start_DMA:0000000000000000 $t
     /tmp/cclUKF5F.s:389    .text.HAL_DCMI_Start_DMA:0000000000000000 HAL_DCMI_Start_DMA
     /tmp/cclUKF5F.s:551    .text.HAL_DCMI_Start_DMA:00000000000000c8 $d
     /tmp/cclUKF5F.s:854    .text.DCMI_DMAError:0000000000000000 DCMI_DMAError
     /tmp/cclUKF5F.s:557    .text.HAL_DCMI_Stop:0000000000000000 $t
     /tmp/cclUKF5F.s:564    .text.HAL_DCMI_Stop:0000000000000000 HAL_DCMI_Stop
     /tmp/cclUKF5F.s:663    .text.HAL_DCMI_Stop:000000000000007c $d
     /tmp/cclUKF5F.s:669    .text.HAL_DCMI_Suspend:0000000000000000 $t
     /tmp/cclUKF5F.s:676    .text.HAL_DCMI_Suspend:0000000000000000 HAL_DCMI_Suspend
     /tmp/cclUKF5F.s:765    .text.HAL_DCMI_Suspend:0000000000000074 $d
     /tmp/cclUKF5F.s:771    .text.HAL_DCMI_Resume:0000000000000000 $t
     /tmp/cclUKF5F.s:778    .text.HAL_DCMI_Resume:0000000000000000 HAL_DCMI_Resume
     /tmp/cclUKF5F.s:827    .text.HAL_DCMI_ErrorCallback:0000000000000000 $t
     /tmp/cclUKF5F.s:834    .text.HAL_DCMI_ErrorCallback:0000000000000000 HAL_DCMI_ErrorCallback
     /tmp/cclUKF5F.s:848    .text.DCMI_DMAError:0000000000000000 $t
     /tmp/cclUKF5F.s:891    .text.HAL_DCMI_LineEventCallback:0000000000000000 $t
     /tmp/cclUKF5F.s:898    .text.HAL_DCMI_LineEventCallback:0000000000000000 HAL_DCMI_LineEventCallback
     /tmp/cclUKF5F.s:912    .text.HAL_DCMI_VsyncEventCallback:0000000000000000 $t
     /tmp/cclUKF5F.s:919    .text.HAL_DCMI_VsyncEventCallback:0000000000000000 HAL_DCMI_VsyncEventCallback
     /tmp/cclUKF5F.s:933    .text.HAL_DCMI_FrameEventCallback:0000000000000000 $t
     /tmp/cclUKF5F.s:940    .text.HAL_DCMI_FrameEventCallback:0000000000000000 HAL_DCMI_FrameEventCallback
     /tmp/cclUKF5F.s:954    .text.HAL_DCMI_IRQHandler:0000000000000000 $t
     /tmp/cclUKF5F.s:961    .text.HAL_DCMI_IRQHandler:0000000000000000 HAL_DCMI_IRQHandler
     /tmp/cclUKF5F.s:1097   .text.HAL_DCMI_IRQHandler:00000000000000b8 $d
     /tmp/cclUKF5F.s:1102   .text.HAL_DCMI_ConfigCrop:0000000000000000 $t
     /tmp/cclUKF5F.s:1109   .text.HAL_DCMI_ConfigCrop:0000000000000000 HAL_DCMI_ConfigCrop
     /tmp/cclUKF5F.s:1171   .text.HAL_DCMI_DisableCrop:0000000000000000 $t
     /tmp/cclUKF5F.s:1178   .text.HAL_DCMI_DisableCrop:0000000000000000 HAL_DCMI_DisableCrop
     /tmp/cclUKF5F.s:1221   .text.HAL_DCMI_EnableCrop:0000000000000000 $t
     /tmp/cclUKF5F.s:1228   .text.HAL_DCMI_EnableCrop:0000000000000000 HAL_DCMI_EnableCrop
     /tmp/cclUKF5F.s:1271   .text.HAL_DCMI_ConfigSyncUnmask:0000000000000000 $t
     /tmp/cclUKF5F.s:1278   .text.HAL_DCMI_ConfigSyncUnmask:0000000000000000 HAL_DCMI_ConfigSyncUnmask
     /tmp/cclUKF5F.s:1345   .text.HAL_DCMI_GetState:0000000000000000 $t
     /tmp/cclUKF5F.s:1352   .text.HAL_DCMI_GetState:0000000000000000 HAL_DCMI_GetState
     /tmp/cclUKF5F.s:1369   .text.HAL_DCMI_GetError:0000000000000000 $t
     /tmp/cclUKF5F.s:1376   .text.HAL_DCMI_GetError:0000000000000000 HAL_DCMI_GetError

UNDEFINED SYMBOLS
HAL_DMAEx_ChangeMemory
HAL_DMA_Start_IT
HAL_DMAEx_MultiBufferStart_IT
HAL_DMA_Abort
SystemCoreClock
HAL_DMA_Abort_IT
ARM GAS  /tmp/cclUKF5F.s 			page 51


