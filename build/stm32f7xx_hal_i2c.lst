ARM GAS  /tmp/ccX4fpHz.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f7xx_hal_i2c.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.I2C_Flush_TXDR,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-sp-d16
  24              	I2C_Flush_TXDR:
  25              	.LFB203:
  26              		.file 1 "Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c"
   1:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
   2:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   ******************************************************************************
   3:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @file    stm32f7xx_hal_i2c.c
   4:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @author  MCD Application Team
   5:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief   I2C HAL module driver.
   6:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          functionalities of the Inter Integrated Circuit (I2C) peripheral:
   8:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *           + IO operation functions
  10:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *           + Peripheral State and Errors functions
  11:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *
  12:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   @verbatim
  13:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   ==============================================================================
  14:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                         ##### How to use this driver #####
  15:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   ==============================================================================
  16:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]
  17:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     The I2C HAL driver can be used as follows:
  18:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
  19:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     (#) Declare a I2C_HandleTypeDef handle structure, for example:
  20:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_HandleTypeDef  hi2c;
  21:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
  22:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     (#)Initialize the I2C low level resources by implementing the @ref HAL_I2C_MspInit() API:
  23:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (##) Enable the I2Cx interface clock
  24:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (##) I2C pins configuration
  25:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             (+++) Enable the clock for the I2C GPIOs
  26:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             (+++) Configure I2C pins as alternate function open-drain
  27:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (##) NVIC configuration if you need to use interrupt process
  28:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             (+++) Configure the I2Cx interrupt priority
  29:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             (+++) Enable the NVIC I2C IRQ Channel
  30:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (##) DMA Configuration if you need to use DMA process
  31:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             (+++) Declare a DMA_HandleTypeDef handle structure for the transmit or receive stream
  32:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             (+++) Enable the DMAx interface clock using
ARM GAS  /tmp/ccX4fpHz.s 			page 2


  33:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             (+++) Configure the DMA handle parameters
  34:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             (+++) Configure the DMA Tx or Rx stream
  35:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             (+++) Associate the initialized DMA handle to the hi2c DMA Tx or Rx handle
  36:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete interrupt on
  37:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                   the DMA Tx or Rx stream
  38:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
  39:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     (#) Configure the Communication Clock Timing, Own Address1, Master Addressing mode, Dual Addres
  40:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         Own Address2, Own Address2 Mask, General call and Nostretch mode in the hi2c Init structure
  41:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
  42:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     (#) Initialize the I2C registers by calling the @ref HAL_I2C_Init(), configures also the low le
  43:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (GPIO, CLOCK, NVIC...etc) by calling the customized @ref HAL_I2C_MspInit(&hi2c) API.
  44:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
  45:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     (#) To check if target device is ready for communication, use the function @ref HAL_I2C_IsDevic
  46:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
  47:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     (#) For I2C IO and IO MEM operations, three operation modes are available within this driver :
  48:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
  49:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     *** Polling mode IO operation ***
  50:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     =================================
  51:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]
  52:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Transmit in master mode an amount of data in blocking mode using @ref HAL_I2C_Master_Tran
  53:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Receive in master mode an amount of data in blocking mode using @ref HAL_I2C_Master_Recei
  54:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Transmit in slave mode an amount of data in blocking mode using @ref HAL_I2C_Slave_Transm
  55:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Receive in slave mode an amount of data in blocking mode using @ref HAL_I2C_Slave_Receive
  56:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
  57:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     *** Polling mode IO MEM operation ***
  58:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     =====================================
  59:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]
  60:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Write an amount of data in blocking mode to a specific memory address using @ref HAL_I2C_
  61:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Read an amount of data in blocking mode from a specific memory address using @ref HAL_I2C
  62:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
  63:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
  64:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     *** Interrupt mode IO operation ***
  65:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     ===================================
  66:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]
  67:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Transmit in master mode an amount of data in non-blocking mode using @ref HAL_I2C_Master_
  68:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) At transmission end of transfer, @ref HAL_I2C_MasterTxCpltCallback() is executed and user
  69:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_MasterTxCpltCallback(
  70:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Receive in master mode an amount of data in non-blocking mode using @ref HAL_I2C_Master_R
  71:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) At reception end of transfer, @ref HAL_I2C_MasterRxCpltCallback() is executed and user ca
  72:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_MasterRxCpltCallback(
  73:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Transmit in slave mode an amount of data in non-blocking mode using @ref HAL_I2C_Slave_Tr
  74:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) At transmission end of transfer, @ref HAL_I2C_SlaveTxCpltCallback() is executed and user 
  75:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_SlaveTxCpltCallback()
  76:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Receive in slave mode an amount of data in non-blocking mode using @ref HAL_I2C_Slave_Rec
  77:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) At reception end of transfer, @ref HAL_I2C_SlaveRxCpltCallback() is executed and user can
  78:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_SlaveRxCpltCallback()
  79:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) In case of transfer Error, @ref HAL_I2C_ErrorCallback() function is executed and user can
  80:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_ErrorCallback()
  81:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Abort a master I2C process communication with Interrupt using @ref HAL_I2C_Master_Abort_I
  82:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) End of abort process, @ref HAL_I2C_AbortCpltCallback() is executed and user can
  83:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_AbortCpltCallback()
  84:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Discard a slave I2C process communication using @ref __HAL_I2C_GENERATE_NACK() macro.
  85:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            This action will inform Master to generate a Stop condition to discard the communication
  86:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
  87:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
  88:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     *** Interrupt mode or DMA mode IO sequential operation ***
  89:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     ==========================================================
ARM GAS  /tmp/ccX4fpHz.s 			page 3


  90:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]
  91:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (@) These interfaces allow to manage a sequential transfer with a repeated start condition
  92:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           when a direction change during transfer
  93:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]
  94:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) A specific option field manage the different steps of a sequential transfer
  95:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Option field values are defined through @ref I2C_XFEROPTIONS and are listed below:
  96:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (++) I2C_FIRST_AND_LAST_FRAME: No sequential usage, functionnal is same as associated interfa
  97:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (++) I2C_FIRST_FRAME: Sequential usage, this option allow to manage a sequence with start con
  98:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                             and data to transfer without a final stop condition
  99:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (++) I2C_FIRST_AND_NEXT_FRAME: Sequential usage (Master only), this option allow to manage a 
 100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                             and data to transfer without a final stop condition, an then permit a c
 101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                             several times (like @ref HAL_I2C_Master_Seq_Transmit_IT() then @ref HAL
 102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                             or @ref HAL_I2C_Master_Seq_Transmit_DMA() then @ref HAL_I2C_Master_Seq_
 103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (++) I2C_NEXT_FRAME: Sequential usage, this option allow to manage a sequence with a restart 
 104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                             and with new data to transfer if the direction change or manage only th
 105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                             if no direction change and without a final stop condition in both cases
 106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (++) I2C_LAST_FRAME: Sequential usage, this option allow to manage a sequance with a restart 
 107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                             and with new data to transfer if the direction change or manage only th
 108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                             if no direction change and with a final stop condition in both cases
 109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (++) I2C_LAST_FRAME_NO_STOP: Sequential usage (Master only), this option allow to manage a re
 110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                             interface several times (link with option I2C_FIRST_AND_NEXT_FRAME).
 111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                             Usage can, transfer several bytes one by one using HAL_I2C_Master_Seq_T
 112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                               or HAL_I2C_Master_Seq_Receive_IT(option I2C_FIRST_AND_NEXT_FRAME then
 113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                               or HAL_I2C_Master_Seq_Transmit_DMA(option I2C_FIRST_AND_NEXT_FRAME th
 114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                               or HAL_I2C_Master_Seq_Receive_DMA(option I2C_FIRST_AND_NEXT_FRAME the
 115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                             Then usage of this option I2C_LAST_FRAME_NO_STOP at the last Transmit o
 116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                               without stopping the communication and so generate a restart conditio
 117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (++) I2C_OTHER_FRAME: Sequential usage (Master only), this option allow to manage a restart c
 118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                             interface.
 119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                             Usage can, transfer several bytes one by one with a restart with slave 
 120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                               or HAL_I2C_Master_Seq_Receive_IT(option I2C_FIRST_FRAME then I2C_OTHE
 121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                               or HAL_I2C_Master_Seq_Transmit_DMA(option I2C_FIRST_FRAME then I2C_OT
 122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                               or HAL_I2C_Master_Seq_Receive_DMA(option I2C_FIRST_FRAME then I2C_OTH
 123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                             Then usage of this option I2C_OTHER_AND_LAST_FRAME at the last frame to
 124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Differents sequential I2C interfaces are listed below:
 126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (++) Sequential transmit in master I2C mode an amount of data in non-blocking mode using @ref
 127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             or using @ref HAL_I2C_Master_Seq_Transmit_DMA()
 128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+++) At transmission end of current frame transfer, @ref HAL_I2C_MasterTxCpltCallback() is e
 129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_MasterTxCpltCallback(
 130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (++) Sequential receive in master I2C mode an amount of data in non-blocking mode using @ref 
 131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             or using @ref HAL_I2C_Master_Seq_Receive_DMA()
 132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+++) At reception end of current frame transfer, @ref HAL_I2C_MasterRxCpltCallback() is exec
 133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_MasterRxCpltCallback(
 134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (++) Abort a master IT or DMA I2C process communication with Interrupt using @ref HAL_I2C_Mas
 135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+++) End of abort process, @ref HAL_I2C_AbortCpltCallback() is executed and user can
 136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_AbortCpltCallback()
 137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (++) Enable/disable the Address listen mode in slave I2C mode using @ref HAL_I2C_EnableListen
 138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+++) When address slave I2C match, @ref HAL_I2C_AddrCallback() is executed and user can
 139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code to check the Address Match Code and the transmission direction request 
 140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+++) At Listen mode end @ref HAL_I2C_ListenCpltCallback() is executed and user can
 141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_ListenCpltCallback()
 142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (++) Sequential transmit in slave I2C mode an amount of data in non-blocking mode using @ref 
 143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             or using @ref HAL_I2C_Slave_Seq_Transmit_DMA()
 144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+++) At transmission end of current frame transfer, @ref HAL_I2C_SlaveTxCpltCallback() is ex
 145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_SlaveTxCpltCallback()
 146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (++) Sequential receive in slave I2C mode an amount of data in non-blocking mode using @ref H
ARM GAS  /tmp/ccX4fpHz.s 			page 4


 147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             or using @ref HAL_I2C_Slave_Seq_Receive_DMA()
 148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+++) At reception end of current frame transfer, @ref HAL_I2C_SlaveRxCpltCallback() is execu
 149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_SlaveRxCpltCallback()
 150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (++) In case of transfer Error, @ref HAL_I2C_ErrorCallback() function is executed and user ca
 151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_ErrorCallback()
 152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (++) Discard a slave I2C process communication using @ref __HAL_I2C_GENERATE_NACK() macro.
 153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            This action will inform Master to generate a Stop condition to discard the communication
 154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     *** Interrupt mode IO MEM operation ***
 156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     =======================================
 157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]
 158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Write an amount of data in non-blocking mode with Interrupt to a specific memory address 
 159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           @ref HAL_I2C_Mem_Write_IT()
 160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) At Memory end of write transfer, @ref HAL_I2C_MemTxCpltCallback() is executed and user ca
 161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_MemTxCpltCallback()
 162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Read an amount of data in non-blocking mode with Interrupt from a specific memory address
 163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           @ref HAL_I2C_Mem_Read_IT()
 164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) At Memory end of read transfer, @ref HAL_I2C_MemRxCpltCallback() is executed and user can
 165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_MemRxCpltCallback()
 166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) In case of transfer Error, @ref HAL_I2C_ErrorCallback() function is executed and user can
 167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_ErrorCallback()
 168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     *** DMA mode IO operation ***
 170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     ==============================
 171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]
 172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Transmit in master mode an amount of data in non-blocking mode (DMA) using
 173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           @ref HAL_I2C_Master_Transmit_DMA()
 174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) At transmission end of transfer, @ref HAL_I2C_MasterTxCpltCallback() is executed and user
 175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_MasterTxCpltCallback(
 176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Receive in master mode an amount of data in non-blocking mode (DMA) using
 177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           @ref HAL_I2C_Master_Receive_DMA()
 178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) At reception end of transfer, @ref HAL_I2C_MasterRxCpltCallback() is executed and user ca
 179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_MasterRxCpltCallback(
 180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Transmit in slave mode an amount of data in non-blocking mode (DMA) using
 181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           @ref HAL_I2C_Slave_Transmit_DMA()
 182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) At transmission end of transfer, @ref HAL_I2C_SlaveTxCpltCallback() is executed and user 
 183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_SlaveTxCpltCallback()
 184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Receive in slave mode an amount of data in non-blocking mode (DMA) using
 185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           @ref HAL_I2C_Slave_Receive_DMA()
 186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) At reception end of transfer, @ref HAL_I2C_SlaveRxCpltCallback() is executed and user can
 187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_SlaveRxCpltCallback()
 188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) In case of transfer Error, @ref HAL_I2C_ErrorCallback() function is executed and user can
 189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_ErrorCallback()
 190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Abort a master I2C process communication with Interrupt using @ref HAL_I2C_Master_Abort_I
 191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) End of abort process, @ref HAL_I2C_AbortCpltCallback() is executed and user can
 192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_AbortCpltCallback()
 193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Discard a slave I2C process communication using @ref __HAL_I2C_GENERATE_NACK() macro.
 194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            This action will inform Master to generate a Stop condition to discard the communication
 195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     *** DMA mode IO MEM operation ***
 197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     =================================
 198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]
 199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Write an amount of data in non-blocking mode with DMA to a specific memory address using
 200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           @ref HAL_I2C_Mem_Write_DMA()
 201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) At Memory end of write transfer, @ref HAL_I2C_MemTxCpltCallback() is executed and user ca
 202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_MemTxCpltCallback()
 203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Read an amount of data in non-blocking mode with DMA from a specific memory address using
ARM GAS  /tmp/ccX4fpHz.s 			page 5


 204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           @ref HAL_I2C_Mem_Read_DMA()
 205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) At Memory end of read transfer, @ref HAL_I2C_MemRxCpltCallback() is executed and user can
 206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_MemRxCpltCallback()
 207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) In case of transfer Error, @ref HAL_I2C_ErrorCallback() function is executed and user can
 208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_ErrorCallback()
 209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      *** I2C HAL driver macros list ***
 212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      ==================================
 213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      [..]
 214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        Below the list of most used macros in I2C HAL driver.
 215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) @ref __HAL_I2C_ENABLE: Enable the I2C peripheral
 217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) @ref __HAL_I2C_DISABLE: Disable the I2C peripheral
 218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) @ref __HAL_I2C_GENERATE_NACK: Generate a Non-Acknowledge I2C peripheral in Slave mode
 219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) @ref __HAL_I2C_GET_FLAG: Check whether the specified I2C flag is set or not
 220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) @ref __HAL_I2C_CLEAR_FLAG: Clear the specified I2C pending flag
 221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) @ref __HAL_I2C_ENABLE_IT: Enable the specified I2C interrupt
 222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) @ref __HAL_I2C_DISABLE_IT: Disable the specified I2C interrupt
 223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      *** Callback registration ***
 225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      =============================================
 226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]
 227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      The compilation flag USE_HAL_I2C_REGISTER_CALLBACKS when set to 1
 228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      allows the user to configure dynamically the driver callbacks.
 229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      Use Functions @ref HAL_I2C_RegisterCallback() or @ref HAL_I2C_RegisterAddrCallback()
 230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      to register an interrupt callback.
 231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]
 232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      Function @ref HAL_I2C_RegisterCallback() allows to register following callbacks:
 233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) MasterTxCpltCallback : callback for Master transmission end of transfer.
 234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) MasterRxCpltCallback : callback for Master reception end of transfer.
 235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) SlaveTxCpltCallback  : callback for Slave transmission end of transfer.
 236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) SlaveRxCpltCallback  : callback for Slave reception end of transfer.
 237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) ListenCpltCallback   : callback for end of listen mode.
 238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) MemTxCpltCallback    : callback for Memory transmission end of transfer.
 239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) MemRxCpltCallback    : callback for Memory reception end of transfer.
 240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) ErrorCallback        : callback for error detection.
 241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) AbortCpltCallback    : callback for abort completion process.
 242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) MspInitCallback      : callback for Msp Init.
 243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) MspDeInitCallback    : callback for Msp DeInit.
 244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      This function takes as parameters the HAL peripheral handle, the Callback ID
 245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      and a pointer to the user callback function.
 246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]
 247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      For specific callback AddrCallback use dedicated register callbacks : @ref HAL_I2C_RegisterAdd
 248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]
 249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      Use function @ref HAL_I2C_UnRegisterCallback to reset a callback to the default
 250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      weak function.
 251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      @ref HAL_I2C_UnRegisterCallback takes as parameters the HAL peripheral handle,
 252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      and the Callback ID.
 253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      This function allows to reset following callbacks:
 254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) MasterTxCpltCallback : callback for Master transmission end of transfer.
 255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) MasterRxCpltCallback : callback for Master reception end of transfer.
 256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) SlaveTxCpltCallback  : callback for Slave transmission end of transfer.
 257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) SlaveRxCpltCallback  : callback for Slave reception end of transfer.
 258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) ListenCpltCallback   : callback for end of listen mode.
 259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) MemTxCpltCallback    : callback for Memory transmission end of transfer.
 260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) MemRxCpltCallback    : callback for Memory reception end of transfer.
ARM GAS  /tmp/ccX4fpHz.s 			page 6


 261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) ErrorCallback        : callback for error detection.
 262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) AbortCpltCallback    : callback for abort completion process.
 263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) MspInitCallback      : callback for Msp Init.
 264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) MspDeInitCallback    : callback for Msp DeInit.
 265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]
 266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      For callback AddrCallback use dedicated register callbacks : @ref HAL_I2C_UnRegisterAddrCallba
 267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]
 268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      By default, after the @ref HAL_I2C_Init() and when the state is @ref HAL_I2C_STATE_RESET
 269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      all callbacks are set to the corresponding weak functions:
 270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      examples @ref HAL_I2C_MasterTxCpltCallback(), @ref HAL_I2C_MasterRxCpltCallback().
 271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      Exception done for MspInit and MspDeInit functions that are
 272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      reset to the legacy weak functions in the @ref HAL_I2C_Init()/ @ref HAL_I2C_DeInit() only when
 273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      these callbacks are null (not registered beforehand).
 274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      If MspInit or MspDeInit are not null, the @ref HAL_I2C_Init()/ @ref HAL_I2C_DeInit()
 275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      keep and use the user MspInit/MspDeInit callbacks (registered beforehand) whatever the state.
 276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]
 277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      Callbacks can be registered/unregistered in @ref HAL_I2C_STATE_READY state only.
 278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      Exception done MspInit/MspDeInit functions that can be registered/unregistered
 279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      in @ref HAL_I2C_STATE_READY or @ref HAL_I2C_STATE_RESET state,
 280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      thus registered (user) MspInit/DeInit callbacks can be used during the Init/DeInit.
 281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      Then, the user first registers the MspInit/MspDeInit user callbacks
 282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      using @ref HAL_I2C_RegisterCallback() before calling @ref HAL_I2C_DeInit()
 283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      or @ref HAL_I2C_Init() function.
 284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]
 285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      When the compilation flag USE_HAL_I2C_REGISTER_CALLBACKS is set to 0 or
 286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      not defined, the callback registration feature is not available and all callbacks
 287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      are set to the corresponding weak functions.
 288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      [..]
 290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (@) You can refer to the I2C HAL driver header file for more useful macros
 291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   @endverbatim
 293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   ******************************************************************************
 294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @attention
 295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *
 296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
 297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * All rights reserved.</center></h2>
 298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *
 299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * the "License"; You may not use this file except in compliance with the
 301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * License. You may obtain a copy of the License at:
 302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                        opensource.org/licenses/BSD-3-Clause
 303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *
 304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   ******************************************************************************
 305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
 306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Includes ------------------------------------------------------------------*/
 308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #include "stm32f7xx_hal.h"
 309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /** @addtogroup STM32F7xx_HAL_Driver
 311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @{
 312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
 313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /** @defgroup I2C I2C
 315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief I2C HAL module driver
 316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @{
 317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
ARM GAS  /tmp/ccX4fpHz.s 			page 7


 318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #ifdef HAL_I2C_MODULE_ENABLED
 320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private typedef -----------------------------------------------------------*/
 322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private define ------------------------------------------------------------*/
 323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /** @defgroup I2C_Private_Define I2C Private Define
 325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @{
 326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
 327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define TIMING_CLEAR_MASK   (0xF0FFFFFFU)  /*!< I2C TIMING clear register Mask */
 328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_TIMEOUT_ADDR    (10000U)       /*!< 10 s  */
 329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_TIMEOUT_BUSY    (25U)          /*!< 25 ms */
 330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_TIMEOUT_DIR     (25U)          /*!< 25 ms */
 331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_TIMEOUT_RXNE    (25U)          /*!< 25 ms */
 332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_TIMEOUT_STOPF   (25U)          /*!< 25 ms */
 333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_TIMEOUT_TC      (25U)          /*!< 25 ms */
 334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_TIMEOUT_TCR     (25U)          /*!< 25 ms */
 335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_TIMEOUT_TXIS    (25U)          /*!< 25 ms */
 336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_TIMEOUT_FLAG    (25U)          /*!< 25 ms */
 337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define MAX_NBYTE_SIZE      255U
 339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define SlaveAddr_SHIFT     7U
 340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define SlaveAddr_MSK       0x06U
 341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private define for @ref PreviousState usage */
 343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_STATE_MSK             ((uint32_t)((uint32_t)((uint32_t)HAL_I2C_STATE_BUSY_TX | (uint32_
 344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_STATE_NONE            ((uint32_t)(HAL_I2C_MODE_NONE))                                  
 345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_STATE_MASTER_BUSY_TX  ((uint32_t)(((uint32_t)HAL_I2C_STATE_BUSY_TX & I2C_STATE_MSK) | (
 346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_STATE_MASTER_BUSY_RX  ((uint32_t)(((uint32_t)HAL_I2C_STATE_BUSY_RX & I2C_STATE_MSK) | (
 347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_STATE_SLAVE_BUSY_TX   ((uint32_t)(((uint32_t)HAL_I2C_STATE_BUSY_TX & I2C_STATE_MSK) | (
 348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_STATE_SLAVE_BUSY_RX   ((uint32_t)(((uint32_t)HAL_I2C_STATE_BUSY_RX & I2C_STATE_MSK) | (
 349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_STATE_MEM_BUSY_TX     ((uint32_t)(((uint32_t)HAL_I2C_STATE_BUSY_TX & I2C_STATE_MSK) | (
 350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_STATE_MEM_BUSY_RX     ((uint32_t)(((uint32_t)HAL_I2C_STATE_BUSY_RX & I2C_STATE_MSK) | (
 351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private define to centralize the enable/disable of Interrupts */
 354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_XFER_TX_IT          (0x00000001U)
 355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_XFER_RX_IT          (0x00000002U)
 356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_XFER_LISTEN_IT      (0x00000004U)
 357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_XFER_ERROR_IT       (0x00000011U)
 359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_XFER_CPLT_IT        (0x00000012U)
 360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_XFER_RELOAD_IT      (0x00000012U)
 361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private define Sequential Transfer Options default/reset value */
 363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_NO_OPTION_FRAME     (0xFFFF0000U)
 364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
 365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @}
 366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
 367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private macro -------------------------------------------------------------*/
 369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private variables ---------------------------------------------------------*/
 370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private function prototypes -----------------------------------------------*/
 371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /** @defgroup I2C_Private_Functions I2C Private Functions
 373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @{
 374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
ARM GAS  /tmp/ccX4fpHz.s 			page 8


 375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private functions to handle DMA transfer */
 376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_DMAMasterTransmitCplt(DMA_HandleTypeDef *hdma);
 377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_DMAMasterReceiveCplt(DMA_HandleTypeDef *hdma);
 378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_DMASlaveTransmitCplt(DMA_HandleTypeDef *hdma);
 379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_DMASlaveReceiveCplt(DMA_HandleTypeDef *hdma);
 380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_DMAError(DMA_HandleTypeDef *hdma);
 381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_DMAAbort(DMA_HandleTypeDef *hdma);
 382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private functions to handle IT transfer */
 384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_ITAddrCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags);
 385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_ITMasterSeqCplt(I2C_HandleTypeDef *hi2c);
 386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_ITSlaveSeqCplt(I2C_HandleTypeDef *hi2c);
 387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_ITMasterCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags);
 388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_ITSlaveCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags);
 389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_ITListenCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags);
 390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_ITError(I2C_HandleTypeDef *hi2c, uint32_t ErrorCode);
 391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private functions to handle IT transfer */
 393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint1
 394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_RequestMemoryRead(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16
 395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private functions for I2C transfer IRQ handler */
 397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Master_ISR_IT(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uint
 398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Slave_ISR_IT(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uint3
 399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Master_ISR_DMA(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uin
 400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Slave_ISR_DMA(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uint
 401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private functions to handle flags during polling transfer */
 403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagSta
 404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnTXISFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, 
 405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnRXNEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, 
 406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnSTOPFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, 
 407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_
 408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private functions to centralize the enable/disable of Interrupts */
 410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_Enable_IRQ(I2C_HandleTypeDef *hi2c, uint16_t InterruptRequest);
 411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_Disable_IRQ(I2C_HandleTypeDef *hi2c, uint16_t InterruptRequest);
 412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private function to flush TXDR register */
 414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_Flush_TXDR(I2C_HandleTypeDef *hi2c);
 415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private function to handle  start, restart or stop a transfer */
 417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_TransferConfig(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t Size, uint32_t
 418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private function to Convert Specific options */
 420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_ConvertOtherXferOptions(I2C_HandleTypeDef *hi2c);
 421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
 422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @}
 423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
 424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Exported functions --------------------------------------------------------*/
 426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /** @defgroup I2C_Exported_Functions I2C Exported Functions
 428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @{
 429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
 430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /** @defgroup I2C_Exported_Functions_Group1 Initialization and de-initialization functions
ARM GAS  /tmp/ccX4fpHz.s 			page 9


 432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****  *  @brief    Initialization and Configuration functions
 433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****  *
 434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** @verbatim
 435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****  ===============================================================================
 436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               ##### Initialization and de-initialization functions #####
 437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****  ===============================================================================
 438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]  This subsection provides a set of functions allowing to initialize and
 439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           deinitialize the I2Cx peripheral:
 440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) User must Implement HAL_I2C_MspInit() function in which he configures
 442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           all related peripherals resources (CLOCK, GPIO, DMA, IT and NVIC ).
 443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Call the function HAL_I2C_Init() to configure the selected device with
 445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           the selected configuration:
 446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) Clock Timing
 447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) Own Address 1
 448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) Addressing mode (Master, Slave)
 449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) Dual Addressing mode
 450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) Own Address 2
 451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) Own Address 2 Mask
 452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) General call mode
 453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) Nostretch mode
 454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Call the function HAL_I2C_DeInit() to restore the default configuration
 456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           of the selected I2Cx peripheral.
 457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** @endverbatim
 459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @{
 460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
 461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
 463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Initializes the I2C according to the specified parameters
 464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in the I2C_InitTypeDef and initialize the associated handle.
 465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
 468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
 469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Init(I2C_HandleTypeDef *hi2c)
 470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
 471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the I2C handle allocation */
 472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c == NULL)
 473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_ERROR;
 475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
 478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
 479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_OWN_ADDRESS1(hi2c->Init.OwnAddress1));
 480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_ADDRESSING_MODE(hi2c->Init.AddressingMode));
 481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_DUAL_ADDRESS(hi2c->Init.DualAddressMode));
 482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_OWN_ADDRESS2(hi2c->Init.OwnAddress2));
 483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_OWN_ADDRESS2_MASK(hi2c->Init.OwnAddress2Masks));
 484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_GENERAL_CALL(hi2c->Init.GeneralCallMode));
 485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_NO_STRETCH(hi2c->Init.NoStretchMode));
 486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_RESET)
 488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
ARM GAS  /tmp/ccX4fpHz.s 			page 10


 489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Allocate lock resource and initialize it */
 490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Lock = HAL_UNLOCKED;
 491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
 493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Init the I2C Callback settings */
 494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->MasterTxCpltCallback = HAL_I2C_MasterTxCpltCallback; /* Legacy weak MasterTxCpltCallback 
 495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->MasterRxCpltCallback = HAL_I2C_MasterRxCpltCallback; /* Legacy weak MasterRxCpltCallback 
 496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->SlaveTxCpltCallback  = HAL_I2C_SlaveTxCpltCallback;  /* Legacy weak SlaveTxCpltCallback  
 497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->SlaveRxCpltCallback  = HAL_I2C_SlaveRxCpltCallback;  /* Legacy weak SlaveRxCpltCallback  
 498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ListenCpltCallback   = HAL_I2C_ListenCpltCallback;   /* Legacy weak ListenCpltCallback   
 499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->MemTxCpltCallback    = HAL_I2C_MemTxCpltCallback;    /* Legacy weak MemTxCpltCallback    
 500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->MemRxCpltCallback    = HAL_I2C_MemRxCpltCallback;    /* Legacy weak MemRxCpltCallback    
 501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCallback        = HAL_I2C_ErrorCallback;        /* Legacy weak ErrorCallback        
 502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->AbortCpltCallback    = HAL_I2C_AbortCpltCallback;    /* Legacy weak AbortCpltCallback    
 503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->AddrCallback         = HAL_I2C_AddrCallback;         /* Legacy weak AddrCallback         
 504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->MspInitCallback == NULL)
 506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->MspInitCallback = HAL_I2C_MspInit; /* Legacy weak MspInit  */
 508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Init the low level hardware : GPIO, CLOCK, CORTEX...etc */
 511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->MspInitCallback(hi2c);
 512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #else
 513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Init the low level hardware : GPIO, CLOCK, CORTEX...etc */
 514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     HAL_I2C_MspInit(hi2c);
 515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_BUSY;
 519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Disable the selected I2C peripheral */
 521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_I2C_DISABLE(hi2c);
 522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /*---------------------------- I2Cx TIMINGR Configuration ------------------*/
 524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Configure I2Cx: Frequency range */
 525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
 526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /*---------------------------- I2Cx OAR1 Configuration ---------------------*/
 528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Disable Own Address1 before set the Own Address1 configuration */
 529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
 530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Configure I2Cx: Own Address1 and ack own address1 mode */
 532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
 535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else /* I2C_ADDRESSINGMODE_10BIT */
 537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
 539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /*---------------------------- I2Cx CR2 Configuration ----------------------*/
 542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Configure I2Cx: Addressing Master mode */
 543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR2 = (I2C_CR2_ADD10);
ARM GAS  /tmp/ccX4fpHz.s 			page 11


 546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Enable the AUTOEND by default, and enable NACK (should be disable only during Slave process */
 548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /*---------------------------- I2Cx OAR2 Configuration ---------------------*/
 551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Disable Own Address2 before set the Own Address2 configuration */
 552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
 553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Configure I2Cx: Dual mode and Own Address2 */
 555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | (hi2c->Init.OwnAddr
 556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /*---------------------------- I2Cx CR1 Configuration ----------------------*/
 558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Configure I2Cx: Generalcall and NoStretch mode */
 559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
 560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Enable the selected I2C peripheral */
 562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_I2C_ENABLE(hi2c);
 563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_READY;
 566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
 567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
 568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return HAL_OK;
 570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
 573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  DeInitialize the I2C peripheral.
 574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
 577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
 578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_DeInit(I2C_HandleTypeDef *hi2c)
 579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
 580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the I2C handle allocation */
 581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c == NULL)
 582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_ERROR;
 584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
 587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
 588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_BUSY;
 590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Disable the I2C Peripheral Clock */
 592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_I2C_DISABLE(hi2c);
 593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
 595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->MspDeInitCallback == NULL)
 596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->MspDeInitCallback = HAL_I2C_MspDeInit; /* Legacy weak MspDeInit  */
 598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC */
 601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->MspDeInitCallback(hi2c);
 602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #else
ARM GAS  /tmp/ccX4fpHz.s 			page 12


 603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC */
 604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_I2C_MspDeInit(hi2c);
 605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_RESET;
 609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
 610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
 611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Release Lock */
 613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
 614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return HAL_OK;
 616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
 619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief Initialize the I2C MSP.
 620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
 623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
 624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** __weak void HAL_I2C_MspInit(I2C_HandleTypeDef *hi2c)
 625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
 626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   UNUSED(hi2c);
 628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             the HAL_I2C_MspInit could be implemented in the user file
 631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****    */
 632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
 635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief DeInitialize the I2C MSP.
 636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
 639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
 640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** __weak void HAL_I2C_MspDeInit(I2C_HandleTypeDef *hi2c)
 641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
 642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   UNUSED(hi2c);
 644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             the HAL_I2C_MspDeInit could be implemented in the user file
 647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****    */
 648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
 651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
 652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Register a User I2C Callback
 653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         To be used instead of the weak predefined callback
 654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  CallbackID ID of the callback to be registered
 657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         This parameter can be one of the following values:
 658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MASTER_TX_COMPLETE_CB_ID Master Tx Transfer completed callback ID
 659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MASTER_RX_COMPLETE_CB_ID Master Rx Transfer completed callback ID
ARM GAS  /tmp/ccX4fpHz.s 			page 13


 660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_SLAVE_TX_COMPLETE_CB_ID Slave Tx Transfer completed callback ID
 661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_SLAVE_RX_COMPLETE_CB_ID Slave Rx Transfer completed callback ID
 662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_LISTEN_COMPLETE_CB_ID Listen Complete callback ID
 663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MEM_TX_COMPLETE_CB_ID Memory Tx Transfer callback ID
 664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MEM_RX_COMPLETE_CB_ID Memory Rx Transfer completed callback ID
 665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_ERROR_CB_ID Error callback ID
 666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_ABORT_CB_ID Abort callback ID
 667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MSPINIT_CB_ID MspInit callback ID
 668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MSPDEINIT_CB_ID MspDeInit callback ID
 669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pCallback pointer to the Callback function
 670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
 671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
 672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_RegisterCallback(I2C_HandleTypeDef *hi2c, HAL_I2C_CallbackIDTypeDef Callb
 673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
 674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef status = HAL_OK;
 675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (pCallback == NULL)
 677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Update the error code */
 679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_ERROR;
 682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Process locked */
 684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
 685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (HAL_I2C_STATE_READY == hi2c->State)
 687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     switch (CallbackID)
 689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_MASTER_TX_COMPLETE_CB_ID :
 691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->MasterTxCpltCallback = pCallback;
 692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_MASTER_RX_COMPLETE_CB_ID :
 695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->MasterRxCpltCallback = pCallback;
 696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_SLAVE_TX_COMPLETE_CB_ID :
 699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->SlaveTxCpltCallback = pCallback;
 700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_SLAVE_RX_COMPLETE_CB_ID :
 703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->SlaveRxCpltCallback = pCallback;
 704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_LISTEN_COMPLETE_CB_ID :
 707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ListenCpltCallback = pCallback;
 708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_MEM_TX_COMPLETE_CB_ID :
 711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->MemTxCpltCallback = pCallback;
 712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_MEM_RX_COMPLETE_CB_ID :
 715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->MemRxCpltCallback = pCallback;
 716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
ARM GAS  /tmp/ccX4fpHz.s 			page 14


 717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_ERROR_CB_ID :
 719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ErrorCallback = pCallback;
 720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_ABORT_CB_ID :
 723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->AbortCpltCallback = pCallback;
 724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_MSPINIT_CB_ID :
 727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->MspInitCallback = pCallback;
 728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_MSPDEINIT_CB_ID :
 731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->MspDeInitCallback = pCallback;
 732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       default :
 735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update the error code */
 736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Return error status */
 739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         status =  HAL_ERROR;
 740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if (HAL_I2C_STATE_RESET == hi2c->State)
 744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     switch (CallbackID)
 746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_MSPINIT_CB_ID :
 748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->MspInitCallback = pCallback;
 749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_MSPDEINIT_CB_ID :
 752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->MspDeInitCallback = pCallback;
 753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       default :
 756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update the error code */
 757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Return error status */
 760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         status =  HAL_ERROR;
 761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
 765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Update the error code */
 767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Return error status */
 770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     status =  HAL_ERROR;
 771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Release Lock */
ARM GAS  /tmp/ccX4fpHz.s 			page 15


 774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
 775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return status;
 776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
 779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Unregister an I2C Callback
 780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         I2C callback is redirected to the weak predefined callback
 781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  CallbackID ID of the callback to be unregistered
 784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         This parameter can be one of the following values:
 785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         This parameter can be one of the following values:
 786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MASTER_TX_COMPLETE_CB_ID Master Tx Transfer completed callback ID
 787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MASTER_RX_COMPLETE_CB_ID Master Rx Transfer completed callback ID
 788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_SLAVE_TX_COMPLETE_CB_ID Slave Tx Transfer completed callback ID
 789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_SLAVE_RX_COMPLETE_CB_ID Slave Rx Transfer completed callback ID
 790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_LISTEN_COMPLETE_CB_ID Listen Complete callback ID
 791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MEM_TX_COMPLETE_CB_ID Memory Tx Transfer callback ID
 792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MEM_RX_COMPLETE_CB_ID Memory Rx Transfer completed callback ID
 793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_ERROR_CB_ID Error callback ID
 794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_ABORT_CB_ID Abort callback ID
 795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MSPINIT_CB_ID MspInit callback ID
 796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MSPDEINIT_CB_ID MspDeInit callback ID
 797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
 798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
 799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_UnRegisterCallback(I2C_HandleTypeDef *hi2c, HAL_I2C_CallbackIDTypeDef Cal
 800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
 801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef status = HAL_OK;
 802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Process locked */
 804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
 805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (HAL_I2C_STATE_READY == hi2c->State)
 807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     switch (CallbackID)
 809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_MASTER_TX_COMPLETE_CB_ID :
 811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->MasterTxCpltCallback = HAL_I2C_MasterTxCpltCallback; /* Legacy weak MasterTxCpltCallb
 812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_MASTER_RX_COMPLETE_CB_ID :
 815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->MasterRxCpltCallback = HAL_I2C_MasterRxCpltCallback; /* Legacy weak MasterRxCpltCallb
 816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_SLAVE_TX_COMPLETE_CB_ID :
 819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->SlaveTxCpltCallback = HAL_I2C_SlaveTxCpltCallback;   /* Legacy weak SlaveTxCpltCallba
 820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_SLAVE_RX_COMPLETE_CB_ID :
 823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->SlaveRxCpltCallback = HAL_I2C_SlaveRxCpltCallback;   /* Legacy weak SlaveRxCpltCallba
 824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_LISTEN_COMPLETE_CB_ID :
 827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ListenCpltCallback = HAL_I2C_ListenCpltCallback;     /* Legacy weak ListenCpltCallbac
 828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_MEM_TX_COMPLETE_CB_ID :
ARM GAS  /tmp/ccX4fpHz.s 			page 16


 831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->MemTxCpltCallback = HAL_I2C_MemTxCpltCallback;       /* Legacy weak MemTxCpltCallback
 832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_MEM_RX_COMPLETE_CB_ID :
 835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->MemRxCpltCallback = HAL_I2C_MemRxCpltCallback;       /* Legacy weak MemRxCpltCallback
 836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_ERROR_CB_ID :
 839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ErrorCallback = HAL_I2C_ErrorCallback;               /* Legacy weak ErrorCallback    
 840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_ABORT_CB_ID :
 843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->AbortCpltCallback = HAL_I2C_AbortCpltCallback;       /* Legacy weak AbortCpltCallback
 844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_MSPINIT_CB_ID :
 847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->MspInitCallback = HAL_I2C_MspInit;                   /* Legacy weak MspInit          
 848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_MSPDEINIT_CB_ID :
 851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->MspDeInitCallback = HAL_I2C_MspDeInit;               /* Legacy weak MspDeInit        
 852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       default :
 855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update the error code */
 856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Return error status */
 859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         status =  HAL_ERROR;
 860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if (HAL_I2C_STATE_RESET == hi2c->State)
 864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     switch (CallbackID)
 866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_MSPINIT_CB_ID :
 868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->MspInitCallback = HAL_I2C_MspInit;                   /* Legacy weak MspInit          
 869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_MSPDEINIT_CB_ID :
 872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->MspDeInitCallback = HAL_I2C_MspDeInit;               /* Legacy weak MspDeInit        
 873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       default :
 876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update the error code */
 877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Return error status */
 880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         status =  HAL_ERROR;
 881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
 885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Update the error code */
 887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
ARM GAS  /tmp/ccX4fpHz.s 			page 17


 888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Return error status */
 890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     status =  HAL_ERROR;
 891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Release Lock */
 894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
 895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return status;
 896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
 899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Register the Slave Address Match I2C Callback
 900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         To be used instead of the weak HAL_I2C_AddrCallback() predefined callback
 901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pCallback pointer to the Address Match Callback function
 904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
 905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
 906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_RegisterAddrCallback(I2C_HandleTypeDef *hi2c, pI2C_AddrCallbackTypeDef pC
 907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
 908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef status = HAL_OK;
 909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (pCallback == NULL)
 911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Update the error code */
 913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_ERROR;
 916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Process locked */
 918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
 919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (HAL_I2C_STATE_READY == hi2c->State)
 921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->AddrCallback = pCallback;
 923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
 925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Update the error code */
 927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Return error status */
 930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     status =  HAL_ERROR;
 931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Release Lock */
 934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
 935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return status;
 936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
 939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  UnRegister the Slave Address Match I2C Callback
 940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         Info Ready I2C Callback is redirected to the weak HAL_I2C_AddrCallback() predefined cal
 941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
 944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
ARM GAS  /tmp/ccX4fpHz.s 			page 18


 945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_UnRegisterAddrCallback(I2C_HandleTypeDef *hi2c)
 946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
 947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef status = HAL_OK;
 948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Process locked */
 950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
 951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (HAL_I2C_STATE_READY == hi2c->State)
 953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->AddrCallback = HAL_I2C_AddrCallback; /* Legacy weak AddrCallback  */
 955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
 957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Update the error code */
 959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Return error status */
 962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     status =  HAL_ERROR;
 963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Release Lock */
 966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
 967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return status;
 968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
 973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @}
 974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
 975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /** @defgroup I2C_Exported_Functions_Group2 Input and Output operation functions
 977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****  *  @brief   Data transfers functions
 978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****  *
 979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** @verbatim
 980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****  ===============================================================================
 981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                       ##### IO operation functions #####
 982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****  ===============================================================================
 983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]
 984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     This subsection provides a set of functions allowing to manage the I2C data
 985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     transfers.
 986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     (#) There are two modes of transfer:
 988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (++) Blocking mode : The communication is performed in the polling mode.
 989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             The status of all data processing is returned by the same function
 990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             after finishing transfer.
 991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (++) No-Blocking mode : The communication is performed using Interrupts
 992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             or DMA. These functions return the status of the transfer startup.
 993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             The end of the data processing will be indicated through the
 994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             dedicated I2C IRQ when using Interrupt mode or the DMA IRQ when
 995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             using DMA mode.
 996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     (#) Blocking mode functions are :
 998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Master_Transmit()
 999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Master_Receive()
1000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Transmit()
1001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Receive()
ARM GAS  /tmp/ccX4fpHz.s 			page 19


1002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Mem_Write()
1003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Mem_Read()
1004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_IsDeviceReady()
1005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     (#) No-Blocking mode functions with Interrupt are :
1007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Master_Transmit_IT()
1008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Master_Receive_IT()
1009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Transmit_IT()
1010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Receive_IT()
1011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Mem_Write_IT()
1012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Mem_Read_IT()
1013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Master_Seq_Transmit_IT()
1014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Master_Seq_Receive_IT()
1015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Seq_Transmit_IT()
1016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Seq_Receive_IT()
1017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_EnableListen_IT()
1018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_DisableListen_IT()
1019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Master_Abort_IT()
1020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     (#) No-Blocking mode functions with DMA are :
1022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Master_Transmit_DMA()
1023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Master_Receive_DMA()
1024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Transmit_DMA()
1025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Receive_DMA()
1026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Mem_Write_DMA()
1027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Mem_Read_DMA()
1028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Master_Seq_Transmit_DMA()
1029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Master_Seq_Receive_DMA()
1030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Seq_Transmit_DMA()
1031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Seq_Receive_DMA()
1032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     (#) A set of Transfer Complete Callbacks are provided in non Blocking mode:
1034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_MasterTxCpltCallback()
1035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_MasterRxCpltCallback()
1036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_SlaveTxCpltCallback()
1037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_SlaveRxCpltCallback()
1038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_MemTxCpltCallback()
1039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_MemRxCpltCallback()
1040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_AddrCallback()
1041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_ListenCpltCallback()
1042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_ErrorCallback()
1043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_AbortCpltCallback()
1044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** @endverbatim
1046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @{
1047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
1048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
1050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Transmits in master mode an amount of data in blocking mode.
1051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
1054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
1055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
1058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
ARM GAS  /tmp/ccX4fpHz.s 			page 20


1059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
1060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Transmit(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *pD
1061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
1062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
1063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
1067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
1070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tickstart = HAL_GetTick();
1071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK
1073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
1075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX;
1078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
1079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
1080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
1082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
1083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount = Size;
1084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
1085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send Slave Address */
1087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
1088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
1089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
1091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_GENERATE_S
1092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
1094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
1096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_
1097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     while (hi2c->XferCount > 0U)
1100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Wait until TXIS flag is set */
1102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
1104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
1105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
1106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Write data to TXDR */
1107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->TXDR = *hi2c->pBuffPtr;
1108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Increment Buffer pointer */
1110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->pBuffPtr++;
1111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount--;
1113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize--;
1114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
ARM GAS  /tmp/ccX4fpHz.s 			page 21


1116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
1117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Wait until TCR flag is set */
1118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
1119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
1120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           return HAL_ERROR;
1121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
1122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->XferCount > MAX_NBYTE_SIZE)
1124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
1125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->XferSize = MAX_NBYTE_SIZE;
1126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STA
1127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
1128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         else
1129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
1130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->XferSize = hi2c->XferCount;
1131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_ST
1132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
1133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
1134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* No need to Check TC flag, with AUTOEND mode the stop is automatically generated */
1137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Wait until STOPF flag is set */
1138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
1141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear STOP Flag */
1144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
1145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear Configuration Register 2 */
1147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_RESET_CR2(hi2c);
1148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
1150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
1151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
1153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
1156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
1158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
1160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
1162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
1164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Receives in master mode an amount of data in blocking mode.
1165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
1168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
1169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
1172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
ARM GAS  /tmp/ccX4fpHz.s 			page 22


1173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
1174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Receive(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *pDa
1175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
1176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
1177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
1181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
1184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tickstart = HAL_GetTick();
1185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK
1187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
1189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX;
1192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
1193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
1194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
1196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
1197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount = Size;
1198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
1199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send Slave Address */
1201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
1202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
1203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
1205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_GENERATE_S
1206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
1208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
1210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_
1211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     while (hi2c->XferCount > 0U)
1214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Wait until RXNE flag is set */
1216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
1218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
1219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
1220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Read data from RXDR */
1222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
1223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Increment Buffer pointer */
1225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->pBuffPtr++;
1226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize--;
1228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount--;
1229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/ccX4fpHz.s 			page 23


1230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
1231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
1232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Wait until TCR flag is set */
1233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
1234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
1235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           return HAL_ERROR;
1236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
1237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->XferCount > MAX_NBYTE_SIZE)
1239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
1240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->XferSize = MAX_NBYTE_SIZE;
1241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STA
1242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
1243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         else
1244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
1245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->XferSize = hi2c->XferCount;
1246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_ST
1247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
1248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
1249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* No need to Check TC flag, with AUTOEND mode the stop is automatically generated */
1252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Wait until STOPF flag is set */
1253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
1256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear STOP Flag */
1259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
1260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear Configuration Register 2 */
1262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_RESET_CR2(hi2c);
1263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
1265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
1266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
1268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
1271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
1273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
1275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
1277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
1279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Transmits in slave mode an amount of data in blocking mode.
1280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
1285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
1286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
ARM GAS  /tmp/ccX4fpHz.s 			page 24


1287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Transmit(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Size, ui
1288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
1289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
1290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
1294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
1296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
1297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
1299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
1302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tickstart = HAL_GetTick();
1303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX;
1305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
1306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
1307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
1309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
1310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount = Size;
1311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
1312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable Address Acknowledge */
1314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
1315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Wait until ADDR flag is set */
1317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, RESET, Timeout, tickstart) != HAL_OK)
1318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
1321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
1322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear ADDR flag */
1325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
1326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* If 10bit addressing mode is selected */
1328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
1329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Wait until ADDR flag is set */
1331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, RESET, Timeout, tickstart) != HAL_OK)
1332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
1333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Disable Address Acknowledge */
1334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Instance->CR2 |= I2C_CR2_NACK;
1335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
1336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
1337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Clear ADDR flag */
1339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
1340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Wait until DIR flag is set Transmitter mode */
1343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_DIR, RESET, Timeout, tickstart) != HAL_OK)
ARM GAS  /tmp/ccX4fpHz.s 			page 25


1344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
1347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
1348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     while (hi2c->XferCount > 0U)
1351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Wait until TXIS flag is set */
1353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
1355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Disable Address Acknowledge */
1356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Instance->CR2 |= I2C_CR2_NACK;
1357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
1358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
1359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Write data to TXDR */
1361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->TXDR = *hi2c->pBuffPtr;
1362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Increment Buffer pointer */
1364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->pBuffPtr++;
1365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount--;
1367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Wait until STOP flag is set */
1370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
1374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
1376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
1377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Normal use case for Transmitter mode */
1378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* A NACK is generated to confirm the end of transfer */
1379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
1380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
1381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
1382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
1383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
1384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
1385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear STOP flag */
1388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
1389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Wait until BUSY flag is reset */
1391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, Timeout, tickstart) != HAL_OK)
1392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
1395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
1396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable Address Acknowledge */
1399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR2 |= I2C_CR2_NACK;
1400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/ccX4fpHz.s 			page 26


1401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
1402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
1403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
1405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
1408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
1410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
1412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
1414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
1416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Receive in slave mode an amount of data in blocking mode
1417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
1422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
1423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
1424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Receive(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Size, uin
1425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
1426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
1427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
1431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
1433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
1434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
1436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
1439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tickstart = HAL_GetTick();
1440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX;
1442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
1443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
1444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
1446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
1447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount = Size;
1448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
1449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable Address Acknowledge */
1451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
1452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Wait until ADDR flag is set */
1454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, RESET, Timeout, tickstart) != HAL_OK)
1455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
ARM GAS  /tmp/ccX4fpHz.s 			page 27


1458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
1459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear ADDR flag */
1462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
1463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Wait until DIR flag is reset Receiver mode */
1465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_DIR, SET, Timeout, tickstart) != HAL_OK)
1466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
1469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
1470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     while (hi2c->XferCount > 0U)
1473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Wait until RXNE flag is set */
1475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
1477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Disable Address Acknowledge */
1478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Instance->CR2 |= I2C_CR2_NACK;
1479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Store Last receive data if any */
1481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
1482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
1483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Read data from RXDR */
1484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
1485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Increment Buffer pointer */
1487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->pBuffPtr++;
1488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->XferCount--;
1490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
1491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
1493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
1494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Read data from RXDR */
1496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
1497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Increment Buffer pointer */
1499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->pBuffPtr++;
1500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount--;
1502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Wait until STOP flag is set */
1505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
1509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
1510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear STOP flag */
1513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
1514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/ccX4fpHz.s 			page 28


1515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Wait until BUSY flag is reset */
1516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, Timeout, tickstart) != HAL_OK)
1517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
1520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
1521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable Address Acknowledge */
1524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR2 |= I2C_CR2_NACK;
1525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
1527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
1528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
1530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
1533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
1535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
1537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
1539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
1541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Transmit in master mode an amount of data in non-blocking mode with Interrupt
1542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
1545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
1546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
1549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
1550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Transmit_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t 
1551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
1552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
1553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
1557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_BUSY;
1559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
1562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
1565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
1566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
1567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
1569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
1570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
1571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
ARM GAS  /tmp/ccX4fpHz.s 			page 29


1572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
1573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
1575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
1577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
1578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
1580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
1582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
1583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send Slave Address */
1586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE */
1587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, I2C_GENERATE_START_WRIT
1588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
1590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
1593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
1594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               process unlock */
1595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable ERR, TC, STOP, NACK, TXI interrupt */
1597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* possible to enable all of these */
1598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_TX
1599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
1600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
1602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
1604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
1606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
1608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
1610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Receive in master mode an amount of data in non-blocking mode with Interrupt
1611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
1614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
1615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
1618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
1619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Receive_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *
1620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
1621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
1622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
1626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_BUSY;
1628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
ARM GAS  /tmp/ccX4fpHz.s 			page 30


1629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
1631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
1634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
1635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
1636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
1638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
1639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
1640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
1641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
1642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
1644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
1646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
1647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
1649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
1651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
1652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send Slave Address */
1655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE */
1656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, I2C_GENERATE_START_READ
1657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
1659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
1662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
1663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               process unlock */
1664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable ERR, TC, STOP, NACK, RXI interrupt */
1666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* possible to enable all of these */
1667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_TX
1668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RX_IT);
1669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
1671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
1673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
1675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
1677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
1679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Transmit in slave mode an amount of data in non-blocking mode with Interrupt
1680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
1685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
ARM GAS  /tmp/ccX4fpHz.s 			page 31


1686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Transmit_IT(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Size)
1687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
1688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
1691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
1694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
1695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
1696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable Address Acknowledge */
1698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
1699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
1701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
1702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
1703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
1704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
1705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
1706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
1708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
1711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
1712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               process unlock */
1713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable ERR, TC, STOP, NACK, TXI interrupt */
1715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* possible to enable all of these */
1716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_TX
1717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT | I2C_XFER_LISTEN_IT);
1718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
1720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
1722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
1724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
1726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
1728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Receive in slave mode an amount of data in non-blocking mode with Interrupt
1729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
1734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
1735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Receive_IT(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Size)
1736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
1737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
1740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
ARM GAS  /tmp/ccX4fpHz.s 			page 32


1743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
1744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
1745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable Address Acknowledge */
1747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
1748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
1750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
1751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
1752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
1753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
1754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
1755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
1757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
1760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
1761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               process unlock */
1762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable ERR, TC, STOP, NACK, RXI interrupt */
1764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* possible to enable all of these */
1765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_TX
1766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RX_IT | I2C_XFER_LISTEN_IT);
1767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
1769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
1771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
1773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
1775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
1777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Transmit in master mode an amount of data in non-blocking mode with DMA
1778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
1781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
1782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
1785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
1786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Transmit_DMA(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t
1787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
1788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
1789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
1790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
1794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_BUSY;
1796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
1799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
ARM GAS  /tmp/ccX4fpHz.s 			page 33


1800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
1802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
1803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
1804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
1806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
1807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
1808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
1809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
1810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
1812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
1814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
1815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
1817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
1819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
1820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferSize > 0U)
1823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (hi2c->hdmatx != NULL)
1825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
1826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Set the I2C DMA transfer complete callback */
1827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmatx->XferCpltCallback = I2C_DMAMasterTransmitCplt;
1828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Set the DMA error callback */
1830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmatx->XferErrorCallback = I2C_DMAError;
1831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Set the unused DMA callbacks to NULL */
1833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmatx->XferHalfCpltCallback = NULL;
1834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmatx->XferAbortCallback = NULL;
1835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Enable the DMA stream */
1837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmatx, (uint32_t)pData, (uint32_t)&hi2c->Instance->
1838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
1839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
1840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
1841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update I2C state */
1842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->State     = HAL_I2C_STATE_READY;
1843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
1844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update I2C error code */
1846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
1847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
1849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
1850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
1852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
1853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (dmaxferstatus == HAL_OK)
1855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
1856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Send Slave Address */
ARM GAS  /tmp/ccX4fpHz.s 			page 34


1857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART 
1858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, I2C_GENERATE_START_
1859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update XferCount value */
1861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->XferCount -= hi2c->XferSize;
1862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
1864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
1865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Note : The I2C interrupts must be enabled after unlocking current process
1867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                   to avoid the risk of I2C interrupt handle execution before current
1868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                   process unlock */
1869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Enable ERR and NACK interrupts */
1870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_Enable_IRQ(hi2c, I2C_XFER_ERROR_IT);
1871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Enable DMA Request */
1873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Instance->CR1 |= I2C_CR1_TXDMAEN;
1874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
1875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
1876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
1877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update I2C state */
1878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->State     = HAL_I2C_STATE_READY;
1879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
1880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update I2C error code */
1882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
1883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
1885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
1886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
1888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
1889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
1891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update Transfer ISR function pointer */
1893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferISR = I2C_Master_ISR_IT;
1894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Send Slave Address */
1896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set NBYTES to write and generate START condition */
1897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_
1898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
1900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
1901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
1903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                 to avoid the risk of I2C interrupt handle execution before current
1904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                 process unlock */
1905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable ERR, TC, STOP, NACK, TXI interrupt */
1906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* possible to enable all of these */
1907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_
1908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
1909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
1912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
ARM GAS  /tmp/ccX4fpHz.s 			page 35


1914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
1916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
1918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
1920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Receive in master mode an amount of data in non-blocking mode with DMA
1921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
1924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
1925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
1928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
1929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Receive_DMA(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t 
1930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
1931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
1932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
1933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
1937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_BUSY;
1939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
1942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
1945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
1946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
1947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
1949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
1950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
1951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
1952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
1953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
1955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
1957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
1958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
1960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
1962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
1963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferSize > 0U)
1966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (hi2c->hdmarx != NULL)
1968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
1969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Set the I2C DMA transfer complete callback */
1970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmarx->XferCpltCallback = I2C_DMAMasterReceiveCplt;
ARM GAS  /tmp/ccX4fpHz.s 			page 36


1971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Set the DMA error callback */
1973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmarx->XferErrorCallback = I2C_DMAError;
1974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Set the unused DMA callbacks to NULL */
1976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmarx->XferHalfCpltCallback = NULL;
1977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmarx->XferAbortCallback = NULL;
1978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Enable the DMA stream */
1980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmarx, (uint32_t)&hi2c->Instance->RXDR, (uint32_t)p
1981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
1982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
1983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
1984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update I2C state */
1985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->State     = HAL_I2C_STATE_READY;
1986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
1987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update I2C error code */
1989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
1990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
1992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
1993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
1995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
1996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (dmaxferstatus == HAL_OK)
1998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
1999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Send Slave Address */
2000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Set NBYTES to read and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART *
2001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, I2C_GENERATE_START_
2002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update XferCount value */
2004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->XferCount -= hi2c->XferSize;
2005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
2007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
2008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Note : The I2C interrupts must be enabled after unlocking current process
2010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                   to avoid the risk of I2C interrupt handle execution before current
2011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                   process unlock */
2012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Enable ERR and NACK interrupts */
2013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_Enable_IRQ(hi2c, I2C_XFER_ERROR_IT);
2014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Enable DMA Request */
2016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Instance->CR1 |= I2C_CR1_RXDMAEN;
2017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
2018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
2019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
2020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update I2C state */
2021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->State     = HAL_I2C_STATE_READY;
2022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
2023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update I2C error code */
2025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
2026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
ARM GAS  /tmp/ccX4fpHz.s 			page 37


2028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
2029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
2031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
2032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
2034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update Transfer ISR function pointer */
2036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferISR = I2C_Master_ISR_IT;
2037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Send Slave Address */
2039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set NBYTES to read and generate START condition */
2040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_
2041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
2043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
2046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                 to avoid the risk of I2C interrupt handle execution before current
2047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                 process unlock */
2048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable ERR, TC, STOP, NACK, TXI interrupt */
2049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* possible to enable all of these */
2050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_
2051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
2052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
2055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
2057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
2059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
2061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
2063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Transmit in slave mode an amount of data in non-blocking mode with DMA
2064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
2069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
2070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Transmit_DMA(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Size
2071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
2072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
2073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
2075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
2077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
2079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
2080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
2082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
ARM GAS  /tmp/ccX4fpHz.s 			page 38


2085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
2086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
2087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
2089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
2090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
2091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
2092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
2093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_DMA;
2094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->hdmatx != NULL)
2096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the I2C DMA transfer complete callback */
2098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmatx->XferCpltCallback = I2C_DMASlaveTransmitCplt;
2099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the DMA error callback */
2101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmatx->XferErrorCallback = I2C_DMAError;
2102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the unused DMA callbacks to NULL */
2104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmatx->XferHalfCpltCallback = NULL;
2105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmatx->XferAbortCallback = NULL;
2106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable the DMA stream */
2108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmatx, (uint32_t)pData, (uint32_t)&hi2c->Instance->TX
2109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
2111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C state */
2113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_LISTEN;
2114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
2115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C error code */
2117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
2118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
2120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
2123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (dmaxferstatus == HAL_OK)
2126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable Address Acknowledge */
2128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
2129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
2131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
2134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                 to avoid the risk of I2C interrupt handle execution before current
2135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                 process unlock */
2136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable ERR, STOP, NACK, ADDR interrupts */
2137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
2138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable DMA Request */
2140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->CR1 |= I2C_CR1_TXDMAEN;
2141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
ARM GAS  /tmp/ccX4fpHz.s 			page 39


2142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
2143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C state */
2145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_LISTEN;
2146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
2147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C error code */
2149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
2150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
2152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
2155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
2158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
2160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
2162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
2164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
2166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Receive in slave mode an amount of data in non-blocking mode with DMA
2167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
2172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
2173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Receive_DMA(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Size)
2174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
2175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
2176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
2178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
2180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
2182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
2183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
2185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
2188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
2189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
2190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
2192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
2193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
2194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
2195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
2196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_DMA;
2197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->hdmarx != NULL)
ARM GAS  /tmp/ccX4fpHz.s 			page 40


2199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the I2C DMA transfer complete callback */
2201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmarx->XferCpltCallback = I2C_DMASlaveReceiveCplt;
2202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the DMA error callback */
2204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmarx->XferErrorCallback = I2C_DMAError;
2205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the unused DMA callbacks to NULL */
2207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmarx->XferHalfCpltCallback = NULL;
2208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmarx->XferAbortCallback = NULL;
2209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable the DMA stream */
2211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmarx, (uint32_t)&hi2c->Instance->RXDR, (uint32_t)pDa
2212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
2214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C state */
2216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_LISTEN;
2217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
2218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C error code */
2220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
2221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
2223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
2226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (dmaxferstatus == HAL_OK)
2229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable Address Acknowledge */
2231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
2232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
2234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
2237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                 to avoid the risk of I2C interrupt handle execution before current
2238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                 process unlock */
2239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable ERR, STOP, NACK, ADDR interrupts */
2240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
2241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable DMA Request */
2243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->CR1 |= I2C_CR1_RXDMAEN;
2244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
2246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C state */
2248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_LISTEN;
2249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
2250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C error code */
2252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
2253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
2255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
ARM GAS  /tmp/ccX4fpHz.s 			page 41


2256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
2258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
2261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
2263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
2265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
2267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
2268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Write an amount of data in blocking mode to a specific memory address
2269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
2272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
2273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
2274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
2275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
2278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
2279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
2280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Mem_Write(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddre
2281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
2282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
2283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
2285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));
2286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
2288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
2290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
2292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
2293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
2296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
2299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tickstart = HAL_GetTick();
2300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK
2302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
2304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX;
2307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MEM;
2308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
2309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
2311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
2312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount = Size;
ARM GAS  /tmp/ccX4fpHz.s 			page 42


2313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
2314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send Slave Address and Memory Address */
2316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL
2317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
2319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
2321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE */
2324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
2325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
2327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTST
2328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
2330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
2332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTS
2333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     do
2336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Wait until TXIS flag is set */
2338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
2339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
2340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
2341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
2342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Write data to TXDR */
2344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->TXDR = *hi2c->pBuffPtr;
2345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Increment Buffer pointer */
2347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->pBuffPtr++;
2348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount--;
2350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize--;
2351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
2353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
2354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Wait until TCR flag is set */
2355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
2356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
2357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           return HAL_ERROR;
2358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
2359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->XferCount > MAX_NBYTE_SIZE)
2361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
2362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->XferSize = MAX_NBYTE_SIZE;
2363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STA
2364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
2365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         else
2366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
2367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->XferSize = hi2c->XferCount;
2368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_ST
2369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
ARM GAS  /tmp/ccX4fpHz.s 			page 43


2370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
2371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     while (hi2c->XferCount > 0U);
2374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* No need to Check TC flag, with AUTOEND mode the stop is automatically generated */
2376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Wait until STOPF flag is reset */
2377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
2378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
2380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear STOP Flag */
2383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
2384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear Configuration Register 2 */
2386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_RESET_CR2(hi2c);
2387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
2389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
2390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
2392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
2393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
2395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
2397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
2399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
2401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
2403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Read an amount of data in blocking mode from a specific memory address
2404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
2407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
2408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
2409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
2410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
2413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
2414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
2415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Mem_Read(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddres
2416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
2417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
2418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
2420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));
2421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
2423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
2425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
ARM GAS  /tmp/ccX4fpHz.s 			page 44


2427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
2428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
2431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
2434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tickstart = HAL_GetTick();
2435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK
2437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
2439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX;
2442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MEM;
2443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
2444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
2446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
2447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount = Size;
2448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
2449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send Slave Address and Memory Address */
2451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_
2452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
2454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
2456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send Slave Address */
2459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
2460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
2461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
2463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_GENERATE_S
2464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
2466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
2468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_
2469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     do
2472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Wait until RXNE flag is set */
2474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_RXNE, RESET, Timeout, tickstart) != HAL_OK)
2475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
2476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
2477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
2478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Read data from RXDR */
2480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
2481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Increment Buffer pointer */
2483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->pBuffPtr++;
ARM GAS  /tmp/ccX4fpHz.s 			page 45


2484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize--;
2486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount--;
2487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
2489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
2490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Wait until TCR flag is set */
2491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
2492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
2493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           return HAL_ERROR;
2494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
2495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->XferCount > MAX_NBYTE_SIZE)
2497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
2498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->XferSize = MAX_NBYTE_SIZE;
2499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t) hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_ST
2500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
2501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         else
2502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
2503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->XferSize = hi2c->XferCount;
2504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_ST
2505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
2506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
2507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     while (hi2c->XferCount > 0U);
2509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* No need to Check TC flag, with AUTOEND mode the stop is automatically generated */
2511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Wait until STOPF flag is reset */
2512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
2513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
2515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear STOP Flag */
2518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
2519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear Configuration Register 2 */
2521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_RESET_CR2(hi2c);
2522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
2524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
2525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
2527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
2528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
2530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
2532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
2534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
2536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
2537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Write an amount of data in non-blocking mode with Interrupt to a specific memory addres
2538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
ARM GAS  /tmp/ccX4fpHz.s 			page 46


2541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
2542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
2543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
2544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
2547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
2548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Mem_Write_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAd
2549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
2550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
2551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
2552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
2554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));
2555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
2557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
2559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
2561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
2562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
2565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_BUSY;
2567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
2570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
2573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tickstart = HAL_GetTick();
2574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
2576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
2577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
2578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
2580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
2581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
2582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
2583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
2584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
2586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
2588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
2589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
2591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
2593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
2594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send Slave Address and Memory Address */
2597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, I2C_TIMEOUT_FLAG, tickstar
ARM GAS  /tmp/ccX4fpHz.s 			page 47


2598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
2600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
2602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
2605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, I2C_NO_STARTSTOP);
2606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
2608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
2609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
2611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
2612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               process unlock */
2613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable ERR, TC, STOP, NACK, TXI interrupt */
2615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* possible to enable all of these */
2616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_TX
2617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
2618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
2620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
2622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
2624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
2626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
2628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Read an amount of data in non-blocking mode with Interrupt from a specific memory addre
2629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
2632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
2633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
2634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
2635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
2638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
2639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Mem_Read_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAdd
2640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
2641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
2642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
2643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
2645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));
2646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
2648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
2650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
2652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
2653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/ccX4fpHz.s 			page 48


2655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
2656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_BUSY;
2658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
2661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
2664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tickstart = HAL_GetTick();
2665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
2667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
2668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
2669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
2671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
2672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
2673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
2674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
2675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
2677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
2679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
2680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
2682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
2684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
2685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send Slave Address and Memory Address */
2688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, I2C_TIMEOUT_FLAG, tickstart
2689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
2691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
2693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
2696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, I2C_GENERATE_START_READ
2697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
2699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
2700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
2702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
2703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               process unlock */
2704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable ERR, TC, STOP, NACK, RXI interrupt */
2706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* possible to enable all of these */
2707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_TX
2708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RX_IT);
2709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
2711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
ARM GAS  /tmp/ccX4fpHz.s 			page 49


2712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
2713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
2715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
2717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
2718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Write an amount of data in non-blocking mode with DMA to a specific memory address
2719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
2722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
2723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
2724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
2725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
2728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
2729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Mem_Write_DMA(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemA
2730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
2731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
2732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
2733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
2734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
2736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));
2737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
2739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
2741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
2743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
2744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
2747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_BUSY;
2749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
2752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
2755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tickstart = HAL_GetTick();
2756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
2758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
2759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
2760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
2762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
2763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
2764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
2765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
2766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
2768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
ARM GAS  /tmp/ccX4fpHz.s 			page 50


2769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
2770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
2771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
2773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
2775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
2776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send Slave Address and Memory Address */
2779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, I2C_TIMEOUT_FLAG, tickstar
2780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
2782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
2784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->hdmatx != NULL)
2788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the I2C DMA transfer complete callback */
2790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmatx->XferCpltCallback = I2C_DMAMasterTransmitCplt;
2791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the DMA error callback */
2793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmatx->XferErrorCallback = I2C_DMAError;
2794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the unused DMA callbacks to NULL */
2796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmatx->XferHalfCpltCallback = NULL;
2797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmatx->XferAbortCallback = NULL;
2798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable the DMA stream */
2800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmatx, (uint32_t)pData, (uint32_t)&hi2c->Instance->TX
2801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
2803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C state */
2805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_READY;
2806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
2807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C error code */
2809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
2810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
2812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
2815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (dmaxferstatus == HAL_OK)
2818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Send Slave Address */
2820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
2821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, I2C_NO_STARTSTOP);
2822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update XferCount value */
2824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount -= hi2c->XferSize;
2825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/ccX4fpHz.s 			page 51


2826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
2827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
2830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                 to avoid the risk of I2C interrupt handle execution before current
2831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                 process unlock */
2832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable ERR and NACK interrupts */
2833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_ERROR_IT);
2834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable DMA Request */
2836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->CR1 |= I2C_CR1_TXDMAEN;
2837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
2839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C state */
2841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_READY;
2842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
2843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C error code */
2845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
2846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
2848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
2851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
2854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
2856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
2858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
2860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
2862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Reads an amount of data in non-blocking mode with DMA from a specific memory address.
2863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
2866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
2867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
2868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
2869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be read
2871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
2872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
2873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Mem_Read_DMA(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAd
2874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
2875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
2876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
2877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
2878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
2880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));
2881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
ARM GAS  /tmp/ccX4fpHz.s 			page 52


2883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
2885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
2887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
2888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
2891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_BUSY;
2893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
2896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
2899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tickstart = HAL_GetTick();
2900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
2902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
2903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
2904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
2906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
2907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
2908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
2909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
2910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
2912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
2914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
2915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
2917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
2919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
2920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send Slave Address and Memory Address */
2923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, I2C_TIMEOUT_FLAG, tickstart
2924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
2926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
2928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->hdmarx != NULL)
2931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the I2C DMA transfer complete callback */
2933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmarx->XferCpltCallback = I2C_DMAMasterReceiveCplt;
2934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the DMA error callback */
2936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmarx->XferErrorCallback = I2C_DMAError;
2937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the unused DMA callbacks to NULL */
2939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmarx->XferHalfCpltCallback = NULL;
ARM GAS  /tmp/ccX4fpHz.s 			page 53


2940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmarx->XferAbortCallback = NULL;
2941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable the DMA stream */
2943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmarx, (uint32_t)&hi2c->Instance->RXDR, (uint32_t)pDa
2944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
2946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C state */
2948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_READY;
2949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
2950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C error code */
2952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
2953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
2955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
2958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (dmaxferstatus == HAL_OK)
2961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
2963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, I2C_GENERATE_START_RE
2964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update XferCount value */
2966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount -= hi2c->XferSize;
2967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
2969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
2972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                 to avoid the risk of I2C interrupt handle execution before current
2973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                 process unlock */
2974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable ERR and NACK interrupts */
2975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_ERROR_IT);
2976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable DMA Request */
2978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->CR1 |= I2C_CR1_RXDMAEN;
2979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
2981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C state */
2983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_READY;
2984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
2985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C error code */
2987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
2988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
2990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
2993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
2996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
ARM GAS  /tmp/ccX4fpHz.s 			page 54


2997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
2998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
3000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
3002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
3004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Checks if target device is ready for communication.
3005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @note   This function is used with Memory devices
3006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
3009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
3010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Trials Number of trials
3011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
3012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
3013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
3014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_IsDeviceReady(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint32_t Tria
3015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
3016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
3017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __IO uint32_t I2C_Trials = 0UL;
3019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   FlagStatus tmp1;
3021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   FlagStatus tmp2;
3022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
3024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
3026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_BUSY;
3028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
3031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
3032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_BUSY;
3034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
3035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     do
3037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Generate Start */
3039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->CR2 = I2C_GENERATE_START(hi2c->Init.AddressingMode, DevAddress);
3040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* No need to Check TC flag, with AUTOEND mode the stop is automatically generated */
3042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Wait until STOPF flag is set or a NACK flag is set*/
3043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       tickstart = HAL_GetTick();
3044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       tmp1 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF);
3046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       tmp2 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF);
3047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       while ((tmp1 == RESET) && (tmp2 == RESET))
3049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (Timeout != HAL_MAX_DELAY)
3051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
3052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
3053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
ARM GAS  /tmp/ccX4fpHz.s 			page 55


3054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             /* Update I2C state */
3055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             hi2c->State = HAL_I2C_STATE_READY;
3056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             /* Update I2C error code */
3058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
3059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             /* Process Unlocked */
3061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             __HAL_UNLOCK(hi2c);
3062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             return HAL_ERROR;
3064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
3065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
3066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         tmp1 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF);
3068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         tmp2 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF);
3069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Check if the NACKF flag has not been set */
3072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == RESET)
3073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Wait until STOPF flag is reset */
3075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_STOPF, RESET, Timeout, tickstart) != HAL_OK)
3076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
3077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           return HAL_ERROR;
3078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
3079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Clear STOP Flag */
3081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
3082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Device is ready */
3084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->State = HAL_I2C_STATE_READY;
3085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
3087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
3088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_OK;
3090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
3092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Wait until STOPF flag is reset */
3094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_STOPF, RESET, Timeout, tickstart) != HAL_OK)
3095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
3096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           return HAL_ERROR;
3097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
3098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Clear NACK Flag */
3100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
3101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Clear STOP Flag, auto generated with autoend*/
3103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
3104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Check if the maximum allowed number of trials has been reached */
3107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (I2C_Trials == Trials)
3108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Generate Stop */
3110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Instance->CR2 |= I2C_CR2_STOP;
ARM GAS  /tmp/ccX4fpHz.s 			page 56


3111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Wait until STOPF flag is reset */
3113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_STOPF, RESET, Timeout, tickstart) != HAL_OK)
3114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
3115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           return HAL_ERROR;
3116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
3117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Clear STOP Flag */
3119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
3120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Increment Trials */
3123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_Trials++;
3124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     while (I2C_Trials < Trials);
3126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Update I2C state */
3128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
3129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Update I2C error code */
3131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
3132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
3134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
3135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_ERROR;
3137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
3139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
3141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
3143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
3145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Sequential transmit in master I2C mode an amount of data in non-blocking mode with Inte
3146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
3147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
3150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
3151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
3152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
3153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XFEROPTIONS
3154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
3155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
3156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Seq_Transmit_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint
3157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
3158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
3159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xferrequest = I2C_GENERATE_START_WRITE;
3160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
3162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
3163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
3165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
3167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
ARM GAS  /tmp/ccX4fpHz.s 			page 57


3168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX;
3170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
3171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
3172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
3174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
3175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
3176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
3177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
3178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* If hi2c->XferCount > MAX_NBYTE_SIZE, use reload mode */
3180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
3181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
3183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
3184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
3186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
3188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = hi2c->XferOptions;
3189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* If transfer direction not change and there is no request to start another frame, do not gene
3192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Mean Previous state is same as current state */
3193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((hi2c->PreviousState == I2C_STATE_MASTER_BUSY_TX) && (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST
3194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xferrequest = I2C_NO_STARTSTOP;
3196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
3198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Convert OTHER_xxx XferOptions if any */
3200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_ConvertOtherXferOptions(hi2c);
3201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update xfermode accordingly if no reload is necessary */
3203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (hi2c->XferCount < MAX_NBYTE_SIZE)
3204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         xfermode = hi2c->XferOptions;
3206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send Slave Address and set NBYTES to write */
3210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, xferrequest);
3211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
3213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
3214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
3216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
3217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               process unlock */
3218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
3219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
3221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
3223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
ARM GAS  /tmp/ccX4fpHz.s 			page 58


3225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
3227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
3229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Sequential transmit in master I2C mode an amount of data in non-blocking mode with DMA.
3230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
3231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
3234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
3235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
3236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
3237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XFEROPTIONS
3238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
3239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
3240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Seq_Transmit_DMA(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uin
3241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
3242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
3243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xferrequest = I2C_GENERATE_START_WRITE;
3244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
3245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
3247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
3248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
3250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
3252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
3253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX;
3255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
3256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
3257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
3259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
3260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
3261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
3262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
3263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* If hi2c->XferCount > MAX_NBYTE_SIZE, use reload mode */
3265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
3266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
3268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
3269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
3271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
3273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = hi2c->XferOptions;
3274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* If transfer direction not change and there is no request to start another frame, do not gene
3277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Mean Previous state is same as current state */
3278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((hi2c->PreviousState == I2C_STATE_MASTER_BUSY_TX) && (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST
3279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xferrequest = I2C_NO_STARTSTOP;
3281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
ARM GAS  /tmp/ccX4fpHz.s 			page 59


3282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
3283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Convert OTHER_xxx XferOptions if any */
3285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_ConvertOtherXferOptions(hi2c);
3286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update xfermode accordingly if no reload is necessary */
3288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (hi2c->XferCount < MAX_NBYTE_SIZE)
3289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         xfermode = hi2c->XferOptions;
3291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferSize > 0U)
3295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (hi2c->hdmatx != NULL)
3297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Set the I2C DMA transfer complete callback */
3299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmatx->XferCpltCallback = I2C_DMAMasterTransmitCplt;
3300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Set the DMA error callback */
3302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmatx->XferErrorCallback = I2C_DMAError;
3303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Set the unused DMA callbacks to NULL */
3305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmatx->XferHalfCpltCallback = NULL;
3306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmatx->XferAbortCallback = NULL;
3307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Enable the DMA stream */
3309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmatx, (uint32_t)pData, (uint32_t)&hi2c->Instance->
3310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
3312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update I2C state */
3314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->State     = HAL_I2C_STATE_READY;
3315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
3316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update I2C error code */
3318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
3319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
3321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
3322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
3324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (dmaxferstatus == HAL_OK)
3327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Send Slave Address and set NBYTES to write */
3329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, xferrequest);
3330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update XferCount value */
3332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->XferCount -= hi2c->XferSize;
3333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
3335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
3336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Note : The I2C interrupts must be enabled after unlocking current process
3338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                   to avoid the risk of I2C interrupt handle execution before current
ARM GAS  /tmp/ccX4fpHz.s 			page 60


3339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                   process unlock */
3340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Enable ERR and NACK interrupts */
3341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_Enable_IRQ(hi2c, I2C_XFER_ERROR_IT);
3342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Enable DMA Request */
3344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Instance->CR1 |= I2C_CR1_TXDMAEN;
3345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
3347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update I2C state */
3349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->State     = HAL_I2C_STATE_READY;
3350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
3351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update I2C error code */
3353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
3354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
3356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
3357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
3359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
3362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update Transfer ISR function pointer */
3364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferISR = I2C_Master_ISR_IT;
3365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Send Slave Address */
3367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set NBYTES to write and generate START condition */
3368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_
3369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
3371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
3372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
3374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                 to avoid the risk of I2C interrupt handle execution before current
3375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                 process unlock */
3376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable ERR, TC, STOP, NACK, TXI interrupt */
3377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* possible to enable all of these */
3378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_
3379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
3380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
3383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
3385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
3387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
3389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
3391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Sequential receive in master I2C mode an amount of data in non-blocking mode with Inter
3392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
3393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
ARM GAS  /tmp/ccX4fpHz.s 			page 61


3396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
3397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
3398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
3399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XFEROPTIONS
3400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
3401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
3402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Seq_Receive_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8
3403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
3404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
3405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xferrequest = I2C_GENERATE_START_READ;
3406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
3408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
3409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
3411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
3413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
3414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX;
3416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
3417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
3418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
3420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
3421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
3422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
3423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
3424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* If hi2c->XferCount > MAX_NBYTE_SIZE, use reload mode */
3426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
3427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
3429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
3430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
3432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
3434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = hi2c->XferOptions;
3435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* If transfer direction not change and there is no request to start another frame, do not gene
3438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Mean Previous state is same as current state */
3439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((hi2c->PreviousState == I2C_STATE_MASTER_BUSY_RX) && (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST
3440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xferrequest = I2C_NO_STARTSTOP;
3442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
3444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Convert OTHER_xxx XferOptions if any */
3446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_ConvertOtherXferOptions(hi2c);
3447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update xfermode accordingly if no reload is necessary */
3449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (hi2c->XferCount < MAX_NBYTE_SIZE)
3450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         xfermode = hi2c->XferOptions;
3452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
ARM GAS  /tmp/ccX4fpHz.s 			page 62


3453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send Slave Address and set NBYTES to read */
3456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, xferrequest);
3457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
3459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
3460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
3462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
3463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               process unlock */
3464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RX_IT);
3465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
3467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
3469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
3471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
3473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
3475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Sequential receive in master I2C mode an amount of data in non-blocking mode with DMA
3476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
3477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
3480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
3481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
3482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
3483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XFEROPTIONS
3484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
3485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
3486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Seq_Receive_DMA(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint
3487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
3488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
3489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xferrequest = I2C_GENERATE_START_READ;
3490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
3491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
3493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
3494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
3496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
3498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
3499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX;
3501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
3502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
3503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
3505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
3506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
3507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
3508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
3509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/ccX4fpHz.s 			page 63


3510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* If hi2c->XferCount > MAX_NBYTE_SIZE, use reload mode */
3511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
3512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
3514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
3515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
3517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
3519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = hi2c->XferOptions;
3520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* If transfer direction not change and there is no request to start another frame, do not gene
3523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Mean Previous state is same as current state */
3524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((hi2c->PreviousState == I2C_STATE_MASTER_BUSY_RX) && (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST
3525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xferrequest = I2C_NO_STARTSTOP;
3527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
3529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Convert OTHER_xxx XferOptions if any */
3531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_ConvertOtherXferOptions(hi2c);
3532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update xfermode accordingly if no reload is necessary */
3534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (hi2c->XferCount < MAX_NBYTE_SIZE)
3535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         xfermode = hi2c->XferOptions;
3537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferSize > 0U)
3541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (hi2c->hdmarx != NULL)
3543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Set the I2C DMA transfer complete callback */
3545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmarx->XferCpltCallback = I2C_DMAMasterReceiveCplt;
3546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Set the DMA error callback */
3548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmarx->XferErrorCallback = I2C_DMAError;
3549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Set the unused DMA callbacks to NULL */
3551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmarx->XferHalfCpltCallback = NULL;
3552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmarx->XferAbortCallback = NULL;
3553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Enable the DMA stream */
3555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmarx, (uint32_t)&hi2c->Instance->RXDR, (uint32_t)p
3556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
3558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update I2C state */
3560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->State     = HAL_I2C_STATE_READY;
3561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
3562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update I2C error code */
3564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
3565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
ARM GAS  /tmp/ccX4fpHz.s 			page 64


3567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
3568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
3570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (dmaxferstatus == HAL_OK)
3573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Send Slave Address and set NBYTES to read */
3575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, xferrequest);
3576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update XferCount value */
3578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->XferCount -= hi2c->XferSize;
3579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
3581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
3582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Note : The I2C interrupts must be enabled after unlocking current process
3584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                   to avoid the risk of I2C interrupt handle execution before current
3585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                   process unlock */
3586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Enable ERR and NACK interrupts */
3587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_Enable_IRQ(hi2c, I2C_XFER_ERROR_IT);
3588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Enable DMA Request */
3590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Instance->CR1 |= I2C_CR1_RXDMAEN;
3591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
3593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update I2C state */
3595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->State     = HAL_I2C_STATE_READY;
3596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
3597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update I2C error code */
3599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
3600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
3602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
3603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
3605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
3608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update Transfer ISR function pointer */
3610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferISR = I2C_Master_ISR_IT;
3611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Send Slave Address */
3613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set NBYTES to read and generate START condition */
3614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_
3615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
3617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
3618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
3620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                 to avoid the risk of I2C interrupt handle execution before current
3621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                 process unlock */
3622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable ERR, TC, STOP, NACK, TXI interrupt */
3623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* possible to enable all of these */
ARM GAS  /tmp/ccX4fpHz.s 			page 65


3624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_
3625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
3626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
3629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
3631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
3633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
3635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
3637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Sequential transmit in slave/device I2C mode an amount of data in non-blocking mode wit
3638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
3639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
3642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
3643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XFEROPTIONS
3644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
3645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
3646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Seq_Transmit_IT(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t S
3647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
3648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
3649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
3650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
3652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
3654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
3656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
3657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable Interrupts, to prevent preemption during treatment in case of multicall */
3660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_TX_IT);
3661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
3663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
3664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* I2C cannot manage full duplex exchange so disable previous IT enabled if any */
3666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* and then toggle the HAL slave RX state to TX state */
3667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->State == HAL_I2C_STATE_BUSY_RX_LISTEN)
3668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Disable associated Interrupts */
3670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT);
3671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Abort DMA Xfer if any */
3673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if ((hi2c->Instance->CR1 & I2C_CR1_RXDMAEN) == I2C_CR1_RXDMAEN)
3674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Instance->CR1 &= ~I2C_CR1_RXDMAEN;
3676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->hdmarx != NULL)
3678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
3679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Set the I2C DMA Abort callback :
3680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
ARM GAS  /tmp/ccX4fpHz.s 			page 66


3681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
3682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Abort DMA RX */
3684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
3685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
3686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             /* Call Directly XferAbortCallback function in case of error */
3687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
3688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
3689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
3690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX_LISTEN;
3694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
3695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
3696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable Address Acknowledge */
3698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
3699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
3701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
3702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
3703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
3704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
3705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
3706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_GET_DIR(hi2c) == I2C_DIRECTION_RECEIVE)
3708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Clear ADDR flag after prepare the transfer parameters */
3710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* This action will generate an acknowledge to the Master */
3711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
3712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
3715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
3716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
3718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     to avoid the risk of I2C interrupt handle execution before current
3719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     process unlock */
3720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* REnable ADDR interrupt */
3721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT | I2C_XFER_LISTEN_IT);
3722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
3724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
3726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_ERROR;
3728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
3730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
3732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Sequential transmit in slave/device I2C mode an amount of data in non-blocking mode wit
3733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
3734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
3737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
ARM GAS  /tmp/ccX4fpHz.s 			page 67


3738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XFEROPTIONS
3739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
3740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
3741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Seq_Transmit_DMA(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t 
3742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
3743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
3744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
3746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
3747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
3749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
3751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
3753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
3754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
3757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
3758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable Interrupts, to prevent preemption during treatment in case of multicall */
3760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_TX_IT);
3761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* I2C cannot manage full duplex exchange so disable previous IT enabled if any */
3763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* and then toggle the HAL slave RX state to TX state */
3764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->State == HAL_I2C_STATE_BUSY_RX_LISTEN)
3765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Disable associated Interrupts */
3767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT);
3768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if ((hi2c->Instance->CR1 & I2C_CR1_RXDMAEN) == I2C_CR1_RXDMAEN)
3770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Abort DMA Xfer if any */
3772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->hdmarx != NULL)
3773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
3774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->Instance->CR1 &= ~I2C_CR1_RXDMAEN;
3775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Set the I2C DMA Abort callback :
3777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
3778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
3779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Abort DMA RX */
3781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
3782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
3783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             /* Call Directly XferAbortCallback function in case of error */
3784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
3785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
3786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
3787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else if (hi2c->State == HAL_I2C_STATE_BUSY_TX_LISTEN)
3790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if ((hi2c->Instance->CR1 & I2C_CR1_TXDMAEN) == I2C_CR1_TXDMAEN)
3792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Instance->CR1 &= ~I2C_CR1_TXDMAEN;
3794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/ccX4fpHz.s 			page 68


3795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Abort DMA Xfer if any */
3796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->hdmatx != NULL)
3797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
3798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Set the I2C DMA Abort callback :
3799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
3800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
3801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Abort DMA TX */
3803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
3804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
3805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             /* Call Directly XferAbortCallback function in case of error */
3806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
3807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
3808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
3809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
3812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Nothing to do */
3814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX_LISTEN;
3817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
3818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
3819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable Address Acknowledge */
3821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
3822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
3824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
3825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
3826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
3827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
3828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_DMA;
3829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->hdmatx != NULL)
3831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the I2C DMA transfer complete callback */
3833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmatx->XferCpltCallback = I2C_DMASlaveTransmitCplt;
3834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the DMA error callback */
3836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmatx->XferErrorCallback = I2C_DMAError;
3837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the unused DMA callbacks to NULL */
3839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmatx->XferHalfCpltCallback = NULL;
3840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmatx->XferAbortCallback = NULL;
3841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable the DMA stream */
3843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmatx, (uint32_t)pData, (uint32_t)&hi2c->Instance->TX
3844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
3846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C state */
3848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_LISTEN;
3849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
3850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C error code */
ARM GAS  /tmp/ccX4fpHz.s 			page 69


3852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
3853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
3855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
3856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
3858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (dmaxferstatus == HAL_OK)
3861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update XferCount value */
3863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount -= hi2c->XferSize;
3864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Reset XferSize */
3866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = 0;
3867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
3869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C state */
3871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_LISTEN;
3872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
3873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C error code */
3875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
3876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
3878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
3879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
3881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_GET_DIR(hi2c) == I2C_DIRECTION_RECEIVE)
3884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Clear ADDR flag after prepare the transfer parameters */
3886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* This action will generate an acknowledge to the Master */
3887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
3888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
3891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
3892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
3894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     to avoid the risk of I2C interrupt handle execution before current
3895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     process unlock */
3896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable ERR, STOP, NACK, ADDR interrupts */
3897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
3898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable DMA Request */
3900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR1 |= I2C_CR1_TXDMAEN;
3901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
3903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
3905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_ERROR;
3907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
ARM GAS  /tmp/ccX4fpHz.s 			page 70


3909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
3911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Sequential receive in slave/device I2C mode an amount of data in non-blocking mode with
3912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
3913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
3916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
3917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XFEROPTIONS
3918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
3919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
3920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Seq_Receive_IT(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Si
3921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
3922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
3923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
3924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
3926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
3928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
3930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
3931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable Interrupts, to prevent preemption during treatment in case of multicall */
3934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_RX_IT);
3935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
3937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
3938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* I2C cannot manage full duplex exchange so disable previous IT enabled if any */
3940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* and then toggle the HAL slave TX state to RX state */
3941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->State == HAL_I2C_STATE_BUSY_TX_LISTEN)
3942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Disable associated Interrupts */
3944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT);
3945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if ((hi2c->Instance->CR1 & I2C_CR1_TXDMAEN) == I2C_CR1_TXDMAEN)
3947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Instance->CR1 &= ~I2C_CR1_TXDMAEN;
3949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Abort DMA Xfer if any */
3951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->hdmatx != NULL)
3952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
3953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Set the I2C DMA Abort callback :
3954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
3955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
3956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Abort DMA TX */
3958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
3959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
3960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             /* Call Directly XferAbortCallback function in case of error */
3961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
3962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
3963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
3964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
ARM GAS  /tmp/ccX4fpHz.s 			page 71


3966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX_LISTEN;
3968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
3969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
3970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable Address Acknowledge */
3972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
3973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
3975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
3976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
3977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
3978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
3979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
3980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_GET_DIR(hi2c) == I2C_DIRECTION_TRANSMIT)
3982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Clear ADDR flag after prepare the transfer parameters */
3984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* This action will generate an acknowledge to the Master */
3985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
3986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
3989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
3990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
3992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     to avoid the risk of I2C interrupt handle execution before current
3993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     process unlock */
3994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* REnable ADDR interrupt */
3995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RX_IT | I2C_XFER_LISTEN_IT);
3996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
3998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
4000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_ERROR;
4002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Sequential receive in slave/device I2C mode an amount of data in non-blocking mode with
4007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
4008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
4011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
4012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XFEROPTIONS
4013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
4014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Seq_Receive_DMA(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t S
4016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
4018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
4020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
4021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
ARM GAS  /tmp/ccX4fpHz.s 			page 72


4023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
4025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
4027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
4028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable Interrupts, to prevent preemption during treatment in case of multicall */
4031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_RX_IT);
4032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
4034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
4035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* I2C cannot manage full duplex exchange so disable previous IT enabled if any */
4037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* and then toggle the HAL slave TX state to RX state */
4038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->State == HAL_I2C_STATE_BUSY_TX_LISTEN)
4039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Disable associated Interrupts */
4041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT);
4042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if ((hi2c->Instance->CR1 & I2C_CR1_TXDMAEN) == I2C_CR1_TXDMAEN)
4044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
4045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Abort DMA Xfer if any */
4046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->hdmatx != NULL)
4047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
4048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->Instance->CR1 &= ~I2C_CR1_TXDMAEN;
4049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Set the I2C DMA Abort callback :
4051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
4052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
4053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Abort DMA TX */
4055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
4056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
4057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             /* Call Directly XferAbortCallback function in case of error */
4058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
4059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
4060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
4061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
4062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else if (hi2c->State == HAL_I2C_STATE_BUSY_RX_LISTEN)
4064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if ((hi2c->Instance->CR1 & I2C_CR1_RXDMAEN) == I2C_CR1_RXDMAEN)
4066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
4067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Instance->CR1 &= ~I2C_CR1_RXDMAEN;
4068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Abort DMA Xfer if any */
4070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->hdmarx != NULL)
4071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
4072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Set the I2C DMA Abort callback :
4073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
4074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
4075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Abort DMA RX */
4077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
4078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
4079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             /* Call Directly XferAbortCallback function in case of error */
ARM GAS  /tmp/ccX4fpHz.s 			page 73


4080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
4081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
4082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
4083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
4084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
4086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Nothing to do */
4088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX_LISTEN;
4091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
4092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
4093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable Address Acknowledge */
4095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
4096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
4098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
4099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
4100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
4101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
4102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_DMA;
4103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->hdmarx != NULL)
4105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the I2C DMA transfer complete callback */
4107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmarx->XferCpltCallback = I2C_DMASlaveReceiveCplt;
4108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the DMA error callback */
4110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmarx->XferErrorCallback = I2C_DMAError;
4111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the unused DMA callbacks to NULL */
4113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmarx->XferHalfCpltCallback = NULL;
4114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmarx->XferAbortCallback = NULL;
4115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable the DMA stream */
4117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmarx, (uint32_t)&hi2c->Instance->RXDR, (uint32_t)pDa
4118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
4120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C state */
4122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_LISTEN;
4123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
4124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C error code */
4126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
4127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
4129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
4130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
4132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (dmaxferstatus == HAL_OK)
4135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update XferCount value */
ARM GAS  /tmp/ccX4fpHz.s 			page 74


4137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount -= hi2c->XferSize;
4138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Reset XferSize */
4140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = 0;
4141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
4143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C state */
4145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_LISTEN;
4146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
4147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C error code */
4149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
4150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
4152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
4153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
4155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_GET_DIR(hi2c) == I2C_DIRECTION_TRANSMIT)
4158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Clear ADDR flag after prepare the transfer parameters */
4160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* This action will generate an acknowledge to the Master */
4161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
4162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
4165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
4166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
4168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     to avoid the risk of I2C interrupt handle execution before current
4169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     process unlock */
4170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* REnable ADDR interrupt */
4171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RX_IT | I2C_XFER_LISTEN_IT);
4172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable DMA Request */
4174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR1 |= I2C_CR1_RXDMAEN;
4175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
4177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
4179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_ERROR;
4181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Enable the Address listen mode with Interrupt.
4186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
4189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_EnableListen_IT(I2C_HandleTypeDef *hi2c)
4191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
4193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
ARM GAS  /tmp/ccX4fpHz.s 			page 75


4194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_LISTEN;
4195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR = I2C_Slave_ISR_IT;
4196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable the Address Match interrupt */
4198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
4199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
4201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
4203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
4205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Disable the Address listen mode with Interrupt.
4210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C
4212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
4213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_DisableListen_IT(I2C_HandleTypeDef *hi2c)
4215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Declaration of tmp to prevent undefined behavior of volatile usage */
4217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmp;
4218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Disable Address listen mode only if a transfer is not ongoing */
4220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_LISTEN)
4221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tmp = (uint32_t)(hi2c->State) & I2C_STATE_MSK;
4223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = tmp | (uint32_t)(hi2c->Mode);
4224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
4225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode = HAL_I2C_MODE_NONE;
4226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR = NULL;
4227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable the Address Match interrupt */
4229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
4230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
4232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
4234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
4236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Abort a master I2C IT or DMA process communication with Interrupt.
4241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
4244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
4245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
4246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Abort_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress)
4248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->Mode == HAL_I2C_MODE_MASTER)
4250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
ARM GAS  /tmp/ccX4fpHz.s 			page 76


4251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
4252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
4253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable Interrupts */
4255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT);
4256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT);
4257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set State at HAL_I2C_STATE_ABORT */
4259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_ABORT;
4260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set NBYTES to 1 to generate a dummy read on I2C peripheral */
4262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set AUTOEND mode, this will generate a NACK then STOP condition to abort the current transfe
4263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, 1, I2C_AUTOEND_MODE, I2C_GENERATE_STOP);
4264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
4266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
4267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
4269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
4270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               process unlock */
4271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_CPLT_IT);
4272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
4274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
4276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Wrong usage of abort function */
4278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* This function should be used only in case of abort monitored by master device */
4279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_ERROR;
4280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @}
4285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /** @defgroup I2C_IRQ_Handler_and_Callbacks IRQ Handler and Callbacks
4288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****  * @{
4289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****  */
4290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  This function handles I2C event interrupt request.
4293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
4296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** void HAL_I2C_EV_IRQHandler(I2C_HandleTypeDef *hi2c)
4298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Get current IT Flags and IT sources value */
4300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t itflags   = READ_REG(hi2c->Instance->ISR);
4301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t itsources = READ_REG(hi2c->Instance->CR1);
4302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* I2C events treatment -------------------------------------*/
4304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->XferISR != NULL)
4305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR(hi2c, itflags, itsources);
4307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
ARM GAS  /tmp/ccX4fpHz.s 			page 77


4308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  This function handles I2C error interrupt request.
4312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
4315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** void HAL_I2C_ER_IRQHandler(I2C_HandleTypeDef *hi2c)
4317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t itflags   = READ_REG(hi2c->Instance->ISR);
4319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t itsources = READ_REG(hi2c->Instance->CR1);
4320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmperror;
4321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* I2C Bus error interrupt occurred ------------------------------------*/
4323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(itflags, I2C_FLAG_BERR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_E
4324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_BERR;
4326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear BERR flag */
4328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
4329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* I2C Over-Run/Under-Run interrupt occurred ----------------------------------------*/
4332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(itflags, I2C_FLAG_OVR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_ER
4333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_OVR;
4335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear OVR flag */
4337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
4338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* I2C Arbitration Loss error interrupt occurred -------------------------------------*/
4341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(itflags, I2C_FLAG_ARLO) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_E
4342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_ARLO;
4344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear ARLO flag */
4346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
4347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Store current volatile hi2c->ErrorCode, misra rule */
4350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   tmperror = hi2c->ErrorCode;
4351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Call the Error Callback in case of Error detected */
4353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((tmperror & (HAL_I2C_ERROR_BERR | HAL_I2C_ERROR_OVR | HAL_I2C_ERROR_ARLO)) !=  HAL_I2C_ERROR_
4354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_ITError(hi2c, tmperror);
4356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Master Tx Transfer completed callback.
4361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
4364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
ARM GAS  /tmp/ccX4fpHz.s 			page 78


4365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** __weak void HAL_I2C_MasterTxCpltCallback(I2C_HandleTypeDef *hi2c)
4366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   UNUSED(hi2c);
4369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             the HAL_I2C_MasterTxCpltCallback could be implemented in the user file
4372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****    */
4373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Master Rx Transfer completed callback.
4377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
4380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** __weak void HAL_I2C_MasterRxCpltCallback(I2C_HandleTypeDef *hi2c)
4382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   UNUSED(hi2c);
4385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             the HAL_I2C_MasterRxCpltCallback could be implemented in the user file
4388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****    */
4389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /** @brief  Slave Tx Transfer completed callback.
4392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
4395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** __weak void HAL_I2C_SlaveTxCpltCallback(I2C_HandleTypeDef *hi2c)
4397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   UNUSED(hi2c);
4400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             the HAL_I2C_SlaveTxCpltCallback could be implemented in the user file
4403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****    */
4404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Slave Rx Transfer completed callback.
4408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
4411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** __weak void HAL_I2C_SlaveRxCpltCallback(I2C_HandleTypeDef *hi2c)
4413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   UNUSED(hi2c);
4416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             the HAL_I2C_SlaveRxCpltCallback could be implemented in the user file
4419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****    */
4420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/ccX4fpHz.s 			page 79


4422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Slave Address Match callback.
4424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  TransferDirection Master request Transfer Direction (Write/Read), value of @ref I2C_XFE
4427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  AddrMatchCode Address Match Code
4428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
4429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** __weak void HAL_I2C_AddrCallback(I2C_HandleTypeDef *hi2c, uint8_t TransferDirection, uint16_t AddrM
4431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   UNUSED(hi2c);
4434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   UNUSED(TransferDirection);
4435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   UNUSED(AddrMatchCode);
4436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             the HAL_I2C_AddrCallback() could be implemented in the user file
4439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****    */
4440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Listen Complete callback.
4444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
4447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** __weak void HAL_I2C_ListenCpltCallback(I2C_HandleTypeDef *hi2c)
4449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   UNUSED(hi2c);
4452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             the HAL_I2C_ListenCpltCallback() could be implemented in the user file
4455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****    */
4456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Memory Tx Transfer completed callback.
4460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
4463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** __weak void HAL_I2C_MemTxCpltCallback(I2C_HandleTypeDef *hi2c)
4465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   UNUSED(hi2c);
4468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             the HAL_I2C_MemTxCpltCallback could be implemented in the user file
4471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****    */
4472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Memory Rx Transfer completed callback.
4476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
ARM GAS  /tmp/ccX4fpHz.s 			page 80


4479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** __weak void HAL_I2C_MemRxCpltCallback(I2C_HandleTypeDef *hi2c)
4481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   UNUSED(hi2c);
4484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             the HAL_I2C_MemRxCpltCallback could be implemented in the user file
4487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****    */
4488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  I2C error callback.
4492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
4495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** __weak void HAL_I2C_ErrorCallback(I2C_HandleTypeDef *hi2c)
4497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   UNUSED(hi2c);
4500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             the HAL_I2C_ErrorCallback could be implemented in the user file
4503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****    */
4504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  I2C abort callback.
4508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
4511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** __weak void HAL_I2C_AbortCpltCallback(I2C_HandleTypeDef *hi2c)
4513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   UNUSED(hi2c);
4516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             the HAL_I2C_AbortCpltCallback could be implemented in the user file
4519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****    */
4520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @}
4524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /** @defgroup I2C_Exported_Functions_Group3 Peripheral State, Mode and Error functions
4527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****  *  @brief   Peripheral State, Mode and Error functions
4528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****  *
4529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** @verbatim
4530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****  ===============================================================================
4531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             ##### Peripheral State, Mode and Error functions #####
4532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****  ===============================================================================
4533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]
4534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     This subsection permit to get in run-time the status of the peripheral
4535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     and the data flow.
ARM GAS  /tmp/ccX4fpHz.s 			page 81


4536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** @endverbatim
4538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @{
4539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Return the I2C handle state.
4543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL state
4546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_I2C_StateTypeDef HAL_I2C_GetState(I2C_HandleTypeDef *hi2c)
4548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Return I2C handle state */
4550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return hi2c->State;
4551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Returns the I2C Master, Slave, Memory or no mode.
4555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         the configuration information for I2C module
4557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL mode
4558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_I2C_ModeTypeDef HAL_I2C_GetMode(I2C_HandleTypeDef *hi2c)
4560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return hi2c->Mode;
4562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** * @brief  Return the I2C error code.
4566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *              the configuration information for the specified I2C.
4568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** * @retval I2C Error Code
4569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** */
4570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** uint32_t HAL_I2C_GetError(I2C_HandleTypeDef *hi2c)
4571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return hi2c->ErrorCode;
4573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @}
4577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @}
4581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /** @addtogroup I2C_Private_Functions
4584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @{
4585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Interrupt Sub-Routine which handle the Interrupt Flags Master Mode with Interrupt.
4589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
4592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  ITSources Interrupt sources enabled.
ARM GAS  /tmp/ccX4fpHz.s 			page 82


4593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
4594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Master_ISR_IT(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uint
4596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint16_t devaddress;
4598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpITFlags = ITFlags;
4599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Process Locked */
4601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
4602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_AF) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2C_IT_
4604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear NACK Flag */
4606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
4607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set corresponding Error Code */
4609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* No need to generate STOP, it is automatically done */
4610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Error callback will be send during stop flag treatment */
4611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
4612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Flush TX register */
4614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Flush_TXDR(hi2c);
4615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, 
4617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Remove RXNE flag on temporary variable as read done */
4619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tmpITFlags &= ~I2C_FLAG_RXNE;
4620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Read data from RXDR */
4622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
4623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Increment Buffer pointer */
4625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr++;
4626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize--;
4628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount--;
4629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_TXIS) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, 
4631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Write data to TXDR */
4633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->TXDR = *hi2c->pBuffPtr;
4634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Increment Buffer pointer */
4636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr++;
4637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize--;
4639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount--;
4640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_TCR) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I
4642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
4644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       devaddress = (uint16_t)(hi2c->Instance->CR2 & I2C_CR2_SADD);
4646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (hi2c->XferCount > MAX_NBYTE_SIZE)
4648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
4649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->XferSize = MAX_NBYTE_SIZE;
ARM GAS  /tmp/ccX4fpHz.s 			page 83


4650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_TransferConfig(hi2c, devaddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_START
4651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
4652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
4653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
4654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->XferSize = hi2c->XferCount;
4655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->XferOptions != I2C_NO_OPTION_FRAME)
4656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
4657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, devaddress, (uint8_t)hi2c->XferSize, hi2c->XferOptions, I2C_NO_S
4658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
4659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         else
4660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
4661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, devaddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_ST
4662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
4663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
4664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
4666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Call TxCpltCallback() if no stop mode is set */
4668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (I2C_GET_STOP_MODE(hi2c) != I2C_AUTOEND_MODE)
4669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
4670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Call I2C Master Sequential complete process */
4671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_ITMasterSeqCplt(hi2c);
4672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
4673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
4674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
4675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Wrong size Status regarding TCR flag event */
4676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Call the corresponding callback to inform upper layer of End of Transfer */
4677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_ITError(hi2c, HAL_I2C_ERROR_SIZE);
4678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
4679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_TC) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2
4682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount == 0U)
4684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (I2C_GET_STOP_MODE(hi2c) != I2C_AUTOEND_MODE)
4686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
4687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Generate a stop condition in case of no transfer option */
4688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->XferOptions == I2C_NO_OPTION_FRAME)
4689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
4690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Generate Stop */
4691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->Instance->CR2 |= I2C_CR2_STOP;
4692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
4693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         else
4694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
4695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Call I2C Master Sequential complete process */
4696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_ITMasterSeqCplt(hi2c);
4697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
4698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
4699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
4701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Wrong size Status regarding TC flag event */
4703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
4704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_ITError(hi2c, HAL_I2C_ERROR_SIZE);
4705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
ARM GAS  /tmp/ccX4fpHz.s 			page 84


4707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
4708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Nothing to do */
4710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2C_
4713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call I2C Master complete process */
4715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_ITMasterCplt(hi2c, tmpITFlags);
4716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Process Unlocked */
4719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
4720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return HAL_OK;
4722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Interrupt Sub-Routine which handle the Interrupt Flags Slave Mode with Interrupt.
4726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
4729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  ITSources Interrupt sources enabled.
4730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
4731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Slave_ISR_IT(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uint3
4733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpoptions = hi2c->XferOptions;
4735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpITFlags = ITFlags;
4736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Process locked */
4738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
4739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check if STOPF is set */
4741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2C_
4742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call I2C Slave complete process */
4744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_ITSlaveCplt(hi2c, tmpITFlags);
4745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_AF) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2C_IT_
4748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Check that I2C transfer finished */
4750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* if yes, normal use case, a NACK is sent by the MASTER when Transfer is finished */
4751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Mean XferCount == 0*/
4752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* So clear Flag NACKF only */
4753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount == 0U)
4754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if ((hi2c->State == HAL_I2C_STATE_LISTEN) && (tmpoptions == I2C_FIRST_AND_LAST_FRAME)) /* Sam
4756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
4757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Call I2C Listen complete process */
4758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_ITListenCplt(hi2c, tmpITFlags);
4759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
4760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else if ((hi2c->State == HAL_I2C_STATE_BUSY_TX_LISTEN) && (tmpoptions != I2C_NO_OPTION_FRAME)
4761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
4762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Clear NACK Flag */
4763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
ARM GAS  /tmp/ccX4fpHz.s 			page 85


4764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Flush TX register */
4766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_Flush_TXDR(hi2c);
4767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Last Byte is Transmitted */
4769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Call I2C Slave Sequential complete process */
4770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_ITSlaveSeqCplt(hi2c);
4771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
4772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
4773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
4774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Clear NACK Flag */
4775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
4776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
4777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
4779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* if no, error use case, a Non-Acknowledge of last Data is generated by the MASTER*/
4781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Clear NACK Flag */
4782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
4783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set ErrorCode corresponding to a Non-Acknowledge */
4785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
4786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if ((tmpoptions == I2C_FIRST_FRAME) || (tmpoptions == I2C_NEXT_FRAME))
4788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
4789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Call the corresponding callback to inform upper layer of End of Transfer */
4790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_ITError(hi2c, hi2c->ErrorCode);
4791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
4792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, 
4795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > 0U)
4797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Read data from RXDR */
4799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
4800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Increment Buffer pointer */
4802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->pBuffPtr++;
4803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize--;
4805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount--;
4806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((hi2c->XferCount == 0U) && \
4809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (tmpoptions != I2C_NO_OPTION_FRAME))
4810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Call I2C Slave Sequential complete process */
4812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_ITSlaveSeqCplt(hi2c);
4813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, 
4816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_ITAddrCplt(hi2c, tmpITFlags);
4818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_TXIS) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, 
4820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
ARM GAS  /tmp/ccX4fpHz.s 			page 86


4821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Write data to TXDR only if XferCount not reach "0" */
4822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* A TXIS flag can be set, during STOP treatment      */
4823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Check if all Datas have already been sent */
4824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* If it is the case, this last write in TXDR is not sent, correspond to a dummy TXIS event */
4825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > 0U)
4826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Write data to TXDR */
4828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->TXDR = *hi2c->pBuffPtr;
4829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Increment Buffer pointer */
4831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->pBuffPtr++;
4832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount--;
4834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize--;
4835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
4837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if ((tmpoptions == I2C_NEXT_FRAME) || (tmpoptions == I2C_FIRST_FRAME))
4839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
4840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Last Byte is Transmitted */
4841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Call I2C Slave Sequential complete process */
4842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_ITSlaveSeqCplt(hi2c);
4843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
4844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
4847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Nothing to do */
4849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Process Unlocked */
4852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
4853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return HAL_OK;
4855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Interrupt Sub-Routine which handle the Interrupt Flags Master Mode with DMA.
4859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
4862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  ITSources Interrupt sources enabled.
4863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
4864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Master_ISR_DMA(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uin
4866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint16_t devaddress;
4868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
4869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Process Locked */
4871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
4872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(ITFlags, I2C_FLAG_AF) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2C_IT_NAC
4874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear NACK Flag */
4876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
4877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/ccX4fpHz.s 			page 87


4878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set corresponding Error Code */
4879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
4880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* No need to generate STOP, it is automatically done */
4882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* But enable STOP interrupt, to treat it */
4883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Error callback will be send during stop flag treatment */
4884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_CPLT_IT);
4885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Flush TX register */
4887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Flush_TXDR(hi2c);
4888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(ITFlags, I2C_FLAG_TCR) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2C_
4890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable TC interrupt */
4892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_TCI);
4893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount != 0U)
4895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Recover Slave address */
4897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       devaddress = (uint16_t)(hi2c->Instance->CR2 & I2C_CR2_SADD);
4898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Prepare the new XferSize to transfer */
4900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (hi2c->XferCount > MAX_NBYTE_SIZE)
4901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
4902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->XferSize = MAX_NBYTE_SIZE;
4903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         xfermode = I2C_RELOAD_MODE;
4904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
4905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
4906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
4907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->XferSize = hi2c->XferCount;
4908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->XferOptions != I2C_NO_OPTION_FRAME)
4909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
4910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           xfermode = hi2c->XferOptions;
4911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
4912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         else
4913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
4914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           xfermode = I2C_AUTOEND_MODE;
4915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
4916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
4917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the new XferSize in Nbytes register */
4919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, devaddress, (uint8_t)hi2c->XferSize, xfermode, I2C_NO_STARTSTOP);
4920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update XferCount value */
4922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount -= hi2c->XferSize;
4923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable DMA Request */
4925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
4926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
4927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Instance->CR1 |= I2C_CR1_RXDMAEN;
4928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
4929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
4930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
4931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Instance->CR1 |= I2C_CR1_TXDMAEN;
4932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
4933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
ARM GAS  /tmp/ccX4fpHz.s 			page 88


4935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Call TxCpltCallback() if no stop mode is set */
4937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (I2C_GET_STOP_MODE(hi2c) != I2C_AUTOEND_MODE)
4938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
4939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Call I2C Master Sequential complete process */
4940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_ITMasterSeqCplt(hi2c);
4941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
4942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
4943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
4944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Wrong size Status regarding TCR flag event */
4945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Call the corresponding callback to inform upper layer of End of Transfer */
4946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_ITError(hi2c, HAL_I2C_ERROR_SIZE);
4947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
4948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(ITFlags, I2C_FLAG_TC) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2C_I
4951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount == 0U)
4953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (I2C_GET_STOP_MODE(hi2c) != I2C_AUTOEND_MODE)
4955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
4956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Generate a stop condition in case of no transfer option */
4957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->XferOptions == I2C_NO_OPTION_FRAME)
4958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
4959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Generate Stop */
4960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->Instance->CR2 |= I2C_CR2_STOP;
4961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
4962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         else
4963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
4964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Call I2C Master Sequential complete process */
4965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_ITMasterSeqCplt(hi2c);
4966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
4967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
4968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
4970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Wrong size Status regarding TC flag event */
4972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
4973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_ITError(hi2c, HAL_I2C_ERROR_SIZE);
4974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(ITFlags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2
4977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call I2C Master complete process */
4979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_ITMasterCplt(hi2c, ITFlags);
4980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
4982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Nothing to do */
4984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Process Unlocked */
4987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
4988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return HAL_OK;
4990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/ccX4fpHz.s 			page 89


4992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Interrupt Sub-Routine which handle the Interrupt Flags Slave Mode with DMA.
4994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
4997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  ITSources Interrupt sources enabled.
4998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
4999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
5000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Slave_ISR_DMA(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uint
5001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
5002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpoptions = hi2c->XferOptions;
5003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t treatdmanack = 0U;
5004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Process locked */
5006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
5007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check if STOPF is set */
5009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(ITFlags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2C_IT_
5010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call I2C Slave complete process */
5012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_ITSlaveCplt(hi2c, ITFlags);
5013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(ITFlags, I2C_FLAG_AF) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2C_IT_NAC
5016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Check that I2C transfer finished */
5018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* if yes, normal use case, a NACK is sent by the MASTER when Transfer is finished */
5019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Mean XferCount == 0 */
5020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* So clear Flag NACKF only */
5021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((I2C_CHECK_IT_SOURCE(ITSources, I2C_CR1_TXDMAEN) != RESET) ||
5022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (I2C_CHECK_IT_SOURCE(ITSources, I2C_CR1_RXDMAEN) != RESET))
5023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Split check of hdmarx, for MISRA compliance */
5025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (hi2c->hdmarx != NULL)
5026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
5027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (I2C_CHECK_IT_SOURCE(ITSources, I2C_CR1_RXDMAEN) != RESET)
5028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
5029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           if (__HAL_DMA_GET_COUNTER(hi2c->hdmarx) == 0U)
5030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
5031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             treatdmanack = 1U;
5032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
5033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
5034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
5035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Split check of hdmatx, for MISRA compliance  */
5037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (hi2c->hdmatx != NULL)
5038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
5039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (I2C_CHECK_IT_SOURCE(ITSources, I2C_CR1_TXDMAEN) != RESET)
5040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
5041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           if (__HAL_DMA_GET_COUNTER(hi2c->hdmatx) == 0U)
5042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
5043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             treatdmanack = 1U;
5044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
5045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
5046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
5047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (treatdmanack == 1U)
ARM GAS  /tmp/ccX4fpHz.s 			page 90


5049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
5050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if ((hi2c->State == HAL_I2C_STATE_LISTEN) && (tmpoptions == I2C_FIRST_AND_LAST_FRAME)) /* S
5051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
5052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Call I2C Listen complete process */
5053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_ITListenCplt(hi2c, ITFlags);
5054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
5055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         else if ((hi2c->State == HAL_I2C_STATE_BUSY_TX_LISTEN) && (tmpoptions != I2C_NO_OPTION_FRAM
5056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
5057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Clear NACK Flag */
5058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
5059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Flush TX register */
5061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_Flush_TXDR(hi2c);
5062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Last Byte is Transmitted */
5064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Call I2C Slave Sequential complete process */
5065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_ITSlaveSeqCplt(hi2c);
5066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
5067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         else
5068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
5069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Clear NACK Flag */
5070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
5071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
5072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
5073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
5074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
5075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* if no, error use case, a Non-Acknowledge of last Data is generated by the MASTER*/
5076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Clear NACK Flag */
5077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
5078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Set ErrorCode corresponding to a Non-Acknowledge */
5080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
5081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if ((tmpoptions == I2C_FIRST_FRAME) || (tmpoptions == I2C_NEXT_FRAME))
5083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
5084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Call the corresponding callback to inform upper layer of End of Transfer */
5085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_ITError(hi2c, hi2c->ErrorCode);
5086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
5087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
5088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
5090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Only Clear NACK Flag, no DMA treatment is pending */
5092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
5093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(ITFlags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2C
5096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_ITAddrCplt(hi2c, ITFlags);
5098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
5100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Nothing to do */
5102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Process Unlocked */
5105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
ARM GAS  /tmp/ccX4fpHz.s 			page 91


5106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return HAL_OK;
5108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
5109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
5111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Master sends target device address followed by internal memory address for write reques
5112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
5113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
5114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
5115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
5116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
5117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
5118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
5119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Tickstart Tick start value
5120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
5121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
5122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint1
5123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
5124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRI
5125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Wait until TXIS flag is set */
5127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
5128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_ERROR;
5130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* If Memory address size is 8Bit */
5133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
5134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send Memory Address */
5136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
5137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* If Memory address size is 16Bit */
5139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
5140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send MSB of Memory Address */
5142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
5143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Wait until TXIS flag is set */
5145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
5146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
5148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send LSB of Memory Address */
5151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
5152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Wait until TCR flag is set */
5155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, Tickstart) != HAL_OK)
5156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_ERROR;
5158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return HAL_OK;
5161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
5162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/ccX4fpHz.s 			page 92


5163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
5164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Master sends target device address followed by internal memory address for read request
5165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
5166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
5167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
5168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
5169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
5170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
5171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
5172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Tickstart Tick start value
5173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
5174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
5175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_RequestMemoryRead(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16
5176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
5177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WR
5178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Wait until TXIS flag is set */
5180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
5181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_ERROR;
5183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* If Memory address size is 8Bit */
5186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
5187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send Memory Address */
5189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
5190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* If Memory address size is 16Bit */
5192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
5193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send MSB of Memory Address */
5195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
5196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Wait until TXIS flag is set */
5198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
5199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
5201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send LSB of Memory Address */
5204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
5205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Wait until TC flag is set */
5208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TC, RESET, Timeout, Tickstart) != HAL_OK)
5209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_ERROR;
5211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return HAL_OK;
5214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
5215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
5217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  I2C Address complete process callback.
5218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c I2C handle.
5219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
ARM GAS  /tmp/ccX4fpHz.s 			page 93


5220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
5221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
5222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_ITAddrCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags)
5223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
5224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint8_t transferdirection;
5225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint16_t slaveaddrcode;
5226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint16_t ownadd1code;
5227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint16_t ownadd2code;
5228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
5230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   UNUSED(ITFlags);
5231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* In case of Listen state, need to inform upper layer of address match code event */
5233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
5234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     transferdirection = I2C_GET_DIR(hi2c);
5236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     slaveaddrcode     = I2C_GET_ADDR_MATCH(hi2c);
5237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     ownadd1code       = I2C_GET_OWN_ADDRESS1(hi2c);
5238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     ownadd2code       = I2C_GET_OWN_ADDRESS2(hi2c);
5239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* If 10bits addressing mode is selected */
5241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
5242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if ((slaveaddrcode & SlaveAddr_MSK) == ((ownadd1code >> SlaveAddr_SHIFT) & SlaveAddr_MSK))
5244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
5245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         slaveaddrcode = ownadd1code;
5246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->AddrEventCount++;
5247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->AddrEventCount == 2U)
5248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
5249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Reset Address Event counter */
5250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->AddrEventCount = 0U;
5251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Clear ADDR flag */
5253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
5254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Process Unlocked */
5256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           __HAL_UNLOCK(hi2c);
5257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Call Slave Addr callback */
5259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->AddrCallback(hi2c, transferdirection, slaveaddrcode);
5261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #else
5262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           HAL_I2C_AddrCallback(hi2c, transferdirection, slaveaddrcode);
5263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
5265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
5266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
5267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
5268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         slaveaddrcode = ownadd2code;
5269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Disable ADDR Interrupts */
5271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
5272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
5274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
5275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Call Slave Addr callback */
ARM GAS  /tmp/ccX4fpHz.s 			page 94


5277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->AddrCallback(hi2c, transferdirection, slaveaddrcode);
5279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #else
5280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         HAL_I2C_AddrCallback(hi2c, transferdirection, slaveaddrcode);
5281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
5283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* else 7 bits addressing mode is selected */
5285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
5286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Disable ADDR Interrupts */
5288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
5289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
5291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
5292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Call Slave Addr callback */
5294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->AddrCallback(hi2c, transferdirection, slaveaddrcode);
5296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #else
5297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       HAL_I2C_AddrCallback(hi2c, transferdirection, slaveaddrcode);
5298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Else clear address flag only */
5302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
5303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear ADDR flag */
5305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
5306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
5308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
5309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
5311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
5313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  I2C Master sequential complete process.
5314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c I2C handle.
5315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
5316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
5317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_ITMasterSeqCplt(I2C_HandleTypeDef *hi2c)
5318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
5319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Reset I2C handle mode */
5320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
5321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* No Generate Stop, to permit restart mode */
5323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* The stop will be done at the end of transfer, when I2C_AUTOEND_MODE enable */
5324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
5325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State         = HAL_I2C_STATE_READY;
5327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
5328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR       = NULL;
5329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable Interrupts */
5331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT);
5332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
ARM GAS  /tmp/ccX4fpHz.s 			page 95


5334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
5335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
5337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->MasterTxCpltCallback(hi2c);
5339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #else
5340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     HAL_I2C_MasterTxCpltCallback(hi2c);
5341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* hi2c->State == HAL_I2C_STATE_BUSY_RX */
5344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
5345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State         = HAL_I2C_STATE_READY;
5347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
5348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR       = NULL;
5349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable Interrupts */
5351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT);
5352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
5354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
5355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
5357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->MasterRxCpltCallback(hi2c);
5359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #else
5360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     HAL_I2C_MasterRxCpltCallback(hi2c);
5361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
5364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
5366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  I2C Slave sequential complete process.
5367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c I2C handle.
5368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
5369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
5370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_ITSlaveSeqCplt(I2C_HandleTypeDef *hi2c)
5371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
5372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Reset I2C handle mode */
5373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
5374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_BUSY_TX_LISTEN)
5376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Remove HAL_I2C_STATE_SLAVE_BUSY_TX, keep only HAL_I2C_STATE_LISTEN */
5378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State         = HAL_I2C_STATE_LISTEN;
5379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
5380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable Interrupts */
5382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT);
5383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
5385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
5386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
5388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->SlaveTxCpltCallback(hi2c);
5390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #else
ARM GAS  /tmp/ccX4fpHz.s 			page 96


5391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     HAL_I2C_SlaveTxCpltCallback(hi2c);
5392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if (hi2c->State == HAL_I2C_STATE_BUSY_RX_LISTEN)
5396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Remove HAL_I2C_STATE_SLAVE_BUSY_RX, keep only HAL_I2C_STATE_LISTEN */
5398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State         = HAL_I2C_STATE_LISTEN;
5399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
5400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable Interrupts */
5402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT);
5403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
5405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
5406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
5408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->SlaveRxCpltCallback(hi2c);
5410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #else
5411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     HAL_I2C_SlaveRxCpltCallback(hi2c);
5412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
5415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Nothing to do */
5417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
5419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
5421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  I2C Master complete process.
5422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c I2C handle.
5423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
5424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
5425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
5426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_ITMasterCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags)
5427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
5428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmperror;
5429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Clear STOP Flag */
5431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
5432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Clear Configuration Register 2 */
5434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_RESET_CR2(hi2c);
5435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Reset handle parameters */
5437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
5438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->XferISR       = NULL;
5439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
5440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (I2C_CHECK_FLAG(ITFlags, I2C_FLAG_AF) != RESET)
5442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear NACK Flag */
5444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
5445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set acknowledge error code */
5447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
ARM GAS  /tmp/ccX4fpHz.s 			page 97


5448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Flush TX register */
5451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_Flush_TXDR(hi2c);
5452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Disable Interrupts */
5454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT | I2C_XFER_RX_IT);
5455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Store current volatile hi2c->ErrorCode, misra rule */
5457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   tmperror = hi2c->ErrorCode;
5458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Call the corresponding callback to inform upper layer of End of Transfer */
5460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((hi2c->State == HAL_I2C_STATE_ABORT) || (tmperror != HAL_I2C_ERROR_NONE))
5461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
5463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_ITError(hi2c, hi2c->ErrorCode);
5464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* hi2c->State == HAL_I2C_STATE_BUSY_TX */
5466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
5467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
5469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->Mode == HAL_I2C_MODE_MEM)
5471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
5473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
5475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
5476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
5478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->MemTxCpltCallback(hi2c);
5480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #else
5481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       HAL_I2C_MemTxCpltCallback(hi2c);
5482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
5485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
5487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
5489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
5490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
5492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->MasterTxCpltCallback(hi2c);
5494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #else
5495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       HAL_I2C_MasterTxCpltCallback(hi2c);
5496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* hi2c->State == HAL_I2C_STATE_BUSY_RX */
5500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
5501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
5503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->Mode == HAL_I2C_MODE_MEM)
ARM GAS  /tmp/ccX4fpHz.s 			page 98


5505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
5507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
5509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
5510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
5512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->MemRxCpltCallback(hi2c);
5514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #else
5515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       HAL_I2C_MemRxCpltCallback(hi2c);
5516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
5519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
5521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
5523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
5524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
5526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->MasterRxCpltCallback(hi2c);
5528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #else
5529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       HAL_I2C_MasterRxCpltCallback(hi2c);
5530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
5534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Nothing to do */
5536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
5538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
5540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  I2C Slave complete process.
5541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c I2C handle.
5542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
5543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
5544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
5545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_ITSlaveCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags)
5546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
5547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpcr1value = READ_REG(hi2c->Instance->CR1);
5548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpITFlags = ITFlags;
5549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Clear STOP Flag */
5551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
5552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Disable all interrupts */
5554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_TX_IT | I2C_XFER_RX_IT);
5555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Disable Address Acknowledge */
5557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Instance->CR2 |= I2C_CR2_NACK;
5558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Clear Configuration Register 2 */
5560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_RESET_CR2(hi2c);
5561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/ccX4fpHz.s 			page 99


5562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Flush TX register */
5563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_Flush_TXDR(hi2c);
5564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* If a DMA is ongoing, Update handle size context */
5566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (I2C_CHECK_IT_SOURCE(tmpcr1value, I2C_CR1_TXDMAEN) != RESET)
5567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->hdmatx != NULL)
5569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount = (uint16_t)__HAL_DMA_GET_COUNTER(hi2c->hdmatx);
5571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if (I2C_CHECK_IT_SOURCE(tmpcr1value, I2C_CR1_RXDMAEN) != RESET)
5574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->hdmarx != NULL)
5576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount = (uint16_t)__HAL_DMA_GET_COUNTER(hi2c->hdmarx);
5578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
5581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Do nothing */
5583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Store Last receive data if any */
5586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_RXNE) != RESET)
5587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Remove RXNE flag on temporary variable as read done */
5589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tmpITFlags &= ~I2C_FLAG_RXNE;
5590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Read data from RXDR */
5592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
5593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Increment Buffer pointer */
5595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr++;
5596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((hi2c->XferSize > 0U))
5598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize--;
5600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount--;
5601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* All data are not transferred, so set error code accordingly */
5605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->XferCount != 0U)
5606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set ErrorCode corresponding to a Non-Acknowledge */
5608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
5609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
5612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
5613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->XferISR = NULL;
5614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
5616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
5618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_ITError(hi2c, hi2c->ErrorCode);
ARM GAS  /tmp/ccX4fpHz.s 			page 100


5619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call the Listen Complete callback, to inform upper layer of the end of Listen usecase */
5621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->State == HAL_I2C_STATE_LISTEN)
5622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Call I2C Listen complete process */
5624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_ITListenCplt(hi2c, tmpITFlags);
5625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if (hi2c->XferOptions != I2C_NO_OPTION_FRAME)
5628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call the Sequential Complete callback, to inform upper layer of the end of Tranfer */
5630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_ITSlaveSeqCplt(hi2c);
5631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
5633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
5634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
5636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
5637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call the Listen Complete callback, to inform upper layer of the end of Listen usecase */
5639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ListenCpltCallback(hi2c);
5641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #else
5642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     HAL_I2C_ListenCpltCallback(hi2c);
5643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Call the corresponding callback to inform upper layer of End of Transfer */
5646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
5647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
5649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
5651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
5652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
5654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->SlaveRxCpltCallback(hi2c);
5656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #else
5657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     HAL_I2C_SlaveRxCpltCallback(hi2c);
5658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
5661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
5663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
5665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
5666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
5668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->SlaveTxCpltCallback(hi2c);
5670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #else
5671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     HAL_I2C_SlaveTxCpltCallback(hi2c);
5672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
5675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/ccX4fpHz.s 			page 101


5676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
5677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  I2C Listen complete process.
5678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c I2C handle.
5679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
5680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
5681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
5682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_ITListenCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags)
5683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
5684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Reset handle parameters */
5685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->XferOptions = I2C_NO_OPTION_FRAME;
5686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
5687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_READY;
5688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
5689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->XferISR = NULL;
5690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Store Last receive data if any */
5692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (I2C_CHECK_FLAG(ITFlags, I2C_FLAG_RXNE) != RESET)
5693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Read data from RXDR */
5695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
5696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Increment Buffer pointer */
5698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr++;
5699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((hi2c->XferSize > 0U))
5701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize--;
5703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount--;
5704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set ErrorCode corresponding to a Non-Acknowledge */
5706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
5707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Disable all Interrupts*/
5711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_RX_IT | I2C_XFER_TX_IT);
5712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Clear NACK Flag */
5714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
5715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Process Unlocked */
5717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
5718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Call the Listen Complete callback, to inform upper layer of the end of Listen usecase */
5720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->ListenCpltCallback(hi2c);
5722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #else
5723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_I2C_ListenCpltCallback(hi2c);
5724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
5726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
5728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  I2C interrupts error process.
5729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c I2C handle.
5730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  ErrorCode Error code to handle.
5731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
5732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
ARM GAS  /tmp/ccX4fpHz.s 			page 102


5733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_ITError(I2C_HandleTypeDef *hi2c, uint32_t ErrorCode)
5734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
5735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_I2C_StateTypeDef tmpstate = hi2c->State;
5736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Reset handle parameters */
5738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Mode          = HAL_I2C_MODE_NONE;
5739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
5740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->XferCount     = 0U;
5741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Set new error code */
5743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->ErrorCode |= ErrorCode;
5744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Disable Interrupts */
5746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((tmpstate == HAL_I2C_STATE_LISTEN)         ||
5747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (tmpstate == HAL_I2C_STATE_BUSY_TX_LISTEN) ||
5748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (tmpstate == HAL_I2C_STATE_BUSY_RX_LISTEN))
5749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable all interrupts, except interrupts related to LISTEN state */
5751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT | I2C_XFER_TX_IT);
5752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* keep HAL_I2C_STATE_LISTEN if set */
5754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State         = HAL_I2C_STATE_LISTEN;
5755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
5756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR       = I2C_Slave_ISR_IT;
5757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
5759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable all interrupts */
5761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_RX_IT | I2C_XFER_TX_IT);
5762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* If state is an abort treatment on goind, don't change state */
5764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* This change will be do later */
5765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->State != HAL_I2C_STATE_ABORT)
5766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set HAL_I2C_STATE_READY */
5768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->State         = HAL_I2C_STATE_READY;
5769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
5771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR       = NULL;
5772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Abort DMA TX transfer if any */
5775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((hi2c->Instance->CR1 & I2C_CR1_TXDMAEN) == I2C_CR1_TXDMAEN)
5776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR1 &= ~I2C_CR1_TXDMAEN;
5778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->hdmatx != NULL)
5780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the I2C DMA Abort callback :
5782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
5783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
5784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
5786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
5787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Abort DMA TX */
5789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
ARM GAS  /tmp/ccX4fpHz.s 			page 103


5790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
5791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Call Directly XferAbortCallback function in case of error */
5792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
5793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
5794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Abort DMA RX transfer if any */
5797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if ((hi2c->Instance->CR1 & I2C_CR1_RXDMAEN) == I2C_CR1_RXDMAEN)
5798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR1 &= ~I2C_CR1_RXDMAEN;
5800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->hdmarx != NULL)
5802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the I2C DMA Abort callback :
5804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
5805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
5806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
5808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
5809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Abort DMA RX */
5811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
5812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
5813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Call Directly hi2c->hdmarx->XferAbortCallback function in case of error */
5814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
5815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
5816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if (hi2c->State == HAL_I2C_STATE_ABORT)
5819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
5821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
5823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
5824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
5826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->AbortCpltCallback(hi2c);
5828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #else
5829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     HAL_I2C_AbortCpltCallback(hi2c);
5830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
5833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
5835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
5836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
5838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCallback(hi2c);
5840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #else
5841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     HAL_I2C_ErrorCallback(hi2c);
5842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
5845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
ARM GAS  /tmp/ccX4fpHz.s 			page 104


5847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  I2C Tx data register flush process.
5848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c I2C handle.
5849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
5850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
5851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_Flush_TXDR(I2C_HandleTypeDef *hi2c)
5852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
  27              		.loc 1 5852 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
5853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* If a pending TXIS flag is set */
5854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Write a dummy data in TXDR to clear it */
5855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
  33              		.loc 1 5855 0
  34 0000 0368     		ldr	r3, [r0]
  35 0002 9A69     		ldr	r2, [r3, #24]
  36 0004 12F0020F 		tst	r2, #2
  37 0008 01D0     		beq	.L2
5856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->TXDR = 0x00U;
  38              		.loc 1 5857 0
  39 000a 0022     		movs	r2, #0
  40 000c 9A62     		str	r2, [r3, #40]
  41              	.L2:
5858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Flush TX register if not empty */
5861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
  42              		.loc 1 5861 0
  43 000e 0368     		ldr	r3, [r0]
  44 0010 9A69     		ldr	r2, [r3, #24]
  45 0012 12F0010F 		tst	r2, #1
  46 0016 03D1     		bne	.L1
5862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
  47              		.loc 1 5863 0
  48 0018 9A69     		ldr	r2, [r3, #24]
  49 001a 42F00102 		orr	r2, r2, #1
  50 001e 9A61     		str	r2, [r3, #24]
  51              	.L1:
5864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
  52              		.loc 1 5865 0
  53 0020 7047     		bx	lr
  54              		.cfi_endproc
  55              	.LFE203:
  57              		.section	.text.I2C_TransferConfig,"ax",%progbits
  58              		.align	1
  59              		.syntax unified
  60              		.thumb
  61              		.thumb_func
  62              		.fpu fpv5-sp-d16
  64              	I2C_TransferConfig:
  65              	.LFB215:
5866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/ccX4fpHz.s 			page 105


5867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
5868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  DMA I2C master transmit process complete callback.
5869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hdma DMA handle
5870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
5871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
5872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_DMAMasterTransmitCplt(DMA_HandleTypeDef *hdma)
5873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
5874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
5875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Disable DMA Request */
5877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Instance->CR1 &= ~I2C_CR1_TXDMAEN;
5878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* If last transfer, enable STOP interrupt */
5880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->XferCount == 0U)
5881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable STOP interrupt */
5883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_CPLT_IT);
5884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* else prepare a new DMA transfer and enable TCReload interrupt */
5886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
5887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Update Buffer pointer */
5889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr += hi2c->XferSize;
5890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set the XferSize to transfer */
5892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
5893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
5895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
5897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
5899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable the DMA stream */
5902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (HAL_DMA_Start_IT(hi2c->hdmatx, (uint32_t)hi2c->pBuffPtr, (uint32_t)&hi2c->Instance->TXDR, h
5903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
5905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_ITError(hi2c, HAL_I2C_ERROR_DMA);
5906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
5908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable TC interrupts */
5910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_RELOAD_IT);
5911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
5914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
5916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  DMA I2C slave transmit process complete callback.
5917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hdma DMA handle
5918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
5919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
5920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_DMASlaveTransmitCplt(DMA_HandleTypeDef *hdma)
5921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
5922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
5923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpoptions = hi2c->XferOptions;
ARM GAS  /tmp/ccX4fpHz.s 			page 106


5924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((tmpoptions == I2C_NEXT_FRAME) || (tmpoptions == I2C_FIRST_FRAME))
5926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable DMA Request */
5928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR1 &= ~I2C_CR1_TXDMAEN;
5929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Last Byte is Transmitted */
5931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call I2C Slave Sequential complete process */
5932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_ITSlaveSeqCplt(hi2c);
5933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
5935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* No specific action, Master fully manage the generation of STOP condition */
5937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Mean that this generation can arrive at any time, at the end or during DMA process */
5938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* So STOP condition should be manage through Interrupt treatment */
5939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
5941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
5943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief DMA I2C master receive process complete callback.
5944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hdma DMA handle
5945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
5946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
5947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_DMAMasterReceiveCplt(DMA_HandleTypeDef *hdma)
5948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
5949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
5950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Disable DMA Request */
5952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Instance->CR1 &= ~I2C_CR1_RXDMAEN;
5953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* If last transfer, enable STOP interrupt */
5955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->XferCount == 0U)
5956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable STOP interrupt */
5958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_CPLT_IT);
5959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* else prepare a new DMA transfer and enable TCReload interrupt */
5961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
5962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Update Buffer pointer */
5964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr += hi2c->XferSize;
5965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set the XferSize to transfer */
5967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
5968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
5970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
5972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
5974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable the DMA stream */
5977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (HAL_DMA_Start_IT(hi2c->hdmarx, (uint32_t)&hi2c->Instance->RXDR, (uint32_t)hi2c->pBuffPtr, h
5978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
5980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_ITError(hi2c, HAL_I2C_ERROR_DMA);
ARM GAS  /tmp/ccX4fpHz.s 			page 107


5981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
5983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable TC interrupts */
5985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_RELOAD_IT);
5986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
5989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
5991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  DMA I2C slave receive process complete callback.
5992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hdma DMA handle
5993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
5994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
5995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_DMASlaveReceiveCplt(DMA_HandleTypeDef *hdma)
5996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
5997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
5998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpoptions = hi2c->XferOptions;
5999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((__HAL_DMA_GET_COUNTER(hi2c->hdmarx) == 0U) && \
6001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (tmpoptions != I2C_NO_OPTION_FRAME))
6002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable DMA Request */
6004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR1 &= ~I2C_CR1_RXDMAEN;
6005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call I2C Slave Sequential complete process */
6007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_ITSlaveSeqCplt(hi2c);
6008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
6010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* No specific action, Master fully manage the generation of STOP condition */
6012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Mean that this generation can arrive at any time, at the end or during DMA process */
6013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* So STOP condition should be manage through Interrupt treatment */
6014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
6016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
6018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  DMA I2C communication error callback.
6019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param hdma DMA handle
6020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
6021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
6022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_DMAError(DMA_HandleTypeDef *hdma)
6023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
6024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t treatdmaerror = 0U;
6025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
6026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->hdmatx != NULL)
6028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (__HAL_DMA_GET_COUNTER(hi2c->hdmatx) == 0U)
6030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       treatdmaerror = 1U;
6032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->hdmarx != NULL)
6036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (__HAL_DMA_GET_COUNTER(hi2c->hdmarx) == 0U)
ARM GAS  /tmp/ccX4fpHz.s 			page 108


6038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       treatdmaerror = 1U;
6040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check if a FIFO error is detected, if true normal use case, so no specific action to perform *
6044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (!((HAL_DMA_GetError(hdma) == HAL_DMA_ERROR_FE)) && (treatdmaerror != 0U))
6045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable Acknowledge */
6047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR2 |= I2C_CR2_NACK;
6048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
6050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_ITError(hi2c, HAL_I2C_ERROR_DMA);
6051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
6053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
6055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief DMA I2C communication abort callback
6056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *        (To be called at end of DMA Abort procedure).
6057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param hdma DMA handle.
6058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
6059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
6060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_DMAAbort(DMA_HandleTypeDef *hdma)
6061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
6062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
6063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Reset AbortCpltCallback */
6065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->hdmatx->XferAbortCallback = NULL;
6066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->hdmarx->XferAbortCallback = NULL;
6067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check if come from abort from user */
6069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_ABORT)
6070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
6072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
6074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
6075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->AbortCpltCallback(hi2c);
6076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #else
6077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     HAL_I2C_AbortCpltCallback(hi2c);
6078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
6079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
6081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
6083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
6084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCallback(hi2c);
6085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #else
6086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     HAL_I2C_ErrorCallback(hi2c);
6087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
6088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
6090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
6092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  This function handles I2C Communication Timeout.
6093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
6094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
ARM GAS  /tmp/ccX4fpHz.s 			page 109


6095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Flag Specifies the I2C flag to check.
6096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Status The new Flag status (SET or RESET).
6097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
6098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Tickstart Tick start value
6099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
6100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
6101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagSta
6102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
6103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
6104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Check for the Timeout */
6106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (Timeout != HAL_MAX_DELAY)
6107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
6109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
6110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
6111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->State = HAL_I2C_STATE_READY;
6112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode = HAL_I2C_MODE_NONE;
6113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
6115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
6116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
6117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
6118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return HAL_OK;
6121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
6122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
6124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  This function handles I2C Communication Timeout for specific usage of TXIS flag.
6125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
6126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
6127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
6128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Tickstart Tick start value
6129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
6130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
6131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnTXISFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, 
6132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
6133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
6134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Check if a NACK is detected */
6136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_IsAcknowledgeFailed(hi2c, Timeout, Tickstart) != HAL_OK)
6137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
6139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Check for the Timeout */
6142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (Timeout != HAL_MAX_DELAY)
6143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
6145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
6146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
6147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->State = HAL_I2C_STATE_READY;
6148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode = HAL_I2C_MODE_NONE;
6149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
6151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
ARM GAS  /tmp/ccX4fpHz.s 			page 110


6152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
6154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
6155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return HAL_OK;
6158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
6159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
6161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  This function handles I2C Communication Timeout for specific usage of STOP flag.
6162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
6163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
6164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
6165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Tickstart Tick start value
6166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
6167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
6168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnSTOPFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, 
6169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
6170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
6171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Check if a NACK is detected */
6173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_IsAcknowledgeFailed(hi2c, Timeout, Tickstart) != HAL_OK)
6174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
6176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Check for the Timeout */
6179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
6180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
6182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->State = HAL_I2C_STATE_READY;
6183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
6184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
6186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
6187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
6189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return HAL_OK;
6192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
6193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
6195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  This function handles I2C Communication Timeout for specific usage of RXNE flag.
6196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
6197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
6198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
6199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Tickstart Tick start value
6200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
6201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
6202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnRXNEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, 
6203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
6204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
6205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Check if a NACK is detected */
6207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_IsAcknowledgeFailed(hi2c, Timeout, Tickstart) != HAL_OK)
6208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
ARM GAS  /tmp/ccX4fpHz.s 			page 111


6209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
6210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Check if a STOPF is detected */
6213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
6214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Check if an RXNE is pending */
6216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Store Last receive data if any */
6217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET) && (hi2c->XferSize > 0U))
6218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
6219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Return HAL_OK */
6220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* The Reading of data from RXDR will be done in caller function */
6221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_OK;
6222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
6223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
6224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
6225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Clear STOP Flag */
6226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
6227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Clear Configuration Register 2 */
6229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_RESET_CR2(hi2c);
6230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
6232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->State = HAL_I2C_STATE_READY;
6233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode = HAL_I2C_MODE_NONE;
6234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
6236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
6237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
6239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
6240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Check for the Timeout */
6243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
6244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
6246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->State = HAL_I2C_STATE_READY;
6247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
6249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
6250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
6252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return HAL_OK;
6255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
6256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
6258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  This function handles Acknowledge failed detection during an I2C Communication.
6259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
6260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
6261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
6262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Tickstart Tick start value
6263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
6264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
6265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_
ARM GAS  /tmp/ccX4fpHz.s 			page 112


6266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
6267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
6268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Wait until STOP Flag is reset */
6270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* AutoEnd should be initiate after AF */
6271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
6272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Check for the Timeout */
6274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (Timeout != HAL_MAX_DELAY)
6275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
6276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
6277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
6278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
6279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->State = HAL_I2C_STATE_READY;
6280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->Mode = HAL_I2C_MODE_NONE;
6281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Process Unlocked */
6283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           __HAL_UNLOCK(hi2c);
6284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           return HAL_ERROR;
6286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
6287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
6288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear NACKF Flag */
6291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
6292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear STOP Flag */
6294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
6295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Flush TX register */
6297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Flush_TXDR(hi2c);
6298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear Configuration Register 2 */
6300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_RESET_CR2(hi2c);
6301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
6303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
6304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode = HAL_I2C_MODE_NONE;
6305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
6307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
6308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_ERROR;
6310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return HAL_OK;
6312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
6313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
6315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Handles I2Cx communication when starting transfer or during transfer (TC or TCR flag ar
6316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c I2C handle.
6317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Specifies the slave address to be programmed.
6318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Specifies the number of bytes to be programmed.
6319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *   This parameter must be a value between 0 and 255.
6320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Mode New state of the I2C START condition generation.
6321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *   This parameter can be one of the following values:
6322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *     @arg @ref I2C_RELOAD_MODE Enable Reload mode .
ARM GAS  /tmp/ccX4fpHz.s 			page 113


6323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *     @arg @ref I2C_AUTOEND_MODE Enable Automatic end mode.
6324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *     @arg @ref I2C_SOFTEND_MODE Enable Software end mode.
6325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Request New state of the I2C START condition generation.
6326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *   This parameter can be one of the following values:
6327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *     @arg @ref I2C_NO_STARTSTOP Don't Generate stop and start condition.
6328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *     @arg @ref I2C_GENERATE_STOP Generate stop condition (Size should be set to 0).
6329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *     @arg @ref I2C_GENERATE_START_READ Generate Restart for read request.
6330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *     @arg @ref I2C_GENERATE_START_WRITE Generate Restart for write request.
6331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
6332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
6333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_TransferConfig(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t Size, uint32_t
6334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
  66              		.loc 1 6334 0
  67              		.cfi_startproc
  68              		@ args = 4, pretend = 0, frame = 0
  69              		@ frame_needed = 0, uses_anonymous_args = 0
  70              		@ link register save eliminated.
  71              	.LVL1:
  72 0000 70B4     		push	{r4, r5, r6}
  73              	.LCFI0:
  74              		.cfi_def_cfa_offset 12
  75              		.cfi_offset 4, -12
  76              		.cfi_offset 5, -8
  77              		.cfi_offset 6, -4
  78 0002 039E     		ldr	r6, [sp, #12]
6335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
6336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
6337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_TRANSFER_MODE(Mode));
6338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_TRANSFER_REQUEST(Request));
6339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* update CR2 register */
6341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   MODIFY_REG(hi2c->Instance->CR2, ((I2C_CR2_SADD | I2C_CR2_NBYTES | I2C_CR2_RELOAD | I2C_CR2_AUTOEN
  79              		.loc 1 6341 0
  80 0004 0568     		ldr	r5, [r0]
  81 0006 6868     		ldr	r0, [r5, #4]
  82              	.LVL2:
  83 0008 740D     		lsrs	r4, r6, #21
  84 000a 04F48064 		and	r4, r4, #1024
  85 000e 44F07F74 		orr	r4, r4, #66846720
  86 0012 44F45834 		orr	r4, r4, #221184
  87 0016 44F47F74 		orr	r4, r4, #1020
  88 001a 44F00304 		orr	r4, r4, #3
  89 001e 20EA0400 		bic	r0, r0, r4
  90 0022 C1F30901 		ubfx	r1, r1, #0, #10
  91              	.LVL3:
  92 0026 41EA0241 		orr	r1, r1, r2, lsl #16
  93 002a 1943     		orrs	r1, r1, r3
  94 002c 3143     		orrs	r1, r1, r6
  95 002e 0143     		orrs	r1, r1, r0
  96 0030 6960     		str	r1, [r5, #4]
6342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****              (uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | (((uint32_t)Size << I2C_CR2_NBYTES_
6343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
  97              		.loc 1 6343 0
  98 0032 70BC     		pop	{r4, r5, r6}
  99              	.LCFI1:
 100              		.cfi_restore 6
 101              		.cfi_restore 5
ARM GAS  /tmp/ccX4fpHz.s 			page 114


 102              		.cfi_restore 4
 103              		.cfi_def_cfa_offset 0
 104              	.LVL4:
 105 0034 7047     		bx	lr
 106              		.cfi_endproc
 107              	.LFE215:
 109              		.section	.text.I2C_Enable_IRQ,"ax",%progbits
 110              		.align	1
 111              		.syntax unified
 112              		.thumb
 113              		.thumb_func
 114              		.fpu fpv5-sp-d16
 116              	I2C_Enable_IRQ:
 117              	.LFB216:
6344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
6346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Manage the enabling of Interrupts.
6347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
6348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
6349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  InterruptRequest Value of @ref I2C_Interrupt_configuration_definition.
6350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
6351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
6352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_Enable_IRQ(I2C_HandleTypeDef *hi2c, uint16_t InterruptRequest)
6353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
 118              		.loc 1 6353 0
 119              		.cfi_startproc
 120              		@ args = 0, pretend = 0, frame = 0
 121              		@ frame_needed = 0, uses_anonymous_args = 0
 122              		@ link register save eliminated.
 123              	.LVL5:
6354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpisr = 0U;
6355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((hi2c->XferISR == I2C_Master_ISR_DMA) || \
 124              		.loc 1 6356 0
 125 0000 436B     		ldr	r3, [r0, #52]
 126 0002 1D4A     		ldr	r2, .L21
 127 0004 9342     		cmp	r3, r2
 128 0006 17D0     		beq	.L7
 129              		.loc 1 6356 0 is_stmt 0 discriminator 1
 130 0008 1C4A     		ldr	r2, .L21+4
 131 000a 9342     		cmp	r3, r2
 132 000c 14D0     		beq	.L7
6357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (hi2c->XferISR == I2C_Slave_ISR_DMA))
6358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((InterruptRequest & I2C_XFER_LISTEN_IT) == I2C_XFER_LISTEN_IT)
6360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable ERR, STOP, NACK and ADDR interrupts */
6362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       tmpisr |= I2C_IT_ADDRI | I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_ERRI;
6363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((InterruptRequest & I2C_XFER_ERROR_IT) == I2C_XFER_ERROR_IT)
6366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable ERR and NACK interrupts */
6368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       tmpisr |= I2C_IT_ERRI | I2C_IT_NACKI;
6369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((InterruptRequest & I2C_XFER_CPLT_IT) == I2C_XFER_CPLT_IT)
ARM GAS  /tmp/ccX4fpHz.s 			page 115


6372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable STOP interrupts */
6374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       tmpisr |= I2C_IT_STOPI;
6375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((InterruptRequest & I2C_XFER_RELOAD_IT) == I2C_XFER_RELOAD_IT)
6378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable TC interrupts */
6380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       tmpisr |= I2C_IT_TCI;
6381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
6384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((InterruptRequest & I2C_XFER_LISTEN_IT) == I2C_XFER_LISTEN_IT)
 133              		.loc 1 6385 0 is_stmt 1
 134 000e 11F0040F 		tst	r1, #4
 135 0012 2FD1     		bne	.L17
6354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpisr = 0U;
 136              		.loc 1 6354 0
 137 0014 0023     		movs	r3, #0
 138              	.L13:
 139              	.LVL6:
6386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable ERR, STOP, NACK, and ADDR interrupts */
6388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       tmpisr |= I2C_IT_ADDRI | I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_ERRI;
6389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((InterruptRequest & I2C_XFER_TX_IT) == I2C_XFER_TX_IT)
 140              		.loc 1 6391 0
 141 0016 11F0010F 		tst	r1, #1
 142 001a 01D0     		beq	.L14
6392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable ERR, TC, STOP, NACK and RXI interrupts */
6394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       tmpisr |= I2C_IT_ERRI | I2C_IT_TCI | I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_TXI;
 143              		.loc 1 6394 0
 144 001c 43F0F203 		orr	r3, r3, #242
 145              	.LVL7:
 146              	.L14:
6395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((InterruptRequest & I2C_XFER_RX_IT) == I2C_XFER_RX_IT)
 147              		.loc 1 6397 0
 148 0020 11F0020F 		tst	r1, #2
 149 0024 01D0     		beq	.L15
6398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable ERR, TC, STOP, NACK and TXI interrupts */
6400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       tmpisr |= I2C_IT_ERRI | I2C_IT_TCI | I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_RXI;
 150              		.loc 1 6400 0
 151 0026 43F0F403 		orr	r3, r3, #244
 152              	.LVL8:
 153              	.L15:
6401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((InterruptRequest & I2C_XFER_CPLT_IT) == I2C_XFER_CPLT_IT)
 154              		.loc 1 6403 0
 155 002a 01F01201 		and	r1, r1, #18
 156              	.LVL9:
ARM GAS  /tmp/ccX4fpHz.s 			page 116


 157 002e 1229     		cmp	r1, #18
 158 0030 10D1     		bne	.L12
6404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable STOP interrupts */
6406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       tmpisr |= I2C_IT_STOPI;
 159              		.loc 1 6406 0
 160 0032 43F02003 		orr	r3, r3, #32
 161              	.LVL10:
 162 0036 0DE0     		b	.L12
 163              	.LVL11:
 164              	.L7:
6359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 165              		.loc 1 6359 0
 166 0038 11F0040F 		tst	r1, #4
 167 003c 0FD1     		bne	.L16
6354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 168              		.loc 1 6354 0
 169 003e 0023     		movs	r3, #0
 170              	.L9:
 171              	.LVL12:
6365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 172              		.loc 1 6365 0
 173 0040 01F01102 		and	r2, r1, #17
 174 0044 112A     		cmp	r2, #17
 175 0046 0CD0     		beq	.L18
 176              	.L10:
 177 0048 01F01201 		and	r1, r1, #18
 178              	.LVL13:
6371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 179              		.loc 1 6371 0
 180 004c 1229     		cmp	r1, #18
 181 004e 0BD0     		beq	.L19
 182              	.L11:
6377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 183              		.loc 1 6377 0
 184 0050 1229     		cmp	r1, #18
 185 0052 0CD0     		beq	.L20
 186              	.L12:
6407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Enable interrupts only at the end */
6411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* to avoid the risk of I2C interrupt handle execution before */
6412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* all interrupts requested done */
6413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_I2C_ENABLE_IT(hi2c, tmpisr);
 187              		.loc 1 6413 0
 188 0054 0168     		ldr	r1, [r0]
 189 0056 0A68     		ldr	r2, [r1]
 190 0058 1343     		orrs	r3, r3, r2
 191              	.LVL14:
 192 005a 0B60     		str	r3, [r1]
6414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 193              		.loc 1 6414 0
 194 005c 7047     		bx	lr
 195              	.LVL15:
 196              	.L16:
6362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
ARM GAS  /tmp/ccX4fpHz.s 			page 117


 197              		.loc 1 6362 0
 198 005e B823     		movs	r3, #184
 199 0060 EEE7     		b	.L9
 200              	.LVL16:
 201              	.L18:
6368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 202              		.loc 1 6368 0
 203 0062 43F09003 		orr	r3, r3, #144
 204              	.LVL17:
 205 0066 EFE7     		b	.L10
 206              	.LVL18:
 207              	.L19:
6374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 208              		.loc 1 6374 0
 209 0068 43F02003 		orr	r3, r3, #32
 210              	.LVL19:
 211 006c F0E7     		b	.L11
 212              	.L20:
6380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 213              		.loc 1 6380 0
 214 006e 43F04003 		orr	r3, r3, #64
 215              	.LVL20:
 216 0072 EFE7     		b	.L12
 217              	.LVL21:
 218              	.L17:
6388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 219              		.loc 1 6388 0
 220 0074 B823     		movs	r3, #184
 221 0076 CEE7     		b	.L13
 222              	.L22:
 223              		.align	2
 224              	.L21:
 225 0078 00000000 		.word	I2C_Master_ISR_DMA
 226 007c 00000000 		.word	I2C_Slave_ISR_DMA
 227              		.cfi_endproc
 228              	.LFE216:
 230              		.section	.text.I2C_Disable_IRQ,"ax",%progbits
 231              		.align	1
 232              		.syntax unified
 233              		.thumb
 234              		.thumb_func
 235              		.fpu fpv5-sp-d16
 237              	I2C_Disable_IRQ:
 238              	.LFB217:
6415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
6417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Manage the disabling of Interrupts.
6418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
6419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
6420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  InterruptRequest Value of @ref I2C_Interrupt_configuration_definition.
6421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
6422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
6423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_Disable_IRQ(I2C_HandleTypeDef *hi2c, uint16_t InterruptRequest)
6424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
 239              		.loc 1 6424 0
 240              		.cfi_startproc
 241              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccX4fpHz.s 			page 118


 242              		@ frame_needed = 0, uses_anonymous_args = 0
 243              		@ link register save eliminated.
 244              	.LVL22:
6425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpisr = 0U;
6426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((InterruptRequest & I2C_XFER_TX_IT) == I2C_XFER_TX_IT)
 245              		.loc 1 6427 0
 246 0000 11F0010F 		tst	r1, #1
 247 0004 09D0     		beq	.L30
 248              	.LVL23:
6428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable TC and TXI interrupts */
6430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tmpisr |= I2C_IT_TCI | I2C_IT_TXI;
6431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) != (uint32_t)HAL_I2C_STATE_LISTEN)
 249              		.loc 1 6432 0
 250 0006 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 251 000a 03F02803 		and	r3, r3, #40
 252 000e 282B     		cmp	r3, #40
 253 0010 01D0     		beq	.L45
6433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Disable NACK and STOP interrupts */
6435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       tmpisr |= I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_ERRI;
 254              		.loc 1 6435 0
 255 0012 F223     		movs	r3, #242
 256 0014 02E0     		b	.L24
 257              	.L45:
6430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 258              		.loc 1 6430 0
 259 0016 4223     		movs	r3, #66
 260 0018 00E0     		b	.L24
 261              	.LVL24:
 262              	.L30:
6425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 263              		.loc 1 6425 0
 264 001a 0023     		movs	r3, #0
 265              	.LVL25:
 266              	.L24:
6436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((InterruptRequest & I2C_XFER_RX_IT) == I2C_XFER_RX_IT)
 267              		.loc 1 6439 0
 268 001c 11F0020F 		tst	r1, #2
 269 0020 2CD0     		beq	.L34
6424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpisr = 0U;
 270              		.loc 1 6424 0
 271 0022 10B4     		push	{r4}
 272              	.LCFI2:
 273              		.cfi_def_cfa_offset 4
 274              		.cfi_offset 4, -4
6440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable TC and RXI interrupts */
6442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tmpisr |= I2C_IT_TCI | I2C_IT_RXI;
 275              		.loc 1 6442 0
 276 0024 43F04404 		orr	r4, r3, #68
 277              	.LVL26:
ARM GAS  /tmp/ccX4fpHz.s 			page 119


6443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) != (uint32_t)HAL_I2C_STATE_LISTEN)
 278              		.loc 1 6444 0
 279 0028 90F84120 		ldrb	r2, [r0, #65]	@ zero_extendqisi2
 280 002c 02F02802 		and	r2, r2, #40
 281 0030 282A     		cmp	r2, #40
 282 0032 18D0     		beq	.L32
6445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Disable NACK and STOP interrupts */
6447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       tmpisr |= I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_ERRI;
 283              		.loc 1 6447 0
 284 0034 43F0F403 		orr	r3, r3, #244
 285              	.LVL27:
 286              	.L25:
6448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((InterruptRequest & I2C_XFER_LISTEN_IT) == I2C_XFER_LISTEN_IT)
 287              		.loc 1 6451 0
 288 0038 11F0040F 		tst	r1, #4
 289 003c 01D0     		beq	.L26
6452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable ADDR, NACK and STOP interrupts */
6454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tmpisr |= I2C_IT_ADDRI | I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_ERRI;
 290              		.loc 1 6454 0
 291 003e 43F0B803 		orr	r3, r3, #184
 292              	.LVL28:
 293              	.L26:
6455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((InterruptRequest & I2C_XFER_ERROR_IT) == I2C_XFER_ERROR_IT)
 294              		.loc 1 6457 0
 295 0042 01F01102 		and	r2, r1, #17
 296 0046 112A     		cmp	r2, #17
 297 0048 0FD0     		beq	.L46
 298              	.L27:
 299 004a 01F01201 		and	r1, r1, #18
 300              	.LVL29:
6458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable ERR and NACK interrupts */
6460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tmpisr |= I2C_IT_ERRI | I2C_IT_NACKI;
6461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((InterruptRequest & I2C_XFER_CPLT_IT) == I2C_XFER_CPLT_IT)
 301              		.loc 1 6463 0
 302 004e 1229     		cmp	r1, #18
 303 0050 0ED0     		beq	.L47
 304              	.L28:
6464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable STOP interrupts */
6466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tmpisr |= I2C_IT_STOPI;
6467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((InterruptRequest & I2C_XFER_RELOAD_IT) == I2C_XFER_RELOAD_IT)
 305              		.loc 1 6469 0
 306 0052 1229     		cmp	r1, #18
 307 0054 0FD0     		beq	.L48
ARM GAS  /tmp/ccX4fpHz.s 			page 120


 308              	.L29:
6470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable TC interrupts */
6472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tmpisr |= I2C_IT_TCI;
6473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Disable interrupts only at the end */
6476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* to avoid a breaking situation like at "t" time */
6477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* all disable interrupts request are not done */
6478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_I2C_DISABLE_IT(hi2c, tmpisr);
 309              		.loc 1 6478 0
 310 0056 0168     		ldr	r1, [r0]
 311 0058 0A68     		ldr	r2, [r1]
 312 005a 22EA0303 		bic	r3, r2, r3
 313              	.LVL30:
 314 005e 0B60     		str	r3, [r1]
6479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 315              		.loc 1 6479 0
 316 0060 5DF8044B 		ldr	r4, [sp], #4
 317              	.LCFI3:
 318              		.cfi_remember_state
 319              		.cfi_restore 4
 320              		.cfi_def_cfa_offset 0
 321 0064 7047     		bx	lr
 322              	.LVL31:
 323              	.L32:
 324              	.LCFI4:
 325              		.cfi_restore_state
6442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 326              		.loc 1 6442 0
 327 0066 2346     		mov	r3, r4
 328 0068 E6E7     		b	.L25
 329              	.LVL32:
 330              	.L46:
6460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 331              		.loc 1 6460 0
 332 006a 43F09003 		orr	r3, r3, #144
 333              	.LVL33:
 334 006e ECE7     		b	.L27
 335              	.LVL34:
 336              	.L47:
6466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 337              		.loc 1 6466 0
 338 0070 43F02003 		orr	r3, r3, #32
 339              	.LVL35:
 340 0074 EDE7     		b	.L28
 341              	.L48:
6472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 342              		.loc 1 6472 0
 343 0076 43F04003 		orr	r3, r3, #64
 344              	.LVL36:
 345 007a ECE7     		b	.L29
 346              	.LVL37:
 347              	.L34:
 348              	.LCFI5:
 349              		.cfi_def_cfa_offset 0
 350              		.cfi_restore 4
ARM GAS  /tmp/ccX4fpHz.s 			page 121


6451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 351              		.loc 1 6451 0
 352 007c 11F0040F 		tst	r1, #4
 353 0080 01D0     		beq	.L36
6454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 354              		.loc 1 6454 0
 355 0082 43F0B803 		orr	r3, r3, #184
 356              	.LVL38:
 357              	.L36:
6457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 358              		.loc 1 6457 0
 359 0086 01F01102 		and	r2, r1, #17
 360 008a 112A     		cmp	r2, #17
 361 008c 0BD0     		beq	.L49
 362              	.L38:
 363 008e 01F01201 		and	r1, r1, #18
 364              	.LVL39:
6463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 365              		.loc 1 6463 0
 366 0092 1229     		cmp	r1, #18
 367 0094 0AD0     		beq	.L50
 368              	.L40:
6469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 369              		.loc 1 6469 0
 370 0096 1229     		cmp	r1, #18
 371 0098 0BD0     		beq	.L51
 372              	.L42:
6478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 373              		.loc 1 6478 0
 374 009a 0168     		ldr	r1, [r0]
 375 009c 0A68     		ldr	r2, [r1]
 376 009e 22EA0303 		bic	r3, r2, r3
 377              	.LVL40:
 378 00a2 0B60     		str	r3, [r1]
 379 00a4 7047     		bx	lr
 380              	.LVL41:
 381              	.L49:
6460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 382              		.loc 1 6460 0
 383 00a6 43F09003 		orr	r3, r3, #144
 384              	.LVL42:
 385 00aa F0E7     		b	.L38
 386              	.LVL43:
 387              	.L50:
6466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 388              		.loc 1 6466 0
 389 00ac 43F02003 		orr	r3, r3, #32
 390              	.LVL44:
 391 00b0 F1E7     		b	.L40
 392              	.L51:
6472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 393              		.loc 1 6472 0
 394 00b2 43F04003 		orr	r3, r3, #64
 395              	.LVL45:
 396 00b6 F0E7     		b	.L42
 397              		.cfi_endproc
 398              	.LFE217:
ARM GAS  /tmp/ccX4fpHz.s 			page 122


 400              		.section	.text.I2C_ConvertOtherXferOptions,"ax",%progbits
 401              		.align	1
 402              		.syntax unified
 403              		.thumb
 404              		.thumb_func
 405              		.fpu fpv5-sp-d16
 407              	I2C_ConvertOtherXferOptions:
 408              	.LFB218:
6480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
6482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Convert I2Cx OTHER_xxx XferOptions to functionnal XferOptions.
6483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c I2C handle.
6484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
6485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
6486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_ConvertOtherXferOptions(I2C_HandleTypeDef *hi2c)
6487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
 409              		.loc 1 6487 0
 410              		.cfi_startproc
 411              		@ args = 0, pretend = 0, frame = 0
 412              		@ frame_needed = 0, uses_anonymous_args = 0
 413              		@ link register save eliminated.
 414              	.LVL46:
6488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* if user set XferOptions to I2C_OTHER_FRAME            */
6489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* it request implicitly to generate a restart condition */
6490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* set XferOptions to I2C_FIRST_FRAME                    */
6491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->XferOptions == I2C_OTHER_FRAME)
 415              		.loc 1 6491 0
 416 0000 C36A     		ldr	r3, [r0, #44]
 417 0002 AA2B     		cmp	r3, #170
 418 0004 04D0     		beq	.L55
6492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_FIRST_FRAME;
6494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* else if user set XferOptions to I2C_OTHER_AND_LAST_FRAME */
6496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* it request implicitly to generate a restart condition    */
6497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* then generate a stop condition at the end of transfer    */
6498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* set XferOptions to I2C_FIRST_AND_LAST_FRAME              */
6499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if (hi2c->XferOptions == I2C_OTHER_AND_LAST_FRAME)
 419              		.loc 1 6499 0
 420 0006 C36A     		ldr	r3, [r0, #44]
 421 0008 B3F52A4F 		cmp	r3, #43520
 422 000c 03D0     		beq	.L56
 423              	.L52:
6500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_FIRST_AND_LAST_FRAME;
6502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
6504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Nothing to do */
6506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 424              		.loc 1 6507 0
 425 000e 7047     		bx	lr
 426              	.L55:
6493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 427              		.loc 1 6493 0
 428 0010 0023     		movs	r3, #0
ARM GAS  /tmp/ccX4fpHz.s 			page 123


 429 0012 C362     		str	r3, [r0, #44]
 430 0014 7047     		bx	lr
 431              	.L56:
6501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 432              		.loc 1 6501 0
 433 0016 4FF00073 		mov	r3, #33554432
 434 001a C362     		str	r3, [r0, #44]
 435              		.loc 1 6507 0
 436 001c F7E7     		b	.L52
 437              		.cfi_endproc
 438              	.LFE218:
 440              		.section	.text.I2C_IsAcknowledgeFailed,"ax",%progbits
 441              		.align	1
 442              		.syntax unified
 443              		.thumb
 444              		.thumb_func
 445              		.fpu fpv5-sp-d16
 447              	I2C_IsAcknowledgeFailed:
 448              	.LFB214:
6266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 449              		.loc 1 6266 0
 450              		.cfi_startproc
 451              		@ args = 0, pretend = 0, frame = 0
 452              		@ frame_needed = 0, uses_anonymous_args = 0
 453              	.LVL47:
 454 0000 70B5     		push	{r4, r5, r6, lr}
 455              	.LCFI6:
 456              		.cfi_def_cfa_offset 16
 457              		.cfi_offset 4, -16
 458              		.cfi_offset 5, -12
 459              		.cfi_offset 6, -8
 460              		.cfi_offset 14, -4
 461 0002 0446     		mov	r4, r0
 462 0004 0D46     		mov	r5, r1
 463 0006 1646     		mov	r6, r2
6267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 464              		.loc 1 6267 0
 465 0008 0368     		ldr	r3, [r0]
 466 000a 9B69     		ldr	r3, [r3, #24]
 467 000c 13F0100F 		tst	r3, #16
 468 0010 1CD0     		beq	.L64
 469              	.LVL48:
 470              	.L60:
6271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 471              		.loc 1 6271 0
 472 0012 2368     		ldr	r3, [r4]
 473 0014 9A69     		ldr	r2, [r3, #24]
 474 0016 12F0200F 		tst	r2, #32
 475 001a 19D1     		bne	.L65
6274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 476              		.loc 1 6274 0
 477 001c B5F1FF3F 		cmp	r5, #-1
 478 0020 F7D0     		beq	.L60
6276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 479              		.loc 1 6276 0
 480 0022 FFF7FEFF 		bl	HAL_GetTick
 481              	.LVL49:
ARM GAS  /tmp/ccX4fpHz.s 			page 124


 482 0026 801B     		subs	r0, r0, r6
 483 0028 A842     		cmp	r0, r5
 484 002a 01D8     		bhi	.L61
6276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 485              		.loc 1 6276 0 is_stmt 0 discriminator 1
 486 002c 002D     		cmp	r5, #0
 487 002e F0D1     		bne	.L60
 488              	.L61:
6278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->State = HAL_I2C_STATE_READY;
 489              		.loc 1 6278 0 is_stmt 1
 490 0030 636C     		ldr	r3, [r4, #68]
 491 0032 43F02003 		orr	r3, r3, #32
 492 0036 6364     		str	r3, [r4, #68]
6279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->Mode = HAL_I2C_MODE_NONE;
 493              		.loc 1 6279 0
 494 0038 2023     		movs	r3, #32
 495 003a 84F84130 		strb	r3, [r4, #65]
6280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 496              		.loc 1 6280 0
 497 003e 0023     		movs	r3, #0
 498 0040 84F84230 		strb	r3, [r4, #66]
6283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 499              		.loc 1 6283 0
 500 0044 84F84030 		strb	r3, [r4, #64]
6285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 501              		.loc 1 6285 0
 502 0048 0120     		movs	r0, #1
 503 004a 20E0     		b	.L59
 504              	.LVL50:
 505              	.L64:
6311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 506              		.loc 1 6311 0
 507 004c 0020     		movs	r0, #0
 508              	.LVL51:
 509 004e 1EE0     		b	.L59
 510              	.LVL52:
 511              	.L65:
6291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 512              		.loc 1 6291 0
 513 0050 1022     		movs	r2, #16
 514 0052 DA61     		str	r2, [r3, #28]
6294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 515              		.loc 1 6294 0
 516 0054 2368     		ldr	r3, [r4]
 517 0056 2025     		movs	r5, #32
 518              	.LVL53:
 519 0058 DD61     		str	r5, [r3, #28]
6297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 520              		.loc 1 6297 0
 521 005a 2046     		mov	r0, r4
 522 005c FFF7FEFF 		bl	I2C_Flush_TXDR
 523              	.LVL54:
6300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 524              		.loc 1 6300 0
 525 0060 2268     		ldr	r2, [r4]
 526 0062 5368     		ldr	r3, [r2, #4]
 527 0064 23F0FF73 		bic	r3, r3, #33423360
ARM GAS  /tmp/ccX4fpHz.s 			page 125


 528 0068 23F48B33 		bic	r3, r3, #71168
 529 006c 23F4FF73 		bic	r3, r3, #510
 530 0070 23F00103 		bic	r3, r3, #1
 531 0074 5360     		str	r3, [r2, #4]
6302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
 532              		.loc 1 6302 0
 533 0076 636C     		ldr	r3, [r4, #68]
 534 0078 43F00403 		orr	r3, r3, #4
 535 007c 6364     		str	r3, [r4, #68]
6303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode = HAL_I2C_MODE_NONE;
 536              		.loc 1 6303 0
 537 007e 84F84150 		strb	r5, [r4, #65]
6304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 538              		.loc 1 6304 0
 539 0082 0023     		movs	r3, #0
 540 0084 84F84230 		strb	r3, [r4, #66]
6307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 541              		.loc 1 6307 0
 542 0088 84F84030 		strb	r3, [r4, #64]
6309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 543              		.loc 1 6309 0
 544 008c 0120     		movs	r0, #1
 545              	.L59:
6312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 546              		.loc 1 6312 0
 547 008e 70BD     		pop	{r4, r5, r6, pc}
 548              		.cfi_endproc
 549              	.LFE214:
 551              		.section	.text.I2C_WaitOnTXISFlagUntilTimeout,"ax",%progbits
 552              		.align	1
 553              		.syntax unified
 554              		.thumb
 555              		.thumb_func
 556              		.fpu fpv5-sp-d16
 558              	I2C_WaitOnTXISFlagUntilTimeout:
 559              	.LFB211:
6132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
 560              		.loc 1 6132 0
 561              		.cfi_startproc
 562              		@ args = 0, pretend = 0, frame = 0
 563              		@ frame_needed = 0, uses_anonymous_args = 0
 564              	.LVL55:
 565 0000 70B5     		push	{r4, r5, r6, lr}
 566              	.LCFI7:
 567              		.cfi_def_cfa_offset 16
 568              		.cfi_offset 4, -16
 569              		.cfi_offset 5, -12
 570              		.cfi_offset 6, -8
 571              		.cfi_offset 14, -4
 572 0002 0446     		mov	r4, r0
 573 0004 0D46     		mov	r5, r1
 574 0006 1646     		mov	r6, r2
 575              	.LVL56:
 576              	.L69:
6133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 577              		.loc 1 6133 0
 578 0008 2368     		ldr	r3, [r4]
ARM GAS  /tmp/ccX4fpHz.s 			page 126


 579 000a 9B69     		ldr	r3, [r3, #24]
 580 000c 13F0020F 		tst	r3, #2
 581 0010 1DD1     		bne	.L74
6136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 582              		.loc 1 6136 0
 583 0012 3246     		mov	r2, r6
 584 0014 2946     		mov	r1, r5
 585 0016 2046     		mov	r0, r4
 586 0018 FFF7FEFF 		bl	I2C_IsAcknowledgeFailed
 587              	.LVL57:
 588 001c C8B9     		cbnz	r0, .L72
6142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 589              		.loc 1 6142 0
 590 001e B5F1FF3F 		cmp	r5, #-1
 591 0022 F1D0     		beq	.L69
6144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 592              		.loc 1 6144 0
 593 0024 FFF7FEFF 		bl	HAL_GetTick
 594              	.LVL58:
 595 0028 801B     		subs	r0, r0, r6
 596 002a A842     		cmp	r0, r5
 597 002c 01D8     		bhi	.L70
6144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 598              		.loc 1 6144 0 is_stmt 0 discriminator 1
 599 002e 002D     		cmp	r5, #0
 600 0030 EAD1     		bne	.L69
 601              	.L70:
6146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->State = HAL_I2C_STATE_READY;
 602              		.loc 1 6146 0 is_stmt 1
 603 0032 636C     		ldr	r3, [r4, #68]
 604 0034 43F02003 		orr	r3, r3, #32
 605 0038 6364     		str	r3, [r4, #68]
6147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode = HAL_I2C_MODE_NONE;
 606              		.loc 1 6147 0
 607 003a 2023     		movs	r3, #32
 608 003c 84F84130 		strb	r3, [r4, #65]
6148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 609              		.loc 1 6148 0
 610 0040 0023     		movs	r3, #0
 611 0042 84F84230 		strb	r3, [r4, #66]
6151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 612              		.loc 1 6151 0
 613 0046 84F84030 		strb	r3, [r4, #64]
6153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 614              		.loc 1 6153 0
 615 004a 0120     		movs	r0, #1
 616 004c 00E0     		b	.L68
 617              	.L74:
6157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 618              		.loc 1 6157 0
 619 004e 0020     		movs	r0, #0
 620              	.L68:
6158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 621              		.loc 1 6158 0
 622 0050 70BD     		pop	{r4, r5, r6, pc}
 623              	.LVL59:
 624              	.L72:
ARM GAS  /tmp/ccX4fpHz.s 			page 127


6138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 625              		.loc 1 6138 0
 626 0052 0120     		movs	r0, #1
 627 0054 FCE7     		b	.L68
 628              		.cfi_endproc
 629              	.LFE211:
 631              		.section	.text.I2C_WaitOnFlagUntilTimeout,"ax",%progbits
 632              		.align	1
 633              		.syntax unified
 634              		.thumb
 635              		.thumb_func
 636              		.fpu fpv5-sp-d16
 638              	I2C_WaitOnFlagUntilTimeout:
 639              	.LFB210:
6102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 640              		.loc 1 6102 0
 641              		.cfi_startproc
 642              		@ args = 4, pretend = 0, frame = 0
 643              		@ frame_needed = 0, uses_anonymous_args = 0
 644              	.LVL60:
 645 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 646              	.LCFI8:
 647              		.cfi_def_cfa_offset 24
 648              		.cfi_offset 3, -24
 649              		.cfi_offset 4, -20
 650              		.cfi_offset 5, -16
 651              		.cfi_offset 6, -12
 652              		.cfi_offset 7, -8
 653              		.cfi_offset 14, -4
 654 0002 0546     		mov	r5, r0
 655 0004 0F46     		mov	r7, r1
 656 0006 1646     		mov	r6, r2
 657 0008 1C46     		mov	r4, r3
 658              	.LVL61:
 659              	.L77:
6103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 660              		.loc 1 6103 0
 661 000a 2B68     		ldr	r3, [r5]
 662 000c 9B69     		ldr	r3, [r3, #24]
 663 000e 37EA0303 		bics	r3, r7, r3
 664 0012 0CBF     		ite	eq
 665 0014 0123     		moveq	r3, #1
 666 0016 0023     		movne	r3, #0
 667 0018 B342     		cmp	r3, r6
 668 001a 18D1     		bne	.L82
6106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 669              		.loc 1 6106 0
 670 001c B4F1FF3F 		cmp	r4, #-1
 671 0020 F3D0     		beq	.L77
6108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 672              		.loc 1 6108 0
 673 0022 FFF7FEFF 		bl	HAL_GetTick
 674              	.LVL62:
 675 0026 069B     		ldr	r3, [sp, #24]
 676 0028 C01A     		subs	r0, r0, r3
 677 002a A042     		cmp	r0, r4
 678 002c 01D8     		bhi	.L78
ARM GAS  /tmp/ccX4fpHz.s 			page 128


6108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 679              		.loc 1 6108 0 is_stmt 0 discriminator 1
 680 002e 002C     		cmp	r4, #0
 681 0030 EBD1     		bne	.L77
 682              	.L78:
6110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->State = HAL_I2C_STATE_READY;
 683              		.loc 1 6110 0 is_stmt 1
 684 0032 6B6C     		ldr	r3, [r5, #68]
 685 0034 43F02003 		orr	r3, r3, #32
 686 0038 6B64     		str	r3, [r5, #68]
6111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode = HAL_I2C_MODE_NONE;
 687              		.loc 1 6111 0
 688 003a 2023     		movs	r3, #32
 689 003c 85F84130 		strb	r3, [r5, #65]
6112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 690              		.loc 1 6112 0
 691 0040 0023     		movs	r3, #0
 692 0042 85F84230 		strb	r3, [r5, #66]
6115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
 693              		.loc 1 6115 0
 694 0046 85F84030 		strb	r3, [r5, #64]
6116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 695              		.loc 1 6116 0
 696 004a 0120     		movs	r0, #1
 697 004c 00E0     		b	.L79
 698              	.L82:
6120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 699              		.loc 1 6120 0
 700 004e 0020     		movs	r0, #0
 701              	.L79:
6121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 702              		.loc 1 6121 0
 703 0050 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 704              		.cfi_endproc
 705              	.LFE210:
 707              		.section	.text.I2C_RequestMemoryWrite,"ax",%progbits
 708              		.align	1
 709              		.syntax unified
 710              		.thumb
 711              		.thumb_func
 712              		.fpu fpv5-sp-d16
 714              	I2C_RequestMemoryWrite:
 715              	.LFB194:
5123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRI
 716              		.loc 1 5123 0
 717              		.cfi_startproc
 718              		@ args = 8, pretend = 0, frame = 0
 719              		@ frame_needed = 0, uses_anonymous_args = 0
 720              	.LVL63:
 721 0000 70B5     		push	{r4, r5, r6, lr}
 722              	.LCFI9:
 723              		.cfi_def_cfa_offset 16
 724              		.cfi_offset 4, -16
 725              		.cfi_offset 5, -12
 726              		.cfi_offset 6, -8
 727              		.cfi_offset 14, -4
 728 0002 82B0     		sub	sp, sp, #8
ARM GAS  /tmp/ccX4fpHz.s 			page 129


 729              	.LCFI10:
 730              		.cfi_def_cfa_offset 24
 731 0004 0446     		mov	r4, r0
 732 0006 1646     		mov	r6, r2
 733 0008 1D46     		mov	r5, r3
5124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 734              		.loc 1 5124 0
 735 000a 184B     		ldr	r3, .L90
 736              	.LVL64:
 737 000c 0093     		str	r3, [sp]
 738 000e 4FF08073 		mov	r3, #16777216
 739 0012 EAB2     		uxtb	r2, r5
 740              	.LVL65:
 741 0014 FFF7FEFF 		bl	I2C_TransferConfig
 742              	.LVL66:
5127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 743              		.loc 1 5127 0
 744 0018 079A     		ldr	r2, [sp, #28]
 745 001a 0699     		ldr	r1, [sp, #24]
 746 001c 2046     		mov	r0, r4
 747 001e FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
 748              	.LVL67:
 749 0022 E8B9     		cbnz	r0, .L87
5133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 750              		.loc 1 5133 0
 751 0024 012D     		cmp	r5, #1
 752 0026 0ED1     		bne	.L85
5136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 753              		.loc 1 5136 0
 754 0028 2368     		ldr	r3, [r4]
 755 002a F6B2     		uxtb	r6, r6
 756 002c 9E62     		str	r6, [r3, #40]
 757              	.L86:
5155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 758              		.loc 1 5155 0
 759 002e 079B     		ldr	r3, [sp, #28]
 760 0030 0093     		str	r3, [sp]
 761 0032 069B     		ldr	r3, [sp, #24]
 762 0034 0022     		movs	r2, #0
 763 0036 8021     		movs	r1, #128
 764 0038 2046     		mov	r0, r4
 765 003a FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 766              	.LVL68:
 767 003e 0346     		mov	r3, r0
 768 0040 78B1     		cbz	r0, .L84
5157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 769              		.loc 1 5157 0
 770 0042 0123     		movs	r3, #1
 771 0044 0DE0     		b	.L84
 772              	.L85:
5142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 773              		.loc 1 5142 0
 774 0046 2368     		ldr	r3, [r4]
 775 0048 320A     		lsrs	r2, r6, #8
 776 004a 9A62     		str	r2, [r3, #40]
5145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 777              		.loc 1 5145 0
ARM GAS  /tmp/ccX4fpHz.s 			page 130


 778 004c 079A     		ldr	r2, [sp, #28]
 779 004e 0699     		ldr	r1, [sp, #24]
 780 0050 2046     		mov	r0, r4
 781 0052 FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
 782              	.LVL69:
 783 0056 38B9     		cbnz	r0, .L88
5151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 784              		.loc 1 5151 0
 785 0058 2368     		ldr	r3, [r4]
 786 005a F6B2     		uxtb	r6, r6
 787 005c 9E62     		str	r6, [r3, #40]
 788 005e E6E7     		b	.L86
 789              	.L87:
5129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 790              		.loc 1 5129 0
 791 0060 0123     		movs	r3, #1
 792              	.L84:
5161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 793              		.loc 1 5161 0
 794 0062 1846     		mov	r0, r3
 795 0064 02B0     		add	sp, sp, #8
 796              	.LCFI11:
 797              		.cfi_remember_state
 798              		.cfi_def_cfa_offset 16
 799              		@ sp needed
 800 0066 70BD     		pop	{r4, r5, r6, pc}
 801              	.LVL70:
 802              	.L88:
 803              	.LCFI12:
 804              		.cfi_restore_state
5147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 805              		.loc 1 5147 0
 806 0068 0123     		movs	r3, #1
 807 006a FAE7     		b	.L84
 808              	.L91:
 809              		.align	2
 810              	.L90:
 811 006c 00200080 		.word	-2147475456
 812              		.cfi_endproc
 813              	.LFE194:
 815              		.section	.text.I2C_RequestMemoryRead,"ax",%progbits
 816              		.align	1
 817              		.syntax unified
 818              		.thumb
 819              		.thumb_func
 820              		.fpu fpv5-sp-d16
 822              	I2C_RequestMemoryRead:
 823              	.LFB195:
5176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WR
 824              		.loc 1 5176 0
 825              		.cfi_startproc
 826              		@ args = 8, pretend = 0, frame = 0
 827              		@ frame_needed = 0, uses_anonymous_args = 0
 828              	.LVL71:
 829 0000 70B5     		push	{r4, r5, r6, lr}
 830              	.LCFI13:
 831              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/ccX4fpHz.s 			page 131


 832              		.cfi_offset 4, -16
 833              		.cfi_offset 5, -12
 834              		.cfi_offset 6, -8
 835              		.cfi_offset 14, -4
 836 0002 82B0     		sub	sp, sp, #8
 837              	.LCFI14:
 838              		.cfi_def_cfa_offset 24
 839 0004 0446     		mov	r4, r0
 840 0006 1646     		mov	r6, r2
 841 0008 1D46     		mov	r5, r3
5177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 842              		.loc 1 5177 0
 843 000a 184B     		ldr	r3, .L99
 844              	.LVL72:
 845 000c 0093     		str	r3, [sp]
 846 000e 0023     		movs	r3, #0
 847 0010 EAB2     		uxtb	r2, r5
 848              	.LVL73:
 849 0012 FFF7FEFF 		bl	I2C_TransferConfig
 850              	.LVL74:
5180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 851              		.loc 1 5180 0
 852 0016 079A     		ldr	r2, [sp, #28]
 853 0018 0699     		ldr	r1, [sp, #24]
 854 001a 2046     		mov	r0, r4
 855 001c FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
 856              	.LVL75:
 857 0020 E8B9     		cbnz	r0, .L96
5186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 858              		.loc 1 5186 0
 859 0022 012D     		cmp	r5, #1
 860 0024 0ED1     		bne	.L94
5189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 861              		.loc 1 5189 0
 862 0026 2368     		ldr	r3, [r4]
 863 0028 F6B2     		uxtb	r6, r6
 864 002a 9E62     		str	r6, [r3, #40]
 865              	.L95:
5208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 866              		.loc 1 5208 0
 867 002c 079B     		ldr	r3, [sp, #28]
 868 002e 0093     		str	r3, [sp]
 869 0030 069B     		ldr	r3, [sp, #24]
 870 0032 0022     		movs	r2, #0
 871 0034 4021     		movs	r1, #64
 872 0036 2046     		mov	r0, r4
 873 0038 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 874              	.LVL76:
 875 003c 0346     		mov	r3, r0
 876 003e 78B1     		cbz	r0, .L93
5210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 877              		.loc 1 5210 0
 878 0040 0123     		movs	r3, #1
 879 0042 0DE0     		b	.L93
 880              	.L94:
5195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 881              		.loc 1 5195 0
ARM GAS  /tmp/ccX4fpHz.s 			page 132


 882 0044 2368     		ldr	r3, [r4]
 883 0046 320A     		lsrs	r2, r6, #8
 884 0048 9A62     		str	r2, [r3, #40]
5198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 885              		.loc 1 5198 0
 886 004a 079A     		ldr	r2, [sp, #28]
 887 004c 0699     		ldr	r1, [sp, #24]
 888 004e 2046     		mov	r0, r4
 889 0050 FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
 890              	.LVL77:
 891 0054 38B9     		cbnz	r0, .L97
5204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 892              		.loc 1 5204 0
 893 0056 2368     		ldr	r3, [r4]
 894 0058 F6B2     		uxtb	r6, r6
 895 005a 9E62     		str	r6, [r3, #40]
 896 005c E6E7     		b	.L95
 897              	.L96:
5182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 898              		.loc 1 5182 0
 899 005e 0123     		movs	r3, #1
 900              	.L93:
5214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 901              		.loc 1 5214 0
 902 0060 1846     		mov	r0, r3
 903 0062 02B0     		add	sp, sp, #8
 904              	.LCFI15:
 905              		.cfi_remember_state
 906              		.cfi_def_cfa_offset 16
 907              		@ sp needed
 908 0064 70BD     		pop	{r4, r5, r6, pc}
 909              	.LVL78:
 910              	.L97:
 911              	.LCFI16:
 912              		.cfi_restore_state
5200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 913              		.loc 1 5200 0
 914 0066 0123     		movs	r3, #1
 915 0068 FAE7     		b	.L93
 916              	.L100:
 917 006a 00BF     		.align	2
 918              	.L99:
 919 006c 00200080 		.word	-2147475456
 920              		.cfi_endproc
 921              	.LFE195:
 923              		.section	.text.I2C_WaitOnSTOPFlagUntilTimeout,"ax",%progbits
 924              		.align	1
 925              		.syntax unified
 926              		.thumb
 927              		.thumb_func
 928              		.fpu fpv5-sp-d16
 930              	I2C_WaitOnSTOPFlagUntilTimeout:
 931              	.LFB212:
6169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 932              		.loc 1 6169 0
 933              		.cfi_startproc
 934              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccX4fpHz.s 			page 133


 935              		@ frame_needed = 0, uses_anonymous_args = 0
 936              	.LVL79:
 937 0000 70B5     		push	{r4, r5, r6, lr}
 938              	.LCFI17:
 939              		.cfi_def_cfa_offset 16
 940              		.cfi_offset 4, -16
 941              		.cfi_offset 5, -12
 942              		.cfi_offset 6, -8
 943              		.cfi_offset 14, -4
 944 0002 0546     		mov	r5, r0
 945 0004 0C46     		mov	r4, r1
 946 0006 1646     		mov	r6, r2
 947              	.LVL80:
 948              	.L102:
6170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 949              		.loc 1 6170 0
 950 0008 2B68     		ldr	r3, [r5]
 951 000a 9B69     		ldr	r3, [r3, #24]
 952 000c 13F0200F 		tst	r3, #32
 953 0010 1AD1     		bne	.L108
6173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 954              		.loc 1 6173 0
 955 0012 3246     		mov	r2, r6
 956 0014 2146     		mov	r1, r4
 957 0016 2846     		mov	r0, r5
 958 0018 FFF7FEFF 		bl	I2C_IsAcknowledgeFailed
 959              	.LVL81:
 960 001c B0B9     		cbnz	r0, .L106
6179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 961              		.loc 1 6179 0
 962 001e FFF7FEFF 		bl	HAL_GetTick
 963              	.LVL82:
 964 0022 801B     		subs	r0, r0, r6
 965 0024 A042     		cmp	r0, r4
 966 0026 01D8     		bhi	.L104
6179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 967              		.loc 1 6179 0 is_stmt 0 discriminator 1
 968 0028 002C     		cmp	r4, #0
 969 002a EDD1     		bne	.L102
 970              	.L104:
6181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->State = HAL_I2C_STATE_READY;
 971              		.loc 1 6181 0 is_stmt 1
 972 002c 6B6C     		ldr	r3, [r5, #68]
 973 002e 43F02003 		orr	r3, r3, #32
 974 0032 6B64     		str	r3, [r5, #68]
6182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
 975              		.loc 1 6182 0
 976 0034 2023     		movs	r3, #32
 977 0036 85F84130 		strb	r3, [r5, #65]
6183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 978              		.loc 1 6183 0
 979 003a 0023     		movs	r3, #0
 980 003c 85F84230 		strb	r3, [r5, #66]
6186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 981              		.loc 1 6186 0
 982 0040 85F84030 		strb	r3, [r5, #64]
6188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
ARM GAS  /tmp/ccX4fpHz.s 			page 134


 983              		.loc 1 6188 0
 984 0044 0120     		movs	r0, #1
 985              	.L103:
6192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 986              		.loc 1 6192 0
 987 0046 70BD     		pop	{r4, r5, r6, pc}
 988              	.LVL83:
 989              	.L108:
6191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 990              		.loc 1 6191 0
 991 0048 0020     		movs	r0, #0
 992 004a FCE7     		b	.L103
 993              	.L106:
6175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 994              		.loc 1 6175 0
 995 004c 0120     		movs	r0, #1
 996 004e FAE7     		b	.L103
 997              		.cfi_endproc
 998              	.LFE212:
 1000              		.section	.text.I2C_WaitOnRXNEFlagUntilTimeout,"ax",%progbits
 1001              		.align	1
 1002              		.syntax unified
 1003              		.thumb
 1004              		.thumb_func
 1005              		.fpu fpv5-sp-d16
 1007              	I2C_WaitOnRXNEFlagUntilTimeout:
 1008              	.LFB213:
6203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 1009              		.loc 1 6203 0
 1010              		.cfi_startproc
 1011              		@ args = 0, pretend = 0, frame = 0
 1012              		@ frame_needed = 0, uses_anonymous_args = 0
 1013              	.LVL84:
 1014 0000 70B5     		push	{r4, r5, r6, lr}
 1015              	.LCFI18:
 1016              		.cfi_def_cfa_offset 16
 1017              		.cfi_offset 4, -16
 1018              		.cfi_offset 5, -12
 1019              		.cfi_offset 6, -8
 1020              		.cfi_offset 14, -4
 1021 0002 0446     		mov	r4, r0
 1022 0004 0D46     		mov	r5, r1
 1023 0006 1646     		mov	r6, r2
 1024              	.LVL85:
 1025              	.L110:
6204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 1026              		.loc 1 6204 0
 1027 0008 2368     		ldr	r3, [r4]
 1028 000a 9B69     		ldr	r3, [r3, #24]
 1029 000c 13F0040F 		tst	r3, #4
 1030 0010 3ED1     		bne	.L118
6207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 1031              		.loc 1 6207 0
 1032 0012 3246     		mov	r2, r6
 1033 0014 2946     		mov	r1, r5
 1034 0016 2046     		mov	r0, r4
 1035 0018 FFF7FEFF 		bl	I2C_IsAcknowledgeFailed
ARM GAS  /tmp/ccX4fpHz.s 			page 135


 1036              	.LVL86:
 1037 001c 0146     		mov	r1, r0
 1038 001e 0028     		cmp	r0, #0
 1039 0020 38D1     		bne	.L116
6213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 1040              		.loc 1 6213 0
 1041 0022 2368     		ldr	r3, [r4]
 1042 0024 9A69     		ldr	r2, [r3, #24]
 1043 0026 12F0200F 		tst	r2, #32
 1044 002a 13D1     		bne	.L119
6243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 1045              		.loc 1 6243 0
 1046 002c FFF7FEFF 		bl	HAL_GetTick
 1047              	.LVL87:
 1048 0030 801B     		subs	r0, r0, r6
 1049 0032 A842     		cmp	r0, r5
 1050 0034 01D8     		bhi	.L114
6243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 1051              		.loc 1 6243 0 is_stmt 0 discriminator 1
 1052 0036 002D     		cmp	r5, #0
 1053 0038 E6D1     		bne	.L110
 1054              	.L114:
6245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->State = HAL_I2C_STATE_READY;
 1055              		.loc 1 6245 0 is_stmt 1
 1056 003a 636C     		ldr	r3, [r4, #68]
 1057 003c 43F02003 		orr	r3, r3, #32
 1058 0040 6364     		str	r3, [r4, #68]
6246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1059              		.loc 1 6246 0
 1060 0042 2023     		movs	r3, #32
 1061 0044 84F84130 		strb	r3, [r4, #65]
6249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1062              		.loc 1 6249 0
 1063 0048 0023     		movs	r3, #0
 1064 004a 84F84030 		strb	r3, [r4, #64]
6251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 1065              		.loc 1 6251 0
 1066 004e 0121     		movs	r1, #1
 1067              	.L111:
6255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1068              		.loc 1 6255 0
 1069 0050 0846     		mov	r0, r1
 1070 0052 70BD     		pop	{r4, r5, r6, pc}
 1071              	.LVL88:
 1072              	.L119:
6217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 1073              		.loc 1 6217 0
 1074 0054 9A69     		ldr	r2, [r3, #24]
 1075 0056 12F0040F 		tst	r2, #4
 1076 005a 02D0     		beq	.L113
6217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 1077              		.loc 1 6217 0 is_stmt 0 discriminator 1
 1078 005c 228D     		ldrh	r2, [r4, #40]
 1079 005e 002A     		cmp	r2, #0
 1080 0060 F6D1     		bne	.L111
 1081              	.L113:
6226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/ccX4fpHz.s 			page 136


 1082              		.loc 1 6226 0 is_stmt 1
 1083 0062 2022     		movs	r2, #32
 1084 0064 DA61     		str	r2, [r3, #28]
6229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1085              		.loc 1 6229 0
 1086 0066 2168     		ldr	r1, [r4]
 1087 0068 4B68     		ldr	r3, [r1, #4]
 1088 006a 23F0FF73 		bic	r3, r3, #33423360
 1089 006e 23F48B33 		bic	r3, r3, #71168
 1090 0072 23F4FF73 		bic	r3, r3, #510
 1091 0076 23F00103 		bic	r3, r3, #1
 1092 007a 4B60     		str	r3, [r1, #4]
6231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->State = HAL_I2C_STATE_READY;
 1093              		.loc 1 6231 0
 1094 007c 0023     		movs	r3, #0
 1095 007e 6364     		str	r3, [r4, #68]
6232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode = HAL_I2C_MODE_NONE;
 1096              		.loc 1 6232 0
 1097 0080 84F84120 		strb	r2, [r4, #65]
6233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1098              		.loc 1 6233 0
 1099 0084 84F84230 		strb	r3, [r4, #66]
6236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1100              		.loc 1 6236 0
 1101 0088 84F84030 		strb	r3, [r4, #64]
6238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 1102              		.loc 1 6238 0
 1103 008c 0121     		movs	r1, #1
 1104 008e DFE7     		b	.L111
 1105              	.L118:
6254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 1106              		.loc 1 6254 0
 1107 0090 0021     		movs	r1, #0
 1108 0092 DDE7     		b	.L111
 1109              	.L116:
6209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 1110              		.loc 1 6209 0
 1111 0094 0121     		movs	r1, #1
 1112 0096 DBE7     		b	.L111
 1113              		.cfi_endproc
 1114              	.LFE213:
 1116              		.section	.text.HAL_I2C_MspInit,"ax",%progbits
 1117              		.align	1
 1118              		.weak	HAL_I2C_MspInit
 1119              		.syntax unified
 1120              		.thumb
 1121              		.thumb_func
 1122              		.fpu fpv5-sp-d16
 1124              	HAL_I2C_MspInit:
 1125              	.LFB143:
 625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 1126              		.loc 1 625 0
 1127              		.cfi_startproc
 1128              		@ args = 0, pretend = 0, frame = 0
 1129              		@ frame_needed = 0, uses_anonymous_args = 0
 1130              		@ link register save eliminated.
 1131              	.LVL89:
ARM GAS  /tmp/ccX4fpHz.s 			page 137


 632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1132              		.loc 1 632 0
 1133 0000 7047     		bx	lr
 1134              		.cfi_endproc
 1135              	.LFE143:
 1137              		.section	.text.HAL_I2C_Init,"ax",%progbits
 1138              		.align	1
 1139              		.global	HAL_I2C_Init
 1140              		.syntax unified
 1141              		.thumb
 1142              		.thumb_func
 1143              		.fpu fpv5-sp-d16
 1145              	HAL_I2C_Init:
 1146              	.LFB141:
 470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the I2C handle allocation */
 1147              		.loc 1 470 0
 1148              		.cfi_startproc
 1149              		@ args = 0, pretend = 0, frame = 0
 1150              		@ frame_needed = 0, uses_anonymous_args = 0
 1151              	.LVL90:
 472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 1152              		.loc 1 472 0
 1153 0000 0028     		cmp	r0, #0
 1154 0002 57D0     		beq	.L127
 470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the I2C handle allocation */
 1155              		.loc 1 470 0
 1156 0004 10B5     		push	{r4, lr}
 1157              	.LCFI19:
 1158              		.cfi_def_cfa_offset 8
 1159              		.cfi_offset 4, -8
 1160              		.cfi_offset 14, -4
 1161 0006 0446     		mov	r4, r0
 487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 1162              		.loc 1 487 0
 1163 0008 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 1164 000c 002B     		cmp	r3, #0
 1165 000e 41D0     		beq	.L132
 1166              	.LVL91:
 1167              	.L123:
 518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1168              		.loc 1 518 0
 1169 0010 2423     		movs	r3, #36
 1170 0012 84F84130 		strb	r3, [r4, #65]
 521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1171              		.loc 1 521 0
 1172 0016 2268     		ldr	r2, [r4]
 1173 0018 1368     		ldr	r3, [r2]
 1174 001a 23F00103 		bic	r3, r3, #1
 1175 001e 1360     		str	r3, [r2]
 525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1176              		.loc 1 525 0
 1177 0020 6368     		ldr	r3, [r4, #4]
 1178 0022 2268     		ldr	r2, [r4]
 1179 0024 23F07063 		bic	r3, r3, #251658240
 1180 0028 1361     		str	r3, [r2, #16]
 529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1181              		.loc 1 529 0
ARM GAS  /tmp/ccX4fpHz.s 			page 138


 1182 002a 2268     		ldr	r2, [r4]
 1183 002c 9368     		ldr	r3, [r2, #8]
 1184 002e 23F40043 		bic	r3, r3, #32768
 1185 0032 9360     		str	r3, [r2, #8]
 532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 1186              		.loc 1 532 0
 1187 0034 E368     		ldr	r3, [r4, #12]
 1188 0036 012B     		cmp	r3, #1
 1189 0038 31D0     		beq	.L133
 538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 1190              		.loc 1 538 0
 1191 003a A368     		ldr	r3, [r4, #8]
 1192 003c 2268     		ldr	r2, [r4]
 1193 003e 43F40443 		orr	r3, r3, #33792
 1194 0042 9360     		str	r3, [r2, #8]
 1195              	.L125:
 543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 1196              		.loc 1 543 0
 1197 0044 E368     		ldr	r3, [r4, #12]
 1198 0046 022B     		cmp	r3, #2
 1199 0048 2FD0     		beq	.L134
 1200              	.L126:
 548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1201              		.loc 1 548 0
 1202 004a 2268     		ldr	r2, [r4]
 1203 004c 5168     		ldr	r1, [r2, #4]
 1204 004e 1A4B     		ldr	r3, .L135
 1205 0050 0B43     		orrs	r3, r3, r1
 1206 0052 5360     		str	r3, [r2, #4]
 552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1207              		.loc 1 552 0
 1208 0054 2268     		ldr	r2, [r4]
 1209 0056 D368     		ldr	r3, [r2, #12]
 1210 0058 23F40043 		bic	r3, r3, #32768
 1211 005c D360     		str	r3, [r2, #12]
 555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1212              		.loc 1 555 0
 1213 005e 2369     		ldr	r3, [r4, #16]
 1214 0060 6269     		ldr	r2, [r4, #20]
 1215 0062 1343     		orrs	r3, r3, r2
 1216 0064 A169     		ldr	r1, [r4, #24]
 1217 0066 2268     		ldr	r2, [r4]
 1218 0068 43EA0123 		orr	r3, r3, r1, lsl #8
 1219 006c D360     		str	r3, [r2, #12]
 559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1220              		.loc 1 559 0
 1221 006e E369     		ldr	r3, [r4, #28]
 1222 0070 216A     		ldr	r1, [r4, #32]
 1223 0072 2268     		ldr	r2, [r4]
 1224 0074 0B43     		orrs	r3, r3, r1
 1225 0076 1360     		str	r3, [r2]
 562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1226              		.loc 1 562 0
 1227 0078 2268     		ldr	r2, [r4]
 1228 007a 1368     		ldr	r3, [r2]
 1229 007c 43F00103 		orr	r3, r3, #1
 1230 0080 1360     		str	r3, [r2]
ARM GAS  /tmp/ccX4fpHz.s 			page 139


 564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_READY;
 1231              		.loc 1 564 0
 1232 0082 0020     		movs	r0, #0
 1233 0084 6064     		str	r0, [r4, #68]
 565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
 1234              		.loc 1 565 0
 1235 0086 2023     		movs	r3, #32
 1236 0088 84F84130 		strb	r3, [r4, #65]
 566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
 1237              		.loc 1 566 0
 1238 008c 2063     		str	r0, [r4, #48]
 567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1239              		.loc 1 567 0
 1240 008e 84F84200 		strb	r0, [r4, #66]
 570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1241              		.loc 1 570 0
 1242 0092 10BD     		pop	{r4, pc}
 1243              	.LVL92:
 1244              	.L132:
 490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1245              		.loc 1 490 0
 1246 0094 80F84030 		strb	r3, [r0, #64]
 514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 1247              		.loc 1 514 0
 1248 0098 FFF7FEFF 		bl	HAL_I2C_MspInit
 1249              	.LVL93:
 1250 009c B8E7     		b	.L123
 1251              	.L133:
 534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 1252              		.loc 1 534 0
 1253 009e A368     		ldr	r3, [r4, #8]
 1254 00a0 2268     		ldr	r2, [r4]
 1255 00a2 43F40043 		orr	r3, r3, #32768
 1256 00a6 9360     		str	r3, [r2, #8]
 1257 00a8 CCE7     		b	.L125
 1258              	.L134:
 545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 1259              		.loc 1 545 0
 1260 00aa 2368     		ldr	r3, [r4]
 1261 00ac 4FF40062 		mov	r2, #2048
 1262 00b0 5A60     		str	r2, [r3, #4]
 1263 00b2 CAE7     		b	.L126
 1264              	.LVL94:
 1265              	.L127:
 1266              	.LCFI20:
 1267              		.cfi_def_cfa_offset 0
 1268              		.cfi_restore 4
 1269              		.cfi_restore 14
 474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 1270              		.loc 1 474 0
 1271 00b4 0120     		movs	r0, #1
 1272              	.LVL95:
 570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1273              		.loc 1 570 0
 1274 00b6 7047     		bx	lr
 1275              	.L136:
 1276              		.align	2
ARM GAS  /tmp/ccX4fpHz.s 			page 140


 1277              	.L135:
 1278 00b8 00800002 		.word	33587200
 1279              		.cfi_endproc
 1280              	.LFE141:
 1282              		.section	.text.HAL_I2C_MspDeInit,"ax",%progbits
 1283              		.align	1
 1284              		.weak	HAL_I2C_MspDeInit
 1285              		.syntax unified
 1286              		.thumb
 1287              		.thumb_func
 1288              		.fpu fpv5-sp-d16
 1290              	HAL_I2C_MspDeInit:
 1291              	.LFB144:
 641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 1292              		.loc 1 641 0
 1293              		.cfi_startproc
 1294              		@ args = 0, pretend = 0, frame = 0
 1295              		@ frame_needed = 0, uses_anonymous_args = 0
 1296              		@ link register save eliminated.
 1297              	.LVL96:
 648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1298              		.loc 1 648 0
 1299 0000 7047     		bx	lr
 1300              		.cfi_endproc
 1301              	.LFE144:
 1303              		.section	.text.HAL_I2C_DeInit,"ax",%progbits
 1304              		.align	1
 1305              		.global	HAL_I2C_DeInit
 1306              		.syntax unified
 1307              		.thumb
 1308              		.thumb_func
 1309              		.fpu fpv5-sp-d16
 1311              	HAL_I2C_DeInit:
 1312              	.LFB142:
 579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the I2C handle allocation */
 1313              		.loc 1 579 0
 1314              		.cfi_startproc
 1315              		@ args = 0, pretend = 0, frame = 0
 1316              		@ frame_needed = 0, uses_anonymous_args = 0
 1317              	.LVL97:
 581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 1318              		.loc 1 581 0
 1319 0000 A8B1     		cbz	r0, .L140
 579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the I2C handle allocation */
 1320              		.loc 1 579 0
 1321 0002 10B5     		push	{r4, lr}
 1322              	.LCFI21:
 1323              		.cfi_def_cfa_offset 8
 1324              		.cfi_offset 4, -8
 1325              		.cfi_offset 14, -4
 1326 0004 0446     		mov	r4, r0
 589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1327              		.loc 1 589 0
 1328 0006 2423     		movs	r3, #36
 1329 0008 80F84130 		strb	r3, [r0, #65]
 592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1330              		.loc 1 592 0
ARM GAS  /tmp/ccX4fpHz.s 			page 141


 1331 000c 0268     		ldr	r2, [r0]
 1332 000e 1368     		ldr	r3, [r2]
 1333 0010 23F00103 		bic	r3, r3, #1
 1334 0014 1360     		str	r3, [r2]
 604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 1335              		.loc 1 604 0
 1336 0016 FFF7FEFF 		bl	HAL_I2C_MspDeInit
 1337              	.LVL98:
 607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_RESET;
 1338              		.loc 1 607 0
 1339 001a 0020     		movs	r0, #0
 1340 001c 6064     		str	r0, [r4, #68]
 608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
 1341              		.loc 1 608 0
 1342 001e 84F84100 		strb	r0, [r4, #65]
 609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
 1343              		.loc 1 609 0
 1344 0022 2063     		str	r0, [r4, #48]
 610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1345              		.loc 1 610 0
 1346 0024 84F84200 		strb	r0, [r4, #66]
 613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1347              		.loc 1 613 0
 1348 0028 84F84000 		strb	r0, [r4, #64]
 616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1349              		.loc 1 616 0
 1350 002c 10BD     		pop	{r4, pc}
 1351              	.LVL99:
 1352              	.L140:
 1353              	.LCFI22:
 1354              		.cfi_def_cfa_offset 0
 1355              		.cfi_restore 4
 1356              		.cfi_restore 14
 583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 1357              		.loc 1 583 0
 1358 002e 0120     		movs	r0, #1
 1359              	.LVL100:
 616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1360              		.loc 1 616 0
 1361 0030 7047     		bx	lr
 1362              		.cfi_endproc
 1363              	.LFE142:
 1365              		.section	.text.HAL_I2C_Master_Transmit,"ax",%progbits
 1366              		.align	1
 1367              		.global	HAL_I2C_Master_Transmit
 1368              		.syntax unified
 1369              		.thumb
 1370              		.thumb_func
 1371              		.fpu fpv5-sp-d16
 1373              	HAL_I2C_Master_Transmit:
 1374              	.LFB145:
1061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
 1375              		.loc 1 1061 0
 1376              		.cfi_startproc
 1377              		@ args = 4, pretend = 0, frame = 0
 1378              		@ frame_needed = 0, uses_anonymous_args = 0
 1379              	.LVL101:
ARM GAS  /tmp/ccX4fpHz.s 			page 142


 1380 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1381              	.LCFI23:
 1382              		.cfi_def_cfa_offset 28
 1383              		.cfi_offset 4, -28
 1384              		.cfi_offset 5, -24
 1385              		.cfi_offset 6, -20
 1386              		.cfi_offset 7, -16
 1387              		.cfi_offset 8, -12
 1388              		.cfi_offset 9, -8
 1389              		.cfi_offset 14, -4
 1390 0004 83B0     		sub	sp, sp, #12
 1391              	.LCFI24:
 1392              		.cfi_def_cfa_offset 40
1064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 1393              		.loc 1 1064 0
 1394 0006 90F84150 		ldrb	r5, [r0, #65]	@ zero_extendqisi2
 1395 000a EDB2     		uxtb	r5, r5
 1396 000c 202D     		cmp	r5, #32
 1397 000e 40F0A480 		bne	.L153
1067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1398              		.loc 1 1067 0
 1399 0012 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 1400 0016 012C     		cmp	r4, #1
 1401 0018 00F0A480 		beq	.L154
 1402 001c 9846     		mov	r8, r3
 1403 001e 1746     		mov	r7, r2
 1404 0020 0E46     		mov	r6, r1
 1405 0022 0446     		mov	r4, r0
1067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1406              		.loc 1 1067 0 is_stmt 0 discriminator 2
 1407 0024 4FF00109 		mov	r9, #1
 1408 0028 80F84090 		strb	r9, [r0, #64]
1070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1409              		.loc 1 1070 0 is_stmt 1 discriminator 2
 1410 002c FFF7FEFF 		bl	HAL_GetTick
 1411              	.LVL102:
 1412 0030 0546     		mov	r5, r0
 1413              	.LVL103:
1072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 1414              		.loc 1 1072 0 discriminator 2
 1415 0032 0090     		str	r0, [sp]
 1416 0034 1923     		movs	r3, #25
 1417 0036 4A46     		mov	r2, r9
 1418 0038 4FF40041 		mov	r1, #32768
 1419 003c 2046     		mov	r0, r4
 1420              	.LVL104:
 1421 003e FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 1422              	.LVL105:
 1423 0042 0028     		cmp	r0, #0
 1424 0044 40F09080 		bne	.L155
1077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
 1425              		.loc 1 1077 0
 1426 0048 2123     		movs	r3, #33
 1427 004a 84F84130 		strb	r3, [r4, #65]
1078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 1428              		.loc 1 1078 0
 1429 004e 1023     		movs	r3, #16
ARM GAS  /tmp/ccX4fpHz.s 			page 143


 1430 0050 84F84230 		strb	r3, [r4, #66]
1079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1431              		.loc 1 1079 0
 1432 0054 0023     		movs	r3, #0
 1433 0056 6364     		str	r3, [r4, #68]
1082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount = Size;
 1434              		.loc 1 1082 0
 1435 0058 6762     		str	r7, [r4, #36]
1083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 1436              		.loc 1 1083 0
 1437 005a A4F82A80 		strh	r8, [r4, #42]	@ movhi
1084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1438              		.loc 1 1084 0
 1439 005e 6363     		str	r3, [r4, #52]
1088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 1440              		.loc 1 1088 0
 1441 0060 638D     		ldrh	r3, [r4, #42]
 1442 0062 9BB2     		uxth	r3, r3
 1443 0064 FF2B     		cmp	r3, #255
 1444 0066 0AD9     		bls	.L147
1090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_GENERATE_S
 1445              		.loc 1 1090 0
 1446 0068 FF22     		movs	r2, #255
 1447 006a 2285     		strh	r2, [r4, #40]	@ movhi
1091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 1448              		.loc 1 1091 0
 1449 006c 424B     		ldr	r3, .L161
 1450 006e 0093     		str	r3, [sp]
 1451 0070 4FF08073 		mov	r3, #16777216
 1452 0074 3146     		mov	r1, r6
 1453 0076 2046     		mov	r0, r4
 1454 0078 FFF7FEFF 		bl	I2C_TransferConfig
 1455              	.LVL106:
 1456 007c 18E0     		b	.L149
 1457              	.L147:
1095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_
 1458              		.loc 1 1095 0
 1459 007e 628D     		ldrh	r2, [r4, #42]
 1460 0080 92B2     		uxth	r2, r2
 1461 0082 2285     		strh	r2, [r4, #40]	@ movhi
1096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 1462              		.loc 1 1096 0
 1463 0084 3C4B     		ldr	r3, .L161
 1464 0086 0093     		str	r3, [sp]
 1465 0088 4FF00073 		mov	r3, #33554432
 1466 008c D2B2     		uxtb	r2, r2
 1467 008e 3146     		mov	r1, r6
 1468 0090 2046     		mov	r0, r4
 1469 0092 FFF7FEFF 		bl	I2C_TransferConfig
 1470              	.LVL107:
 1471 0096 0BE0     		b	.L149
 1472              	.L151:
1130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_ST
 1473              		.loc 1 1130 0
 1474 0098 628D     		ldrh	r2, [r4, #42]
 1475 009a 92B2     		uxth	r2, r2
 1476 009c 2285     		strh	r2, [r4, #40]	@ movhi
ARM GAS  /tmp/ccX4fpHz.s 			page 144


1131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 1477              		.loc 1 1131 0
 1478 009e 0023     		movs	r3, #0
 1479 00a0 0093     		str	r3, [sp]
 1480 00a2 4FF00073 		mov	r3, #33554432
 1481 00a6 D2B2     		uxtb	r2, r2
 1482 00a8 3146     		mov	r1, r6
 1483 00aa 2046     		mov	r0, r4
 1484 00ac FFF7FEFF 		bl	I2C_TransferConfig
 1485              	.LVL108:
 1486              	.L149:
1099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 1487              		.loc 1 1099 0
 1488 00b0 638D     		ldrh	r3, [r4, #42]
 1489 00b2 9BB2     		uxth	r3, r3
 1490 00b4 002B     		cmp	r3, #0
 1491 00b6 33D0     		beq	.L160
1102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 1492              		.loc 1 1102 0
 1493 00b8 2A46     		mov	r2, r5
 1494 00ba 0A99     		ldr	r1, [sp, #40]
 1495 00bc 2046     		mov	r0, r4
 1496 00be FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
 1497              	.LVL109:
 1498 00c2 0028     		cmp	r0, #0
 1499 00c4 52D1     		bne	.L156
1107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1500              		.loc 1 1107 0
 1501 00c6 626A     		ldr	r2, [r4, #36]
 1502 00c8 2368     		ldr	r3, [r4]
 1503 00ca 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1504 00cc 9A62     		str	r2, [r3, #40]
1110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1505              		.loc 1 1110 0
 1506 00ce 636A     		ldr	r3, [r4, #36]
 1507 00d0 0133     		adds	r3, r3, #1
 1508 00d2 6362     		str	r3, [r4, #36]
1112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize--;
 1509              		.loc 1 1112 0
 1510 00d4 638D     		ldrh	r3, [r4, #42]
 1511 00d6 013B     		subs	r3, r3, #1
 1512 00d8 9BB2     		uxth	r3, r3
 1513 00da 6385     		strh	r3, [r4, #42]	@ movhi
1113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1514              		.loc 1 1113 0
 1515 00dc 238D     		ldrh	r3, [r4, #40]
 1516 00de 013B     		subs	r3, r3, #1
 1517 00e0 9BB2     		uxth	r3, r3
 1518 00e2 2385     		strh	r3, [r4, #40]	@ movhi
1115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 1519              		.loc 1 1115 0
 1520 00e4 628D     		ldrh	r2, [r4, #42]
 1521 00e6 92B2     		uxth	r2, r2
 1522 00e8 002A     		cmp	r2, #0
 1523 00ea E1D0     		beq	.L149
1115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 1524              		.loc 1 1115 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccX4fpHz.s 			page 145


 1525 00ec 002B     		cmp	r3, #0
 1526 00ee DFD1     		bne	.L149
1118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 1527              		.loc 1 1118 0 is_stmt 1
 1528 00f0 0095     		str	r5, [sp]
 1529 00f2 0A9B     		ldr	r3, [sp, #40]
 1530 00f4 0022     		movs	r2, #0
 1531 00f6 8021     		movs	r1, #128
 1532 00f8 2046     		mov	r0, r4
 1533 00fa FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 1534              	.LVL110:
 1535 00fe 0028     		cmp	r0, #0
 1536 0100 36D1     		bne	.L157
1123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 1537              		.loc 1 1123 0
 1538 0102 638D     		ldrh	r3, [r4, #42]
 1539 0104 9BB2     		uxth	r3, r3
 1540 0106 FF2B     		cmp	r3, #255
 1541 0108 C6D9     		bls	.L151
1125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STA
 1542              		.loc 1 1125 0
 1543 010a FF22     		movs	r2, #255
 1544 010c 2285     		strh	r2, [r4, #40]	@ movhi
1126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 1545              		.loc 1 1126 0
 1546 010e 0023     		movs	r3, #0
 1547 0110 0093     		str	r3, [sp]
 1548 0112 4FF08073 		mov	r3, #16777216
 1549 0116 3146     		mov	r1, r6
 1550 0118 2046     		mov	r0, r4
 1551 011a FFF7FEFF 		bl	I2C_TransferConfig
 1552              	.LVL111:
 1553 011e C7E7     		b	.L149
 1554              	.L160:
1138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 1555              		.loc 1 1138 0
 1556 0120 2A46     		mov	r2, r5
 1557 0122 0A99     		ldr	r1, [sp, #40]
 1558 0124 2046     		mov	r0, r4
 1559 0126 FFF7FEFF 		bl	I2C_WaitOnSTOPFlagUntilTimeout
 1560              	.LVL112:
 1561 012a 0346     		mov	r3, r0
 1562 012c 10BB     		cbnz	r0, .L158
1144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1563              		.loc 1 1144 0
 1564 012e 2268     		ldr	r2, [r4]
 1565 0130 2021     		movs	r1, #32
 1566 0132 D161     		str	r1, [r2, #28]
1147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1567              		.loc 1 1147 0
 1568 0134 2068     		ldr	r0, [r4]
 1569 0136 4268     		ldr	r2, [r0, #4]
 1570 0138 22F0FF72 		bic	r2, r2, #33423360
 1571 013c 22F48B32 		bic	r2, r2, #71168
 1572 0140 22F4FF72 		bic	r2, r2, #510
 1573 0144 22F00102 		bic	r2, r2, #1
 1574 0148 4260     		str	r2, [r0, #4]
ARM GAS  /tmp/ccX4fpHz.s 			page 146


1149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
 1575              		.loc 1 1149 0
 1576 014a 84F84110 		strb	r1, [r4, #65]
1150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1577              		.loc 1 1150 0
 1578 014e 0022     		movs	r2, #0
 1579 0150 84F84220 		strb	r2, [r4, #66]
1153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1580              		.loc 1 1153 0
 1581 0154 84F84020 		strb	r2, [r4, #64]
1155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 1582              		.loc 1 1155 0
 1583 0158 00E0     		b	.L146
 1584              	.LVL113:
 1585              	.L153:
1159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 1586              		.loc 1 1159 0
 1587 015a 0223     		movs	r3, #2
 1588              	.LVL114:
 1589              	.L146:
1161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1590              		.loc 1 1161 0
 1591 015c 1846     		mov	r0, r3
 1592 015e 03B0     		add	sp, sp, #12
 1593              	.LCFI25:
 1594              		.cfi_remember_state
 1595              		.cfi_def_cfa_offset 28
 1596              		@ sp needed
 1597 0160 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1598              	.LVL115:
 1599              	.L154:
 1600              	.LCFI26:
 1601              		.cfi_restore_state
1067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1602              		.loc 1 1067 0
 1603 0164 0223     		movs	r3, #2
 1604              	.LVL116:
 1605 0166 F9E7     		b	.L146
 1606              	.LVL117:
 1607              	.L155:
1074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 1608              		.loc 1 1074 0
 1609 0168 0123     		movs	r3, #1
 1610 016a F7E7     		b	.L146
 1611              	.L156:
1104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 1612              		.loc 1 1104 0
 1613 016c 0123     		movs	r3, #1
 1614 016e F5E7     		b	.L146
 1615              	.L157:
1120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 1616              		.loc 1 1120 0
 1617 0170 0123     		movs	r3, #1
 1618 0172 F3E7     		b	.L146
 1619              	.L158:
1140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 1620              		.loc 1 1140 0
ARM GAS  /tmp/ccX4fpHz.s 			page 147


 1621 0174 0123     		movs	r3, #1
 1622 0176 F1E7     		b	.L146
 1623              	.L162:
 1624              		.align	2
 1625              	.L161:
 1626 0178 00200080 		.word	-2147475456
 1627              		.cfi_endproc
 1628              	.LFE145:
 1630              		.section	.text.HAL_I2C_Master_Receive,"ax",%progbits
 1631              		.align	1
 1632              		.global	HAL_I2C_Master_Receive
 1633              		.syntax unified
 1634              		.thumb
 1635              		.thumb_func
 1636              		.fpu fpv5-sp-d16
 1638              	HAL_I2C_Master_Receive:
 1639              	.LFB146:
1175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
 1640              		.loc 1 1175 0
 1641              		.cfi_startproc
 1642              		@ args = 4, pretend = 0, frame = 0
 1643              		@ frame_needed = 0, uses_anonymous_args = 0
 1644              	.LVL118:
 1645 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1646              	.LCFI27:
 1647              		.cfi_def_cfa_offset 28
 1648              		.cfi_offset 4, -28
 1649              		.cfi_offset 5, -24
 1650              		.cfi_offset 6, -20
 1651              		.cfi_offset 7, -16
 1652              		.cfi_offset 8, -12
 1653              		.cfi_offset 9, -8
 1654              		.cfi_offset 14, -4
 1655 0004 83B0     		sub	sp, sp, #12
 1656              	.LCFI28:
 1657              		.cfi_def_cfa_offset 40
1178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 1658              		.loc 1 1178 0
 1659 0006 90F84150 		ldrb	r5, [r0, #65]	@ zero_extendqisi2
 1660 000a EDB2     		uxtb	r5, r5
 1661 000c 202D     		cmp	r5, #32
 1662 000e 40F0A480 		bne	.L171
1181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1663              		.loc 1 1181 0
 1664 0012 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 1665 0016 012C     		cmp	r4, #1
 1666 0018 00F0A480 		beq	.L172
 1667 001c 9846     		mov	r8, r3
 1668 001e 1746     		mov	r7, r2
 1669 0020 0E46     		mov	r6, r1
 1670 0022 0446     		mov	r4, r0
1181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1671              		.loc 1 1181 0 is_stmt 0 discriminator 2
 1672 0024 4FF00109 		mov	r9, #1
 1673 0028 80F84090 		strb	r9, [r0, #64]
1184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1674              		.loc 1 1184 0 is_stmt 1 discriminator 2
ARM GAS  /tmp/ccX4fpHz.s 			page 148


 1675 002c FFF7FEFF 		bl	HAL_GetTick
 1676              	.LVL119:
 1677 0030 0546     		mov	r5, r0
 1678              	.LVL120:
1186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 1679              		.loc 1 1186 0 discriminator 2
 1680 0032 0090     		str	r0, [sp]
 1681 0034 1923     		movs	r3, #25
 1682 0036 4A46     		mov	r2, r9
 1683 0038 4FF40041 		mov	r1, #32768
 1684 003c 2046     		mov	r0, r4
 1685              	.LVL121:
 1686 003e FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 1687              	.LVL122:
 1688 0042 0028     		cmp	r0, #0
 1689 0044 40F09080 		bne	.L173
1191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
 1690              		.loc 1 1191 0
 1691 0048 2223     		movs	r3, #34
 1692 004a 84F84130 		strb	r3, [r4, #65]
1192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 1693              		.loc 1 1192 0
 1694 004e 1023     		movs	r3, #16
 1695 0050 84F84230 		strb	r3, [r4, #66]
1193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1696              		.loc 1 1193 0
 1697 0054 0023     		movs	r3, #0
 1698 0056 6364     		str	r3, [r4, #68]
1196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount = Size;
 1699              		.loc 1 1196 0
 1700 0058 6762     		str	r7, [r4, #36]
1197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 1701              		.loc 1 1197 0
 1702 005a A4F82A80 		strh	r8, [r4, #42]	@ movhi
1198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1703              		.loc 1 1198 0
 1704 005e 6363     		str	r3, [r4, #52]
1202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 1705              		.loc 1 1202 0
 1706 0060 638D     		ldrh	r3, [r4, #42]
 1707 0062 9BB2     		uxth	r3, r3
 1708 0064 FF2B     		cmp	r3, #255
 1709 0066 0AD9     		bls	.L165
1204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_GENERATE_S
 1710              		.loc 1 1204 0
 1711 0068 FF22     		movs	r2, #255
 1712 006a 2285     		strh	r2, [r4, #40]	@ movhi
1205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 1713              		.loc 1 1205 0
 1714 006c 424B     		ldr	r3, .L179
 1715 006e 0093     		str	r3, [sp]
 1716 0070 4FF08073 		mov	r3, #16777216
 1717 0074 3146     		mov	r1, r6
 1718 0076 2046     		mov	r0, r4
 1719 0078 FFF7FEFF 		bl	I2C_TransferConfig
 1720              	.LVL123:
 1721 007c 18E0     		b	.L167
ARM GAS  /tmp/ccX4fpHz.s 			page 149


 1722              	.L165:
1209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_
 1723              		.loc 1 1209 0
 1724 007e 628D     		ldrh	r2, [r4, #42]
 1725 0080 92B2     		uxth	r2, r2
 1726 0082 2285     		strh	r2, [r4, #40]	@ movhi
1210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 1727              		.loc 1 1210 0
 1728 0084 3C4B     		ldr	r3, .L179
 1729 0086 0093     		str	r3, [sp]
 1730 0088 4FF00073 		mov	r3, #33554432
 1731 008c D2B2     		uxtb	r2, r2
 1732 008e 3146     		mov	r1, r6
 1733 0090 2046     		mov	r0, r4
 1734 0092 FFF7FEFF 		bl	I2C_TransferConfig
 1735              	.LVL124:
 1736 0096 0BE0     		b	.L167
 1737              	.L169:
1245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_ST
 1738              		.loc 1 1245 0
 1739 0098 628D     		ldrh	r2, [r4, #42]
 1740 009a 92B2     		uxth	r2, r2
 1741 009c 2285     		strh	r2, [r4, #40]	@ movhi
1246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 1742              		.loc 1 1246 0
 1743 009e 0023     		movs	r3, #0
 1744 00a0 0093     		str	r3, [sp]
 1745 00a2 4FF00073 		mov	r3, #33554432
 1746 00a6 D2B2     		uxtb	r2, r2
 1747 00a8 3146     		mov	r1, r6
 1748 00aa 2046     		mov	r0, r4
 1749 00ac FFF7FEFF 		bl	I2C_TransferConfig
 1750              	.LVL125:
 1751              	.L167:
1213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 1752              		.loc 1 1213 0
 1753 00b0 638D     		ldrh	r3, [r4, #42]
 1754 00b2 9BB2     		uxth	r3, r3
 1755 00b4 002B     		cmp	r3, #0
 1756 00b6 33D0     		beq	.L178
1216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 1757              		.loc 1 1216 0
 1758 00b8 2A46     		mov	r2, r5
 1759 00ba 0A99     		ldr	r1, [sp, #40]
 1760 00bc 2046     		mov	r0, r4
 1761 00be FFF7FEFF 		bl	I2C_WaitOnRXNEFlagUntilTimeout
 1762              	.LVL126:
 1763 00c2 0028     		cmp	r0, #0
 1764 00c4 52D1     		bne	.L174
1222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1765              		.loc 1 1222 0
 1766 00c6 2368     		ldr	r3, [r4]
 1767 00c8 5A6A     		ldr	r2, [r3, #36]
 1768 00ca 636A     		ldr	r3, [r4, #36]
 1769 00cc 1A70     		strb	r2, [r3]
1225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1770              		.loc 1 1225 0
ARM GAS  /tmp/ccX4fpHz.s 			page 150


 1771 00ce 636A     		ldr	r3, [r4, #36]
 1772 00d0 0133     		adds	r3, r3, #1
 1773 00d2 6362     		str	r3, [r4, #36]
1227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount--;
 1774              		.loc 1 1227 0
 1775 00d4 238D     		ldrh	r3, [r4, #40]
 1776 00d6 013B     		subs	r3, r3, #1
 1777 00d8 9BB2     		uxth	r3, r3
 1778 00da 2385     		strh	r3, [r4, #40]	@ movhi
1228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1779              		.loc 1 1228 0
 1780 00dc 628D     		ldrh	r2, [r4, #42]
 1781 00de 013A     		subs	r2, r2, #1
 1782 00e0 92B2     		uxth	r2, r2
 1783 00e2 6285     		strh	r2, [r4, #42]	@ movhi
1230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 1784              		.loc 1 1230 0
 1785 00e4 628D     		ldrh	r2, [r4, #42]
 1786 00e6 92B2     		uxth	r2, r2
 1787 00e8 002A     		cmp	r2, #0
 1788 00ea E1D0     		beq	.L167
1230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 1789              		.loc 1 1230 0 is_stmt 0 discriminator 1
 1790 00ec 002B     		cmp	r3, #0
 1791 00ee DFD1     		bne	.L167
1233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 1792              		.loc 1 1233 0 is_stmt 1
 1793 00f0 0095     		str	r5, [sp]
 1794 00f2 0A9B     		ldr	r3, [sp, #40]
 1795 00f4 0022     		movs	r2, #0
 1796 00f6 8021     		movs	r1, #128
 1797 00f8 2046     		mov	r0, r4
 1798 00fa FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 1799              	.LVL127:
 1800 00fe 0028     		cmp	r0, #0
 1801 0100 36D1     		bne	.L175
1238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 1802              		.loc 1 1238 0
 1803 0102 638D     		ldrh	r3, [r4, #42]
 1804 0104 9BB2     		uxth	r3, r3
 1805 0106 FF2B     		cmp	r3, #255
 1806 0108 C6D9     		bls	.L169
1240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STA
 1807              		.loc 1 1240 0
 1808 010a FF22     		movs	r2, #255
 1809 010c 2285     		strh	r2, [r4, #40]	@ movhi
1241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 1810              		.loc 1 1241 0
 1811 010e 0023     		movs	r3, #0
 1812 0110 0093     		str	r3, [sp]
 1813 0112 4FF08073 		mov	r3, #16777216
 1814 0116 3146     		mov	r1, r6
 1815 0118 2046     		mov	r0, r4
 1816 011a FFF7FEFF 		bl	I2C_TransferConfig
 1817              	.LVL128:
 1818 011e C7E7     		b	.L167
 1819              	.L178:
ARM GAS  /tmp/ccX4fpHz.s 			page 151


1253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 1820              		.loc 1 1253 0
 1821 0120 2A46     		mov	r2, r5
 1822 0122 0A99     		ldr	r1, [sp, #40]
 1823 0124 2046     		mov	r0, r4
 1824 0126 FFF7FEFF 		bl	I2C_WaitOnSTOPFlagUntilTimeout
 1825              	.LVL129:
 1826 012a 0346     		mov	r3, r0
 1827 012c 10BB     		cbnz	r0, .L176
1259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1828              		.loc 1 1259 0
 1829 012e 2268     		ldr	r2, [r4]
 1830 0130 2021     		movs	r1, #32
 1831 0132 D161     		str	r1, [r2, #28]
1262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1832              		.loc 1 1262 0
 1833 0134 2068     		ldr	r0, [r4]
 1834 0136 4268     		ldr	r2, [r0, #4]
 1835 0138 22F0FF72 		bic	r2, r2, #33423360
 1836 013c 22F48B32 		bic	r2, r2, #71168
 1837 0140 22F4FF72 		bic	r2, r2, #510
 1838 0144 22F00102 		bic	r2, r2, #1
 1839 0148 4260     		str	r2, [r0, #4]
1264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
 1840              		.loc 1 1264 0
 1841 014a 84F84110 		strb	r1, [r4, #65]
1265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1842              		.loc 1 1265 0
 1843 014e 0022     		movs	r2, #0
 1844 0150 84F84220 		strb	r2, [r4, #66]
1268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1845              		.loc 1 1268 0
 1846 0154 84F84020 		strb	r2, [r4, #64]
1270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 1847              		.loc 1 1270 0
 1848 0158 00E0     		b	.L164
 1849              	.LVL130:
 1850              	.L171:
1274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 1851              		.loc 1 1274 0
 1852 015a 0223     		movs	r3, #2
 1853              	.LVL131:
 1854              	.L164:
1276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1855              		.loc 1 1276 0
 1856 015c 1846     		mov	r0, r3
 1857 015e 03B0     		add	sp, sp, #12
 1858              	.LCFI29:
 1859              		.cfi_remember_state
 1860              		.cfi_def_cfa_offset 28
 1861              		@ sp needed
 1862 0160 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1863              	.LVL132:
 1864              	.L172:
 1865              	.LCFI30:
 1866              		.cfi_restore_state
1181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/ccX4fpHz.s 			page 152


 1867              		.loc 1 1181 0
 1868 0164 0223     		movs	r3, #2
 1869              	.LVL133:
 1870 0166 F9E7     		b	.L164
 1871              	.LVL134:
 1872              	.L173:
1188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 1873              		.loc 1 1188 0
 1874 0168 0123     		movs	r3, #1
 1875 016a F7E7     		b	.L164
 1876              	.L174:
1218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 1877              		.loc 1 1218 0
 1878 016c 0123     		movs	r3, #1
 1879 016e F5E7     		b	.L164
 1880              	.L175:
1235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 1881              		.loc 1 1235 0
 1882 0170 0123     		movs	r3, #1
 1883 0172 F3E7     		b	.L164
 1884              	.L176:
1255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 1885              		.loc 1 1255 0
 1886 0174 0123     		movs	r3, #1
 1887 0176 F1E7     		b	.L164
 1888              	.L180:
 1889              		.align	2
 1890              	.L179:
 1891 0178 00240080 		.word	-2147474432
 1892              		.cfi_endproc
 1893              	.LFE146:
 1895              		.section	.text.HAL_I2C_Slave_Transmit,"ax",%progbits
 1896              		.align	1
 1897              		.global	HAL_I2C_Slave_Transmit
 1898              		.syntax unified
 1899              		.thumb
 1900              		.thumb_func
 1901              		.fpu fpv5-sp-d16
 1903              	HAL_I2C_Slave_Transmit:
 1904              	.LFB147:
1288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
 1905              		.loc 1 1288 0
 1906              		.cfi_startproc
 1907              		@ args = 0, pretend = 0, frame = 0
 1908              		@ frame_needed = 0, uses_anonymous_args = 0
 1909              	.LVL135:
 1910 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1911              	.LCFI31:
 1912              		.cfi_def_cfa_offset 24
 1913              		.cfi_offset 4, -24
 1914              		.cfi_offset 5, -20
 1915              		.cfi_offset 6, -16
 1916              		.cfi_offset 7, -12
 1917              		.cfi_offset 8, -8
 1918              		.cfi_offset 14, -4
 1919 0004 82B0     		sub	sp, sp, #8
 1920              	.LCFI32:
ARM GAS  /tmp/ccX4fpHz.s 			page 153


 1921              		.cfi_def_cfa_offset 32
1291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 1922              		.loc 1 1291 0
 1923 0006 90F84150 		ldrb	r5, [r0, #65]	@ zero_extendqisi2
 1924 000a EDB2     		uxtb	r5, r5
 1925 000c 202D     		cmp	r5, #32
 1926 000e 40F0BA80 		bne	.L192
1293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 1927              		.loc 1 1293 0
 1928 0012 B2FA82F5 		clz	r5, r2
 1929 0016 6D09     		lsrs	r5, r5, #5
 1930 0018 0029     		cmp	r1, #0
 1931 001a 08BF     		it	eq
 1932 001c 0125     		moveq	r5, #1
 1933 001e 002D     		cmp	r5, #0
 1934 0020 4ED1     		bne	.L196
1299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1935              		.loc 1 1299 0
 1936 0022 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 1937 0026 012C     		cmp	r4, #1
 1938 0028 00F0B280 		beq	.L193
 1939 002c 1F46     		mov	r7, r3
 1940 002e 1646     		mov	r6, r2
 1941 0030 0D46     		mov	r5, r1
 1942 0032 0446     		mov	r4, r0
1299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1943              		.loc 1 1299 0 is_stmt 0 discriminator 2
 1944 0034 0123     		movs	r3, #1
 1945              	.LVL136:
 1946 0036 80F84030 		strb	r3, [r0, #64]
1302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1947              		.loc 1 1302 0 is_stmt 1 discriminator 2
 1948 003a FFF7FEFF 		bl	HAL_GetTick
 1949              	.LVL137:
 1950 003e 8046     		mov	r8, r0
 1951              	.LVL138:
1304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
 1952              		.loc 1 1304 0 discriminator 2
 1953 0040 2123     		movs	r3, #33
 1954 0042 84F84130 		strb	r3, [r4, #65]
1305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 1955              		.loc 1 1305 0 discriminator 2
 1956 0046 2023     		movs	r3, #32
 1957 0048 84F84230 		strb	r3, [r4, #66]
1306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1958              		.loc 1 1306 0 discriminator 2
 1959 004c 0022     		movs	r2, #0
 1960 004e 6264     		str	r2, [r4, #68]
1309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount = Size;
 1961              		.loc 1 1309 0 discriminator 2
 1962 0050 6562     		str	r5, [r4, #36]
1310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 1963              		.loc 1 1310 0 discriminator 2
 1964 0052 6685     		strh	r6, [r4, #42]	@ movhi
1311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1965              		.loc 1 1311 0 discriminator 2
 1966 0054 6263     		str	r2, [r4, #52]
ARM GAS  /tmp/ccX4fpHz.s 			page 154


1314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1967              		.loc 1 1314 0 discriminator 2
 1968 0056 2168     		ldr	r1, [r4]
 1969 0058 4B68     		ldr	r3, [r1, #4]
 1970 005a 23F40043 		bic	r3, r3, #32768
 1971 005e 4B60     		str	r3, [r1, #4]
1317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 1972              		.loc 1 1317 0 discriminator 2
 1973 0060 0090     		str	r0, [sp]
 1974 0062 3B46     		mov	r3, r7
 1975 0064 0821     		movs	r1, #8
 1976 0066 2046     		mov	r0, r4
 1977              	.LVL139:
 1978 0068 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 1979              	.LVL140:
 1980 006c 0028     		cmp	r0, #0
 1981 006e 2CD1     		bne	.L197
1325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1982              		.loc 1 1325 0
 1983 0070 2368     		ldr	r3, [r4]
 1984 0072 0822     		movs	r2, #8
 1985 0074 DA61     		str	r2, [r3, #28]
1328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 1986              		.loc 1 1328 0
 1987 0076 E368     		ldr	r3, [r4, #12]
 1988 0078 022B     		cmp	r3, #2
 1989 007a 2DD0     		beq	.L198
 1990              	.L185:
1343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 1991              		.loc 1 1343 0
 1992 007c CDF80080 		str	r8, [sp]
 1993 0080 3B46     		mov	r3, r7
 1994 0082 0022     		movs	r2, #0
 1995 0084 4FF48031 		mov	r1, #65536
 1996 0088 2046     		mov	r0, r4
 1997 008a FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 1998              	.LVL141:
 1999 008e 0028     		cmp	r0, #0
 2000 0090 36D1     		bne	.L199
 2001              	.L187:
1350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 2002              		.loc 1 1350 0
 2003 0092 638D     		ldrh	r3, [r4, #42]
 2004 0094 9BB2     		uxth	r3, r3
 2005 0096 002B     		cmp	r3, #0
 2006 0098 40D0     		beq	.L200
1353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 2007              		.loc 1 1353 0
 2008 009a 4246     		mov	r2, r8
 2009 009c 3946     		mov	r1, r7
 2010 009e 2046     		mov	r0, r4
 2011 00a0 FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
 2012              	.LVL142:
 2013 00a4 0028     		cmp	r0, #0
 2014 00a6 32D1     		bne	.L201
1361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2015              		.loc 1 1361 0
ARM GAS  /tmp/ccX4fpHz.s 			page 155


 2016 00a8 626A     		ldr	r2, [r4, #36]
 2017 00aa 2368     		ldr	r3, [r4]
 2018 00ac 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2019 00ae 9A62     		str	r2, [r3, #40]
1364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2020              		.loc 1 1364 0
 2021 00b0 636A     		ldr	r3, [r4, #36]
 2022 00b2 0133     		adds	r3, r3, #1
 2023 00b4 6362     		str	r3, [r4, #36]
1366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2024              		.loc 1 1366 0
 2025 00b6 638D     		ldrh	r3, [r4, #42]
 2026 00b8 013B     		subs	r3, r3, #1
 2027 00ba 9BB2     		uxth	r3, r3
 2028 00bc 6385     		strh	r3, [r4, #42]	@ movhi
 2029 00be E8E7     		b	.L187
 2030              	.LVL143:
 2031              	.L196:
1295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
 2032              		.loc 1 1295 0
 2033 00c0 4FF40073 		mov	r3, #512
 2034              	.LVL144:
 2035 00c4 4364     		str	r3, [r0, #68]
1296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2036              		.loc 1 1296 0
 2037 00c6 0123     		movs	r3, #1
 2038 00c8 5EE0     		b	.L182
 2039              	.LVL145:
 2040              	.L197:
1320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
 2041              		.loc 1 1320 0
 2042 00ca 2268     		ldr	r2, [r4]
 2043 00cc 5368     		ldr	r3, [r2, #4]
 2044 00ce 43F40043 		orr	r3, r3, #32768
 2045 00d2 5360     		str	r3, [r2, #4]
1321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2046              		.loc 1 1321 0
 2047 00d4 0123     		movs	r3, #1
 2048 00d6 57E0     		b	.L182
 2049              	.L198:
1331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 2050              		.loc 1 1331 0
 2051 00d8 CDF80080 		str	r8, [sp]
 2052 00dc 3B46     		mov	r3, r7
 2053 00de 0022     		movs	r2, #0
 2054 00e0 0821     		movs	r1, #8
 2055 00e2 2046     		mov	r0, r4
 2056 00e4 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 2057              	.LVL146:
 2058 00e8 18B9     		cbnz	r0, .L202
1339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2059              		.loc 1 1339 0
 2060 00ea 2368     		ldr	r3, [r4]
 2061 00ec 0822     		movs	r2, #8
 2062 00ee DA61     		str	r2, [r3, #28]
 2063 00f0 C4E7     		b	.L185
 2064              	.L202:
ARM GAS  /tmp/ccX4fpHz.s 			page 156


1334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
 2065              		.loc 1 1334 0
 2066 00f2 2268     		ldr	r2, [r4]
 2067 00f4 5368     		ldr	r3, [r2, #4]
 2068 00f6 43F40043 		orr	r3, r3, #32768
 2069 00fa 5360     		str	r3, [r2, #4]
1335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 2070              		.loc 1 1335 0
 2071 00fc 0123     		movs	r3, #1
 2072 00fe 43E0     		b	.L182
 2073              	.L199:
1346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
 2074              		.loc 1 1346 0
 2075 0100 2268     		ldr	r2, [r4]
 2076 0102 5368     		ldr	r3, [r2, #4]
 2077 0104 43F40043 		orr	r3, r3, #32768
 2078 0108 5360     		str	r3, [r2, #4]
1347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2079              		.loc 1 1347 0
 2080 010a 0123     		movs	r3, #1
 2081 010c 3CE0     		b	.L182
 2082              	.L201:
1356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
 2083              		.loc 1 1356 0
 2084 010e 2268     		ldr	r2, [r4]
 2085 0110 5368     		ldr	r3, [r2, #4]
 2086 0112 43F40043 		orr	r3, r3, #32768
 2087 0116 5360     		str	r3, [r2, #4]
1357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 2088              		.loc 1 1357 0
 2089 0118 0123     		movs	r3, #1
 2090 011a 35E0     		b	.L182
 2091              	.L200:
1370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 2092              		.loc 1 1370 0
 2093 011c 4246     		mov	r2, r8
 2094 011e 3946     		mov	r1, r7
 2095 0120 2046     		mov	r0, r4
 2096 0122 FFF7FEFF 		bl	I2C_WaitOnSTOPFlagUntilTimeout
 2097              	.LVL147:
 2098 0126 58B1     		cbz	r0, .L190
1373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2099              		.loc 1 1373 0
 2100 0128 2268     		ldr	r2, [r4]
 2101 012a 5368     		ldr	r3, [r2, #4]
 2102 012c 43F40043 		orr	r3, r3, #32768
 2103 0130 5360     		str	r3, [r2, #4]
1375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 2104              		.loc 1 1375 0
 2105 0132 636C     		ldr	r3, [r4, #68]
 2106 0134 042B     		cmp	r3, #4
 2107 0136 01D0     		beq	.L203
1383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 2108              		.loc 1 1383 0
 2109 0138 0123     		movs	r3, #1
 2110 013a 25E0     		b	.L182
 2111              	.L203:
ARM GAS  /tmp/ccX4fpHz.s 			page 157


1379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 2112              		.loc 1 1379 0
 2113 013c 0023     		movs	r3, #0
 2114 013e 6364     		str	r3, [r4, #68]
 2115              	.L190:
1388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2116              		.loc 1 1388 0
 2117 0140 2368     		ldr	r3, [r4]
 2118 0142 2022     		movs	r2, #32
 2119 0144 DA61     		str	r2, [r3, #28]
1391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 2120              		.loc 1 1391 0
 2121 0146 CDF80080 		str	r8, [sp]
 2122 014a 3B46     		mov	r3, r7
 2123 014c 0122     		movs	r2, #1
 2124 014e 4FF40041 		mov	r1, #32768
 2125 0152 2046     		mov	r0, r4
 2126 0154 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 2127              	.LVL148:
 2128 0158 0346     		mov	r3, r0
 2129 015a 68B9     		cbnz	r0, .L204
1399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2130              		.loc 1 1399 0
 2131 015c 2168     		ldr	r1, [r4]
 2132 015e 4A68     		ldr	r2, [r1, #4]
 2133 0160 42F40042 		orr	r2, r2, #32768
 2134 0164 4A60     		str	r2, [r1, #4]
1401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
 2135              		.loc 1 1401 0
 2136 0166 2022     		movs	r2, #32
 2137 0168 84F84120 		strb	r2, [r4, #65]
1402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2138              		.loc 1 1402 0
 2139 016c 0022     		movs	r2, #0
 2140 016e 84F84220 		strb	r2, [r4, #66]
1405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2141              		.loc 1 1405 0
 2142 0172 84F84020 		strb	r2, [r4, #64]
1407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 2143              		.loc 1 1407 0
 2144 0176 07E0     		b	.L182
 2145              	.L204:
1394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
 2146              		.loc 1 1394 0
 2147 0178 2268     		ldr	r2, [r4]
 2148 017a 5368     		ldr	r3, [r2, #4]
 2149 017c 43F40043 		orr	r3, r3, #32768
 2150 0180 5360     		str	r3, [r2, #4]
1395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2151              		.loc 1 1395 0
 2152 0182 0123     		movs	r3, #1
 2153 0184 00E0     		b	.L182
 2154              	.LVL149:
 2155              	.L192:
1411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 2156              		.loc 1 1411 0
 2157 0186 0223     		movs	r3, #2
ARM GAS  /tmp/ccX4fpHz.s 			page 158


 2158              	.LVL150:
 2159              	.L182:
1413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2160              		.loc 1 1413 0
 2161 0188 1846     		mov	r0, r3
 2162 018a 02B0     		add	sp, sp, #8
 2163              	.LCFI33:
 2164              		.cfi_remember_state
 2165              		.cfi_def_cfa_offset 24
 2166              		@ sp needed
 2167 018c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2168              	.LVL151:
 2169              	.L193:
 2170              	.LCFI34:
 2171              		.cfi_restore_state
1299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2172              		.loc 1 1299 0
 2173 0190 0223     		movs	r3, #2
 2174              	.LVL152:
 2175 0192 F9E7     		b	.L182
 2176              		.cfi_endproc
 2177              	.LFE147:
 2179              		.section	.text.HAL_I2C_Slave_Receive,"ax",%progbits
 2180              		.align	1
 2181              		.global	HAL_I2C_Slave_Receive
 2182              		.syntax unified
 2183              		.thumb
 2184              		.thumb_func
 2185              		.fpu fpv5-sp-d16
 2187              	HAL_I2C_Slave_Receive:
 2188              	.LFB148:
1425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
 2189              		.loc 1 1425 0
 2190              		.cfi_startproc
 2191              		@ args = 0, pretend = 0, frame = 0
 2192              		@ frame_needed = 0, uses_anonymous_args = 0
 2193              	.LVL153:
 2194 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2195              	.LCFI35:
 2196              		.cfi_def_cfa_offset 24
 2197              		.cfi_offset 4, -24
 2198              		.cfi_offset 5, -20
 2199              		.cfi_offset 6, -16
 2200              		.cfi_offset 7, -12
 2201              		.cfi_offset 8, -8
 2202              		.cfi_offset 14, -4
 2203 0004 82B0     		sub	sp, sp, #8
 2204              	.LCFI36:
 2205              		.cfi_def_cfa_offset 32
1428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 2206              		.loc 1 1428 0
 2207 0006 90F84150 		ldrb	r5, [r0, #65]	@ zero_extendqisi2
 2208 000a EDB2     		uxtb	r5, r5
 2209 000c 202D     		cmp	r5, #32
 2210 000e 40F0A980 		bne	.L214
1430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 2211              		.loc 1 1430 0
ARM GAS  /tmp/ccX4fpHz.s 			page 159


 2212 0012 B2FA82F5 		clz	r5, r2
 2213 0016 6D09     		lsrs	r5, r5, #5
 2214 0018 0029     		cmp	r1, #0
 2215 001a 08BF     		it	eq
 2216 001c 0125     		moveq	r5, #1
 2217 001e 65BB     		cbnz	r5, .L218
1436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2218              		.loc 1 1436 0
 2219 0020 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 2220 0024 012C     		cmp	r4, #1
 2221 0026 00F0A280 		beq	.L215
 2222 002a 1F46     		mov	r7, r3
 2223 002c 1646     		mov	r6, r2
 2224 002e 0D46     		mov	r5, r1
 2225 0030 0446     		mov	r4, r0
1436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2226              		.loc 1 1436 0 is_stmt 0 discriminator 2
 2227 0032 0123     		movs	r3, #1
 2228              	.LVL154:
 2229 0034 80F84030 		strb	r3, [r0, #64]
1439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2230              		.loc 1 1439 0 is_stmt 1 discriminator 2
 2231 0038 FFF7FEFF 		bl	HAL_GetTick
 2232              	.LVL155:
 2233 003c 8046     		mov	r8, r0
 2234              	.LVL156:
1441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
 2235              		.loc 1 1441 0 discriminator 2
 2236 003e 2223     		movs	r3, #34
 2237 0040 84F84130 		strb	r3, [r4, #65]
1442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 2238              		.loc 1 1442 0 discriminator 2
 2239 0044 2023     		movs	r3, #32
 2240 0046 84F84230 		strb	r3, [r4, #66]
1443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2241              		.loc 1 1443 0 discriminator 2
 2242 004a 0022     		movs	r2, #0
 2243 004c 6264     		str	r2, [r4, #68]
1446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount = Size;
 2244              		.loc 1 1446 0 discriminator 2
 2245 004e 6562     		str	r5, [r4, #36]
1447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 2246              		.loc 1 1447 0 discriminator 2
 2247 0050 6685     		strh	r6, [r4, #42]	@ movhi
1448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2248              		.loc 1 1448 0 discriminator 2
 2249 0052 6263     		str	r2, [r4, #52]
1451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2250              		.loc 1 1451 0 discriminator 2
 2251 0054 2168     		ldr	r1, [r4]
 2252 0056 4B68     		ldr	r3, [r1, #4]
 2253 0058 23F40043 		bic	r3, r3, #32768
 2254 005c 4B60     		str	r3, [r1, #4]
1454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 2255              		.loc 1 1454 0 discriminator 2
 2256 005e 0090     		str	r0, [sp]
 2257 0060 3B46     		mov	r3, r7
ARM GAS  /tmp/ccX4fpHz.s 			page 160


 2258 0062 0821     		movs	r1, #8
 2259 0064 2046     		mov	r0, r4
 2260              	.LVL157:
 2261 0066 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 2262              	.LVL158:
 2263 006a 58B1     		cbz	r0, .L208
1457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
 2264              		.loc 1 1457 0
 2265 006c 2268     		ldr	r2, [r4]
 2266 006e 5368     		ldr	r3, [r2, #4]
 2267 0070 43F40043 		orr	r3, r3, #32768
 2268 0074 5360     		str	r3, [r2, #4]
1458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2269              		.loc 1 1458 0
 2270 0076 0123     		movs	r3, #1
 2271 0078 75E0     		b	.L206
 2272              	.LVL159:
 2273              	.L218:
1432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
 2274              		.loc 1 1432 0
 2275 007a 4FF40073 		mov	r3, #512
 2276              	.LVL160:
 2277 007e 4364     		str	r3, [r0, #68]
1433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2278              		.loc 1 1433 0
 2279 0080 0123     		movs	r3, #1
 2280 0082 70E0     		b	.L206
 2281              	.LVL161:
 2282              	.L208:
1462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2283              		.loc 1 1462 0
 2284 0084 2368     		ldr	r3, [r4]
 2285 0086 0822     		movs	r2, #8
 2286 0088 DA61     		str	r2, [r3, #28]
1465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 2287              		.loc 1 1465 0
 2288 008a CDF80080 		str	r8, [sp]
 2289 008e 3B46     		mov	r3, r7
 2290 0090 0122     		movs	r2, #1
 2291 0092 4FF48031 		mov	r1, #65536
 2292 0096 2046     		mov	r0, r4
 2293 0098 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 2294              	.LVL162:
 2295 009c A8B9     		cbnz	r0, .L219
 2296              	.L209:
1472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 2297              		.loc 1 1472 0
 2298 009e 638D     		ldrh	r3, [r4, #42]
 2299 00a0 9BB2     		uxth	r3, r3
 2300 00a2 002B     		cmp	r3, #0
 2301 00a4 2ED0     		beq	.L220
1475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 2302              		.loc 1 1475 0
 2303 00a6 4246     		mov	r2, r8
 2304 00a8 3946     		mov	r1, r7
 2305 00aa 2046     		mov	r0, r4
 2306 00ac FFF7FEFF 		bl	I2C_WaitOnRXNEFlagUntilTimeout
ARM GAS  /tmp/ccX4fpHz.s 			page 161


 2307              	.LVL163:
 2308 00b0 90B9     		cbnz	r0, .L221
1496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2309              		.loc 1 1496 0
 2310 00b2 2368     		ldr	r3, [r4]
 2311 00b4 5A6A     		ldr	r2, [r3, #36]
 2312 00b6 636A     		ldr	r3, [r4, #36]
 2313 00b8 1A70     		strb	r2, [r3]
1499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2314              		.loc 1 1499 0
 2315 00ba 636A     		ldr	r3, [r4, #36]
 2316 00bc 0133     		adds	r3, r3, #1
 2317 00be 6362     		str	r3, [r4, #36]
1501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2318              		.loc 1 1501 0
 2319 00c0 638D     		ldrh	r3, [r4, #42]
 2320 00c2 013B     		subs	r3, r3, #1
 2321 00c4 9BB2     		uxth	r3, r3
 2322 00c6 6385     		strh	r3, [r4, #42]	@ movhi
 2323 00c8 E9E7     		b	.L209
 2324              	.L219:
1468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
 2325              		.loc 1 1468 0
 2326 00ca 2268     		ldr	r2, [r4]
 2327 00cc 5368     		ldr	r3, [r2, #4]
 2328 00ce 43F40043 		orr	r3, r3, #32768
 2329 00d2 5360     		str	r3, [r2, #4]
1469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2330              		.loc 1 1469 0
 2331 00d4 0123     		movs	r3, #1
 2332 00d6 46E0     		b	.L206
 2333              	.L221:
1478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2334              		.loc 1 1478 0
 2335 00d8 2268     		ldr	r2, [r4]
 2336 00da 5368     		ldr	r3, [r2, #4]
 2337 00dc 43F40043 		orr	r3, r3, #32768
 2338 00e0 5360     		str	r3, [r2, #4]
1481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 2339              		.loc 1 1481 0
 2340 00e2 2368     		ldr	r3, [r4]
 2341 00e4 9A69     		ldr	r2, [r3, #24]
 2342 00e6 12F0040F 		tst	r2, #4
 2343 00ea 42D0     		beq	.L216
1484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2344              		.loc 1 1484 0
 2345 00ec 5A6A     		ldr	r2, [r3, #36]
 2346 00ee 636A     		ldr	r3, [r4, #36]
 2347 00f0 1A70     		strb	r2, [r3]
1487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2348              		.loc 1 1487 0
 2349 00f2 636A     		ldr	r3, [r4, #36]
 2350 00f4 0133     		adds	r3, r3, #1
 2351 00f6 6362     		str	r3, [r4, #36]
1489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 2352              		.loc 1 1489 0
 2353 00f8 638D     		ldrh	r3, [r4, #42]
ARM GAS  /tmp/ccX4fpHz.s 			page 162


 2354 00fa 013B     		subs	r3, r3, #1
 2355 00fc 9BB2     		uxth	r3, r3
 2356 00fe 6385     		strh	r3, [r4, #42]	@ movhi
1492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 2357              		.loc 1 1492 0
 2358 0100 0123     		movs	r3, #1
 2359 0102 30E0     		b	.L206
 2360              	.L220:
1505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 2361              		.loc 1 1505 0
 2362 0104 4246     		mov	r2, r8
 2363 0106 3946     		mov	r1, r7
 2364 0108 2046     		mov	r0, r4
 2365 010a FFF7FEFF 		bl	I2C_WaitOnSTOPFlagUntilTimeout
 2366              	.LVL164:
 2367 010e 30B1     		cbz	r0, .L212
1508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
 2368              		.loc 1 1508 0
 2369 0110 2268     		ldr	r2, [r4]
 2370 0112 5368     		ldr	r3, [r2, #4]
 2371 0114 43F40043 		orr	r3, r3, #32768
 2372 0118 5360     		str	r3, [r2, #4]
1509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2373              		.loc 1 1509 0
 2374 011a 0123     		movs	r3, #1
 2375 011c 23E0     		b	.L206
 2376              	.L212:
1513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2377              		.loc 1 1513 0
 2378 011e 2368     		ldr	r3, [r4]
 2379 0120 2022     		movs	r2, #32
 2380 0122 DA61     		str	r2, [r3, #28]
1516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 2381              		.loc 1 1516 0
 2382 0124 CDF80080 		str	r8, [sp]
 2383 0128 3B46     		mov	r3, r7
 2384 012a 0122     		movs	r2, #1
 2385 012c 4FF40041 		mov	r1, #32768
 2386 0130 2046     		mov	r0, r4
 2387 0132 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 2388              	.LVL165:
 2389 0136 0346     		mov	r3, r0
 2390 0138 68B9     		cbnz	r0, .L222
1524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2391              		.loc 1 1524 0
 2392 013a 2168     		ldr	r1, [r4]
 2393 013c 4A68     		ldr	r2, [r1, #4]
 2394 013e 42F40042 		orr	r2, r2, #32768
 2395 0142 4A60     		str	r2, [r1, #4]
1526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
 2396              		.loc 1 1526 0
 2397 0144 2022     		movs	r2, #32
 2398 0146 84F84120 		strb	r2, [r4, #65]
1527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2399              		.loc 1 1527 0
 2400 014a 0022     		movs	r2, #0
 2401 014c 84F84220 		strb	r2, [r4, #66]
ARM GAS  /tmp/ccX4fpHz.s 			page 163


1530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2402              		.loc 1 1530 0
 2403 0150 84F84020 		strb	r2, [r4, #64]
1532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 2404              		.loc 1 1532 0
 2405 0154 07E0     		b	.L206
 2406              	.L222:
1519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
 2407              		.loc 1 1519 0
 2408 0156 2268     		ldr	r2, [r4]
 2409 0158 5368     		ldr	r3, [r2, #4]
 2410 015a 43F40043 		orr	r3, r3, #32768
 2411 015e 5360     		str	r3, [r2, #4]
1520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2412              		.loc 1 1520 0
 2413 0160 0123     		movs	r3, #1
 2414 0162 00E0     		b	.L206
 2415              	.LVL166:
 2416              	.L214:
1536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 2417              		.loc 1 1536 0
 2418 0164 0223     		movs	r3, #2
 2419              	.LVL167:
 2420              	.L206:
1538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2421              		.loc 1 1538 0
 2422 0166 1846     		mov	r0, r3
 2423 0168 02B0     		add	sp, sp, #8
 2424              	.LCFI37:
 2425              		.cfi_remember_state
 2426              		.cfi_def_cfa_offset 24
 2427              		@ sp needed
 2428 016a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2429              	.LVL168:
 2430              	.L215:
 2431              	.LCFI38:
 2432              		.cfi_restore_state
1436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2433              		.loc 1 1436 0
 2434 016e 0223     		movs	r3, #2
 2435              	.LVL169:
 2436 0170 F9E7     		b	.L206
 2437              	.LVL170:
 2438              	.L216:
1492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 2439              		.loc 1 1492 0
 2440 0172 0123     		movs	r3, #1
 2441 0174 F7E7     		b	.L206
 2442              		.cfi_endproc
 2443              	.LFE148:
 2445              		.section	.text.HAL_I2C_Master_Transmit_IT,"ax",%progbits
 2446              		.align	1
 2447              		.global	HAL_I2C_Master_Transmit_IT
 2448              		.syntax unified
 2449              		.thumb
 2450              		.thumb_func
 2451              		.fpu fpv5-sp-d16
ARM GAS  /tmp/ccX4fpHz.s 			page 164


 2453              	HAL_I2C_Master_Transmit_IT:
 2454              	.LFB149:
1551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
 2455              		.loc 1 1551 0
 2456              		.cfi_startproc
 2457              		@ args = 0, pretend = 0, frame = 0
 2458              		@ frame_needed = 0, uses_anonymous_args = 0
 2459              	.LVL171:
 2460 0000 30B5     		push	{r4, r5, lr}
 2461              	.LCFI39:
 2462              		.cfi_def_cfa_offset 12
 2463              		.cfi_offset 4, -12
 2464              		.cfi_offset 5, -8
 2465              		.cfi_offset 14, -4
 2466 0002 83B0     		sub	sp, sp, #12
 2467              	.LCFI40:
 2468              		.cfi_def_cfa_offset 24
1554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 2469              		.loc 1 1554 0
 2470 0004 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 2471 0008 E4B2     		uxtb	r4, r4
 2472 000a 202C     		cmp	r4, #32
 2473 000c 37D1     		bne	.L227
1556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 2474              		.loc 1 1556 0
 2475 000e 0468     		ldr	r4, [r0]
 2476 0010 A469     		ldr	r4, [r4, #24]
 2477 0012 14F4004F 		tst	r4, #32768
 2478 0016 35D1     		bne	.L228
1562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2479              		.loc 1 1562 0
 2480 0018 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 2481 001c 012C     		cmp	r4, #1
 2482 001e 33D0     		beq	.L229
1562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2483              		.loc 1 1562 0 is_stmt 0 discriminator 2
 2484 0020 0124     		movs	r4, #1
 2485 0022 80F84040 		strb	r4, [r0, #64]
1564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
 2486              		.loc 1 1564 0 is_stmt 1 discriminator 2
 2487 0026 2124     		movs	r4, #33
 2488 0028 80F84140 		strb	r4, [r0, #65]
1565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 2489              		.loc 1 1565 0 discriminator 2
 2490 002c 1024     		movs	r4, #16
 2491 002e 80F84240 		strb	r4, [r0, #66]
1566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2492              		.loc 1 1566 0 discriminator 2
 2493 0032 0024     		movs	r4, #0
 2494 0034 4464     		str	r4, [r0, #68]
1569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 2495              		.loc 1 1569 0 discriminator 2
 2496 0036 4262     		str	r2, [r0, #36]
1570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 2497              		.loc 1 1570 0 discriminator 2
 2498 0038 4385     		strh	r3, [r0, #42]	@ movhi
1571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
ARM GAS  /tmp/ccX4fpHz.s 			page 165


 2499              		.loc 1 1571 0 discriminator 2
 2500 003a 144B     		ldr	r3, .L231
 2501              	.LVL172:
 2502 003c C362     		str	r3, [r0, #44]
 2503              	.LVL173:
1572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2504              		.loc 1 1572 0 discriminator 2
 2505 003e 144B     		ldr	r3, .L231+4
 2506 0040 4363     		str	r3, [r0, #52]
1574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 2507              		.loc 1 1574 0 discriminator 2
 2508 0042 438D     		ldrh	r3, [r0, #42]
 2509 0044 9BB2     		uxth	r3, r3
 2510 0046 FF2B     		cmp	r3, #255
 2511 0048 14D9     		bls	.L225
1576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 2512              		.loc 1 1576 0
 2513 004a FF23     		movs	r3, #255
 2514 004c 0385     		strh	r3, [r0, #40]	@ movhi
 2515              	.LVL174:
1577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2516              		.loc 1 1577 0
 2517 004e 4FF08073 		mov	r3, #16777216
 2518              	.LVL175:
 2519              	.L226:
 2520 0052 0446     		mov	r4, r0
 2521              	.LVL176:
1587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2522              		.loc 1 1587 0
 2523 0054 90F82820 		ldrb	r2, [r0, #40]	@ zero_extendqisi2
 2524              	.LVL177:
 2525 0058 0E48     		ldr	r0, .L231+8
 2526              	.LVL178:
 2527 005a 0090     		str	r0, [sp]
 2528              	.LVL179:
 2529 005c 2046     		mov	r0, r4
 2530 005e FFF7FEFF 		bl	I2C_TransferConfig
 2531              	.LVL180:
1590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2532              		.loc 1 1590 0
 2533 0062 0025     		movs	r5, #0
 2534 0064 84F84050 		strb	r5, [r4, #64]
1599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2535              		.loc 1 1599 0
 2536 0068 0121     		movs	r1, #1
 2537 006a 2046     		mov	r0, r4
 2538 006c FFF7FEFF 		bl	I2C_Enable_IRQ
 2539              	.LVL181:
1601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 2540              		.loc 1 1601 0
 2541 0070 2846     		mov	r0, r5
 2542 0072 05E0     		b	.L224
 2543              	.LVL182:
 2544              	.L225:
1581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 2545              		.loc 1 1581 0
 2546 0074 438D     		ldrh	r3, [r0, #42]
ARM GAS  /tmp/ccX4fpHz.s 			page 166


 2547 0076 0385     		strh	r3, [r0, #40]	@ movhi
 2548              	.LVL183:
1582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2549              		.loc 1 1582 0
 2550 0078 4FF00073 		mov	r3, #33554432
 2551 007c E9E7     		b	.L226
 2552              	.LVL184:
 2553              	.L227:
1605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 2554              		.loc 1 1605 0
 2555 007e 0220     		movs	r0, #2
 2556              	.LVL185:
 2557              	.L224:
1607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2558              		.loc 1 1607 0
 2559 0080 03B0     		add	sp, sp, #12
 2560              	.LCFI41:
 2561              		.cfi_remember_state
 2562              		.cfi_def_cfa_offset 12
 2563              		@ sp needed
 2564 0082 30BD     		pop	{r4, r5, pc}
 2565              	.LVL186:
 2566              	.L228:
 2567              	.LCFI42:
 2568              		.cfi_restore_state
1558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2569              		.loc 1 1558 0
 2570 0084 0220     		movs	r0, #2
 2571              	.LVL187:
 2572 0086 FBE7     		b	.L224
 2573              	.LVL188:
 2574              	.L229:
1562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2575              		.loc 1 1562 0
 2576 0088 0220     		movs	r0, #2
 2577              	.LVL189:
 2578 008a F9E7     		b	.L224
 2579              	.L232:
 2580              		.align	2
 2581              	.L231:
 2582 008c 0000FFFF 		.word	-65536
 2583 0090 00000000 		.word	I2C_Master_ISR_IT
 2584 0094 00200080 		.word	-2147475456
 2585              		.cfi_endproc
 2586              	.LFE149:
 2588              		.section	.text.HAL_I2C_Master_Receive_IT,"ax",%progbits
 2589              		.align	1
 2590              		.global	HAL_I2C_Master_Receive_IT
 2591              		.syntax unified
 2592              		.thumb
 2593              		.thumb_func
 2594              		.fpu fpv5-sp-d16
 2596              	HAL_I2C_Master_Receive_IT:
 2597              	.LFB150:
1620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
 2598              		.loc 1 1620 0
 2599              		.cfi_startproc
ARM GAS  /tmp/ccX4fpHz.s 			page 167


 2600              		@ args = 0, pretend = 0, frame = 0
 2601              		@ frame_needed = 0, uses_anonymous_args = 0
 2602              	.LVL190:
 2603 0000 30B5     		push	{r4, r5, lr}
 2604              	.LCFI43:
 2605              		.cfi_def_cfa_offset 12
 2606              		.cfi_offset 4, -12
 2607              		.cfi_offset 5, -8
 2608              		.cfi_offset 14, -4
 2609 0002 83B0     		sub	sp, sp, #12
 2610              	.LCFI44:
 2611              		.cfi_def_cfa_offset 24
1623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 2612              		.loc 1 1623 0
 2613 0004 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 2614 0008 E4B2     		uxtb	r4, r4
 2615 000a 202C     		cmp	r4, #32
 2616 000c 37D1     		bne	.L237
1625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 2617              		.loc 1 1625 0
 2618 000e 0468     		ldr	r4, [r0]
 2619 0010 A469     		ldr	r4, [r4, #24]
 2620 0012 14F4004F 		tst	r4, #32768
 2621 0016 35D1     		bne	.L238
1631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2622              		.loc 1 1631 0
 2623 0018 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 2624 001c 012C     		cmp	r4, #1
 2625 001e 33D0     		beq	.L239
1631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2626              		.loc 1 1631 0 is_stmt 0 discriminator 2
 2627 0020 0124     		movs	r4, #1
 2628 0022 80F84040 		strb	r4, [r0, #64]
1633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
 2629              		.loc 1 1633 0 is_stmt 1 discriminator 2
 2630 0026 2224     		movs	r4, #34
 2631 0028 80F84140 		strb	r4, [r0, #65]
1634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 2632              		.loc 1 1634 0 discriminator 2
 2633 002c 1024     		movs	r4, #16
 2634 002e 80F84240 		strb	r4, [r0, #66]
1635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2635              		.loc 1 1635 0 discriminator 2
 2636 0032 0024     		movs	r4, #0
 2637 0034 4464     		str	r4, [r0, #68]
1638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 2638              		.loc 1 1638 0 discriminator 2
 2639 0036 4262     		str	r2, [r0, #36]
1639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 2640              		.loc 1 1639 0 discriminator 2
 2641 0038 4385     		strh	r3, [r0, #42]	@ movhi
1640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
 2642              		.loc 1 1640 0 discriminator 2
 2643 003a 144B     		ldr	r3, .L241
 2644              	.LVL191:
 2645 003c C362     		str	r3, [r0, #44]
 2646              	.LVL192:
ARM GAS  /tmp/ccX4fpHz.s 			page 168


1641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2647              		.loc 1 1641 0 discriminator 2
 2648 003e 144B     		ldr	r3, .L241+4
 2649 0040 4363     		str	r3, [r0, #52]
1643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 2650              		.loc 1 1643 0 discriminator 2
 2651 0042 438D     		ldrh	r3, [r0, #42]
 2652 0044 9BB2     		uxth	r3, r3
 2653 0046 FF2B     		cmp	r3, #255
 2654 0048 14D9     		bls	.L235
1645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 2655              		.loc 1 1645 0
 2656 004a FF23     		movs	r3, #255
 2657 004c 0385     		strh	r3, [r0, #40]	@ movhi
 2658              	.LVL193:
1646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2659              		.loc 1 1646 0
 2660 004e 4FF08073 		mov	r3, #16777216
 2661              	.LVL194:
 2662              	.L236:
 2663 0052 0446     		mov	r4, r0
 2664              	.LVL195:
1656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2665              		.loc 1 1656 0
 2666 0054 90F82820 		ldrb	r2, [r0, #40]	@ zero_extendqisi2
 2667              	.LVL196:
 2668 0058 0E48     		ldr	r0, .L241+8
 2669              	.LVL197:
 2670 005a 0090     		str	r0, [sp]
 2671              	.LVL198:
 2672 005c 2046     		mov	r0, r4
 2673 005e FFF7FEFF 		bl	I2C_TransferConfig
 2674              	.LVL199:
1659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2675              		.loc 1 1659 0
 2676 0062 0025     		movs	r5, #0
 2677 0064 84F84050 		strb	r5, [r4, #64]
1668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2678              		.loc 1 1668 0
 2679 0068 0221     		movs	r1, #2
 2680 006a 2046     		mov	r0, r4
 2681 006c FFF7FEFF 		bl	I2C_Enable_IRQ
 2682              	.LVL200:
1670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 2683              		.loc 1 1670 0
 2684 0070 2846     		mov	r0, r5
 2685 0072 05E0     		b	.L234
 2686              	.LVL201:
 2687              	.L235:
1650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 2688              		.loc 1 1650 0
 2689 0074 438D     		ldrh	r3, [r0, #42]
 2690 0076 0385     		strh	r3, [r0, #40]	@ movhi
 2691              	.LVL202:
1651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2692              		.loc 1 1651 0
 2693 0078 4FF00073 		mov	r3, #33554432
ARM GAS  /tmp/ccX4fpHz.s 			page 169


 2694 007c E9E7     		b	.L236
 2695              	.LVL203:
 2696              	.L237:
1674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 2697              		.loc 1 1674 0
 2698 007e 0220     		movs	r0, #2
 2699              	.LVL204:
 2700              	.L234:
1676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2701              		.loc 1 1676 0
 2702 0080 03B0     		add	sp, sp, #12
 2703              	.LCFI45:
 2704              		.cfi_remember_state
 2705              		.cfi_def_cfa_offset 12
 2706              		@ sp needed
 2707 0082 30BD     		pop	{r4, r5, pc}
 2708              	.LVL205:
 2709              	.L238:
 2710              	.LCFI46:
 2711              		.cfi_restore_state
1627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2712              		.loc 1 1627 0
 2713 0084 0220     		movs	r0, #2
 2714              	.LVL206:
 2715 0086 FBE7     		b	.L234
 2716              	.LVL207:
 2717              	.L239:
1631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2718              		.loc 1 1631 0
 2719 0088 0220     		movs	r0, #2
 2720              	.LVL208:
 2721 008a F9E7     		b	.L234
 2722              	.L242:
 2723              		.align	2
 2724              	.L241:
 2725 008c 0000FFFF 		.word	-65536
 2726 0090 00000000 		.word	I2C_Master_ISR_IT
 2727 0094 00240080 		.word	-2147474432
 2728              		.cfi_endproc
 2729              	.LFE150:
 2731              		.section	.text.HAL_I2C_Slave_Transmit_IT,"ax",%progbits
 2732              		.align	1
 2733              		.global	HAL_I2C_Slave_Transmit_IT
 2734              		.syntax unified
 2735              		.thumb
 2736              		.thumb_func
 2737              		.fpu fpv5-sp-d16
 2739              	HAL_I2C_Slave_Transmit_IT:
 2740              	.LFB151:
1687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
 2741              		.loc 1 1687 0
 2742              		.cfi_startproc
 2743              		@ args = 0, pretend = 0, frame = 0
 2744              		@ frame_needed = 0, uses_anonymous_args = 0
 2745              	.LVL209:
 2746 0000 38B5     		push	{r3, r4, r5, lr}
 2747              	.LCFI47:
ARM GAS  /tmp/ccX4fpHz.s 			page 170


 2748              		.cfi_def_cfa_offset 16
 2749              		.cfi_offset 3, -16
 2750              		.cfi_offset 4, -12
 2751              		.cfi_offset 5, -8
 2752              		.cfi_offset 14, -4
1688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 2753              		.loc 1 1688 0
 2754 0002 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 2755 0006 DBB2     		uxtb	r3, r3
 2756 0008 202B     		cmp	r3, #32
 2757 000a 22D1     		bne	.L245
1691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2758              		.loc 1 1691 0
 2759 000c 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 2760 0010 012B     		cmp	r3, #1
 2761 0012 20D0     		beq	.L246
1691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2762              		.loc 1 1691 0 is_stmt 0 discriminator 2
 2763 0014 0123     		movs	r3, #1
 2764 0016 80F84030 		strb	r3, [r0, #64]
1693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
 2765              		.loc 1 1693 0 is_stmt 1 discriminator 2
 2766 001a 2123     		movs	r3, #33
 2767 001c 80F84130 		strb	r3, [r0, #65]
1694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 2768              		.loc 1 1694 0 discriminator 2
 2769 0020 2023     		movs	r3, #32
 2770 0022 80F84230 		strb	r3, [r0, #66]
1695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2771              		.loc 1 1695 0 discriminator 2
 2772 0026 0024     		movs	r4, #0
 2773 0028 4464     		str	r4, [r0, #68]
1698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2774              		.loc 1 1698 0 discriminator 2
 2775 002a 0568     		ldr	r5, [r0]
 2776 002c 6B68     		ldr	r3, [r5, #4]
 2777 002e 23F40043 		bic	r3, r3, #32768
 2778 0032 6B60     		str	r3, [r5, #4]
1701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 2779              		.loc 1 1701 0 discriminator 2
 2780 0034 4162     		str	r1, [r0, #36]
1702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
 2781              		.loc 1 1702 0 discriminator 2
 2782 0036 4285     		strh	r2, [r0, #42]	@ movhi
1703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 2783              		.loc 1 1703 0 discriminator 2
 2784 0038 438D     		ldrh	r3, [r0, #42]
 2785 003a 0385     		strh	r3, [r0, #40]	@ movhi
1704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
 2786              		.loc 1 1704 0 discriminator 2
 2787 003c 074B     		ldr	r3, .L248
 2788 003e C362     		str	r3, [r0, #44]
1705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2789              		.loc 1 1705 0 discriminator 2
 2790 0040 074B     		ldr	r3, .L248+4
 2791 0042 4363     		str	r3, [r0, #52]
1708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/ccX4fpHz.s 			page 171


 2792              		.loc 1 1708 0 discriminator 2
 2793 0044 80F84040 		strb	r4, [r0, #64]
1717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2794              		.loc 1 1717 0 discriminator 2
 2795 0048 0521     		movs	r1, #5
 2796              	.LVL210:
 2797 004a FFF7FEFF 		bl	I2C_Enable_IRQ
 2798              	.LVL211:
1719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 2799              		.loc 1 1719 0 discriminator 2
 2800 004e 2046     		mov	r0, r4
 2801 0050 00E0     		b	.L244
 2802              	.LVL212:
 2803              	.L245:
1723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 2804              		.loc 1 1723 0
 2805 0052 0220     		movs	r0, #2
 2806              	.LVL213:
 2807              	.L244:
1725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2808              		.loc 1 1725 0
 2809 0054 38BD     		pop	{r3, r4, r5, pc}
 2810              	.LVL214:
 2811              	.L246:
1691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2812              		.loc 1 1691 0
 2813 0056 0220     		movs	r0, #2
 2814              	.LVL215:
 2815 0058 FCE7     		b	.L244
 2816              	.L249:
 2817 005a 00BF     		.align	2
 2818              	.L248:
 2819 005c 0000FFFF 		.word	-65536
 2820 0060 00000000 		.word	I2C_Slave_ISR_IT
 2821              		.cfi_endproc
 2822              	.LFE151:
 2824              		.section	.text.HAL_I2C_Slave_Receive_IT,"ax",%progbits
 2825              		.align	1
 2826              		.global	HAL_I2C_Slave_Receive_IT
 2827              		.syntax unified
 2828              		.thumb
 2829              		.thumb_func
 2830              		.fpu fpv5-sp-d16
 2832              	HAL_I2C_Slave_Receive_IT:
 2833              	.LFB152:
1736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
 2834              		.loc 1 1736 0
 2835              		.cfi_startproc
 2836              		@ args = 0, pretend = 0, frame = 0
 2837              		@ frame_needed = 0, uses_anonymous_args = 0
 2838              	.LVL216:
 2839 0000 38B5     		push	{r3, r4, r5, lr}
 2840              	.LCFI48:
 2841              		.cfi_def_cfa_offset 16
 2842              		.cfi_offset 3, -16
 2843              		.cfi_offset 4, -12
 2844              		.cfi_offset 5, -8
ARM GAS  /tmp/ccX4fpHz.s 			page 172


 2845              		.cfi_offset 14, -4
1737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 2846              		.loc 1 1737 0
 2847 0002 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 2848 0006 DBB2     		uxtb	r3, r3
 2849 0008 202B     		cmp	r3, #32
 2850 000a 22D1     		bne	.L252
1740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2851              		.loc 1 1740 0
 2852 000c 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 2853 0010 012B     		cmp	r3, #1
 2854 0012 20D0     		beq	.L253
1740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2855              		.loc 1 1740 0 is_stmt 0 discriminator 2
 2856 0014 0123     		movs	r3, #1
 2857 0016 80F84030 		strb	r3, [r0, #64]
1742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
 2858              		.loc 1 1742 0 is_stmt 1 discriminator 2
 2859 001a 2223     		movs	r3, #34
 2860 001c 80F84130 		strb	r3, [r0, #65]
1743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 2861              		.loc 1 1743 0 discriminator 2
 2862 0020 2023     		movs	r3, #32
 2863 0022 80F84230 		strb	r3, [r0, #66]
1744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2864              		.loc 1 1744 0 discriminator 2
 2865 0026 0024     		movs	r4, #0
 2866 0028 4464     		str	r4, [r0, #68]
1747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2867              		.loc 1 1747 0 discriminator 2
 2868 002a 0568     		ldr	r5, [r0]
 2869 002c 6B68     		ldr	r3, [r5, #4]
 2870 002e 23F40043 		bic	r3, r3, #32768
 2871 0032 6B60     		str	r3, [r5, #4]
1750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 2872              		.loc 1 1750 0 discriminator 2
 2873 0034 4162     		str	r1, [r0, #36]
1751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
 2874              		.loc 1 1751 0 discriminator 2
 2875 0036 4285     		strh	r2, [r0, #42]	@ movhi
1752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 2876              		.loc 1 1752 0 discriminator 2
 2877 0038 438D     		ldrh	r3, [r0, #42]
 2878 003a 0385     		strh	r3, [r0, #40]	@ movhi
1753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
 2879              		.loc 1 1753 0 discriminator 2
 2880 003c 074B     		ldr	r3, .L255
 2881 003e C362     		str	r3, [r0, #44]
1754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2882              		.loc 1 1754 0 discriminator 2
 2883 0040 074B     		ldr	r3, .L255+4
 2884 0042 4363     		str	r3, [r0, #52]
1757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2885              		.loc 1 1757 0 discriminator 2
 2886 0044 80F84040 		strb	r4, [r0, #64]
1766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2887              		.loc 1 1766 0 discriminator 2
ARM GAS  /tmp/ccX4fpHz.s 			page 173


 2888 0048 0621     		movs	r1, #6
 2889              	.LVL217:
 2890 004a FFF7FEFF 		bl	I2C_Enable_IRQ
 2891              	.LVL218:
1768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 2892              		.loc 1 1768 0 discriminator 2
 2893 004e 2046     		mov	r0, r4
 2894 0050 00E0     		b	.L251
 2895              	.LVL219:
 2896              	.L252:
1772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 2897              		.loc 1 1772 0
 2898 0052 0220     		movs	r0, #2
 2899              	.LVL220:
 2900              	.L251:
1774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2901              		.loc 1 1774 0
 2902 0054 38BD     		pop	{r3, r4, r5, pc}
 2903              	.LVL221:
 2904              	.L253:
1740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2905              		.loc 1 1740 0
 2906 0056 0220     		movs	r0, #2
 2907              	.LVL222:
 2908 0058 FCE7     		b	.L251
 2909              	.L256:
 2910 005a 00BF     		.align	2
 2911              	.L255:
 2912 005c 0000FFFF 		.word	-65536
 2913 0060 00000000 		.word	I2C_Slave_ISR_IT
 2914              		.cfi_endproc
 2915              	.LFE152:
 2917              		.section	.text.HAL_I2C_Master_Transmit_DMA,"ax",%progbits
 2918              		.align	1
 2919              		.global	HAL_I2C_Master_Transmit_DMA
 2920              		.syntax unified
 2921              		.thumb
 2922              		.thumb_func
 2923              		.fpu fpv5-sp-d16
 2925              	HAL_I2C_Master_Transmit_DMA:
 2926              	.LFB153:
1787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
 2927              		.loc 1 1787 0
 2928              		.cfi_startproc
 2929              		@ args = 0, pretend = 0, frame = 0
 2930              		@ frame_needed = 0, uses_anonymous_args = 0
 2931              	.LVL223:
 2932 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2933              	.LCFI49:
 2934              		.cfi_def_cfa_offset 20
 2935              		.cfi_offset 4, -20
 2936              		.cfi_offset 5, -16
 2937              		.cfi_offset 6, -12
 2938              		.cfi_offset 7, -8
 2939              		.cfi_offset 14, -4
 2940 0002 83B0     		sub	sp, sp, #12
 2941              	.LCFI50:
ARM GAS  /tmp/ccX4fpHz.s 			page 174


 2942              		.cfi_def_cfa_offset 32
1791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 2943              		.loc 1 1791 0
 2944 0004 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 2945 0008 E4B2     		uxtb	r4, r4
 2946 000a 202C     		cmp	r4, #32
 2947 000c 40F08C80 		bne	.L265
1793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 2948              		.loc 1 1793 0
 2949 0010 0468     		ldr	r4, [r0]
 2950 0012 A469     		ldr	r4, [r4, #24]
 2951 0014 14F4004F 		tst	r4, #32768
 2952 0018 40F08A80 		bne	.L266
1799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2953              		.loc 1 1799 0
 2954 001c 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 2955 0020 012C     		cmp	r4, #1
 2956 0022 00F08780 		beq	.L267
1799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2957              		.loc 1 1799 0 is_stmt 0 discriminator 2
 2958 0026 0124     		movs	r4, #1
 2959 0028 80F84040 		strb	r4, [r0, #64]
1801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
 2960              		.loc 1 1801 0 is_stmt 1 discriminator 2
 2961 002c 2124     		movs	r4, #33
 2962 002e 80F84140 		strb	r4, [r0, #65]
1802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 2963              		.loc 1 1802 0 discriminator 2
 2964 0032 1024     		movs	r4, #16
 2965 0034 80F84240 		strb	r4, [r0, #66]
1803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2966              		.loc 1 1803 0 discriminator 2
 2967 0038 0024     		movs	r4, #0
 2968 003a 4464     		str	r4, [r0, #68]
1806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 2969              		.loc 1 1806 0 discriminator 2
 2970 003c 4262     		str	r2, [r0, #36]
1807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 2971              		.loc 1 1807 0 discriminator 2
 2972 003e 4385     		strh	r3, [r0, #42]	@ movhi
1808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
 2973              		.loc 1 1808 0 discriminator 2
 2974 0040 3D4B     		ldr	r3, .L271
 2975              	.LVL224:
 2976 0042 C362     		str	r3, [r0, #44]
 2977              	.LVL225:
1809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2978              		.loc 1 1809 0 discriminator 2
 2979 0044 3D4B     		ldr	r3, .L271+4
 2980 0046 4363     		str	r3, [r0, #52]
1811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 2981              		.loc 1 1811 0 discriminator 2
 2982 0048 438D     		ldrh	r3, [r0, #42]
 2983 004a 9BB2     		uxth	r3, r3
 2984 004c FF2B     		cmp	r3, #255
 2985 004e 2CD9     		bls	.L259
1813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
ARM GAS  /tmp/ccX4fpHz.s 			page 175


 2986              		.loc 1 1813 0
 2987 0050 FF23     		movs	r3, #255
 2988 0052 0385     		strh	r3, [r0, #40]	@ movhi
 2989              	.LVL226:
1814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2990              		.loc 1 1814 0
 2991 0054 4FF08076 		mov	r6, #16777216
 2992              	.LVL227:
 2993              	.L260:
 2994 0058 1546     		mov	r5, r2
 2995 005a 0F46     		mov	r7, r1
 2996 005c 0446     		mov	r4, r0
 2997              	.LVL228:
1822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 2998              		.loc 1 1822 0
 2999 005e 028D     		ldrh	r2, [r0, #40]
 3000              	.LVL229:
 3001 0060 002A     		cmp	r2, #0
 3002 0062 50D0     		beq	.L261
 3003              	.LVL230:
1824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 3004              		.loc 1 1824 0
 3005 0064 836B     		ldr	r3, [r0, #56]
 3006 0066 2BB3     		cbz	r3, .L262
1827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3007              		.loc 1 1827 0
 3008 0068 354A     		ldr	r2, .L271+8
 3009 006a DA63     		str	r2, [r3, #60]
1830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3010              		.loc 1 1830 0
 3011 006c 836B     		ldr	r3, [r0, #56]
 3012 006e 354A     		ldr	r2, .L271+12
 3013 0070 DA64     		str	r2, [r3, #76]
1833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmatx->XferAbortCallback = NULL;
 3014              		.loc 1 1833 0
 3015 0072 826B     		ldr	r2, [r0, #56]
 3016 0074 0023     		movs	r3, #0
 3017 0076 1364     		str	r3, [r2, #64]
1834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3018              		.loc 1 1834 0
 3019 0078 826B     		ldr	r2, [r0, #56]
 3020 007a 1365     		str	r3, [r2, #80]
1837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 3021              		.loc 1 1837 0
 3022 007c 0268     		ldr	r2, [r0]
 3023 007e 038D     		ldrh	r3, [r0, #40]
 3024 0080 2832     		adds	r2, r2, #40
 3025 0082 2946     		mov	r1, r5
 3026              	.LVL231:
 3027 0084 806B     		ldr	r0, [r0, #56]
 3028              	.LVL232:
 3029 0086 FFF7FEFF 		bl	HAL_DMA_Start_IT
 3030              	.LVL233:
1854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 3031              		.loc 1 1854 0
 3032 008a 0546     		mov	r5, r0
 3033              	.LVL234:
ARM GAS  /tmp/ccX4fpHz.s 			page 176


 3034 008c 00B3     		cbz	r0, .L270
1878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
 3035              		.loc 1 1878 0
 3036 008e 2023     		movs	r3, #32
 3037 0090 84F84130 		strb	r3, [r4, #65]
1879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3038              		.loc 1 1879 0
 3039 0094 0022     		movs	r2, #0
 3040 0096 84F84220 		strb	r2, [r4, #66]
1882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3041              		.loc 1 1882 0
 3042 009a 636C     		ldr	r3, [r4, #68]
 3043 009c 43F01003 		orr	r3, r3, #16
 3044 00a0 6364     		str	r3, [r4, #68]
1885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3045              		.loc 1 1885 0
 3046 00a2 84F84020 		strb	r2, [r4, #64]
1887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 3047              		.loc 1 1887 0
 3048 00a6 0125     		movs	r5, #1
 3049 00a8 3FE0     		b	.L258
 3050              	.LVL235:
 3051              	.L259:
1818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 3052              		.loc 1 1818 0
 3053 00aa 438D     		ldrh	r3, [r0, #42]
 3054 00ac 0385     		strh	r3, [r0, #40]	@ movhi
 3055              	.LVL236:
1819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3056              		.loc 1 1819 0
 3057 00ae 4FF00076 		mov	r6, #33554432
 3058 00b2 D1E7     		b	.L260
 3059              	.LVL237:
 3060              	.L262:
1842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
 3061              		.loc 1 1842 0
 3062 00b4 2023     		movs	r3, #32
 3063 00b6 80F84130 		strb	r3, [r0, #65]
1843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3064              		.loc 1 1843 0
 3065 00ba 0022     		movs	r2, #0
 3066 00bc 80F84220 		strb	r2, [r0, #66]
1846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3067              		.loc 1 1846 0
 3068 00c0 436C     		ldr	r3, [r0, #68]
 3069 00c2 43F08003 		orr	r3, r3, #128
 3070 00c6 4364     		str	r3, [r0, #68]
1849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3071              		.loc 1 1849 0
 3072 00c8 80F84020 		strb	r2, [r0, #64]
1851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 3073              		.loc 1 1851 0
 3074 00cc 0125     		movs	r5, #1
 3075              	.LVL238:
 3076 00ce 2CE0     		b	.L258
 3077              	.LVL239:
 3078              	.L270:
ARM GAS  /tmp/ccX4fpHz.s 			page 177


1858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3079              		.loc 1 1858 0
 3080 00d0 94F82820 		ldrb	r2, [r4, #40]	@ zero_extendqisi2
 3081 00d4 1C4B     		ldr	r3, .L271+16
 3082 00d6 0093     		str	r3, [sp]
 3083 00d8 3346     		mov	r3, r6
 3084 00da 3946     		mov	r1, r7
 3085 00dc 2046     		mov	r0, r4
 3086              	.LVL240:
 3087 00de FFF7FEFF 		bl	I2C_TransferConfig
 3088              	.LVL241:
1861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3089              		.loc 1 1861 0
 3090 00e2 638D     		ldrh	r3, [r4, #42]
 3091 00e4 228D     		ldrh	r2, [r4, #40]
 3092 00e6 9B1A     		subs	r3, r3, r2
 3093 00e8 9BB2     		uxth	r3, r3
 3094 00ea 6385     		strh	r3, [r4, #42]	@ movhi
1864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3095              		.loc 1 1864 0
 3096 00ec 0023     		movs	r3, #0
 3097 00ee 84F84030 		strb	r3, [r4, #64]
1870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3098              		.loc 1 1870 0
 3099 00f2 1121     		movs	r1, #17
 3100 00f4 2046     		mov	r0, r4
 3101 00f6 FFF7FEFF 		bl	I2C_Enable_IRQ
 3102              	.LVL242:
1873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 3103              		.loc 1 1873 0
 3104 00fa 2268     		ldr	r2, [r4]
 3105 00fc 1368     		ldr	r3, [r2]
 3106 00fe 43F48043 		orr	r3, r3, #16384
 3107 0102 1360     		str	r3, [r2]
 3108 0104 11E0     		b	.L258
 3109              	.LVL243:
 3110              	.L261:
1893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3111              		.loc 1 1893 0
 3112 0106 114B     		ldr	r3, .L271+20
 3113 0108 4363     		str	r3, [r0, #52]
1897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3114              		.loc 1 1897 0
 3115 010a 0F4B     		ldr	r3, .L271+16
 3116 010c 0093     		str	r3, [sp]
 3117 010e 4FF00073 		mov	r3, #33554432
 3118 0112 D2B2     		uxtb	r2, r2
 3119 0114 FFF7FEFF 		bl	I2C_TransferConfig
 3120              	.LVL244:
1900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3121              		.loc 1 1900 0
 3122 0118 0025     		movs	r5, #0
 3123              	.LVL245:
 3124 011a 84F84050 		strb	r5, [r4, #64]
1908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3125              		.loc 1 1908 0
 3126 011e 0121     		movs	r1, #1
ARM GAS  /tmp/ccX4fpHz.s 			page 178


 3127 0120 2046     		mov	r0, r4
 3128 0122 FFF7FEFF 		bl	I2C_Enable_IRQ
 3129              	.LVL246:
 3130 0126 00E0     		b	.L258
 3131              	.LVL247:
 3132              	.L265:
1915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 3133              		.loc 1 1915 0
 3134 0128 0225     		movs	r5, #2
 3135              	.LVL248:
 3136              	.L258:
1917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3137              		.loc 1 1917 0
 3138 012a 2846     		mov	r0, r5
 3139 012c 03B0     		add	sp, sp, #12
 3140              	.LCFI51:
 3141              		.cfi_remember_state
 3142              		.cfi_def_cfa_offset 20
 3143              		@ sp needed
 3144 012e F0BD     		pop	{r4, r5, r6, r7, pc}
 3145              	.LVL249:
 3146              	.L266:
 3147              	.LCFI52:
 3148              		.cfi_restore_state
1795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3149              		.loc 1 1795 0
 3150 0130 0225     		movs	r5, #2
 3151 0132 FAE7     		b	.L258
 3152              	.L267:
1799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3153              		.loc 1 1799 0
 3154 0134 0225     		movs	r5, #2
 3155 0136 F8E7     		b	.L258
 3156              	.L272:
 3157              		.align	2
 3158              	.L271:
 3159 0138 0000FFFF 		.word	-65536
 3160 013c 00000000 		.word	I2C_Master_ISR_DMA
 3161 0140 00000000 		.word	I2C_DMAMasterTransmitCplt
 3162 0144 00000000 		.word	I2C_DMAError
 3163 0148 00200080 		.word	-2147475456
 3164 014c 00000000 		.word	I2C_Master_ISR_IT
 3165              		.cfi_endproc
 3166              	.LFE153:
 3168              		.section	.text.HAL_I2C_Master_Receive_DMA,"ax",%progbits
 3169              		.align	1
 3170              		.global	HAL_I2C_Master_Receive_DMA
 3171              		.syntax unified
 3172              		.thumb
 3173              		.thumb_func
 3174              		.fpu fpv5-sp-d16
 3176              	HAL_I2C_Master_Receive_DMA:
 3177              	.LFB154:
1930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
 3178              		.loc 1 1930 0
 3179              		.cfi_startproc
 3180              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccX4fpHz.s 			page 179


 3181              		@ frame_needed = 0, uses_anonymous_args = 0
 3182              	.LVL250:
 3183 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3184              	.LCFI53:
 3185              		.cfi_def_cfa_offset 20
 3186              		.cfi_offset 4, -20
 3187              		.cfi_offset 5, -16
 3188              		.cfi_offset 6, -12
 3189              		.cfi_offset 7, -8
 3190              		.cfi_offset 14, -4
 3191 0002 83B0     		sub	sp, sp, #12
 3192              	.LCFI54:
 3193              		.cfi_def_cfa_offset 32
1934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 3194              		.loc 1 1934 0
 3195 0004 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 3196 0008 E4B2     		uxtb	r4, r4
 3197 000a 202C     		cmp	r4, #32
 3198 000c 40F08B80 		bne	.L281
1936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 3199              		.loc 1 1936 0
 3200 0010 0468     		ldr	r4, [r0]
 3201 0012 A469     		ldr	r4, [r4, #24]
 3202 0014 14F4004F 		tst	r4, #32768
 3203 0018 40F08980 		bne	.L282
1942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3204              		.loc 1 1942 0
 3205 001c 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 3206 0020 012C     		cmp	r4, #1
 3207 0022 00F08680 		beq	.L283
1942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3208              		.loc 1 1942 0 is_stmt 0 discriminator 2
 3209 0026 0124     		movs	r4, #1
 3210 0028 80F84040 		strb	r4, [r0, #64]
1944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
 3211              		.loc 1 1944 0 is_stmt 1 discriminator 2
 3212 002c 2224     		movs	r4, #34
 3213 002e 80F84140 		strb	r4, [r0, #65]
1945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 3214              		.loc 1 1945 0 discriminator 2
 3215 0032 1024     		movs	r4, #16
 3216 0034 80F84240 		strb	r4, [r0, #66]
1946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3217              		.loc 1 1946 0 discriminator 2
 3218 0038 0024     		movs	r4, #0
 3219 003a 4464     		str	r4, [r0, #68]
1949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 3220              		.loc 1 1949 0 discriminator 2
 3221 003c 4262     		str	r2, [r0, #36]
1950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 3222              		.loc 1 1950 0 discriminator 2
 3223 003e 4385     		strh	r3, [r0, #42]	@ movhi
1951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
 3224              		.loc 1 1951 0 discriminator 2
 3225 0040 3D4B     		ldr	r3, .L287
 3226              	.LVL251:
 3227 0042 C362     		str	r3, [r0, #44]
ARM GAS  /tmp/ccX4fpHz.s 			page 180


 3228              	.LVL252:
1952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3229              		.loc 1 1952 0 discriminator 2
 3230 0044 3D4B     		ldr	r3, .L287+4
 3231 0046 4363     		str	r3, [r0, #52]
1954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 3232              		.loc 1 1954 0 discriminator 2
 3233 0048 438D     		ldrh	r3, [r0, #42]
 3234 004a 9BB2     		uxth	r3, r3
 3235 004c FF2B     		cmp	r3, #255
 3236 004e 2AD9     		bls	.L275
1956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 3237              		.loc 1 1956 0
 3238 0050 FF23     		movs	r3, #255
 3239 0052 0385     		strh	r3, [r0, #40]	@ movhi
 3240              	.LVL253:
1957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3241              		.loc 1 1957 0
 3242 0054 4FF08076 		mov	r6, #16777216
 3243              	.LVL254:
 3244              	.L276:
 3245 0058 0F46     		mov	r7, r1
 3246 005a 0446     		mov	r4, r0
 3247              	.LVL255:
1965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 3248              		.loc 1 1965 0
 3249 005c 018D     		ldrh	r1, [r0, #40]
 3250              	.LVL256:
 3251 005e 0029     		cmp	r1, #0
 3252 0060 4FD0     		beq	.L277
1967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 3253              		.loc 1 1967 0
 3254 0062 C36B     		ldr	r3, [r0, #60]
 3255 0064 23B3     		cbz	r3, .L278
1970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3256              		.loc 1 1970 0
 3257 0066 3649     		ldr	r1, .L287+8
 3258 0068 D963     		str	r1, [r3, #60]
1973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3259              		.loc 1 1973 0
 3260 006a C36B     		ldr	r3, [r0, #60]
 3261 006c 3549     		ldr	r1, .L287+12
 3262 006e D964     		str	r1, [r3, #76]
1976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmarx->XferAbortCallback = NULL;
 3263              		.loc 1 1976 0
 3264 0070 C16B     		ldr	r1, [r0, #60]
 3265 0072 0023     		movs	r3, #0
 3266 0074 0B64     		str	r3, [r1, #64]
1977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3267              		.loc 1 1977 0
 3268 0076 C16B     		ldr	r1, [r0, #60]
 3269 0078 0B65     		str	r3, [r1, #80]
1980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 3270              		.loc 1 1980 0
 3271 007a 0168     		ldr	r1, [r0]
 3272 007c 038D     		ldrh	r3, [r0, #40]
 3273 007e 2431     		adds	r1, r1, #36
ARM GAS  /tmp/ccX4fpHz.s 			page 181


 3274 0080 C06B     		ldr	r0, [r0, #60]
 3275              	.LVL257:
 3276 0082 FFF7FEFF 		bl	HAL_DMA_Start_IT
 3277              	.LVL258:
1997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 3278              		.loc 1 1997 0
 3279 0086 0546     		mov	r5, r0
 3280 0088 00B3     		cbz	r0, .L286
2021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
 3281              		.loc 1 2021 0
 3282 008a 2023     		movs	r3, #32
 3283 008c 84F84130 		strb	r3, [r4, #65]
2022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3284              		.loc 1 2022 0
 3285 0090 0022     		movs	r2, #0
 3286 0092 84F84220 		strb	r2, [r4, #66]
2025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3287              		.loc 1 2025 0
 3288 0096 636C     		ldr	r3, [r4, #68]
 3289 0098 43F01003 		orr	r3, r3, #16
 3290 009c 6364     		str	r3, [r4, #68]
2028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3291              		.loc 1 2028 0
 3292 009e 84F84020 		strb	r2, [r4, #64]
2030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 3293              		.loc 1 2030 0
 3294 00a2 0125     		movs	r5, #1
 3295 00a4 40E0     		b	.L274
 3296              	.LVL259:
 3297              	.L275:
1961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 3298              		.loc 1 1961 0
 3299 00a6 438D     		ldrh	r3, [r0, #42]
 3300 00a8 0385     		strh	r3, [r0, #40]	@ movhi
 3301              	.LVL260:
1962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3302              		.loc 1 1962 0
 3303 00aa 4FF00076 		mov	r6, #33554432
 3304 00ae D3E7     		b	.L276
 3305              	.LVL261:
 3306              	.L278:
1985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
 3307              		.loc 1 1985 0
 3308 00b0 2023     		movs	r3, #32
 3309 00b2 80F84130 		strb	r3, [r0, #65]
1986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3310              		.loc 1 1986 0
 3311 00b6 0022     		movs	r2, #0
 3312              	.LVL262:
 3313 00b8 80F84220 		strb	r2, [r0, #66]
1989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3314              		.loc 1 1989 0
 3315 00bc 436C     		ldr	r3, [r0, #68]
 3316 00be 43F08003 		orr	r3, r3, #128
 3317 00c2 4364     		str	r3, [r0, #68]
1992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3318              		.loc 1 1992 0
ARM GAS  /tmp/ccX4fpHz.s 			page 182


 3319 00c4 80F84020 		strb	r2, [r0, #64]
1994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 3320              		.loc 1 1994 0
 3321 00c8 0125     		movs	r5, #1
 3322 00ca 2DE0     		b	.L274
 3323              	.LVL263:
 3324              	.L286:
2001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3325              		.loc 1 2001 0
 3326 00cc 94F82820 		ldrb	r2, [r4, #40]	@ zero_extendqisi2
 3327 00d0 1D4B     		ldr	r3, .L287+16
 3328 00d2 0093     		str	r3, [sp]
 3329 00d4 3346     		mov	r3, r6
 3330 00d6 3946     		mov	r1, r7
 3331 00d8 2046     		mov	r0, r4
 3332              	.LVL264:
 3333 00da FFF7FEFF 		bl	I2C_TransferConfig
 3334              	.LVL265:
2004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3335              		.loc 1 2004 0
 3336 00de 638D     		ldrh	r3, [r4, #42]
 3337 00e0 228D     		ldrh	r2, [r4, #40]
 3338 00e2 9B1A     		subs	r3, r3, r2
 3339 00e4 9BB2     		uxth	r3, r3
 3340 00e6 6385     		strh	r3, [r4, #42]	@ movhi
2007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3341              		.loc 1 2007 0
 3342 00e8 0023     		movs	r3, #0
 3343 00ea 84F84030 		strb	r3, [r4, #64]
2013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3344              		.loc 1 2013 0
 3345 00ee 1121     		movs	r1, #17
 3346 00f0 2046     		mov	r0, r4
 3347 00f2 FFF7FEFF 		bl	I2C_Enable_IRQ
 3348              	.LVL266:
2016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 3349              		.loc 1 2016 0
 3350 00f6 2268     		ldr	r2, [r4]
 3351 00f8 1368     		ldr	r3, [r2]
 3352 00fa 43F40043 		orr	r3, r3, #32768
 3353 00fe 1360     		str	r3, [r2]
 3354 0100 12E0     		b	.L274
 3355              	.LVL267:
 3356              	.L277:
2036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3357              		.loc 1 2036 0
 3358 0102 124B     		ldr	r3, .L287+20
 3359 0104 4363     		str	r3, [r0, #52]
2040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3360              		.loc 1 2040 0
 3361 0106 104B     		ldr	r3, .L287+16
 3362 0108 0093     		str	r3, [sp]
 3363 010a 4FF00073 		mov	r3, #33554432
 3364 010e CAB2     		uxtb	r2, r1
 3365              	.LVL268:
 3366 0110 3946     		mov	r1, r7
 3367 0112 FFF7FEFF 		bl	I2C_TransferConfig
ARM GAS  /tmp/ccX4fpHz.s 			page 183


 3368              	.LVL269:
2043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3369              		.loc 1 2043 0
 3370 0116 0025     		movs	r5, #0
 3371 0118 84F84050 		strb	r5, [r4, #64]
2051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3372              		.loc 1 2051 0
 3373 011c 0121     		movs	r1, #1
 3374 011e 2046     		mov	r0, r4
 3375 0120 FFF7FEFF 		bl	I2C_Enable_IRQ
 3376              	.LVL270:
 3377 0124 00E0     		b	.L274
 3378              	.LVL271:
 3379              	.L281:
2058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 3380              		.loc 1 2058 0
 3381 0126 0225     		movs	r5, #2
 3382              	.LVL272:
 3383              	.L274:
2060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3384              		.loc 1 2060 0
 3385 0128 2846     		mov	r0, r5
 3386 012a 03B0     		add	sp, sp, #12
 3387              	.LCFI55:
 3388              		.cfi_remember_state
 3389              		.cfi_def_cfa_offset 20
 3390              		@ sp needed
 3391 012c F0BD     		pop	{r4, r5, r6, r7, pc}
 3392              	.LVL273:
 3393              	.L282:
 3394              	.LCFI56:
 3395              		.cfi_restore_state
1938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3396              		.loc 1 1938 0
 3397 012e 0225     		movs	r5, #2
 3398 0130 FAE7     		b	.L274
 3399              	.L283:
1942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3400              		.loc 1 1942 0
 3401 0132 0225     		movs	r5, #2
 3402 0134 F8E7     		b	.L274
 3403              	.L288:
 3404 0136 00BF     		.align	2
 3405              	.L287:
 3406 0138 0000FFFF 		.word	-65536
 3407 013c 00000000 		.word	I2C_Master_ISR_DMA
 3408 0140 00000000 		.word	I2C_DMAMasterReceiveCplt
 3409 0144 00000000 		.word	I2C_DMAError
 3410 0148 00240080 		.word	-2147474432
 3411 014c 00000000 		.word	I2C_Master_ISR_IT
 3412              		.cfi_endproc
 3413              	.LFE154:
 3415              		.section	.text.HAL_I2C_Slave_Transmit_DMA,"ax",%progbits
 3416              		.align	1
 3417              		.global	HAL_I2C_Slave_Transmit_DMA
 3418              		.syntax unified
 3419              		.thumb
ARM GAS  /tmp/ccX4fpHz.s 			page 184


 3420              		.thumb_func
 3421              		.fpu fpv5-sp-d16
 3423              	HAL_I2C_Slave_Transmit_DMA:
 3424              	.LFB155:
2071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
 3425              		.loc 1 2071 0
 3426              		.cfi_startproc
 3427              		@ args = 0, pretend = 0, frame = 0
 3428              		@ frame_needed = 0, uses_anonymous_args = 0
 3429              	.LVL274:
 3430 0000 38B5     		push	{r3, r4, r5, lr}
 3431              	.LCFI57:
 3432              		.cfi_def_cfa_offset 16
 3433              		.cfi_offset 3, -16
 3434              		.cfi_offset 4, -12
 3435              		.cfi_offset 5, -8
 3436              		.cfi_offset 14, -4
2074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 3437              		.loc 1 2074 0
 3438 0002 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 3439 0006 DBB2     		uxtb	r3, r3
 3440 0008 202B     		cmp	r3, #32
 3441 000a 66D1     		bne	.L295
2076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 3442              		.loc 1 2076 0
 3443 000c B2FA82F3 		clz	r3, r2
 3444 0010 5B09     		lsrs	r3, r3, #5
 3445 0012 0029     		cmp	r1, #0
 3446 0014 08BF     		it	eq
 3447 0016 0123     		moveq	r3, #1
 3448 0018 002B     		cmp	r3, #0
 3449 001a 39D1     		bne	.L299
2082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3450              		.loc 1 2082 0
 3451 001c 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 3452 0020 012B     		cmp	r3, #1
 3453 0022 5DD0     		beq	.L296
2082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3454              		.loc 1 2082 0 is_stmt 0 discriminator 2
 3455 0024 0123     		movs	r3, #1
 3456 0026 80F84030 		strb	r3, [r0, #64]
2084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
 3457              		.loc 1 2084 0 is_stmt 1 discriminator 2
 3458 002a 2123     		movs	r3, #33
 3459 002c 80F84130 		strb	r3, [r0, #65]
2085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 3460              		.loc 1 2085 0 discriminator 2
 3461 0030 2023     		movs	r3, #32
 3462 0032 80F84230 		strb	r3, [r0, #66]
2086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3463              		.loc 1 2086 0 discriminator 2
 3464 0036 0023     		movs	r3, #0
 3465 0038 4364     		str	r3, [r0, #68]
2089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 3466              		.loc 1 2089 0 discriminator 2
 3467 003a 4162     		str	r1, [r0, #36]
2090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
ARM GAS  /tmp/ccX4fpHz.s 			page 185


 3468              		.loc 1 2090 0 discriminator 2
 3469 003c 4285     		strh	r2, [r0, #42]	@ movhi
2091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 3470              		.loc 1 2091 0 discriminator 2
 3471 003e 438D     		ldrh	r3, [r0, #42]
 3472 0040 0385     		strh	r3, [r0, #40]	@ movhi
2092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_DMA;
 3473              		.loc 1 2092 0 discriminator 2
 3474 0042 284B     		ldr	r3, .L301
 3475 0044 C362     		str	r3, [r0, #44]
2093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3476              		.loc 1 2093 0 discriminator 2
 3477 0046 284B     		ldr	r3, .L301+4
 3478 0048 4363     		str	r3, [r0, #52]
2095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 3479              		.loc 1 2095 0 discriminator 2
 3480 004a 836B     		ldr	r3, [r0, #56]
 3481 004c 2BB3     		cbz	r3, .L292
 3482 004e 0546     		mov	r5, r0
2098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3483              		.loc 1 2098 0
 3484 0050 264A     		ldr	r2, .L301+8
 3485              	.LVL275:
 3486 0052 DA63     		str	r2, [r3, #60]
2101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3487              		.loc 1 2101 0
 3488 0054 836B     		ldr	r3, [r0, #56]
 3489 0056 264A     		ldr	r2, .L301+12
 3490 0058 DA64     		str	r2, [r3, #76]
2104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmatx->XferAbortCallback = NULL;
 3491              		.loc 1 2104 0
 3492 005a 826B     		ldr	r2, [r0, #56]
 3493 005c 0023     		movs	r3, #0
 3494 005e 1364     		str	r3, [r2, #64]
2105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3495              		.loc 1 2105 0
 3496 0060 826B     		ldr	r2, [r0, #56]
 3497 0062 1365     		str	r3, [r2, #80]
2108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3498              		.loc 1 2108 0
 3499 0064 0268     		ldr	r2, [r0]
 3500 0066 038D     		ldrh	r3, [r0, #40]
 3501 0068 2832     		adds	r2, r2, #40
 3502 006a 806B     		ldr	r0, [r0, #56]
 3503              	.LVL276:
 3504 006c FFF7FEFF 		bl	HAL_DMA_Start_IT
 3505              	.LVL277:
2125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 3506              		.loc 1 2125 0
 3507 0070 0446     		mov	r4, r0
 3508 0072 00B3     		cbz	r0, .L300
2145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 3509              		.loc 1 2145 0
 3510 0074 2823     		movs	r3, #40
 3511 0076 85F84130 		strb	r3, [r5, #65]
2146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3512              		.loc 1 2146 0
ARM GAS  /tmp/ccX4fpHz.s 			page 186


 3513 007a 0022     		movs	r2, #0
 3514 007c 85F84220 		strb	r2, [r5, #66]
2149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3515              		.loc 1 2149 0
 3516 0080 6B6C     		ldr	r3, [r5, #68]
 3517 0082 43F01003 		orr	r3, r3, #16
 3518 0086 6B64     		str	r3, [r5, #68]
2152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3519              		.loc 1 2152 0
 3520 0088 85F84020 		strb	r2, [r5, #64]
2154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3521              		.loc 1 2154 0
 3522 008c 0124     		movs	r4, #1
 3523 008e 25E0     		b	.L290
 3524              	.LVL278:
 3525              	.L299:
2078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
 3526              		.loc 1 2078 0
 3527 0090 4FF40073 		mov	r3, #512
 3528 0094 4364     		str	r3, [r0, #68]
2079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3529              		.loc 1 2079 0
 3530 0096 0124     		movs	r4, #1
 3531 0098 20E0     		b	.L290
 3532              	.L292:
2113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 3533              		.loc 1 2113 0
 3534 009a 2823     		movs	r3, #40
 3535 009c 80F84130 		strb	r3, [r0, #65]
2114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3536              		.loc 1 2114 0
 3537 00a0 0022     		movs	r2, #0
 3538              	.LVL279:
 3539 00a2 80F84220 		strb	r2, [r0, #66]
2117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3540              		.loc 1 2117 0
 3541 00a6 436C     		ldr	r3, [r0, #68]
 3542 00a8 43F08003 		orr	r3, r3, #128
 3543 00ac 4364     		str	r3, [r0, #68]
2120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3544              		.loc 1 2120 0
 3545 00ae 80F84020 		strb	r2, [r0, #64]
2122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3546              		.loc 1 2122 0
 3547 00b2 0124     		movs	r4, #1
 3548 00b4 12E0     		b	.L290
 3549              	.LVL280:
 3550              	.L300:
2128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3551              		.loc 1 2128 0
 3552 00b6 2A68     		ldr	r2, [r5]
 3553 00b8 5368     		ldr	r3, [r2, #4]
 3554 00ba 23F40043 		bic	r3, r3, #32768
 3555 00be 5360     		str	r3, [r2, #4]
2131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3556              		.loc 1 2131 0
 3557 00c0 0023     		movs	r3, #0
ARM GAS  /tmp/ccX4fpHz.s 			page 187


 3558 00c2 85F84030 		strb	r3, [r5, #64]
2137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3559              		.loc 1 2137 0
 3560 00c6 0421     		movs	r1, #4
 3561 00c8 2846     		mov	r0, r5
 3562              	.LVL281:
 3563 00ca FFF7FEFF 		bl	I2C_Enable_IRQ
 3564              	.LVL282:
2140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3565              		.loc 1 2140 0
 3566 00ce 2A68     		ldr	r2, [r5]
 3567 00d0 1368     		ldr	r3, [r2]
 3568 00d2 43F48043 		orr	r3, r3, #16384
 3569 00d6 1360     		str	r3, [r2]
2157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 3570              		.loc 1 2157 0
 3571 00d8 00E0     		b	.L290
 3572              	.LVL283:
 3573              	.L295:
2161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 3574              		.loc 1 2161 0
 3575 00da 0224     		movs	r4, #2
 3576              	.LVL284:
 3577              	.L290:
2163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3578              		.loc 1 2163 0
 3579 00dc 2046     		mov	r0, r4
 3580 00de 38BD     		pop	{r3, r4, r5, pc}
 3581              	.LVL285:
 3582              	.L296:
2082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3583              		.loc 1 2082 0
 3584 00e0 0224     		movs	r4, #2
 3585 00e2 FBE7     		b	.L290
 3586              	.L302:
 3587              		.align	2
 3588              	.L301:
 3589 00e4 0000FFFF 		.word	-65536
 3590 00e8 00000000 		.word	I2C_Slave_ISR_DMA
 3591 00ec 00000000 		.word	I2C_DMASlaveTransmitCplt
 3592 00f0 00000000 		.word	I2C_DMAError
 3593              		.cfi_endproc
 3594              	.LFE155:
 3596              		.section	.text.HAL_I2C_Slave_Receive_DMA,"ax",%progbits
 3597              		.align	1
 3598              		.global	HAL_I2C_Slave_Receive_DMA
 3599              		.syntax unified
 3600              		.thumb
 3601              		.thumb_func
 3602              		.fpu fpv5-sp-d16
 3604              	HAL_I2C_Slave_Receive_DMA:
 3605              	.LFB156:
2174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
 3606              		.loc 1 2174 0
 3607              		.cfi_startproc
 3608              		@ args = 0, pretend = 0, frame = 0
 3609              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccX4fpHz.s 			page 188


 3610              	.LVL286:
 3611 0000 38B5     		push	{r3, r4, r5, lr}
 3612              	.LCFI58:
 3613              		.cfi_def_cfa_offset 16
 3614              		.cfi_offset 3, -16
 3615              		.cfi_offset 4, -12
 3616              		.cfi_offset 5, -8
 3617              		.cfi_offset 14, -4
2177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 3618              		.loc 1 2177 0
 3619 0002 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 3620 0006 DBB2     		uxtb	r3, r3
 3621 0008 202B     		cmp	r3, #32
 3622 000a 67D1     		bne	.L309
2179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 3623              		.loc 1 2179 0
 3624 000c B2FA82F3 		clz	r3, r2
 3625 0010 5B09     		lsrs	r3, r3, #5
 3626 0012 0029     		cmp	r1, #0
 3627 0014 08BF     		it	eq
 3628 0016 0123     		moveq	r3, #1
 3629 0018 002B     		cmp	r3, #0
 3630 001a 3AD1     		bne	.L313
2185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3631              		.loc 1 2185 0
 3632 001c 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 3633 0020 012B     		cmp	r3, #1
 3634 0022 5ED0     		beq	.L310
2185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3635              		.loc 1 2185 0 is_stmt 0 discriminator 2
 3636 0024 0123     		movs	r3, #1
 3637 0026 80F84030 		strb	r3, [r0, #64]
2187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
 3638              		.loc 1 2187 0 is_stmt 1 discriminator 2
 3639 002a 2223     		movs	r3, #34
 3640 002c 80F84130 		strb	r3, [r0, #65]
2188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 3641              		.loc 1 2188 0 discriminator 2
 3642 0030 2023     		movs	r3, #32
 3643 0032 80F84230 		strb	r3, [r0, #66]
2189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3644              		.loc 1 2189 0 discriminator 2
 3645 0036 0023     		movs	r3, #0
 3646 0038 4364     		str	r3, [r0, #68]
2192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 3647              		.loc 1 2192 0 discriminator 2
 3648 003a 4162     		str	r1, [r0, #36]
2193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
 3649              		.loc 1 2193 0 discriminator 2
 3650 003c 4285     		strh	r2, [r0, #42]	@ movhi
2194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 3651              		.loc 1 2194 0 discriminator 2
 3652 003e 438D     		ldrh	r3, [r0, #42]
 3653 0040 0385     		strh	r3, [r0, #40]	@ movhi
2195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_DMA;
 3654              		.loc 1 2195 0 discriminator 2
 3655 0042 294B     		ldr	r3, .L315
ARM GAS  /tmp/ccX4fpHz.s 			page 189


 3656 0044 C362     		str	r3, [r0, #44]
2196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3657              		.loc 1 2196 0 discriminator 2
 3658 0046 294B     		ldr	r3, .L315+4
 3659 0048 4363     		str	r3, [r0, #52]
2198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 3660              		.loc 1 2198 0 discriminator 2
 3661 004a C36B     		ldr	r3, [r0, #60]
 3662 004c 33B3     		cbz	r3, .L306
 3663 004e 0A46     		mov	r2, r1
 3664              	.LVL287:
 3665 0050 0546     		mov	r5, r0
2201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3666              		.loc 1 2201 0
 3667 0052 2749     		ldr	r1, .L315+8
 3668              	.LVL288:
 3669 0054 D963     		str	r1, [r3, #60]
2204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3670              		.loc 1 2204 0
 3671 0056 C36B     		ldr	r3, [r0, #60]
 3672 0058 2649     		ldr	r1, .L315+12
 3673 005a D964     		str	r1, [r3, #76]
2207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmarx->XferAbortCallback = NULL;
 3674              		.loc 1 2207 0
 3675 005c C16B     		ldr	r1, [r0, #60]
 3676 005e 0023     		movs	r3, #0
 3677 0060 0B64     		str	r3, [r1, #64]
2208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3678              		.loc 1 2208 0
 3679 0062 C16B     		ldr	r1, [r0, #60]
 3680 0064 0B65     		str	r3, [r1, #80]
2211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3681              		.loc 1 2211 0
 3682 0066 0168     		ldr	r1, [r0]
 3683 0068 038D     		ldrh	r3, [r0, #40]
 3684 006a 2431     		adds	r1, r1, #36
 3685 006c C06B     		ldr	r0, [r0, #60]
 3686              	.LVL289:
 3687 006e FFF7FEFF 		bl	HAL_DMA_Start_IT
 3688              	.LVL290:
2228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 3689              		.loc 1 2228 0
 3690 0072 0446     		mov	r4, r0
 3691 0074 00B3     		cbz	r0, .L314
2248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 3692              		.loc 1 2248 0
 3693 0076 2823     		movs	r3, #40
 3694 0078 85F84130 		strb	r3, [r5, #65]
2249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3695              		.loc 1 2249 0
 3696 007c 0022     		movs	r2, #0
 3697 007e 85F84220 		strb	r2, [r5, #66]
2252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3698              		.loc 1 2252 0
 3699 0082 6B6C     		ldr	r3, [r5, #68]
 3700 0084 43F01003 		orr	r3, r3, #16
 3701 0088 6B64     		str	r3, [r5, #68]
ARM GAS  /tmp/ccX4fpHz.s 			page 190


2255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3702              		.loc 1 2255 0
 3703 008a 85F84020 		strb	r2, [r5, #64]
2257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3704              		.loc 1 2257 0
 3705 008e 0124     		movs	r4, #1
 3706 0090 25E0     		b	.L304
 3707              	.LVL291:
 3708              	.L313:
2181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
 3709              		.loc 1 2181 0
 3710 0092 4FF40073 		mov	r3, #512
 3711 0096 4364     		str	r3, [r0, #68]
2182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3712              		.loc 1 2182 0
 3713 0098 0124     		movs	r4, #1
 3714 009a 20E0     		b	.L304
 3715              	.L306:
2216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 3716              		.loc 1 2216 0
 3717 009c 2823     		movs	r3, #40
 3718 009e 80F84130 		strb	r3, [r0, #65]
2217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3719              		.loc 1 2217 0
 3720 00a2 0022     		movs	r2, #0
 3721              	.LVL292:
 3722 00a4 80F84220 		strb	r2, [r0, #66]
2220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3723              		.loc 1 2220 0
 3724 00a8 436C     		ldr	r3, [r0, #68]
 3725 00aa 43F08003 		orr	r3, r3, #128
 3726 00ae 4364     		str	r3, [r0, #68]
2223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3727              		.loc 1 2223 0
 3728 00b0 80F84020 		strb	r2, [r0, #64]
2225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3729              		.loc 1 2225 0
 3730 00b4 0124     		movs	r4, #1
 3731 00b6 12E0     		b	.L304
 3732              	.LVL293:
 3733              	.L314:
2231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3734              		.loc 1 2231 0
 3735 00b8 2A68     		ldr	r2, [r5]
 3736 00ba 5368     		ldr	r3, [r2, #4]
 3737 00bc 23F40043 		bic	r3, r3, #32768
 3738 00c0 5360     		str	r3, [r2, #4]
2234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3739              		.loc 1 2234 0
 3740 00c2 0023     		movs	r3, #0
 3741 00c4 85F84030 		strb	r3, [r5, #64]
2240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3742              		.loc 1 2240 0
 3743 00c8 0421     		movs	r1, #4
 3744 00ca 2846     		mov	r0, r5
 3745              	.LVL294:
 3746 00cc FFF7FEFF 		bl	I2C_Enable_IRQ
ARM GAS  /tmp/ccX4fpHz.s 			page 191


 3747              	.LVL295:
2243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3748              		.loc 1 2243 0
 3749 00d0 2A68     		ldr	r2, [r5]
 3750 00d2 1368     		ldr	r3, [r2]
 3751 00d4 43F40043 		orr	r3, r3, #32768
 3752 00d8 1360     		str	r3, [r2]
2260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 3753              		.loc 1 2260 0
 3754 00da 00E0     		b	.L304
 3755              	.LVL296:
 3756              	.L309:
2264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 3757              		.loc 1 2264 0
 3758 00dc 0224     		movs	r4, #2
 3759              	.LVL297:
 3760              	.L304:
2266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
 3761              		.loc 1 2266 0
 3762 00de 2046     		mov	r0, r4
 3763 00e0 38BD     		pop	{r3, r4, r5, pc}
 3764              	.LVL298:
 3765              	.L310:
2185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3766              		.loc 1 2185 0
 3767 00e2 0224     		movs	r4, #2
 3768 00e4 FBE7     		b	.L304
 3769              	.L316:
 3770 00e6 00BF     		.align	2
 3771              	.L315:
 3772 00e8 0000FFFF 		.word	-65536
 3773 00ec 00000000 		.word	I2C_Slave_ISR_DMA
 3774 00f0 00000000 		.word	I2C_DMASlaveReceiveCplt
 3775 00f4 00000000 		.word	I2C_DMAError
 3776              		.cfi_endproc
 3777              	.LFE156:
 3779              		.section	.text.HAL_I2C_Mem_Write,"ax",%progbits
 3780              		.align	1
 3781              		.global	HAL_I2C_Mem_Write
 3782              		.syntax unified
 3783              		.thumb
 3784              		.thumb_func
 3785              		.fpu fpv5-sp-d16
 3787              	HAL_I2C_Mem_Write:
 3788              	.LFB157:
2281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
 3789              		.loc 1 2281 0
 3790              		.cfi_startproc
 3791              		@ args = 12, pretend = 0, frame = 0
 3792              		@ frame_needed = 0, uses_anonymous_args = 0
 3793              	.LVL299:
 3794 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 3795              	.LCFI59:
 3796              		.cfi_def_cfa_offset 32
 3797              		.cfi_offset 4, -32
 3798              		.cfi_offset 5, -28
 3799              		.cfi_offset 6, -24
ARM GAS  /tmp/ccX4fpHz.s 			page 192


 3800              		.cfi_offset 7, -20
 3801              		.cfi_offset 8, -16
 3802              		.cfi_offset 9, -12
 3803              		.cfi_offset 10, -8
 3804              		.cfi_offset 14, -4
 3805 0004 82B0     		sub	sp, sp, #8
 3806              	.LCFI60:
 3807              		.cfi_def_cfa_offset 40
 3808 0006 BDF82C60 		ldrh	r6, [sp, #44]
2287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 3809              		.loc 1 2287 0
 3810 000a 90F84150 		ldrb	r5, [r0, #65]	@ zero_extendqisi2
 3811 000e EDB2     		uxtb	r5, r5
 3812 0010 202D     		cmp	r5, #32
 3813 0012 40F0BF80 		bne	.L326
2289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 3814              		.loc 1 2289 0
 3815 0016 B6FA86F5 		clz	r5, r6
 3816 001a 6D09     		lsrs	r5, r5, #5
 3817 001c 0A9C     		ldr	r4, [sp, #40]
 3818 001e 002C     		cmp	r4, #0
 3819 0020 08BF     		it	eq
 3820 0022 0125     		moveq	r5, #1
 3821 0024 D5B9     		cbnz	r5, .L333
2296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3822              		.loc 1 2296 0
 3823 0026 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 3824 002a 012C     		cmp	r4, #1
 3825 002c 00F0B780 		beq	.L327
 3826 0030 9846     		mov	r8, r3
 3827 0032 9146     		mov	r9, r2
 3828 0034 0D46     		mov	r5, r1
 3829 0036 0446     		mov	r4, r0
2296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3830              		.loc 1 2296 0 is_stmt 0 discriminator 2
 3831 0038 4FF0010A 		mov	r10, #1
 3832 003c 80F840A0 		strb	r10, [r0, #64]
2299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3833              		.loc 1 2299 0 is_stmt 1 discriminator 2
 3834 0040 FFF7FEFF 		bl	HAL_GetTick
 3835              	.LVL300:
 3836 0044 0746     		mov	r7, r0
 3837              	.LVL301:
2301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 3838              		.loc 1 2301 0 discriminator 2
 3839 0046 0090     		str	r0, [sp]
 3840 0048 1923     		movs	r3, #25
 3841 004a 5246     		mov	r2, r10
 3842 004c 4FF40041 		mov	r1, #32768
 3843 0050 2046     		mov	r0, r4
 3844              	.LVL302:
 3845 0052 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 3846              	.LVL303:
 3847 0056 30B1     		cbz	r0, .L334
2303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3848              		.loc 1 2303 0
 3849 0058 0123     		movs	r3, #1
ARM GAS  /tmp/ccX4fpHz.s 			page 193


 3850 005a 9CE0     		b	.L318
 3851              	.LVL304:
 3852              	.L333:
2291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
 3853              		.loc 1 2291 0
 3854 005c 4FF40073 		mov	r3, #512
 3855              	.LVL305:
 3856 0060 4364     		str	r3, [r0, #68]
2292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3857              		.loc 1 2292 0
 3858 0062 0123     		movs	r3, #1
 3859 0064 97E0     		b	.L318
 3860              	.LVL306:
 3861              	.L334:
2306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MEM;
 3862              		.loc 1 2306 0
 3863 0066 2123     		movs	r3, #33
 3864 0068 84F84130 		strb	r3, [r4, #65]
2307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 3865              		.loc 1 2307 0
 3866 006c 4023     		movs	r3, #64
 3867 006e 84F84230 		strb	r3, [r4, #66]
2308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3868              		.loc 1 2308 0
 3869 0072 0023     		movs	r3, #0
 3870 0074 6364     		str	r3, [r4, #68]
2311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount = Size;
 3871              		.loc 1 2311 0
 3872 0076 0A9A     		ldr	r2, [sp, #40]
 3873 0078 6262     		str	r2, [r4, #36]
2312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 3874              		.loc 1 2312 0
 3875 007a 6685     		strh	r6, [r4, #42]	@ movhi
2313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3876              		.loc 1 2313 0
 3877 007c 6363     		str	r3, [r4, #52]
2316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 3878              		.loc 1 2316 0
 3879 007e 0197     		str	r7, [sp, #4]
 3880 0080 0C9B     		ldr	r3, [sp, #48]
 3881 0082 0093     		str	r3, [sp]
 3882 0084 4346     		mov	r3, r8
 3883 0086 4A46     		mov	r2, r9
 3884 0088 2946     		mov	r1, r5
 3885 008a 2046     		mov	r0, r4
 3886 008c FFF7FEFF 		bl	I2C_RequestMemoryWrite
 3887              	.LVL307:
 3888 0090 70B9     		cbnz	r0, .L335
2324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 3889              		.loc 1 2324 0
 3890 0092 638D     		ldrh	r3, [r4, #42]
 3891 0094 9BB2     		uxth	r3, r3
 3892 0096 FF2B     		cmp	r3, #255
 3893 0098 0FD9     		bls	.L321
2326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTST
 3894              		.loc 1 2326 0
 3895 009a FF22     		movs	r2, #255
ARM GAS  /tmp/ccX4fpHz.s 			page 194


 3896 009c 2285     		strh	r2, [r4, #40]	@ movhi
2327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3897              		.loc 1 2327 0
 3898 009e 0023     		movs	r3, #0
 3899 00a0 0093     		str	r3, [sp]
 3900 00a2 4FF08073 		mov	r3, #16777216
 3901 00a6 2946     		mov	r1, r5
 3902 00a8 2046     		mov	r0, r4
 3903 00aa FFF7FEFF 		bl	I2C_TransferConfig
 3904              	.LVL308:
 3905 00ae 21E0     		b	.L325
 3906              	.L335:
2319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
 3907              		.loc 1 2319 0
 3908 00b0 0023     		movs	r3, #0
 3909 00b2 84F84030 		strb	r3, [r4, #64]
2320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3910              		.loc 1 2320 0
 3911 00b6 5346     		mov	r3, r10
 3912 00b8 6DE0     		b	.L318
 3913              	.L321:
2331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTS
 3914              		.loc 1 2331 0
 3915 00ba 628D     		ldrh	r2, [r4, #42]
 3916 00bc 92B2     		uxth	r2, r2
 3917 00be 2285     		strh	r2, [r4, #40]	@ movhi
2332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3918              		.loc 1 2332 0
 3919 00c0 0023     		movs	r3, #0
 3920 00c2 0093     		str	r3, [sp]
 3921 00c4 4FF00073 		mov	r3, #33554432
 3922 00c8 D2B2     		uxtb	r2, r2
 3923 00ca 2946     		mov	r1, r5
 3924 00cc 2046     		mov	r0, r4
 3925 00ce FFF7FEFF 		bl	I2C_TransferConfig
 3926              	.LVL309:
 3927 00d2 0FE0     		b	.L325
 3928              	.L324:
2367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_ST
 3929              		.loc 1 2367 0
 3930 00d4 628D     		ldrh	r2, [r4, #42]
 3931 00d6 92B2     		uxth	r2, r2
 3932 00d8 2285     		strh	r2, [r4, #40]	@ movhi
2368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 3933              		.loc 1 2368 0
 3934 00da 0023     		movs	r3, #0
 3935 00dc 0093     		str	r3, [sp]
 3936 00de 4FF00073 		mov	r3, #33554432
 3937 00e2 D2B2     		uxtb	r2, r2
 3938 00e4 2946     		mov	r1, r5
 3939 00e6 2046     		mov	r0, r4
 3940 00e8 FFF7FEFF 		bl	I2C_TransferConfig
 3941              	.LVL310:
 3942              	.L323:
2373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3943              		.loc 1 2373 0
 3944 00ec 638D     		ldrh	r3, [r4, #42]
ARM GAS  /tmp/ccX4fpHz.s 			page 195


 3945 00ee 9BB2     		uxth	r3, r3
 3946 00f0 002B     		cmp	r3, #0
 3947 00f2 32D0     		beq	.L336
 3948              	.L325:
2338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 3949              		.loc 1 2338 0
 3950 00f4 3A46     		mov	r2, r7
 3951 00f6 0C99     		ldr	r1, [sp, #48]
 3952 00f8 2046     		mov	r0, r4
 3953 00fa FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
 3954              	.LVL311:
 3955 00fe 0028     		cmp	r0, #0
 3956 0100 4FD1     		bne	.L329
2344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3957              		.loc 1 2344 0
 3958 0102 626A     		ldr	r2, [r4, #36]
 3959 0104 2368     		ldr	r3, [r4]
 3960 0106 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3961 0108 9A62     		str	r2, [r3, #40]
2347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3962              		.loc 1 2347 0
 3963 010a 636A     		ldr	r3, [r4, #36]
 3964 010c 0133     		adds	r3, r3, #1
 3965 010e 6362     		str	r3, [r4, #36]
2349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize--;
 3966              		.loc 1 2349 0
 3967 0110 638D     		ldrh	r3, [r4, #42]
 3968 0112 013B     		subs	r3, r3, #1
 3969 0114 9BB2     		uxth	r3, r3
 3970 0116 6385     		strh	r3, [r4, #42]	@ movhi
2350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3971              		.loc 1 2350 0
 3972 0118 238D     		ldrh	r3, [r4, #40]
 3973 011a 013B     		subs	r3, r3, #1
 3974 011c 9BB2     		uxth	r3, r3
 3975 011e 2385     		strh	r3, [r4, #40]	@ movhi
2352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 3976              		.loc 1 2352 0
 3977 0120 628D     		ldrh	r2, [r4, #42]
 3978 0122 92B2     		uxth	r2, r2
 3979 0124 002A     		cmp	r2, #0
 3980 0126 E1D0     		beq	.L323
2352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 3981              		.loc 1 2352 0 is_stmt 0 discriminator 1
 3982 0128 002B     		cmp	r3, #0
 3983 012a DFD1     		bne	.L323
2355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 3984              		.loc 1 2355 0 is_stmt 1
 3985 012c 0097     		str	r7, [sp]
 3986 012e 0C9B     		ldr	r3, [sp, #48]
 3987 0130 0022     		movs	r2, #0
 3988 0132 8021     		movs	r1, #128
 3989 0134 2046     		mov	r0, r4
 3990 0136 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 3991              	.LVL312:
 3992 013a A0BB     		cbnz	r0, .L330
2360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
ARM GAS  /tmp/ccX4fpHz.s 			page 196


 3993              		.loc 1 2360 0
 3994 013c 638D     		ldrh	r3, [r4, #42]
 3995 013e 9BB2     		uxth	r3, r3
 3996 0140 FF2B     		cmp	r3, #255
 3997 0142 C7D9     		bls	.L324
2362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STA
 3998              		.loc 1 2362 0
 3999 0144 FF22     		movs	r2, #255
 4000 0146 2285     		strh	r2, [r4, #40]	@ movhi
2363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 4001              		.loc 1 2363 0
 4002 0148 0023     		movs	r3, #0
 4003 014a 0093     		str	r3, [sp]
 4004 014c 4FF08073 		mov	r3, #16777216
 4005 0150 2946     		mov	r1, r5
 4006 0152 2046     		mov	r0, r4
 4007 0154 FFF7FEFF 		bl	I2C_TransferConfig
 4008              	.LVL313:
 4009 0158 C8E7     		b	.L323
 4010              	.L336:
2377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4011              		.loc 1 2377 0
 4012 015a 3A46     		mov	r2, r7
 4013 015c 0C99     		ldr	r1, [sp, #48]
 4014 015e 2046     		mov	r0, r4
 4015 0160 FFF7FEFF 		bl	I2C_WaitOnSTOPFlagUntilTimeout
 4016              	.LVL314:
 4017 0164 0346     		mov	r3, r0
 4018 0166 00BB     		cbnz	r0, .L331
2383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4019              		.loc 1 2383 0
 4020 0168 2268     		ldr	r2, [r4]
 4021 016a 2021     		movs	r1, #32
 4022 016c D161     		str	r1, [r2, #28]
2386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4023              		.loc 1 2386 0
 4024 016e 2068     		ldr	r0, [r4]
 4025 0170 4268     		ldr	r2, [r0, #4]
 4026 0172 22F0FF72 		bic	r2, r2, #33423360
 4027 0176 22F48B32 		bic	r2, r2, #71168
 4028 017a 22F4FF72 		bic	r2, r2, #510
 4029 017e 22F00102 		bic	r2, r2, #1
 4030 0182 4260     		str	r2, [r0, #4]
2388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
 4031              		.loc 1 2388 0
 4032 0184 84F84110 		strb	r1, [r4, #65]
2389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4033              		.loc 1 2389 0
 4034 0188 0022     		movs	r2, #0
 4035 018a 84F84220 		strb	r2, [r4, #66]
2392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4036              		.loc 1 2392 0
 4037 018e 84F84020 		strb	r2, [r4, #64]
2394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 4038              		.loc 1 2394 0
 4039 0192 00E0     		b	.L318
 4040              	.LVL315:
ARM GAS  /tmp/ccX4fpHz.s 			page 197


 4041              	.L326:
2398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 4042              		.loc 1 2398 0
 4043 0194 0223     		movs	r3, #2
 4044              	.LVL316:
 4045              	.L318:
2400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4046              		.loc 1 2400 0
 4047 0196 1846     		mov	r0, r3
 4048 0198 02B0     		add	sp, sp, #8
 4049              	.LCFI61:
 4050              		.cfi_remember_state
 4051              		.cfi_def_cfa_offset 32
 4052              		@ sp needed
 4053 019a BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 4054              	.LVL317:
 4055              	.L327:
 4056              	.LCFI62:
 4057              		.cfi_restore_state
2296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4058              		.loc 1 2296 0
 4059 019e 0223     		movs	r3, #2
 4060              	.LVL318:
 4061 01a0 F9E7     		b	.L318
 4062              	.LVL319:
 4063              	.L329:
2340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 4064              		.loc 1 2340 0
 4065 01a2 0123     		movs	r3, #1
 4066 01a4 F7E7     		b	.L318
 4067              	.L330:
2357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 4068              		.loc 1 2357 0
 4069 01a6 0123     		movs	r3, #1
 4070 01a8 F5E7     		b	.L318
 4071              	.L331:
2379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4072              		.loc 1 2379 0
 4073 01aa 0123     		movs	r3, #1
 4074 01ac F3E7     		b	.L318
 4075              		.cfi_endproc
 4076              	.LFE157:
 4078              		.section	.text.HAL_I2C_Mem_Read,"ax",%progbits
 4079              		.align	1
 4080              		.global	HAL_I2C_Mem_Read
 4081              		.syntax unified
 4082              		.thumb
 4083              		.thumb_func
 4084              		.fpu fpv5-sp-d16
 4086              	HAL_I2C_Mem_Read:
 4087              	.LFB158:
2416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
 4088              		.loc 1 2416 0
 4089              		.cfi_startproc
 4090              		@ args = 12, pretend = 0, frame = 0
 4091              		@ frame_needed = 0, uses_anonymous_args = 0
 4092              	.LVL320:
ARM GAS  /tmp/ccX4fpHz.s 			page 198


 4093 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 4094              	.LCFI63:
 4095              		.cfi_def_cfa_offset 32
 4096              		.cfi_offset 4, -32
 4097              		.cfi_offset 5, -28
 4098              		.cfi_offset 6, -24
 4099              		.cfi_offset 7, -20
 4100              		.cfi_offset 8, -16
 4101              		.cfi_offset 9, -12
 4102              		.cfi_offset 10, -8
 4103              		.cfi_offset 14, -4
 4104 0004 82B0     		sub	sp, sp, #8
 4105              	.LCFI64:
 4106              		.cfi_def_cfa_offset 40
 4107 0006 BDF82C60 		ldrh	r6, [sp, #44]
2422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 4108              		.loc 1 2422 0
 4109 000a 90F84150 		ldrb	r5, [r0, #65]	@ zero_extendqisi2
 4110 000e EDB2     		uxtb	r5, r5
 4111 0010 202D     		cmp	r5, #32
 4112 0012 40F0C180 		bne	.L346
2424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4113              		.loc 1 2424 0
 4114 0016 B6FA86F5 		clz	r5, r6
 4115 001a 6D09     		lsrs	r5, r5, #5
 4116 001c 0A9C     		ldr	r4, [sp, #40]
 4117 001e 002C     		cmp	r4, #0
 4118 0020 08BF     		it	eq
 4119 0022 0125     		moveq	r5, #1
 4120 0024 D5B9     		cbnz	r5, .L353
2431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4121              		.loc 1 2431 0
 4122 0026 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 4123 002a 012C     		cmp	r4, #1
 4124 002c 00F0B980 		beq	.L347
 4125 0030 9846     		mov	r8, r3
 4126 0032 9146     		mov	r9, r2
 4127 0034 0D46     		mov	r5, r1
 4128 0036 0446     		mov	r4, r0
2431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4129              		.loc 1 2431 0 is_stmt 0 discriminator 2
 4130 0038 4FF0010A 		mov	r10, #1
 4131 003c 80F840A0 		strb	r10, [r0, #64]
2434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4132              		.loc 1 2434 0 is_stmt 1 discriminator 2
 4133 0040 FFF7FEFF 		bl	HAL_GetTick
 4134              	.LVL321:
 4135 0044 0746     		mov	r7, r0
 4136              	.LVL322:
2436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4137              		.loc 1 2436 0 discriminator 2
 4138 0046 0090     		str	r0, [sp]
 4139 0048 1923     		movs	r3, #25
 4140 004a 5246     		mov	r2, r10
 4141 004c 4FF40041 		mov	r1, #32768
 4142 0050 2046     		mov	r0, r4
 4143              	.LVL323:
ARM GAS  /tmp/ccX4fpHz.s 			page 199


 4144 0052 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 4145              	.LVL324:
 4146 0056 30B1     		cbz	r0, .L354
2438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4147              		.loc 1 2438 0
 4148 0058 0123     		movs	r3, #1
 4149 005a 9EE0     		b	.L338
 4150              	.LVL325:
 4151              	.L353:
2426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
 4152              		.loc 1 2426 0
 4153 005c 4FF40073 		mov	r3, #512
 4154              	.LVL326:
 4155 0060 4364     		str	r3, [r0, #68]
2427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4156              		.loc 1 2427 0
 4157 0062 0123     		movs	r3, #1
 4158 0064 99E0     		b	.L338
 4159              	.LVL327:
 4160              	.L354:
2441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MEM;
 4161              		.loc 1 2441 0
 4162 0066 2223     		movs	r3, #34
 4163 0068 84F84130 		strb	r3, [r4, #65]
2442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 4164              		.loc 1 2442 0
 4165 006c 4023     		movs	r3, #64
 4166 006e 84F84230 		strb	r3, [r4, #66]
2443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4167              		.loc 1 2443 0
 4168 0072 0023     		movs	r3, #0
 4169 0074 6364     		str	r3, [r4, #68]
2446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount = Size;
 4170              		.loc 1 2446 0
 4171 0076 0A9A     		ldr	r2, [sp, #40]
 4172 0078 6262     		str	r2, [r4, #36]
2447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 4173              		.loc 1 2447 0
 4174 007a 6685     		strh	r6, [r4, #42]	@ movhi
2448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4175              		.loc 1 2448 0
 4176 007c 6363     		str	r3, [r4, #52]
2451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4177              		.loc 1 2451 0
 4178 007e 0197     		str	r7, [sp, #4]
 4179 0080 0C9B     		ldr	r3, [sp, #48]
 4180 0082 0093     		str	r3, [sp]
 4181 0084 4346     		mov	r3, r8
 4182 0086 4A46     		mov	r2, r9
 4183 0088 2946     		mov	r1, r5
 4184 008a 2046     		mov	r0, r4
 4185 008c FFF7FEFF 		bl	I2C_RequestMemoryRead
 4186              	.LVL328:
 4187 0090 70B9     		cbnz	r0, .L355
2460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4188              		.loc 1 2460 0
 4189 0092 638D     		ldrh	r3, [r4, #42]
ARM GAS  /tmp/ccX4fpHz.s 			page 200


 4190 0094 9BB2     		uxth	r3, r3
 4191 0096 FF2B     		cmp	r3, #255
 4192 0098 0FD9     		bls	.L341
2462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_GENERATE_S
 4193              		.loc 1 2462 0
 4194 009a FF22     		movs	r2, #255
 4195 009c 2285     		strh	r2, [r4, #40]	@ movhi
2463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4196              		.loc 1 2463 0
 4197 009e 454B     		ldr	r3, .L357
 4198 00a0 0093     		str	r3, [sp]
 4199 00a2 4FF08073 		mov	r3, #16777216
 4200 00a6 2946     		mov	r1, r5
 4201 00a8 2046     		mov	r0, r4
 4202 00aa FFF7FEFF 		bl	I2C_TransferConfig
 4203              	.LVL329:
 4204 00ae 21E0     		b	.L345
 4205              	.L355:
2454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
 4206              		.loc 1 2454 0
 4207 00b0 0023     		movs	r3, #0
 4208 00b2 84F84030 		strb	r3, [r4, #64]
2455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4209              		.loc 1 2455 0
 4210 00b6 5346     		mov	r3, r10
 4211 00b8 6FE0     		b	.L338
 4212              	.L341:
2467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_
 4213              		.loc 1 2467 0
 4214 00ba 628D     		ldrh	r2, [r4, #42]
 4215 00bc 92B2     		uxth	r2, r2
 4216 00be 2285     		strh	r2, [r4, #40]	@ movhi
2468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4217              		.loc 1 2468 0
 4218 00c0 3C4B     		ldr	r3, .L357
 4219 00c2 0093     		str	r3, [sp]
 4220 00c4 4FF00073 		mov	r3, #33554432
 4221 00c8 D2B2     		uxtb	r2, r2
 4222 00ca 2946     		mov	r1, r5
 4223 00cc 2046     		mov	r0, r4
 4224 00ce FFF7FEFF 		bl	I2C_TransferConfig
 4225              	.LVL330:
 4226 00d2 0FE0     		b	.L345
 4227              	.L344:
2503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_ST
 4228              		.loc 1 2503 0
 4229 00d4 628D     		ldrh	r2, [r4, #42]
 4230 00d6 92B2     		uxth	r2, r2
 4231 00d8 2285     		strh	r2, [r4, #40]	@ movhi
2504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 4232              		.loc 1 2504 0
 4233 00da 0023     		movs	r3, #0
 4234 00dc 0093     		str	r3, [sp]
 4235 00de 4FF00073 		mov	r3, #33554432
 4236 00e2 D2B2     		uxtb	r2, r2
 4237 00e4 2946     		mov	r1, r5
 4238 00e6 2046     		mov	r0, r4
ARM GAS  /tmp/ccX4fpHz.s 			page 201


 4239 00e8 FFF7FEFF 		bl	I2C_TransferConfig
 4240              	.LVL331:
 4241              	.L343:
2508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4242              		.loc 1 2508 0
 4243 00ec 638D     		ldrh	r3, [r4, #42]
 4244 00ee 9BB2     		uxth	r3, r3
 4245 00f0 002B     		cmp	r3, #0
 4246 00f2 34D0     		beq	.L356
 4247              	.L345:
2474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 4248              		.loc 1 2474 0
 4249 00f4 0097     		str	r7, [sp]
 4250 00f6 0C9B     		ldr	r3, [sp, #48]
 4251 00f8 0022     		movs	r2, #0
 4252 00fa 0421     		movs	r1, #4
 4253 00fc 2046     		mov	r0, r4
 4254 00fe FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 4255              	.LVL332:
 4256 0102 0028     		cmp	r0, #0
 4257 0104 4FD1     		bne	.L349
2480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4258              		.loc 1 2480 0
 4259 0106 2368     		ldr	r3, [r4]
 4260 0108 5A6A     		ldr	r2, [r3, #36]
 4261 010a 636A     		ldr	r3, [r4, #36]
 4262 010c 1A70     		strb	r2, [r3]
2483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4263              		.loc 1 2483 0
 4264 010e 636A     		ldr	r3, [r4, #36]
 4265 0110 0133     		adds	r3, r3, #1
 4266 0112 6362     		str	r3, [r4, #36]
2485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount--;
 4267              		.loc 1 2485 0
 4268 0114 238D     		ldrh	r3, [r4, #40]
 4269 0116 013B     		subs	r3, r3, #1
 4270 0118 9BB2     		uxth	r3, r3
 4271 011a 2385     		strh	r3, [r4, #40]	@ movhi
2486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4272              		.loc 1 2486 0
 4273 011c 628D     		ldrh	r2, [r4, #42]
 4274 011e 013A     		subs	r2, r2, #1
 4275 0120 92B2     		uxth	r2, r2
 4276 0122 6285     		strh	r2, [r4, #42]	@ movhi
2488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 4277              		.loc 1 2488 0
 4278 0124 628D     		ldrh	r2, [r4, #42]
 4279 0126 92B2     		uxth	r2, r2
 4280 0128 002A     		cmp	r2, #0
 4281 012a DFD0     		beq	.L343
2488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 4282              		.loc 1 2488 0 is_stmt 0 discriminator 1
 4283 012c 002B     		cmp	r3, #0
 4284 012e DDD1     		bne	.L343
2491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 4285              		.loc 1 2491 0 is_stmt 1
 4286 0130 0097     		str	r7, [sp]
ARM GAS  /tmp/ccX4fpHz.s 			page 202


 4287 0132 0C9B     		ldr	r3, [sp, #48]
 4288 0134 0022     		movs	r2, #0
 4289 0136 8021     		movs	r1, #128
 4290 0138 2046     		mov	r0, r4
 4291 013a FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 4292              	.LVL333:
 4293 013e A0BB     		cbnz	r0, .L350
2496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 4294              		.loc 1 2496 0
 4295 0140 638D     		ldrh	r3, [r4, #42]
 4296 0142 9BB2     		uxth	r3, r3
 4297 0144 FF2B     		cmp	r3, #255
 4298 0146 C5D9     		bls	.L344
2498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t) hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_ST
 4299              		.loc 1 2498 0
 4300 0148 FF22     		movs	r2, #255
 4301 014a 2285     		strh	r2, [r4, #40]	@ movhi
2499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 4302              		.loc 1 2499 0
 4303 014c 0023     		movs	r3, #0
 4304 014e 0093     		str	r3, [sp]
 4305 0150 4FF08073 		mov	r3, #16777216
 4306 0154 2946     		mov	r1, r5
 4307 0156 2046     		mov	r0, r4
 4308 0158 FFF7FEFF 		bl	I2C_TransferConfig
 4309              	.LVL334:
 4310 015c C6E7     		b	.L343
 4311              	.L356:
2512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4312              		.loc 1 2512 0
 4313 015e 3A46     		mov	r2, r7
 4314 0160 0C99     		ldr	r1, [sp, #48]
 4315 0162 2046     		mov	r0, r4
 4316 0164 FFF7FEFF 		bl	I2C_WaitOnSTOPFlagUntilTimeout
 4317              	.LVL335:
 4318 0168 0346     		mov	r3, r0
 4319 016a 00BB     		cbnz	r0, .L351
2518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4320              		.loc 1 2518 0
 4321 016c 2268     		ldr	r2, [r4]
 4322 016e 2021     		movs	r1, #32
 4323 0170 D161     		str	r1, [r2, #28]
2521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4324              		.loc 1 2521 0
 4325 0172 2068     		ldr	r0, [r4]
 4326 0174 4268     		ldr	r2, [r0, #4]
 4327 0176 22F0FF72 		bic	r2, r2, #33423360
 4328 017a 22F48B32 		bic	r2, r2, #71168
 4329 017e 22F4FF72 		bic	r2, r2, #510
 4330 0182 22F00102 		bic	r2, r2, #1
 4331 0186 4260     		str	r2, [r0, #4]
2523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
 4332              		.loc 1 2523 0
 4333 0188 84F84110 		strb	r1, [r4, #65]
2524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4334              		.loc 1 2524 0
 4335 018c 0022     		movs	r2, #0
ARM GAS  /tmp/ccX4fpHz.s 			page 203


 4336 018e 84F84220 		strb	r2, [r4, #66]
2527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4337              		.loc 1 2527 0
 4338 0192 84F84020 		strb	r2, [r4, #64]
2529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 4339              		.loc 1 2529 0
 4340 0196 00E0     		b	.L338
 4341              	.LVL336:
 4342              	.L346:
2533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 4343              		.loc 1 2533 0
 4344 0198 0223     		movs	r3, #2
 4345              	.LVL337:
 4346              	.L338:
2535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
 4347              		.loc 1 2535 0
 4348 019a 1846     		mov	r0, r3
 4349 019c 02B0     		add	sp, sp, #8
 4350              	.LCFI65:
 4351              		.cfi_remember_state
 4352              		.cfi_def_cfa_offset 32
 4353              		@ sp needed
 4354 019e BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 4355              	.LVL338:
 4356              	.L347:
 4357              	.LCFI66:
 4358              		.cfi_restore_state
2431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4359              		.loc 1 2431 0
 4360 01a2 0223     		movs	r3, #2
 4361              	.LVL339:
 4362 01a4 F9E7     		b	.L338
 4363              	.LVL340:
 4364              	.L349:
2476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 4365              		.loc 1 2476 0
 4366 01a6 0123     		movs	r3, #1
 4367 01a8 F7E7     		b	.L338
 4368              	.L350:
2493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 4369              		.loc 1 2493 0
 4370 01aa 0123     		movs	r3, #1
 4371 01ac F5E7     		b	.L338
 4372              	.L351:
2514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4373              		.loc 1 2514 0
 4374 01ae 0123     		movs	r3, #1
 4375 01b0 F3E7     		b	.L338
 4376              	.L358:
 4377 01b2 00BF     		.align	2
 4378              	.L357:
 4379 01b4 00240080 		.word	-2147474432
 4380              		.cfi_endproc
 4381              	.LFE158:
 4383              		.section	.text.HAL_I2C_Mem_Write_IT,"ax",%progbits
 4384              		.align	1
 4385              		.global	HAL_I2C_Mem_Write_IT
ARM GAS  /tmp/ccX4fpHz.s 			page 204


 4386              		.syntax unified
 4387              		.thumb
 4388              		.thumb_func
 4389              		.fpu fpv5-sp-d16
 4391              	HAL_I2C_Mem_Write_IT:
 4392              	.LFB159:
2549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
 4393              		.loc 1 2549 0
 4394              		.cfi_startproc
 4395              		@ args = 8, pretend = 0, frame = 0
 4396              		@ frame_needed = 0, uses_anonymous_args = 0
 4397              	.LVL341:
 4398 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 4399              	.LCFI67:
 4400              		.cfi_def_cfa_offset 24
 4401              		.cfi_offset 4, -24
 4402              		.cfi_offset 5, -20
 4403              		.cfi_offset 6, -16
 4404              		.cfi_offset 7, -12
 4405              		.cfi_offset 8, -8
 4406              		.cfi_offset 14, -4
 4407 0004 82B0     		sub	sp, sp, #8
 4408              	.LCFI68:
 4409              		.cfi_def_cfa_offset 32
 4410 0006 BDF82460 		ldrh	r6, [sp, #36]
2556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 4411              		.loc 1 2556 0
 4412 000a 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 4413 000e E4B2     		uxtb	r4, r4
 4414 0010 202C     		cmp	r4, #32
 4415 0012 5BD1     		bne	.L365
2558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4416              		.loc 1 2558 0
 4417 0014 B6FA86F4 		clz	r4, r6
 4418 0018 6409     		lsrs	r4, r4, #5
 4419 001a 089D     		ldr	r5, [sp, #32]
 4420 001c 002D     		cmp	r5, #0
 4421 001e 08BF     		it	eq
 4422 0020 0124     		moveq	r4, #1
 4423 0022 002C     		cmp	r4, #0
 4424 0024 38D1     		bne	.L369
2564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4425              		.loc 1 2564 0
 4426 0026 0468     		ldr	r4, [r0]
 4427 0028 A469     		ldr	r4, [r4, #24]
 4428 002a 14F4004F 		tst	r4, #32768
 4429 002e 52D1     		bne	.L366
2570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4430              		.loc 1 2570 0
 4431 0030 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 4432 0034 012C     		cmp	r4, #1
 4433 0036 50D0     		beq	.L367
 4434 0038 1F46     		mov	r7, r3
 4435 003a 1446     		mov	r4, r2
 4436 003c 8846     		mov	r8, r1
 4437 003e 0546     		mov	r5, r0
2570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/ccX4fpHz.s 			page 205


 4438              		.loc 1 2570 0 is_stmt 0 discriminator 2
 4439 0040 0123     		movs	r3, #1
 4440              	.LVL342:
 4441 0042 80F84030 		strb	r3, [r0, #64]
2573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4442              		.loc 1 2573 0 is_stmt 1 discriminator 2
 4443 0046 FFF7FEFF 		bl	HAL_GetTick
 4444              	.LVL343:
2575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
 4445              		.loc 1 2575 0 discriminator 2
 4446 004a 2123     		movs	r3, #33
 4447 004c 85F84130 		strb	r3, [r5, #65]
2576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 4448              		.loc 1 2576 0 discriminator 2
 4449 0050 4023     		movs	r3, #64
 4450 0052 85F84230 		strb	r3, [r5, #66]
2577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4451              		.loc 1 2577 0 discriminator 2
 4452 0056 0023     		movs	r3, #0
 4453 0058 6B64     		str	r3, [r5, #68]
2580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 4454              		.loc 1 2580 0 discriminator 2
 4455 005a 089B     		ldr	r3, [sp, #32]
 4456 005c 6B62     		str	r3, [r5, #36]
2581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 4457              		.loc 1 2581 0 discriminator 2
 4458 005e 6E85     		strh	r6, [r5, #42]	@ movhi
2582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
 4459              		.loc 1 2582 0 discriminator 2
 4460 0060 1F4B     		ldr	r3, .L370
 4461 0062 EB62     		str	r3, [r5, #44]
2583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4462              		.loc 1 2583 0 discriminator 2
 4463 0064 1F4B     		ldr	r3, .L370+4
 4464 0066 6B63     		str	r3, [r5, #52]
2585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4465              		.loc 1 2585 0 discriminator 2
 4466 0068 6B8D     		ldrh	r3, [r5, #42]
 4467 006a 9BB2     		uxth	r3, r3
 4468 006c FF2B     		cmp	r3, #255
 4469 006e 18D9     		bls	.L362
2587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 4470              		.loc 1 2587 0
 4471 0070 FF23     		movs	r3, #255
 4472 0072 2B85     		strh	r3, [r5, #40]	@ movhi
 4473              	.LVL344:
2588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4474              		.loc 1 2588 0
 4475 0074 4FF08076 		mov	r6, #16777216
 4476              	.LVL345:
 4477              	.L363:
2597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4478              		.loc 1 2597 0
 4479 0078 0190     		str	r0, [sp, #4]
 4480 007a 1923     		movs	r3, #25
 4481 007c 0093     		str	r3, [sp]
 4482 007e 3B46     		mov	r3, r7
ARM GAS  /tmp/ccX4fpHz.s 			page 206


 4483 0080 2246     		mov	r2, r4
 4484 0082 4146     		mov	r1, r8
 4485 0084 2846     		mov	r0, r5
 4486              	.LVL346:
 4487 0086 FFF7FEFF 		bl	I2C_RequestMemoryWrite
 4488              	.LVL347:
 4489 008a 0446     		mov	r4, r0
 4490 008c 70B1     		cbz	r0, .L364
2600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
 4491              		.loc 1 2600 0
 4492 008e 0023     		movs	r3, #0
 4493 0090 85F84030 		strb	r3, [r5, #64]
2601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4494              		.loc 1 2601 0
 4495 0094 0124     		movs	r4, #1
 4496 0096 1AE0     		b	.L360
 4497              	.LVL348:
 4498              	.L369:
2560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
 4499              		.loc 1 2560 0
 4500 0098 4FF40073 		mov	r3, #512
 4501              	.LVL349:
 4502 009c 4364     		str	r3, [r0, #68]
2561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4503              		.loc 1 2561 0
 4504 009e 0124     		movs	r4, #1
 4505 00a0 15E0     		b	.L360
 4506              	.LVL350:
 4507              	.L362:
2592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 4508              		.loc 1 2592 0
 4509 00a2 6B8D     		ldrh	r3, [r5, #42]
 4510 00a4 2B85     		strh	r3, [r5, #40]	@ movhi
 4511              	.LVL351:
2593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4512              		.loc 1 2593 0
 4513 00a6 4FF00076 		mov	r6, #33554432
 4514 00aa E5E7     		b	.L363
 4515              	.LVL352:
 4516              	.L364:
2605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4517              		.loc 1 2605 0
 4518 00ac 95F82820 		ldrb	r2, [r5, #40]	@ zero_extendqisi2
 4519 00b0 0027     		movs	r7, #0
 4520 00b2 0097     		str	r7, [sp]
 4521 00b4 3346     		mov	r3, r6
 4522 00b6 4146     		mov	r1, r8
 4523 00b8 2846     		mov	r0, r5
 4524 00ba FFF7FEFF 		bl	I2C_TransferConfig
 4525              	.LVL353:
2608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4526              		.loc 1 2608 0
 4527 00be 85F84070 		strb	r7, [r5, #64]
2617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4528              		.loc 1 2617 0
 4529 00c2 0121     		movs	r1, #1
 4530 00c4 2846     		mov	r0, r5
ARM GAS  /tmp/ccX4fpHz.s 			page 207


 4531 00c6 FFF7FEFF 		bl	I2C_Enable_IRQ
 4532              	.LVL354:
2619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 4533              		.loc 1 2619 0
 4534 00ca 00E0     		b	.L360
 4535              	.LVL355:
 4536              	.L365:
2623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 4537              		.loc 1 2623 0
 4538 00cc 0224     		movs	r4, #2
 4539              	.LVL356:
 4540              	.L360:
2625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4541              		.loc 1 2625 0
 4542 00ce 2046     		mov	r0, r4
 4543 00d0 02B0     		add	sp, sp, #8
 4544              	.LCFI69:
 4545              		.cfi_remember_state
 4546              		.cfi_def_cfa_offset 24
 4547              		@ sp needed
 4548 00d2 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4549              	.LVL357:
 4550              	.L366:
 4551              	.LCFI70:
 4552              		.cfi_restore_state
2566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4553              		.loc 1 2566 0
 4554 00d6 0224     		movs	r4, #2
 4555 00d8 F9E7     		b	.L360
 4556              	.L367:
2570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4557              		.loc 1 2570 0
 4558 00da 0224     		movs	r4, #2
 4559 00dc F7E7     		b	.L360
 4560              	.L371:
 4561 00de 00BF     		.align	2
 4562              	.L370:
 4563 00e0 0000FFFF 		.word	-65536
 4564 00e4 00000000 		.word	I2C_Master_ISR_IT
 4565              		.cfi_endproc
 4566              	.LFE159:
 4568              		.section	.text.HAL_I2C_Mem_Read_IT,"ax",%progbits
 4569              		.align	1
 4570              		.global	HAL_I2C_Mem_Read_IT
 4571              		.syntax unified
 4572              		.thumb
 4573              		.thumb_func
 4574              		.fpu fpv5-sp-d16
 4576              	HAL_I2C_Mem_Read_IT:
 4577              	.LFB160:
2640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
 4578              		.loc 1 2640 0
 4579              		.cfi_startproc
 4580              		@ args = 8, pretend = 0, frame = 0
 4581              		@ frame_needed = 0, uses_anonymous_args = 0
 4582              	.LVL358:
 4583 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
ARM GAS  /tmp/ccX4fpHz.s 			page 208


 4584              	.LCFI71:
 4585              		.cfi_def_cfa_offset 24
 4586              		.cfi_offset 4, -24
 4587              		.cfi_offset 5, -20
 4588              		.cfi_offset 6, -16
 4589              		.cfi_offset 7, -12
 4590              		.cfi_offset 8, -8
 4591              		.cfi_offset 14, -4
 4592 0004 82B0     		sub	sp, sp, #8
 4593              	.LCFI72:
 4594              		.cfi_def_cfa_offset 32
 4595 0006 BDF82460 		ldrh	r6, [sp, #36]
2647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 4596              		.loc 1 2647 0
 4597 000a 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 4598 000e E4B2     		uxtb	r4, r4
 4599 0010 202C     		cmp	r4, #32
 4600 0012 5CD1     		bne	.L378
2649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4601              		.loc 1 2649 0
 4602 0014 B6FA86F4 		clz	r4, r6
 4603 0018 6409     		lsrs	r4, r4, #5
 4604 001a 089D     		ldr	r5, [sp, #32]
 4605 001c 002D     		cmp	r5, #0
 4606 001e 08BF     		it	eq
 4607 0020 0124     		moveq	r4, #1
 4608 0022 002C     		cmp	r4, #0
 4609 0024 38D1     		bne	.L382
2655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4610              		.loc 1 2655 0
 4611 0026 0468     		ldr	r4, [r0]
 4612 0028 A469     		ldr	r4, [r4, #24]
 4613 002a 14F4004F 		tst	r4, #32768
 4614 002e 53D1     		bne	.L379
2661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4615              		.loc 1 2661 0
 4616 0030 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 4617 0034 012C     		cmp	r4, #1
 4618 0036 51D0     		beq	.L380
 4619 0038 1F46     		mov	r7, r3
 4620 003a 1446     		mov	r4, r2
 4621 003c 8846     		mov	r8, r1
 4622 003e 0546     		mov	r5, r0
2661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4623              		.loc 1 2661 0 is_stmt 0 discriminator 2
 4624 0040 0123     		movs	r3, #1
 4625              	.LVL359:
 4626 0042 80F84030 		strb	r3, [r0, #64]
2664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4627              		.loc 1 2664 0 is_stmt 1 discriminator 2
 4628 0046 FFF7FEFF 		bl	HAL_GetTick
 4629              	.LVL360:
2666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
 4630              		.loc 1 2666 0 discriminator 2
 4631 004a 2223     		movs	r3, #34
 4632 004c 85F84130 		strb	r3, [r5, #65]
2667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
ARM GAS  /tmp/ccX4fpHz.s 			page 209


 4633              		.loc 1 2667 0 discriminator 2
 4634 0050 4023     		movs	r3, #64
 4635 0052 85F84230 		strb	r3, [r5, #66]
2668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4636              		.loc 1 2668 0 discriminator 2
 4637 0056 0023     		movs	r3, #0
 4638 0058 6B64     		str	r3, [r5, #68]
2671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 4639              		.loc 1 2671 0 discriminator 2
 4640 005a 089B     		ldr	r3, [sp, #32]
 4641 005c 6B62     		str	r3, [r5, #36]
2672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 4642              		.loc 1 2672 0 discriminator 2
 4643 005e 6E85     		strh	r6, [r5, #42]	@ movhi
2673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
 4644              		.loc 1 2673 0 discriminator 2
 4645 0060 1F4B     		ldr	r3, .L383
 4646 0062 EB62     		str	r3, [r5, #44]
2674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4647              		.loc 1 2674 0 discriminator 2
 4648 0064 1F4B     		ldr	r3, .L383+4
 4649 0066 6B63     		str	r3, [r5, #52]
2676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4650              		.loc 1 2676 0 discriminator 2
 4651 0068 6B8D     		ldrh	r3, [r5, #42]
 4652 006a 9BB2     		uxth	r3, r3
 4653 006c FF2B     		cmp	r3, #255
 4654 006e 18D9     		bls	.L375
2678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 4655              		.loc 1 2678 0
 4656 0070 FF23     		movs	r3, #255
 4657 0072 2B85     		strh	r3, [r5, #40]	@ movhi
 4658              	.LVL361:
2679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4659              		.loc 1 2679 0
 4660 0074 4FF08076 		mov	r6, #16777216
 4661              	.LVL362:
 4662              	.L376:
2688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4663              		.loc 1 2688 0
 4664 0078 0190     		str	r0, [sp, #4]
 4665 007a 1923     		movs	r3, #25
 4666 007c 0093     		str	r3, [sp]
 4667 007e 3B46     		mov	r3, r7
 4668 0080 2246     		mov	r2, r4
 4669 0082 4146     		mov	r1, r8
 4670 0084 2846     		mov	r0, r5
 4671              	.LVL363:
 4672 0086 FFF7FEFF 		bl	I2C_RequestMemoryRead
 4673              	.LVL364:
 4674 008a 0446     		mov	r4, r0
 4675 008c 70B1     		cbz	r0, .L377
2691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
 4676              		.loc 1 2691 0
 4677 008e 0023     		movs	r3, #0
 4678 0090 85F84030 		strb	r3, [r5, #64]
2692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
ARM GAS  /tmp/ccX4fpHz.s 			page 210


 4679              		.loc 1 2692 0
 4680 0094 0124     		movs	r4, #1
 4681 0096 1BE0     		b	.L373
 4682              	.LVL365:
 4683              	.L382:
2651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
 4684              		.loc 1 2651 0
 4685 0098 4FF40073 		mov	r3, #512
 4686              	.LVL366:
 4687 009c 4364     		str	r3, [r0, #68]
2652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4688              		.loc 1 2652 0
 4689 009e 0124     		movs	r4, #1
 4690 00a0 16E0     		b	.L373
 4691              	.LVL367:
 4692              	.L375:
2683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 4693              		.loc 1 2683 0
 4694 00a2 6B8D     		ldrh	r3, [r5, #42]
 4695 00a4 2B85     		strh	r3, [r5, #40]	@ movhi
 4696              	.LVL368:
2684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4697              		.loc 1 2684 0
 4698 00a6 4FF00076 		mov	r6, #33554432
 4699 00aa E5E7     		b	.L376
 4700              	.LVL369:
 4701              	.L377:
2696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4702              		.loc 1 2696 0
 4703 00ac 95F82820 		ldrb	r2, [r5, #40]	@ zero_extendqisi2
 4704 00b0 0D4B     		ldr	r3, .L383+8
 4705 00b2 0093     		str	r3, [sp]
 4706 00b4 3346     		mov	r3, r6
 4707 00b6 4146     		mov	r1, r8
 4708 00b8 2846     		mov	r0, r5
 4709 00ba FFF7FEFF 		bl	I2C_TransferConfig
 4710              	.LVL370:
2699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4711              		.loc 1 2699 0
 4712 00be 0023     		movs	r3, #0
 4713 00c0 85F84030 		strb	r3, [r5, #64]
2708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4714              		.loc 1 2708 0
 4715 00c4 0221     		movs	r1, #2
 4716 00c6 2846     		mov	r0, r5
 4717 00c8 FFF7FEFF 		bl	I2C_Enable_IRQ
 4718              	.LVL371:
2710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 4719              		.loc 1 2710 0
 4720 00cc 00E0     		b	.L373
 4721              	.LVL372:
 4722              	.L378:
2714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 4723              		.loc 1 2714 0
 4724 00ce 0224     		movs	r4, #2
 4725              	.LVL373:
 4726              	.L373:
ARM GAS  /tmp/ccX4fpHz.s 			page 211


2716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
 4727              		.loc 1 2716 0
 4728 00d0 2046     		mov	r0, r4
 4729 00d2 02B0     		add	sp, sp, #8
 4730              	.LCFI73:
 4731              		.cfi_remember_state
 4732              		.cfi_def_cfa_offset 24
 4733              		@ sp needed
 4734 00d4 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4735              	.LVL374:
 4736              	.L379:
 4737              	.LCFI74:
 4738              		.cfi_restore_state
2657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4739              		.loc 1 2657 0
 4740 00d8 0224     		movs	r4, #2
 4741 00da F9E7     		b	.L373
 4742              	.L380:
2661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4743              		.loc 1 2661 0
 4744 00dc 0224     		movs	r4, #2
 4745 00de F7E7     		b	.L373
 4746              	.L384:
 4747              		.align	2
 4748              	.L383:
 4749 00e0 0000FFFF 		.word	-65536
 4750 00e4 00000000 		.word	I2C_Master_ISR_IT
 4751 00e8 00240080 		.word	-2147474432
 4752              		.cfi_endproc
 4753              	.LFE160:
 4755              		.section	.text.HAL_I2C_Mem_Write_DMA,"ax",%progbits
 4756              		.align	1
 4757              		.global	HAL_I2C_Mem_Write_DMA
 4758              		.syntax unified
 4759              		.thumb
 4760              		.thumb_func
 4761              		.fpu fpv5-sp-d16
 4763              	HAL_I2C_Mem_Write_DMA:
 4764              	.LFB161:
2730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
 4765              		.loc 1 2730 0
 4766              		.cfi_startproc
 4767              		@ args = 8, pretend = 0, frame = 0
 4768              		@ frame_needed = 0, uses_anonymous_args = 0
 4769              	.LVL375:
 4770 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 4771              	.LCFI75:
 4772              		.cfi_def_cfa_offset 28
 4773              		.cfi_offset 4, -28
 4774              		.cfi_offset 5, -24
 4775              		.cfi_offset 6, -20
 4776              		.cfi_offset 7, -16
 4777              		.cfi_offset 8, -12
 4778              		.cfi_offset 9, -8
 4779              		.cfi_offset 14, -4
 4780 0004 83B0     		sub	sp, sp, #12
 4781              	.LCFI76:
ARM GAS  /tmp/ccX4fpHz.s 			page 212


 4782              		.cfi_def_cfa_offset 40
 4783 0006 BDF82C50 		ldrh	r5, [sp, #44]
2738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 4784              		.loc 1 2738 0
 4785 000a 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 4786 000e E4B2     		uxtb	r4, r4
 4787 0010 202C     		cmp	r4, #32
 4788 0012 40F09A80 		bne	.L394
2740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4789              		.loc 1 2740 0
 4790 0016 B5FA85F4 		clz	r4, r5
 4791 001a 6409     		lsrs	r4, r4, #5
 4792 001c 0A9E     		ldr	r6, [sp, #40]
 4793 001e 002E     		cmp	r6, #0
 4794 0020 08BF     		it	eq
 4795 0022 0124     		moveq	r4, #1
 4796 0024 002C     		cmp	r4, #0
 4797 0026 59D1     		bne	.L399
2746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4798              		.loc 1 2746 0
 4799 0028 0468     		ldr	r4, [r0]
 4800 002a A469     		ldr	r4, [r4, #24]
 4801 002c 14F4004F 		tst	r4, #32768
 4802 0030 40F09080 		bne	.L395
2752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4803              		.loc 1 2752 0
 4804 0034 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 4805 0038 012C     		cmp	r4, #1
 4806 003a 00F08D80 		beq	.L396
 4807 003e 1F46     		mov	r7, r3
 4808 0040 1646     		mov	r6, r2
 4809 0042 8846     		mov	r8, r1
 4810 0044 0446     		mov	r4, r0
2752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4811              		.loc 1 2752 0 is_stmt 0 discriminator 2
 4812 0046 0123     		movs	r3, #1
 4813              	.LVL376:
 4814 0048 80F84030 		strb	r3, [r0, #64]
2755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4815              		.loc 1 2755 0 is_stmt 1 discriminator 2
 4816 004c FFF7FEFF 		bl	HAL_GetTick
 4817              	.LVL377:
2757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
 4818              		.loc 1 2757 0 discriminator 2
 4819 0050 2123     		movs	r3, #33
 4820 0052 84F84130 		strb	r3, [r4, #65]
2758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 4821              		.loc 1 2758 0 discriminator 2
 4822 0056 4023     		movs	r3, #64
 4823 0058 84F84230 		strb	r3, [r4, #66]
2759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4824              		.loc 1 2759 0 discriminator 2
 4825 005c 0023     		movs	r3, #0
 4826 005e 6364     		str	r3, [r4, #68]
2762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 4827              		.loc 1 2762 0 discriminator 2
 4828 0060 0A9B     		ldr	r3, [sp, #40]
ARM GAS  /tmp/ccX4fpHz.s 			page 213


 4829 0062 6362     		str	r3, [r4, #36]
2763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 4830              		.loc 1 2763 0 discriminator 2
 4831 0064 6585     		strh	r5, [r4, #42]	@ movhi
2764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
 4832              		.loc 1 2764 0 discriminator 2
 4833 0066 3D4B     		ldr	r3, .L402
 4834 0068 E362     		str	r3, [r4, #44]
2765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4835              		.loc 1 2765 0 discriminator 2
 4836 006a 3D4B     		ldr	r3, .L402+4
 4837 006c 6363     		str	r3, [r4, #52]
2767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4838              		.loc 1 2767 0 discriminator 2
 4839 006e 638D     		ldrh	r3, [r4, #42]
 4840 0070 9BB2     		uxth	r3, r3
 4841 0072 FF2B     		cmp	r3, #255
 4842 0074 37D9     		bls	.L388
2769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 4843              		.loc 1 2769 0
 4844 0076 FF23     		movs	r3, #255
 4845 0078 2385     		strh	r3, [r4, #40]	@ movhi
 4846              	.LVL378:
2770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4847              		.loc 1 2770 0
 4848 007a 4FF08079 		mov	r9, #16777216
 4849              	.LVL379:
 4850              	.L389:
2779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4851              		.loc 1 2779 0
 4852 007e 0190     		str	r0, [sp, #4]
 4853 0080 1923     		movs	r3, #25
 4854 0082 0093     		str	r3, [sp]
 4855 0084 3B46     		mov	r3, r7
 4856 0086 3246     		mov	r2, r6
 4857 0088 4146     		mov	r1, r8
 4858 008a 2046     		mov	r0, r4
 4859              	.LVL380:
 4860 008c FFF7FEFF 		bl	I2C_RequestMemoryWrite
 4861              	.LVL381:
 4862 0090 0028     		cmp	r0, #0
 4863 0092 2DD1     		bne	.L400
2787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4864              		.loc 1 2787 0
 4865 0094 A36B     		ldr	r3, [r4, #56]
 4866 0096 002B     		cmp	r3, #0
 4867 0098 2FD0     		beq	.L391
2790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4868              		.loc 1 2790 0
 4869 009a 324A     		ldr	r2, .L402+8
 4870 009c DA63     		str	r2, [r3, #60]
2793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4871              		.loc 1 2793 0
 4872 009e A36B     		ldr	r3, [r4, #56]
 4873 00a0 314A     		ldr	r2, .L402+12
 4874 00a2 DA64     		str	r2, [r3, #76]
2796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmatx->XferAbortCallback = NULL;
ARM GAS  /tmp/ccX4fpHz.s 			page 214


 4875              		.loc 1 2796 0
 4876 00a4 A26B     		ldr	r2, [r4, #56]
 4877 00a6 0023     		movs	r3, #0
 4878 00a8 1364     		str	r3, [r2, #64]
2797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4879              		.loc 1 2797 0
 4880 00aa A26B     		ldr	r2, [r4, #56]
 4881 00ac 1365     		str	r3, [r2, #80]
2800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4882              		.loc 1 2800 0
 4883 00ae 2268     		ldr	r2, [r4]
 4884 00b0 238D     		ldrh	r3, [r4, #40]
 4885 00b2 2832     		adds	r2, r2, #40
 4886 00b4 0A99     		ldr	r1, [sp, #40]
 4887 00b6 A06B     		ldr	r0, [r4, #56]
 4888 00b8 FFF7FEFF 		bl	HAL_DMA_Start_IT
 4889              	.LVL382:
2817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4890              		.loc 1 2817 0
 4891 00bc 0546     		mov	r5, r0
 4892 00be 50B3     		cbz	r0, .L401
2841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 4893              		.loc 1 2841 0
 4894 00c0 2023     		movs	r3, #32
 4895 00c2 84F84130 		strb	r3, [r4, #65]
2842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4896              		.loc 1 2842 0
 4897 00c6 0022     		movs	r2, #0
 4898 00c8 84F84220 		strb	r2, [r4, #66]
2845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4899              		.loc 1 2845 0
 4900 00cc 636C     		ldr	r3, [r4, #68]
 4901 00ce 43F01003 		orr	r3, r3, #16
 4902 00d2 6364     		str	r3, [r4, #68]
2848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4903              		.loc 1 2848 0
 4904 00d4 84F84020 		strb	r2, [r4, #64]
2850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4905              		.loc 1 2850 0
 4906 00d8 0125     		movs	r5, #1
 4907 00da 37E0     		b	.L386
 4908              	.LVL383:
 4909              	.L399:
2742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
 4910              		.loc 1 2742 0
 4911 00dc 4FF40073 		mov	r3, #512
 4912              	.LVL384:
 4913 00e0 4364     		str	r3, [r0, #68]
2743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4914              		.loc 1 2743 0
 4915 00e2 0125     		movs	r5, #1
 4916 00e4 32E0     		b	.L386
 4917              	.LVL385:
 4918              	.L388:
2774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 4919              		.loc 1 2774 0
 4920 00e6 638D     		ldrh	r3, [r4, #42]
ARM GAS  /tmp/ccX4fpHz.s 			page 215


 4921 00e8 2385     		strh	r3, [r4, #40]	@ movhi
 4922              	.LVL386:
2775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4923              		.loc 1 2775 0
 4924 00ea 4FF00079 		mov	r9, #33554432
 4925 00ee C6E7     		b	.L389
 4926              	.LVL387:
 4927              	.L400:
2782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
 4928              		.loc 1 2782 0
 4929 00f0 0023     		movs	r3, #0
 4930 00f2 84F84030 		strb	r3, [r4, #64]
2783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4931              		.loc 1 2783 0
 4932 00f6 0125     		movs	r5, #1
 4933 00f8 28E0     		b	.L386
 4934              	.L391:
2805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 4935              		.loc 1 2805 0
 4936 00fa 2023     		movs	r3, #32
 4937 00fc 84F84130 		strb	r3, [r4, #65]
2806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4938              		.loc 1 2806 0
 4939 0100 0022     		movs	r2, #0
 4940 0102 84F84220 		strb	r2, [r4, #66]
2809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4941              		.loc 1 2809 0
 4942 0106 636C     		ldr	r3, [r4, #68]
 4943 0108 43F08003 		orr	r3, r3, #128
 4944 010c 6364     		str	r3, [r4, #68]
2812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4945              		.loc 1 2812 0
 4946 010e 84F84020 		strb	r2, [r4, #64]
2814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4947              		.loc 1 2814 0
 4948 0112 0125     		movs	r5, #1
 4949 0114 1AE0     		b	.L386
 4950              	.LVL388:
 4951              	.L401:
2821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4952              		.loc 1 2821 0
 4953 0116 94F82820 		ldrb	r2, [r4, #40]	@ zero_extendqisi2
 4954 011a 0026     		movs	r6, #0
 4955 011c 0096     		str	r6, [sp]
 4956 011e 4B46     		mov	r3, r9
 4957 0120 4146     		mov	r1, r8
 4958 0122 2046     		mov	r0, r4
 4959              	.LVL389:
 4960 0124 FFF7FEFF 		bl	I2C_TransferConfig
 4961              	.LVL390:
2824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4962              		.loc 1 2824 0
 4963 0128 638D     		ldrh	r3, [r4, #42]
 4964 012a 228D     		ldrh	r2, [r4, #40]
 4965 012c 9B1A     		subs	r3, r3, r2
 4966 012e 9BB2     		uxth	r3, r3
 4967 0130 6385     		strh	r3, [r4, #42]	@ movhi
ARM GAS  /tmp/ccX4fpHz.s 			page 216


2827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4968              		.loc 1 2827 0
 4969 0132 84F84060 		strb	r6, [r4, #64]
2833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4970              		.loc 1 2833 0
 4971 0136 1121     		movs	r1, #17
 4972 0138 2046     		mov	r0, r4
 4973 013a FFF7FEFF 		bl	I2C_Enable_IRQ
 4974              	.LVL391:
2836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4975              		.loc 1 2836 0
 4976 013e 2268     		ldr	r2, [r4]
 4977 0140 1368     		ldr	r3, [r2]
 4978 0142 43F48043 		orr	r3, r3, #16384
 4979 0146 1360     		str	r3, [r2]
2853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 4980              		.loc 1 2853 0
 4981 0148 00E0     		b	.L386
 4982              	.LVL392:
 4983              	.L394:
2857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 4984              		.loc 1 2857 0
 4985 014a 0225     		movs	r5, #2
 4986              	.LVL393:
 4987              	.L386:
2859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4988              		.loc 1 2859 0
 4989 014c 2846     		mov	r0, r5
 4990 014e 03B0     		add	sp, sp, #12
 4991              	.LCFI77:
 4992              		.cfi_remember_state
 4993              		.cfi_def_cfa_offset 28
 4994              		@ sp needed
 4995 0150 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 4996              	.LVL394:
 4997              	.L395:
 4998              	.LCFI78:
 4999              		.cfi_restore_state
2748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5000              		.loc 1 2748 0
 5001 0154 0225     		movs	r5, #2
 5002 0156 F9E7     		b	.L386
 5003              	.L396:
2752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5004              		.loc 1 2752 0
 5005 0158 0225     		movs	r5, #2
 5006 015a F7E7     		b	.L386
 5007              	.L403:
 5008              		.align	2
 5009              	.L402:
 5010 015c 0000FFFF 		.word	-65536
 5011 0160 00000000 		.word	I2C_Master_ISR_DMA
 5012 0164 00000000 		.word	I2C_DMAMasterTransmitCplt
 5013 0168 00000000 		.word	I2C_DMAError
 5014              		.cfi_endproc
 5015              	.LFE161:
 5017              		.section	.text.HAL_I2C_Mem_Read_DMA,"ax",%progbits
ARM GAS  /tmp/ccX4fpHz.s 			page 217


 5018              		.align	1
 5019              		.global	HAL_I2C_Mem_Read_DMA
 5020              		.syntax unified
 5021              		.thumb
 5022              		.thumb_func
 5023              		.fpu fpv5-sp-d16
 5025              	HAL_I2C_Mem_Read_DMA:
 5026              	.LFB162:
2874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
 5027              		.loc 1 2874 0
 5028              		.cfi_startproc
 5029              		@ args = 8, pretend = 0, frame = 0
 5030              		@ frame_needed = 0, uses_anonymous_args = 0
 5031              	.LVL395:
 5032 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 5033              	.LCFI79:
 5034              		.cfi_def_cfa_offset 28
 5035              		.cfi_offset 4, -28
 5036              		.cfi_offset 5, -24
 5037              		.cfi_offset 6, -20
 5038              		.cfi_offset 7, -16
 5039              		.cfi_offset 8, -12
 5040              		.cfi_offset 9, -8
 5041              		.cfi_offset 14, -4
 5042 0004 83B0     		sub	sp, sp, #12
 5043              	.LCFI80:
 5044              		.cfi_def_cfa_offset 40
 5045 0006 BDF82C50 		ldrh	r5, [sp, #44]
2882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 5046              		.loc 1 2882 0
 5047 000a 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 5048 000e E4B2     		uxtb	r4, r4
 5049 0010 202C     		cmp	r4, #32
 5050 0012 40F09B80 		bne	.L413
2884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 5051              		.loc 1 2884 0
 5052 0016 B5FA85F4 		clz	r4, r5
 5053 001a 6409     		lsrs	r4, r4, #5
 5054 001c 0A9E     		ldr	r6, [sp, #40]
 5055 001e 002E     		cmp	r6, #0
 5056 0020 08BF     		it	eq
 5057 0022 0124     		moveq	r4, #1
 5058 0024 002C     		cmp	r4, #0
 5059 0026 59D1     		bne	.L418
2890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 5060              		.loc 1 2890 0
 5061 0028 0468     		ldr	r4, [r0]
 5062 002a A469     		ldr	r4, [r4, #24]
 5063 002c 14F4004F 		tst	r4, #32768
 5064 0030 40F09180 		bne	.L414
2896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5065              		.loc 1 2896 0
 5066 0034 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 5067 0038 012C     		cmp	r4, #1
 5068 003a 00F08E80 		beq	.L415
 5069 003e 1F46     		mov	r7, r3
 5070 0040 1646     		mov	r6, r2
ARM GAS  /tmp/ccX4fpHz.s 			page 218


 5071 0042 8846     		mov	r8, r1
 5072 0044 0446     		mov	r4, r0
2896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5073              		.loc 1 2896 0 is_stmt 0 discriminator 2
 5074 0046 0123     		movs	r3, #1
 5075              	.LVL396:
 5076 0048 80F84030 		strb	r3, [r0, #64]
2899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5077              		.loc 1 2899 0 is_stmt 1 discriminator 2
 5078 004c FFF7FEFF 		bl	HAL_GetTick
 5079              	.LVL397:
2901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
 5080              		.loc 1 2901 0 discriminator 2
 5081 0050 2223     		movs	r3, #34
 5082 0052 84F84130 		strb	r3, [r4, #65]
2902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 5083              		.loc 1 2902 0 discriminator 2
 5084 0056 4023     		movs	r3, #64
 5085 0058 84F84230 		strb	r3, [r4, #66]
2903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5086              		.loc 1 2903 0 discriminator 2
 5087 005c 0023     		movs	r3, #0
 5088 005e 6364     		str	r3, [r4, #68]
2906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 5089              		.loc 1 2906 0 discriminator 2
 5090 0060 0A9B     		ldr	r3, [sp, #40]
 5091 0062 6362     		str	r3, [r4, #36]
2907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 5092              		.loc 1 2907 0 discriminator 2
 5093 0064 6585     		strh	r5, [r4, #42]	@ movhi
2908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
 5094              		.loc 1 2908 0 discriminator 2
 5095 0066 3E4B     		ldr	r3, .L421
 5096 0068 E362     		str	r3, [r4, #44]
2909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5097              		.loc 1 2909 0 discriminator 2
 5098 006a 3E4B     		ldr	r3, .L421+4
 5099 006c 6363     		str	r3, [r4, #52]
2911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 5100              		.loc 1 2911 0 discriminator 2
 5101 006e 638D     		ldrh	r3, [r4, #42]
 5102 0070 9BB2     		uxth	r3, r3
 5103 0072 FF2B     		cmp	r3, #255
 5104 0074 37D9     		bls	.L407
2913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 5105              		.loc 1 2913 0
 5106 0076 FF23     		movs	r3, #255
 5107 0078 2385     		strh	r3, [r4, #40]	@ movhi
 5108              	.LVL398:
2914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5109              		.loc 1 2914 0
 5110 007a 4FF08079 		mov	r9, #16777216
 5111              	.LVL399:
 5112              	.L408:
2923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 5113              		.loc 1 2923 0
 5114 007e 0190     		str	r0, [sp, #4]
ARM GAS  /tmp/ccX4fpHz.s 			page 219


 5115 0080 1923     		movs	r3, #25
 5116 0082 0093     		str	r3, [sp]
 5117 0084 3B46     		mov	r3, r7
 5118 0086 3246     		mov	r2, r6
 5119 0088 4146     		mov	r1, r8
 5120 008a 2046     		mov	r0, r4
 5121              	.LVL400:
 5122 008c FFF7FEFF 		bl	I2C_RequestMemoryRead
 5123              	.LVL401:
 5124 0090 0028     		cmp	r0, #0
 5125 0092 2DD1     		bne	.L419
2930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 5126              		.loc 1 2930 0
 5127 0094 E36B     		ldr	r3, [r4, #60]
 5128 0096 002B     		cmp	r3, #0
 5129 0098 2FD0     		beq	.L410
2933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5130              		.loc 1 2933 0
 5131 009a 334A     		ldr	r2, .L421+8
 5132 009c DA63     		str	r2, [r3, #60]
2936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5133              		.loc 1 2936 0
 5134 009e E36B     		ldr	r3, [r4, #60]
 5135 00a0 324A     		ldr	r2, .L421+12
 5136 00a2 DA64     		str	r2, [r3, #76]
2939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmarx->XferAbortCallback = NULL;
 5137              		.loc 1 2939 0
 5138 00a4 E26B     		ldr	r2, [r4, #60]
 5139 00a6 0023     		movs	r3, #0
 5140 00a8 1364     		str	r3, [r2, #64]
2940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5141              		.loc 1 2940 0
 5142 00aa E26B     		ldr	r2, [r4, #60]
 5143 00ac 1365     		str	r3, [r2, #80]
2943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5144              		.loc 1 2943 0
 5145 00ae 2168     		ldr	r1, [r4]
 5146 00b0 238D     		ldrh	r3, [r4, #40]
 5147 00b2 0A9A     		ldr	r2, [sp, #40]
 5148 00b4 2431     		adds	r1, r1, #36
 5149 00b6 E06B     		ldr	r0, [r4, #60]
 5150 00b8 FFF7FEFF 		bl	HAL_DMA_Start_IT
 5151              	.LVL402:
2960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 5152              		.loc 1 2960 0
 5153 00bc 0546     		mov	r5, r0
 5154 00be 50B3     		cbz	r0, .L420
2983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 5155              		.loc 1 2983 0
 5156 00c0 2023     		movs	r3, #32
 5157 00c2 84F84130 		strb	r3, [r4, #65]
2984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5158              		.loc 1 2984 0
 5159 00c6 0022     		movs	r2, #0
 5160 00c8 84F84220 		strb	r2, [r4, #66]
2987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5161              		.loc 1 2987 0
ARM GAS  /tmp/ccX4fpHz.s 			page 220


 5162 00cc 636C     		ldr	r3, [r4, #68]
 5163 00ce 43F01003 		orr	r3, r3, #16
 5164 00d2 6364     		str	r3, [r4, #68]
2990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5165              		.loc 1 2990 0
 5166 00d4 84F84020 		strb	r2, [r4, #64]
2992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5167              		.loc 1 2992 0
 5168 00d8 0125     		movs	r5, #1
 5169 00da 38E0     		b	.L405
 5170              	.LVL403:
 5171              	.L418:
2886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
 5172              		.loc 1 2886 0
 5173 00dc 4FF40073 		mov	r3, #512
 5174              	.LVL404:
 5175 00e0 4364     		str	r3, [r0, #68]
2887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5176              		.loc 1 2887 0
 5177 00e2 0125     		movs	r5, #1
 5178 00e4 33E0     		b	.L405
 5179              	.LVL405:
 5180              	.L407:
2918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 5181              		.loc 1 2918 0
 5182 00e6 638D     		ldrh	r3, [r4, #42]
 5183 00e8 2385     		strh	r3, [r4, #40]	@ movhi
 5184              	.LVL406:
2919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5185              		.loc 1 2919 0
 5186 00ea 4FF00079 		mov	r9, #33554432
 5187 00ee C6E7     		b	.L408
 5188              	.LVL407:
 5189              	.L419:
2926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
 5190              		.loc 1 2926 0
 5191 00f0 0023     		movs	r3, #0
 5192 00f2 84F84030 		strb	r3, [r4, #64]
2927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5193              		.loc 1 2927 0
 5194 00f6 0125     		movs	r5, #1
 5195 00f8 29E0     		b	.L405
 5196              	.L410:
2948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 5197              		.loc 1 2948 0
 5198 00fa 2023     		movs	r3, #32
 5199 00fc 84F84130 		strb	r3, [r4, #65]
2949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5200              		.loc 1 2949 0
 5201 0100 0022     		movs	r2, #0
 5202 0102 84F84220 		strb	r2, [r4, #66]
2952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5203              		.loc 1 2952 0
 5204 0106 636C     		ldr	r3, [r4, #68]
 5205 0108 43F08003 		orr	r3, r3, #128
 5206 010c 6364     		str	r3, [r4, #68]
2955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/ccX4fpHz.s 			page 221


 5207              		.loc 1 2955 0
 5208 010e 84F84020 		strb	r2, [r4, #64]
2957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5209              		.loc 1 2957 0
 5210 0112 0125     		movs	r5, #1
 5211 0114 1BE0     		b	.L405
 5212              	.LVL408:
 5213              	.L420:
2963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5214              		.loc 1 2963 0
 5215 0116 94F82820 		ldrb	r2, [r4, #40]	@ zero_extendqisi2
 5216 011a 154B     		ldr	r3, .L421+16
 5217 011c 0093     		str	r3, [sp]
 5218 011e 4B46     		mov	r3, r9
 5219 0120 4146     		mov	r1, r8
 5220 0122 2046     		mov	r0, r4
 5221              	.LVL409:
 5222 0124 FFF7FEFF 		bl	I2C_TransferConfig
 5223              	.LVL410:
2966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5224              		.loc 1 2966 0
 5225 0128 638D     		ldrh	r3, [r4, #42]
 5226 012a 228D     		ldrh	r2, [r4, #40]
 5227 012c 9B1A     		subs	r3, r3, r2
 5228 012e 9BB2     		uxth	r3, r3
 5229 0130 6385     		strh	r3, [r4, #42]	@ movhi
2969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5230              		.loc 1 2969 0
 5231 0132 0023     		movs	r3, #0
 5232 0134 84F84030 		strb	r3, [r4, #64]
2975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5233              		.loc 1 2975 0
 5234 0138 1121     		movs	r1, #17
 5235 013a 2046     		mov	r0, r4
 5236 013c FFF7FEFF 		bl	I2C_Enable_IRQ
 5237              	.LVL411:
2978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5238              		.loc 1 2978 0
 5239 0140 2268     		ldr	r2, [r4]
 5240 0142 1368     		ldr	r3, [r2]
 5241 0144 43F40043 		orr	r3, r3, #32768
 5242 0148 1360     		str	r3, [r2]
2995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 5243              		.loc 1 2995 0
 5244 014a 00E0     		b	.L405
 5245              	.LVL412:
 5246              	.L413:
2999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 5247              		.loc 1 2999 0
 5248 014c 0225     		movs	r5, #2
 5249              	.LVL413:
 5250              	.L405:
3001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5251              		.loc 1 3001 0
 5252 014e 2846     		mov	r0, r5
 5253 0150 03B0     		add	sp, sp, #12
 5254              	.LCFI81:
ARM GAS  /tmp/ccX4fpHz.s 			page 222


 5255              		.cfi_remember_state
 5256              		.cfi_def_cfa_offset 28
 5257              		@ sp needed
 5258 0152 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 5259              	.LVL414:
 5260              	.L414:
 5261              	.LCFI82:
 5262              		.cfi_restore_state
2892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5263              		.loc 1 2892 0
 5264 0156 0225     		movs	r5, #2
 5265 0158 F9E7     		b	.L405
 5266              	.L415:
2896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5267              		.loc 1 2896 0
 5268 015a 0225     		movs	r5, #2
 5269 015c F7E7     		b	.L405
 5270              	.L422:
 5271 015e 00BF     		.align	2
 5272              	.L421:
 5273 0160 0000FFFF 		.word	-65536
 5274 0164 00000000 		.word	I2C_Master_ISR_DMA
 5275 0168 00000000 		.word	I2C_DMAMasterReceiveCplt
 5276 016c 00000000 		.word	I2C_DMAError
 5277 0170 00240080 		.word	-2147474432
 5278              		.cfi_endproc
 5279              	.LFE162:
 5281              		.section	.text.HAL_I2C_IsDeviceReady,"ax",%progbits
 5282              		.align	1
 5283              		.global	HAL_I2C_IsDeviceReady
 5284              		.syntax unified
 5285              		.thumb
 5286              		.thumb_func
 5287              		.fpu fpv5-sp-d16
 5289              	HAL_I2C_IsDeviceReady:
 5290              	.LFB163:
3015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
 5291              		.loc 1 3015 0
 5292              		.cfi_startproc
 5293              		@ args = 0, pretend = 0, frame = 8
 5294              		@ frame_needed = 0, uses_anonymous_args = 0
 5295              	.LVL415:
 5296 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 5297              	.LCFI83:
 5298              		.cfi_def_cfa_offset 28
 5299              		.cfi_offset 4, -28
 5300              		.cfi_offset 5, -24
 5301              		.cfi_offset 6, -20
 5302              		.cfi_offset 7, -16
 5303              		.cfi_offset 8, -12
 5304              		.cfi_offset 9, -8
 5305              		.cfi_offset 14, -4
 5306 0004 85B0     		sub	sp, sp, #20
 5307              	.LCFI84:
 5308              		.cfi_def_cfa_offset 48
3018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5309              		.loc 1 3018 0
ARM GAS  /tmp/ccX4fpHz.s 			page 223


 5310 0006 0024     		movs	r4, #0
 5311 0008 0394     		str	r4, [sp, #12]
3023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 5312              		.loc 1 3023 0
 5313 000a 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 5314 000e E4B2     		uxtb	r4, r4
 5315 0010 202C     		cmp	r4, #32
 5316 0012 40F09B80 		bne	.L434
3025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 5317              		.loc 1 3025 0
 5318 0016 0468     		ldr	r4, [r0]
 5319 0018 A469     		ldr	r4, [r4, #24]
 5320 001a 14F4004F 		tst	r4, #32768
 5321 001e 40F09A80 		bne	.L435
3031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5322              		.loc 1 3031 0
 5323 0022 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 5324 0026 012C     		cmp	r4, #1
 5325 0028 00F09780 		beq	.L436
 5326 002c 1E46     		mov	r6, r3
 5327 002e 9146     		mov	r9, r2
 5328 0030 8846     		mov	r8, r1
 5329 0032 0546     		mov	r5, r0
3031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5330              		.loc 1 3031 0 is_stmt 0 discriminator 2
 5331 0034 0123     		movs	r3, #1
 5332              	.LVL416:
 5333 0036 80F84030 		strb	r3, [r0, #64]
3033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 5334              		.loc 1 3033 0 is_stmt 1 discriminator 2
 5335 003a 2423     		movs	r3, #36
 5336 003c 80F84130 		strb	r3, [r0, #65]
3034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5337              		.loc 1 3034 0 discriminator 2
 5338 0040 0023     		movs	r3, #0
 5339 0042 4364     		str	r3, [r0, #68]
 5340              	.LVL417:
 5341              	.L433:
3039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5342              		.loc 1 3039 0
 5343 0044 EB68     		ldr	r3, [r5, #12]
 5344 0046 012B     		cmp	r3, #1
 5345 0048 10D0     		beq	.L441
3039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5346              		.loc 1 3039 0 is_stmt 0 discriminator 2
 5347 004a C8F30903 		ubfx	r3, r8, #0, #10
 5348 004e 43F42053 		orr	r3, r3, #10240
 5349              	.L426:
3039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5350              		.loc 1 3039 0 discriminator 4
 5351 0052 2A68     		ldr	r2, [r5]
 5352 0054 5360     		str	r3, [r2, #4]
3043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5353              		.loc 1 3043 0 is_stmt 1 discriminator 4
 5354 0056 FFF7FEFF 		bl	HAL_GetTick
 5355              	.LVL418:
 5356 005a 0746     		mov	r7, r0
ARM GAS  /tmp/ccX4fpHz.s 			page 224


 5357              	.LVL419:
3045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       tmp2 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF);
 5358              		.loc 1 3045 0 discriminator 4
 5359 005c 2A68     		ldr	r2, [r5]
 5360 005e 9369     		ldr	r3, [r2, #24]
 5361 0060 C3F34013 		ubfx	r3, r3, #5, #1
 5362              	.LVL420:
3046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5363              		.loc 1 3046 0 discriminator 4
 5364 0064 9469     		ldr	r4, [r2, #24]
 5365 0066 C4F30014 		ubfx	r4, r4, #4, #1
 5366              	.LVL421:
3048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 5367              		.loc 1 3048 0 discriminator 4
 5368 006a 0BE0     		b	.L427
 5369              	.LVL422:
 5370              	.L441:
3039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5371              		.loc 1 3039 0 discriminator 1
 5372 006c C8F30902 		ubfx	r2, r8, #0, #10
 5373 0070 3E4B     		ldr	r3, .L445
 5374 0072 1343     		orrs	r3, r3, r2
 5375 0074 EDE7     		b	.L426
 5376              	.LVL423:
 5377              	.L428:
3067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         tmp2 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF);
 5378              		.loc 1 3067 0
 5379 0076 2A68     		ldr	r2, [r5]
 5380 0078 9369     		ldr	r3, [r2, #24]
 5381 007a C3F34013 		ubfx	r3, r3, #5, #1
 5382              	.LVL424:
3068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 5383              		.loc 1 3068 0
 5384 007e 9469     		ldr	r4, [r2, #24]
 5385              	.LVL425:
 5386 0080 C4F30014 		ubfx	r4, r4, #4, #1
 5387              	.LVL426:
 5388              	.L427:
3048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 5389              		.loc 1 3048 0
 5390 0084 2343     		orrs	r3, r3, r4
 5391              	.LVL427:
 5392 0086 15D1     		bne	.L442
3050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 5393              		.loc 1 3050 0
 5394 0088 B6F1FF3F 		cmp	r6, #-1
 5395 008c F3D0     		beq	.L428
3052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
 5396              		.loc 1 3052 0
 5397 008e FFF7FEFF 		bl	HAL_GetTick
 5398              	.LVL428:
 5399 0092 C01B     		subs	r0, r0, r7
 5400 0094 B042     		cmp	r0, r6
 5401 0096 01D8     		bhi	.L429
3052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
 5402              		.loc 1 3052 0 is_stmt 0 discriminator 1
 5403 0098 002E     		cmp	r6, #0
ARM GAS  /tmp/ccX4fpHz.s 			page 225


 5404 009a ECD1     		bne	.L428
 5405              	.L429:
3055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5406              		.loc 1 3055 0 is_stmt 1
 5407 009c 2023     		movs	r3, #32
 5408 009e 85F84130 		strb	r3, [r5, #65]
3058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5409              		.loc 1 3058 0
 5410 00a2 6B6C     		ldr	r3, [r5, #68]
 5411 00a4 43F02003 		orr	r3, r3, #32
 5412 00a8 6B64     		str	r3, [r5, #68]
3061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5413              		.loc 1 3061 0
 5414 00aa 0023     		movs	r3, #0
 5415 00ac 85F84030 		strb	r3, [r5, #64]
3063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
 5416              		.loc 1 3063 0
 5417 00b0 0123     		movs	r3, #1
 5418 00b2 4CE0     		b	.L424
 5419              	.L442:
3072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 5420              		.loc 1 3072 0
 5421 00b4 2B68     		ldr	r3, [r5]
 5422 00b6 9B69     		ldr	r3, [r3, #24]
 5423 00b8 13F0100F 		tst	r3, #16
 5424 00bc 23D0     		beq	.L443
3094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 5425              		.loc 1 3094 0
 5426 00be 0097     		str	r7, [sp]
 5427 00c0 3346     		mov	r3, r6
 5428 00c2 0022     		movs	r2, #0
 5429 00c4 2021     		movs	r1, #32
 5430 00c6 2846     		mov	r0, r5
 5431 00c8 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 5432              	.LVL429:
 5433 00cc 0028     		cmp	r0, #0
 5434 00ce 48D1     		bne	.L438
3100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5435              		.loc 1 3100 0
 5436 00d0 2B68     		ldr	r3, [r5]
 5437 00d2 1022     		movs	r2, #16
 5438 00d4 DA61     		str	r2, [r3, #28]
3103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 5439              		.loc 1 3103 0
 5440 00d6 2B68     		ldr	r3, [r5]
 5441 00d8 2022     		movs	r2, #32
 5442 00da DA61     		str	r2, [r3, #28]
3107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 5443              		.loc 1 3107 0
 5444 00dc 039B     		ldr	r3, [sp, #12]
 5445 00de 4B45     		cmp	r3, r9
 5446 00e0 23D0     		beq	.L444
 5447              	.L432:
3123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5448              		.loc 1 3123 0
 5449 00e2 039B     		ldr	r3, [sp, #12]
 5450 00e4 0133     		adds	r3, r3, #1
ARM GAS  /tmp/ccX4fpHz.s 			page 226


 5451 00e6 0393     		str	r3, [sp, #12]
3125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5452              		.loc 1 3125 0
 5453 00e8 039B     		ldr	r3, [sp, #12]
 5454 00ea 4B45     		cmp	r3, r9
 5455 00ec AAD3     		bcc	.L433
3128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5456              		.loc 1 3128 0
 5457 00ee 2023     		movs	r3, #32
 5458 00f0 85F84130 		strb	r3, [r5, #65]
3131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5459              		.loc 1 3131 0
 5460 00f4 6B6C     		ldr	r3, [r5, #68]
 5461 00f6 43F02003 		orr	r3, r3, #32
 5462 00fa 6B64     		str	r3, [r5, #68]
3134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5463              		.loc 1 3134 0
 5464 00fc 0023     		movs	r3, #0
 5465 00fe 85F84030 		strb	r3, [r5, #64]
3136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 5466              		.loc 1 3136 0
 5467 0102 0123     		movs	r3, #1
 5468 0104 23E0     		b	.L424
 5469              	.L443:
3075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 5470              		.loc 1 3075 0
 5471 0106 0097     		str	r7, [sp]
 5472 0108 3346     		mov	r3, r6
 5473 010a 0022     		movs	r2, #0
 5474 010c 2021     		movs	r1, #32
 5475 010e 2846     		mov	r0, r5
 5476 0110 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 5477              	.LVL430:
 5478 0114 0346     		mov	r3, r0
 5479 0116 10BB     		cbnz	r0, .L437
3081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5480              		.loc 1 3081 0
 5481 0118 2968     		ldr	r1, [r5]
 5482 011a 2022     		movs	r2, #32
 5483 011c CA61     		str	r2, [r1, #28]
3084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5484              		.loc 1 3084 0
 5485 011e 85F84120 		strb	r2, [r5, #65]
3087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5486              		.loc 1 3087 0
 5487 0122 0022     		movs	r2, #0
 5488 0124 85F84020 		strb	r2, [r5, #64]
3089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 5489              		.loc 1 3089 0
 5490 0128 11E0     		b	.L424
 5491              	.L444:
3110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5492              		.loc 1 3110 0
 5493 012a 2A68     		ldr	r2, [r5]
 5494 012c 5368     		ldr	r3, [r2, #4]
 5495 012e 43F48043 		orr	r3, r3, #16384
 5496 0132 5360     		str	r3, [r2, #4]
ARM GAS  /tmp/ccX4fpHz.s 			page 227


3113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 5497              		.loc 1 3113 0
 5498 0134 0097     		str	r7, [sp]
 5499 0136 3346     		mov	r3, r6
 5500 0138 0022     		movs	r2, #0
 5501 013a 2021     		movs	r1, #32
 5502 013c 2846     		mov	r0, r5
 5503 013e FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 5504              	.LVL431:
 5505 0142 80B9     		cbnz	r0, .L439
3119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 5506              		.loc 1 3119 0
 5507 0144 2B68     		ldr	r3, [r5]
 5508 0146 2022     		movs	r2, #32
 5509 0148 DA61     		str	r2, [r3, #28]
 5510 014a CAE7     		b	.L432
 5511              	.LVL432:
 5512              	.L434:
3140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 5513              		.loc 1 3140 0
 5514 014c 0223     		movs	r3, #2
 5515              	.LVL433:
 5516              	.L424:
3142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5517              		.loc 1 3142 0
 5518 014e 1846     		mov	r0, r3
 5519 0150 05B0     		add	sp, sp, #20
 5520              	.LCFI85:
 5521              		.cfi_remember_state
 5522              		.cfi_def_cfa_offset 28
 5523              		@ sp needed
 5524 0152 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 5525              	.LVL434:
 5526              	.L435:
 5527              	.LCFI86:
 5528              		.cfi_restore_state
3027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5529              		.loc 1 3027 0
 5530 0156 0223     		movs	r3, #2
 5531              	.LVL435:
 5532 0158 F9E7     		b	.L424
 5533              	.LVL436:
 5534              	.L436:
3031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5535              		.loc 1 3031 0
 5536 015a 0223     		movs	r3, #2
 5537              	.LVL437:
 5538 015c F7E7     		b	.L424
 5539              	.LVL438:
 5540              	.L437:
3077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 5541              		.loc 1 3077 0
 5542 015e 0123     		movs	r3, #1
 5543 0160 F5E7     		b	.L424
 5544              	.L438:
3096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 5545              		.loc 1 3096 0
ARM GAS  /tmp/ccX4fpHz.s 			page 228


 5546 0162 0123     		movs	r3, #1
 5547 0164 F3E7     		b	.L424
 5548              	.L439:
3115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 5549              		.loc 1 3115 0
 5550 0166 0123     		movs	r3, #1
 5551 0168 F1E7     		b	.L424
 5552              	.L446:
 5553 016a 00BF     		.align	2
 5554              	.L445:
 5555 016c 00200002 		.word	33562624
 5556              		.cfi_endproc
 5557              	.LFE163:
 5559              		.section	.text.HAL_I2C_Master_Seq_Transmit_IT,"ax",%progbits
 5560              		.align	1
 5561              		.global	HAL_I2C_Master_Seq_Transmit_IT
 5562              		.syntax unified
 5563              		.thumb
 5564              		.thumb_func
 5565              		.fpu fpv5-sp-d16
 5567              	HAL_I2C_Master_Seq_Transmit_IT:
 5568              	.LFB164:
3157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
 5569              		.loc 1 3157 0
 5570              		.cfi_startproc
 5571              		@ args = 4, pretend = 0, frame = 0
 5572              		@ frame_needed = 0, uses_anonymous_args = 0
 5573              	.LVL439:
 5574 0000 70B5     		push	{r4, r5, r6, lr}
 5575              	.LCFI87:
 5576              		.cfi_def_cfa_offset 16
 5577              		.cfi_offset 4, -16
 5578              		.cfi_offset 5, -12
 5579              		.cfi_offset 6, -8
 5580              		.cfi_offset 14, -4
 5581 0002 82B0     		sub	sp, sp, #8
 5582              	.LCFI88:
 5583              		.cfi_def_cfa_offset 24
 5584              	.LVL440:
3164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 5585              		.loc 1 3164 0
 5586 0004 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 5587 0008 E4B2     		uxtb	r4, r4
 5588 000a 202C     		cmp	r4, #32
 5589 000c 49D1     		bne	.L453
3167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5590              		.loc 1 3167 0
 5591 000e 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 5592 0012 012C     		cmp	r4, #1
 5593 0014 48D0     		beq	.L454
3167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5594              		.loc 1 3167 0 is_stmt 0 discriminator 2
 5595 0016 0124     		movs	r4, #1
 5596 0018 80F84040 		strb	r4, [r0, #64]
3169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
 5597              		.loc 1 3169 0 is_stmt 1 discriminator 2
 5598 001c 2124     		movs	r4, #33
ARM GAS  /tmp/ccX4fpHz.s 			page 229


 5599 001e 80F84140 		strb	r4, [r0, #65]
3170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 5600              		.loc 1 3170 0 discriminator 2
 5601 0022 1024     		movs	r4, #16
 5602 0024 80F84240 		strb	r4, [r0, #66]
3171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5603              		.loc 1 3171 0 discriminator 2
 5604 0028 0024     		movs	r4, #0
 5605 002a 4464     		str	r4, [r0, #68]
3174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 5606              		.loc 1 3174 0 discriminator 2
 5607 002c 4262     		str	r2, [r0, #36]
3175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
 5608              		.loc 1 3175 0 discriminator 2
 5609 002e 4385     		strh	r3, [r0, #42]	@ movhi
3176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
 5610              		.loc 1 3176 0 discriminator 2
 5611 0030 069B     		ldr	r3, [sp, #24]
 5612              	.LVL441:
 5613 0032 C362     		str	r3, [r0, #44]
 5614              	.LVL442:
3177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5615              		.loc 1 3177 0 discriminator 2
 5616 0034 1D4B     		ldr	r3, .L458
 5617 0036 4363     		str	r3, [r0, #52]
3180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 5618              		.loc 1 3180 0 discriminator 2
 5619 0038 438D     		ldrh	r3, [r0, #42]
 5620 003a 9BB2     		uxth	r3, r3
 5621 003c FF2B     		cmp	r3, #255
 5622 003e 28D9     		bls	.L449
3182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 5623              		.loc 1 3182 0
 5624 0040 FF23     		movs	r3, #255
 5625 0042 0385     		strh	r3, [r0, #40]	@ movhi
 5626              	.LVL443:
3183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5627              		.loc 1 3183 0
 5628 0044 4FF08076 		mov	r6, #16777216
 5629              	.LVL444:
 5630              	.L450:
 5631 0048 0D46     		mov	r5, r1
 5632 004a 0446     		mov	r4, r0
 5633              	.LVL445:
3193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 5634              		.loc 1 3193 0
 5635 004c 036B     		ldr	r3, [r0, #48]
 5636 004e 112B     		cmp	r3, #17
 5637 0050 05D1     		bne	.L451
3193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 5638              		.loc 1 3193 0 is_stmt 0 discriminator 1
 5639 0052 069B     		ldr	r3, [sp, #24]
 5640 0054 B3F52A4F 		cmp	r3, #43520
 5641 0058 18BF     		it	ne
 5642 005a AA2B     		cmpne	r3, #170
 5643 005c 1DD1     		bne	.L455
 5644              	.L451:
ARM GAS  /tmp/ccX4fpHz.s 			page 230


3200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5645              		.loc 1 3200 0 is_stmt 1
 5646 005e 2046     		mov	r0, r4
 5647              	.LVL446:
 5648 0060 FFF7FEFF 		bl	I2C_ConvertOtherXferOptions
 5649              	.LVL447:
3203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 5650              		.loc 1 3203 0
 5651 0064 638D     		ldrh	r3, [r4, #42]
 5652 0066 9BB2     		uxth	r3, r3
 5653 0068 FE2B     		cmp	r3, #254
 5654 006a 18D8     		bhi	.L456
3205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 5655              		.loc 1 3205 0
 5656 006c E66A     		ldr	r6, [r4, #44]
 5657              	.LVL448:
3159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5658              		.loc 1 3159 0
 5659 006e 104B     		ldr	r3, .L458+4
 5660              	.L452:
 5661              	.LVL449:
3210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5662              		.loc 1 3210 0
 5663 0070 94F82820 		ldrb	r2, [r4, #40]	@ zero_extendqisi2
 5664 0074 0093     		str	r3, [sp]
 5665 0076 3346     		mov	r3, r6
 5666              	.LVL450:
 5667 0078 2946     		mov	r1, r5
 5668 007a 2046     		mov	r0, r4
 5669 007c FFF7FEFF 		bl	I2C_TransferConfig
 5670              	.LVL451:
3213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5671              		.loc 1 3213 0
 5672 0080 0025     		movs	r5, #0
 5673 0082 84F84050 		strb	r5, [r4, #64]
3218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5674              		.loc 1 3218 0
 5675 0086 0121     		movs	r1, #1
 5676 0088 2046     		mov	r0, r4
 5677 008a FFF7FEFF 		bl	I2C_Enable_IRQ
 5678              	.LVL452:
3220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 5679              		.loc 1 3220 0
 5680 008e 2846     		mov	r0, r5
 5681 0090 08E0     		b	.L448
 5682              	.LVL453:
 5683              	.L449:
3187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = hi2c->XferOptions;
 5684              		.loc 1 3187 0
 5685 0092 438D     		ldrh	r3, [r0, #42]
 5686 0094 0385     		strh	r3, [r0, #40]	@ movhi
3188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5687              		.loc 1 3188 0
 5688 0096 C66A     		ldr	r6, [r0, #44]
 5689              	.LVL454:
 5690 0098 D6E7     		b	.L450
 5691              	.L455:
ARM GAS  /tmp/ccX4fpHz.s 			page 231


3195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5692              		.loc 1 3195 0
 5693 009a 0023     		movs	r3, #0
 5694 009c E8E7     		b	.L452
 5695              	.LVL455:
 5696              	.L456:
3159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5697              		.loc 1 3159 0
 5698 009e 044B     		ldr	r3, .L458+4
 5699 00a0 E6E7     		b	.L452
 5700              	.LVL456:
 5701              	.L453:
3224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 5702              		.loc 1 3224 0
 5703 00a2 0220     		movs	r0, #2
 5704              	.LVL457:
 5705              	.L448:
3226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5706              		.loc 1 3226 0
 5707 00a4 02B0     		add	sp, sp, #8
 5708              	.LCFI89:
 5709              		.cfi_remember_state
 5710              		.cfi_def_cfa_offset 16
 5711              		@ sp needed
 5712 00a6 70BD     		pop	{r4, r5, r6, pc}
 5713              	.LVL458:
 5714              	.L454:
 5715              	.LCFI90:
 5716              		.cfi_restore_state
3167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5717              		.loc 1 3167 0
 5718 00a8 0220     		movs	r0, #2
 5719              	.LVL459:
 5720 00aa FBE7     		b	.L448
 5721              	.L459:
 5722              		.align	2
 5723              	.L458:
 5724 00ac 00000000 		.word	I2C_Master_ISR_IT
 5725 00b0 00200080 		.word	-2147475456
 5726              		.cfi_endproc
 5727              	.LFE164:
 5729              		.section	.text.HAL_I2C_Master_Seq_Transmit_DMA,"ax",%progbits
 5730              		.align	1
 5731              		.global	HAL_I2C_Master_Seq_Transmit_DMA
 5732              		.syntax unified
 5733              		.thumb
 5734              		.thumb_func
 5735              		.fpu fpv5-sp-d16
 5737              	HAL_I2C_Master_Seq_Transmit_DMA:
 5738              	.LFB165:
3241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
 5739              		.loc 1 3241 0
 5740              		.cfi_startproc
 5741              		@ args = 4, pretend = 0, frame = 0
 5742              		@ frame_needed = 0, uses_anonymous_args = 0
 5743              	.LVL460:
 5744 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
ARM GAS  /tmp/ccX4fpHz.s 			page 232


 5745              	.LCFI91:
 5746              		.cfi_def_cfa_offset 24
 5747              		.cfi_offset 4, -24
 5748              		.cfi_offset 5, -20
 5749              		.cfi_offset 6, -16
 5750              		.cfi_offset 7, -12
 5751              		.cfi_offset 8, -8
 5752              		.cfi_offset 14, -4
 5753 0004 82B0     		sub	sp, sp, #8
 5754              	.LCFI92:
 5755              		.cfi_def_cfa_offset 32
 5756              	.LVL461:
3249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 5757              		.loc 1 3249 0
 5758 0006 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 5759 000a E4B2     		uxtb	r4, r4
 5760 000c 202C     		cmp	r4, #32
 5761 000e 40F09C80 		bne	.L470
3252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5762              		.loc 1 3252 0
 5763 0012 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 5764 0016 012C     		cmp	r4, #1
 5765 0018 00F09C80 		beq	.L471
3252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5766              		.loc 1 3252 0 is_stmt 0 discriminator 2
 5767 001c 0124     		movs	r4, #1
 5768 001e 80F84040 		strb	r4, [r0, #64]
3254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
 5769              		.loc 1 3254 0 is_stmt 1 discriminator 2
 5770 0022 2124     		movs	r4, #33
 5771 0024 80F84140 		strb	r4, [r0, #65]
3255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 5772              		.loc 1 3255 0 discriminator 2
 5773 0028 1024     		movs	r4, #16
 5774 002a 80F84240 		strb	r4, [r0, #66]
3256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5775              		.loc 1 3256 0 discriminator 2
 5776 002e 0024     		movs	r4, #0
 5777 0030 4464     		str	r4, [r0, #68]
3259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 5778              		.loc 1 3259 0 discriminator 2
 5779 0032 4262     		str	r2, [r0, #36]
3260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
 5780              		.loc 1 3260 0 discriminator 2
 5781 0034 4385     		strh	r3, [r0, #42]	@ movhi
3261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
 5782              		.loc 1 3261 0 discriminator 2
 5783 0036 089B     		ldr	r3, [sp, #32]
 5784              	.LVL462:
 5785 0038 C362     		str	r3, [r0, #44]
 5786              	.LVL463:
3262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5787              		.loc 1 3262 0 discriminator 2
 5788 003a 474B     		ldr	r3, .L477
 5789 003c 4363     		str	r3, [r0, #52]
3265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 5790              		.loc 1 3265 0 discriminator 2
ARM GAS  /tmp/ccX4fpHz.s 			page 233


 5791 003e 438D     		ldrh	r3, [r0, #42]
 5792 0040 9BB2     		uxth	r3, r3
 5793 0042 FF2B     		cmp	r3, #255
 5794 0044 3ED9     		bls	.L462
3267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 5795              		.loc 1 3267 0
 5796 0046 FF23     		movs	r3, #255
 5797 0048 0385     		strh	r3, [r0, #40]	@ movhi
 5798              	.LVL464:
3268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5799              		.loc 1 3268 0
 5800 004a 4FF08077 		mov	r7, #16777216
 5801              	.LVL465:
 5802              	.L463:
 5803 004e 1546     		mov	r5, r2
 5804 0050 8846     		mov	r8, r1
 5805 0052 0446     		mov	r4, r0
 5806              	.LVL466:
3278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 5807              		.loc 1 3278 0
 5808 0054 036B     		ldr	r3, [r0, #48]
 5809 0056 112B     		cmp	r3, #17
 5810 0058 05D1     		bne	.L464
3278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 5811              		.loc 1 3278 0 is_stmt 0 discriminator 1
 5812 005a 089B     		ldr	r3, [sp, #32]
 5813 005c B3F52A4F 		cmp	r3, #43520
 5814 0060 18BF     		it	ne
 5815 0062 AA2B     		cmpne	r3, #170
 5816 0064 32D1     		bne	.L472
 5817              	.L464:
3285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5818              		.loc 1 3285 0 is_stmt 1
 5819 0066 2046     		mov	r0, r4
 5820              	.LVL467:
 5821 0068 FFF7FEFF 		bl	I2C_ConvertOtherXferOptions
 5822              	.LVL468:
3288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 5823              		.loc 1 3288 0
 5824 006c 638D     		ldrh	r3, [r4, #42]
 5825 006e 9BB2     		uxth	r3, r3
 5826 0070 FE2B     		cmp	r3, #254
 5827 0072 2DD8     		bhi	.L473
3290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 5828              		.loc 1 3290 0
 5829 0074 E76A     		ldr	r7, [r4, #44]
 5830              	.LVL469:
3243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
 5831              		.loc 1 3243 0
 5832 0076 394E     		ldr	r6, .L477+4
 5833              	.L465:
 5834              	.LVL470:
3294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 5835              		.loc 1 3294 0
 5836 0078 228D     		ldrh	r2, [r4, #40]
 5837 007a 002A     		cmp	r2, #0
 5838 007c 52D0     		beq	.L466
ARM GAS  /tmp/ccX4fpHz.s 			page 234


3296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 5839              		.loc 1 3296 0
 5840 007e A36B     		ldr	r3, [r4, #56]
 5841 0080 43B3     		cbz	r3, .L467
3299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5842              		.loc 1 3299 0
 5843 0082 374A     		ldr	r2, .L477+8
 5844 0084 DA63     		str	r2, [r3, #60]
3302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5845              		.loc 1 3302 0
 5846 0086 A36B     		ldr	r3, [r4, #56]
 5847 0088 364A     		ldr	r2, .L477+12
 5848 008a DA64     		str	r2, [r3, #76]
3305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmatx->XferAbortCallback = NULL;
 5849              		.loc 1 3305 0
 5850 008c A26B     		ldr	r2, [r4, #56]
 5851 008e 0023     		movs	r3, #0
 5852 0090 1364     		str	r3, [r2, #64]
3306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5853              		.loc 1 3306 0
 5854 0092 A26B     		ldr	r2, [r4, #56]
 5855 0094 1365     		str	r3, [r2, #80]
3309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 5856              		.loc 1 3309 0
 5857 0096 2268     		ldr	r2, [r4]
 5858 0098 238D     		ldrh	r3, [r4, #40]
 5859 009a 2832     		adds	r2, r2, #40
 5860 009c 2946     		mov	r1, r5
 5861 009e A06B     		ldr	r0, [r4, #56]
 5862 00a0 FFF7FEFF 		bl	HAL_DMA_Start_IT
 5863              	.LVL471:
3326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 5864              		.loc 1 3326 0
 5865 00a4 0546     		mov	r5, r0
 5866              	.LVL472:
 5867 00a6 18B3     		cbz	r0, .L476
3349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
 5868              		.loc 1 3349 0
 5869 00a8 2023     		movs	r3, #32
 5870 00aa 84F84130 		strb	r3, [r4, #65]
3350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5871              		.loc 1 3350 0
 5872 00ae 0022     		movs	r2, #0
 5873 00b0 84F84220 		strb	r2, [r4, #66]
3353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5874              		.loc 1 3353 0
 5875 00b4 636C     		ldr	r3, [r4, #68]
 5876 00b6 43F01003 		orr	r3, r3, #16
 5877 00ba 6364     		str	r3, [r4, #68]
3356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5878              		.loc 1 3356 0
 5879 00bc 84F84020 		strb	r2, [r4, #64]
3358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 5880              		.loc 1 3358 0
 5881 00c0 0125     		movs	r5, #1
 5882 00c2 43E0     		b	.L461
 5883              	.LVL473:
ARM GAS  /tmp/ccX4fpHz.s 			page 235


 5884              	.L462:
3272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = hi2c->XferOptions;
 5885              		.loc 1 3272 0
 5886 00c4 438D     		ldrh	r3, [r0, #42]
 5887 00c6 0385     		strh	r3, [r0, #40]	@ movhi
3273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5888              		.loc 1 3273 0
 5889 00c8 C76A     		ldr	r7, [r0, #44]
 5890              	.LVL474:
 5891 00ca C0E7     		b	.L463
 5892              	.L472:
3280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5893              		.loc 1 3280 0
 5894 00cc 0026     		movs	r6, #0
 5895 00ce D3E7     		b	.L465
 5896              	.LVL475:
 5897              	.L473:
3243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
 5898              		.loc 1 3243 0
 5899 00d0 224E     		ldr	r6, .L477+4
 5900 00d2 D1E7     		b	.L465
 5901              	.LVL476:
 5902              	.L467:
3314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
 5903              		.loc 1 3314 0
 5904 00d4 2023     		movs	r3, #32
 5905 00d6 84F84130 		strb	r3, [r4, #65]
3315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5906              		.loc 1 3315 0
 5907 00da 0022     		movs	r2, #0
 5908 00dc 84F84220 		strb	r2, [r4, #66]
3318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5909              		.loc 1 3318 0
 5910 00e0 636C     		ldr	r3, [r4, #68]
 5911 00e2 43F08003 		orr	r3, r3, #128
 5912 00e6 6364     		str	r3, [r4, #68]
3321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5913              		.loc 1 3321 0
 5914 00e8 84F84020 		strb	r2, [r4, #64]
3323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 5915              		.loc 1 3323 0
 5916 00ec 0125     		movs	r5, #1
 5917              	.LVL477:
 5918 00ee 2DE0     		b	.L461
 5919              	.LVL478:
 5920              	.L476:
3329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5921              		.loc 1 3329 0
 5922 00f0 94F82820 		ldrb	r2, [r4, #40]	@ zero_extendqisi2
 5923 00f4 0096     		str	r6, [sp]
 5924 00f6 3B46     		mov	r3, r7
 5925 00f8 4146     		mov	r1, r8
 5926 00fa 2046     		mov	r0, r4
 5927              	.LVL479:
 5928 00fc FFF7FEFF 		bl	I2C_TransferConfig
 5929              	.LVL480:
3332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/ccX4fpHz.s 			page 236


 5930              		.loc 1 3332 0
 5931 0100 638D     		ldrh	r3, [r4, #42]
 5932 0102 228D     		ldrh	r2, [r4, #40]
 5933 0104 9B1A     		subs	r3, r3, r2
 5934 0106 9BB2     		uxth	r3, r3
 5935 0108 6385     		strh	r3, [r4, #42]	@ movhi
3335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5936              		.loc 1 3335 0
 5937 010a 0023     		movs	r3, #0
 5938 010c 84F84030 		strb	r3, [r4, #64]
3341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5939              		.loc 1 3341 0
 5940 0110 1121     		movs	r1, #17
 5941 0112 2046     		mov	r0, r4
 5942 0114 FFF7FEFF 		bl	I2C_Enable_IRQ
 5943              	.LVL481:
3344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 5944              		.loc 1 3344 0
 5945 0118 2268     		ldr	r2, [r4]
 5946 011a 1368     		ldr	r3, [r2]
 5947 011c 43F48043 		orr	r3, r3, #16384
 5948 0120 1360     		str	r3, [r2]
 5949 0122 13E0     		b	.L461
 5950              	.LVL482:
 5951              	.L466:
3364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5952              		.loc 1 3364 0
 5953 0124 104B     		ldr	r3, .L477+16
 5954 0126 6363     		str	r3, [r4, #52]
3368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5955              		.loc 1 3368 0
 5956 0128 0C4B     		ldr	r3, .L477+4
 5957 012a 0093     		str	r3, [sp]
 5958 012c 4FF00073 		mov	r3, #33554432
 5959 0130 D2B2     		uxtb	r2, r2
 5960 0132 4146     		mov	r1, r8
 5961 0134 2046     		mov	r0, r4
 5962 0136 FFF7FEFF 		bl	I2C_TransferConfig
 5963              	.LVL483:
3371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5964              		.loc 1 3371 0
 5965 013a 0025     		movs	r5, #0
 5966              	.LVL484:
 5967 013c 84F84050 		strb	r5, [r4, #64]
3379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5968              		.loc 1 3379 0
 5969 0140 0121     		movs	r1, #1
 5970 0142 2046     		mov	r0, r4
 5971 0144 FFF7FEFF 		bl	I2C_Enable_IRQ
 5972              	.LVL485:
 5973 0148 00E0     		b	.L461
 5974              	.LVL486:
 5975              	.L470:
3386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 5976              		.loc 1 3386 0
 5977 014a 0225     		movs	r5, #2
 5978              	.LVL487:
ARM GAS  /tmp/ccX4fpHz.s 			page 237


 5979              	.L461:
3388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5980              		.loc 1 3388 0
 5981 014c 2846     		mov	r0, r5
 5982 014e 02B0     		add	sp, sp, #8
 5983              	.LCFI93:
 5984              		.cfi_remember_state
 5985              		.cfi_def_cfa_offset 24
 5986              		@ sp needed
 5987 0150 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 5988              	.LVL488:
 5989              	.L471:
 5990              	.LCFI94:
 5991              		.cfi_restore_state
3252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5992              		.loc 1 3252 0
 5993 0154 0225     		movs	r5, #2
 5994 0156 F9E7     		b	.L461
 5995              	.L478:
 5996              		.align	2
 5997              	.L477:
 5998 0158 00000000 		.word	I2C_Master_ISR_DMA
 5999 015c 00200080 		.word	-2147475456
 6000 0160 00000000 		.word	I2C_DMAMasterTransmitCplt
 6001 0164 00000000 		.word	I2C_DMAError
 6002 0168 00000000 		.word	I2C_Master_ISR_IT
 6003              		.cfi_endproc
 6004              	.LFE165:
 6006              		.section	.text.HAL_I2C_Master_Seq_Receive_IT,"ax",%progbits
 6007              		.align	1
 6008              		.global	HAL_I2C_Master_Seq_Receive_IT
 6009              		.syntax unified
 6010              		.thumb
 6011              		.thumb_func
 6012              		.fpu fpv5-sp-d16
 6014              	HAL_I2C_Master_Seq_Receive_IT:
 6015              	.LFB166:
3403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
 6016              		.loc 1 3403 0
 6017              		.cfi_startproc
 6018              		@ args = 4, pretend = 0, frame = 0
 6019              		@ frame_needed = 0, uses_anonymous_args = 0
 6020              	.LVL489:
 6021 0000 70B5     		push	{r4, r5, r6, lr}
 6022              	.LCFI95:
 6023              		.cfi_def_cfa_offset 16
 6024              		.cfi_offset 4, -16
 6025              		.cfi_offset 5, -12
 6026              		.cfi_offset 6, -8
 6027              		.cfi_offset 14, -4
 6028 0002 82B0     		sub	sp, sp, #8
 6029              	.LCFI96:
 6030              		.cfi_def_cfa_offset 24
 6031              	.LVL490:
3410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 6032              		.loc 1 3410 0
 6033 0004 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
ARM GAS  /tmp/ccX4fpHz.s 			page 238


 6034 0008 E4B2     		uxtb	r4, r4
 6035 000a 202C     		cmp	r4, #32
 6036 000c 49D1     		bne	.L485
3413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6037              		.loc 1 3413 0
 6038 000e 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 6039 0012 012C     		cmp	r4, #1
 6040 0014 48D0     		beq	.L486
3413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6041              		.loc 1 3413 0 is_stmt 0 discriminator 2
 6042 0016 0124     		movs	r4, #1
 6043 0018 80F84040 		strb	r4, [r0, #64]
3415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
 6044              		.loc 1 3415 0 is_stmt 1 discriminator 2
 6045 001c 2224     		movs	r4, #34
 6046 001e 80F84140 		strb	r4, [r0, #65]
3416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 6047              		.loc 1 3416 0 discriminator 2
 6048 0022 1024     		movs	r4, #16
 6049 0024 80F84240 		strb	r4, [r0, #66]
3417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6050              		.loc 1 3417 0 discriminator 2
 6051 0028 0024     		movs	r4, #0
 6052 002a 4464     		str	r4, [r0, #68]
3420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 6053              		.loc 1 3420 0 discriminator 2
 6054 002c 4262     		str	r2, [r0, #36]
3421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
 6055              		.loc 1 3421 0 discriminator 2
 6056 002e 4385     		strh	r3, [r0, #42]	@ movhi
3422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
 6057              		.loc 1 3422 0 discriminator 2
 6058 0030 069B     		ldr	r3, [sp, #24]
 6059              	.LVL491:
 6060 0032 C362     		str	r3, [r0, #44]
 6061              	.LVL492:
3423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6062              		.loc 1 3423 0 discriminator 2
 6063 0034 1D4B     		ldr	r3, .L490
 6064 0036 4363     		str	r3, [r0, #52]
3426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 6065              		.loc 1 3426 0 discriminator 2
 6066 0038 438D     		ldrh	r3, [r0, #42]
 6067 003a 9BB2     		uxth	r3, r3
 6068 003c FF2B     		cmp	r3, #255
 6069 003e 28D9     		bls	.L481
3428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 6070              		.loc 1 3428 0
 6071 0040 FF23     		movs	r3, #255
 6072 0042 0385     		strh	r3, [r0, #40]	@ movhi
 6073              	.LVL493:
3429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 6074              		.loc 1 3429 0
 6075 0044 4FF08076 		mov	r6, #16777216
 6076              	.LVL494:
 6077              	.L482:
 6078 0048 0D46     		mov	r5, r1
ARM GAS  /tmp/ccX4fpHz.s 			page 239


 6079 004a 0446     		mov	r4, r0
 6080              	.LVL495:
3439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 6081              		.loc 1 3439 0
 6082 004c 036B     		ldr	r3, [r0, #48]
 6083 004e 122B     		cmp	r3, #18
 6084 0050 05D1     		bne	.L483
3439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 6085              		.loc 1 3439 0 is_stmt 0 discriminator 1
 6086 0052 069B     		ldr	r3, [sp, #24]
 6087 0054 B3F52A4F 		cmp	r3, #43520
 6088 0058 18BF     		it	ne
 6089 005a AA2B     		cmpne	r3, #170
 6090 005c 1DD1     		bne	.L487
 6091              	.L483:
3446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6092              		.loc 1 3446 0 is_stmt 1
 6093 005e 2046     		mov	r0, r4
 6094              	.LVL496:
 6095 0060 FFF7FEFF 		bl	I2C_ConvertOtherXferOptions
 6096              	.LVL497:
3449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 6097              		.loc 1 3449 0
 6098 0064 638D     		ldrh	r3, [r4, #42]
 6099 0066 9BB2     		uxth	r3, r3
 6100 0068 FE2B     		cmp	r3, #254
 6101 006a 18D8     		bhi	.L488
3451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 6102              		.loc 1 3451 0
 6103 006c E66A     		ldr	r6, [r4, #44]
 6104              	.LVL498:
3405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6105              		.loc 1 3405 0
 6106 006e 104B     		ldr	r3, .L490+4
 6107              	.L484:
 6108              	.LVL499:
3456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6109              		.loc 1 3456 0
 6110 0070 94F82820 		ldrb	r2, [r4, #40]	@ zero_extendqisi2
 6111 0074 0093     		str	r3, [sp]
 6112 0076 3346     		mov	r3, r6
 6113              	.LVL500:
 6114 0078 2946     		mov	r1, r5
 6115 007a 2046     		mov	r0, r4
 6116 007c FFF7FEFF 		bl	I2C_TransferConfig
 6117              	.LVL501:
3459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6118              		.loc 1 3459 0
 6119 0080 0025     		movs	r5, #0
 6120 0082 84F84050 		strb	r5, [r4, #64]
3464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6121              		.loc 1 3464 0
 6122 0086 0221     		movs	r1, #2
 6123 0088 2046     		mov	r0, r4
 6124 008a FFF7FEFF 		bl	I2C_Enable_IRQ
 6125              	.LVL502:
3466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
ARM GAS  /tmp/ccX4fpHz.s 			page 240


 6126              		.loc 1 3466 0
 6127 008e 2846     		mov	r0, r5
 6128 0090 08E0     		b	.L480
 6129              	.LVL503:
 6130              	.L481:
3433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = hi2c->XferOptions;
 6131              		.loc 1 3433 0
 6132 0092 438D     		ldrh	r3, [r0, #42]
 6133 0094 0385     		strh	r3, [r0, #40]	@ movhi
3434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 6134              		.loc 1 3434 0
 6135 0096 C66A     		ldr	r6, [r0, #44]
 6136              	.LVL504:
 6137 0098 D6E7     		b	.L482
 6138              	.L487:
3441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 6139              		.loc 1 3441 0
 6140 009a 0023     		movs	r3, #0
 6141 009c E8E7     		b	.L484
 6142              	.LVL505:
 6143              	.L488:
3405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6144              		.loc 1 3405 0
 6145 009e 044B     		ldr	r3, .L490+4
 6146 00a0 E6E7     		b	.L484
 6147              	.LVL506:
 6148              	.L485:
3470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 6149              		.loc 1 3470 0
 6150 00a2 0220     		movs	r0, #2
 6151              	.LVL507:
 6152              	.L480:
3472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6153              		.loc 1 3472 0
 6154 00a4 02B0     		add	sp, sp, #8
 6155              	.LCFI97:
 6156              		.cfi_remember_state
 6157              		.cfi_def_cfa_offset 16
 6158              		@ sp needed
 6159 00a6 70BD     		pop	{r4, r5, r6, pc}
 6160              	.LVL508:
 6161              	.L486:
 6162              	.LCFI98:
 6163              		.cfi_restore_state
3413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6164              		.loc 1 3413 0
 6165 00a8 0220     		movs	r0, #2
 6166              	.LVL509:
 6167 00aa FBE7     		b	.L480
 6168              	.L491:
 6169              		.align	2
 6170              	.L490:
 6171 00ac 00000000 		.word	I2C_Master_ISR_IT
 6172 00b0 00240080 		.word	-2147474432
 6173              		.cfi_endproc
 6174              	.LFE166:
 6176              		.section	.text.HAL_I2C_Master_Seq_Receive_DMA,"ax",%progbits
ARM GAS  /tmp/ccX4fpHz.s 			page 241


 6177              		.align	1
 6178              		.global	HAL_I2C_Master_Seq_Receive_DMA
 6179              		.syntax unified
 6180              		.thumb
 6181              		.thumb_func
 6182              		.fpu fpv5-sp-d16
 6184              	HAL_I2C_Master_Seq_Receive_DMA:
 6185              	.LFB167:
3487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
 6186              		.loc 1 3487 0
 6187              		.cfi_startproc
 6188              		@ args = 4, pretend = 0, frame = 0
 6189              		@ frame_needed = 0, uses_anonymous_args = 0
 6190              	.LVL510:
 6191 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 6192              	.LCFI99:
 6193              		.cfi_def_cfa_offset 24
 6194              		.cfi_offset 4, -24
 6195              		.cfi_offset 5, -20
 6196              		.cfi_offset 6, -16
 6197              		.cfi_offset 7, -12
 6198              		.cfi_offset 8, -8
 6199              		.cfi_offset 14, -4
 6200 0004 82B0     		sub	sp, sp, #8
 6201              	.LCFI100:
 6202              		.cfi_def_cfa_offset 32
 6203              	.LVL511:
3495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 6204              		.loc 1 3495 0
 6205 0006 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 6206 000a E4B2     		uxtb	r4, r4
 6207 000c 202C     		cmp	r4, #32
 6208 000e 40F09C80 		bne	.L502
3498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6209              		.loc 1 3498 0
 6210 0012 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 6211 0016 012C     		cmp	r4, #1
 6212 0018 00F09C80 		beq	.L503
3498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6213              		.loc 1 3498 0 is_stmt 0 discriminator 2
 6214 001c 0124     		movs	r4, #1
 6215 001e 80F84040 		strb	r4, [r0, #64]
3500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
 6216              		.loc 1 3500 0 is_stmt 1 discriminator 2
 6217 0022 2224     		movs	r4, #34
 6218 0024 80F84140 		strb	r4, [r0, #65]
3501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 6219              		.loc 1 3501 0 discriminator 2
 6220 0028 1024     		movs	r4, #16
 6221 002a 80F84240 		strb	r4, [r0, #66]
3502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6222              		.loc 1 3502 0 discriminator 2
 6223 002e 0024     		movs	r4, #0
 6224 0030 4464     		str	r4, [r0, #68]
3505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 6225              		.loc 1 3505 0 discriminator 2
 6226 0032 4262     		str	r2, [r0, #36]
ARM GAS  /tmp/ccX4fpHz.s 			page 242


3506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
 6227              		.loc 1 3506 0 discriminator 2
 6228 0034 4385     		strh	r3, [r0, #42]	@ movhi
3507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
 6229              		.loc 1 3507 0 discriminator 2
 6230 0036 089B     		ldr	r3, [sp, #32]
 6231              	.LVL512:
 6232 0038 C362     		str	r3, [r0, #44]
 6233              	.LVL513:
3508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6234              		.loc 1 3508 0 discriminator 2
 6235 003a 474B     		ldr	r3, .L509
 6236 003c 4363     		str	r3, [r0, #52]
3511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 6237              		.loc 1 3511 0 discriminator 2
 6238 003e 438D     		ldrh	r3, [r0, #42]
 6239 0040 9BB2     		uxth	r3, r3
 6240 0042 FF2B     		cmp	r3, #255
 6241 0044 3ED9     		bls	.L494
3513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 6242              		.loc 1 3513 0
 6243 0046 FF23     		movs	r3, #255
 6244 0048 0385     		strh	r3, [r0, #40]	@ movhi
 6245              	.LVL514:
3514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 6246              		.loc 1 3514 0
 6247 004a 4FF08077 		mov	r7, #16777216
 6248              	.LVL515:
 6249              	.L495:
 6250 004e 1546     		mov	r5, r2
 6251 0050 8846     		mov	r8, r1
 6252 0052 0446     		mov	r4, r0
 6253              	.LVL516:
3524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 6254              		.loc 1 3524 0
 6255 0054 036B     		ldr	r3, [r0, #48]
 6256 0056 122B     		cmp	r3, #18
 6257 0058 05D1     		bne	.L496
3524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 6258              		.loc 1 3524 0 is_stmt 0 discriminator 1
 6259 005a 089B     		ldr	r3, [sp, #32]
 6260 005c B3F52A4F 		cmp	r3, #43520
 6261 0060 18BF     		it	ne
 6262 0062 AA2B     		cmpne	r3, #170
 6263 0064 32D1     		bne	.L504
 6264              	.L496:
3531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6265              		.loc 1 3531 0 is_stmt 1
 6266 0066 2046     		mov	r0, r4
 6267              	.LVL517:
 6268 0068 FFF7FEFF 		bl	I2C_ConvertOtherXferOptions
 6269              	.LVL518:
3534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 6270              		.loc 1 3534 0
 6271 006c 638D     		ldrh	r3, [r4, #42]
 6272 006e 9BB2     		uxth	r3, r3
 6273 0070 FE2B     		cmp	r3, #254
ARM GAS  /tmp/ccX4fpHz.s 			page 243


 6274 0072 2DD8     		bhi	.L505
3536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 6275              		.loc 1 3536 0
 6276 0074 E76A     		ldr	r7, [r4, #44]
 6277              	.LVL519:
3489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
 6278              		.loc 1 3489 0
 6279 0076 394E     		ldr	r6, .L509+4
 6280              	.L497:
 6281              	.LVL520:
3540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 6282              		.loc 1 3540 0
 6283 0078 228D     		ldrh	r2, [r4, #40]
 6284 007a 002A     		cmp	r2, #0
 6285 007c 52D0     		beq	.L498
3542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 6286              		.loc 1 3542 0
 6287 007e E36B     		ldr	r3, [r4, #60]
 6288 0080 43B3     		cbz	r3, .L499
3545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6289              		.loc 1 3545 0
 6290 0082 374A     		ldr	r2, .L509+8
 6291 0084 DA63     		str	r2, [r3, #60]
3548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6292              		.loc 1 3548 0
 6293 0086 E36B     		ldr	r3, [r4, #60]
 6294 0088 364A     		ldr	r2, .L509+12
 6295 008a DA64     		str	r2, [r3, #76]
3551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmarx->XferAbortCallback = NULL;
 6296              		.loc 1 3551 0
 6297 008c E26B     		ldr	r2, [r4, #60]
 6298 008e 0023     		movs	r3, #0
 6299 0090 1364     		str	r3, [r2, #64]
3552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6300              		.loc 1 3552 0
 6301 0092 E26B     		ldr	r2, [r4, #60]
 6302 0094 1365     		str	r3, [r2, #80]
3555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 6303              		.loc 1 3555 0
 6304 0096 2168     		ldr	r1, [r4]
 6305 0098 238D     		ldrh	r3, [r4, #40]
 6306 009a 2A46     		mov	r2, r5
 6307 009c 2431     		adds	r1, r1, #36
 6308 009e E06B     		ldr	r0, [r4, #60]
 6309 00a0 FFF7FEFF 		bl	HAL_DMA_Start_IT
 6310              	.LVL521:
3572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 6311              		.loc 1 3572 0
 6312 00a4 0546     		mov	r5, r0
 6313              	.LVL522:
 6314 00a6 18B3     		cbz	r0, .L508
3595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
 6315              		.loc 1 3595 0
 6316 00a8 2023     		movs	r3, #32
 6317 00aa 84F84130 		strb	r3, [r4, #65]
3596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6318              		.loc 1 3596 0
ARM GAS  /tmp/ccX4fpHz.s 			page 244


 6319 00ae 0022     		movs	r2, #0
 6320 00b0 84F84220 		strb	r2, [r4, #66]
3599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6321              		.loc 1 3599 0
 6322 00b4 636C     		ldr	r3, [r4, #68]
 6323 00b6 43F01003 		orr	r3, r3, #16
 6324 00ba 6364     		str	r3, [r4, #68]
3602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6325              		.loc 1 3602 0
 6326 00bc 84F84020 		strb	r2, [r4, #64]
3604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 6327              		.loc 1 3604 0
 6328 00c0 0125     		movs	r5, #1
 6329 00c2 43E0     		b	.L493
 6330              	.LVL523:
 6331              	.L494:
3518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = hi2c->XferOptions;
 6332              		.loc 1 3518 0
 6333 00c4 438D     		ldrh	r3, [r0, #42]
 6334 00c6 0385     		strh	r3, [r0, #40]	@ movhi
3519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 6335              		.loc 1 3519 0
 6336 00c8 C76A     		ldr	r7, [r0, #44]
 6337              	.LVL524:
 6338 00ca C0E7     		b	.L495
 6339              	.L504:
3526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 6340              		.loc 1 3526 0
 6341 00cc 0026     		movs	r6, #0
 6342 00ce D3E7     		b	.L497
 6343              	.LVL525:
 6344              	.L505:
3489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
 6345              		.loc 1 3489 0
 6346 00d0 224E     		ldr	r6, .L509+4
 6347 00d2 D1E7     		b	.L497
 6348              	.LVL526:
 6349              	.L499:
3560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
 6350              		.loc 1 3560 0
 6351 00d4 2023     		movs	r3, #32
 6352 00d6 84F84130 		strb	r3, [r4, #65]
3561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6353              		.loc 1 3561 0
 6354 00da 0022     		movs	r2, #0
 6355 00dc 84F84220 		strb	r2, [r4, #66]
3564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6356              		.loc 1 3564 0
 6357 00e0 636C     		ldr	r3, [r4, #68]
 6358 00e2 43F08003 		orr	r3, r3, #128
 6359 00e6 6364     		str	r3, [r4, #68]
3567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6360              		.loc 1 3567 0
 6361 00e8 84F84020 		strb	r2, [r4, #64]
3569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 6362              		.loc 1 3569 0
 6363 00ec 0125     		movs	r5, #1
ARM GAS  /tmp/ccX4fpHz.s 			page 245


 6364              	.LVL527:
 6365 00ee 2DE0     		b	.L493
 6366              	.LVL528:
 6367              	.L508:
3575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6368              		.loc 1 3575 0
 6369 00f0 94F82820 		ldrb	r2, [r4, #40]	@ zero_extendqisi2
 6370 00f4 0096     		str	r6, [sp]
 6371 00f6 3B46     		mov	r3, r7
 6372 00f8 4146     		mov	r1, r8
 6373 00fa 2046     		mov	r0, r4
 6374              	.LVL529:
 6375 00fc FFF7FEFF 		bl	I2C_TransferConfig
 6376              	.LVL530:
3578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6377              		.loc 1 3578 0
 6378 0100 638D     		ldrh	r3, [r4, #42]
 6379 0102 228D     		ldrh	r2, [r4, #40]
 6380 0104 9B1A     		subs	r3, r3, r2
 6381 0106 9BB2     		uxth	r3, r3
 6382 0108 6385     		strh	r3, [r4, #42]	@ movhi
3581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6383              		.loc 1 3581 0
 6384 010a 0023     		movs	r3, #0
 6385 010c 84F84030 		strb	r3, [r4, #64]
3587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6386              		.loc 1 3587 0
 6387 0110 1121     		movs	r1, #17
 6388 0112 2046     		mov	r0, r4
 6389 0114 FFF7FEFF 		bl	I2C_Enable_IRQ
 6390              	.LVL531:
3590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 6391              		.loc 1 3590 0
 6392 0118 2268     		ldr	r2, [r4]
 6393 011a 1368     		ldr	r3, [r2]
 6394 011c 43F40043 		orr	r3, r3, #32768
 6395 0120 1360     		str	r3, [r2]
 6396 0122 13E0     		b	.L493
 6397              	.LVL532:
 6398              	.L498:
3610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6399              		.loc 1 3610 0
 6400 0124 104B     		ldr	r3, .L509+16
 6401 0126 6363     		str	r3, [r4, #52]
3614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6402              		.loc 1 3614 0
 6403 0128 0C4B     		ldr	r3, .L509+4
 6404 012a 0093     		str	r3, [sp]
 6405 012c 4FF00073 		mov	r3, #33554432
 6406 0130 D2B2     		uxtb	r2, r2
 6407 0132 4146     		mov	r1, r8
 6408 0134 2046     		mov	r0, r4
 6409 0136 FFF7FEFF 		bl	I2C_TransferConfig
 6410              	.LVL533:
3617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6411              		.loc 1 3617 0
 6412 013a 0025     		movs	r5, #0
ARM GAS  /tmp/ccX4fpHz.s 			page 246


 6413              	.LVL534:
 6414 013c 84F84050 		strb	r5, [r4, #64]
3625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 6415              		.loc 1 3625 0
 6416 0140 0121     		movs	r1, #1
 6417 0142 2046     		mov	r0, r4
 6418 0144 FFF7FEFF 		bl	I2C_Enable_IRQ
 6419              	.LVL535:
 6420 0148 00E0     		b	.L493
 6421              	.LVL536:
 6422              	.L502:
3632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 6423              		.loc 1 3632 0
 6424 014a 0225     		movs	r5, #2
 6425              	.LVL537:
 6426              	.L493:
3634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6427              		.loc 1 3634 0
 6428 014c 2846     		mov	r0, r5
 6429 014e 02B0     		add	sp, sp, #8
 6430              	.LCFI101:
 6431              		.cfi_remember_state
 6432              		.cfi_def_cfa_offset 24
 6433              		@ sp needed
 6434 0150 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 6435              	.LVL538:
 6436              	.L503:
 6437              	.LCFI102:
 6438              		.cfi_restore_state
3498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6439              		.loc 1 3498 0
 6440 0154 0225     		movs	r5, #2
 6441 0156 F9E7     		b	.L493
 6442              	.L510:
 6443              		.align	2
 6444              	.L509:
 6445 0158 00000000 		.word	I2C_Master_ISR_DMA
 6446 015c 00240080 		.word	-2147474432
 6447 0160 00000000 		.word	I2C_DMAMasterReceiveCplt
 6448 0164 00000000 		.word	I2C_DMAError
 6449 0168 00000000 		.word	I2C_Master_ISR_IT
 6450              		.cfi_endproc
 6451              	.LFE167:
 6453              		.section	.text.HAL_I2C_Slave_Seq_Transmit_IT,"ax",%progbits
 6454              		.align	1
 6455              		.global	HAL_I2C_Slave_Seq_Transmit_IT
 6456              		.syntax unified
 6457              		.thumb
 6458              		.thumb_func
 6459              		.fpu fpv5-sp-d16
 6461              	HAL_I2C_Slave_Seq_Transmit_IT:
 6462              	.LFB168:
3647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
 6463              		.loc 1 3647 0
 6464              		.cfi_startproc
 6465              		@ args = 0, pretend = 0, frame = 0
 6466              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccX4fpHz.s 			page 247


 6467              	.LVL539:
 6468 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 6469              	.LCFI103:
 6470              		.cfi_def_cfa_offset 24
 6471              		.cfi_offset 3, -24
 6472              		.cfi_offset 4, -20
 6473              		.cfi_offset 5, -16
 6474              		.cfi_offset 6, -12
 6475              		.cfi_offset 7, -8
 6476              		.cfi_offset 14, -4
3651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 6477              		.loc 1 3651 0
 6478 0002 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 6479 0006 04F02804 		and	r4, r4, #40
 6480 000a 282C     		cmp	r4, #40
 6481 000c 01D0     		beq	.L519
3727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 6482              		.loc 1 3727 0
 6483 000e 0120     		movs	r0, #1
 6484              	.LVL540:
 6485              	.L512:
3729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6486              		.loc 1 3729 0
 6487 0010 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 6488              	.LVL541:
 6489              	.L519:
3653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 6490              		.loc 1 3653 0
 6491 0012 B2FA82F4 		clz	r4, r2
 6492 0016 6409     		lsrs	r4, r4, #5
 6493 0018 0029     		cmp	r1, #0
 6494 001a 08BF     		it	eq
 6495 001c 0124     		moveq	r4, #1
 6496 001e 24B1     		cbz	r4, .L513
3655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
 6497              		.loc 1 3655 0
 6498 0020 4FF40073 		mov	r3, #512
 6499              	.LVL542:
 6500 0024 4364     		str	r3, [r0, #68]
3656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 6501              		.loc 1 3656 0
 6502 0026 0120     		movs	r0, #1
 6503              	.LVL543:
 6504 0028 F2E7     		b	.L512
 6505              	.LVL544:
 6506              	.L513:
 6507 002a 1F46     		mov	r7, r3
 6508 002c 1646     		mov	r6, r2
 6509 002e 0C46     		mov	r4, r1
 6510 0030 0546     		mov	r5, r0
3660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6511              		.loc 1 3660 0
 6512 0032 0521     		movs	r1, #5
 6513              	.LVL545:
 6514 0034 FFF7FEFF 		bl	I2C_Disable_IRQ
 6515              	.LVL546:
3663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/ccX4fpHz.s 			page 248


 6516              		.loc 1 3663 0
 6517 0038 95F84030 		ldrb	r3, [r5, #64]	@ zero_extendqisi2
 6518 003c 012B     		cmp	r3, #1
 6519 003e 46D0     		beq	.L517
3663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6520              		.loc 1 3663 0 is_stmt 0 discriminator 2
 6521 0040 0123     		movs	r3, #1
 6522 0042 85F84030 		strb	r3, [r5, #64]
3667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 6523              		.loc 1 3667 0 is_stmt 1 discriminator 2
 6524 0046 95F84130 		ldrb	r3, [r5, #65]	@ zero_extendqisi2
 6525 004a DBB2     		uxtb	r3, r3
 6526 004c 2A2B     		cmp	r3, #42
 6527 004e 23D0     		beq	.L520
 6528              	.L514:
3693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
 6529              		.loc 1 3693 0
 6530 0050 2923     		movs	r3, #41
 6531 0052 85F84130 		strb	r3, [r5, #65]
3694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 6532              		.loc 1 3694 0
 6533 0056 2023     		movs	r3, #32
 6534 0058 85F84230 		strb	r3, [r5, #66]
3695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6535              		.loc 1 3695 0
 6536 005c 0023     		movs	r3, #0
 6537 005e 6B64     		str	r3, [r5, #68]
3698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6538              		.loc 1 3698 0
 6539 0060 2A68     		ldr	r2, [r5]
 6540 0062 5368     		ldr	r3, [r2, #4]
 6541 0064 23F40043 		bic	r3, r3, #32768
 6542 0068 5360     		str	r3, [r2, #4]
3701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 6543              		.loc 1 3701 0
 6544 006a 6C62     		str	r4, [r5, #36]
3702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
 6545              		.loc 1 3702 0
 6546 006c 6E85     		strh	r6, [r5, #42]	@ movhi
3703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
 6547              		.loc 1 3703 0
 6548 006e 6B8D     		ldrh	r3, [r5, #42]
 6549 0070 2B85     		strh	r3, [r5, #40]	@ movhi
3704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
 6550              		.loc 1 3704 0
 6551 0072 EF62     		str	r7, [r5, #44]
3705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6552              		.loc 1 3705 0
 6553 0074 174B     		ldr	r3, .L521
 6554 0076 6B63     		str	r3, [r5, #52]
3707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 6555              		.loc 1 3707 0
 6556 0078 2B68     		ldr	r3, [r5]
 6557 007a 9A69     		ldr	r2, [r3, #24]
 6558 007c 12F4803F 		tst	r2, #65536
 6559 0080 01D0     		beq	.L515
3711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
ARM GAS  /tmp/ccX4fpHz.s 			page 249


 6560              		.loc 1 3711 0
 6561 0082 0822     		movs	r2, #8
 6562 0084 DA61     		str	r2, [r3, #28]
 6563              	.L515:
3715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6564              		.loc 1 3715 0
 6565 0086 0024     		movs	r4, #0
 6566              	.LVL547:
 6567 0088 85F84040 		strb	r4, [r5, #64]
3721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6568              		.loc 1 3721 0
 6569 008c 0521     		movs	r1, #5
 6570 008e 2846     		mov	r0, r5
 6571 0090 FFF7FEFF 		bl	I2C_Enable_IRQ
 6572              	.LVL548:
3723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 6573              		.loc 1 3723 0
 6574 0094 2046     		mov	r0, r4
 6575 0096 BBE7     		b	.L512
 6576              	.LVL549:
 6577              	.L520:
3670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6578              		.loc 1 3670 0
 6579 0098 0221     		movs	r1, #2
 6580 009a 2846     		mov	r0, r5
 6581 009c FFF7FEFF 		bl	I2C_Disable_IRQ
 6582              	.LVL550:
3673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 6583              		.loc 1 3673 0
 6584 00a0 2B68     		ldr	r3, [r5]
 6585 00a2 1A68     		ldr	r2, [r3]
 6586 00a4 12F4004F 		tst	r2, #32768
 6587 00a8 D2D0     		beq	.L514
3675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6588              		.loc 1 3675 0
 6589 00aa 1A68     		ldr	r2, [r3]
 6590 00ac 22F40042 		bic	r2, r2, #32768
 6591 00b0 1A60     		str	r2, [r3]
3677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 6592              		.loc 1 3677 0
 6593 00b2 EB6B     		ldr	r3, [r5, #60]
 6594 00b4 002B     		cmp	r3, #0
 6595 00b6 CBD0     		beq	.L514
3681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6596              		.loc 1 3681 0
 6597 00b8 074A     		ldr	r2, .L521+4
 6598 00ba 1A65     		str	r2, [r3, #80]
3684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
 6599              		.loc 1 3684 0
 6600 00bc E86B     		ldr	r0, [r5, #60]
 6601 00be FFF7FEFF 		bl	HAL_DMA_Abort_IT
 6602              	.LVL551:
 6603 00c2 0028     		cmp	r0, #0
 6604 00c4 C4D0     		beq	.L514
3687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
 6605              		.loc 1 3687 0
 6606 00c6 E86B     		ldr	r0, [r5, #60]
ARM GAS  /tmp/ccX4fpHz.s 			page 250


 6607 00c8 036D     		ldr	r3, [r0, #80]
 6608 00ca 9847     		blx	r3
 6609              	.LVL552:
 6610 00cc C0E7     		b	.L514
 6611              	.L517:
3663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6612              		.loc 1 3663 0
 6613 00ce 0220     		movs	r0, #2
 6614 00d0 9EE7     		b	.L512
 6615              	.L522:
 6616 00d2 00BF     		.align	2
 6617              	.L521:
 6618 00d4 00000000 		.word	I2C_Slave_ISR_IT
 6619 00d8 00000000 		.word	I2C_DMAAbort
 6620              		.cfi_endproc
 6621              	.LFE168:
 6623              		.section	.text.HAL_I2C_Slave_Seq_Transmit_DMA,"ax",%progbits
 6624              		.align	1
 6625              		.global	HAL_I2C_Slave_Seq_Transmit_DMA
 6626              		.syntax unified
 6627              		.thumb
 6628              		.thumb_func
 6629              		.fpu fpv5-sp-d16
 6631              	HAL_I2C_Slave_Seq_Transmit_DMA:
 6632              	.LFB169:
3742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
 6633              		.loc 1 3742 0
 6634              		.cfi_startproc
 6635              		@ args = 0, pretend = 0, frame = 0
 6636              		@ frame_needed = 0, uses_anonymous_args = 0
 6637              	.LVL553:
 6638 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 6639              	.LCFI104:
 6640              		.cfi_def_cfa_offset 24
 6641              		.cfi_offset 3, -24
 6642              		.cfi_offset 4, -20
 6643              		.cfi_offset 5, -16
 6644              		.cfi_offset 6, -12
 6645              		.cfi_offset 7, -8
 6646              		.cfi_offset 14, -4
3748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 6647              		.loc 1 3748 0
 6648 0002 90F84150 		ldrb	r5, [r0, #65]	@ zero_extendqisi2
 6649 0006 05F02805 		and	r5, r5, #40
 6650 000a 282D     		cmp	r5, #40
 6651 000c 02D0     		beq	.L537
3906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 6652              		.loc 1 3906 0
 6653 000e 0125     		movs	r5, #1
 6654              	.LVL554:
 6655              	.L524:
3908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6656              		.loc 1 3908 0
 6657 0010 2846     		mov	r0, r5
 6658 0012 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 6659              	.LVL555:
 6660              	.L537:
ARM GAS  /tmp/ccX4fpHz.s 			page 251


3750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 6661              		.loc 1 3750 0
 6662 0014 B2FA82F4 		clz	r4, r2
 6663 0018 6409     		lsrs	r4, r4, #5
 6664 001a 0029     		cmp	r1, #0
 6665 001c 08BF     		it	eq
 6666 001e 0124     		moveq	r4, #1
 6667 0020 002C     		cmp	r4, #0
 6668 0022 5CD1     		bne	.L538
3757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6669              		.loc 1 3757 0
 6670 0024 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 6671 0028 012C     		cmp	r4, #1
 6672 002a 00F0AF80 		beq	.L534
 6673 002e 1F46     		mov	r7, r3
 6674 0030 1646     		mov	r6, r2
 6675 0032 0D46     		mov	r5, r1
 6676 0034 0446     		mov	r4, r0
3757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6677              		.loc 1 3757 0 is_stmt 0 discriminator 2
 6678 0036 0123     		movs	r3, #1
 6679              	.LVL556:
 6680 0038 80F84030 		strb	r3, [r0, #64]
3760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6681              		.loc 1 3760 0 is_stmt 1 discriminator 2
 6682 003c 0521     		movs	r1, #5
 6683              	.LVL557:
 6684 003e FFF7FEFF 		bl	I2C_Disable_IRQ
 6685              	.LVL558:
3764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 6686              		.loc 1 3764 0 discriminator 2
 6687 0042 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 6688 0046 DBB2     		uxtb	r3, r3
 6689 0048 2A2B     		cmp	r3, #42
 6690 004a 4DD0     		beq	.L539
3789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 6691              		.loc 1 3789 0
 6692 004c 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 6693 0050 DBB2     		uxtb	r3, r3
 6694 0052 292B     		cmp	r3, #41
 6695 0054 64D0     		beq	.L540
 6696              	.L527:
3816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
 6697              		.loc 1 3816 0
 6698 0056 2923     		movs	r3, #41
 6699 0058 84F84130 		strb	r3, [r4, #65]
3817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 6700              		.loc 1 3817 0
 6701 005c 2023     		movs	r3, #32
 6702 005e 84F84230 		strb	r3, [r4, #66]
3818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6703              		.loc 1 3818 0
 6704 0062 0023     		movs	r3, #0
 6705 0064 6364     		str	r3, [r4, #68]
3821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6706              		.loc 1 3821 0
 6707 0066 2268     		ldr	r2, [r4]
ARM GAS  /tmp/ccX4fpHz.s 			page 252


 6708 0068 5368     		ldr	r3, [r2, #4]
 6709 006a 23F40043 		bic	r3, r3, #32768
 6710 006e 5360     		str	r3, [r2, #4]
3824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 6711              		.loc 1 3824 0
 6712 0070 6562     		str	r5, [r4, #36]
3825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
 6713              		.loc 1 3825 0
 6714 0072 6685     		strh	r6, [r4, #42]	@ movhi
3826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
 6715              		.loc 1 3826 0
 6716 0074 638D     		ldrh	r3, [r4, #42]
 6717 0076 2385     		strh	r3, [r4, #40]	@ movhi
3827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_DMA;
 6718              		.loc 1 3827 0
 6719 0078 E762     		str	r7, [r4, #44]
3828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6720              		.loc 1 3828 0
 6721 007a 454B     		ldr	r3, .L542
 6722 007c 6363     		str	r3, [r4, #52]
3830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 6723              		.loc 1 3830 0
 6724 007e A36B     		ldr	r3, [r4, #56]
 6725 0080 002B     		cmp	r3, #0
 6726 0082 64D0     		beq	.L528
3833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6727              		.loc 1 3833 0
 6728 0084 434A     		ldr	r2, .L542+4
 6729 0086 DA63     		str	r2, [r3, #60]
3836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6730              		.loc 1 3836 0
 6731 0088 A36B     		ldr	r3, [r4, #56]
 6732 008a 434A     		ldr	r2, .L542+8
 6733 008c DA64     		str	r2, [r3, #76]
3839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmatx->XferAbortCallback = NULL;
 6734              		.loc 1 3839 0
 6735 008e A26B     		ldr	r2, [r4, #56]
 6736 0090 0023     		movs	r3, #0
 6737 0092 1364     		str	r3, [r2, #64]
3840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6738              		.loc 1 3840 0
 6739 0094 A26B     		ldr	r2, [r4, #56]
 6740 0096 1365     		str	r3, [r2, #80]
3843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 6741              		.loc 1 3843 0
 6742 0098 2268     		ldr	r2, [r4]
 6743 009a 238D     		ldrh	r3, [r4, #40]
 6744 009c 2832     		adds	r2, r2, #40
 6745 009e 2946     		mov	r1, r5
 6746 00a0 A06B     		ldr	r0, [r4, #56]
 6747 00a2 FFF7FEFF 		bl	HAL_DMA_Start_IT
 6748              	.LVL559:
3860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 6749              		.loc 1 3860 0
 6750 00a6 0546     		mov	r5, r0
 6751              	.LVL560:
 6752 00a8 0028     		cmp	r0, #0
ARM GAS  /tmp/ccX4fpHz.s 			page 253


 6753 00aa 5ED1     		bne	.L541
3863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6754              		.loc 1 3863 0
 6755 00ac 638D     		ldrh	r3, [r4, #42]
 6756 00ae 228D     		ldrh	r2, [r4, #40]
 6757 00b0 9B1A     		subs	r3, r3, r2
 6758 00b2 9BB2     		uxth	r3, r3
 6759 00b4 6385     		strh	r3, [r4, #42]	@ movhi
3866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 6760              		.loc 1 3866 0
 6761 00b6 0023     		movs	r3, #0
 6762 00b8 2385     		strh	r3, [r4, #40]	@ movhi
3883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 6763              		.loc 1 3883 0
 6764 00ba 2368     		ldr	r3, [r4]
 6765 00bc 9A69     		ldr	r2, [r3, #24]
 6766 00be 12F4803F 		tst	r2, #65536
 6767 00c2 60D1     		bne	.L531
 6768              	.L532:
3891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6769              		.loc 1 3891 0
 6770 00c4 0023     		movs	r3, #0
 6771 00c6 84F84030 		strb	r3, [r4, #64]
3897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6772              		.loc 1 3897 0
 6773 00ca 0421     		movs	r1, #4
 6774 00cc 2046     		mov	r0, r4
 6775              	.LVL561:
 6776 00ce FFF7FEFF 		bl	I2C_Enable_IRQ
 6777              	.LVL562:
3900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6778              		.loc 1 3900 0
 6779 00d2 2268     		ldr	r2, [r4]
 6780 00d4 1368     		ldr	r3, [r2]
 6781 00d6 43F48043 		orr	r3, r3, #16384
 6782 00da 1360     		str	r3, [r2]
3902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 6783              		.loc 1 3902 0
 6784 00dc 98E7     		b	.L524
 6785              	.LVL563:
 6786              	.L538:
3752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
 6787              		.loc 1 3752 0
 6788 00de 4FF40073 		mov	r3, #512
 6789              	.LVL564:
 6790 00e2 4364     		str	r3, [r0, #68]
3753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 6791              		.loc 1 3753 0
 6792 00e4 0125     		movs	r5, #1
 6793 00e6 93E7     		b	.L524
 6794              	.LVL565:
 6795              	.L539:
3767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6796              		.loc 1 3767 0
 6797 00e8 0221     		movs	r1, #2
 6798 00ea 2046     		mov	r0, r4
 6799 00ec FFF7FEFF 		bl	I2C_Disable_IRQ
ARM GAS  /tmp/ccX4fpHz.s 			page 254


 6800              	.LVL566:
3769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 6801              		.loc 1 3769 0
 6802 00f0 2368     		ldr	r3, [r4]
 6803 00f2 1A68     		ldr	r2, [r3]
 6804 00f4 12F4004F 		tst	r2, #32768
 6805 00f8 ADD0     		beq	.L527
3772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 6806              		.loc 1 3772 0
 6807 00fa E26B     		ldr	r2, [r4, #60]
 6808 00fc 002A     		cmp	r2, #0
 6809 00fe AAD0     		beq	.L527
3774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6810              		.loc 1 3774 0
 6811 0100 1A68     		ldr	r2, [r3]
 6812 0102 22F40042 		bic	r2, r2, #32768
 6813 0106 1A60     		str	r2, [r3]
3778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6814              		.loc 1 3778 0
 6815 0108 E36B     		ldr	r3, [r4, #60]
 6816 010a 244A     		ldr	r2, .L542+12
 6817 010c 1A65     		str	r2, [r3, #80]
3781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
 6818              		.loc 1 3781 0
 6819 010e E06B     		ldr	r0, [r4, #60]
 6820 0110 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 6821              	.LVL567:
 6822 0114 0028     		cmp	r0, #0
 6823 0116 9ED0     		beq	.L527
3784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
 6824              		.loc 1 3784 0
 6825 0118 E06B     		ldr	r0, [r4, #60]
 6826 011a 036D     		ldr	r3, [r0, #80]
 6827 011c 9847     		blx	r3
 6828              	.LVL568:
 6829 011e 9AE7     		b	.L527
 6830              	.L540:
3791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 6831              		.loc 1 3791 0
 6832 0120 2368     		ldr	r3, [r4]
 6833 0122 1A68     		ldr	r2, [r3]
 6834 0124 12F4804F 		tst	r2, #16384
 6835 0128 95D0     		beq	.L527
3793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6836              		.loc 1 3793 0
 6837 012a 1A68     		ldr	r2, [r3]
 6838 012c 22F48042 		bic	r2, r2, #16384
 6839 0130 1A60     		str	r2, [r3]
3796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 6840              		.loc 1 3796 0
 6841 0132 A36B     		ldr	r3, [r4, #56]
 6842 0134 002B     		cmp	r3, #0
 6843 0136 8ED0     		beq	.L527
3800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6844              		.loc 1 3800 0
 6845 0138 184A     		ldr	r2, .L542+12
 6846 013a 1A65     		str	r2, [r3, #80]
ARM GAS  /tmp/ccX4fpHz.s 			page 255


3803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
 6847              		.loc 1 3803 0
 6848 013c A06B     		ldr	r0, [r4, #56]
 6849 013e FFF7FEFF 		bl	HAL_DMA_Abort_IT
 6850              	.LVL569:
 6851 0142 0028     		cmp	r0, #0
 6852 0144 87D0     		beq	.L527
3806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
 6853              		.loc 1 3806 0
 6854 0146 A06B     		ldr	r0, [r4, #56]
 6855 0148 036D     		ldr	r3, [r0, #80]
 6856 014a 9847     		blx	r3
 6857              	.LVL570:
 6858 014c 83E7     		b	.L527
 6859              	.L528:
3848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 6860              		.loc 1 3848 0
 6861 014e 2823     		movs	r3, #40
 6862 0150 84F84130 		strb	r3, [r4, #65]
3849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6863              		.loc 1 3849 0
 6864 0154 0022     		movs	r2, #0
 6865 0156 84F84220 		strb	r2, [r4, #66]
3852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6866              		.loc 1 3852 0
 6867 015a 636C     		ldr	r3, [r4, #68]
 6868 015c 43F08003 		orr	r3, r3, #128
 6869 0160 6364     		str	r3, [r4, #68]
3855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6870              		.loc 1 3855 0
 6871 0162 84F84020 		strb	r2, [r4, #64]
3857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 6872              		.loc 1 3857 0
 6873 0166 0125     		movs	r5, #1
 6874              	.LVL571:
 6875 0168 52E7     		b	.L524
 6876              	.LVL572:
 6877              	.L541:
3871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 6878              		.loc 1 3871 0
 6879 016a 2823     		movs	r3, #40
 6880 016c 84F84130 		strb	r3, [r4, #65]
3872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6881              		.loc 1 3872 0
 6882 0170 0022     		movs	r2, #0
 6883 0172 84F84220 		strb	r2, [r4, #66]
3875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6884              		.loc 1 3875 0
 6885 0176 636C     		ldr	r3, [r4, #68]
 6886 0178 43F01003 		orr	r3, r3, #16
 6887 017c 6364     		str	r3, [r4, #68]
3878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6888              		.loc 1 3878 0
 6889 017e 84F84020 		strb	r2, [r4, #64]
3880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 6890              		.loc 1 3880 0
 6891 0182 0125     		movs	r5, #1
ARM GAS  /tmp/ccX4fpHz.s 			page 256


 6892 0184 44E7     		b	.L524
 6893              	.L531:
3887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 6894              		.loc 1 3887 0
 6895 0186 0822     		movs	r2, #8
 6896 0188 DA61     		str	r2, [r3, #28]
 6897 018a 9BE7     		b	.L532
 6898              	.LVL573:
 6899              	.L534:
3757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6900              		.loc 1 3757 0
 6901 018c 0225     		movs	r5, #2
 6902 018e 3FE7     		b	.L524
 6903              	.L543:
 6904              		.align	2
 6905              	.L542:
 6906 0190 00000000 		.word	I2C_Slave_ISR_DMA
 6907 0194 00000000 		.word	I2C_DMASlaveTransmitCplt
 6908 0198 00000000 		.word	I2C_DMAError
 6909 019c 00000000 		.word	I2C_DMAAbort
 6910              		.cfi_endproc
 6911              	.LFE169:
 6913              		.section	.text.HAL_I2C_Slave_Seq_Receive_IT,"ax",%progbits
 6914              		.align	1
 6915              		.global	HAL_I2C_Slave_Seq_Receive_IT
 6916              		.syntax unified
 6917              		.thumb
 6918              		.thumb_func
 6919              		.fpu fpv5-sp-d16
 6921              	HAL_I2C_Slave_Seq_Receive_IT:
 6922              	.LFB170:
3921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
 6923              		.loc 1 3921 0
 6924              		.cfi_startproc
 6925              		@ args = 0, pretend = 0, frame = 0
 6926              		@ frame_needed = 0, uses_anonymous_args = 0
 6927              	.LVL574:
 6928 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 6929              	.LCFI105:
 6930              		.cfi_def_cfa_offset 24
 6931              		.cfi_offset 3, -24
 6932              		.cfi_offset 4, -20
 6933              		.cfi_offset 5, -16
 6934              		.cfi_offset 6, -12
 6935              		.cfi_offset 7, -8
 6936              		.cfi_offset 14, -4
3925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 6937              		.loc 1 3925 0
 6938 0002 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 6939 0006 04F02804 		and	r4, r4, #40
 6940 000a 282C     		cmp	r4, #40
 6941 000c 01D0     		beq	.L552
4001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 6942              		.loc 1 4001 0
 6943 000e 0120     		movs	r0, #1
 6944              	.LVL575:
 6945              	.L545:
ARM GAS  /tmp/ccX4fpHz.s 			page 257


4003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6946              		.loc 1 4003 0
 6947 0010 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 6948              	.LVL576:
 6949              	.L552:
3927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 6950              		.loc 1 3927 0
 6951 0012 B2FA82F4 		clz	r4, r2
 6952 0016 6409     		lsrs	r4, r4, #5
 6953 0018 0029     		cmp	r1, #0
 6954 001a 08BF     		it	eq
 6955 001c 0124     		moveq	r4, #1
 6956 001e 24B1     		cbz	r4, .L546
3929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
 6957              		.loc 1 3929 0
 6958 0020 4FF40073 		mov	r3, #512
 6959              	.LVL577:
 6960 0024 4364     		str	r3, [r0, #68]
3930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 6961              		.loc 1 3930 0
 6962 0026 0120     		movs	r0, #1
 6963              	.LVL578:
 6964 0028 F2E7     		b	.L545
 6965              	.LVL579:
 6966              	.L546:
 6967 002a 1F46     		mov	r7, r3
 6968 002c 1646     		mov	r6, r2
 6969 002e 0C46     		mov	r4, r1
 6970 0030 0546     		mov	r5, r0
3934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6971              		.loc 1 3934 0
 6972 0032 0621     		movs	r1, #6
 6973              	.LVL580:
 6974 0034 FFF7FEFF 		bl	I2C_Disable_IRQ
 6975              	.LVL581:
3937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6976              		.loc 1 3937 0
 6977 0038 95F84030 		ldrb	r3, [r5, #64]	@ zero_extendqisi2
 6978 003c 012B     		cmp	r3, #1
 6979 003e 46D0     		beq	.L550
3937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6980              		.loc 1 3937 0 is_stmt 0 discriminator 2
 6981 0040 0123     		movs	r3, #1
 6982 0042 85F84030 		strb	r3, [r5, #64]
3941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 6983              		.loc 1 3941 0 is_stmt 1 discriminator 2
 6984 0046 95F84130 		ldrb	r3, [r5, #65]	@ zero_extendqisi2
 6985 004a DBB2     		uxtb	r3, r3
 6986 004c 292B     		cmp	r3, #41
 6987 004e 23D0     		beq	.L553
 6988              	.L547:
3967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
 6989              		.loc 1 3967 0
 6990 0050 2A23     		movs	r3, #42
 6991 0052 85F84130 		strb	r3, [r5, #65]
3968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 6992              		.loc 1 3968 0
ARM GAS  /tmp/ccX4fpHz.s 			page 258


 6993 0056 2023     		movs	r3, #32
 6994 0058 85F84230 		strb	r3, [r5, #66]
3969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6995              		.loc 1 3969 0
 6996 005c 0023     		movs	r3, #0
 6997 005e 6B64     		str	r3, [r5, #68]
3972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6998              		.loc 1 3972 0
 6999 0060 2A68     		ldr	r2, [r5]
 7000 0062 5368     		ldr	r3, [r2, #4]
 7001 0064 23F40043 		bic	r3, r3, #32768
 7002 0068 5360     		str	r3, [r2, #4]
3975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 7003              		.loc 1 3975 0
 7004 006a 6C62     		str	r4, [r5, #36]
3976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
 7005              		.loc 1 3976 0
 7006 006c 6E85     		strh	r6, [r5, #42]	@ movhi
3977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
 7007              		.loc 1 3977 0
 7008 006e 6B8D     		ldrh	r3, [r5, #42]
 7009 0070 2B85     		strh	r3, [r5, #40]	@ movhi
3978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
 7010              		.loc 1 3978 0
 7011 0072 EF62     		str	r7, [r5, #44]
3979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7012              		.loc 1 3979 0
 7013 0074 174B     		ldr	r3, .L554
 7014 0076 6B63     		str	r3, [r5, #52]
3981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 7015              		.loc 1 3981 0
 7016 0078 2B68     		ldr	r3, [r5]
 7017 007a 9A69     		ldr	r2, [r3, #24]
 7018 007c 12F4803F 		tst	r2, #65536
 7019 0080 01D1     		bne	.L548
3985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 7020              		.loc 1 3985 0
 7021 0082 0822     		movs	r2, #8
 7022 0084 DA61     		str	r2, [r3, #28]
 7023              	.L548:
3989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7024              		.loc 1 3989 0
 7025 0086 0024     		movs	r4, #0
 7026              	.LVL582:
 7027 0088 85F84040 		strb	r4, [r5, #64]
3995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7028              		.loc 1 3995 0
 7029 008c 0621     		movs	r1, #6
 7030 008e 2846     		mov	r0, r5
 7031 0090 FFF7FEFF 		bl	I2C_Enable_IRQ
 7032              	.LVL583:
3997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 7033              		.loc 1 3997 0
 7034 0094 2046     		mov	r0, r4
 7035 0096 BBE7     		b	.L545
 7036              	.LVL584:
 7037              	.L553:
ARM GAS  /tmp/ccX4fpHz.s 			page 259


3944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7038              		.loc 1 3944 0
 7039 0098 0121     		movs	r1, #1
 7040 009a 2846     		mov	r0, r5
 7041 009c FFF7FEFF 		bl	I2C_Disable_IRQ
 7042              	.LVL585:
3946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 7043              		.loc 1 3946 0
 7044 00a0 2B68     		ldr	r3, [r5]
 7045 00a2 1A68     		ldr	r2, [r3]
 7046 00a4 12F4804F 		tst	r2, #16384
 7047 00a8 D2D0     		beq	.L547
3948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7048              		.loc 1 3948 0
 7049 00aa 1A68     		ldr	r2, [r3]
 7050 00ac 22F48042 		bic	r2, r2, #16384
 7051 00b0 1A60     		str	r2, [r3]
3951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 7052              		.loc 1 3951 0
 7053 00b2 AB6B     		ldr	r3, [r5, #56]
 7054 00b4 002B     		cmp	r3, #0
 7055 00b6 CBD0     		beq	.L547
3955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7056              		.loc 1 3955 0
 7057 00b8 074A     		ldr	r2, .L554+4
 7058 00ba 1A65     		str	r2, [r3, #80]
3958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
 7059              		.loc 1 3958 0
 7060 00bc A86B     		ldr	r0, [r5, #56]
 7061 00be FFF7FEFF 		bl	HAL_DMA_Abort_IT
 7062              	.LVL586:
 7063 00c2 0028     		cmp	r0, #0
 7064 00c4 C4D0     		beq	.L547
3961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
 7065              		.loc 1 3961 0
 7066 00c6 A86B     		ldr	r0, [r5, #56]
 7067 00c8 036D     		ldr	r3, [r0, #80]
 7068 00ca 9847     		blx	r3
 7069              	.LVL587:
 7070 00cc C0E7     		b	.L547
 7071              	.L550:
3937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7072              		.loc 1 3937 0
 7073 00ce 0220     		movs	r0, #2
 7074 00d0 9EE7     		b	.L545
 7075              	.L555:
 7076 00d2 00BF     		.align	2
 7077              	.L554:
 7078 00d4 00000000 		.word	I2C_Slave_ISR_IT
 7079 00d8 00000000 		.word	I2C_DMAAbort
 7080              		.cfi_endproc
 7081              	.LFE170:
 7083              		.section	.text.HAL_I2C_Slave_Seq_Receive_DMA,"ax",%progbits
 7084              		.align	1
 7085              		.global	HAL_I2C_Slave_Seq_Receive_DMA
 7086              		.syntax unified
 7087              		.thumb
ARM GAS  /tmp/ccX4fpHz.s 			page 260


 7088              		.thumb_func
 7089              		.fpu fpv5-sp-d16
 7091              	HAL_I2C_Slave_Seq_Receive_DMA:
 7092              	.LFB171:
4016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
 7093              		.loc 1 4016 0
 7094              		.cfi_startproc
 7095              		@ args = 0, pretend = 0, frame = 0
 7096              		@ frame_needed = 0, uses_anonymous_args = 0
 7097              	.LVL588:
 7098 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 7099              	.LCFI106:
 7100              		.cfi_def_cfa_offset 24
 7101              		.cfi_offset 3, -24
 7102              		.cfi_offset 4, -20
 7103              		.cfi_offset 5, -16
 7104              		.cfi_offset 6, -12
 7105              		.cfi_offset 7, -8
 7106              		.cfi_offset 14, -4
4022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 7107              		.loc 1 4022 0
 7108 0002 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 7109 0006 04F02804 		and	r4, r4, #40
 7110 000a 282C     		cmp	r4, #40
 7111 000c 02D0     		beq	.L570
4180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 7112              		.loc 1 4180 0
 7113 000e 0125     		movs	r5, #1
 7114              	.LVL589:
 7115              	.L557:
4182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7116              		.loc 1 4182 0
 7117 0010 2846     		mov	r0, r5
 7118 0012 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 7119              	.LVL590:
 7120              	.L570:
4024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 7121              		.loc 1 4024 0
 7122 0014 B2FA82F4 		clz	r4, r2
 7123 0018 6409     		lsrs	r4, r4, #5
 7124 001a 0029     		cmp	r1, #0
 7125 001c 08BF     		it	eq
 7126 001e 0124     		moveq	r4, #1
 7127 0020 24B1     		cbz	r4, .L558
4026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
 7128              		.loc 1 4026 0
 7129 0022 4FF40073 		mov	r3, #512
 7130              	.LVL591:
 7131 0026 4364     		str	r3, [r0, #68]
4027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 7132              		.loc 1 4027 0
 7133 0028 0125     		movs	r5, #1
 7134 002a F1E7     		b	.L557
 7135              	.LVL592:
 7136              	.L558:
 7137 002c 1F46     		mov	r7, r3
 7138 002e 1646     		mov	r6, r2
ARM GAS  /tmp/ccX4fpHz.s 			page 261


 7139 0030 0D46     		mov	r5, r1
 7140 0032 0446     		mov	r4, r0
4031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7141              		.loc 1 4031 0
 7142 0034 0621     		movs	r1, #6
 7143              	.LVL593:
 7144 0036 FFF7FEFF 		bl	I2C_Disable_IRQ
 7145              	.LVL594:
4034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7146              		.loc 1 4034 0
 7147 003a 94F84030 		ldrb	r3, [r4, #64]	@ zero_extendqisi2
 7148 003e 012B     		cmp	r3, #1
 7149 0040 00F0A380 		beq	.L567
4034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7150              		.loc 1 4034 0 is_stmt 0 discriminator 2
 7151 0044 0123     		movs	r3, #1
 7152 0046 84F84030 		strb	r3, [r4, #64]
4038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 7153              		.loc 1 4038 0 is_stmt 1 discriminator 2
 7154 004a 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 7155 004e DBB2     		uxtb	r3, r3
 7156 0050 292B     		cmp	r3, #41
 7157 0052 48D0     		beq	.L571
4063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 7158              		.loc 1 4063 0
 7159 0054 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 7160 0058 DBB2     		uxtb	r3, r3
 7161 005a 2A2B     		cmp	r3, #42
 7162 005c 5FD0     		beq	.L572
 7163              	.L560:
4090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
 7164              		.loc 1 4090 0
 7165 005e 2A23     		movs	r3, #42
 7166 0060 84F84130 		strb	r3, [r4, #65]
4091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 7167              		.loc 1 4091 0
 7168 0064 2023     		movs	r3, #32
 7169 0066 84F84230 		strb	r3, [r4, #66]
4092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7170              		.loc 1 4092 0
 7171 006a 0023     		movs	r3, #0
 7172 006c 6364     		str	r3, [r4, #68]
4095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7173              		.loc 1 4095 0
 7174 006e 2268     		ldr	r2, [r4]
 7175 0070 5368     		ldr	r3, [r2, #4]
 7176 0072 23F40043 		bic	r3, r3, #32768
 7177 0076 5360     		str	r3, [r2, #4]
4098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 7178              		.loc 1 4098 0
 7179 0078 6562     		str	r5, [r4, #36]
4099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
 7180              		.loc 1 4099 0
 7181 007a 6685     		strh	r6, [r4, #42]	@ movhi
4100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
 7182              		.loc 1 4100 0
 7183 007c 638D     		ldrh	r3, [r4, #42]
ARM GAS  /tmp/ccX4fpHz.s 			page 262


 7184 007e 2385     		strh	r3, [r4, #40]	@ movhi
4101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_DMA;
 7185              		.loc 1 4101 0
 7186 0080 E762     		str	r7, [r4, #44]
4102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7187              		.loc 1 4102 0
 7188 0082 434B     		ldr	r3, .L574
 7189 0084 6363     		str	r3, [r4, #52]
4104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 7190              		.loc 1 4104 0
 7191 0086 E36B     		ldr	r3, [r4, #60]
 7192 0088 002B     		cmp	r3, #0
 7193 008a 5FD0     		beq	.L561
4107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7194              		.loc 1 4107 0
 7195 008c 414A     		ldr	r2, .L574+4
 7196 008e DA63     		str	r2, [r3, #60]
4110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7197              		.loc 1 4110 0
 7198 0090 E36B     		ldr	r3, [r4, #60]
 7199 0092 414A     		ldr	r2, .L574+8
 7200 0094 DA64     		str	r2, [r3, #76]
4113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmarx->XferAbortCallback = NULL;
 7201              		.loc 1 4113 0
 7202 0096 E26B     		ldr	r2, [r4, #60]
 7203 0098 0023     		movs	r3, #0
 7204 009a 1364     		str	r3, [r2, #64]
4114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7205              		.loc 1 4114 0
 7206 009c E26B     		ldr	r2, [r4, #60]
 7207 009e 1365     		str	r3, [r2, #80]
4117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 7208              		.loc 1 4117 0
 7209 00a0 2168     		ldr	r1, [r4]
 7210 00a2 238D     		ldrh	r3, [r4, #40]
 7211 00a4 2A46     		mov	r2, r5
 7212 00a6 2431     		adds	r1, r1, #36
 7213 00a8 E06B     		ldr	r0, [r4, #60]
 7214 00aa FFF7FEFF 		bl	HAL_DMA_Start_IT
 7215              	.LVL595:
4134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 7216              		.loc 1 4134 0
 7217 00ae 0546     		mov	r5, r0
 7218              	.LVL596:
 7219 00b0 0028     		cmp	r0, #0
 7220 00b2 59D1     		bne	.L573
4137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7221              		.loc 1 4137 0
 7222 00b4 638D     		ldrh	r3, [r4, #42]
 7223 00b6 228D     		ldrh	r2, [r4, #40]
 7224 00b8 9B1A     		subs	r3, r3, r2
 7225 00ba 9BB2     		uxth	r3, r3
 7226 00bc 6385     		strh	r3, [r4, #42]	@ movhi
4140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 7227              		.loc 1 4140 0
 7228 00be 0023     		movs	r3, #0
 7229 00c0 2385     		strh	r3, [r4, #40]	@ movhi
ARM GAS  /tmp/ccX4fpHz.s 			page 263


4157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 7230              		.loc 1 4157 0
 7231 00c2 2368     		ldr	r3, [r4]
 7232 00c4 9A69     		ldr	r2, [r3, #24]
 7233 00c6 12F4803F 		tst	r2, #65536
 7234 00ca 5BD0     		beq	.L564
 7235              	.L565:
4165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7236              		.loc 1 4165 0
 7237 00cc 0023     		movs	r3, #0
 7238 00ce 84F84030 		strb	r3, [r4, #64]
4171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7239              		.loc 1 4171 0
 7240 00d2 0621     		movs	r1, #6
 7241 00d4 2046     		mov	r0, r4
 7242              	.LVL597:
 7243 00d6 FFF7FEFF 		bl	I2C_Enable_IRQ
 7244              	.LVL598:
4174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7245              		.loc 1 4174 0
 7246 00da 2268     		ldr	r2, [r4]
 7247 00dc 1368     		ldr	r3, [r2]
 7248 00de 43F40043 		orr	r3, r3, #32768
 7249 00e2 1360     		str	r3, [r2]
4176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 7250              		.loc 1 4176 0
 7251 00e4 94E7     		b	.L557
 7252              	.LVL599:
 7253              	.L571:
4041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7254              		.loc 1 4041 0
 7255 00e6 0121     		movs	r1, #1
 7256 00e8 2046     		mov	r0, r4
 7257 00ea FFF7FEFF 		bl	I2C_Disable_IRQ
 7258              	.LVL600:
4043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 7259              		.loc 1 4043 0
 7260 00ee 2368     		ldr	r3, [r4]
 7261 00f0 1A68     		ldr	r2, [r3]
 7262 00f2 12F4804F 		tst	r2, #16384
 7263 00f6 B2D0     		beq	.L560
4046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 7264              		.loc 1 4046 0
 7265 00f8 A26B     		ldr	r2, [r4, #56]
 7266 00fa 002A     		cmp	r2, #0
 7267 00fc AFD0     		beq	.L560
4048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7268              		.loc 1 4048 0
 7269 00fe 1A68     		ldr	r2, [r3]
 7270 0100 22F48042 		bic	r2, r2, #16384
 7271 0104 1A60     		str	r2, [r3]
4052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7272              		.loc 1 4052 0
 7273 0106 A36B     		ldr	r3, [r4, #56]
 7274 0108 244A     		ldr	r2, .L574+12
 7275 010a 1A65     		str	r2, [r3, #80]
4055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
ARM GAS  /tmp/ccX4fpHz.s 			page 264


 7276              		.loc 1 4055 0
 7277 010c A06B     		ldr	r0, [r4, #56]
 7278 010e FFF7FEFF 		bl	HAL_DMA_Abort_IT
 7279              	.LVL601:
 7280 0112 0028     		cmp	r0, #0
 7281 0114 A3D0     		beq	.L560
4058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
 7282              		.loc 1 4058 0
 7283 0116 A06B     		ldr	r0, [r4, #56]
 7284 0118 036D     		ldr	r3, [r0, #80]
 7285 011a 9847     		blx	r3
 7286              	.LVL602:
 7287 011c 9FE7     		b	.L560
 7288              	.L572:
4065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 7289              		.loc 1 4065 0
 7290 011e 2368     		ldr	r3, [r4]
 7291 0120 1A68     		ldr	r2, [r3]
 7292 0122 12F4004F 		tst	r2, #32768
 7293 0126 9AD0     		beq	.L560
4067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7294              		.loc 1 4067 0
 7295 0128 1A68     		ldr	r2, [r3]
 7296 012a 22F40042 		bic	r2, r2, #32768
 7297 012e 1A60     		str	r2, [r3]
4070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 7298              		.loc 1 4070 0
 7299 0130 E36B     		ldr	r3, [r4, #60]
 7300 0132 002B     		cmp	r3, #0
 7301 0134 93D0     		beq	.L560
4074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7302              		.loc 1 4074 0
 7303 0136 194A     		ldr	r2, .L574+12
 7304 0138 1A65     		str	r2, [r3, #80]
4077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
 7305              		.loc 1 4077 0
 7306 013a E06B     		ldr	r0, [r4, #60]
 7307 013c FFF7FEFF 		bl	HAL_DMA_Abort_IT
 7308              	.LVL603:
 7309 0140 0028     		cmp	r0, #0
 7310 0142 8CD0     		beq	.L560
4080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
 7311              		.loc 1 4080 0
 7312 0144 E06B     		ldr	r0, [r4, #60]
 7313 0146 036D     		ldr	r3, [r0, #80]
 7314 0148 9847     		blx	r3
 7315              	.LVL604:
 7316 014a 88E7     		b	.L560
 7317              	.L561:
4122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 7318              		.loc 1 4122 0
 7319 014c 2823     		movs	r3, #40
 7320 014e 84F84130 		strb	r3, [r4, #65]
4123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7321              		.loc 1 4123 0
 7322 0152 0022     		movs	r2, #0
 7323 0154 84F84220 		strb	r2, [r4, #66]
ARM GAS  /tmp/ccX4fpHz.s 			page 265


4126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7324              		.loc 1 4126 0
 7325 0158 636C     		ldr	r3, [r4, #68]
 7326 015a 43F08003 		orr	r3, r3, #128
 7327 015e 6364     		str	r3, [r4, #68]
4129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7328              		.loc 1 4129 0
 7329 0160 84F84020 		strb	r2, [r4, #64]
4131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 7330              		.loc 1 4131 0
 7331 0164 0125     		movs	r5, #1
 7332              	.LVL605:
 7333 0166 53E7     		b	.L557
 7334              	.LVL606:
 7335              	.L573:
4145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 7336              		.loc 1 4145 0
 7337 0168 2823     		movs	r3, #40
 7338 016a 84F84130 		strb	r3, [r4, #65]
4146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7339              		.loc 1 4146 0
 7340 016e 0022     		movs	r2, #0
 7341 0170 84F84220 		strb	r2, [r4, #66]
4149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7342              		.loc 1 4149 0
 7343 0174 636C     		ldr	r3, [r4, #68]
 7344 0176 43F01003 		orr	r3, r3, #16
 7345 017a 6364     		str	r3, [r4, #68]
4152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7346              		.loc 1 4152 0
 7347 017c 84F84020 		strb	r2, [r4, #64]
4154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 7348              		.loc 1 4154 0
 7349 0180 0125     		movs	r5, #1
 7350 0182 45E7     		b	.L557
 7351              	.L564:
4161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 7352              		.loc 1 4161 0
 7353 0184 0822     		movs	r2, #8
 7354 0186 DA61     		str	r2, [r3, #28]
 7355 0188 A0E7     		b	.L565
 7356              	.LVL607:
 7357              	.L567:
4034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7358              		.loc 1 4034 0
 7359 018a 0225     		movs	r5, #2
 7360              	.LVL608:
 7361 018c 40E7     		b	.L557
 7362              	.L575:
 7363 018e 00BF     		.align	2
 7364              	.L574:
 7365 0190 00000000 		.word	I2C_Slave_ISR_DMA
 7366 0194 00000000 		.word	I2C_DMASlaveReceiveCplt
 7367 0198 00000000 		.word	I2C_DMAError
 7368 019c 00000000 		.word	I2C_DMAAbort
 7369              		.cfi_endproc
 7370              	.LFE171:
ARM GAS  /tmp/ccX4fpHz.s 			page 266


 7372              		.section	.text.HAL_I2C_EnableListen_IT,"ax",%progbits
 7373              		.align	1
 7374              		.global	HAL_I2C_EnableListen_IT
 7375              		.syntax unified
 7376              		.thumb
 7377              		.thumb_func
 7378              		.fpu fpv5-sp-d16
 7380              	HAL_I2C_EnableListen_IT:
 7381              	.LFB172:
4191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
 7382              		.loc 1 4191 0
 7383              		.cfi_startproc
 7384              		@ args = 0, pretend = 0, frame = 0
 7385              		@ frame_needed = 0, uses_anonymous_args = 0
 7386              	.LVL609:
 7387 0000 08B5     		push	{r3, lr}
 7388              	.LCFI107:
 7389              		.cfi_def_cfa_offset 8
 7390              		.cfi_offset 3, -8
 7391              		.cfi_offset 14, -4
4192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 7392              		.loc 1 4192 0
 7393 0002 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 7394 0006 DBB2     		uxtb	r3, r3
 7395 0008 202B     		cmp	r3, #32
 7396 000a 01D0     		beq	.L580
4204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 7397              		.loc 1 4204 0
 7398 000c 0220     		movs	r0, #2
 7399              	.LVL610:
 7400              	.L577:
4206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7401              		.loc 1 4206 0
 7402 000e 08BD     		pop	{r3, pc}
 7403              	.LVL611:
 7404              	.L580:
4194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR = I2C_Slave_ISR_IT;
 7405              		.loc 1 4194 0
 7406 0010 2823     		movs	r3, #40
 7407 0012 80F84130 		strb	r3, [r0, #65]
4195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7408              		.loc 1 4195 0
 7409 0016 034B     		ldr	r3, .L581
 7410 0018 4363     		str	r3, [r0, #52]
4198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7411              		.loc 1 4198 0
 7412 001a 0421     		movs	r1, #4
 7413 001c FFF7FEFF 		bl	I2C_Enable_IRQ
 7414              	.LVL612:
4200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 7415              		.loc 1 4200 0
 7416 0020 0020     		movs	r0, #0
 7417 0022 F4E7     		b	.L577
 7418              	.L582:
 7419              		.align	2
 7420              	.L581:
 7421 0024 00000000 		.word	I2C_Slave_ISR_IT
ARM GAS  /tmp/ccX4fpHz.s 			page 267


 7422              		.cfi_endproc
 7423              	.LFE172:
 7425              		.section	.text.HAL_I2C_DisableListen_IT,"ax",%progbits
 7426              		.align	1
 7427              		.global	HAL_I2C_DisableListen_IT
 7428              		.syntax unified
 7429              		.thumb
 7430              		.thumb_func
 7431              		.fpu fpv5-sp-d16
 7433              	HAL_I2C_DisableListen_IT:
 7434              	.LFB173:
4215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Declaration of tmp to prevent undefined behavior of volatile usage */
 7435              		.loc 1 4215 0
 7436              		.cfi_startproc
 7437              		@ args = 0, pretend = 0, frame = 0
 7438              		@ frame_needed = 0, uses_anonymous_args = 0
 7439              	.LVL613:
4220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 7440              		.loc 1 4220 0
 7441 0000 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 7442 0004 DBB2     		uxtb	r3, r3
 7443 0006 282B     		cmp	r3, #40
 7444 0008 01D0     		beq	.L590
4235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 7445              		.loc 1 4235 0
 7446 000a 0220     		movs	r0, #2
 7447              	.LVL614:
4237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7448              		.loc 1 4237 0
 7449 000c 7047     		bx	lr
 7450              	.LVL615:
 7451              	.L590:
4215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Declaration of tmp to prevent undefined behavior of volatile usage */
 7452              		.loc 1 4215 0
 7453 000e 10B5     		push	{r4, lr}
 7454              	.LCFI108:
 7455              		.cfi_def_cfa_offset 8
 7456              		.cfi_offset 4, -8
 7457              		.cfi_offset 14, -4
4222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = tmp | (uint32_t)(hi2c->Mode);
 7458              		.loc 1 4222 0
 7459 0010 90F84120 		ldrb	r2, [r0, #65]	@ zero_extendqisi2
 7460              	.LVL616:
4223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
 7461              		.loc 1 4223 0
 7462 0014 90F84230 		ldrb	r3, [r0, #66]	@ zero_extendqisi2
 7463 0018 02F00302 		and	r2, r2, #3
 7464              	.LVL617:
 7465 001c 1343     		orrs	r3, r3, r2
 7466 001e 0363     		str	r3, [r0, #48]
4224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode = HAL_I2C_MODE_NONE;
 7467              		.loc 1 4224 0
 7468 0020 2023     		movs	r3, #32
 7469 0022 80F84130 		strb	r3, [r0, #65]
4225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR = NULL;
 7470              		.loc 1 4225 0
 7471 0026 0024     		movs	r4, #0
ARM GAS  /tmp/ccX4fpHz.s 			page 268


 7472 0028 80F84240 		strb	r4, [r0, #66]
4226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7473              		.loc 1 4226 0
 7474 002c 4463     		str	r4, [r0, #52]
4229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7475              		.loc 1 4229 0
 7476 002e 0421     		movs	r1, #4
 7477 0030 FFF7FEFF 		bl	I2C_Disable_IRQ
 7478              	.LVL618:
4231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 7479              		.loc 1 4231 0
 7480 0034 2046     		mov	r0, r4
4237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7481              		.loc 1 4237 0
 7482 0036 10BD     		pop	{r4, pc}
 7483              		.cfi_endproc
 7484              	.LFE173:
 7486              		.section	.text.HAL_I2C_Master_Abort_IT,"ax",%progbits
 7487              		.align	1
 7488              		.global	HAL_I2C_Master_Abort_IT
 7489              		.syntax unified
 7490              		.thumb
 7491              		.thumb_func
 7492              		.fpu fpv5-sp-d16
 7494              	HAL_I2C_Master_Abort_IT:
 7495              	.LFB174:
4248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->Mode == HAL_I2C_MODE_MASTER)
 7496              		.loc 1 4248 0
 7497              		.cfi_startproc
 7498              		@ args = 0, pretend = 0, frame = 0
 7499              		@ frame_needed = 0, uses_anonymous_args = 0
 7500              	.LVL619:
4249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 7501              		.loc 1 4249 0
 7502 0000 90F84230 		ldrb	r3, [r0, #66]	@ zero_extendqisi2
 7503 0004 DBB2     		uxtb	r3, r3
 7504 0006 102B     		cmp	r3, #16
 7505 0008 01D0     		beq	.L599
4279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 7506              		.loc 1 4279 0
 7507 000a 0120     		movs	r0, #1
 7508              	.LVL620:
 7509 000c 7047     		bx	lr
 7510              	.LVL621:
 7511              	.L599:
4252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7512              		.loc 1 4252 0
 7513 000e 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 7514 0012 012B     		cmp	r3, #1
 7515 0014 23D0     		beq	.L594
4248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->Mode == HAL_I2C_MODE_MASTER)
 7516              		.loc 1 4248 0 discriminator 2
 7517 0016 70B5     		push	{r4, r5, r6, lr}
 7518              	.LCFI109:
 7519              		.cfi_def_cfa_offset 16
 7520              		.cfi_offset 4, -16
 7521              		.cfi_offset 5, -12
ARM GAS  /tmp/ccX4fpHz.s 			page 269


 7522              		.cfi_offset 6, -8
 7523              		.cfi_offset 14, -4
 7524 0018 82B0     		sub	sp, sp, #8
 7525              	.LCFI110:
 7526              		.cfi_def_cfa_offset 24
 7527 001a 0D46     		mov	r5, r1
 7528 001c 0446     		mov	r4, r0
4252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7529              		.loc 1 4252 0 discriminator 2
 7530 001e 0126     		movs	r6, #1
 7531 0020 80F84060 		strb	r6, [r0, #64]
4255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT);
 7532              		.loc 1 4255 0 discriminator 2
 7533 0024 0221     		movs	r1, #2
 7534              	.LVL622:
 7535 0026 FFF7FEFF 		bl	I2C_Disable_IRQ
 7536              	.LVL623:
4256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7537              		.loc 1 4256 0 discriminator 2
 7538 002a 3146     		mov	r1, r6
 7539 002c 2046     		mov	r0, r4
 7540 002e FFF7FEFF 		bl	I2C_Disable_IRQ
 7541              	.LVL624:
4259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7542              		.loc 1 4259 0 discriminator 2
 7543 0032 6023     		movs	r3, #96
 7544 0034 84F84130 		strb	r3, [r4, #65]
4263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7545              		.loc 1 4263 0 discriminator 2
 7546 0038 0A4B     		ldr	r3, .L600
 7547 003a 0093     		str	r3, [sp]
 7548 003c 4FF00073 		mov	r3, #33554432
 7549 0040 3246     		mov	r2, r6
 7550 0042 2946     		mov	r1, r5
 7551 0044 2046     		mov	r0, r4
 7552 0046 FFF7FEFF 		bl	I2C_TransferConfig
 7553              	.LVL625:
4266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7554              		.loc 1 4266 0 discriminator 2
 7555 004a 0025     		movs	r5, #0
 7556 004c 84F84050 		strb	r5, [r4, #64]
4271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7557              		.loc 1 4271 0 discriminator 2
 7558 0050 1221     		movs	r1, #18
 7559 0052 2046     		mov	r0, r4
 7560 0054 FFF7FEFF 		bl	I2C_Enable_IRQ
 7561              	.LVL626:
4273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 7562              		.loc 1 4273 0 discriminator 2
 7563 0058 2846     		mov	r0, r5
4281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7564              		.loc 1 4281 0 discriminator 2
 7565 005a 02B0     		add	sp, sp, #8
 7566              	.LCFI111:
 7567              		.cfi_def_cfa_offset 16
 7568              		@ sp needed
 7569 005c 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  /tmp/ccX4fpHz.s 			page 270


 7570              	.LVL627:
 7571              	.L594:
 7572              	.LCFI112:
 7573              		.cfi_def_cfa_offset 0
 7574              		.cfi_restore 4
 7575              		.cfi_restore 5
 7576              		.cfi_restore 6
 7577              		.cfi_restore 14
4252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7578              		.loc 1 4252 0
 7579 005e 0220     		movs	r0, #2
 7580              	.LVL628:
4281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7581              		.loc 1 4281 0
 7582 0060 7047     		bx	lr
 7583              	.L601:
 7584 0062 00BF     		.align	2
 7585              	.L600:
 7586 0064 00400080 		.word	-2147467264
 7587              		.cfi_endproc
 7588              	.LFE174:
 7590              		.section	.text.HAL_I2C_EV_IRQHandler,"ax",%progbits
 7591              		.align	1
 7592              		.global	HAL_I2C_EV_IRQHandler
 7593              		.syntax unified
 7594              		.thumb
 7595              		.thumb_func
 7596              		.fpu fpv5-sp-d16
 7598              	HAL_I2C_EV_IRQHandler:
 7599              	.LFB175:
4298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Get current IT Flags and IT sources value */
 7600              		.loc 1 4298 0
 7601              		.cfi_startproc
 7602              		@ args = 0, pretend = 0, frame = 0
 7603              		@ frame_needed = 0, uses_anonymous_args = 0
 7604              	.LVL629:
 7605 0000 08B5     		push	{r3, lr}
 7606              	.LCFI113:
 7607              		.cfi_def_cfa_offset 8
 7608              		.cfi_offset 3, -8
 7609              		.cfi_offset 14, -4
4300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t itsources = READ_REG(hi2c->Instance->CR1);
 7610              		.loc 1 4300 0
 7611 0002 0368     		ldr	r3, [r0]
 7612 0004 9969     		ldr	r1, [r3, #24]
 7613              	.LVL630:
4301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7614              		.loc 1 4301 0
 7615 0006 1A68     		ldr	r2, [r3]
 7616              	.LVL631:
4304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 7617              		.loc 1 4304 0
 7618 0008 436B     		ldr	r3, [r0, #52]
 7619 000a 03B1     		cbz	r3, .L602
4306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 7620              		.loc 1 4306 0
 7621 000c 9847     		blx	r3
ARM GAS  /tmp/ccX4fpHz.s 			page 271


 7622              	.LVL632:
 7623              	.L602:
4308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7624              		.loc 1 4308 0
 7625 000e 08BD     		pop	{r3, pc}
 7626              		.cfi_endproc
 7627              	.LFE175:
 7629              		.section	.text.HAL_I2C_MasterTxCpltCallback,"ax",%progbits
 7630              		.align	1
 7631              		.weak	HAL_I2C_MasterTxCpltCallback
 7632              		.syntax unified
 7633              		.thumb
 7634              		.thumb_func
 7635              		.fpu fpv5-sp-d16
 7637              	HAL_I2C_MasterTxCpltCallback:
 7638              	.LFB177:
4366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 7639              		.loc 1 4366 0
 7640              		.cfi_startproc
 7641              		@ args = 0, pretend = 0, frame = 0
 7642              		@ frame_needed = 0, uses_anonymous_args = 0
 7643              		@ link register save eliminated.
 7644              	.LVL633:
4373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7645              		.loc 1 4373 0
 7646 0000 7047     		bx	lr
 7647              		.cfi_endproc
 7648              	.LFE177:
 7650              		.section	.text.HAL_I2C_MasterRxCpltCallback,"ax",%progbits
 7651              		.align	1
 7652              		.weak	HAL_I2C_MasterRxCpltCallback
 7653              		.syntax unified
 7654              		.thumb
 7655              		.thumb_func
 7656              		.fpu fpv5-sp-d16
 7658              	HAL_I2C_MasterRxCpltCallback:
 7659              	.LFB178:
4382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 7660              		.loc 1 4382 0
 7661              		.cfi_startproc
 7662              		@ args = 0, pretend = 0, frame = 0
 7663              		@ frame_needed = 0, uses_anonymous_args = 0
 7664              		@ link register save eliminated.
 7665              	.LVL634:
4389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7666              		.loc 1 4389 0
 7667 0000 7047     		bx	lr
 7668              		.cfi_endproc
 7669              	.LFE178:
 7671              		.section	.text.I2C_ITMasterSeqCplt,"ax",%progbits
 7672              		.align	1
 7673              		.syntax unified
 7674              		.thumb
 7675              		.thumb_func
 7676              		.fpu fpv5-sp-d16
 7678              	I2C_ITMasterSeqCplt:
 7679              	.LFB197:
ARM GAS  /tmp/ccX4fpHz.s 			page 272


5318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Reset I2C handle mode */
 7680              		.loc 1 5318 0
 7681              		.cfi_startproc
 7682              		@ args = 0, pretend = 0, frame = 0
 7683              		@ frame_needed = 0, uses_anonymous_args = 0
 7684              	.LVL635:
 7685 0000 38B5     		push	{r3, r4, r5, lr}
 7686              	.LCFI114:
 7687              		.cfi_def_cfa_offset 16
 7688              		.cfi_offset 3, -16
 7689              		.cfi_offset 4, -12
 7690              		.cfi_offset 5, -8
 7691              		.cfi_offset 14, -4
 7692 0002 0446     		mov	r4, r0
5320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7693              		.loc 1 5320 0
 7694 0004 0023     		movs	r3, #0
 7695 0006 80F84230 		strb	r3, [r0, #66]
5324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 7696              		.loc 1 5324 0
 7697 000a 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 7698 000e DBB2     		uxtb	r3, r3
 7699 0010 212B     		cmp	r3, #33
 7700 0012 0FD0     		beq	.L611
5346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 7701              		.loc 1 5346 0
 7702 0014 2023     		movs	r3, #32
 7703 0016 80F84130 		strb	r3, [r0, #65]
5347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR       = NULL;
 7704              		.loc 1 5347 0
 7705 001a 1223     		movs	r3, #18
 7706 001c 0363     		str	r3, [r0, #48]
5348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7707              		.loc 1 5348 0
 7708 001e 0025     		movs	r5, #0
 7709 0020 4563     		str	r5, [r0, #52]
5351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7710              		.loc 1 5351 0
 7711 0022 0221     		movs	r1, #2
 7712 0024 FFF7FEFF 		bl	I2C_Disable_IRQ
 7713              	.LVL636:
5354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7714              		.loc 1 5354 0
 7715 0028 84F84050 		strb	r5, [r4, #64]
5360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 7716              		.loc 1 5360 0
 7717 002c 2046     		mov	r0, r4
 7718 002e FFF7FEFF 		bl	HAL_I2C_MasterRxCpltCallback
 7719              	.LVL637:
 7720              	.L607:
5363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7721              		.loc 1 5363 0
 7722 0032 38BD     		pop	{r3, r4, r5, pc}
 7723              	.LVL638:
 7724              	.L611:
5326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 7725              		.loc 1 5326 0
ARM GAS  /tmp/ccX4fpHz.s 			page 273


 7726 0034 2023     		movs	r3, #32
 7727 0036 80F84130 		strb	r3, [r0, #65]
5327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR       = NULL;
 7728              		.loc 1 5327 0
 7729 003a 1123     		movs	r3, #17
 7730 003c 0363     		str	r3, [r0, #48]
5328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7731              		.loc 1 5328 0
 7732 003e 0025     		movs	r5, #0
 7733 0040 4563     		str	r5, [r0, #52]
5331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7734              		.loc 1 5331 0
 7735 0042 0121     		movs	r1, #1
 7736 0044 FFF7FEFF 		bl	I2C_Disable_IRQ
 7737              	.LVL639:
5334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7738              		.loc 1 5334 0
 7739 0048 84F84050 		strb	r5, [r4, #64]
5340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 7740              		.loc 1 5340 0
 7741 004c 2046     		mov	r0, r4
 7742 004e FFF7FEFF 		bl	HAL_I2C_MasterTxCpltCallback
 7743              	.LVL640:
 7744 0052 EEE7     		b	.L607
 7745              		.cfi_endproc
 7746              	.LFE197:
 7748              		.section	.text.HAL_I2C_SlaveTxCpltCallback,"ax",%progbits
 7749              		.align	1
 7750              		.weak	HAL_I2C_SlaveTxCpltCallback
 7751              		.syntax unified
 7752              		.thumb
 7753              		.thumb_func
 7754              		.fpu fpv5-sp-d16
 7756              	HAL_I2C_SlaveTxCpltCallback:
 7757              	.LFB179:
4397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 7758              		.loc 1 4397 0
 7759              		.cfi_startproc
 7760              		@ args = 0, pretend = 0, frame = 0
 7761              		@ frame_needed = 0, uses_anonymous_args = 0
 7762              		@ link register save eliminated.
 7763              	.LVL641:
4404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7764              		.loc 1 4404 0
 7765 0000 7047     		bx	lr
 7766              		.cfi_endproc
 7767              	.LFE179:
 7769              		.section	.text.HAL_I2C_SlaveRxCpltCallback,"ax",%progbits
 7770              		.align	1
 7771              		.weak	HAL_I2C_SlaveRxCpltCallback
 7772              		.syntax unified
 7773              		.thumb
 7774              		.thumb_func
 7775              		.fpu fpv5-sp-d16
 7777              	HAL_I2C_SlaveRxCpltCallback:
 7778              	.LFB180:
4413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
ARM GAS  /tmp/ccX4fpHz.s 			page 274


 7779              		.loc 1 4413 0
 7780              		.cfi_startproc
 7781              		@ args = 0, pretend = 0, frame = 0
 7782              		@ frame_needed = 0, uses_anonymous_args = 0
 7783              		@ link register save eliminated.
 7784              	.LVL642:
4420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7785              		.loc 1 4420 0
 7786 0000 7047     		bx	lr
 7787              		.cfi_endproc
 7788              	.LFE180:
 7790              		.section	.text.I2C_ITSlaveSeqCplt,"ax",%progbits
 7791              		.align	1
 7792              		.syntax unified
 7793              		.thumb
 7794              		.thumb_func
 7795              		.fpu fpv5-sp-d16
 7797              	I2C_ITSlaveSeqCplt:
 7798              	.LFB198:
5371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Reset I2C handle mode */
 7799              		.loc 1 5371 0
 7800              		.cfi_startproc
 7801              		@ args = 0, pretend = 0, frame = 0
 7802              		@ frame_needed = 0, uses_anonymous_args = 0
 7803              	.LVL643:
 7804 0000 10B5     		push	{r4, lr}
 7805              	.LCFI115:
 7806              		.cfi_def_cfa_offset 8
 7807              		.cfi_offset 4, -8
 7808              		.cfi_offset 14, -4
 7809 0002 0446     		mov	r4, r0
5373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7810              		.loc 1 5373 0
 7811 0004 0023     		movs	r3, #0
 7812 0006 80F84230 		strb	r3, [r0, #66]
5375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 7813              		.loc 1 5375 0
 7814 000a 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 7815 000e DBB2     		uxtb	r3, r3
 7816 0010 292B     		cmp	r3, #41
 7817 0012 05D0     		beq	.L618
5395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 7818              		.loc 1 5395 0
 7819 0014 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 7820 0018 DBB2     		uxtb	r3, r3
 7821 001a 2A2B     		cmp	r3, #42
 7822 001c 0FD0     		beq	.L619
 7823              	.LVL644:
 7824              	.L614:
5418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7825              		.loc 1 5418 0
 7826 001e 10BD     		pop	{r4, pc}
 7827              	.LVL645:
 7828              	.L618:
5378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
 7829              		.loc 1 5378 0
 7830 0020 2823     		movs	r3, #40
ARM GAS  /tmp/ccX4fpHz.s 			page 275


 7831 0022 80F84130 		strb	r3, [r0, #65]
5379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7832              		.loc 1 5379 0
 7833 0026 2123     		movs	r3, #33
 7834 0028 0363     		str	r3, [r0, #48]
5382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7835              		.loc 1 5382 0
 7836 002a 0121     		movs	r1, #1
 7837 002c FFF7FEFF 		bl	I2C_Disable_IRQ
 7838              	.LVL646:
5385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7839              		.loc 1 5385 0
 7840 0030 0023     		movs	r3, #0
 7841 0032 84F84030 		strb	r3, [r4, #64]
5391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 7842              		.loc 1 5391 0
 7843 0036 2046     		mov	r0, r4
 7844 0038 FFF7FEFF 		bl	HAL_I2C_SlaveTxCpltCallback
 7845              	.LVL647:
 7846 003c EFE7     		b	.L614
 7847              	.LVL648:
 7848              	.L619:
5398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 7849              		.loc 1 5398 0
 7850 003e 2823     		movs	r3, #40
 7851 0040 80F84130 		strb	r3, [r0, #65]
5399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7852              		.loc 1 5399 0
 7853 0044 2223     		movs	r3, #34
 7854 0046 0363     		str	r3, [r0, #48]
5402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7855              		.loc 1 5402 0
 7856 0048 0221     		movs	r1, #2
 7857 004a FFF7FEFF 		bl	I2C_Disable_IRQ
 7858              	.LVL649:
5405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7859              		.loc 1 5405 0
 7860 004e 0023     		movs	r3, #0
 7861 0050 84F84030 		strb	r3, [r4, #64]
5411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 7862              		.loc 1 5411 0
 7863 0054 2046     		mov	r0, r4
 7864 0056 FFF7FEFF 		bl	HAL_I2C_SlaveRxCpltCallback
 7865              	.LVL650:
5418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7866              		.loc 1 5418 0
 7867 005a E0E7     		b	.L614
 7868              		.cfi_endproc
 7869              	.LFE198:
 7871              		.section	.text.I2C_DMASlaveTransmitCplt,"ax",%progbits
 7872              		.align	1
 7873              		.syntax unified
 7874              		.thumb
 7875              		.thumb_func
 7876              		.fpu fpv5-sp-d16
 7878              	I2C_DMASlaveTransmitCplt:
 7879              	.LFB205:
ARM GAS  /tmp/ccX4fpHz.s 			page 276


5921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 7880              		.loc 1 5921 0
 7881              		.cfi_startproc
 7882              		@ args = 0, pretend = 0, frame = 0
 7883              		@ frame_needed = 0, uses_anonymous_args = 0
 7884              	.LVL651:
 7885 0000 08B5     		push	{r3, lr}
 7886              	.LCFI116:
 7887              		.cfi_def_cfa_offset 8
 7888              		.cfi_offset 3, -8
 7889              		.cfi_offset 14, -4
5922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpoptions = hi2c->XferOptions;
 7890              		.loc 1 5922 0
 7891 0002 806B     		ldr	r0, [r0, #56]
 7892              	.LVL652:
5923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7893              		.loc 1 5923 0
 7894 0004 C36A     		ldr	r3, [r0, #44]
 7895              	.LVL653:
5925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 7896              		.loc 1 5925 0
 7897 0006 002B     		cmp	r3, #0
 7898 0008 18BF     		it	ne
 7899 000a B3F1807F 		cmpne	r3, #16777216
 7900 000e 00D0     		beq	.L623
 7901              	.LVL654:
 7902              	.L620:
5940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7903              		.loc 1 5940 0
 7904 0010 08BD     		pop	{r3, pc}
 7905              	.LVL655:
 7906              	.L623:
5928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7907              		.loc 1 5928 0
 7908 0012 0268     		ldr	r2, [r0]
 7909 0014 1368     		ldr	r3, [r2]
 7910              	.LVL656:
 7911 0016 23F48043 		bic	r3, r3, #16384
 7912 001a 1360     		str	r3, [r2]
5932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 7913              		.loc 1 5932 0
 7914 001c FFF7FEFF 		bl	I2C_ITSlaveSeqCplt
 7915              	.LVL657:
5940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7916              		.loc 1 5940 0
 7917 0020 F6E7     		b	.L620
 7918              		.cfi_endproc
 7919              	.LFE205:
 7921              		.section	.text.I2C_DMASlaveReceiveCplt,"ax",%progbits
 7922              		.align	1
 7923              		.syntax unified
 7924              		.thumb
 7925              		.thumb_func
 7926              		.fpu fpv5-sp-d16
 7928              	I2C_DMASlaveReceiveCplt:
 7929              	.LFB207:
5996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
ARM GAS  /tmp/ccX4fpHz.s 			page 277


 7930              		.loc 1 5996 0
 7931              		.cfi_startproc
 7932              		@ args = 0, pretend = 0, frame = 0
 7933              		@ frame_needed = 0, uses_anonymous_args = 0
 7934              	.LVL658:
 7935 0000 08B5     		push	{r3, lr}
 7936              	.LCFI117:
 7937              		.cfi_def_cfa_offset 8
 7938              		.cfi_offset 3, -8
 7939              		.cfi_offset 14, -4
5997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpoptions = hi2c->XferOptions;
 7940              		.loc 1 5997 0
 7941 0002 806B     		ldr	r0, [r0, #56]
 7942              	.LVL659:
5998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7943              		.loc 1 5998 0
 7944 0004 C26A     		ldr	r2, [r0, #44]
 7945              	.LVL660:
6000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (tmpoptions != I2C_NO_OPTION_FRAME))
 7946              		.loc 1 6000 0
 7947 0006 C36B     		ldr	r3, [r0, #60]
 7948 0008 1B68     		ldr	r3, [r3]
 7949 000a 5B68     		ldr	r3, [r3, #4]
 7950 000c 4BB9     		cbnz	r3, .L624
6000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (tmpoptions != I2C_NO_OPTION_FRAME))
 7951              		.loc 1 6000 0 is_stmt 0 discriminator 1
 7952 000e 12F5803F 		cmn	r2, #65536
 7953 0012 06D0     		beq	.L624
6004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7954              		.loc 1 6004 0 is_stmt 1
 7955 0014 0268     		ldr	r2, [r0]
 7956              	.LVL661:
 7957 0016 1368     		ldr	r3, [r2]
 7958 0018 23F40043 		bic	r3, r3, #32768
 7959 001c 1360     		str	r3, [r2]
6007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 7960              		.loc 1 6007 0
 7961 001e FFF7FEFF 		bl	I2C_ITSlaveSeqCplt
 7962              	.LVL662:
 7963              	.L624:
6015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7964              		.loc 1 6015 0
 7965 0022 08BD     		pop	{r3, pc}
 7966              		.cfi_endproc
 7967              	.LFE207:
 7969              		.section	.text.HAL_I2C_AddrCallback,"ax",%progbits
 7970              		.align	1
 7971              		.weak	HAL_I2C_AddrCallback
 7972              		.syntax unified
 7973              		.thumb
 7974              		.thumb_func
 7975              		.fpu fpv5-sp-d16
 7977              	HAL_I2C_AddrCallback:
 7978              	.LFB181:
4431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 7979              		.loc 1 4431 0
 7980              		.cfi_startproc
ARM GAS  /tmp/ccX4fpHz.s 			page 278


 7981              		@ args = 0, pretend = 0, frame = 0
 7982              		@ frame_needed = 0, uses_anonymous_args = 0
 7983              		@ link register save eliminated.
 7984              	.LVL663:
4440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7985              		.loc 1 4440 0
 7986 0000 7047     		bx	lr
 7987              		.cfi_endproc
 7988              	.LFE181:
 7990              		.section	.text.I2C_ITAddrCplt,"ax",%progbits
 7991              		.align	1
 7992              		.syntax unified
 7993              		.thumb
 7994              		.thumb_func
 7995              		.fpu fpv5-sp-d16
 7997              	I2C_ITAddrCplt:
 7998              	.LFB196:
5223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint8_t transferdirection;
 7999              		.loc 1 5223 0
 8000              		.cfi_startproc
 8001              		@ args = 0, pretend = 0, frame = 0
 8002              		@ frame_needed = 0, uses_anonymous_args = 0
 8003              	.LVL664:
 8004 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 8005              	.LCFI118:
 8006              		.cfi_def_cfa_offset 24
 8007              		.cfi_offset 3, -24
 8008              		.cfi_offset 4, -20
 8009              		.cfi_offset 5, -16
 8010              		.cfi_offset 6, -12
 8011              		.cfi_offset 7, -8
 8012              		.cfi_offset 14, -4
5233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8013              		.loc 1 5233 0
 8014 0002 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 8015 0006 03F02803 		and	r3, r3, #40
 8016 000a 282B     		cmp	r3, #40
 8017 000c 06D0     		beq	.L634
5305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8018              		.loc 1 5305 0
 8019 000e 0368     		ldr	r3, [r0]
 8020 0010 0822     		movs	r2, #8
 8021 0012 DA61     		str	r2, [r3, #28]
5308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 8022              		.loc 1 5308 0
 8023 0014 0023     		movs	r3, #0
 8024 0016 80F84030 		strb	r3, [r0, #64]
 8025              	.LVL665:
 8026              	.L628:
5310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8027              		.loc 1 5310 0
 8028 001a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 8029              	.LVL666:
 8030              	.L634:
 8031 001c 0446     		mov	r4, r0
5235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     slaveaddrcode     = I2C_GET_ADDR_MATCH(hi2c);
 8032              		.loc 1 5235 0
ARM GAS  /tmp/ccX4fpHz.s 			page 279


 8033 001e 0368     		ldr	r3, [r0]
 8034 0020 9E69     		ldr	r6, [r3, #24]
 8035 0022 C6F30046 		ubfx	r6, r6, #16, #1
 8036              	.LVL667:
5236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     ownadd1code       = I2C_GET_OWN_ADDRESS1(hi2c);
 8037              		.loc 1 5236 0
 8038 0026 9A69     		ldr	r2, [r3, #24]
 8039 0028 120C     		lsrs	r2, r2, #16
 8040 002a 02F0FE05 		and	r5, r2, #254
 8041              	.LVL668:
5237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     ownadd2code       = I2C_GET_OWN_ADDRESS2(hi2c);
 8042              		.loc 1 5237 0
 8043 002e 9A68     		ldr	r2, [r3, #8]
 8044 0030 C2F30902 		ubfx	r2, r2, #0, #10
 8045              	.LVL669:
5238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8046              		.loc 1 5238 0
 8047 0034 DF68     		ldr	r7, [r3, #12]
 8048 0036 07F0FE07 		and	r7, r7, #254
 8049              	.LVL670:
5241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 8050              		.loc 1 5241 0
 8051 003a C168     		ldr	r1, [r0, #12]
 8052              	.LVL671:
 8053 003c 0229     		cmp	r1, #2
 8054 003e 21D1     		bne	.L630
5243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 8055              		.loc 1 5243 0
 8056 0040 85EAD215 		eor	r5, r5, r2, lsr #7
 8057              	.LVL672:
 8058 0044 15F0060F 		tst	r5, #6
 8059 0048 10D1     		bne	.L631
 8060              	.LVL673:
5246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->AddrEventCount == 2U)
 8061              		.loc 1 5246 0
 8062 004a 816C     		ldr	r1, [r0, #72]
 8063 004c 0131     		adds	r1, r1, #1
 8064 004e 8164     		str	r1, [r0, #72]
5247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 8065              		.loc 1 5247 0
 8066 0050 816C     		ldr	r1, [r0, #72]
 8067 0052 0229     		cmp	r1, #2
 8068 0054 E1D1     		bne	.L628
5250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8069              		.loc 1 5250 0
 8070 0056 0021     		movs	r1, #0
 8071 0058 8164     		str	r1, [r0, #72]
5253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8072              		.loc 1 5253 0
 8073 005a 0820     		movs	r0, #8
 8074              	.LVL674:
 8075 005c D861     		str	r0, [r3, #28]
5256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8076              		.loc 1 5256 0
 8077 005e 84F84010 		strb	r1, [r4, #64]
5262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 8078              		.loc 1 5262 0
ARM GAS  /tmp/ccX4fpHz.s 			page 280


 8079 0062 3146     		mov	r1, r6
 8080 0064 2046     		mov	r0, r4
 8081 0066 FFF7FEFF 		bl	HAL_I2C_AddrCallback
 8082              	.LVL675:
 8083 006a D6E7     		b	.L628
 8084              	.LVL676:
 8085              	.L631:
5271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8086              		.loc 1 5271 0
 8087 006c 0421     		movs	r1, #4
 8088 006e FFF7FEFF 		bl	I2C_Disable_IRQ
 8089              	.LVL677:
5274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8090              		.loc 1 5274 0
 8091 0072 0023     		movs	r3, #0
 8092 0074 84F84030 		strb	r3, [r4, #64]
5280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 8093              		.loc 1 5280 0
 8094 0078 3A46     		mov	r2, r7
 8095 007a 3146     		mov	r1, r6
 8096 007c 2046     		mov	r0, r4
 8097 007e FFF7FEFF 		bl	HAL_I2C_AddrCallback
 8098              	.LVL678:
 8099 0082 CAE7     		b	.L628
 8100              	.LVL679:
 8101              	.L630:
5288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8102              		.loc 1 5288 0
 8103 0084 0421     		movs	r1, #4
 8104 0086 FFF7FEFF 		bl	I2C_Disable_IRQ
 8105              	.LVL680:
5291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8106              		.loc 1 5291 0
 8107 008a 0023     		movs	r3, #0
 8108 008c 84F84030 		strb	r3, [r4, #64]
5297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 8109              		.loc 1 5297 0
 8110 0090 2A46     		mov	r2, r5
 8111 0092 3146     		mov	r1, r6
 8112 0094 2046     		mov	r0, r4
 8113 0096 FFF7FEFF 		bl	HAL_I2C_AddrCallback
 8114              	.LVL681:
 8115 009a BEE7     		b	.L628
 8116              		.cfi_endproc
 8117              	.LFE196:
 8119              		.section	.text.HAL_I2C_ListenCpltCallback,"ax",%progbits
 8120              		.align	1
 8121              		.weak	HAL_I2C_ListenCpltCallback
 8122              		.syntax unified
 8123              		.thumb
 8124              		.thumb_func
 8125              		.fpu fpv5-sp-d16
 8127              	HAL_I2C_ListenCpltCallback:
 8128              	.LFB182:
4449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 8129              		.loc 1 4449 0
 8130              		.cfi_startproc
ARM GAS  /tmp/ccX4fpHz.s 			page 281


 8131              		@ args = 0, pretend = 0, frame = 0
 8132              		@ frame_needed = 0, uses_anonymous_args = 0
 8133              		@ link register save eliminated.
 8134              	.LVL682:
4456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8135              		.loc 1 4456 0
 8136 0000 7047     		bx	lr
 8137              		.cfi_endproc
 8138              	.LFE182:
 8140              		.section	.text.I2C_ITListenCplt,"ax",%progbits
 8141              		.align	1
 8142              		.syntax unified
 8143              		.thumb
 8144              		.thumb_func
 8145              		.fpu fpv5-sp-d16
 8147              	I2C_ITListenCplt:
 8148              	.LFB201:
5683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Reset handle parameters */
 8149              		.loc 1 5683 0
 8150              		.cfi_startproc
 8151              		@ args = 0, pretend = 0, frame = 0
 8152              		@ frame_needed = 0, uses_anonymous_args = 0
 8153              	.LVL683:
 8154 0000 10B5     		push	{r4, lr}
 8155              	.LCFI119:
 8156              		.cfi_def_cfa_offset 8
 8157              		.cfi_offset 4, -8
 8158              		.cfi_offset 14, -4
 8159 0002 0446     		mov	r4, r0
5685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
 8160              		.loc 1 5685 0
 8161 0004 164B     		ldr	r3, .L639
 8162 0006 C362     		str	r3, [r0, #44]
5686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_READY;
 8163              		.loc 1 5686 0
 8164 0008 0023     		movs	r3, #0
 8165 000a 0363     		str	r3, [r0, #48]
5687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
 8166              		.loc 1 5687 0
 8167 000c 2022     		movs	r2, #32
 8168 000e 80F84120 		strb	r2, [r0, #65]
5688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->XferISR = NULL;
 8169              		.loc 1 5688 0
 8170 0012 80F84230 		strb	r3, [r0, #66]
5689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8171              		.loc 1 5689 0
 8172 0016 4363     		str	r3, [r0, #52]
5692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8173              		.loc 1 5692 0
 8174 0018 11F0040F 		tst	r1, #4
 8175 001c 12D0     		beq	.L637
5695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8176              		.loc 1 5695 0
 8177 001e 0368     		ldr	r3, [r0]
 8178 0020 5A6A     		ldr	r2, [r3, #36]
 8179 0022 436A     		ldr	r3, [r0, #36]
 8180 0024 1A70     		strb	r2, [r3]
ARM GAS  /tmp/ccX4fpHz.s 			page 282


5698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8181              		.loc 1 5698 0
 8182 0026 436A     		ldr	r3, [r0, #36]
 8183 0028 0133     		adds	r3, r3, #1
 8184 002a 4362     		str	r3, [r0, #36]
5700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 8185              		.loc 1 5700 0
 8186 002c 038D     		ldrh	r3, [r0, #40]
 8187 002e 4BB1     		cbz	r3, .L637
5702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount--;
 8188              		.loc 1 5702 0
 8189 0030 013B     		subs	r3, r3, #1
 8190 0032 0385     		strh	r3, [r0, #40]	@ movhi
5703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8191              		.loc 1 5703 0
 8192 0034 438D     		ldrh	r3, [r0, #42]
 8193 0036 013B     		subs	r3, r3, #1
 8194 0038 9BB2     		uxth	r3, r3
 8195 003a 4385     		strh	r3, [r0, #42]	@ movhi
5706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 8196              		.loc 1 5706 0
 8197 003c 436C     		ldr	r3, [r0, #68]
 8198 003e 43F00403 		orr	r3, r3, #4
 8199 0042 4364     		str	r3, [r0, #68]
 8200              	.L637:
5711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8201              		.loc 1 5711 0
 8202 0044 0721     		movs	r1, #7
 8203              	.LVL684:
 8204 0046 2046     		mov	r0, r4
 8205              	.LVL685:
 8206 0048 FFF7FEFF 		bl	I2C_Disable_IRQ
 8207              	.LVL686:
5714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8208              		.loc 1 5714 0
 8209 004c 2368     		ldr	r3, [r4]
 8210 004e 1022     		movs	r2, #16
 8211 0050 DA61     		str	r2, [r3, #28]
5717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8212              		.loc 1 5717 0
 8213 0052 0023     		movs	r3, #0
 8214 0054 84F84030 		strb	r3, [r4, #64]
5723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 8215              		.loc 1 5723 0
 8216 0058 2046     		mov	r0, r4
 8217 005a FFF7FEFF 		bl	HAL_I2C_ListenCpltCallback
 8218              	.LVL687:
5725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8219              		.loc 1 5725 0
 8220 005e 10BD     		pop	{r4, pc}
 8221              	.LVL688:
 8222              	.L640:
 8223              		.align	2
 8224              	.L639:
 8225 0060 0000FFFF 		.word	-65536
 8226              		.cfi_endproc
 8227              	.LFE201:
ARM GAS  /tmp/ccX4fpHz.s 			page 283


 8229              		.section	.text.HAL_I2C_MemTxCpltCallback,"ax",%progbits
 8230              		.align	1
 8231              		.weak	HAL_I2C_MemTxCpltCallback
 8232              		.syntax unified
 8233              		.thumb
 8234              		.thumb_func
 8235              		.fpu fpv5-sp-d16
 8237              	HAL_I2C_MemTxCpltCallback:
 8238              	.LFB183:
4465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 8239              		.loc 1 4465 0
 8240              		.cfi_startproc
 8241              		@ args = 0, pretend = 0, frame = 0
 8242              		@ frame_needed = 0, uses_anonymous_args = 0
 8243              		@ link register save eliminated.
 8244              	.LVL689:
4472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8245              		.loc 1 4472 0
 8246 0000 7047     		bx	lr
 8247              		.cfi_endproc
 8248              	.LFE183:
 8250              		.section	.text.HAL_I2C_MemRxCpltCallback,"ax",%progbits
 8251              		.align	1
 8252              		.weak	HAL_I2C_MemRxCpltCallback
 8253              		.syntax unified
 8254              		.thumb
 8255              		.thumb_func
 8256              		.fpu fpv5-sp-d16
 8258              	HAL_I2C_MemRxCpltCallback:
 8259              	.LFB184:
4481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 8260              		.loc 1 4481 0
 8261              		.cfi_startproc
 8262              		@ args = 0, pretend = 0, frame = 0
 8263              		@ frame_needed = 0, uses_anonymous_args = 0
 8264              		@ link register save eliminated.
 8265              	.LVL690:
4488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8266              		.loc 1 4488 0
 8267 0000 7047     		bx	lr
 8268              		.cfi_endproc
 8269              	.LFE184:
 8271              		.section	.text.HAL_I2C_ErrorCallback,"ax",%progbits
 8272              		.align	1
 8273              		.weak	HAL_I2C_ErrorCallback
 8274              		.syntax unified
 8275              		.thumb
 8276              		.thumb_func
 8277              		.fpu fpv5-sp-d16
 8279              	HAL_I2C_ErrorCallback:
 8280              	.LFB185:
4497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 8281              		.loc 1 4497 0
 8282              		.cfi_startproc
 8283              		@ args = 0, pretend = 0, frame = 0
 8284              		@ frame_needed = 0, uses_anonymous_args = 0
 8285              		@ link register save eliminated.
ARM GAS  /tmp/ccX4fpHz.s 			page 284


 8286              	.LVL691:
4504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8287              		.loc 1 4504 0
 8288 0000 7047     		bx	lr
 8289              		.cfi_endproc
 8290              	.LFE185:
 8292              		.section	.text.HAL_I2C_AbortCpltCallback,"ax",%progbits
 8293              		.align	1
 8294              		.weak	HAL_I2C_AbortCpltCallback
 8295              		.syntax unified
 8296              		.thumb
 8297              		.thumb_func
 8298              		.fpu fpv5-sp-d16
 8300              	HAL_I2C_AbortCpltCallback:
 8301              	.LFB186:
4513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 8302              		.loc 1 4513 0
 8303              		.cfi_startproc
 8304              		@ args = 0, pretend = 0, frame = 0
 8305              		@ frame_needed = 0, uses_anonymous_args = 0
 8306              		@ link register save eliminated.
 8307              	.LVL692:
4520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8308              		.loc 1 4520 0
 8309 0000 7047     		bx	lr
 8310              		.cfi_endproc
 8311              	.LFE186:
 8313              		.section	.text.I2C_ITError,"ax",%progbits
 8314              		.align	1
 8315              		.syntax unified
 8316              		.thumb
 8317              		.thumb_func
 8318              		.fpu fpv5-sp-d16
 8320              	I2C_ITError:
 8321              	.LFB202:
5734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_I2C_StateTypeDef tmpstate = hi2c->State;
 8322              		.loc 1 5734 0
 8323              		.cfi_startproc
 8324              		@ args = 0, pretend = 0, frame = 0
 8325              		@ frame_needed = 0, uses_anonymous_args = 0
 8326              	.LVL693:
 8327 0000 10B5     		push	{r4, lr}
 8328              	.LCFI120:
 8329              		.cfi_def_cfa_offset 8
 8330              		.cfi_offset 4, -8
 8331              		.cfi_offset 14, -4
 8332 0002 0446     		mov	r4, r0
5735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8333              		.loc 1 5735 0
 8334 0004 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 8335              	.LVL694:
5738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
 8336              		.loc 1 5738 0
 8337 0008 0022     		movs	r2, #0
 8338 000a 80F84220 		strb	r2, [r0, #66]
5739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->XferCount     = 0U;
 8339              		.loc 1 5739 0
ARM GAS  /tmp/ccX4fpHz.s 			page 285


 8340 000e 3648     		ldr	r0, .L655
 8341              	.LVL695:
 8342 0010 E062     		str	r0, [r4, #44]
5740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8343              		.loc 1 5740 0
 8344 0012 6285     		strh	r2, [r4, #42]	@ movhi
5743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8345              		.loc 1 5743 0
 8346 0014 626C     		ldr	r2, [r4, #68]
 8347 0016 1143     		orrs	r1, r1, r2
 8348              	.LVL696:
 8349 0018 6164     		str	r1, [r4, #68]
5747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (tmpstate == HAL_I2C_STATE_BUSY_RX_LISTEN))
 8350              		.loc 1 5747 0
 8351 001a 283B     		subs	r3, r3, #40
 8352              	.LVL697:
 8353 001c DBB2     		uxtb	r3, r3
5746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (tmpstate == HAL_I2C_STATE_BUSY_TX_LISTEN) ||
 8354              		.loc 1 5746 0
 8355 001e 022B     		cmp	r3, #2
 8356 0020 22D8     		bhi	.L646
5751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8357              		.loc 1 5751 0
 8358 0022 0321     		movs	r1, #3
 8359 0024 2046     		mov	r0, r4
 8360 0026 FFF7FEFF 		bl	I2C_Disable_IRQ
 8361              	.LVL698:
5754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
 8362              		.loc 1 5754 0
 8363 002a 2823     		movs	r3, #40
 8364 002c 84F84130 		strb	r3, [r4, #65]
5755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR       = I2C_Slave_ISR_IT;
 8365              		.loc 1 5755 0
 8366 0030 0023     		movs	r3, #0
 8367 0032 2363     		str	r3, [r4, #48]
5756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 8368              		.loc 1 5756 0
 8369 0034 2D4B     		ldr	r3, .L655+4
 8370 0036 6363     		str	r3, [r4, #52]
 8371              	.L647:
5775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8372              		.loc 1 5775 0
 8373 0038 2368     		ldr	r3, [r4]
 8374 003a 1A68     		ldr	r2, [r3]
 8375 003c 12F4804F 		tst	r2, #16384
 8376 0040 22D0     		beq	.L649
5777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8377              		.loc 1 5777 0
 8378 0042 1A68     		ldr	r2, [r3]
 8379 0044 22F48042 		bic	r2, r2, #16384
 8380 0048 1A60     		str	r2, [r3]
5779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 8381              		.loc 1 5779 0
 8382 004a A36B     		ldr	r3, [r4, #56]
 8383 004c 5BB1     		cbz	r3, .L645
5783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8384              		.loc 1 5783 0
ARM GAS  /tmp/ccX4fpHz.s 			page 286


 8385 004e 284A     		ldr	r2, .L655+8
 8386 0050 1A65     		str	r2, [r3, #80]
5786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8387              		.loc 1 5786 0
 8388 0052 0023     		movs	r3, #0
 8389 0054 84F84030 		strb	r3, [r4, #64]
5789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 8390              		.loc 1 5789 0
 8391 0058 A06B     		ldr	r0, [r4, #56]
 8392 005a FFF7FEFF 		bl	HAL_DMA_Abort_IT
 8393              	.LVL699:
 8394 005e 10B1     		cbz	r0, .L645
5792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 8395              		.loc 1 5792 0
 8396 0060 A06B     		ldr	r0, [r4, #56]
 8397 0062 036D     		ldr	r3, [r0, #80]
 8398 0064 9847     		blx	r3
 8399              	.LVL700:
 8400              	.L645:
5844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8401              		.loc 1 5844 0
 8402 0066 10BD     		pop	{r4, pc}
 8403              	.LVL701:
 8404              	.L646:
5761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8405              		.loc 1 5761 0
 8406 0068 0721     		movs	r1, #7
 8407 006a 2046     		mov	r0, r4
 8408 006c FFF7FEFF 		bl	I2C_Disable_IRQ
 8409              	.LVL702:
5765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 8410              		.loc 1 5765 0
 8411 0070 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 8412 0074 DBB2     		uxtb	r3, r3
 8413 0076 602B     		cmp	r3, #96
 8414 0078 02D0     		beq	.L648
5768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 8415              		.loc 1 5768 0
 8416 007a 2023     		movs	r3, #32
 8417 007c 84F84130 		strb	r3, [r4, #65]
 8418              	.L648:
5770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR       = NULL;
 8419              		.loc 1 5770 0
 8420 0080 0023     		movs	r3, #0
 8421 0082 2363     		str	r3, [r4, #48]
5771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 8422              		.loc 1 5771 0
 8423 0084 6363     		str	r3, [r4, #52]
 8424 0086 D7E7     		b	.L647
 8425              	.L649:
5797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8426              		.loc 1 5797 0
 8427 0088 1A68     		ldr	r2, [r3]
 8428 008a 12F4004F 		tst	r2, #32768
 8429 008e 14D0     		beq	.L651
5799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8430              		.loc 1 5799 0
ARM GAS  /tmp/ccX4fpHz.s 			page 287


 8431 0090 1A68     		ldr	r2, [r3]
 8432 0092 22F40042 		bic	r2, r2, #32768
 8433 0096 1A60     		str	r2, [r3]
5801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 8434              		.loc 1 5801 0
 8435 0098 E36B     		ldr	r3, [r4, #60]
 8436 009a 002B     		cmp	r3, #0
 8437 009c E3D0     		beq	.L645
5805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8438              		.loc 1 5805 0
 8439 009e 144A     		ldr	r2, .L655+8
 8440 00a0 1A65     		str	r2, [r3, #80]
5808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8441              		.loc 1 5808 0
 8442 00a2 0023     		movs	r3, #0
 8443 00a4 84F84030 		strb	r3, [r4, #64]
5811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 8444              		.loc 1 5811 0
 8445 00a8 E06B     		ldr	r0, [r4, #60]
 8446 00aa FFF7FEFF 		bl	HAL_DMA_Abort_IT
 8447              	.LVL703:
 8448 00ae 0028     		cmp	r0, #0
 8449 00b0 D9D0     		beq	.L645
5814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 8450              		.loc 1 5814 0
 8451 00b2 E06B     		ldr	r0, [r4, #60]
 8452 00b4 036D     		ldr	r3, [r0, #80]
 8453 00b6 9847     		blx	r3
 8454              	.LVL704:
 8455 00b8 D5E7     		b	.L645
 8456              	.L651:
5818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8457              		.loc 1 5818 0
 8458 00ba 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 8459 00be DBB2     		uxtb	r3, r3
 8460 00c0 602B     		cmp	r3, #96
 8461 00c2 06D0     		beq	.L654
5835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8462              		.loc 1 5835 0
 8463 00c4 0023     		movs	r3, #0
 8464 00c6 84F84030 		strb	r3, [r4, #64]
5841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 8465              		.loc 1 5841 0
 8466 00ca 2046     		mov	r0, r4
 8467 00cc FFF7FEFF 		bl	HAL_I2C_ErrorCallback
 8468              	.LVL705:
5844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8469              		.loc 1 5844 0
 8470 00d0 C9E7     		b	.L645
 8471              	.L654:
5820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8472              		.loc 1 5820 0
 8473 00d2 2023     		movs	r3, #32
 8474 00d4 84F84130 		strb	r3, [r4, #65]
5823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8475              		.loc 1 5823 0
 8476 00d8 0023     		movs	r3, #0
ARM GAS  /tmp/ccX4fpHz.s 			page 288


 8477 00da 84F84030 		strb	r3, [r4, #64]
5829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 8478              		.loc 1 5829 0
 8479 00de 2046     		mov	r0, r4
 8480 00e0 FFF7FEFF 		bl	HAL_I2C_AbortCpltCallback
 8481              	.LVL706:
 8482 00e4 BFE7     		b	.L645
 8483              	.L656:
 8484 00e6 00BF     		.align	2
 8485              	.L655:
 8486 00e8 0000FFFF 		.word	-65536
 8487 00ec 00000000 		.word	I2C_Slave_ISR_IT
 8488 00f0 00000000 		.word	I2C_DMAAbort
 8489              		.cfi_endproc
 8490              	.LFE202:
 8492              		.section	.text.I2C_ITSlaveCplt,"ax",%progbits
 8493              		.align	1
 8494              		.syntax unified
 8495              		.thumb
 8496              		.thumb_func
 8497              		.fpu fpv5-sp-d16
 8499              	I2C_ITSlaveCplt:
 8500              	.LFB200:
5546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpcr1value = READ_REG(hi2c->Instance->CR1);
 8501              		.loc 1 5546 0
 8502              		.cfi_startproc
 8503              		@ args = 0, pretend = 0, frame = 0
 8504              		@ frame_needed = 0, uses_anonymous_args = 0
 8505              	.LVL707:
 8506 0000 70B5     		push	{r4, r5, r6, lr}
 8507              	.LCFI121:
 8508              		.cfi_def_cfa_offset 16
 8509              		.cfi_offset 4, -16
 8510              		.cfi_offset 5, -12
 8511              		.cfi_offset 6, -8
 8512              		.cfi_offset 14, -4
 8513 0002 0446     		mov	r4, r0
 8514 0004 0D46     		mov	r5, r1
5547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpITFlags = ITFlags;
 8515              		.loc 1 5547 0
 8516 0006 0368     		ldr	r3, [r0]
 8517 0008 1E68     		ldr	r6, [r3]
 8518              	.LVL708:
5551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8519              		.loc 1 5551 0
 8520 000a 2022     		movs	r2, #32
 8521 000c DA61     		str	r2, [r3, #28]
5554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8522              		.loc 1 5554 0
 8523 000e 0721     		movs	r1, #7
 8524              	.LVL709:
 8525 0010 FFF7FEFF 		bl	I2C_Disable_IRQ
 8526              	.LVL710:
5557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8527              		.loc 1 5557 0
 8528 0014 2268     		ldr	r2, [r4]
 8529 0016 5368     		ldr	r3, [r2, #4]
ARM GAS  /tmp/ccX4fpHz.s 			page 289


 8530 0018 43F40043 		orr	r3, r3, #32768
 8531 001c 5360     		str	r3, [r2, #4]
5560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8532              		.loc 1 5560 0
 8533 001e 2268     		ldr	r2, [r4]
 8534 0020 5368     		ldr	r3, [r2, #4]
 8535 0022 23F0FF73 		bic	r3, r3, #33423360
 8536 0026 23F48B33 		bic	r3, r3, #71168
 8537 002a 23F4FF73 		bic	r3, r3, #510
 8538 002e 23F00103 		bic	r3, r3, #1
 8539 0032 5360     		str	r3, [r2, #4]
5563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8540              		.loc 1 5563 0
 8541 0034 2046     		mov	r0, r4
 8542 0036 FFF7FEFF 		bl	I2C_Flush_TXDR
 8543              	.LVL711:
5566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8544              		.loc 1 5566 0
 8545 003a 16F4804F 		tst	r6, #16384
 8546 003e 3AD0     		beq	.L658
5568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 8547              		.loc 1 5568 0
 8548 0040 A36B     		ldr	r3, [r4, #56]
 8549 0042 1BB1     		cbz	r3, .L659
5570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 8550              		.loc 1 5570 0
 8551 0044 1B68     		ldr	r3, [r3]
 8552 0046 5B68     		ldr	r3, [r3, #4]
 8553 0048 9BB2     		uxth	r3, r3
 8554 004a 6385     		strh	r3, [r4, #42]	@ movhi
 8555              	.L659:
5586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8556              		.loc 1 5586 0
 8557 004c 15F0040F 		tst	r5, #4
 8558 0050 10D0     		beq	.L660
5589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8559              		.loc 1 5589 0
 8560 0052 25F00405 		bic	r5, r5, #4
 8561              	.LVL712:
5592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8562              		.loc 1 5592 0
 8563 0056 2368     		ldr	r3, [r4]
 8564 0058 5A6A     		ldr	r2, [r3, #36]
 8565 005a 636A     		ldr	r3, [r4, #36]
 8566 005c 1A70     		strb	r2, [r3]
5595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8567              		.loc 1 5595 0
 8568 005e 636A     		ldr	r3, [r4, #36]
 8569 0060 0133     		adds	r3, r3, #1
 8570 0062 6362     		str	r3, [r4, #36]
5597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 8571              		.loc 1 5597 0
 8572 0064 238D     		ldrh	r3, [r4, #40]
 8573 0066 2BB1     		cbz	r3, .L660
5599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount--;
 8574              		.loc 1 5599 0
 8575 0068 013B     		subs	r3, r3, #1
ARM GAS  /tmp/ccX4fpHz.s 			page 290


 8576 006a 2385     		strh	r3, [r4, #40]	@ movhi
5600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 8577              		.loc 1 5600 0
 8578 006c 638D     		ldrh	r3, [r4, #42]
 8579 006e 013B     		subs	r3, r3, #1
 8580 0070 9BB2     		uxth	r3, r3
 8581 0072 6385     		strh	r3, [r4, #42]	@ movhi
 8582              	.L660:
5605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8583              		.loc 1 5605 0
 8584 0074 638D     		ldrh	r3, [r4, #42]
 8585 0076 9BB2     		uxth	r3, r3
 8586 0078 1BB1     		cbz	r3, .L661
5608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 8587              		.loc 1 5608 0
 8588 007a 636C     		ldr	r3, [r4, #68]
 8589 007c 43F00403 		orr	r3, r3, #4
 8590 0080 6364     		str	r3, [r4, #68]
 8591              	.L661:
5611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
 8592              		.loc 1 5611 0
 8593 0082 0023     		movs	r3, #0
 8594 0084 2363     		str	r3, [r4, #48]
5612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->XferISR = NULL;
 8595              		.loc 1 5612 0
 8596 0086 84F84230 		strb	r3, [r4, #66]
5613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8597              		.loc 1 5613 0
 8598 008a 6363     		str	r3, [r4, #52]
5615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8599              		.loc 1 5615 0
 8600 008c 636C     		ldr	r3, [r4, #68]
 8601 008e EBB9     		cbnz	r3, .L667
5627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8602              		.loc 1 5627 0
 8603 0090 E36A     		ldr	r3, [r4, #44]
 8604 0092 13F5803F 		cmn	r3, #65536
 8605 0096 27D1     		bne	.L668
5646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8606              		.loc 1 5646 0
 8607 0098 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 8608 009c DBB2     		uxtb	r3, r3
 8609 009e 222B     		cmp	r3, #34
 8610 00a0 31D0     		beq	.L669
5662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8611              		.loc 1 5662 0
 8612 00a2 2023     		movs	r3, #32
 8613 00a4 84F84130 		strb	r3, [r4, #65]
5665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8614              		.loc 1 5665 0
 8615 00a8 0023     		movs	r3, #0
 8616 00aa 84F84030 		strb	r3, [r4, #64]
5671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 8617              		.loc 1 5671 0
 8618 00ae 2046     		mov	r0, r4
 8619 00b0 FFF7FEFF 		bl	HAL_I2C_SlaveTxCpltCallback
 8620              	.LVL713:
ARM GAS  /tmp/ccX4fpHz.s 			page 291


5674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8621              		.loc 1 5674 0
 8622 00b4 26E0     		b	.L657
 8623              	.LVL714:
 8624              	.L658:
5573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8625              		.loc 1 5573 0
 8626 00b6 16F4004F 		tst	r6, #32768
 8627 00ba C7D0     		beq	.L659
5575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 8628              		.loc 1 5575 0
 8629 00bc E36B     		ldr	r3, [r4, #60]
 8630 00be 002B     		cmp	r3, #0
 8631 00c0 C4D0     		beq	.L659
5577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 8632              		.loc 1 5577 0
 8633 00c2 1B68     		ldr	r3, [r3]
 8634 00c4 5B68     		ldr	r3, [r3, #4]
 8635 00c6 9BB2     		uxth	r3, r3
 8636 00c8 6385     		strh	r3, [r4, #42]	@ movhi
 8637 00ca BFE7     		b	.L659
 8638              	.LVL715:
 8639              	.L667:
5618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8640              		.loc 1 5618 0
 8641 00cc 616C     		ldr	r1, [r4, #68]
 8642 00ce 2046     		mov	r0, r4
 8643 00d0 FFF7FEFF 		bl	I2C_ITError
 8644              	.LVL716:
5621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 8645              		.loc 1 5621 0
 8646 00d4 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 8647 00d8 DBB2     		uxtb	r3, r3
 8648 00da 282B     		cmp	r3, #40
 8649 00dc 12D1     		bne	.L657
5624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 8650              		.loc 1 5624 0
 8651 00de 2946     		mov	r1, r5
 8652 00e0 2046     		mov	r0, r4
 8653 00e2 FFF7FEFF 		bl	I2C_ITListenCplt
 8654              	.LVL717:
 8655 00e6 0DE0     		b	.L657
 8656              	.L668:
5630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8657              		.loc 1 5630 0
 8658 00e8 2046     		mov	r0, r4
 8659 00ea FFF7FEFF 		bl	I2C_ITSlaveSeqCplt
 8660              	.LVL718:
5632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
 8661              		.loc 1 5632 0
 8662 00ee 0B4B     		ldr	r3, .L670
 8663 00f0 E362     		str	r3, [r4, #44]
5633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8664              		.loc 1 5633 0
 8665 00f2 2023     		movs	r3, #32
 8666 00f4 84F84130 		strb	r3, [r4, #65]
5636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/ccX4fpHz.s 			page 292


 8667              		.loc 1 5636 0
 8668 00f8 0023     		movs	r3, #0
 8669 00fa 84F84030 		strb	r3, [r4, #64]
5642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 8670              		.loc 1 5642 0
 8671 00fe 2046     		mov	r0, r4
 8672 0100 FFF7FEFF 		bl	HAL_I2C_ListenCpltCallback
 8673              	.LVL719:
 8674              	.L657:
5674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8675              		.loc 1 5674 0
 8676 0104 70BD     		pop	{r4, r5, r6, pc}
 8677              	.LVL720:
 8678              	.L669:
5648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8679              		.loc 1 5648 0
 8680 0106 2023     		movs	r3, #32
 8681 0108 84F84130 		strb	r3, [r4, #65]
5651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8682              		.loc 1 5651 0
 8683 010c 0023     		movs	r3, #0
 8684 010e 84F84030 		strb	r3, [r4, #64]
5657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 8685              		.loc 1 5657 0
 8686 0112 2046     		mov	r0, r4
 8687 0114 FFF7FEFF 		bl	HAL_I2C_SlaveRxCpltCallback
 8688              	.LVL721:
 8689 0118 F4E7     		b	.L657
 8690              	.L671:
 8691 011a 00BF     		.align	2
 8692              	.L670:
 8693 011c 0000FFFF 		.word	-65536
 8694              		.cfi_endproc
 8695              	.LFE200:
 8697              		.section	.text.I2C_Slave_ISR_IT,"ax",%progbits
 8698              		.align	1
 8699              		.syntax unified
 8700              		.thumb
 8701              		.thumb_func
 8702              		.fpu fpv5-sp-d16
 8704              	I2C_Slave_ISR_IT:
 8705              	.LFB191:
4733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpoptions = hi2c->XferOptions;
 8706              		.loc 1 4733 0
 8707              		.cfi_startproc
 8708              		@ args = 0, pretend = 0, frame = 0
 8709              		@ frame_needed = 0, uses_anonymous_args = 0
 8710              	.LVL722:
 8711 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 8712              	.LCFI122:
 8713              		.cfi_def_cfa_offset 24
 8714              		.cfi_offset 3, -24
 8715              		.cfi_offset 4, -20
 8716              		.cfi_offset 5, -16
 8717              		.cfi_offset 6, -12
 8718              		.cfi_offset 7, -8
 8719              		.cfi_offset 14, -4
ARM GAS  /tmp/ccX4fpHz.s 			page 293


4734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpITFlags = ITFlags;
 8720              		.loc 1 4734 0
 8721 0002 C76A     		ldr	r7, [r0, #44]
 8722              	.LVL723:
4738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8723              		.loc 1 4738 0
 8724 0004 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 8725 0008 012B     		cmp	r3, #1
 8726 000a 00F0A380 		beq	.L684
 8727 000e 1646     		mov	r6, r2
 8728 0010 0D46     		mov	r5, r1
 8729 0012 0446     		mov	r4, r0
4738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8730              		.loc 1 4738 0 is_stmt 0 discriminator 2
 8731 0014 0123     		movs	r3, #1
 8732 0016 80F84030 		strb	r3, [r0, #64]
4741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8733              		.loc 1 4741 0 is_stmt 1 discriminator 2
 8734 001a 11F0200F 		tst	r1, #32
 8735 001e 02D0     		beq	.L674
4741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8736              		.loc 1 4741 0 is_stmt 0 discriminator 1
 8737 0020 12F0200F 		tst	r2, #32
 8738 0024 19D1     		bne	.L686
 8739              	.LVL724:
 8740              	.L674:
4747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8741              		.loc 1 4747 0 is_stmt 1
 8742 0026 15F0100F 		tst	r5, #16
 8743 002a 45D0     		beq	.L675
4747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8744              		.loc 1 4747 0 is_stmt 0 discriminator 1
 8745 002c 16F0100F 		tst	r6, #16
 8746 0030 42D0     		beq	.L675
4753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 8747              		.loc 1 4753 0 is_stmt 1
 8748 0032 638D     		ldrh	r3, [r4, #42]
 8749 0034 9BB2     		uxth	r3, r3
 8750 0036 43BB     		cbnz	r3, .L676
4755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 8751              		.loc 1 4755 0
 8752 0038 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 8753 003c DBB2     		uxtb	r3, r3
 8754 003e 282B     		cmp	r3, #40
 8755 0040 0ED0     		beq	.L687
 8756              	.L677:
4760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 8757              		.loc 1 4760 0
 8758 0042 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 8759 0046 DBB2     		uxtb	r3, r3
 8760 0048 292B     		cmp	r3, #41
 8761 004a 11D0     		beq	.L688
 8762              	.L679:
4775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 8763              		.loc 1 4775 0
 8764 004c 2368     		ldr	r3, [r4]
 8765 004e 1022     		movs	r2, #16
ARM GAS  /tmp/ccX4fpHz.s 			page 294


 8766 0050 DA61     		str	r2, [r3, #28]
 8767              	.LVL725:
 8768              	.L678:
4852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8769              		.loc 1 4852 0
 8770 0052 0020     		movs	r0, #0
 8771 0054 84F84000 		strb	r0, [r4, #64]
 8772              	.LVL726:
 8773              	.L673:
4855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8774              		.loc 1 4855 0
 8775 0058 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 8776              	.LVL727:
 8777              	.L686:
4744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 8778              		.loc 1 4744 0
 8779 005a FFF7FEFF 		bl	I2C_ITSlaveCplt
 8780              	.LVL728:
 8781 005e E2E7     		b	.L674
 8782              	.L687:
4755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 8783              		.loc 1 4755 0 discriminator 1
 8784 0060 B7F1007F 		cmp	r7, #33554432
 8785 0064 EDD1     		bne	.L677
4758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 8786              		.loc 1 4758 0
 8787 0066 2946     		mov	r1, r5
 8788 0068 2046     		mov	r0, r4
 8789 006a FFF7FEFF 		bl	I2C_ITListenCplt
 8790              	.LVL729:
 8791 006e F0E7     		b	.L678
 8792              	.L688:
4760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 8793              		.loc 1 4760 0 discriminator 1
 8794 0070 17F5803F 		cmn	r7, #65536
 8795 0074 EAD0     		beq	.L679
4763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8796              		.loc 1 4763 0
 8797 0076 2368     		ldr	r3, [r4]
 8798 0078 1022     		movs	r2, #16
 8799 007a DA61     		str	r2, [r3, #28]
4766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8800              		.loc 1 4766 0
 8801 007c 2046     		mov	r0, r4
 8802 007e FFF7FEFF 		bl	I2C_Flush_TXDR
 8803              	.LVL730:
4770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 8804              		.loc 1 4770 0
 8805 0082 2046     		mov	r0, r4
 8806 0084 FFF7FEFF 		bl	I2C_ITSlaveSeqCplt
 8807              	.LVL731:
 8808 0088 E3E7     		b	.L678
 8809              	.L676:
4782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8810              		.loc 1 4782 0
 8811 008a 2368     		ldr	r3, [r4]
 8812 008c 1022     		movs	r2, #16
ARM GAS  /tmp/ccX4fpHz.s 			page 295


 8813 008e DA61     		str	r2, [r3, #28]
4785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8814              		.loc 1 4785 0
 8815 0090 636C     		ldr	r3, [r4, #68]
 8816 0092 43F00403 		orr	r3, r3, #4
 8817 0096 6364     		str	r3, [r4, #68]
4787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 8818              		.loc 1 4787 0
 8819 0098 B7F1807F 		cmp	r7, #16777216
 8820 009c 14BF     		ite	ne
 8821 009e 0023     		movne	r3, #0
 8822 00a0 0123     		moveq	r3, #1
 8823 00a2 002F     		cmp	r7, #0
 8824 00a4 14BF     		ite	ne
 8825 00a6 1F46     		movne	r7, r3
 8826 00a8 0127     		moveq	r7, #1
 8827              	.LVL732:
 8828 00aa 002F     		cmp	r7, #0
 8829 00ac D1D0     		beq	.L678
4790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 8830              		.loc 1 4790 0
 8831 00ae 616C     		ldr	r1, [r4, #68]
 8832 00b0 2046     		mov	r0, r4
 8833 00b2 FFF7FEFF 		bl	I2C_ITError
 8834              	.LVL733:
 8835 00b6 CCE7     		b	.L678
 8836              	.LVL734:
 8837              	.L675:
4794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8838              		.loc 1 4794 0
 8839 00b8 15F0040F 		tst	r5, #4
 8840 00bc 1ED0     		beq	.L680
4794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8841              		.loc 1 4794 0 is_stmt 0 discriminator 1
 8842 00be 16F0040F 		tst	r6, #4
 8843 00c2 1BD0     		beq	.L680
4796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 8844              		.loc 1 4796 0 is_stmt 1
 8845 00c4 638D     		ldrh	r3, [r4, #42]
 8846 00c6 9BB2     		uxth	r3, r3
 8847 00c8 6BB1     		cbz	r3, .L681
4799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8848              		.loc 1 4799 0
 8849 00ca 2368     		ldr	r3, [r4]
 8850 00cc 5A6A     		ldr	r2, [r3, #36]
 8851 00ce 636A     		ldr	r3, [r4, #36]
 8852 00d0 1A70     		strb	r2, [r3]
4802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8853              		.loc 1 4802 0
 8854 00d2 636A     		ldr	r3, [r4, #36]
 8855 00d4 0133     		adds	r3, r3, #1
 8856 00d6 6362     		str	r3, [r4, #36]
4804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount--;
 8857              		.loc 1 4804 0
 8858 00d8 238D     		ldrh	r3, [r4, #40]
 8859 00da 013B     		subs	r3, r3, #1
 8860 00dc 2385     		strh	r3, [r4, #40]	@ movhi
ARM GAS  /tmp/ccX4fpHz.s 			page 296


4805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 8861              		.loc 1 4805 0
 8862 00de 638D     		ldrh	r3, [r4, #42]
 8863 00e0 013B     		subs	r3, r3, #1
 8864 00e2 9BB2     		uxth	r3, r3
 8865 00e4 6385     		strh	r3, [r4, #42]	@ movhi
 8866              	.L681:
4808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (tmpoptions != I2C_NO_OPTION_FRAME))
 8867              		.loc 1 4808 0
 8868 00e6 638D     		ldrh	r3, [r4, #42]
 8869 00e8 9BB2     		uxth	r3, r3
 8870 00ea 002B     		cmp	r3, #0
 8871 00ec B1D1     		bne	.L678
4808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (tmpoptions != I2C_NO_OPTION_FRAME))
 8872              		.loc 1 4808 0 is_stmt 0 discriminator 1
 8873 00ee 17F5803F 		cmn	r7, #65536
 8874 00f2 AED0     		beq	.L678
4812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 8875              		.loc 1 4812 0 is_stmt 1
 8876 00f4 2046     		mov	r0, r4
 8877 00f6 FFF7FEFF 		bl	I2C_ITSlaveSeqCplt
 8878              	.LVL735:
 8879 00fa AAE7     		b	.L678
 8880              	.L680:
4815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8881              		.loc 1 4815 0
 8882 00fc 15F0080F 		tst	r5, #8
 8883 0100 02D0     		beq	.L682
4815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8884              		.loc 1 4815 0 is_stmt 0 discriminator 1
 8885 0102 16F0080F 		tst	r6, #8
 8886 0106 17D1     		bne	.L689
 8887              	.L682:
4819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8888              		.loc 1 4819 0 is_stmt 1
 8889 0108 15F0020F 		tst	r5, #2
 8890 010c A1D0     		beq	.L678
4819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8891              		.loc 1 4819 0 is_stmt 0 discriminator 1
 8892 010e 16F0020F 		tst	r6, #2
 8893 0112 9ED0     		beq	.L678
4825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 8894              		.loc 1 4825 0 is_stmt 1
 8895 0114 638D     		ldrh	r3, [r4, #42]
 8896 0116 9BB2     		uxth	r3, r3
 8897 0118 9BB1     		cbz	r3, .L683
4828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8898              		.loc 1 4828 0
 8899 011a 626A     		ldr	r2, [r4, #36]
 8900 011c 2368     		ldr	r3, [r4]
 8901 011e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8902 0120 9A62     		str	r2, [r3, #40]
4831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8903              		.loc 1 4831 0
 8904 0122 636A     		ldr	r3, [r4, #36]
 8905 0124 0133     		adds	r3, r3, #1
 8906 0126 6362     		str	r3, [r4, #36]
ARM GAS  /tmp/ccX4fpHz.s 			page 297


4833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize--;
 8907              		.loc 1 4833 0
 8908 0128 638D     		ldrh	r3, [r4, #42]
 8909 012a 013B     		subs	r3, r3, #1
 8910 012c 9BB2     		uxth	r3, r3
 8911 012e 6385     		strh	r3, [r4, #42]	@ movhi
4834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 8912              		.loc 1 4834 0
 8913 0130 238D     		ldrh	r3, [r4, #40]
 8914 0132 013B     		subs	r3, r3, #1
 8915 0134 2385     		strh	r3, [r4, #40]	@ movhi
 8916 0136 8CE7     		b	.L678
 8917              	.L689:
4817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 8918              		.loc 1 4817 0
 8919 0138 2946     		mov	r1, r5
 8920 013a 2046     		mov	r0, r4
 8921 013c FFF7FEFF 		bl	I2C_ITAddrCplt
 8922              	.LVL736:
 8923 0140 87E7     		b	.L678
 8924              	.L683:
4838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 8925              		.loc 1 4838 0
 8926 0142 002F     		cmp	r7, #0
 8927 0144 18BF     		it	ne
 8928 0146 B7F1807F 		cmpne	r7, #16777216
 8929 014a 82D1     		bne	.L678
4842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 8930              		.loc 1 4842 0
 8931 014c 2046     		mov	r0, r4
 8932 014e FFF7FEFF 		bl	I2C_ITSlaveSeqCplt
 8933              	.LVL737:
 8934 0152 7EE7     		b	.L678
 8935              	.LVL738:
 8936              	.L684:
4738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8937              		.loc 1 4738 0
 8938 0154 0220     		movs	r0, #2
 8939              	.LVL739:
 8940 0156 7FE7     		b	.L673
 8941              		.cfi_endproc
 8942              	.LFE191:
 8944              		.section	.text.I2C_ITMasterCplt,"ax",%progbits
 8945              		.align	1
 8946              		.syntax unified
 8947              		.thumb
 8948              		.thumb_func
 8949              		.fpu fpv5-sp-d16
 8951              	I2C_ITMasterCplt:
 8952              	.LFB199:
5427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmperror;
 8953              		.loc 1 5427 0
 8954              		.cfi_startproc
 8955              		@ args = 0, pretend = 0, frame = 0
 8956              		@ frame_needed = 0, uses_anonymous_args = 0
 8957              	.LVL740:
 8958 0000 10B5     		push	{r4, lr}
ARM GAS  /tmp/ccX4fpHz.s 			page 298


 8959              	.LCFI123:
 8960              		.cfi_def_cfa_offset 8
 8961              		.cfi_offset 4, -8
 8962              		.cfi_offset 14, -4
 8963 0002 0446     		mov	r4, r0
5431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8964              		.loc 1 5431 0
 8965 0004 0368     		ldr	r3, [r0]
 8966 0006 2022     		movs	r2, #32
 8967 0008 DA61     		str	r2, [r3, #28]
5434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8968              		.loc 1 5434 0
 8969 000a 0268     		ldr	r2, [r0]
 8970 000c 5368     		ldr	r3, [r2, #4]
 8971 000e 23F0FF73 		bic	r3, r3, #33423360
 8972 0012 23F48B33 		bic	r3, r3, #71168
 8973 0016 23F4FF73 		bic	r3, r3, #510
 8974 001a 23F00103 		bic	r3, r3, #1
 8975 001e 5360     		str	r3, [r2, #4]
5437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->XferISR       = NULL;
 8976              		.loc 1 5437 0
 8977 0020 0023     		movs	r3, #0
 8978 0022 0363     		str	r3, [r0, #48]
5438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
 8979              		.loc 1 5438 0
 8980 0024 4363     		str	r3, [r0, #52]
5439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8981              		.loc 1 5439 0
 8982 0026 A3F58033 		sub	r3, r3, #65536
 8983 002a C362     		str	r3, [r0, #44]
5441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8984              		.loc 1 5441 0
 8985 002c 11F0100F 		tst	r1, #16
 8986 0030 06D0     		beq	.L691
5444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8987              		.loc 1 5444 0
 8988 0032 0368     		ldr	r3, [r0]
 8989 0034 1022     		movs	r2, #16
 8990 0036 DA61     		str	r2, [r3, #28]
5447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 8991              		.loc 1 5447 0
 8992 0038 436C     		ldr	r3, [r0, #68]
 8993 003a 43F00403 		orr	r3, r3, #4
 8994 003e 4364     		str	r3, [r0, #68]
 8995              	.L691:
5451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8996              		.loc 1 5451 0
 8997 0040 2046     		mov	r0, r4
 8998              	.LVL741:
 8999 0042 FFF7FEFF 		bl	I2C_Flush_TXDR
 9000              	.LVL742:
5454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9001              		.loc 1 5454 0
 9002 0046 0321     		movs	r1, #3
 9003 0048 2046     		mov	r0, r4
 9004 004a FFF7FEFF 		bl	I2C_Disable_IRQ
 9005              	.LVL743:
ARM GAS  /tmp/ccX4fpHz.s 			page 299


5457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9006              		.loc 1 5457 0
 9007 004e 626C     		ldr	r2, [r4, #68]
 9008              	.LVL744:
5460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9009              		.loc 1 5460 0
 9010 0050 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 9011 0054 DBB2     		uxtb	r3, r3
 9012 0056 602B     		cmp	r3, #96
 9013 0058 1BD0     		beq	.L692
5460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9014              		.loc 1 5460 0 is_stmt 0 discriminator 1
 9015 005a D2B9     		cbnz	r2, .L692
5466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9016              		.loc 1 5466 0 is_stmt 1
 9017 005c 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 9018 0060 DBB2     		uxtb	r3, r3
 9019 0062 212B     		cmp	r3, #33
 9020 0064 1AD0     		beq	.L699
5500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9021              		.loc 1 5500 0
 9022 0066 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 9023 006a DBB2     		uxtb	r3, r3
 9024 006c 222B     		cmp	r3, #34
 9025 006e 14D1     		bne	.L690
5502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9026              		.loc 1 5502 0
 9027 0070 2023     		movs	r3, #32
 9028 0072 84F84130 		strb	r3, [r4, #65]
5504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 9029              		.loc 1 5504 0
 9030 0076 94F84230 		ldrb	r3, [r4, #66]	@ zero_extendqisi2
 9031 007a DBB2     		uxtb	r3, r3
 9032 007c 402B     		cmp	r3, #64
 9033 007e 27D0     		beq	.L700
5520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9034              		.loc 1 5520 0
 9035 0080 0023     		movs	r3, #0
 9036 0082 84F84230 		strb	r3, [r4, #66]
5523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9037              		.loc 1 5523 0
 9038 0086 84F84030 		strb	r3, [r4, #64]
5529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 9039              		.loc 1 5529 0
 9040 008a 2046     		mov	r0, r4
 9041 008c FFF7FEFF 		bl	HAL_I2C_MasterRxCpltCallback
 9042              	.LVL745:
5537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9043              		.loc 1 5537 0
 9044 0090 03E0     		b	.L690
 9045              	.LVL746:
 9046              	.L692:
5463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 9047              		.loc 1 5463 0
 9048 0092 616C     		ldr	r1, [r4, #68]
 9049 0094 2046     		mov	r0, r4
 9050 0096 FFF7FEFF 		bl	I2C_ITError
ARM GAS  /tmp/ccX4fpHz.s 			page 300


 9051              	.LVL747:
 9052              	.L690:
5537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9053              		.loc 1 5537 0
 9054 009a 10BD     		pop	{r4, pc}
 9055              	.LVL748:
 9056              	.L699:
5468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9057              		.loc 1 5468 0
 9058 009c 2023     		movs	r3, #32
 9059 009e 84F84130 		strb	r3, [r4, #65]
5470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 9060              		.loc 1 5470 0
 9061 00a2 94F84230 		ldrb	r3, [r4, #66]	@ zero_extendqisi2
 9062 00a6 DBB2     		uxtb	r3, r3
 9063 00a8 402B     		cmp	r3, #64
 9064 00aa 08D0     		beq	.L701
5486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9065              		.loc 1 5486 0
 9066 00ac 0023     		movs	r3, #0
 9067 00ae 84F84230 		strb	r3, [r4, #66]
5489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9068              		.loc 1 5489 0
 9069 00b2 84F84030 		strb	r3, [r4, #64]
5495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 9070              		.loc 1 5495 0
 9071 00b6 2046     		mov	r0, r4
 9072 00b8 FFF7FEFF 		bl	HAL_I2C_MasterTxCpltCallback
 9073              	.LVL749:
 9074 00bc EDE7     		b	.L690
 9075              	.LVL750:
 9076              	.L701:
5472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9077              		.loc 1 5472 0
 9078 00be 0023     		movs	r3, #0
 9079 00c0 84F84230 		strb	r3, [r4, #66]
5475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9080              		.loc 1 5475 0
 9081 00c4 84F84030 		strb	r3, [r4, #64]
5481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 9082              		.loc 1 5481 0
 9083 00c8 2046     		mov	r0, r4
 9084 00ca FFF7FEFF 		bl	HAL_I2C_MemTxCpltCallback
 9085              	.LVL751:
 9086 00ce E4E7     		b	.L690
 9087              	.LVL752:
 9088              	.L700:
5506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9089              		.loc 1 5506 0
 9090 00d0 0023     		movs	r3, #0
 9091 00d2 84F84230 		strb	r3, [r4, #66]
5509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9092              		.loc 1 5509 0
 9093 00d6 84F84030 		strb	r3, [r4, #64]
5515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 9094              		.loc 1 5515 0
 9095 00da 2046     		mov	r0, r4
ARM GAS  /tmp/ccX4fpHz.s 			page 301


 9096 00dc FFF7FEFF 		bl	HAL_I2C_MemRxCpltCallback
 9097              	.LVL753:
 9098 00e0 DBE7     		b	.L690
 9099              		.cfi_endproc
 9100              	.LFE199:
 9102              		.section	.text.I2C_Master_ISR_IT,"ax",%progbits
 9103              		.align	1
 9104              		.syntax unified
 9105              		.thumb
 9106              		.thumb_func
 9107              		.fpu fpv5-sp-d16
 9109              	I2C_Master_ISR_IT:
 9110              	.LFB190:
4596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint16_t devaddress;
 9111              		.loc 1 4596 0
 9112              		.cfi_startproc
 9113              		@ args = 0, pretend = 0, frame = 0
 9114              		@ frame_needed = 0, uses_anonymous_args = 0
 9115              	.LVL754:
4601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9116              		.loc 1 4601 0
 9117 0000 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 9118 0004 012B     		cmp	r3, #1
 9119 0006 00F0B780 		beq	.L716
4596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint16_t devaddress;
 9120              		.loc 1 4596 0 discriminator 2
 9121 000a 70B5     		push	{r4, r5, r6, lr}
 9122              	.LCFI124:
 9123              		.cfi_def_cfa_offset 16
 9124              		.cfi_offset 4, -16
 9125              		.cfi_offset 5, -12
 9126              		.cfi_offset 6, -8
 9127              		.cfi_offset 14, -4
 9128 000c 82B0     		sub	sp, sp, #8
 9129              	.LCFI125:
 9130              		.cfi_def_cfa_offset 24
 9131 000e 0446     		mov	r4, r0
 9132 0010 0D46     		mov	r5, r1
 9133 0012 1646     		mov	r6, r2
4601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9134              		.loc 1 4601 0 discriminator 2
 9135 0014 0123     		movs	r3, #1
 9136 0016 80F84030 		strb	r3, [r0, #64]
4603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9137              		.loc 1 4603 0 discriminator 2
 9138 001a 11F0100F 		tst	r1, #16
 9139 001e 02D0     		beq	.L704
4603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9140              		.loc 1 4603 0 is_stmt 0 discriminator 1
 9141 0020 12F0100F 		tst	r2, #16
 9142 0024 21D1     		bne	.L721
 9143              	.L704:
4616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9144              		.loc 1 4616 0 is_stmt 1
 9145 0026 15F0040F 		tst	r5, #4
 9146 002a 28D0     		beq	.L706
4616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
ARM GAS  /tmp/ccX4fpHz.s 			page 302


 9147              		.loc 1 4616 0 is_stmt 0 discriminator 1
 9148 002c 16F0040F 		tst	r6, #4
 9149 0030 25D0     		beq	.L706
4619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9150              		.loc 1 4619 0 is_stmt 1
 9151 0032 25F00405 		bic	r5, r5, #4
 9152              	.LVL755:
4622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9153              		.loc 1 4622 0
 9154 0036 2368     		ldr	r3, [r4]
 9155 0038 5A6A     		ldr	r2, [r3, #36]
 9156              	.LVL756:
 9157 003a 636A     		ldr	r3, [r4, #36]
 9158 003c 1A70     		strb	r2, [r3]
4625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9159              		.loc 1 4625 0
 9160 003e 636A     		ldr	r3, [r4, #36]
 9161 0040 0133     		adds	r3, r3, #1
 9162 0042 6362     		str	r3, [r4, #36]
4627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount--;
 9163              		.loc 1 4627 0
 9164 0044 238D     		ldrh	r3, [r4, #40]
 9165 0046 013B     		subs	r3, r3, #1
 9166 0048 2385     		strh	r3, [r4, #40]	@ movhi
4628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 9167              		.loc 1 4628 0
 9168 004a 638D     		ldrh	r3, [r4, #42]
 9169 004c 013B     		subs	r3, r3, #1
 9170 004e 9BB2     		uxth	r3, r3
 9171 0050 6385     		strh	r3, [r4, #42]	@ movhi
 9172              	.LVL757:
 9173              	.L705:
4712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9174              		.loc 1 4712 0
 9175 0052 15F0200F 		tst	r5, #32
 9176 0056 03D0     		beq	.L715
4712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9177              		.loc 1 4712 0 is_stmt 0 discriminator 1
 9178 0058 16F0200F 		tst	r6, #32
 9179 005c 40F08780 		bne	.L722
 9180              	.L715:
4719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9181              		.loc 1 4719 0 is_stmt 1
 9182 0060 0020     		movs	r0, #0
 9183 0062 84F84000 		strb	r0, [r4, #64]
4722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9184              		.loc 1 4722 0
 9185 0066 02B0     		add	sp, sp, #8
 9186              	.LCFI126:
 9187              		.cfi_remember_state
 9188              		.cfi_def_cfa_offset 16
 9189              		@ sp needed
 9190 0068 70BD     		pop	{r4, r5, r6, pc}
 9191              	.LVL758:
 9192              	.L721:
 9193              	.LCFI127:
 9194              		.cfi_restore_state
ARM GAS  /tmp/ccX4fpHz.s 			page 303


4606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9195              		.loc 1 4606 0
 9196 006a 0368     		ldr	r3, [r0]
 9197 006c 1022     		movs	r2, #16
 9198              	.LVL759:
 9199 006e DA61     		str	r2, [r3, #28]
4611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9200              		.loc 1 4611 0
 9201 0070 436C     		ldr	r3, [r0, #68]
 9202 0072 43F00403 		orr	r3, r3, #4
 9203 0076 4364     		str	r3, [r0, #68]
4614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 9204              		.loc 1 4614 0
 9205 0078 FFF7FEFF 		bl	I2C_Flush_TXDR
 9206              	.LVL760:
 9207 007c E9E7     		b	.L705
 9208              	.LVL761:
 9209              	.L706:
4630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9210              		.loc 1 4630 0
 9211 007e 15F0020F 		tst	r5, #2
 9212 0082 11D0     		beq	.L707
4630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9213              		.loc 1 4630 0 is_stmt 0 discriminator 1
 9214 0084 16F0020F 		tst	r6, #2
 9215 0088 0ED0     		beq	.L707
4633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9216              		.loc 1 4633 0 is_stmt 1
 9217 008a 626A     		ldr	r2, [r4, #36]
 9218              	.LVL762:
 9219 008c 2368     		ldr	r3, [r4]
 9220 008e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9221 0090 9A62     		str	r2, [r3, #40]
4636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9222              		.loc 1 4636 0
 9223 0092 636A     		ldr	r3, [r4, #36]
 9224 0094 0133     		adds	r3, r3, #1
 9225 0096 6362     		str	r3, [r4, #36]
4638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount--;
 9226              		.loc 1 4638 0
 9227 0098 238D     		ldrh	r3, [r4, #40]
 9228 009a 013B     		subs	r3, r3, #1
 9229 009c 2385     		strh	r3, [r4, #40]	@ movhi
4639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 9230              		.loc 1 4639 0
 9231 009e 638D     		ldrh	r3, [r4, #42]
 9232 00a0 013B     		subs	r3, r3, #1
 9233 00a2 9BB2     		uxth	r3, r3
 9234 00a4 6385     		strh	r3, [r4, #42]	@ movhi
 9235 00a6 D4E7     		b	.L705
 9236              	.LVL763:
 9237              	.L707:
4641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9238              		.loc 1 4641 0
 9239 00a8 15F0800F 		tst	r5, #128
 9240 00ac 3FD0     		beq	.L708
4641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
ARM GAS  /tmp/ccX4fpHz.s 			page 304


 9241              		.loc 1 4641 0 is_stmt 0 discriminator 1
 9242 00ae 16F0400F 		tst	r6, #64
 9243 00b2 3CD0     		beq	.L708
4643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 9244              		.loc 1 4643 0 is_stmt 1
 9245 00b4 638D     		ldrh	r3, [r4, #42]
 9246 00b6 9BB2     		uxth	r3, r3
 9247 00b8 5BB3     		cbz	r3, .L709
4643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 9248              		.loc 1 4643 0 is_stmt 0 discriminator 1
 9249 00ba 238D     		ldrh	r3, [r4, #40]
 9250 00bc 4BBB     		cbnz	r3, .L709
4645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9251              		.loc 1 4645 0 is_stmt 1
 9252 00be 2368     		ldr	r3, [r4]
 9253 00c0 5968     		ldr	r1, [r3, #4]
 9254              	.LVL764:
 9255 00c2 C1F30901 		ubfx	r1, r1, #0, #10
 9256              	.LVL765:
4647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 9257              		.loc 1 4647 0
 9258 00c6 638D     		ldrh	r3, [r4, #42]
 9259 00c8 9BB2     		uxth	r3, r3
 9260 00ca FF2B     		cmp	r3, #255
 9261 00cc 0ED8     		bhi	.L723
4654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->XferOptions != I2C_NO_OPTION_FRAME)
 9262              		.loc 1 4654 0
 9263 00ce 628D     		ldrh	r2, [r4, #42]
 9264              	.LVL766:
 9265 00d0 92B2     		uxth	r2, r2
 9266 00d2 2285     		strh	r2, [r4, #40]	@ movhi
4655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 9267              		.loc 1 4655 0
 9268 00d4 E36A     		ldr	r3, [r4, #44]
 9269 00d6 13F5803F 		cmn	r3, #65536
 9270 00da 11D0     		beq	.L711
4657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 9271              		.loc 1 4657 0
 9272 00dc E36A     		ldr	r3, [r4, #44]
 9273 00de 0020     		movs	r0, #0
 9274              	.LVL767:
 9275 00e0 0090     		str	r0, [sp]
 9276 00e2 D2B2     		uxtb	r2, r2
 9277 00e4 2046     		mov	r0, r4
 9278 00e6 FFF7FEFF 		bl	I2C_TransferConfig
 9279              	.LVL768:
 9280 00ea B2E7     		b	.L705
 9281              	.LVL769:
 9282              	.L723:
4649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_TransferConfig(hi2c, devaddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_START
 9283              		.loc 1 4649 0
 9284 00ec FF22     		movs	r2, #255
 9285              	.LVL770:
 9286 00ee 2285     		strh	r2, [r4, #40]	@ movhi
4650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 9287              		.loc 1 4650 0
 9288 00f0 0023     		movs	r3, #0
ARM GAS  /tmp/ccX4fpHz.s 			page 305


 9289 00f2 0093     		str	r3, [sp]
 9290 00f4 4FF08073 		mov	r3, #16777216
 9291 00f8 2046     		mov	r0, r4
 9292              	.LVL771:
 9293 00fa FFF7FEFF 		bl	I2C_TransferConfig
 9294              	.LVL772:
 9295 00fe A8E7     		b	.L705
 9296              	.LVL773:
 9297              	.L711:
4661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 9298              		.loc 1 4661 0
 9299 0100 0023     		movs	r3, #0
 9300 0102 0093     		str	r3, [sp]
 9301 0104 4FF00073 		mov	r3, #33554432
 9302 0108 D2B2     		uxtb	r2, r2
 9303 010a 2046     		mov	r0, r4
 9304              	.LVL774:
 9305 010c FFF7FEFF 		bl	I2C_TransferConfig
 9306              	.LVL775:
 9307 0110 9FE7     		b	.L705
 9308              	.LVL776:
 9309              	.L709:
4668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 9310              		.loc 1 4668 0
 9311 0112 2368     		ldr	r3, [r4]
 9312 0114 5B68     		ldr	r3, [r3, #4]
 9313 0116 13F0007F 		tst	r3, #33554432
 9314 011a 03D1     		bne	.L712
4671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 9315              		.loc 1 4671 0
 9316 011c 2046     		mov	r0, r4
 9317              	.LVL777:
 9318 011e FFF7FEFF 		bl	I2C_ITMasterSeqCplt
 9319              	.LVL778:
 9320 0122 96E7     		b	.L705
 9321              	.LVL779:
 9322              	.L712:
4677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 9323              		.loc 1 4677 0
 9324 0124 4021     		movs	r1, #64
 9325              	.LVL780:
 9326 0126 2046     		mov	r0, r4
 9327              	.LVL781:
 9328 0128 FFF7FEFF 		bl	I2C_ITError
 9329              	.LVL782:
 9330 012c 91E7     		b	.L705
 9331              	.LVL783:
 9332              	.L708:
4681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9333              		.loc 1 4681 0
 9334 012e 15F0400F 		tst	r5, #64
 9335 0132 8ED0     		beq	.L705
4681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9336              		.loc 1 4681 0 is_stmt 0 discriminator 1
 9337 0134 16F0400F 		tst	r6, #64
 9338 0138 8BD0     		beq	.L705
4683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
ARM GAS  /tmp/ccX4fpHz.s 			page 306


 9339              		.loc 1 4683 0 is_stmt 1
 9340 013a 638D     		ldrh	r3, [r4, #42]
 9341 013c 9BB2     		uxth	r3, r3
 9342 013e 8BB9     		cbnz	r3, .L713
4685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 9343              		.loc 1 4685 0
 9344 0140 2368     		ldr	r3, [r4]
 9345 0142 5A68     		ldr	r2, [r3, #4]
 9346              	.LVL784:
 9347 0144 12F0007F 		tst	r2, #33554432
 9348 0148 83D1     		bne	.L705
4688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 9349              		.loc 1 4688 0
 9350 014a E26A     		ldr	r2, [r4, #44]
 9351 014c 12F5803F 		cmn	r2, #65536
 9352 0150 04D1     		bne	.L714
4691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 9353              		.loc 1 4691 0
 9354 0152 5A68     		ldr	r2, [r3, #4]
 9355 0154 42F48042 		orr	r2, r2, #16384
 9356 0158 5A60     		str	r2, [r3, #4]
 9357 015a 7AE7     		b	.L705
 9358              	.L714:
4696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 9359              		.loc 1 4696 0
 9360 015c 2046     		mov	r0, r4
 9361              	.LVL785:
 9362 015e FFF7FEFF 		bl	I2C_ITMasterSeqCplt
 9363              	.LVL786:
 9364 0162 76E7     		b	.L705
 9365              	.LVL787:
 9366              	.L713:
4704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 9367              		.loc 1 4704 0
 9368 0164 4021     		movs	r1, #64
 9369              	.LVL788:
 9370 0166 2046     		mov	r0, r4
 9371              	.LVL789:
 9372 0168 FFF7FEFF 		bl	I2C_ITError
 9373              	.LVL790:
 9374 016c 71E7     		b	.L705
 9375              	.LVL791:
 9376              	.L722:
4715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 9377              		.loc 1 4715 0
 9378 016e 2946     		mov	r1, r5
 9379 0170 2046     		mov	r0, r4
 9380 0172 FFF7FEFF 		bl	I2C_ITMasterCplt
 9381              	.LVL792:
 9382 0176 73E7     		b	.L715
 9383              	.LVL793:
 9384              	.L716:
 9385              	.LCFI128:
 9386              		.cfi_def_cfa_offset 0
 9387              		.cfi_restore 4
 9388              		.cfi_restore 5
 9389              		.cfi_restore 6
ARM GAS  /tmp/ccX4fpHz.s 			page 307


 9390              		.cfi_restore 14
4601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9391              		.loc 1 4601 0
 9392 0178 0220     		movs	r0, #2
 9393              	.LVL794:
4722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9394              		.loc 1 4722 0
 9395 017a 7047     		bx	lr
 9396              		.cfi_endproc
 9397              	.LFE190:
 9399              		.section	.text.I2C_Slave_ISR_DMA,"ax",%progbits
 9400              		.align	1
 9401              		.syntax unified
 9402              		.thumb
 9403              		.thumb_func
 9404              		.fpu fpv5-sp-d16
 9406              	I2C_Slave_ISR_DMA:
 9407              	.LFB193:
5001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpoptions = hi2c->XferOptions;
 9408              		.loc 1 5001 0
 9409              		.cfi_startproc
 9410              		@ args = 0, pretend = 0, frame = 0
 9411              		@ frame_needed = 0, uses_anonymous_args = 0
 9412              	.LVL795:
 9413 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 9414              	.LCFI129:
 9415              		.cfi_def_cfa_offset 24
 9416              		.cfi_offset 3, -24
 9417              		.cfi_offset 4, -20
 9418              		.cfi_offset 5, -16
 9419              		.cfi_offset 6, -12
 9420              		.cfi_offset 7, -8
 9421              		.cfi_offset 14, -4
5002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t treatdmanack = 0U;
 9422              		.loc 1 5002 0
 9423 0002 C76A     		ldr	r7, [r0, #44]
 9424              	.LVL796:
5006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9425              		.loc 1 5006 0
 9426 0004 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 9427 0008 012B     		cmp	r3, #1
 9428 000a 7CD0     		beq	.L737
 9429 000c 1646     		mov	r6, r2
 9430 000e 0D46     		mov	r5, r1
 9431 0010 0446     		mov	r4, r0
5006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9432              		.loc 1 5006 0 is_stmt 0 discriminator 2
 9433 0012 0123     		movs	r3, #1
 9434 0014 80F84030 		strb	r3, [r0, #64]
5009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9435              		.loc 1 5009 0 is_stmt 1 discriminator 2
 9436 0018 11F0200F 		tst	r1, #32
 9437 001c 02D0     		beq	.L726
5009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9438              		.loc 1 5009 0 is_stmt 0 discriminator 1
 9439 001e 12F0200F 		tst	r2, #32
 9440 0022 15D1     		bne	.L742
ARM GAS  /tmp/ccX4fpHz.s 			page 308


 9441              	.LVL797:
 9442              	.L726:
5015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9443              		.loc 1 5015 0 is_stmt 1
 9444 0024 15F0100F 		tst	r5, #16
 9445 0028 5ED0     		beq	.L727
5015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9446              		.loc 1 5015 0 is_stmt 0 discriminator 1
 9447 002a 16F0100F 		tst	r6, #16
 9448 002e 5BD0     		beq	.L727
5021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (I2C_CHECK_IT_SOURCE(ITSources, I2C_CR1_RXDMAEN) != RESET))
 9449              		.loc 1 5021 0 is_stmt 1
 9450 0030 C6F38033 		ubfx	r3, r6, #14, #1
 9451 0034 13B9     		cbnz	r3, .L728
5021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (I2C_CHECK_IT_SOURCE(ITSources, I2C_CR1_RXDMAEN) != RESET))
 9452              		.loc 1 5021 0 is_stmt 0 discriminator 1
 9453 0036 16F4004F 		tst	r6, #32768
 9454 003a 51D0     		beq	.L729
 9455              	.L728:
5025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 9456              		.loc 1 5025 0 is_stmt 1
 9457 003c E26B     		ldr	r2, [r4, #60]
 9458 003e 52B1     		cbz	r2, .L738
5027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 9459              		.loc 1 5027 0
 9460 0040 16F4004F 		tst	r6, #32768
 9461 0044 09D0     		beq	.L739
5029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
 9462              		.loc 1 5029 0
 9463 0046 1268     		ldr	r2, [r2]
 9464 0048 5268     		ldr	r2, [r2, #4]
 9465 004a 22B3     		cbz	r2, .L740
5003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9466              		.loc 1 5003 0
 9467 004c 0021     		movs	r1, #0
 9468 004e 05E0     		b	.L730
 9469              	.LVL798:
 9470              	.L742:
5012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 9471              		.loc 1 5012 0
 9472 0050 FFF7FEFF 		bl	I2C_ITSlaveCplt
 9473              	.LVL799:
 9474 0054 E6E7     		b	.L726
 9475              	.L738:
5003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9476              		.loc 1 5003 0
 9477 0056 0021     		movs	r1, #0
 9478 0058 00E0     		b	.L730
 9479              	.L739:
 9480 005a 0021     		movs	r1, #0
 9481              	.L730:
 9482              	.LVL800:
5037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 9483              		.loc 1 5037 0
 9484 005c A26B     		ldr	r2, [r4, #56]
 9485 005e 1AB1     		cbz	r2, .L731
5039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
ARM GAS  /tmp/ccX4fpHz.s 			page 309


 9486              		.loc 1 5039 0
 9487 0060 13B1     		cbz	r3, .L731
5041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
 9488              		.loc 1 5041 0
 9489 0062 1368     		ldr	r3, [r2]
 9490 0064 5B68     		ldr	r3, [r3, #4]
 9491 0066 C3B1     		cbz	r3, .L732
 9492              	.L731:
5048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 9493              		.loc 1 5048 0
 9494 0068 B9B9     		cbnz	r1, .L732
5077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9495              		.loc 1 5077 0
 9496 006a 2368     		ldr	r3, [r4]
 9497 006c 1022     		movs	r2, #16
 9498 006e DA61     		str	r2, [r3, #28]
5080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9499              		.loc 1 5080 0
 9500 0070 636C     		ldr	r3, [r4, #68]
 9501 0072 43F00403 		orr	r3, r3, #4
 9502 0076 6364     		str	r3, [r4, #68]
5082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 9503              		.loc 1 5082 0
 9504 0078 B7F1807F 		cmp	r7, #16777216
 9505 007c 14BF     		ite	ne
 9506 007e 0023     		movne	r3, #0
 9507 0080 0123     		moveq	r3, #1
 9508 0082 002F     		cmp	r7, #0
 9509 0084 14BF     		ite	ne
 9510 0086 1F46     		movne	r7, r3
 9511 0088 0127     		moveq	r7, #1
 9512              	.LVL801:
 9513 008a 9FB3     		cbz	r7, .L735
5085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 9514              		.loc 1 5085 0
 9515 008c 616C     		ldr	r1, [r4, #68]
 9516              	.LVL802:
 9517 008e 2046     		mov	r0, r4
 9518 0090 FFF7FEFF 		bl	I2C_ITError
 9519              	.LVL803:
 9520 0094 2EE0     		b	.L735
 9521              	.LVL804:
 9522              	.L740:
5031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
 9523              		.loc 1 5031 0
 9524 0096 0121     		movs	r1, #1
 9525 0098 E0E7     		b	.L730
 9526              	.LVL805:
 9527              	.L732:
5050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 9528              		.loc 1 5050 0
 9529 009a 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 9530 009e DBB2     		uxtb	r3, r3
 9531 00a0 282B     		cmp	r3, #40
 9532 00a2 08D0     		beq	.L743
 9533              	.L734:
5055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
ARM GAS  /tmp/ccX4fpHz.s 			page 310


 9534              		.loc 1 5055 0
 9535 00a4 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 9536 00a8 DBB2     		uxtb	r3, r3
 9537 00aa 292B     		cmp	r3, #41
 9538 00ac 0BD0     		beq	.L744
 9539              	.L736:
5070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 9540              		.loc 1 5070 0
 9541 00ae 2368     		ldr	r3, [r4]
 9542 00b0 1022     		movs	r2, #16
 9543 00b2 DA61     		str	r2, [r3, #28]
 9544 00b4 1EE0     		b	.L735
 9545              	.L743:
5050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 9546              		.loc 1 5050 0 discriminator 1
 9547 00b6 B7F1007F 		cmp	r7, #33554432
 9548 00ba F3D1     		bne	.L734
5053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 9549              		.loc 1 5053 0
 9550 00bc 2946     		mov	r1, r5
 9551              	.LVL806:
 9552 00be 2046     		mov	r0, r4
 9553 00c0 FFF7FEFF 		bl	I2C_ITListenCplt
 9554              	.LVL807:
 9555 00c4 16E0     		b	.L735
 9556              	.LVL808:
 9557              	.L744:
5055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 9558              		.loc 1 5055 0 discriminator 1
 9559 00c6 17F5803F 		cmn	r7, #65536
 9560 00ca F0D0     		beq	.L736
5058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9561              		.loc 1 5058 0
 9562 00cc 2368     		ldr	r3, [r4]
 9563 00ce 1022     		movs	r2, #16
 9564 00d0 DA61     		str	r2, [r3, #28]
5061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9565              		.loc 1 5061 0
 9566 00d2 2046     		mov	r0, r4
 9567 00d4 FFF7FEFF 		bl	I2C_Flush_TXDR
 9568              	.LVL809:
5065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 9569              		.loc 1 5065 0
 9570 00d8 2046     		mov	r0, r4
 9571 00da FFF7FEFF 		bl	I2C_ITSlaveSeqCplt
 9572              	.LVL810:
 9573 00de 09E0     		b	.L735
 9574              	.LVL811:
 9575              	.L729:
5092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 9576              		.loc 1 5092 0
 9577 00e0 2368     		ldr	r3, [r4]
 9578 00e2 1022     		movs	r2, #16
 9579 00e4 DA61     		str	r2, [r3, #28]
 9580 00e6 05E0     		b	.L735
 9581              	.L727:
5095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
ARM GAS  /tmp/ccX4fpHz.s 			page 311


 9582              		.loc 1 5095 0
 9583 00e8 15F0080F 		tst	r5, #8
 9584 00ec 02D0     		beq	.L735
5095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9585              		.loc 1 5095 0 is_stmt 0 discriminator 1
 9586 00ee 16F0080F 		tst	r6, #8
 9587 00f2 03D1     		bne	.L745
 9588              	.LVL812:
 9589              	.L735:
5105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9590              		.loc 1 5105 0 is_stmt 1
 9591 00f4 0020     		movs	r0, #0
 9592 00f6 84F84000 		strb	r0, [r4, #64]
 9593              	.LVL813:
 9594              	.L725:
5108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9595              		.loc 1 5108 0
 9596 00fa F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 9597              	.LVL814:
 9598              	.L745:
5097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 9599              		.loc 1 5097 0
 9600 00fc 2946     		mov	r1, r5
 9601 00fe 2046     		mov	r0, r4
 9602 0100 FFF7FEFF 		bl	I2C_ITAddrCplt
 9603              	.LVL815:
 9604 0104 F6E7     		b	.L735
 9605              	.LVL816:
 9606              	.L737:
5006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9607              		.loc 1 5006 0
 9608 0106 0220     		movs	r0, #2
 9609              	.LVL817:
 9610 0108 F7E7     		b	.L725
 9611              		.cfi_endproc
 9612              	.LFE193:
 9614              		.section	.text.I2C_Master_ISR_DMA,"ax",%progbits
 9615              		.align	1
 9616              		.syntax unified
 9617              		.thumb
 9618              		.thumb_func
 9619              		.fpu fpv5-sp-d16
 9621              	I2C_Master_ISR_DMA:
 9622              	.LFB192:
4866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint16_t devaddress;
 9623              		.loc 1 4866 0
 9624              		.cfi_startproc
 9625              		@ args = 0, pretend = 0, frame = 0
 9626              		@ frame_needed = 0, uses_anonymous_args = 0
 9627              	.LVL818:
4871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9628              		.loc 1 4871 0
 9629 0000 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 9630 0004 012B     		cmp	r3, #1
 9631 0006 00F09980 		beq	.L759
4866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint16_t devaddress;
 9632              		.loc 1 4866 0 discriminator 2
ARM GAS  /tmp/ccX4fpHz.s 			page 312


 9633 000a 10B5     		push	{r4, lr}
 9634              	.LCFI130:
 9635              		.cfi_def_cfa_offset 8
 9636              		.cfi_offset 4, -8
 9637              		.cfi_offset 14, -4
 9638 000c 82B0     		sub	sp, sp, #8
 9639              	.LCFI131:
 9640              		.cfi_def_cfa_offset 16
 9641 000e 0446     		mov	r4, r0
4871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9642              		.loc 1 4871 0 discriminator 2
 9643 0010 0123     		movs	r3, #1
 9644 0012 80F84030 		strb	r3, [r0, #64]
4873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9645              		.loc 1 4873 0 discriminator 2
 9646 0016 11F0100F 		tst	r1, #16
 9647 001a 02D0     		beq	.L748
4873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9648              		.loc 1 4873 0 is_stmt 0 discriminator 1
 9649 001c 12F0100F 		tst	r2, #16
 9650 0020 31D1     		bne	.L765
 9651              	.L748:
4889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9652              		.loc 1 4889 0 is_stmt 1
 9653 0022 11F0800F 		tst	r1, #128
 9654 0026 5FD0     		beq	.L750
4889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9655              		.loc 1 4889 0 is_stmt 0 discriminator 1
 9656 0028 12F0400F 		tst	r2, #64
 9657 002c 5CD0     		beq	.L750
4892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9658              		.loc 1 4892 0 is_stmt 1
 9659 002e 2268     		ldr	r2, [r4]
 9660              	.LVL819:
 9661 0030 1368     		ldr	r3, [r2]
 9662 0032 23F04003 		bic	r3, r3, #64
 9663 0036 1360     		str	r3, [r2]
4894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 9664              		.loc 1 4894 0
 9665 0038 638D     		ldrh	r3, [r4, #42]
 9666 003a 9BB2     		uxth	r3, r3
 9667 003c 002B     		cmp	r3, #0
 9668 003e 45D0     		beq	.L751
4897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9669              		.loc 1 4897 0
 9670 0040 2368     		ldr	r3, [r4]
 9671 0042 5968     		ldr	r1, [r3, #4]
 9672              	.LVL820:
 9673 0044 C1F30901 		ubfx	r1, r1, #0, #10
 9674              	.LVL821:
4900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 9675              		.loc 1 4900 0
 9676 0048 638D     		ldrh	r3, [r4, #42]
 9677 004a 9BB2     		uxth	r3, r3
 9678 004c FF2B     		cmp	r3, #255
 9679 004e 2CD9     		bls	.L752
4902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         xfermode = I2C_RELOAD_MODE;
ARM GAS  /tmp/ccX4fpHz.s 			page 313


 9680              		.loc 1 4902 0
 9681 0050 FF23     		movs	r3, #255
 9682 0052 2385     		strh	r3, [r4, #40]	@ movhi
 9683              	.LVL822:
4903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 9684              		.loc 1 4903 0
 9685 0054 4FF08073 		mov	r3, #16777216
 9686              	.LVL823:
 9687              	.L753:
4919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9688              		.loc 1 4919 0
 9689 0058 94F82820 		ldrb	r2, [r4, #40]	@ zero_extendqisi2
 9690 005c 0020     		movs	r0, #0
 9691              	.LVL824:
 9692 005e 0090     		str	r0, [sp]
 9693 0060 2046     		mov	r0, r4
 9694 0062 FFF7FEFF 		bl	I2C_TransferConfig
 9695              	.LVL825:
4922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9696              		.loc 1 4922 0
 9697 0066 638D     		ldrh	r3, [r4, #42]
 9698 0068 228D     		ldrh	r2, [r4, #40]
 9699 006a 9B1A     		subs	r3, r3, r2
 9700 006c 9BB2     		uxth	r3, r3
 9701 006e 6385     		strh	r3, [r4, #42]	@ movhi
4925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 9702              		.loc 1 4925 0
 9703 0070 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 9704 0074 DBB2     		uxtb	r3, r3
 9705 0076 222B     		cmp	r3, #34
 9706 0078 22D0     		beq	.L766
4931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 9707              		.loc 1 4931 0
 9708 007a 2268     		ldr	r2, [r4]
 9709 007c 1368     		ldr	r3, [r2]
 9710 007e 43F48043 		orr	r3, r3, #16384
 9711 0082 1360     		str	r3, [r2]
 9712 0084 0CE0     		b	.L749
 9713              	.LVL826:
 9714              	.L765:
4876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9715              		.loc 1 4876 0
 9716 0086 0368     		ldr	r3, [r0]
 9717 0088 1022     		movs	r2, #16
 9718              	.LVL827:
 9719 008a DA61     		str	r2, [r3, #28]
4879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9720              		.loc 1 4879 0
 9721 008c 436C     		ldr	r3, [r0, #68]
 9722 008e 43F00403 		orr	r3, r3, #4
 9723 0092 4364     		str	r3, [r0, #68]
4884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9724              		.loc 1 4884 0
 9725 0094 1221     		movs	r1, #18
 9726              	.LVL828:
 9727 0096 FFF7FEFF 		bl	I2C_Enable_IRQ
 9728              	.LVL829:
ARM GAS  /tmp/ccX4fpHz.s 			page 314


4887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 9729              		.loc 1 4887 0
 9730 009a 2046     		mov	r0, r4
 9731 009c FFF7FEFF 		bl	I2C_Flush_TXDR
 9732              	.LVL830:
 9733              	.L749:
4987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9734              		.loc 1 4987 0
 9735 00a0 0020     		movs	r0, #0
 9736 00a2 84F84000 		strb	r0, [r4, #64]
4990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9737              		.loc 1 4990 0
 9738 00a6 02B0     		add	sp, sp, #8
 9739              	.LCFI132:
 9740              		.cfi_remember_state
 9741              		.cfi_def_cfa_offset 8
 9742              		@ sp needed
 9743 00a8 10BD     		pop	{r4, pc}
 9744              	.LVL831:
 9745              	.L752:
 9746              	.LCFI133:
 9747              		.cfi_restore_state
4907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->XferOptions != I2C_NO_OPTION_FRAME)
 9748              		.loc 1 4907 0
 9749 00aa 638D     		ldrh	r3, [r4, #42]
 9750 00ac 2385     		strh	r3, [r4, #40]	@ movhi
4908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 9751              		.loc 1 4908 0
 9752 00ae E36A     		ldr	r3, [r4, #44]
 9753 00b0 13F5803F 		cmn	r3, #65536
 9754 00b4 01D0     		beq	.L760
4910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 9755              		.loc 1 4910 0
 9756 00b6 E36A     		ldr	r3, [r4, #44]
 9757              	.LVL832:
 9758 00b8 CEE7     		b	.L753
 9759              	.LVL833:
 9760              	.L760:
4914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 9761              		.loc 1 4914 0
 9762 00ba 4FF00073 		mov	r3, #33554432
 9763 00be CBE7     		b	.L753
 9764              	.LVL834:
 9765              	.L766:
4927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 9766              		.loc 1 4927 0
 9767 00c0 2268     		ldr	r2, [r4]
 9768 00c2 1368     		ldr	r3, [r2]
 9769 00c4 43F40043 		orr	r3, r3, #32768
 9770 00c8 1360     		str	r3, [r2]
 9771 00ca E9E7     		b	.L749
 9772              	.LVL835:
 9773              	.L751:
4937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 9774              		.loc 1 4937 0
 9775 00cc 2368     		ldr	r3, [r4]
 9776 00ce 5B68     		ldr	r3, [r3, #4]
ARM GAS  /tmp/ccX4fpHz.s 			page 315


 9777 00d0 13F0007F 		tst	r3, #33554432
 9778 00d4 03D1     		bne	.L755
4940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 9779              		.loc 1 4940 0
 9780 00d6 2046     		mov	r0, r4
 9781              	.LVL836:
 9782 00d8 FFF7FEFF 		bl	I2C_ITMasterSeqCplt
 9783              	.LVL837:
 9784 00dc E0E7     		b	.L749
 9785              	.LVL838:
 9786              	.L755:
4946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 9787              		.loc 1 4946 0
 9788 00de 4021     		movs	r1, #64
 9789              	.LVL839:
 9790 00e0 2046     		mov	r0, r4
 9791              	.LVL840:
 9792 00e2 FFF7FEFF 		bl	I2C_ITError
 9793              	.LVL841:
 9794 00e6 DBE7     		b	.L749
 9795              	.LVL842:
 9796              	.L750:
4950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9797              		.loc 1 4950 0
 9798 00e8 11F0400F 		tst	r1, #64
 9799 00ec 1CD0     		beq	.L756
4950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9800              		.loc 1 4950 0 is_stmt 0 discriminator 1
 9801 00ee 12F0400F 		tst	r2, #64
 9802 00f2 19D0     		beq	.L756
4952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 9803              		.loc 1 4952 0 is_stmt 1
 9804 00f4 638D     		ldrh	r3, [r4, #42]
 9805 00f6 9BB2     		uxth	r3, r3
 9806 00f8 8BB9     		cbnz	r3, .L757
4954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 9807              		.loc 1 4954 0
 9808 00fa 2368     		ldr	r3, [r4]
 9809 00fc 5A68     		ldr	r2, [r3, #4]
 9810              	.LVL843:
 9811 00fe 12F0007F 		tst	r2, #33554432
 9812 0102 CDD1     		bne	.L749
4957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 9813              		.loc 1 4957 0
 9814 0104 E26A     		ldr	r2, [r4, #44]
 9815 0106 12F5803F 		cmn	r2, #65536
 9816 010a 04D1     		bne	.L758
4960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 9817              		.loc 1 4960 0
 9818 010c 5A68     		ldr	r2, [r3, #4]
 9819 010e 42F48042 		orr	r2, r2, #16384
 9820 0112 5A60     		str	r2, [r3, #4]
 9821 0114 C4E7     		b	.L749
 9822              	.L758:
4965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 9823              		.loc 1 4965 0
 9824 0116 2046     		mov	r0, r4
ARM GAS  /tmp/ccX4fpHz.s 			page 316


 9825              	.LVL844:
 9826 0118 FFF7FEFF 		bl	I2C_ITMasterSeqCplt
 9827              	.LVL845:
 9828 011c C0E7     		b	.L749
 9829              	.LVL846:
 9830              	.L757:
4973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 9831              		.loc 1 4973 0
 9832 011e 4021     		movs	r1, #64
 9833              	.LVL847:
 9834 0120 2046     		mov	r0, r4
 9835              	.LVL848:
 9836 0122 FFF7FEFF 		bl	I2C_ITError
 9837              	.LVL849:
 9838 0126 BBE7     		b	.L749
 9839              	.LVL850:
 9840              	.L756:
4976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9841              		.loc 1 4976 0
 9842 0128 11F0200F 		tst	r1, #32
 9843 012c B8D0     		beq	.L749
4976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9844              		.loc 1 4976 0 is_stmt 0 discriminator 1
 9845 012e 12F0200F 		tst	r2, #32
 9846 0132 B5D0     		beq	.L749
4979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 9847              		.loc 1 4979 0 is_stmt 1
 9848 0134 2046     		mov	r0, r4
 9849              	.LVL851:
 9850 0136 FFF7FEFF 		bl	I2C_ITMasterCplt
 9851              	.LVL852:
 9852 013a B1E7     		b	.L749
 9853              	.LVL853:
 9854              	.L759:
 9855              	.LCFI134:
 9856              		.cfi_def_cfa_offset 0
 9857              		.cfi_restore 4
 9858              		.cfi_restore 14
4871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9859              		.loc 1 4871 0
 9860 013c 0220     		movs	r0, #2
 9861              	.LVL854:
4990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9862              		.loc 1 4990 0
 9863 013e 7047     		bx	lr
 9864              		.cfi_endproc
 9865              	.LFE192:
 9867              		.section	.text.I2C_DMAError,"ax",%progbits
 9868              		.align	1
 9869              		.syntax unified
 9870              		.thumb
 9871              		.thumb_func
 9872              		.fpu fpv5-sp-d16
 9874              	I2C_DMAError:
 9875              	.LFB208:
6023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t treatdmaerror = 0U;
 9876              		.loc 1 6023 0
ARM GAS  /tmp/ccX4fpHz.s 			page 317


 9877              		.cfi_startproc
 9878              		@ args = 0, pretend = 0, frame = 0
 9879              		@ frame_needed = 0, uses_anonymous_args = 0
 9880              	.LVL855:
 9881 0000 38B5     		push	{r3, r4, r5, lr}
 9882              	.LCFI135:
 9883              		.cfi_def_cfa_offset 16
 9884              		.cfi_offset 3, -16
 9885              		.cfi_offset 4, -12
 9886              		.cfi_offset 5, -8
 9887              		.cfi_offset 14, -4
 9888              	.LVL856:
6025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9889              		.loc 1 6025 0
 9890 0002 846B     		ldr	r4, [r0, #56]
 9891              	.LVL857:
6027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9892              		.loc 1 6027 0
 9893 0004 A36B     		ldr	r3, [r4, #56]
 9894 0006 7BB1     		cbz	r3, .L771
6029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 9895              		.loc 1 6029 0
 9896 0008 1B68     		ldr	r3, [r3]
 9897 000a 5B68     		ldr	r3, [r3, #4]
 9898 000c 73B1     		cbz	r3, .L772
6024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 9899              		.loc 1 6024 0
 9900 000e 0025     		movs	r5, #0
 9901              	.L768:
 9902              	.LVL858:
6035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9903              		.loc 1 6035 0
 9904 0010 E36B     		ldr	r3, [r4, #60]
 9905 0012 1BB1     		cbz	r3, .L769
6037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 9906              		.loc 1 6037 0
 9907 0014 1B68     		ldr	r3, [r3]
 9908 0016 5B68     		ldr	r3, [r3, #4]
 9909 0018 03B9     		cbnz	r3, .L769
6039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 9910              		.loc 1 6039 0
 9911 001a 0125     		movs	r5, #1
 9912              	.LVL859:
 9913              	.L769:
6044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9914              		.loc 1 6044 0
 9915 001c FFF7FEFF 		bl	HAL_DMA_GetError
 9916              	.LVL860:
 9917 0020 0228     		cmp	r0, #2
 9918 0022 00D0     		beq	.L767
6044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9919              		.loc 1 6044 0 is_stmt 0 discriminator 1
 9920 0024 25B9     		cbnz	r5, .L775
 9921              	.L767:
6052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9922              		.loc 1 6052 0 is_stmt 1
 9923 0026 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  /tmp/ccX4fpHz.s 			page 318


 9924              	.LVL861:
 9925              	.L771:
6024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 9926              		.loc 1 6024 0
 9927 0028 0025     		movs	r5, #0
 9928 002a F1E7     		b	.L768
 9929              	.L772:
6031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 9930              		.loc 1 6031 0
 9931 002c 0125     		movs	r5, #1
 9932 002e EFE7     		b	.L768
 9933              	.LVL862:
 9934              	.L775:
6047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9935              		.loc 1 6047 0
 9936 0030 2268     		ldr	r2, [r4]
 9937 0032 5368     		ldr	r3, [r2, #4]
 9938 0034 43F40043 		orr	r3, r3, #32768
 9939 0038 5360     		str	r3, [r2, #4]
6050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 9940              		.loc 1 6050 0
 9941 003a 1021     		movs	r1, #16
 9942 003c 2046     		mov	r0, r4
 9943 003e FFF7FEFF 		bl	I2C_ITError
 9944              	.LVL863:
6052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9945              		.loc 1 6052 0
 9946 0042 F0E7     		b	.L767
 9947              		.cfi_endproc
 9948              	.LFE208:
 9950              		.section	.text.I2C_DMAMasterTransmitCplt,"ax",%progbits
 9951              		.align	1
 9952              		.syntax unified
 9953              		.thumb
 9954              		.thumb_func
 9955              		.fpu fpv5-sp-d16
 9957              	I2C_DMAMasterTransmitCplt:
 9958              	.LFB204:
5873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 9959              		.loc 1 5873 0
 9960              		.cfi_startproc
 9961              		@ args = 0, pretend = 0, frame = 0
 9962              		@ frame_needed = 0, uses_anonymous_args = 0
 9963              	.LVL864:
 9964 0000 10B5     		push	{r4, lr}
 9965              	.LCFI136:
 9966              		.cfi_def_cfa_offset 8
 9967              		.cfi_offset 4, -8
 9968              		.cfi_offset 14, -4
5874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9969              		.loc 1 5874 0
 9970 0002 846B     		ldr	r4, [r0, #56]
 9971              	.LVL865:
5877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9972              		.loc 1 5877 0
 9973 0004 2268     		ldr	r2, [r4]
 9974 0006 1368     		ldr	r3, [r2]
ARM GAS  /tmp/ccX4fpHz.s 			page 319


 9975 0008 23F48043 		bic	r3, r3, #16384
 9976 000c 1360     		str	r3, [r2]
5880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9977              		.loc 1 5880 0
 9978 000e 638D     		ldrh	r3, [r4, #42]
 9979 0010 9BB2     		uxth	r3, r3
 9980 0012 ABB1     		cbz	r3, .L783
5889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9981              		.loc 1 5889 0
 9982 0014 238D     		ldrh	r3, [r4, #40]
 9983 0016 616A     		ldr	r1, [r4, #36]
 9984 0018 1944     		add	r1, r1, r3
 9985 001a 6162     		str	r1, [r4, #36]
5892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 9986              		.loc 1 5892 0
 9987 001c 638D     		ldrh	r3, [r4, #42]
 9988 001e 9BB2     		uxth	r3, r3
 9989 0020 FF2B     		cmp	r3, #255
 9990 0022 12D9     		bls	.L779
5894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 9991              		.loc 1 5894 0
 9992 0024 FF23     		movs	r3, #255
 9993 0026 2385     		strh	r3, [r4, #40]	@ movhi
 9994              	.L780:
5902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 9995              		.loc 1 5902 0
 9996 0028 2268     		ldr	r2, [r4]
 9997 002a 238D     		ldrh	r3, [r4, #40]
 9998 002c 2832     		adds	r2, r2, #40
 9999 002e A06B     		ldr	r0, [r4, #56]
 10000              	.LVL866:
 10001 0030 FFF7FEFF 		bl	HAL_DMA_Start_IT
 10002              	.LVL867:
 10003 0034 60B9     		cbnz	r0, .L784
5910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 10004              		.loc 1 5910 0
 10005 0036 1221     		movs	r1, #18
 10006 0038 2046     		mov	r0, r4
 10007 003a FFF7FEFF 		bl	I2C_Enable_IRQ
 10008              	.LVL868:
 10009              	.L776:
5913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 10010              		.loc 1 5913 0
 10011 003e 10BD     		pop	{r4, pc}
 10012              	.LVL869:
 10013              	.L783:
5883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 10014              		.loc 1 5883 0
 10015 0040 1221     		movs	r1, #18
 10016 0042 2046     		mov	r0, r4
 10017              	.LVL870:
 10018 0044 FFF7FEFF 		bl	I2C_Enable_IRQ
 10019              	.LVL871:
 10020 0048 F9E7     		b	.L776
 10021              	.LVL872:
 10022              	.L779:
5898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
ARM GAS  /tmp/ccX4fpHz.s 			page 320


 10023              		.loc 1 5898 0
 10024 004a 638D     		ldrh	r3, [r4, #42]
 10025 004c 2385     		strh	r3, [r4, #40]	@ movhi
 10026 004e EBE7     		b	.L780
 10027              	.LVL873:
 10028              	.L784:
5905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 10029              		.loc 1 5905 0
 10030 0050 1021     		movs	r1, #16
 10031 0052 2046     		mov	r0, r4
 10032 0054 FFF7FEFF 		bl	I2C_ITError
 10033              	.LVL874:
 10034 0058 F1E7     		b	.L776
 10035              		.cfi_endproc
 10036              	.LFE204:
 10038              		.section	.text.I2C_DMAMasterReceiveCplt,"ax",%progbits
 10039              		.align	1
 10040              		.syntax unified
 10041              		.thumb
 10042              		.thumb_func
 10043              		.fpu fpv5-sp-d16
 10045              	I2C_DMAMasterReceiveCplt:
 10046              	.LFB206:
5948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 10047              		.loc 1 5948 0
 10048              		.cfi_startproc
 10049              		@ args = 0, pretend = 0, frame = 0
 10050              		@ frame_needed = 0, uses_anonymous_args = 0
 10051              	.LVL875:
 10052 0000 10B5     		push	{r4, lr}
 10053              	.LCFI137:
 10054              		.cfi_def_cfa_offset 8
 10055              		.cfi_offset 4, -8
 10056              		.cfi_offset 14, -4
5949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 10057              		.loc 1 5949 0
 10058 0002 846B     		ldr	r4, [r0, #56]
 10059              	.LVL876:
5952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 10060              		.loc 1 5952 0
 10061 0004 2268     		ldr	r2, [r4]
 10062 0006 1368     		ldr	r3, [r2]
 10063 0008 23F40043 		bic	r3, r3, #32768
 10064 000c 1360     		str	r3, [r2]
5955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 10065              		.loc 1 5955 0
 10066 000e 638D     		ldrh	r3, [r4, #42]
 10067 0010 9BB2     		uxth	r3, r3
 10068 0012 ABB1     		cbz	r3, .L792
5964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 10069              		.loc 1 5964 0
 10070 0014 238D     		ldrh	r3, [r4, #40]
 10071 0016 626A     		ldr	r2, [r4, #36]
 10072 0018 1A44     		add	r2, r2, r3
 10073 001a 6262     		str	r2, [r4, #36]
5967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 10074              		.loc 1 5967 0
ARM GAS  /tmp/ccX4fpHz.s 			page 321


 10075 001c 638D     		ldrh	r3, [r4, #42]
 10076 001e 9BB2     		uxth	r3, r3
 10077 0020 FF2B     		cmp	r3, #255
 10078 0022 12D9     		bls	.L788
5969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 10079              		.loc 1 5969 0
 10080 0024 FF23     		movs	r3, #255
 10081 0026 2385     		strh	r3, [r4, #40]	@ movhi
 10082              	.L789:
5977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 10083              		.loc 1 5977 0
 10084 0028 2168     		ldr	r1, [r4]
 10085 002a 238D     		ldrh	r3, [r4, #40]
 10086 002c 2431     		adds	r1, r1, #36
 10087 002e E06B     		ldr	r0, [r4, #60]
 10088              	.LVL877:
 10089 0030 FFF7FEFF 		bl	HAL_DMA_Start_IT
 10090              	.LVL878:
 10091 0034 60B9     		cbnz	r0, .L793
5985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 10092              		.loc 1 5985 0
 10093 0036 1221     		movs	r1, #18
 10094 0038 2046     		mov	r0, r4
 10095 003a FFF7FEFF 		bl	I2C_Enable_IRQ
 10096              	.LVL879:
 10097              	.L785:
5988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 10098              		.loc 1 5988 0
 10099 003e 10BD     		pop	{r4, pc}
 10100              	.LVL880:
 10101              	.L792:
5958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 10102              		.loc 1 5958 0
 10103 0040 1221     		movs	r1, #18
 10104 0042 2046     		mov	r0, r4
 10105              	.LVL881:
 10106 0044 FFF7FEFF 		bl	I2C_Enable_IRQ
 10107              	.LVL882:
 10108 0048 F9E7     		b	.L785
 10109              	.LVL883:
 10110              	.L788:
5973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 10111              		.loc 1 5973 0
 10112 004a 638D     		ldrh	r3, [r4, #42]
 10113 004c 2385     		strh	r3, [r4, #40]	@ movhi
 10114 004e EBE7     		b	.L789
 10115              	.LVL884:
 10116              	.L793:
5980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 10117              		.loc 1 5980 0
 10118 0050 1021     		movs	r1, #16
 10119 0052 2046     		mov	r0, r4
 10120 0054 FFF7FEFF 		bl	I2C_ITError
 10121              	.LVL885:
 10122 0058 F1E7     		b	.L785
 10123              		.cfi_endproc
 10124              	.LFE206:
ARM GAS  /tmp/ccX4fpHz.s 			page 322


 10126              		.section	.text.HAL_I2C_ER_IRQHandler,"ax",%progbits
 10127              		.align	1
 10128              		.global	HAL_I2C_ER_IRQHandler
 10129              		.syntax unified
 10130              		.thumb
 10131              		.thumb_func
 10132              		.fpu fpv5-sp-d16
 10134              	HAL_I2C_ER_IRQHandler:
 10135              	.LFB176:
4317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t itflags   = READ_REG(hi2c->Instance->ISR);
 10136              		.loc 1 4317 0
 10137              		.cfi_startproc
 10138              		@ args = 0, pretend = 0, frame = 0
 10139              		@ frame_needed = 0, uses_anonymous_args = 0
 10140              	.LVL886:
 10141 0000 10B5     		push	{r4, lr}
 10142              	.LCFI138:
 10143              		.cfi_def_cfa_offset 8
 10144              		.cfi_offset 4, -8
 10145              		.cfi_offset 14, -4
4318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t itsources = READ_REG(hi2c->Instance->CR1);
 10146              		.loc 1 4318 0
 10147 0002 0268     		ldr	r2, [r0]
 10148 0004 9369     		ldr	r3, [r2, #24]
 10149              	.LVL887:
4319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmperror;
 10150              		.loc 1 4319 0
 10151 0006 1168     		ldr	r1, [r2]
 10152              	.LVL888:
4323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 10153              		.loc 1 4323 0
 10154 0008 13F4807F 		tst	r3, #256
 10155 000c 09D0     		beq	.L795
4323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 10156              		.loc 1 4323 0 is_stmt 0 discriminator 1
 10157 000e 11F0800F 		tst	r1, #128
 10158 0012 06D0     		beq	.L795
4325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 10159              		.loc 1 4325 0 is_stmt 1
 10160 0014 446C     		ldr	r4, [r0, #68]
 10161 0016 44F00104 		orr	r4, r4, #1
 10162 001a 4464     		str	r4, [r0, #68]
4328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 10163              		.loc 1 4328 0
 10164 001c 4FF48074 		mov	r4, #256
 10165 0020 D461     		str	r4, [r2, #28]
 10166              	.L795:
4332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 10167              		.loc 1 4332 0
 10168 0022 13F4806F 		tst	r3, #1024
 10169 0026 0AD0     		beq	.L796
4332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 10170              		.loc 1 4332 0 is_stmt 0 discriminator 1
 10171 0028 11F0800F 		tst	r1, #128
 10172 002c 07D0     		beq	.L796
4334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 10173              		.loc 1 4334 0 is_stmt 1
ARM GAS  /tmp/ccX4fpHz.s 			page 323


 10174 002e 426C     		ldr	r2, [r0, #68]
 10175 0030 42F00802 		orr	r2, r2, #8
 10176 0034 4264     		str	r2, [r0, #68]
4337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 10177              		.loc 1 4337 0
 10178 0036 0268     		ldr	r2, [r0]
 10179 0038 4FF48064 		mov	r4, #1024
 10180 003c D461     		str	r4, [r2, #28]
 10181              	.L796:
4341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 10182              		.loc 1 4341 0
 10183 003e 13F4007F 		tst	r3, #512
 10184 0042 0AD0     		beq	.L797
4341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 10185              		.loc 1 4341 0 is_stmt 0 discriminator 1
 10186 0044 11F0800F 		tst	r1, #128
 10187 0048 07D0     		beq	.L797
4343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 10188              		.loc 1 4343 0 is_stmt 1
 10189 004a 436C     		ldr	r3, [r0, #68]
 10190              	.LVL889:
 10191 004c 43F00203 		orr	r3, r3, #2
 10192 0050 4364     		str	r3, [r0, #68]
4346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 10193              		.loc 1 4346 0
 10194 0052 0368     		ldr	r3, [r0]
 10195 0054 4FF40072 		mov	r2, #512
 10196 0058 DA61     		str	r2, [r3, #28]
 10197              	.L797:
4350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 10198              		.loc 1 4350 0
 10199 005a 416C     		ldr	r1, [r0, #68]
 10200              	.LVL890:
4353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 10201              		.loc 1 4353 0
 10202 005c 11F00B0F 		tst	r1, #11
 10203 0060 00D1     		bne	.L800
 10204              	.LVL891:
 10205              	.L794:
4357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 10206              		.loc 1 4357 0
 10207 0062 10BD     		pop	{r4, pc}
 10208              	.LVL892:
 10209              	.L800:
4355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 10210              		.loc 1 4355 0
 10211 0064 FFF7FEFF 		bl	I2C_ITError
 10212              	.LVL893:
4357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 10213              		.loc 1 4357 0
 10214 0068 FBE7     		b	.L794
 10215              		.cfi_endproc
 10216              	.LFE176:
 10218              		.section	.text.I2C_DMAAbort,"ax",%progbits
 10219              		.align	1
 10220              		.syntax unified
 10221              		.thumb
ARM GAS  /tmp/ccX4fpHz.s 			page 324


 10222              		.thumb_func
 10223              		.fpu fpv5-sp-d16
 10225              	I2C_DMAAbort:
 10226              	.LFB209:
6061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 10227              		.loc 1 6061 0
 10228              		.cfi_startproc
 10229              		@ args = 0, pretend = 0, frame = 0
 10230              		@ frame_needed = 0, uses_anonymous_args = 0
 10231              	.LVL894:
 10232 0000 08B5     		push	{r3, lr}
 10233              	.LCFI139:
 10234              		.cfi_def_cfa_offset 8
 10235              		.cfi_offset 3, -8
 10236              		.cfi_offset 14, -4
6062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 10237              		.loc 1 6062 0
 10238 0002 806B     		ldr	r0, [r0, #56]
 10239              	.LVL895:
6065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->hdmarx->XferAbortCallback = NULL;
 10240              		.loc 1 6065 0
 10241 0004 826B     		ldr	r2, [r0, #56]
 10242 0006 0023     		movs	r3, #0
 10243 0008 1365     		str	r3, [r2, #80]
6066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 10244              		.loc 1 6066 0
 10245 000a C26B     		ldr	r2, [r0, #60]
 10246 000c 1365     		str	r3, [r2, #80]
6069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 10247              		.loc 1 6069 0
 10248 000e 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 10249 0012 DBB2     		uxtb	r3, r3
 10250 0014 602B     		cmp	r3, #96
 10251 0016 02D0     		beq	.L805
6086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 10252              		.loc 1 6086 0
 10253 0018 FFF7FEFF 		bl	HAL_I2C_ErrorCallback
 10254              	.LVL896:
 10255              	.L801:
6089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 10256              		.loc 1 6089 0
 10257 001c 08BD     		pop	{r3, pc}
 10258              	.LVL897:
 10259              	.L805:
6071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 10260              		.loc 1 6071 0
 10261 001e 2023     		movs	r3, #32
 10262 0020 80F84130 		strb	r3, [r0, #65]
6077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 10263              		.loc 1 6077 0
 10264 0024 FFF7FEFF 		bl	HAL_I2C_AbortCpltCallback
 10265              	.LVL898:
 10266 0028 F8E7     		b	.L801
 10267              		.cfi_endproc
 10268              	.LFE209:
 10270              		.section	.text.HAL_I2C_GetState,"ax",%progbits
 10271              		.align	1
ARM GAS  /tmp/ccX4fpHz.s 			page 325


 10272              		.global	HAL_I2C_GetState
 10273              		.syntax unified
 10274              		.thumb
 10275              		.thumb_func
 10276              		.fpu fpv5-sp-d16
 10278              	HAL_I2C_GetState:
 10279              	.LFB187:
4548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Return I2C handle state */
 10280              		.loc 1 4548 0
 10281              		.cfi_startproc
 10282              		@ args = 0, pretend = 0, frame = 0
 10283              		@ frame_needed = 0, uses_anonymous_args = 0
 10284              		@ link register save eliminated.
 10285              	.LVL899:
4550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 10286              		.loc 1 4550 0
 10287 0000 90F84100 		ldrb	r0, [r0, #65]	@ zero_extendqisi2
 10288              	.LVL900:
4551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 10289              		.loc 1 4551 0
 10290 0004 7047     		bx	lr
 10291              		.cfi_endproc
 10292              	.LFE187:
 10294              		.section	.text.HAL_I2C_GetMode,"ax",%progbits
 10295              		.align	1
 10296              		.global	HAL_I2C_GetMode
 10297              		.syntax unified
 10298              		.thumb
 10299              		.thumb_func
 10300              		.fpu fpv5-sp-d16
 10302              	HAL_I2C_GetMode:
 10303              	.LFB188:
4560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return hi2c->Mode;
 10304              		.loc 1 4560 0
 10305              		.cfi_startproc
 10306              		@ args = 0, pretend = 0, frame = 0
 10307              		@ frame_needed = 0, uses_anonymous_args = 0
 10308              		@ link register save eliminated.
 10309              	.LVL901:
4561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 10310              		.loc 1 4561 0
 10311 0000 90F84200 		ldrb	r0, [r0, #66]	@ zero_extendqisi2
 10312              	.LVL902:
4562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 10313              		.loc 1 4562 0
 10314 0004 7047     		bx	lr
 10315              		.cfi_endproc
 10316              	.LFE188:
 10318              		.section	.text.HAL_I2C_GetError,"ax",%progbits
 10319              		.align	1
 10320              		.global	HAL_I2C_GetError
 10321              		.syntax unified
 10322              		.thumb
 10323              		.thumb_func
 10324              		.fpu fpv5-sp-d16
 10326              	HAL_I2C_GetError:
 10327              	.LFB189:
ARM GAS  /tmp/ccX4fpHz.s 			page 326


4571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return hi2c->ErrorCode;
 10328              		.loc 1 4571 0
 10329              		.cfi_startproc
 10330              		@ args = 0, pretend = 0, frame = 0
 10331              		@ frame_needed = 0, uses_anonymous_args = 0
 10332              		@ link register save eliminated.
 10333              	.LVL903:
4572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 10334              		.loc 1 4572 0
 10335 0000 406C     		ldr	r0, [r0, #68]
 10336              	.LVL904:
4573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 10337              		.loc 1 4573 0
 10338 0002 7047     		bx	lr
 10339              		.cfi_endproc
 10340              	.LFE189:
 10342              		.text
 10343              	.Letext0:
 10344              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 10345              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 10346              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 10347              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 10348              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 10349              		.file 7 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 10350              		.file 8 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 10351              		.file 9 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 10352              		.file 10 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_i2c.h"
 10353              		.file 11 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
ARM GAS  /tmp/ccX4fpHz.s 			page 327


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f7xx_hal_i2c.c
     /tmp/ccX4fpHz.s:18     .text.I2C_Flush_TXDR:0000000000000000 $t
     /tmp/ccX4fpHz.s:24     .text.I2C_Flush_TXDR:0000000000000000 I2C_Flush_TXDR
     /tmp/ccX4fpHz.s:58     .text.I2C_TransferConfig:0000000000000000 $t
     /tmp/ccX4fpHz.s:64     .text.I2C_TransferConfig:0000000000000000 I2C_TransferConfig
     /tmp/ccX4fpHz.s:110    .text.I2C_Enable_IRQ:0000000000000000 $t
     /tmp/ccX4fpHz.s:116    .text.I2C_Enable_IRQ:0000000000000000 I2C_Enable_IRQ
     /tmp/ccX4fpHz.s:225    .text.I2C_Enable_IRQ:0000000000000078 $d
     /tmp/ccX4fpHz.s:9621   .text.I2C_Master_ISR_DMA:0000000000000000 I2C_Master_ISR_DMA
     /tmp/ccX4fpHz.s:9406   .text.I2C_Slave_ISR_DMA:0000000000000000 I2C_Slave_ISR_DMA
     /tmp/ccX4fpHz.s:231    .text.I2C_Disable_IRQ:0000000000000000 $t
     /tmp/ccX4fpHz.s:237    .text.I2C_Disable_IRQ:0000000000000000 I2C_Disable_IRQ
     /tmp/ccX4fpHz.s:401    .text.I2C_ConvertOtherXferOptions:0000000000000000 $t
     /tmp/ccX4fpHz.s:407    .text.I2C_ConvertOtherXferOptions:0000000000000000 I2C_ConvertOtherXferOptions
     /tmp/ccX4fpHz.s:441    .text.I2C_IsAcknowledgeFailed:0000000000000000 $t
     /tmp/ccX4fpHz.s:447    .text.I2C_IsAcknowledgeFailed:0000000000000000 I2C_IsAcknowledgeFailed
     /tmp/ccX4fpHz.s:552    .text.I2C_WaitOnTXISFlagUntilTimeout:0000000000000000 $t
     /tmp/ccX4fpHz.s:558    .text.I2C_WaitOnTXISFlagUntilTimeout:0000000000000000 I2C_WaitOnTXISFlagUntilTimeout
     /tmp/ccX4fpHz.s:632    .text.I2C_WaitOnFlagUntilTimeout:0000000000000000 $t
     /tmp/ccX4fpHz.s:638    .text.I2C_WaitOnFlagUntilTimeout:0000000000000000 I2C_WaitOnFlagUntilTimeout
     /tmp/ccX4fpHz.s:708    .text.I2C_RequestMemoryWrite:0000000000000000 $t
     /tmp/ccX4fpHz.s:714    .text.I2C_RequestMemoryWrite:0000000000000000 I2C_RequestMemoryWrite
     /tmp/ccX4fpHz.s:811    .text.I2C_RequestMemoryWrite:000000000000006c $d
     /tmp/ccX4fpHz.s:816    .text.I2C_RequestMemoryRead:0000000000000000 $t
     /tmp/ccX4fpHz.s:822    .text.I2C_RequestMemoryRead:0000000000000000 I2C_RequestMemoryRead
     /tmp/ccX4fpHz.s:919    .text.I2C_RequestMemoryRead:000000000000006c $d
     /tmp/ccX4fpHz.s:924    .text.I2C_WaitOnSTOPFlagUntilTimeout:0000000000000000 $t
     /tmp/ccX4fpHz.s:930    .text.I2C_WaitOnSTOPFlagUntilTimeout:0000000000000000 I2C_WaitOnSTOPFlagUntilTimeout
     /tmp/ccX4fpHz.s:1001   .text.I2C_WaitOnRXNEFlagUntilTimeout:0000000000000000 $t
     /tmp/ccX4fpHz.s:1007   .text.I2C_WaitOnRXNEFlagUntilTimeout:0000000000000000 I2C_WaitOnRXNEFlagUntilTimeout
     /tmp/ccX4fpHz.s:1117   .text.HAL_I2C_MspInit:0000000000000000 $t
     /tmp/ccX4fpHz.s:1124   .text.HAL_I2C_MspInit:0000000000000000 HAL_I2C_MspInit
     /tmp/ccX4fpHz.s:1138   .text.HAL_I2C_Init:0000000000000000 $t
     /tmp/ccX4fpHz.s:1145   .text.HAL_I2C_Init:0000000000000000 HAL_I2C_Init
     /tmp/ccX4fpHz.s:1278   .text.HAL_I2C_Init:00000000000000b8 $d
     /tmp/ccX4fpHz.s:1283   .text.HAL_I2C_MspDeInit:0000000000000000 $t
     /tmp/ccX4fpHz.s:1290   .text.HAL_I2C_MspDeInit:0000000000000000 HAL_I2C_MspDeInit
     /tmp/ccX4fpHz.s:1304   .text.HAL_I2C_DeInit:0000000000000000 $t
     /tmp/ccX4fpHz.s:1311   .text.HAL_I2C_DeInit:0000000000000000 HAL_I2C_DeInit
     /tmp/ccX4fpHz.s:1366   .text.HAL_I2C_Master_Transmit:0000000000000000 $t
     /tmp/ccX4fpHz.s:1373   .text.HAL_I2C_Master_Transmit:0000000000000000 HAL_I2C_Master_Transmit
     /tmp/ccX4fpHz.s:1626   .text.HAL_I2C_Master_Transmit:0000000000000178 $d
     /tmp/ccX4fpHz.s:1631   .text.HAL_I2C_Master_Receive:0000000000000000 $t
     /tmp/ccX4fpHz.s:1638   .text.HAL_I2C_Master_Receive:0000000000000000 HAL_I2C_Master_Receive
     /tmp/ccX4fpHz.s:1891   .text.HAL_I2C_Master_Receive:0000000000000178 $d
     /tmp/ccX4fpHz.s:1896   .text.HAL_I2C_Slave_Transmit:0000000000000000 $t
     /tmp/ccX4fpHz.s:1903   .text.HAL_I2C_Slave_Transmit:0000000000000000 HAL_I2C_Slave_Transmit
     /tmp/ccX4fpHz.s:2180   .text.HAL_I2C_Slave_Receive:0000000000000000 $t
     /tmp/ccX4fpHz.s:2187   .text.HAL_I2C_Slave_Receive:0000000000000000 HAL_I2C_Slave_Receive
     /tmp/ccX4fpHz.s:2446   .text.HAL_I2C_Master_Transmit_IT:0000000000000000 $t
     /tmp/ccX4fpHz.s:2453   .text.HAL_I2C_Master_Transmit_IT:0000000000000000 HAL_I2C_Master_Transmit_IT
     /tmp/ccX4fpHz.s:2582   .text.HAL_I2C_Master_Transmit_IT:000000000000008c $d
     /tmp/ccX4fpHz.s:9109   .text.I2C_Master_ISR_IT:0000000000000000 I2C_Master_ISR_IT
     /tmp/ccX4fpHz.s:2589   .text.HAL_I2C_Master_Receive_IT:0000000000000000 $t
     /tmp/ccX4fpHz.s:2596   .text.HAL_I2C_Master_Receive_IT:0000000000000000 HAL_I2C_Master_Receive_IT
     /tmp/ccX4fpHz.s:2725   .text.HAL_I2C_Master_Receive_IT:000000000000008c $d
ARM GAS  /tmp/ccX4fpHz.s 			page 328


     /tmp/ccX4fpHz.s:2732   .text.HAL_I2C_Slave_Transmit_IT:0000000000000000 $t
     /tmp/ccX4fpHz.s:2739   .text.HAL_I2C_Slave_Transmit_IT:0000000000000000 HAL_I2C_Slave_Transmit_IT
     /tmp/ccX4fpHz.s:2819   .text.HAL_I2C_Slave_Transmit_IT:000000000000005c $d
     /tmp/ccX4fpHz.s:8704   .text.I2C_Slave_ISR_IT:0000000000000000 I2C_Slave_ISR_IT
     /tmp/ccX4fpHz.s:2825   .text.HAL_I2C_Slave_Receive_IT:0000000000000000 $t
     /tmp/ccX4fpHz.s:2832   .text.HAL_I2C_Slave_Receive_IT:0000000000000000 HAL_I2C_Slave_Receive_IT
     /tmp/ccX4fpHz.s:2912   .text.HAL_I2C_Slave_Receive_IT:000000000000005c $d
     /tmp/ccX4fpHz.s:2918   .text.HAL_I2C_Master_Transmit_DMA:0000000000000000 $t
     /tmp/ccX4fpHz.s:2925   .text.HAL_I2C_Master_Transmit_DMA:0000000000000000 HAL_I2C_Master_Transmit_DMA
     /tmp/ccX4fpHz.s:3159   .text.HAL_I2C_Master_Transmit_DMA:0000000000000138 $d
     /tmp/ccX4fpHz.s:9957   .text.I2C_DMAMasterTransmitCplt:0000000000000000 I2C_DMAMasterTransmitCplt
     /tmp/ccX4fpHz.s:9874   .text.I2C_DMAError:0000000000000000 I2C_DMAError
     /tmp/ccX4fpHz.s:3169   .text.HAL_I2C_Master_Receive_DMA:0000000000000000 $t
     /tmp/ccX4fpHz.s:3176   .text.HAL_I2C_Master_Receive_DMA:0000000000000000 HAL_I2C_Master_Receive_DMA
     /tmp/ccX4fpHz.s:3406   .text.HAL_I2C_Master_Receive_DMA:0000000000000138 $d
     /tmp/ccX4fpHz.s:10045  .text.I2C_DMAMasterReceiveCplt:0000000000000000 I2C_DMAMasterReceiveCplt
     /tmp/ccX4fpHz.s:3416   .text.HAL_I2C_Slave_Transmit_DMA:0000000000000000 $t
     /tmp/ccX4fpHz.s:3423   .text.HAL_I2C_Slave_Transmit_DMA:0000000000000000 HAL_I2C_Slave_Transmit_DMA
     /tmp/ccX4fpHz.s:3589   .text.HAL_I2C_Slave_Transmit_DMA:00000000000000e4 $d
     /tmp/ccX4fpHz.s:7878   .text.I2C_DMASlaveTransmitCplt:0000000000000000 I2C_DMASlaveTransmitCplt
     /tmp/ccX4fpHz.s:3597   .text.HAL_I2C_Slave_Receive_DMA:0000000000000000 $t
     /tmp/ccX4fpHz.s:3604   .text.HAL_I2C_Slave_Receive_DMA:0000000000000000 HAL_I2C_Slave_Receive_DMA
     /tmp/ccX4fpHz.s:3772   .text.HAL_I2C_Slave_Receive_DMA:00000000000000e8 $d
     /tmp/ccX4fpHz.s:7928   .text.I2C_DMASlaveReceiveCplt:0000000000000000 I2C_DMASlaveReceiveCplt
     /tmp/ccX4fpHz.s:3780   .text.HAL_I2C_Mem_Write:0000000000000000 $t
     /tmp/ccX4fpHz.s:3787   .text.HAL_I2C_Mem_Write:0000000000000000 HAL_I2C_Mem_Write
     /tmp/ccX4fpHz.s:4079   .text.HAL_I2C_Mem_Read:0000000000000000 $t
     /tmp/ccX4fpHz.s:4086   .text.HAL_I2C_Mem_Read:0000000000000000 HAL_I2C_Mem_Read
     /tmp/ccX4fpHz.s:4379   .text.HAL_I2C_Mem_Read:00000000000001b4 $d
     /tmp/ccX4fpHz.s:4384   .text.HAL_I2C_Mem_Write_IT:0000000000000000 $t
     /tmp/ccX4fpHz.s:4391   .text.HAL_I2C_Mem_Write_IT:0000000000000000 HAL_I2C_Mem_Write_IT
     /tmp/ccX4fpHz.s:4563   .text.HAL_I2C_Mem_Write_IT:00000000000000e0 $d
     /tmp/ccX4fpHz.s:4569   .text.HAL_I2C_Mem_Read_IT:0000000000000000 $t
     /tmp/ccX4fpHz.s:4576   .text.HAL_I2C_Mem_Read_IT:0000000000000000 HAL_I2C_Mem_Read_IT
     /tmp/ccX4fpHz.s:4749   .text.HAL_I2C_Mem_Read_IT:00000000000000e0 $d
     /tmp/ccX4fpHz.s:4756   .text.HAL_I2C_Mem_Write_DMA:0000000000000000 $t
     /tmp/ccX4fpHz.s:4763   .text.HAL_I2C_Mem_Write_DMA:0000000000000000 HAL_I2C_Mem_Write_DMA
     /tmp/ccX4fpHz.s:5010   .text.HAL_I2C_Mem_Write_DMA:000000000000015c $d
     /tmp/ccX4fpHz.s:5018   .text.HAL_I2C_Mem_Read_DMA:0000000000000000 $t
     /tmp/ccX4fpHz.s:5025   .text.HAL_I2C_Mem_Read_DMA:0000000000000000 HAL_I2C_Mem_Read_DMA
     /tmp/ccX4fpHz.s:5273   .text.HAL_I2C_Mem_Read_DMA:0000000000000160 $d
     /tmp/ccX4fpHz.s:5282   .text.HAL_I2C_IsDeviceReady:0000000000000000 $t
     /tmp/ccX4fpHz.s:5289   .text.HAL_I2C_IsDeviceReady:0000000000000000 HAL_I2C_IsDeviceReady
     /tmp/ccX4fpHz.s:5555   .text.HAL_I2C_IsDeviceReady:000000000000016c $d
     /tmp/ccX4fpHz.s:5560   .text.HAL_I2C_Master_Seq_Transmit_IT:0000000000000000 $t
     /tmp/ccX4fpHz.s:5567   .text.HAL_I2C_Master_Seq_Transmit_IT:0000000000000000 HAL_I2C_Master_Seq_Transmit_IT
     /tmp/ccX4fpHz.s:5724   .text.HAL_I2C_Master_Seq_Transmit_IT:00000000000000ac $d
     /tmp/ccX4fpHz.s:5730   .text.HAL_I2C_Master_Seq_Transmit_DMA:0000000000000000 $t
     /tmp/ccX4fpHz.s:5737   .text.HAL_I2C_Master_Seq_Transmit_DMA:0000000000000000 HAL_I2C_Master_Seq_Transmit_DMA
     /tmp/ccX4fpHz.s:5998   .text.HAL_I2C_Master_Seq_Transmit_DMA:0000000000000158 $d
     /tmp/ccX4fpHz.s:6007   .text.HAL_I2C_Master_Seq_Receive_IT:0000000000000000 $t
     /tmp/ccX4fpHz.s:6014   .text.HAL_I2C_Master_Seq_Receive_IT:0000000000000000 HAL_I2C_Master_Seq_Receive_IT
     /tmp/ccX4fpHz.s:6171   .text.HAL_I2C_Master_Seq_Receive_IT:00000000000000ac $d
     /tmp/ccX4fpHz.s:6177   .text.HAL_I2C_Master_Seq_Receive_DMA:0000000000000000 $t
     /tmp/ccX4fpHz.s:6184   .text.HAL_I2C_Master_Seq_Receive_DMA:0000000000000000 HAL_I2C_Master_Seq_Receive_DMA
     /tmp/ccX4fpHz.s:6445   .text.HAL_I2C_Master_Seq_Receive_DMA:0000000000000158 $d
     /tmp/ccX4fpHz.s:6454   .text.HAL_I2C_Slave_Seq_Transmit_IT:0000000000000000 $t
ARM GAS  /tmp/ccX4fpHz.s 			page 329


     /tmp/ccX4fpHz.s:6461   .text.HAL_I2C_Slave_Seq_Transmit_IT:0000000000000000 HAL_I2C_Slave_Seq_Transmit_IT
     /tmp/ccX4fpHz.s:6618   .text.HAL_I2C_Slave_Seq_Transmit_IT:00000000000000d4 $d
     /tmp/ccX4fpHz.s:10225  .text.I2C_DMAAbort:0000000000000000 I2C_DMAAbort
     /tmp/ccX4fpHz.s:6624   .text.HAL_I2C_Slave_Seq_Transmit_DMA:0000000000000000 $t
     /tmp/ccX4fpHz.s:6631   .text.HAL_I2C_Slave_Seq_Transmit_DMA:0000000000000000 HAL_I2C_Slave_Seq_Transmit_DMA
     /tmp/ccX4fpHz.s:6906   .text.HAL_I2C_Slave_Seq_Transmit_DMA:0000000000000190 $d
     /tmp/ccX4fpHz.s:6914   .text.HAL_I2C_Slave_Seq_Receive_IT:0000000000000000 $t
     /tmp/ccX4fpHz.s:6921   .text.HAL_I2C_Slave_Seq_Receive_IT:0000000000000000 HAL_I2C_Slave_Seq_Receive_IT
     /tmp/ccX4fpHz.s:7078   .text.HAL_I2C_Slave_Seq_Receive_IT:00000000000000d4 $d
     /tmp/ccX4fpHz.s:7084   .text.HAL_I2C_Slave_Seq_Receive_DMA:0000000000000000 $t
     /tmp/ccX4fpHz.s:7091   .text.HAL_I2C_Slave_Seq_Receive_DMA:0000000000000000 HAL_I2C_Slave_Seq_Receive_DMA
     /tmp/ccX4fpHz.s:7365   .text.HAL_I2C_Slave_Seq_Receive_DMA:0000000000000190 $d
     /tmp/ccX4fpHz.s:7373   .text.HAL_I2C_EnableListen_IT:0000000000000000 $t
     /tmp/ccX4fpHz.s:7380   .text.HAL_I2C_EnableListen_IT:0000000000000000 HAL_I2C_EnableListen_IT
     /tmp/ccX4fpHz.s:7421   .text.HAL_I2C_EnableListen_IT:0000000000000024 $d
     /tmp/ccX4fpHz.s:7426   .text.HAL_I2C_DisableListen_IT:0000000000000000 $t
     /tmp/ccX4fpHz.s:7433   .text.HAL_I2C_DisableListen_IT:0000000000000000 HAL_I2C_DisableListen_IT
     /tmp/ccX4fpHz.s:7487   .text.HAL_I2C_Master_Abort_IT:0000000000000000 $t
     /tmp/ccX4fpHz.s:7494   .text.HAL_I2C_Master_Abort_IT:0000000000000000 HAL_I2C_Master_Abort_IT
     /tmp/ccX4fpHz.s:7586   .text.HAL_I2C_Master_Abort_IT:0000000000000064 $d
     /tmp/ccX4fpHz.s:7591   .text.HAL_I2C_EV_IRQHandler:0000000000000000 $t
     /tmp/ccX4fpHz.s:7598   .text.HAL_I2C_EV_IRQHandler:0000000000000000 HAL_I2C_EV_IRQHandler
     /tmp/ccX4fpHz.s:7630   .text.HAL_I2C_MasterTxCpltCallback:0000000000000000 $t
     /tmp/ccX4fpHz.s:7637   .text.HAL_I2C_MasterTxCpltCallback:0000000000000000 HAL_I2C_MasterTxCpltCallback
     /tmp/ccX4fpHz.s:7651   .text.HAL_I2C_MasterRxCpltCallback:0000000000000000 $t
     /tmp/ccX4fpHz.s:7658   .text.HAL_I2C_MasterRxCpltCallback:0000000000000000 HAL_I2C_MasterRxCpltCallback
     /tmp/ccX4fpHz.s:7672   .text.I2C_ITMasterSeqCplt:0000000000000000 $t
     /tmp/ccX4fpHz.s:7678   .text.I2C_ITMasterSeqCplt:0000000000000000 I2C_ITMasterSeqCplt
     /tmp/ccX4fpHz.s:7749   .text.HAL_I2C_SlaveTxCpltCallback:0000000000000000 $t
     /tmp/ccX4fpHz.s:7756   .text.HAL_I2C_SlaveTxCpltCallback:0000000000000000 HAL_I2C_SlaveTxCpltCallback
     /tmp/ccX4fpHz.s:7770   .text.HAL_I2C_SlaveRxCpltCallback:0000000000000000 $t
     /tmp/ccX4fpHz.s:7777   .text.HAL_I2C_SlaveRxCpltCallback:0000000000000000 HAL_I2C_SlaveRxCpltCallback
     /tmp/ccX4fpHz.s:7791   .text.I2C_ITSlaveSeqCplt:0000000000000000 $t
     /tmp/ccX4fpHz.s:7797   .text.I2C_ITSlaveSeqCplt:0000000000000000 I2C_ITSlaveSeqCplt
     /tmp/ccX4fpHz.s:7872   .text.I2C_DMASlaveTransmitCplt:0000000000000000 $t
     /tmp/ccX4fpHz.s:7922   .text.I2C_DMASlaveReceiveCplt:0000000000000000 $t
     /tmp/ccX4fpHz.s:7970   .text.HAL_I2C_AddrCallback:0000000000000000 $t
     /tmp/ccX4fpHz.s:7977   .text.HAL_I2C_AddrCallback:0000000000000000 HAL_I2C_AddrCallback
     /tmp/ccX4fpHz.s:7991   .text.I2C_ITAddrCplt:0000000000000000 $t
     /tmp/ccX4fpHz.s:7997   .text.I2C_ITAddrCplt:0000000000000000 I2C_ITAddrCplt
     /tmp/ccX4fpHz.s:8120   .text.HAL_I2C_ListenCpltCallback:0000000000000000 $t
     /tmp/ccX4fpHz.s:8127   .text.HAL_I2C_ListenCpltCallback:0000000000000000 HAL_I2C_ListenCpltCallback
     /tmp/ccX4fpHz.s:8141   .text.I2C_ITListenCplt:0000000000000000 $t
     /tmp/ccX4fpHz.s:8147   .text.I2C_ITListenCplt:0000000000000000 I2C_ITListenCplt
     /tmp/ccX4fpHz.s:8225   .text.I2C_ITListenCplt:0000000000000060 $d
     /tmp/ccX4fpHz.s:8230   .text.HAL_I2C_MemTxCpltCallback:0000000000000000 $t
     /tmp/ccX4fpHz.s:8237   .text.HAL_I2C_MemTxCpltCallback:0000000000000000 HAL_I2C_MemTxCpltCallback
     /tmp/ccX4fpHz.s:8251   .text.HAL_I2C_MemRxCpltCallback:0000000000000000 $t
     /tmp/ccX4fpHz.s:8258   .text.HAL_I2C_MemRxCpltCallback:0000000000000000 HAL_I2C_MemRxCpltCallback
     /tmp/ccX4fpHz.s:8272   .text.HAL_I2C_ErrorCallback:0000000000000000 $t
     /tmp/ccX4fpHz.s:8279   .text.HAL_I2C_ErrorCallback:0000000000000000 HAL_I2C_ErrorCallback
     /tmp/ccX4fpHz.s:8293   .text.HAL_I2C_AbortCpltCallback:0000000000000000 $t
     /tmp/ccX4fpHz.s:8300   .text.HAL_I2C_AbortCpltCallback:0000000000000000 HAL_I2C_AbortCpltCallback
     /tmp/ccX4fpHz.s:8314   .text.I2C_ITError:0000000000000000 $t
     /tmp/ccX4fpHz.s:8320   .text.I2C_ITError:0000000000000000 I2C_ITError
     /tmp/ccX4fpHz.s:8486   .text.I2C_ITError:00000000000000e8 $d
     /tmp/ccX4fpHz.s:8493   .text.I2C_ITSlaveCplt:0000000000000000 $t
ARM GAS  /tmp/ccX4fpHz.s 			page 330


     /tmp/ccX4fpHz.s:8499   .text.I2C_ITSlaveCplt:0000000000000000 I2C_ITSlaveCplt
     /tmp/ccX4fpHz.s:8693   .text.I2C_ITSlaveCplt:000000000000011c $d
     /tmp/ccX4fpHz.s:8698   .text.I2C_Slave_ISR_IT:0000000000000000 $t
     /tmp/ccX4fpHz.s:8945   .text.I2C_ITMasterCplt:0000000000000000 $t
     /tmp/ccX4fpHz.s:8951   .text.I2C_ITMasterCplt:0000000000000000 I2C_ITMasterCplt
     /tmp/ccX4fpHz.s:9103   .text.I2C_Master_ISR_IT:0000000000000000 $t
     /tmp/ccX4fpHz.s:9400   .text.I2C_Slave_ISR_DMA:0000000000000000 $t
     /tmp/ccX4fpHz.s:9615   .text.I2C_Master_ISR_DMA:0000000000000000 $t
     /tmp/ccX4fpHz.s:9868   .text.I2C_DMAError:0000000000000000 $t
     /tmp/ccX4fpHz.s:9951   .text.I2C_DMAMasterTransmitCplt:0000000000000000 $t
     /tmp/ccX4fpHz.s:10039  .text.I2C_DMAMasterReceiveCplt:0000000000000000 $t
     /tmp/ccX4fpHz.s:10127  .text.HAL_I2C_ER_IRQHandler:0000000000000000 $t
     /tmp/ccX4fpHz.s:10134  .text.HAL_I2C_ER_IRQHandler:0000000000000000 HAL_I2C_ER_IRQHandler
     /tmp/ccX4fpHz.s:10219  .text.I2C_DMAAbort:0000000000000000 $t
     /tmp/ccX4fpHz.s:10271  .text.HAL_I2C_GetState:0000000000000000 $t
     /tmp/ccX4fpHz.s:10278  .text.HAL_I2C_GetState:0000000000000000 HAL_I2C_GetState
     /tmp/ccX4fpHz.s:10295  .text.HAL_I2C_GetMode:0000000000000000 $t
     /tmp/ccX4fpHz.s:10302  .text.HAL_I2C_GetMode:0000000000000000 HAL_I2C_GetMode
     /tmp/ccX4fpHz.s:10319  .text.HAL_I2C_GetError:0000000000000000 $t
     /tmp/ccX4fpHz.s:10326  .text.HAL_I2C_GetError:0000000000000000 HAL_I2C_GetError

UNDEFINED SYMBOLS
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort_IT
HAL_DMA_GetError
