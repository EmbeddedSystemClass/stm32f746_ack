ARM GAS  /tmp/ccwdO2Zj.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"ff.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.ld_word,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-sp-d16
  24              	ld_word:
  25              	.LFB146:
  26              		.file 1 "Middlewares/Third_Party/FatFs/src/ff.c"
   1:Middlewares/Third_Party/FatFs/src/ff.c **** /*----------------------------------------------------------------------------/
   2:Middlewares/Third_Party/FatFs/src/ff.c **** /  FatFs - Generic FAT file system module  R0.12c                             /
   3:Middlewares/Third_Party/FatFs/src/ff.c **** /-----------------------------------------------------------------------------/
   4:Middlewares/Third_Party/FatFs/src/ff.c **** /
   5:Middlewares/Third_Party/FatFs/src/ff.c **** / Copyright (C) 2017, ChaN, all right reserved.
   6:Middlewares/Third_Party/FatFs/src/ff.c **** /
   7:Middlewares/Third_Party/FatFs/src/ff.c **** / FatFs module is an open source software. Redistribution and use of FatFs in
   8:Middlewares/Third_Party/FatFs/src/ff.c **** / source and binary forms, with or without modification, are permitted provided
   9:Middlewares/Third_Party/FatFs/src/ff.c **** / that the following condition is met:
  10:Middlewares/Third_Party/FatFs/src/ff.c **** /
  11:Middlewares/Third_Party/FatFs/src/ff.c **** / 1. Redistributions of source code must retain the above copyright notice,
  12:Middlewares/Third_Party/FatFs/src/ff.c **** /    this condition and the following disclaimer.
  13:Middlewares/Third_Party/FatFs/src/ff.c **** /
  14:Middlewares/Third_Party/FatFs/src/ff.c **** / This software is provided by the copyright holder and contributors "AS IS"
  15:Middlewares/Third_Party/FatFs/src/ff.c **** / and any warranties related to this software are DISCLAIMED.
  16:Middlewares/Third_Party/FatFs/src/ff.c **** / The copyright owner or contributors be NOT LIABLE for any damages caused
  17:Middlewares/Third_Party/FatFs/src/ff.c **** / by use of this software.
  18:Middlewares/Third_Party/FatFs/src/ff.c **** /----------------------------------------------------------------------------*/
  19:Middlewares/Third_Party/FatFs/src/ff.c **** 
  20:Middlewares/Third_Party/FatFs/src/ff.c **** 
  21:Middlewares/Third_Party/FatFs/src/ff.c **** #include "ff.h"			/* Declarations of FatFs API */
  22:Middlewares/Third_Party/FatFs/src/ff.c **** #include "diskio.h"		/* Declarations of device I/O functions */
  23:Middlewares/Third_Party/FatFs/src/ff.c **** 
  24:Middlewares/Third_Party/FatFs/src/ff.c **** 
  25:Middlewares/Third_Party/FatFs/src/ff.c **** /*--------------------------------------------------------------------------
  26:Middlewares/Third_Party/FatFs/src/ff.c **** 
  27:Middlewares/Third_Party/FatFs/src/ff.c ****    Module Private Definitions
  28:Middlewares/Third_Party/FatFs/src/ff.c **** 
  29:Middlewares/Third_Party/FatFs/src/ff.c **** ---------------------------------------------------------------------------*/
  30:Middlewares/Third_Party/FatFs/src/ff.c **** 
  31:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FATFS != 68300	/* Revision ID */
  32:Middlewares/Third_Party/FatFs/src/ff.c **** #error Wrong include file (ff.h).
ARM GAS  /tmp/ccwdO2Zj.s 			page 2


  33:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
  34:Middlewares/Third_Party/FatFs/src/ff.c **** 
  35:Middlewares/Third_Party/FatFs/src/ff.c **** 
  36:Middlewares/Third_Party/FatFs/src/ff.c **** /* DBCS code ranges and SBCS upper conversion tables */
  37:Middlewares/Third_Party/FatFs/src/ff.c **** 
  38:Middlewares/Third_Party/FatFs/src/ff.c **** #if _CODE_PAGE == 932	/* Japanese Shift-JIS */
  39:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0x81	/* DBC 1st byte range 1 start */
  40:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1E	0x9F	/* DBC 1st byte range 1 end */
  41:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF2S	0xE0	/* DBC 1st byte range 2 start */
  42:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF2E	0xFC	/* DBC 1st byte range 2 end */
  43:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1S	0x40	/* DBC 2nd byte range 1 start */
  44:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1E	0x7E	/* DBC 2nd byte range 1 end */
  45:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2S	0x80	/* DBC 2nd byte range 2 start */
  46:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2E	0xFC	/* DBC 2nd byte range 2 end */
  47:Middlewares/Third_Party/FatFs/src/ff.c **** 
  48:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 936	/* Simplified Chinese GBK */
  49:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0x81
  50:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1E	0xFE
  51:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1S	0x40
  52:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1E	0x7E
  53:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2S	0x80
  54:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2E	0xFE
  55:Middlewares/Third_Party/FatFs/src/ff.c **** 
  56:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 949	/* Korean */
  57:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0x81
  58:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1E	0xFE
  59:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1S	0x41
  60:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1E	0x5A
  61:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2S	0x61
  62:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2E	0x7A
  63:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS3S	0x81
  64:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS3E	0xFE
  65:Middlewares/Third_Party/FatFs/src/ff.c **** 
  66:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 950	/* Traditional Chinese Big5 */
  67:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0x81
  68:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1E	0xFE
  69:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1S	0x40
  70:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1E	0x7E
  71:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2S	0xA1
  72:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2E	0xFE
  73:Middlewares/Third_Party/FatFs/src/ff.c **** 
  74:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 437	/* U.S. */
  75:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
  76:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x45,0x41,0x8E,0x41,0x8F,0x80,0x45,0x45,0x45,0x49,0x49,0x49,0x8E,0x8F, \
  77:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x92,0x92,0x4F,0x99,0x4F,0x55,0x55,0x59,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
  78:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
  79:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
  80:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
  81:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
  82:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
  83:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
  84:Middlewares/Third_Party/FatFs/src/ff.c **** 
  85:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 720	/* Arabic */
  86:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
  87:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
  88:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
  89:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA0,0xA1,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
ARM GAS  /tmp/ccwdO2Zj.s 			page 3


  90:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
  91:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
  92:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
  93:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
  94:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
  95:Middlewares/Third_Party/FatFs/src/ff.c **** 
  96:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 737	/* Greek */
  97:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
  98:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
  99:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x92,0x92,0x93,0x94,0x95,0x96,0x97,0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87, \
 100:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x90,0x91,0xAA,0x92,0x93,0x94,0x95,0x96, \
 101:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 102:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 103:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 104:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x97,0xEA,0xEB,0xEC,0xE4,0xED,0xEE,0xEF,0xF5,0xF0,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 105:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 106:Middlewares/Third_Party/FatFs/src/ff.c **** 
 107:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 771	/* KBL */
 108:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 109:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
 110:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 111:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
 112:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 113:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 114:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDC,0xDE,0xDE, \
 115:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 116:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF0,0xF2,0xF2,0xF4,0xF4,0xF6,0xF6,0xF8,0xF8,0xFA,0xFA,0xFC,0xFC,0xFE,0xFF}
 117:Middlewares/Third_Party/FatFs/src/ff.c **** 
 118:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 775	/* Baltic */
 119:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 120:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x91,0xA0,0x8E,0x95,0x8F,0x80,0xAD,0xED,0x8A,0x8A,0xA1,0x8D,0x8E,0x8F, \
 121:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x92,0x92,0xE2,0x99,0x95,0x96,0x97,0x97,0x99,0x9A,0x9D,0x9C,0x9D,0x9E,0x9F, \
 122:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA0,0xA1,0xE0,0xA3,0xA3,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 123:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 124:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 125:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB5,0xB6,0xB7,0xB8,0xBD,0xBE,0xC6,0xC7,0xA5,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 126:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE5,0xE5,0xE6,0xE3,0xE8,0xE8,0xEA,0xEA,0xEE,0xED,0xEE,0xEF, \
 127:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 128:Middlewares/Third_Party/FatFs/src/ff.c **** 
 129:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 850	/* Latin 1 */
 130:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 131:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x43,0x55,0x45,0x41,0x41,0x41,0x41,0x43,0x45,0x45,0x45,0x49,0x49,0x49,0x41,0x41, \
 132:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x45,0x92,0x92,0x4F,0x4F,0x4F,0x55,0x55,0x59,0x4F,0x55,0x4F,0x9C,0x4F,0x9E,0x9F, \
 133:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 134:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0x41,0x41,0x41,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 135:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0x41,0x41,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 136:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD1,0xD1,0x45,0x45,0x45,0x49,0x49,0x49,0x49,0xD9,0xDA,0xDB,0xDC,0xDD,0x49,0xDF, \
 137:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x4F,0xE1,0x4F,0x4F,0x4F,0x4F,0xE6,0xE8,0xE8,0x55,0x55,0x55,0x59,0x59,0xEE,0xEF, \
 138:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 139:Middlewares/Third_Party/FatFs/src/ff.c **** 
 140:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 852	/* Latin 2 */
 141:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 142:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x90,0xB6,0x8E,0xDE,0x8F,0x80,0x9D,0xD3,0x8A,0x8A,0xD7,0x8D,0x8E,0x8F, \
 143:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x91,0xE2,0x99,0x95,0x95,0x97,0x97,0x99,0x9A,0x9B,0x9B,0x9D,0x9E,0xAC, \
 144:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB5,0xD6,0xE0,0xE9,0xA4,0xA4,0xA6,0xA6,0xA8,0xA8,0xAA,0x8D,0xAC,0xB8,0xAE,0xAF, \
 145:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBD,0xBF, \
 146:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC6,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
ARM GAS  /tmp/ccwdO2Zj.s 			page 4


 147:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD1,0xD1,0xD2,0xD3,0xD2,0xD5,0xD6,0xD7,0xB7,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 148:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE3,0xD5,0xE6,0xE6,0xE8,0xE9,0xE8,0xEB,0xED,0xED,0xDD,0xEF, \
 149:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xEB,0xFC,0xFC,0xFE,0xFF}
 150:Middlewares/Third_Party/FatFs/src/ff.c **** 
 151:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 855	/* Cyrillic */
 152:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 153:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x81,0x81,0x83,0x83,0x85,0x85,0x87,0x87,0x89,0x89,0x8B,0x8B,0x8D,0x8D,0x8F,0x8F, \
 154:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x91,0x91,0x93,0x93,0x95,0x95,0x97,0x97,0x99,0x99,0x9B,0x9B,0x9D,0x9D,0x9F,0x9F, \
 155:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA1,0xA1,0xA3,0xA3,0xA5,0xA5,0xA7,0xA7,0xA9,0xA9,0xAB,0xAB,0xAD,0xAD,0xAE,0xAF, \
 156:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB6,0xB6,0xB8,0xB8,0xB9,0xBA,0xBB,0xBC,0xBE,0xBE,0xBF, \
 157:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC7,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 158:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD1,0xD1,0xD3,0xD3,0xD5,0xD5,0xD7,0xD7,0xDD,0xD9,0xDA,0xDB,0xDC,0xDD,0xE0,0xDF, \
 159:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE2,0xE2,0xE4,0xE4,0xE6,0xE6,0xE8,0xE8,0xEA,0xEA,0xEC,0xEC,0xEE,0xEE,0xEF, \
 160:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF2,0xF2,0xF4,0xF4,0xF6,0xF6,0xF8,0xF8,0xFA,0xFA,0xFC,0xFC,0xFD,0xFE,0xFF}
 161:Middlewares/Third_Party/FatFs/src/ff.c **** 
 162:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 857	/* Turkish */
 163:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 164:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x90,0xB6,0x8E,0xB7,0x8F,0x80,0xD2,0xD3,0xD4,0xD8,0xD7,0x49,0x8E,0x8F, \
 165:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x92,0x92,0xE2,0x99,0xE3,0xEA,0xEB,0x98,0x99,0x9A,0x9D,0x9C,0x9D,0x9E,0x9E, \
 166:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB5,0xD6,0xE0,0xE9,0xA5,0xA5,0xA6,0xA6,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 167:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 168:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC7,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 169:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0x49,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 170:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE5,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xDE,0xED,0xEE,0xEF, \
 171:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 172:Middlewares/Third_Party/FatFs/src/ff.c **** 
 173:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 860	/* Portuguese */
 174:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 175:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x90,0x8F,0x8E,0x91,0x86,0x80,0x89,0x89,0x92,0x8B,0x8C,0x98,0x8E,0x8F, \
 176:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x92,0x8C,0x99,0xA9,0x96,0x9D,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 177:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x86,0x8B,0x9F,0x96,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 178:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 179:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 180:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 181:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 182:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 183:Middlewares/Third_Party/FatFs/src/ff.c **** 
 184:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 861	/* Icelandic */
 185:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 186:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x90,0x41,0x8E,0x41,0x8F,0x80,0x45,0x45,0x45,0x8B,0x8B,0x8D,0x8E,0x8F, \
 187:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x92,0x92,0x4F,0x99,0x8D,0x55,0x97,0x97,0x99,0x9A,0x9D,0x9C,0x9D,0x9E,0x9F, \
 188:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA4,0xA5,0xA6,0xA7,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 189:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 190:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 191:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 192:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 193:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 194:Middlewares/Third_Party/FatFs/src/ff.c **** 
 195:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 862	/* Hebrew */
 196:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 197:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
 198:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 199:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 200:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 201:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 202:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 203:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
ARM GAS  /tmp/ccwdO2Zj.s 			page 5


 204:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 205:Middlewares/Third_Party/FatFs/src/ff.c **** 
 206:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 863	/* Canadian-French */
 207:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 208:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x43,0x55,0x45,0x41,0x41,0x41,0x86,0x43,0x45,0x45,0x45,0x49,0x49,0x8D,0x41,0x8F, \
 209:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x45,0x45,0x45,0x4F,0x45,0x49,0x55,0x55,0x98,0x4F,0x55,0x9B,0x9C,0x55,0x55,0x9F, \
 210:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA0,0xA1,0x4F,0x55,0xA4,0xA5,0xA6,0xA7,0x49,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 211:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 212:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 213:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 214:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 215:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 216:Middlewares/Third_Party/FatFs/src/ff.c **** 
 217:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 864	/* Arabic */
 218:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 219:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x45,0x41,0x8E,0x41,0x8F,0x80,0x45,0x45,0x45,0x49,0x49,0x49,0x8E,0x8F, \
 220:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x92,0x92,0x4F,0x99,0x4F,0x55,0x55,0x59,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 221:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 222:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 223:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 224:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 225:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 226:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 227:Middlewares/Third_Party/FatFs/src/ff.c **** 
 228:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 865	/* Nordic */
 229:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 230:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x90,0x41,0x8E,0x41,0x8F,0x80,0x45,0x45,0x45,0x49,0x49,0x49,0x8E,0x8F, \
 231:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x92,0x92,0x4F,0x99,0x4F,0x55,0x55,0x59,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 232:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 233:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 234:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 235:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 236:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 237:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 238:Middlewares/Third_Party/FatFs/src/ff.c **** 
 239:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 866	/* Russian */
 240:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 241:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
 242:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 243:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
 244:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 245:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 246:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 247:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 248:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF0,0xF2,0xF2,0xF4,0xF4,0xF6,0xF6,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 249:Middlewares/Third_Party/FatFs/src/ff.c **** 
 250:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 869	/* Greek 2 */
 251:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 252:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
 253:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x86,0x9C,0x8D,0x8F,0x90, \
 254:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x91,0x90,0x92,0x95,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 255:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 256:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 257:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xA4,0xA5,0xA6,0xD9,0xDA,0xDB,0xDC,0xA7,0xA8,0xDF, \
 258:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA9,0xAA,0xAC,0xAD,0xB5,0xB6,0xB7,0xB8,0xBD,0xBE,0xC6,0xC7,0xCF,0xCF,0xD0,0xEF, \
 259:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xD1,0xD2,0xD3,0xF5,0xD4,0xF7,0xF8,0xF9,0xD5,0x96,0x95,0x98,0xFE,0xFF}
 260:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/ccwdO2Zj.s 			page 6


 261:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 1	/* ASCII (for only non-LFN cfg) */
 262:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
 263:Middlewares/Third_Party/FatFs/src/ff.c **** #error Cannot enable LFN without valid code page.
 264:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 265:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 266:Middlewares/Third_Party/FatFs/src/ff.c **** 
 267:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 268:Middlewares/Third_Party/FatFs/src/ff.c **** #error Unknown code page
 269:Middlewares/Third_Party/FatFs/src/ff.c **** 
 270:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 271:Middlewares/Third_Party/FatFs/src/ff.c **** 
 272:Middlewares/Third_Party/FatFs/src/ff.c **** 
 273:Middlewares/Third_Party/FatFs/src/ff.c **** /* Character code support macros */
 274:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsUpper(c)	(((c)>='A')&&((c)<='Z'))
 275:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsLower(c)	(((c)>='a')&&((c)<='z'))
 276:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDigit(c)	(((c)>='0')&&((c)<='9'))
 277:Middlewares/Third_Party/FatFs/src/ff.c **** 
 278:Middlewares/Third_Party/FatFs/src/ff.c **** #if _DF1S != 0	/* Code page is DBCS */
 279:Middlewares/Third_Party/FatFs/src/ff.c **** 
 280:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _DF2S	/* Two 1st byte areas */
 281:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDBCS1(c)	(((BYTE)(c) >= _DF1S && (BYTE)(c) <= _DF1E) || ((BYTE)(c) >= _DF2S && (BYTE)(c) 
 282:Middlewares/Third_Party/FatFs/src/ff.c **** #else			/* One 1st byte area */
 283:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDBCS1(c)	((BYTE)(c) >= _DF1S && (BYTE)(c) <= _DF1E)
 284:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 285:Middlewares/Third_Party/FatFs/src/ff.c **** 
 286:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _DS3S	/* Three 2nd byte areas */
 287:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDBCS2(c)	(((BYTE)(c) >= _DS1S && (BYTE)(c) <= _DS1E) || ((BYTE)(c) >= _DS2S && (BYTE)(c) 
 288:Middlewares/Third_Party/FatFs/src/ff.c **** #else			/* Two 2nd byte areas */
 289:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDBCS2(c)	(((BYTE)(c) >= _DS1S && (BYTE)(c) <= _DS1E) || ((BYTE)(c) >= _DS2S && (BYTE)(c) 
 290:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 291:Middlewares/Third_Party/FatFs/src/ff.c **** 
 292:Middlewares/Third_Party/FatFs/src/ff.c **** #else			/* Code page is SBCS */
 293:Middlewares/Third_Party/FatFs/src/ff.c **** 
 294:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDBCS1(c)	0
 295:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDBCS2(c)	0
 296:Middlewares/Third_Party/FatFs/src/ff.c **** 
 297:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _DF1S */
 298:Middlewares/Third_Party/FatFs/src/ff.c **** 
 299:Middlewares/Third_Party/FatFs/src/ff.c **** 
 300:Middlewares/Third_Party/FatFs/src/ff.c **** /* Additional file attribute bits for internal use */
 301:Middlewares/Third_Party/FatFs/src/ff.c **** #define	AM_VOL		0x08	/* Volume label */
 302:Middlewares/Third_Party/FatFs/src/ff.c **** #define AM_LFN		0x0F	/* LFN entry */
 303:Middlewares/Third_Party/FatFs/src/ff.c **** #define AM_MASK		0x3F	/* Mask of defined bits */
 304:Middlewares/Third_Party/FatFs/src/ff.c **** 
 305:Middlewares/Third_Party/FatFs/src/ff.c **** 
 306:Middlewares/Third_Party/FatFs/src/ff.c **** /* Additional file access control and file status flags for internal use */
 307:Middlewares/Third_Party/FatFs/src/ff.c **** #define FA_SEEKEND	0x20	/* Seek to end of the file on file open */
 308:Middlewares/Third_Party/FatFs/src/ff.c **** #define FA_MODIFIED	0x40	/* File has been modified */
 309:Middlewares/Third_Party/FatFs/src/ff.c **** #define FA_DIRTY	0x80	/* FIL.buf[] needs to be written-back */
 310:Middlewares/Third_Party/FatFs/src/ff.c **** 
 311:Middlewares/Third_Party/FatFs/src/ff.c **** 
 312:Middlewares/Third_Party/FatFs/src/ff.c **** /* Name status flags in fn[] */
 313:Middlewares/Third_Party/FatFs/src/ff.c **** #define NSFLAG		11		/* Index of the name status byte */
 314:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_LOSS		0x01	/* Out of 8.3 format */
 315:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_LFN		0x02	/* Force to create LFN entry */
 316:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_LAST		0x04	/* Last segment */
 317:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_BODY		0x08	/* Lower case flag (body) */
ARM GAS  /tmp/ccwdO2Zj.s 			page 7


 318:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_EXT		0x10	/* Lower case flag (ext) */
 319:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_DOT		0x20	/* Dot entry */
 320:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_NOLFN	0x40	/* Do not find LFN */
 321:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_NONAME	0x80	/* Not followed */
 322:Middlewares/Third_Party/FatFs/src/ff.c **** 
 323:Middlewares/Third_Party/FatFs/src/ff.c **** 
 324:Middlewares/Third_Party/FatFs/src/ff.c **** /* Limits and boundaries */
 325:Middlewares/Third_Party/FatFs/src/ff.c **** #define MAX_DIR		0x200000		/* Max size of FAT directory */
 326:Middlewares/Third_Party/FatFs/src/ff.c **** #define MAX_DIR_EX	0x10000000		/* Max size of exFAT directory */
 327:Middlewares/Third_Party/FatFs/src/ff.c **** #define MAX_FAT12	0xFF5			/* Max FAT12 clusters (differs from specs, but correct for real DOS/Windo
 328:Middlewares/Third_Party/FatFs/src/ff.c **** #define	MAX_FAT16	0xFFF5			/* Max FAT16 clusters (differs from specs, but correct for real DOS/Wind
 329:Middlewares/Third_Party/FatFs/src/ff.c **** #define	MAX_FAT32	0x0FFFFFF5		/* Max FAT32 clusters (not specified, practical limit) */
 330:Middlewares/Third_Party/FatFs/src/ff.c **** #define	MAX_EXFAT	0x7FFFFFFD		/* Max exFAT clusters (differs from specs, implementation limit) */
 331:Middlewares/Third_Party/FatFs/src/ff.c **** 
 332:Middlewares/Third_Party/FatFs/src/ff.c **** 
 333:Middlewares/Third_Party/FatFs/src/ff.c **** /* FatFs refers the FAT structure as simple byte array instead of structure member
 334:Middlewares/Third_Party/FatFs/src/ff.c **** / because the C structure is not binary compatible between different platforms */
 335:Middlewares/Third_Party/FatFs/src/ff.c **** 
 336:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_JmpBoot			0		/* x86 jump instruction (3-byte) */
 337:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_OEMName			3		/* OEM name (8-byte) */
 338:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_BytsPerSec		11		/* Sector size [byte] (WORD) */
 339:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_SecPerClus		13		/* Cluster size [sector] (BYTE) */
 340:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_RsvdSecCnt		14		/* Size of reserved area [sector] (WORD) */
 341:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_NumFATs			16		/* Number of FATs (BYTE) */
 342:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_RootEntCnt		17		/* Size of root directory area for FAT12/16 [entry] (WORD) */
 343:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_TotSec16		19		/* Volume size (16-bit) [sector] (WORD) */
 344:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_Media			21		/* Media descriptor byte (BYTE) */
 345:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_FATSz16			22		/* FAT size (16-bit) [sector] (WORD) */
 346:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_SecPerTrk		24		/* Track size for int13h [sector] (WORD) */
 347:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_NumHeads		26		/* Number of heads for int13h (WORD) */
 348:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_HiddSec			28		/* Volume offset from top of the drive (DWORD) */
 349:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_TotSec32		32		/* Volume size (32-bit) [sector] (DWORD) */
 350:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_DrvNum			36		/* Physical drive number for int13h (BYTE) */
 351:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_NTres			37		/* Error flag (BYTE) */
 352:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_BootSig			38		/* Extended boot signature (BYTE) */
 353:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_VolID			39		/* Volume serial number (DWORD) */
 354:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_VolLab			43		/* Volume label string (8-byte) */
 355:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_FilSysType		54		/* File system type string (8-byte) */
 356:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_BootCode			62		/* Boot code (448-byte) */
 357:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_55AA				510		/* Signature word (WORD) */
 358:Middlewares/Third_Party/FatFs/src/ff.c **** 
 359:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_FATSz32			36		/* FAT32: FAT size [sector] (DWORD) */
 360:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_ExtFlags32		40		/* FAT32: Extended flags (WORD) */
 361:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_FSVer32			42		/* FAT32: File system version (WORD) */
 362:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_RootClus32		44		/* FAT32: Root directory cluster (DWORD) */
 363:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_FSInfo32		48		/* FAT32: Offset of FSINFO sector (WORD) */
 364:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_BkBootSec32		50		/* FAT32: Offset of backup boot sector (WORD) */
 365:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_DrvNum32			64		/* FAT32: Physical drive number for int13h (BYTE) */
 366:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_NTres32			65		/* FAT32: Error flag (BYTE) */
 367:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_BootSig32		66		/* FAT32: Extended boot signature (BYTE) */
 368:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_VolID32			67		/* FAT32: Volume serial number (DWORD) */
 369:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_VolLab32			71		/* FAT32: Volume label string (8-byte) */
 370:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_FilSysType32		82		/* FAT32: File system type string (8-byte) */
 371:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_BootCode32		90		/* FAT32: Boot code (420-byte) */
 372:Middlewares/Third_Party/FatFs/src/ff.c **** 
 373:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_ZeroedEx		11		/* exFAT: MBZ field (53-byte) */
 374:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_VolOfsEx		64		/* exFAT: Volume offset from top of the drive [sector] (QWORD) */
ARM GAS  /tmp/ccwdO2Zj.s 			page 8


 375:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_TotSecEx		72		/* exFAT: Volume size [sector] (QWORD) */
 376:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_FatOfsEx		80		/* exFAT: FAT offset from top of the volume [sector] (DWORD) */
 377:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_FatSzEx			84		/* exFAT: FAT size [sector] (DWORD) */
 378:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_DataOfsEx		88		/* exFAT: Data offset from top of the volume [sector] (DWORD) */
 379:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_NumClusEx		92		/* exFAT: Number of clusters (DWORD) */
 380:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_RootClusEx		96		/* exFAT: Root directory start cluster (DWORD) */
 381:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_VolIDEx			100		/* exFAT: Volume serial number (DWORD) */
 382:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_FSVerEx			104		/* exFAT: File system version (WORD) */
 383:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_VolFlagEx		106		/* exFAT: Volume flags (BYTE) */
 384:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_ActFatEx		107		/* exFAT: Active FAT flags (BYTE) */
 385:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_BytsPerSecEx	108		/* exFAT: Log2 of sector size in unit of byte (BYTE) */
 386:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_SecPerClusEx	109		/* exFAT: Log2 of cluster size in unit of sector (BYTE) */
 387:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_NumFATsEx		110		/* exFAT: Number of FATs (BYTE) */
 388:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_DrvNumEx		111		/* exFAT: Physical drive number for int13h (BYTE) */
 389:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_PercInUseEx		112		/* exFAT: Percent in use (BYTE) */
 390:Middlewares/Third_Party/FatFs/src/ff.c **** #define	BPB_RsvdEx			113		/* exFAT: Reserved (7-byte) */
 391:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_BootCodeEx		120		/* exFAT: Boot code (390-byte) */
 392:Middlewares/Third_Party/FatFs/src/ff.c **** 
 393:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_Name			0		/* Short file name (11-byte) */
 394:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_Attr			11		/* Attribute (BYTE) */
 395:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_NTres			12		/* Lower case flag (BYTE) */
 396:Middlewares/Third_Party/FatFs/src/ff.c **** #define DIR_CrtTime10		13		/* Created time sub-second (BYTE) */
 397:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_CrtTime			14		/* Created time (DWORD) */
 398:Middlewares/Third_Party/FatFs/src/ff.c **** #define DIR_LstAccDate		18		/* Last accessed date (WORD) */
 399:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_FstClusHI		20		/* Higher 16-bit of first cluster (WORD) */
 400:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_ModTime			22		/* Modified time (DWORD) */
 401:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_FstClusLO		26		/* Lower 16-bit of first cluster (WORD) */
 402:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_FileSize		28		/* File size (DWORD) */
 403:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LDIR_Ord			0		/* LFN: LFN order and LLE flag (BYTE) */
 404:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LDIR_Attr			11		/* LFN: LFN attribute (BYTE) */
 405:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LDIR_Type			12		/* LFN: Entry type (BYTE) */
 406:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LDIR_Chksum			13		/* LFN: Checksum of the SFN (BYTE) */
 407:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LDIR_FstClusLO		26		/* LFN: MBZ field (WORD) */
 408:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_Type			0		/* exFAT: Type of exFAT directory entry (BYTE) */
 409:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_NumLabel		1		/* exFAT: Number of volume label characters (BYTE) */
 410:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_Label			2		/* exFAT: Volume label (11-WORD) */
 411:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_CaseSum		4		/* exFAT: Sum of case conversion table (DWORD) */
 412:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_NumSec			1		/* exFAT: Number of secondary entries (BYTE) */
 413:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_SetSum			2		/* exFAT: Sum of the set of directory entries (WORD) */
 414:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_Attr			4		/* exFAT: File attribute (WORD) */
 415:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_CrtTime		8		/* exFAT: Created time (DWORD) */
 416:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_ModTime		12		/* exFAT: Modified time (DWORD) */
 417:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_AccTime		16		/* exFAT: Last accessed time (DWORD) */
 418:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_CrtTime10		20		/* exFAT: Created time subsecond (BYTE) */
 419:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_ModTime10		21		/* exFAT: Modified time subsecond (BYTE) */
 420:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_CrtTZ			22		/* exFAT: Created timezone (BYTE) */
 421:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_ModTZ			23		/* exFAT: Modified timezone (BYTE) */
 422:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_AccTZ			24		/* exFAT: Last accessed timezone (BYTE) */
 423:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_GenFlags		33		/* exFAT: General secondary flags (WORD) */
 424:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_NumName		35		/* exFAT: Number of file name characters (BYTE) */
 425:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_NameHash		36		/* exFAT: Hash of file name (WORD) */
 426:Middlewares/Third_Party/FatFs/src/ff.c **** #define XDIR_ValidFileSize	40		/* exFAT: Valid file size (QWORD) */
 427:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_FstClus		52		/* exFAT: First cluster of the file data (DWORD) */
 428:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_FileSize		56		/* exFAT: File/Directory size (QWORD) */
 429:Middlewares/Third_Party/FatFs/src/ff.c **** 
 430:Middlewares/Third_Party/FatFs/src/ff.c **** #define	SZDIRE				32		/* Size of a directory entry */
 431:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DDEM				0xE5	/* Deleted directory entry mark set to DIR_Name[0] */
ARM GAS  /tmp/ccwdO2Zj.s 			page 9


 432:Middlewares/Third_Party/FatFs/src/ff.c **** #define	RDDEM				0x05	/* Replacement of the character collides with DDEM */
 433:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LLEF				0x40	/* Last long entry flag in LDIR_Ord */
 434:Middlewares/Third_Party/FatFs/src/ff.c **** 
 435:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FSI_LeadSig			0		/* FAT32 FSI: Leading signature (DWORD) */
 436:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FSI_StrucSig		484		/* FAT32 FSI: Structure signature (DWORD) */
 437:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FSI_Free_Count		488		/* FAT32 FSI: Number of free clusters (DWORD) */
 438:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FSI_Nxt_Free		492		/* FAT32 FSI: Last allocated cluster (DWORD) */
 439:Middlewares/Third_Party/FatFs/src/ff.c **** 
 440:Middlewares/Third_Party/FatFs/src/ff.c **** #define MBR_Table			446		/* MBR: Offset of partition table in the MBR */
 441:Middlewares/Third_Party/FatFs/src/ff.c **** #define	SZ_PTE				16		/* MBR: Size of a partition table entry */
 442:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_Boot			0		/* MBR PTE: Boot indicator */
 443:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_StHead			1		/* MBR PTE: Start head */
 444:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_StSec			2		/* MBR PTE: Start sector */
 445:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_StCyl			3		/* MBR PTE: Start cylinder */
 446:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_System			4		/* MBR PTE: System ID */
 447:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_EdHead			5		/* MBR PTE: End head */
 448:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_EdSec			6		/* MBR PTE: End sector */
 449:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_EdCyl			7		/* MBR PTE: End cylinder */
 450:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_StLba			8		/* MBR PTE: Start in LBA */
 451:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_SizLba			12		/* MBR PTE: Size in LBA */
 452:Middlewares/Third_Party/FatFs/src/ff.c **** 
 453:Middlewares/Third_Party/FatFs/src/ff.c **** 
 454:Middlewares/Third_Party/FatFs/src/ff.c **** /* Post process after fatal error on file operation */
 455:Middlewares/Third_Party/FatFs/src/ff.c **** #define	ABORT(fs, res)		{ fp->err = (BYTE)(res); LEAVE_FF(fs, res); }
 456:Middlewares/Third_Party/FatFs/src/ff.c **** 
 457:Middlewares/Third_Party/FatFs/src/ff.c **** 
 458:Middlewares/Third_Party/FatFs/src/ff.c **** /* Reentrancy related */
 459:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
 460:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN == 1
 461:Middlewares/Third_Party/FatFs/src/ff.c **** #error Static LFN work area cannot be used at thread-safe configuration
 462:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 463:Middlewares/Third_Party/FatFs/src/ff.c **** #define	ENTER_FF(fs)		{ if (!lock_fs(fs)) return FR_TIMEOUT; }
 464:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LEAVE_FF(fs, res)	{ unlock_fs(fs, res); return res; }
 465:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 466:Middlewares/Third_Party/FatFs/src/ff.c **** #define	ENTER_FF(fs)
 467:Middlewares/Third_Party/FatFs/src/ff.c **** #define LEAVE_FF(fs, res)	return res
 468:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 469:Middlewares/Third_Party/FatFs/src/ff.c **** 
 470:Middlewares/Third_Party/FatFs/src/ff.c **** 
 471:Middlewares/Third_Party/FatFs/src/ff.c **** /* Definitions of volume - partition conversion */
 472:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MULTI_PARTITION
 473:Middlewares/Third_Party/FatFs/src/ff.c **** #define LD2PD(vol) VolToPart[vol].pd	/* Get physical drive number */
 474:Middlewares/Third_Party/FatFs/src/ff.c **** #define LD2PT(vol) VolToPart[vol].pt	/* Get partition index */
 475:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 476:Middlewares/Third_Party/FatFs/src/ff.c **** #define LD2PD(vol) (BYTE)(vol)	/* Each logical drive is bound to the same physical drive number */
 477:Middlewares/Third_Party/FatFs/src/ff.c **** #define LD2PT(vol) 0			/* Find first valid partition or in SFD */
 478:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 479:Middlewares/Third_Party/FatFs/src/ff.c **** 
 480:Middlewares/Third_Party/FatFs/src/ff.c **** 
 481:Middlewares/Third_Party/FatFs/src/ff.c **** /* Definitions of sector size */
 482:Middlewares/Third_Party/FatFs/src/ff.c **** #if (_MAX_SS < _MIN_SS) || (_MAX_SS != 512 && _MAX_SS != 1024 && _MAX_SS != 2048 && _MAX_SS != 4096
 483:Middlewares/Third_Party/FatFs/src/ff.c **** #error Wrong sector size configuration
 484:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 485:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS == _MIN_SS
 486:Middlewares/Third_Party/FatFs/src/ff.c **** #define	SS(fs)	((UINT)_MAX_SS)	/* Fixed sector size */
 487:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 488:Middlewares/Third_Party/FatFs/src/ff.c **** #define	SS(fs)	((fs)->ssize)	/* Variable sector size */
ARM GAS  /tmp/ccwdO2Zj.s 			page 10


 489:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 490:Middlewares/Third_Party/FatFs/src/ff.c **** 
 491:Middlewares/Third_Party/FatFs/src/ff.c **** 
 492:Middlewares/Third_Party/FatFs/src/ff.c **** /* Timestamp */
 493:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_NORTC == 1
 494:Middlewares/Third_Party/FatFs/src/ff.c **** #if _NORTC_YEAR < 1980 || _NORTC_YEAR > 2107 || _NORTC_MON < 1 || _NORTC_MON > 12 || _NORTC_MDAY < 
 495:Middlewares/Third_Party/FatFs/src/ff.c **** #error Invalid _FS_NORTC settings
 496:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 497:Middlewares/Third_Party/FatFs/src/ff.c **** #define GET_FATTIME()	((DWORD)(_NORTC_YEAR - 1980) << 25 | (DWORD)_NORTC_MON << 21 | (DWORD)_NORTC_
 498:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 499:Middlewares/Third_Party/FatFs/src/ff.c **** #define GET_FATTIME()	get_fattime()
 500:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 501:Middlewares/Third_Party/FatFs/src/ff.c **** 
 502:Middlewares/Third_Party/FatFs/src/ff.c **** 
 503:Middlewares/Third_Party/FatFs/src/ff.c **** /* File lock controls */
 504:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 505:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_READONLY
 506:Middlewares/Third_Party/FatFs/src/ff.c **** #error _FS_LOCK must be 0 at read-only configuration
 507:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 508:Middlewares/Third_Party/FatFs/src/ff.c **** typedef struct {
 509:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;		/* Object ID 1, volume (NULL:blank entry) */
 510:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clu;		/* Object ID 2, containing directory (0:root) */
 511:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ofs;		/* Object ID 3, offset in the directory */
 512:Middlewares/Third_Party/FatFs/src/ff.c **** 	WORD ctr;		/* Object open counter, 0:none, 0x01..0xFF:read mode open count, 0x100:write mode */
 513:Middlewares/Third_Party/FatFs/src/ff.c **** } FILESEM;
 514:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 515:Middlewares/Third_Party/FatFs/src/ff.c **** 
 516:Middlewares/Third_Party/FatFs/src/ff.c **** 
 517:Middlewares/Third_Party/FatFs/src/ff.c **** 
 518:Middlewares/Third_Party/FatFs/src/ff.c **** 
 519:Middlewares/Third_Party/FatFs/src/ff.c **** 
 520:Middlewares/Third_Party/FatFs/src/ff.c **** /*--------------------------------------------------------------------------
 521:Middlewares/Third_Party/FatFs/src/ff.c **** 
 522:Middlewares/Third_Party/FatFs/src/ff.c ****    Module Private Work Area
 523:Middlewares/Third_Party/FatFs/src/ff.c **** 
 524:Middlewares/Third_Party/FatFs/src/ff.c **** ---------------------------------------------------------------------------*/
 525:Middlewares/Third_Party/FatFs/src/ff.c **** 
 526:Middlewares/Third_Party/FatFs/src/ff.c **** /* Remark: Variables defined here without initial value shall be guaranteed
 527:Middlewares/Third_Party/FatFs/src/ff.c **** /  zero/null at start-up. If not, the linker option or start-up routine is
 528:Middlewares/Third_Party/FatFs/src/ff.c **** /  not compliance with C standard. */
 529:Middlewares/Third_Party/FatFs/src/ff.c **** 
 530:Middlewares/Third_Party/FatFs/src/ff.c **** #if _VOLUMES < 1 || _VOLUMES > 10
 531:Middlewares/Third_Party/FatFs/src/ff.c **** #error Wrong _VOLUMES setting
 532:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 533:Middlewares/Third_Party/FatFs/src/ff.c **** static FATFS *FatFs[_VOLUMES];	/* Pointer to the file system objects (logical drives) */
 534:Middlewares/Third_Party/FatFs/src/ff.c **** static WORD Fsid;				/* File system mount ID */
 535:Middlewares/Third_Party/FatFs/src/ff.c **** 
 536:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0 && _VOLUMES >= 2
 537:Middlewares/Third_Party/FatFs/src/ff.c **** static BYTE CurrVol;			/* Current drive */
 538:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 539:Middlewares/Third_Party/FatFs/src/ff.c **** 
 540:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 541:Middlewares/Third_Party/FatFs/src/ff.c **** static FILESEM Files[_FS_LOCK];	/* Open object lock semaphores */
 542:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 543:Middlewares/Third_Party/FatFs/src/ff.c **** 
 544:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN == 0		/* Non-LFN configuration */
 545:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DEF_NAMBUF
ARM GAS  /tmp/ccwdO2Zj.s 			page 11


 546:Middlewares/Third_Party/FatFs/src/ff.c **** #define INIT_NAMBUF(fs)
 547:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FREE_NAMBUF()
 548:Middlewares/Third_Party/FatFs/src/ff.c **** 
 549:Middlewares/Third_Party/FatFs/src/ff.c **** #else					/* LFN configuration */
 550:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_LFN < 12 || _MAX_LFN > 255
 551:Middlewares/Third_Party/FatFs/src/ff.c **** #error Wrong _MAX_LFN value
 552:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 553:Middlewares/Third_Party/FatFs/src/ff.c **** #define MAXDIRB(nc)	((nc + 44U) / 15 * SZDIRE)
 554:Middlewares/Third_Party/FatFs/src/ff.c **** 
 555:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN == 1		/* LFN enabled with static working buffer */
 556:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 557:Middlewares/Third_Party/FatFs/src/ff.c **** static BYTE	DirBuf[MAXDIRB(_MAX_LFN)];	/* Directory entry block scratchpad buffer */
 558:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 559:Middlewares/Third_Party/FatFs/src/ff.c **** static WCHAR LfnBuf[_MAX_LFN + 1];	/* LFN enabled with static working buffer */
 560:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DEF_NAMBUF
 561:Middlewares/Third_Party/FatFs/src/ff.c **** #define INIT_NAMBUF(fs)
 562:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FREE_NAMBUF()
 563:Middlewares/Third_Party/FatFs/src/ff.c **** 
 564:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _USE_LFN == 2 	/* LFN enabled with dynamic working buffer on the stack */
 565:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 566:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DEF_NAMBUF		WCHAR lbuf[_MAX_LFN+1]; BYTE dbuf[MAXDIRB(_MAX_LFN)];
 567:Middlewares/Third_Party/FatFs/src/ff.c **** #define INIT_NAMBUF(fs)	{ (fs)->lfnbuf = lbuf; (fs)->dirbuf = dbuf; }
 568:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FREE_NAMBUF()
 569:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 570:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DEF_NAMBUF		WCHAR lbuf[_MAX_LFN+1];
 571:Middlewares/Third_Party/FatFs/src/ff.c **** #define INIT_NAMBUF(fs)	{ (fs)->lfnbuf = lbuf; }
 572:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FREE_NAMBUF()
 573:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 574:Middlewares/Third_Party/FatFs/src/ff.c **** 
 575:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _USE_LFN == 3 	/* LFN enabled with dynamic working buffer on the heap */
 576:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 577:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DEF_NAMBUF		WCHAR *lfn;
 578:Middlewares/Third_Party/FatFs/src/ff.c **** #define INIT_NAMBUF(fs)	{ lfn = ff_memalloc((_MAX_LFN+1)*2 + MAXDIRB(_MAX_LFN)); if (!lfn) LEAVE_FF
 579:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FREE_NAMBUF()	ff_memfree(lfn)
 580:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 581:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DEF_NAMBUF		WCHAR *lfn;
 582:Middlewares/Third_Party/FatFs/src/ff.c **** #define INIT_NAMBUF(fs)	{ lfn = ff_memalloc((_MAX_LFN+1)*2); if (!lfn) LEAVE_FF(fs, FR_NOT_ENOUGH_C
 583:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FREE_NAMBUF()	ff_memfree(lfn)
 584:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 585:Middlewares/Third_Party/FatFs/src/ff.c **** 
 586:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 587:Middlewares/Third_Party/FatFs/src/ff.c **** #error Wrong _USE_LFN setting
 588:Middlewares/Third_Party/FatFs/src/ff.c **** 
 589:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 590:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* else _USE_LFN == 0 */
 591:Middlewares/Third_Party/FatFs/src/ff.c **** 
 592:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _EXCVT
 593:Middlewares/Third_Party/FatFs/src/ff.c **** static const BYTE ExCvt[] = _EXCVT;	/* Upper conversion table for SBCS extended characters */
 594:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 595:Middlewares/Third_Party/FatFs/src/ff.c **** 
 596:Middlewares/Third_Party/FatFs/src/ff.c **** 
 597:Middlewares/Third_Party/FatFs/src/ff.c **** 
 598:Middlewares/Third_Party/FatFs/src/ff.c **** 
 599:Middlewares/Third_Party/FatFs/src/ff.c **** 
 600:Middlewares/Third_Party/FatFs/src/ff.c **** 
 601:Middlewares/Third_Party/FatFs/src/ff.c **** /*--------------------------------------------------------------------------
 602:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/ccwdO2Zj.s 			page 12


 603:Middlewares/Third_Party/FatFs/src/ff.c ****    Module Private Functions
 604:Middlewares/Third_Party/FatFs/src/ff.c **** 
 605:Middlewares/Third_Party/FatFs/src/ff.c **** ---------------------------------------------------------------------------*/
 606:Middlewares/Third_Party/FatFs/src/ff.c **** 
 607:Middlewares/Third_Party/FatFs/src/ff.c **** 
 608:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 609:Middlewares/Third_Party/FatFs/src/ff.c **** /* Load/Store multi-byte word in the FAT structure                       */
 610:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 611:Middlewares/Third_Party/FatFs/src/ff.c **** 
 612:Middlewares/Third_Party/FatFs/src/ff.c **** static
 613:Middlewares/Third_Party/FatFs/src/ff.c **** WORD ld_word (const BYTE* ptr)	/*	 Load a 2-byte little-endian word */
 614:Middlewares/Third_Party/FatFs/src/ff.c **** {
  27              		.loc 1 614 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
 615:Middlewares/Third_Party/FatFs/src/ff.c **** 	WORD rv;
 616:Middlewares/Third_Party/FatFs/src/ff.c **** 
 617:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = ptr[1];
  33              		.loc 1 617 0
  34 0000 4278     		ldrb	r2, [r0, #1]	@ zero_extendqisi2
  35              	.LVL1:
 618:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[0];
  36              		.loc 1 618 0
  37 0002 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
  38              	.LVL2:
 619:Middlewares/Third_Party/FatFs/src/ff.c **** 	return rv;
 620:Middlewares/Third_Party/FatFs/src/ff.c **** }
  39              		.loc 1 620 0
  40 0004 40EA0220 		orr	r0, r0, r2, lsl #8
  41              	.LVL3:
  42 0008 7047     		bx	lr
  43              		.cfi_endproc
  44              	.LFE146:
  46              		.section	.text.ld_dword,"ax",%progbits
  47              		.align	1
  48              		.syntax unified
  49              		.thumb
  50              		.thumb_func
  51              		.fpu fpv5-sp-d16
  53              	ld_dword:
  54              	.LFB147:
 621:Middlewares/Third_Party/FatFs/src/ff.c **** 
 622:Middlewares/Third_Party/FatFs/src/ff.c **** static
 623:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD ld_dword (const BYTE* ptr)	/* Load a 4-byte little-endian word */
 624:Middlewares/Third_Party/FatFs/src/ff.c **** {
  55              		.loc 1 624 0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		@ link register save eliminated.
  60              	.LVL4:
 625:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD rv;
 626:Middlewares/Third_Party/FatFs/src/ff.c **** 
 627:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = ptr[3];
ARM GAS  /tmp/ccwdO2Zj.s 			page 13


  61              		.loc 1 627 0
  62 0000 C278     		ldrb	r2, [r0, #3]	@ zero_extendqisi2
  63              	.LVL5:
 628:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[2];
  64              		.loc 1 628 0
  65 0002 8378     		ldrb	r3, [r0, #2]	@ zero_extendqisi2
  66 0004 43EA0222 		orr	r2, r3, r2, lsl #8
  67              	.LVL6:
 629:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[1];
  68              		.loc 1 629 0
  69 0008 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
  70 000a 43EA0223 		orr	r3, r3, r2, lsl #8
  71              	.LVL7:
 630:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[0];
  72              		.loc 1 630 0
  73 000e 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
  74              	.LVL8:
 631:Middlewares/Third_Party/FatFs/src/ff.c **** 	return rv;
 632:Middlewares/Third_Party/FatFs/src/ff.c **** }
  75              		.loc 1 632 0
  76 0010 40EA0320 		orr	r0, r0, r3, lsl #8
  77              	.LVL9:
  78 0014 7047     		bx	lr
  79              		.cfi_endproc
  80              	.LFE147:
  82              		.section	.text.st_word,"ax",%progbits
  83              		.align	1
  84              		.syntax unified
  85              		.thumb
  86              		.thumb_func
  87              		.fpu fpv5-sp-d16
  89              	st_word:
  90              	.LFB148:
 633:Middlewares/Third_Party/FatFs/src/ff.c **** 
 634:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 635:Middlewares/Third_Party/FatFs/src/ff.c **** static
 636:Middlewares/Third_Party/FatFs/src/ff.c **** QWORD ld_qword (const BYTE* ptr)	/* Load an 8-byte little-endian word */
 637:Middlewares/Third_Party/FatFs/src/ff.c **** {
 638:Middlewares/Third_Party/FatFs/src/ff.c **** 	QWORD rv;
 639:Middlewares/Third_Party/FatFs/src/ff.c **** 
 640:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = ptr[7];
 641:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[6];
 642:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[5];
 643:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[4];
 644:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[3];
 645:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[2];
 646:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[1];
 647:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[0];
 648:Middlewares/Third_Party/FatFs/src/ff.c **** 	return rv;
 649:Middlewares/Third_Party/FatFs/src/ff.c **** }
 650:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 651:Middlewares/Third_Party/FatFs/src/ff.c **** 
 652:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 653:Middlewares/Third_Party/FatFs/src/ff.c **** static
 654:Middlewares/Third_Party/FatFs/src/ff.c **** void st_word (BYTE* ptr, WORD val)	/* Store a 2-byte word in little-endian */
 655:Middlewares/Third_Party/FatFs/src/ff.c **** {
  91              		.loc 1 655 0
ARM GAS  /tmp/ccwdO2Zj.s 			page 14


  92              		.cfi_startproc
  93              		@ args = 0, pretend = 0, frame = 0
  94              		@ frame_needed = 0, uses_anonymous_args = 0
  95              		@ link register save eliminated.
  96              	.LVL10:
 656:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
  97              		.loc 1 656 0
  98 0000 0170     		strb	r1, [r0]
  99              	.LVL11:
 657:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val;
 100              		.loc 1 657 0
 101 0002 090A     		lsrs	r1, r1, #8
 102              	.LVL12:
 103 0004 4170     		strb	r1, [r0, #1]
 658:Middlewares/Third_Party/FatFs/src/ff.c **** }
 104              		.loc 1 658 0
 105 0006 7047     		bx	lr
 106              		.cfi_endproc
 107              	.LFE148:
 109              		.section	.text.st_dword,"ax",%progbits
 110              		.align	1
 111              		.syntax unified
 112              		.thumb
 113              		.thumb_func
 114              		.fpu fpv5-sp-d16
 116              	st_dword:
 117              	.LFB149:
 659:Middlewares/Third_Party/FatFs/src/ff.c **** 
 660:Middlewares/Third_Party/FatFs/src/ff.c **** static
 661:Middlewares/Third_Party/FatFs/src/ff.c **** void st_dword (BYTE* ptr, DWORD val)	/* Store a 4-byte word in little-endian */
 662:Middlewares/Third_Party/FatFs/src/ff.c **** {
 118              		.loc 1 662 0
 119              		.cfi_startproc
 120              		@ args = 0, pretend = 0, frame = 0
 121              		@ frame_needed = 0, uses_anonymous_args = 0
 122              		@ link register save eliminated.
 123              	.LVL13:
 663:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 124              		.loc 1 663 0
 125 0000 0170     		strb	r1, [r0]
 126              	.LVL14:
 664:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 127              		.loc 1 664 0
 128 0002 C1F30723 		ubfx	r3, r1, #8, #8
 129 0006 4370     		strb	r3, [r0, #1]
 130              	.LVL15:
 665:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 131              		.loc 1 665 0
 132 0008 C1F30743 		ubfx	r3, r1, #16, #8
 133 000c 8370     		strb	r3, [r0, #2]
 134              	.LVL16:
 666:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val;
 135              		.loc 1 666 0
 136 000e 090E     		lsrs	r1, r1, #24
 137              	.LVL17:
 138 0010 C170     		strb	r1, [r0, #3]
 667:Middlewares/Third_Party/FatFs/src/ff.c **** }
ARM GAS  /tmp/ccwdO2Zj.s 			page 15


 139              		.loc 1 667 0
 140 0012 7047     		bx	lr
 141              		.cfi_endproc
 142              	.LFE149:
 144              		.section	.text.mem_cpy,"ax",%progbits
 145              		.align	1
 146              		.syntax unified
 147              		.thumb
 148              		.thumb_func
 149              		.fpu fpv5-sp-d16
 151              	mem_cpy:
 152              	.LFB150:
 668:Middlewares/Third_Party/FatFs/src/ff.c **** 
 669:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 670:Middlewares/Third_Party/FatFs/src/ff.c **** static
 671:Middlewares/Third_Party/FatFs/src/ff.c **** void st_qword (BYTE* ptr, QWORD val)	/* Store an 8-byte word in little-endian */
 672:Middlewares/Third_Party/FatFs/src/ff.c **** {
 673:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 674:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 675:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 676:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 677:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 678:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 679:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 680:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val;
 681:Middlewares/Third_Party/FatFs/src/ff.c **** }
 682:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 683:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* !_FS_READONLY */
 684:Middlewares/Third_Party/FatFs/src/ff.c **** 
 685:Middlewares/Third_Party/FatFs/src/ff.c **** 
 686:Middlewares/Third_Party/FatFs/src/ff.c **** 
 687:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 688:Middlewares/Third_Party/FatFs/src/ff.c **** /* String functions                                                      */
 689:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 690:Middlewares/Third_Party/FatFs/src/ff.c **** 
 691:Middlewares/Third_Party/FatFs/src/ff.c **** /* Copy memory to memory */
 692:Middlewares/Third_Party/FatFs/src/ff.c **** static
 693:Middlewares/Third_Party/FatFs/src/ff.c **** void mem_cpy (void* dst, const void* src, UINT cnt) {
 153              		.loc 1 693 0
 154              		.cfi_startproc
 155              		@ args = 0, pretend = 0, frame = 0
 156              		@ frame_needed = 0, uses_anonymous_args = 0
 157              		@ link register save eliminated.
 158              	.LVL18:
 694:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *d = (BYTE*)dst;
 695:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE *s = (const BYTE*)src;
 696:Middlewares/Third_Party/FatFs/src/ff.c **** 
 697:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (cnt) {
 159              		.loc 1 697 0
 160 0000 1346     		mov	r3, r2
 161 0002 2AB1     		cbz	r2, .L5
 162              	.LVL19:
 163              	.L7:
 698:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
 699:Middlewares/Third_Party/FatFs/src/ff.c **** 			*d++ = *s++;
 164              		.loc 1 699 0 discriminator 1
 165 0004 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
ARM GAS  /tmp/ccwdO2Zj.s 			page 16


 166 0006 0270     		strb	r2, [r0]
 167              	.LVL20:
 168 0008 0130     		adds	r0, r0, #1
 169              	.LVL21:
 170 000a 0131     		adds	r1, r1, #1
 171              	.LVL22:
 700:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (--cnt);
 172              		.loc 1 700 0 discriminator 1
 173 000c 013B     		subs	r3, r3, #1
 174              	.LVL23:
 175 000e F9D1     		bne	.L7
 176              	.L5:
 701:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 702:Middlewares/Third_Party/FatFs/src/ff.c **** }
 177              		.loc 1 702 0
 178 0010 7047     		bx	lr
 179              		.cfi_endproc
 180              	.LFE150:
 182              		.section	.text.mem_set,"ax",%progbits
 183              		.align	1
 184              		.syntax unified
 185              		.thumb
 186              		.thumb_func
 187              		.fpu fpv5-sp-d16
 189              	mem_set:
 190              	.LFB151:
 703:Middlewares/Third_Party/FatFs/src/ff.c **** 
 704:Middlewares/Third_Party/FatFs/src/ff.c **** /* Fill memory block */
 705:Middlewares/Third_Party/FatFs/src/ff.c **** static
 706:Middlewares/Third_Party/FatFs/src/ff.c **** void mem_set (void* dst, int val, UINT cnt) {
 191              		.loc 1 706 0
 192              		.cfi_startproc
 193              		@ args = 0, pretend = 0, frame = 0
 194              		@ frame_needed = 0, uses_anonymous_args = 0
 195              		@ link register save eliminated.
 196              	.LVL24:
 197              	.L9:
 707:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *d = (BYTE*)dst;
 708:Middlewares/Third_Party/FatFs/src/ff.c **** 
 709:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
 710:Middlewares/Third_Party/FatFs/src/ff.c **** 		*d++ = (BYTE)val;
 198              		.loc 1 710 0 discriminator 1
 199 0000 0170     		strb	r1, [r0]
 200              	.LVL25:
 201 0002 0130     		adds	r0, r0, #1
 202              	.LVL26:
 711:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (--cnt);
 203              		.loc 1 711 0 discriminator 1
 204 0004 013A     		subs	r2, r2, #1
 205              	.LVL27:
 206 0006 FBD1     		bne	.L9
 712:Middlewares/Third_Party/FatFs/src/ff.c **** }
 207              		.loc 1 712 0
 208 0008 7047     		bx	lr
 209              		.cfi_endproc
 210              	.LFE151:
 212              		.section	.text.mem_cmp,"ax",%progbits
ARM GAS  /tmp/ccwdO2Zj.s 			page 17


 213              		.align	1
 214              		.syntax unified
 215              		.thumb
 216              		.thumb_func
 217              		.fpu fpv5-sp-d16
 219              	mem_cmp:
 220              	.LFB152:
 713:Middlewares/Third_Party/FatFs/src/ff.c **** 
 714:Middlewares/Third_Party/FatFs/src/ff.c **** /* Compare memory block */
 715:Middlewares/Third_Party/FatFs/src/ff.c **** static
 716:Middlewares/Third_Party/FatFs/src/ff.c **** int mem_cmp (const void* dst, const void* src, UINT cnt) {	/* ZR:same, NZ:different */
 221              		.loc 1 716 0
 222              		.cfi_startproc
 223              		@ args = 0, pretend = 0, frame = 0
 224              		@ frame_needed = 0, uses_anonymous_args = 0
 225              		@ link register save eliminated.
 226              	.LVL28:
 227 0000 30B4     		push	{r4, r5}
 228              	.LCFI0:
 229              		.cfi_def_cfa_offset 8
 230              		.cfi_offset 4, -8
 231              		.cfi_offset 5, -4
 232              	.LVL29:
 233              	.L12:
 717:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE *d = (const BYTE *)dst, *s = (const BYTE *)src;
 718:Middlewares/Third_Party/FatFs/src/ff.c **** 	int r = 0;
 719:Middlewares/Third_Party/FatFs/src/ff.c **** 
 720:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
 721:Middlewares/Third_Party/FatFs/src/ff.c **** 		r = *d++ - *s++;
 234              		.loc 1 721 0 discriminator 2
 235 0002 451C     		adds	r5, r0, #1
 236              	.LVL30:
 237 0004 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 238              	.LVL31:
 239 0006 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 240 0008 1B1A     		subs	r3, r3, r0
 241              	.LVL32:
 722:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (--cnt && r == 0);
 242              		.loc 1 722 0 discriminator 2
 243 000a 013A     		subs	r2, r2, #1
 244              	.LVL33:
 245 000c 04D0     		beq	.L10
 246 000e 4C1C     		adds	r4, r1, #1
 247              	.LVL34:
 721:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (--cnt && r == 0);
 248              		.loc 1 721 0 discriminator 1
 249 0010 2846     		mov	r0, r5
 250 0012 2146     		mov	r1, r4
 251              		.loc 1 722 0 discriminator 1
 252 0014 002B     		cmp	r3, #0
 253 0016 F4D0     		beq	.L12
 254              	.LVL35:
 255              	.L10:
 723:Middlewares/Third_Party/FatFs/src/ff.c **** 
 724:Middlewares/Third_Party/FatFs/src/ff.c **** 	return r;
 725:Middlewares/Third_Party/FatFs/src/ff.c **** }
 256              		.loc 1 725 0
ARM GAS  /tmp/ccwdO2Zj.s 			page 18


 257 0018 1846     		mov	r0, r3
 258 001a 30BC     		pop	{r4, r5}
 259              	.LCFI1:
 260              		.cfi_restore 5
 261              		.cfi_restore 4
 262              		.cfi_def_cfa_offset 0
 263              	.LVL36:
 264 001c 7047     		bx	lr
 265              		.cfi_endproc
 266              	.LFE152:
 268              		.section	.text.chk_chr,"ax",%progbits
 269              		.align	1
 270              		.syntax unified
 271              		.thumb
 272              		.thumb_func
 273              		.fpu fpv5-sp-d16
 275              	chk_chr:
 276              	.LFB153:
 726:Middlewares/Third_Party/FatFs/src/ff.c **** 
 727:Middlewares/Third_Party/FatFs/src/ff.c **** /* Check if chr is contained in the string */
 728:Middlewares/Third_Party/FatFs/src/ff.c **** static
 729:Middlewares/Third_Party/FatFs/src/ff.c **** int chk_chr (const char* str, int chr) {	/* NZ:contained, ZR:not contained */
 277              		.loc 1 729 0
 278              		.cfi_startproc
 279              		@ args = 0, pretend = 0, frame = 0
 280              		@ frame_needed = 0, uses_anonymous_args = 0
 281              		@ link register save eliminated.
 282              	.LVL37:
 730:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (*str && *str != chr) str++;
 283              		.loc 1 730 0
 284 0000 00E0     		b	.L15
 285              	.L17:
 286              		.loc 1 730 0 is_stmt 0 discriminator 3
 287 0002 0130     		adds	r0, r0, #1
 288              	.LVL38:
 289              	.L15:
 290              		.loc 1 730 0 discriminator 1
 291 0004 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 292 0006 0BB1     		cbz	r3, .L16
 293              		.loc 1 730 0 discriminator 2
 294 0008 8B42     		cmp	r3, r1
 295 000a FAD1     		bne	.L17
 296              	.L16:
 731:Middlewares/Third_Party/FatFs/src/ff.c **** 	return *str;
 732:Middlewares/Third_Party/FatFs/src/ff.c **** }
 297              		.loc 1 732 0 is_stmt 1
 298 000c 1846     		mov	r0, r3
 299              	.LVL39:
 300 000e 7047     		bx	lr
 301              		.cfi_endproc
 302              	.LFE153:
 304              		.section	.text.chk_lock,"ax",%progbits
 305              		.align	1
 306              		.syntax unified
 307              		.thumb
 308              		.thumb_func
 309              		.fpu fpv5-sp-d16
ARM GAS  /tmp/ccwdO2Zj.s 			page 19


 311              	chk_lock:
 312              	.LFB156:
 733:Middlewares/Third_Party/FatFs/src/ff.c **** 
 734:Middlewares/Third_Party/FatFs/src/ff.c **** 
 735:Middlewares/Third_Party/FatFs/src/ff.c **** 
 736:Middlewares/Third_Party/FatFs/src/ff.c **** 
 737:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
 738:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 739:Middlewares/Third_Party/FatFs/src/ff.c **** /* Request/Release grant to access the volume                            */
 740:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 741:Middlewares/Third_Party/FatFs/src/ff.c **** static
 742:Middlewares/Third_Party/FatFs/src/ff.c **** int lock_fs (
 743:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs		/* File system object */
 744:Middlewares/Third_Party/FatFs/src/ff.c **** )
 745:Middlewares/Third_Party/FatFs/src/ff.c **** {
 746:Middlewares/Third_Party/FatFs/src/ff.c **** 	return (fs && ff_req_grant(fs->sobj)) ? 1 : 0;
 747:Middlewares/Third_Party/FatFs/src/ff.c **** }
 748:Middlewares/Third_Party/FatFs/src/ff.c **** 
 749:Middlewares/Third_Party/FatFs/src/ff.c **** 
 750:Middlewares/Third_Party/FatFs/src/ff.c **** static
 751:Middlewares/Third_Party/FatFs/src/ff.c **** void unlock_fs (
 752:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,		/* File system object */
 753:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res		/* Result code to be returned */
 754:Middlewares/Third_Party/FatFs/src/ff.c **** )
 755:Middlewares/Third_Party/FatFs/src/ff.c **** {
 756:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs && res != FR_NOT_ENABLED && res != FR_INVALID_DRIVE && res != FR_TIMEOUT) {
 757:Middlewares/Third_Party/FatFs/src/ff.c **** 		ff_rel_grant(fs->sobj);
 758:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 759:Middlewares/Third_Party/FatFs/src/ff.c **** }
 760:Middlewares/Third_Party/FatFs/src/ff.c **** 
 761:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 762:Middlewares/Third_Party/FatFs/src/ff.c **** 
 763:Middlewares/Third_Party/FatFs/src/ff.c **** 
 764:Middlewares/Third_Party/FatFs/src/ff.c **** 
 765:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 766:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 767:Middlewares/Third_Party/FatFs/src/ff.c **** /* File lock control functions                                           */
 768:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 769:Middlewares/Third_Party/FatFs/src/ff.c **** 
 770:Middlewares/Third_Party/FatFs/src/ff.c **** static
 771:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT chk_lock (	/* Check if the file can be accessed */
 772:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,		/* Directory object pointing the file to be checked */
 773:Middlewares/Third_Party/FatFs/src/ff.c **** 	int acc			/* Desired access type (0:Read, 1:Write, 2:Delete/Rename) */
 774:Middlewares/Third_Party/FatFs/src/ff.c **** )
 775:Middlewares/Third_Party/FatFs/src/ff.c **** {
 313              		.loc 1 775 0
 314              		.cfi_startproc
 315              		@ args = 0, pretend = 0, frame = 0
 316              		@ frame_needed = 0, uses_anonymous_args = 0
 317              		@ link register save eliminated.
 318              	.LVL40:
 319 0000 30B4     		push	{r4, r5}
 320              	.LCFI2:
 321              		.cfi_def_cfa_offset 8
 322              		.cfi_offset 4, -8
 323              		.cfi_offset 5, -4
 324              	.LVL41:
ARM GAS  /tmp/ccwdO2Zj.s 			page 20


 776:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, be;
 777:Middlewares/Third_Party/FatFs/src/ff.c **** 
 778:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Search file semaphore table */
 779:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (i = be = 0; i < _FS_LOCK; i++) {
 325              		.loc 1 779 0
 326 0002 0025     		movs	r5, #0
 327 0004 2B46     		mov	r3, r5
 328 0006 01E0     		b	.L19
 329              	.LVL42:
 330              	.L25:
 780:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs) {	/* Existing entry */
 781:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (Files[i].fs == dp->obj.fs &&	 	/* Check if the object matched with an open object */
 782:Middlewares/Third_Party/FatFs/src/ff.c **** 				Files[i].clu == dp->obj.sclust &&
 783:Middlewares/Third_Party/FatFs/src/ff.c **** 				Files[i].ofs == dp->dptr) break;
 784:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {			/* Blank entry */
 785:Middlewares/Third_Party/FatFs/src/ff.c **** 			be = 1;
 331              		.loc 1 785 0
 332 0008 0125     		movs	r5, #1
 333              	.LVL43:
 334              	.L20:
 779:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs) {	/* Existing entry */
 335              		.loc 1 779 0 discriminator 2
 336 000a 0133     		adds	r3, r3, #1
 337              	.LVL44:
 338              	.L19:
 779:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs) {	/* Existing entry */
 339              		.loc 1 779 0 is_stmt 0 discriminator 1
 340 000c 012B     		cmp	r3, #1
 341 000e 15D8     		bhi	.L21
 780:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs) {	/* Existing entry */
 342              		.loc 1 780 0 is_stmt 1
 343 0010 1A01     		lsls	r2, r3, #4
 344 0012 174C     		ldr	r4, .L32
 345 0014 A258     		ldr	r2, [r4, r2]
 346 0016 002A     		cmp	r2, #0
 347 0018 F6D0     		beq	.L25
 781:Middlewares/Third_Party/FatFs/src/ff.c **** 				Files[i].clu == dp->obj.sclust &&
 348              		.loc 1 781 0
 349 001a 0468     		ldr	r4, [r0]
 350 001c A242     		cmp	r2, r4
 351 001e F4D1     		bne	.L20
 782:Middlewares/Third_Party/FatFs/src/ff.c **** 				Files[i].ofs == dp->dptr) break;
 352              		.loc 1 782 0 discriminator 1
 353 0020 134A     		ldr	r2, .L32
 354 0022 02EB0312 		add	r2, r2, r3, lsl #4
 355 0026 5468     		ldr	r4, [r2, #4]
 356 0028 8268     		ldr	r2, [r0, #8]
 781:Middlewares/Third_Party/FatFs/src/ff.c **** 				Files[i].clu == dp->obj.sclust &&
 357              		.loc 1 781 0 discriminator 1
 358 002a 9442     		cmp	r4, r2
 359 002c EDD1     		bne	.L20
 783:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {			/* Blank entry */
 360              		.loc 1 783 0
 361 002e 104A     		ldr	r2, .L32
 362 0030 02EB0312 		add	r2, r2, r3, lsl #4
 363 0034 9468     		ldr	r4, [r2, #8]
 364 0036 4269     		ldr	r2, [r0, #20]
ARM GAS  /tmp/ccwdO2Zj.s 			page 21


 782:Middlewares/Third_Party/FatFs/src/ff.c **** 				Files[i].ofs == dp->dptr) break;
 365              		.loc 1 782 0
 366 0038 9442     		cmp	r4, r2
 367 003a E6D1     		bne	.L20
 368              	.L21:
 786:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 787:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 788:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (i == _FS_LOCK) {	/* The object is not opened */
 369              		.loc 1 788 0
 370 003c 022B     		cmp	r3, #2
 371 003e 0AD0     		beq	.L30
 789:Middlewares/Third_Party/FatFs/src/ff.c **** 		return (be || acc == 2) ? FR_OK : FR_TOO_MANY_OPEN_FILES;	/* Is there a blank entry for new objec
 790:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 791:Middlewares/Third_Party/FatFs/src/ff.c **** 
 792:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* The object has been opened. Reject any open against writing file and all write mode open */
 793:Middlewares/Third_Party/FatFs/src/ff.c **** 	return (acc || Files[i].ctr == 0x100) ? FR_LOCKED : FR_OK;
 372              		.loc 1 793 0
 373 0040 A1B9     		cbnz	r1, .L27
 374              		.loc 1 793 0 is_stmt 0 discriminator 2
 375 0042 0B4A     		ldr	r2, .L32
 376 0044 02EB0313 		add	r3, r2, r3, lsl #4
 377              	.LVL45:
 378 0048 9B89     		ldrh	r3, [r3, #12]
 379 004a B3F5807F 		cmp	r3, #256
 380 004e 09D0     		beq	.L31
 381              		.loc 1 793 0
 382 0050 0020     		movs	r0, #0
 383              	.LVL46:
 384              	.L24:
 794:Middlewares/Third_Party/FatFs/src/ff.c **** }
 385              		.loc 1 794 0 is_stmt 1
 386 0052 30BC     		pop	{r4, r5}
 387              	.LCFI3:
 388              		.cfi_remember_state
 389              		.cfi_restore 5
 390              		.cfi_restore 4
 391              		.cfi_def_cfa_offset 0
 392 0054 7047     		bx	lr
 393              	.LVL47:
 394              	.L30:
 395              	.LCFI4:
 396              		.cfi_restore_state
 789:Middlewares/Third_Party/FatFs/src/ff.c **** 		return (be || acc == 2) ? FR_OK : FR_TOO_MANY_OPEN_FILES;	/* Is there a blank entry for new objec
 397              		.loc 1 789 0
 398 0056 0229     		cmp	r1, #2
 399 0058 08BF     		it	eq
 400 005a 45F00105 		orreq	r5, r5, #1
 401              	.LVL48:
 402 005e 1DB1     		cbz	r5, .L26
 403 0060 0020     		movs	r0, #0
 404              	.LVL49:
 405 0062 F6E7     		b	.L24
 406              	.LVL50:
 407              	.L31:
 793:Middlewares/Third_Party/FatFs/src/ff.c **** }
 408              		.loc 1 793 0
 409 0064 1020     		movs	r0, #16
ARM GAS  /tmp/ccwdO2Zj.s 			page 22


 410              	.LVL51:
 411 0066 F4E7     		b	.L24
 412              	.LVL52:
 413              	.L26:
 789:Middlewares/Third_Party/FatFs/src/ff.c **** 		return (be || acc == 2) ? FR_OK : FR_TOO_MANY_OPEN_FILES;	/* Is there a blank entry for new objec
 414              		.loc 1 789 0
 415 0068 1220     		movs	r0, #18
 416              	.LVL53:
 417 006a F2E7     		b	.L24
 418              	.LVL54:
 419              	.L27:
 793:Middlewares/Third_Party/FatFs/src/ff.c **** }
 420              		.loc 1 793 0
 421 006c 1020     		movs	r0, #16
 422              	.LVL55:
 423 006e F0E7     		b	.L24
 424              	.L33:
 425              		.align	2
 426              	.L32:
 427 0070 00000000 		.word	.LANCHOR0
 428              		.cfi_endproc
 429              	.LFE156:
 431              		.section	.text.enq_lock,"ax",%progbits
 432              		.align	1
 433              		.syntax unified
 434              		.thumb
 435              		.thumb_func
 436              		.fpu fpv5-sp-d16
 438              	enq_lock:
 439              	.LFB157:
 795:Middlewares/Third_Party/FatFs/src/ff.c **** 
 796:Middlewares/Third_Party/FatFs/src/ff.c **** 
 797:Middlewares/Third_Party/FatFs/src/ff.c **** static
 798:Middlewares/Third_Party/FatFs/src/ff.c **** int enq_lock (void)	/* Check if an entry is available for a new object */
 799:Middlewares/Third_Party/FatFs/src/ff.c **** {
 440              		.loc 1 799 0
 441              		.cfi_startproc
 442              		@ args = 0, pretend = 0, frame = 0
 443              		@ frame_needed = 0, uses_anonymous_args = 0
 444              		@ link register save eliminated.
 445              	.LVL56:
 800:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
 801:Middlewares/Third_Party/FatFs/src/ff.c **** 
 802:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (i = 0; i < _FS_LOCK && Files[i].fs; i++) ;
 446              		.loc 1 802 0
 447 0000 0020     		movs	r0, #0
 448 0002 00E0     		b	.L35
 449              	.LVL57:
 450              	.L37:
 451              		.loc 1 802 0 is_stmt 0 discriminator 4
 452 0004 0130     		adds	r0, r0, #1
 453              	.LVL58:
 454              	.L35:
 455              		.loc 1 802 0 discriminator 1
 456 0006 0128     		cmp	r0, #1
 457 0008 04D8     		bhi	.L36
 458              		.loc 1 802 0 discriminator 3
ARM GAS  /tmp/ccwdO2Zj.s 			page 23


 459 000a 0301     		lsls	r3, r0, #4
 460 000c 034A     		ldr	r2, .L38
 461 000e D358     		ldr	r3, [r2, r3]
 462 0010 002B     		cmp	r3, #0
 463 0012 F7D1     		bne	.L37
 464              	.L36:
 803:Middlewares/Third_Party/FatFs/src/ff.c **** 	return (i == _FS_LOCK) ? 0 : 1;
 804:Middlewares/Third_Party/FatFs/src/ff.c **** }
 465              		.loc 1 804 0 is_stmt 1
 466 0014 0238     		subs	r0, r0, #2
 467              	.LVL59:
 468 0016 18BF     		it	ne
 469 0018 0120     		movne	r0, #1
 470              	.LVL60:
 471 001a 7047     		bx	lr
 472              	.L39:
 473              		.align	2
 474              	.L38:
 475 001c 00000000 		.word	.LANCHOR0
 476              		.cfi_endproc
 477              	.LFE157:
 479              		.section	.text.inc_lock,"ax",%progbits
 480              		.align	1
 481              		.syntax unified
 482              		.thumb
 483              		.thumb_func
 484              		.fpu fpv5-sp-d16
 486              	inc_lock:
 487              	.LFB158:
 805:Middlewares/Third_Party/FatFs/src/ff.c **** 
 806:Middlewares/Third_Party/FatFs/src/ff.c **** 
 807:Middlewares/Third_Party/FatFs/src/ff.c **** static
 808:Middlewares/Third_Party/FatFs/src/ff.c **** UINT inc_lock (	/* Increment object open counter and returns its index (0:Internal error) */
 809:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,	/* Directory object pointing the file to register or increment */
 810:Middlewares/Third_Party/FatFs/src/ff.c **** 	int acc		/* Desired access (0:Read, 1:Write, 2:Delete/Rename) */
 811:Middlewares/Third_Party/FatFs/src/ff.c **** )
 812:Middlewares/Third_Party/FatFs/src/ff.c **** {
 488              		.loc 1 812 0
 489              		.cfi_startproc
 490              		@ args = 0, pretend = 0, frame = 0
 491              		@ frame_needed = 0, uses_anonymous_args = 0
 492              		@ link register save eliminated.
 493              	.LVL61:
 494 0000 70B4     		push	{r4, r5, r6}
 495              	.LCFI5:
 496              		.cfi_def_cfa_offset 12
 497              		.cfi_offset 4, -12
 498              		.cfi_offset 5, -8
 499              		.cfi_offset 6, -4
 500              	.LVL62:
 813:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
 814:Middlewares/Third_Party/FatFs/src/ff.c **** 
 815:Middlewares/Third_Party/FatFs/src/ff.c **** 
 816:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (i = 0; i < _FS_LOCK; i++) {	/* Find the object */
 501              		.loc 1 816 0
 502 0002 0023     		movs	r3, #0
 503 0004 00E0     		b	.L41
ARM GAS  /tmp/ccwdO2Zj.s 			page 24


 504              	.LVL63:
 505              	.L42:
 506              		.loc 1 816 0 is_stmt 0 discriminator 2
 507 0006 0133     		adds	r3, r3, #1
 508              	.LVL64:
 509              	.L41:
 510              		.loc 1 816 0 discriminator 1
 511 0008 012B     		cmp	r3, #1
 512 000a 13D8     		bhi	.L43
 817:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == dp->obj.fs &&
 513              		.loc 1 817 0 is_stmt 1
 514 000c 1A01     		lsls	r2, r3, #4
 515 000e 244C     		ldr	r4, .L58
 516 0010 A458     		ldr	r4, [r4, r2]
 517 0012 0268     		ldr	r2, [r0]
 518 0014 9442     		cmp	r4, r2
 519 0016 F6D1     		bne	.L42
 818:Middlewares/Third_Party/FatFs/src/ff.c **** 			Files[i].clu == dp->obj.sclust &&
 520              		.loc 1 818 0 discriminator 1
 521 0018 214A     		ldr	r2, .L58
 522 001a 02EB0312 		add	r2, r2, r3, lsl #4
 523 001e 5468     		ldr	r4, [r2, #4]
 524 0020 8268     		ldr	r2, [r0, #8]
 817:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == dp->obj.fs &&
 525              		.loc 1 817 0 discriminator 1
 526 0022 9442     		cmp	r4, r2
 527 0024 EFD1     		bne	.L42
 819:Middlewares/Third_Party/FatFs/src/ff.c **** 			Files[i].ofs == dp->dptr) break;
 528              		.loc 1 819 0
 529 0026 1E4A     		ldr	r2, .L58
 530 0028 02EB0312 		add	r2, r2, r3, lsl #4
 531 002c 9468     		ldr	r4, [r2, #8]
 532 002e 4269     		ldr	r2, [r0, #20]
 818:Middlewares/Third_Party/FatFs/src/ff.c **** 			Files[i].clu == dp->obj.sclust &&
 533              		.loc 1 818 0
 534 0030 9442     		cmp	r4, r2
 535 0032 E8D1     		bne	.L42
 536              	.L43:
 820:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 821:Middlewares/Third_Party/FatFs/src/ff.c **** 
 822:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (i == _FS_LOCK) {				/* Not opened. Register it as new. */
 537              		.loc 1 822 0
 538 0034 022B     		cmp	r3, #2
 539 0036 29D0     		beq	.L57
 540              	.LVL65:
 541              	.L46:
 823:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; i < _FS_LOCK && Files[i].fs; i++) ;
 824:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == _FS_LOCK) return 0;	/* No free entry to register (int err) */
 825:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].fs = dp->obj.fs;
 826:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].clu = dp->obj.sclust;
 827:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].ofs = dp->dptr;
 828:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].ctr = 0;
 829:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 830:Middlewares/Third_Party/FatFs/src/ff.c **** 
 831:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (acc && Files[i].ctr) return 0;	/* Access violation (int err) */
 542              		.loc 1 831 0
 543 0038 21B1     		cbz	r1, .L50
ARM GAS  /tmp/ccwdO2Zj.s 			page 25


 544              		.loc 1 831 0 is_stmt 0 discriminator 1
 545 003a 194A     		ldr	r2, .L58
 546 003c 02EB0312 		add	r2, r2, r3, lsl #4
 547 0040 9289     		ldrh	r2, [r2, #12]
 548 0042 52BB     		cbnz	r2, .L54
 549              	.L50:
 832:Middlewares/Third_Party/FatFs/src/ff.c **** 
 833:Middlewares/Third_Party/FatFs/src/ff.c **** 	Files[i].ctr = acc ? 0x100 : Files[i].ctr + 1;	/* Set semaphore value */
 550              		.loc 1 833 0 is_stmt 1
 551 0044 21BB     		cbnz	r1, .L55
 552              		.loc 1 833 0 is_stmt 0 discriminator 1
 553 0046 164A     		ldr	r2, .L58
 554 0048 02EB0312 		add	r2, r2, r3, lsl #4
 555 004c 9189     		ldrh	r1, [r2, #12]
 556              	.LVL66:
 557 004e 0131     		adds	r1, r1, #1
 558 0050 89B2     		uxth	r1, r1
 559              	.L51:
 560              		.loc 1 833 0 discriminator 4
 561 0052 134A     		ldr	r2, .L58
 562 0054 02EB0312 		add	r2, r2, r3, lsl #4
 563 0058 9181     		strh	r1, [r2, #12]	@ movhi
 834:Middlewares/Third_Party/FatFs/src/ff.c **** 
 835:Middlewares/Third_Party/FatFs/src/ff.c **** 	return i + 1;
 564              		.loc 1 835 0 is_stmt 1 discriminator 4
 565 005a 581C     		adds	r0, r3, #1
 566              	.L40:
 836:Middlewares/Third_Party/FatFs/src/ff.c **** }
 567              		.loc 1 836 0
 568 005c 70BC     		pop	{r4, r5, r6}
 569              	.LCFI6:
 570              		.cfi_remember_state
 571              		.cfi_restore 6
 572              		.cfi_restore 5
 573              		.cfi_restore 4
 574              		.cfi_def_cfa_offset 0
 575 005e 7047     		bx	lr
 576              	.LVL67:
 577              	.L48:
 578              	.LCFI7:
 579              		.cfi_restore_state
 823:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == _FS_LOCK) return 0;	/* No free entry to register (int err) */
 580              		.loc 1 823 0 discriminator 4
 581 0060 0133     		adds	r3, r3, #1
 582              	.LVL68:
 583              	.L45:
 823:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == _FS_LOCK) return 0;	/* No free entry to register (int err) */
 584              		.loc 1 823 0 is_stmt 0 discriminator 1
 585 0062 012B     		cmp	r3, #1
 586 0064 04D8     		bhi	.L47
 823:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == _FS_LOCK) return 0;	/* No free entry to register (int err) */
 587              		.loc 1 823 0 discriminator 3
 588 0066 1A01     		lsls	r2, r3, #4
 589 0068 0D4C     		ldr	r4, .L58
 590 006a A258     		ldr	r2, [r4, r2]
 591 006c 002A     		cmp	r2, #0
 592 006e F7D1     		bne	.L48
ARM GAS  /tmp/ccwdO2Zj.s 			page 26


 593              	.L47:
 824:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].fs = dp->obj.fs;
 594              		.loc 1 824 0 is_stmt 1
 595 0070 022B     		cmp	r3, #2
 596 0072 10D0     		beq	.L53
 825:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].clu = dp->obj.sclust;
 597              		.loc 1 825 0
 598 0074 0668     		ldr	r6, [r0]
 599 0076 0A4D     		ldr	r5, .L58
 600 0078 1C01     		lsls	r4, r3, #4
 601 007a 2A19     		adds	r2, r5, r4
 602 007c 2E51     		str	r6, [r5, r4]
 826:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].ofs = dp->dptr;
 603              		.loc 1 826 0
 604 007e 8468     		ldr	r4, [r0, #8]
 605 0080 5460     		str	r4, [r2, #4]
 827:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].ctr = 0;
 606              		.loc 1 827 0
 607 0082 4069     		ldr	r0, [r0, #20]
 608              	.LVL69:
 609 0084 9060     		str	r0, [r2, #8]
 828:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 610              		.loc 1 828 0
 611 0086 0020     		movs	r0, #0
 612 0088 9081     		strh	r0, [r2, #12]	@ movhi
 613 008a D5E7     		b	.L46
 614              	.LVL70:
 615              	.L57:
 823:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == _FS_LOCK) return 0;	/* No free entry to register (int err) */
 616              		.loc 1 823 0
 617 008c 0023     		movs	r3, #0
 618              	.LVL71:
 619 008e E8E7     		b	.L45
 620              	.LVL72:
 621              	.L55:
 833:Middlewares/Third_Party/FatFs/src/ff.c **** 
 622              		.loc 1 833 0
 623 0090 4FF48071 		mov	r1, #256
 624              	.LVL73:
 625 0094 DDE7     		b	.L51
 626              	.LVL74:
 627              	.L53:
 824:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].fs = dp->obj.fs;
 628              		.loc 1 824 0
 629 0096 0020     		movs	r0, #0
 630              	.LVL75:
 631 0098 E0E7     		b	.L40
 632              	.L54:
 831:Middlewares/Third_Party/FatFs/src/ff.c **** 
 633              		.loc 1 831 0
 634 009a 0020     		movs	r0, #0
 635 009c DEE7     		b	.L40
 636              	.L59:
 637 009e 00BF     		.align	2
 638              	.L58:
 639 00a0 00000000 		.word	.LANCHOR0
 640              		.cfi_endproc
ARM GAS  /tmp/ccwdO2Zj.s 			page 27


 641              	.LFE158:
 643              		.section	.text.dec_lock,"ax",%progbits
 644              		.align	1
 645              		.syntax unified
 646              		.thumb
 647              		.thumb_func
 648              		.fpu fpv5-sp-d16
 650              	dec_lock:
 651              	.LFB159:
 837:Middlewares/Third_Party/FatFs/src/ff.c **** 
 838:Middlewares/Third_Party/FatFs/src/ff.c **** 
 839:Middlewares/Third_Party/FatFs/src/ff.c **** static
 840:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dec_lock (	/* Decrement object open counter */
 841:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i			/* Semaphore index (1..) */
 842:Middlewares/Third_Party/FatFs/src/ff.c **** )
 843:Middlewares/Third_Party/FatFs/src/ff.c **** {
 652              		.loc 1 843 0
 653              		.cfi_startproc
 654              		@ args = 0, pretend = 0, frame = 0
 655              		@ frame_needed = 0, uses_anonymous_args = 0
 656              		@ link register save eliminated.
 657              	.LVL76:
 844:Middlewares/Third_Party/FatFs/src/ff.c **** 	WORD n;
 845:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 846:Middlewares/Third_Party/FatFs/src/ff.c **** 
 847:Middlewares/Third_Party/FatFs/src/ff.c **** 
 848:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (--i < _FS_LOCK) {	/* Shift index number origin from 0 */
 658              		.loc 1 848 0
 659 0000 0138     		subs	r0, r0, #1
 660              	.LVL77:
 661 0002 0128     		cmp	r0, #1
 662 0004 15D8     		bhi	.L63
 849:Middlewares/Third_Party/FatFs/src/ff.c **** 		n = Files[i].ctr;
 663              		.loc 1 849 0
 664 0006 0D4B     		ldr	r3, .L66
 665 0008 03EB0013 		add	r3, r3, r0, lsl #4
 666 000c 9B89     		ldrh	r3, [r3, #12]
 667              	.LVL78:
 850:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n == 0x100) n = 0;		/* If write mode open, delete the entry */
 668              		.loc 1 850 0
 669 000e B3F5807F 		cmp	r3, #256
 670 0012 03D0     		beq	.L64
 851:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n > 0) n--;				/* Decrement read mode open count */
 671              		.loc 1 851 0
 672 0014 1BB1     		cbz	r3, .L62
 673              		.loc 1 851 0 is_stmt 0 discriminator 1
 674 0016 013B     		subs	r3, r3, #1
 675              	.LVL79:
 676 0018 9BB2     		uxth	r3, r3
 677              	.LVL80:
 678 001a 00E0     		b	.L62
 679              	.L64:
 850:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n == 0x100) n = 0;		/* If write mode open, delete the entry */
 680              		.loc 1 850 0 is_stmt 1
 681 001c 0023     		movs	r3, #0
 682              	.LVL81:
 683              	.L62:
ARM GAS  /tmp/ccwdO2Zj.s 			page 28


 852:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].ctr = n;
 684              		.loc 1 852 0
 685 001e 074A     		ldr	r2, .L66
 686 0020 02EB0012 		add	r2, r2, r0, lsl #4
 687 0024 9381     		strh	r3, [r2, #12]	@ movhi
 853:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n == 0) Files[i].fs = 0;	/* Delete the entry if open count gets zero */
 688              		.loc 1 853 0
 689 0026 33B9     		cbnz	r3, .L65
 690              		.loc 1 853 0 is_stmt 0 discriminator 1
 691 0028 0301     		lsls	r3, r0, #4
 692              	.LVL82:
 693 002a 0020     		movs	r0, #0
 694              	.LVL83:
 695 002c 034A     		ldr	r2, .L66
 696              	.LVL84:
 697 002e D050     		str	r0, [r2, r3]
 698 0030 7047     		bx	lr
 699              	.LVL85:
 700              	.L63:
 854:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_OK;
 855:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
 856:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_INT_ERR;			/* Invalid index nunber */
 701              		.loc 1 856 0 is_stmt 1
 702 0032 0220     		movs	r0, #2
 703              	.LVL86:
 704 0034 7047     		bx	lr
 705              	.LVL87:
 706              	.L65:
 854:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_OK;
 707              		.loc 1 854 0
 708 0036 0020     		movs	r0, #0
 709              	.LVL88:
 857:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 858:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 859:Middlewares/Third_Party/FatFs/src/ff.c **** }
 710              		.loc 1 859 0
 711 0038 7047     		bx	lr
 712              	.L67:
 713 003a 00BF     		.align	2
 714              	.L66:
 715 003c 00000000 		.word	.LANCHOR0
 716              		.cfi_endproc
 717              	.LFE159:
 719              		.section	.text.clear_lock,"ax",%progbits
 720              		.align	1
 721              		.syntax unified
 722              		.thumb
 723              		.thumb_func
 724              		.fpu fpv5-sp-d16
 726              	clear_lock:
 727              	.LFB160:
 860:Middlewares/Third_Party/FatFs/src/ff.c **** 
 861:Middlewares/Third_Party/FatFs/src/ff.c **** 
 862:Middlewares/Third_Party/FatFs/src/ff.c **** static
 863:Middlewares/Third_Party/FatFs/src/ff.c **** void clear_lock (	/* Clear lock entries of the volume */
 864:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs
 865:Middlewares/Third_Party/FatFs/src/ff.c **** )
ARM GAS  /tmp/ccwdO2Zj.s 			page 29


 866:Middlewares/Third_Party/FatFs/src/ff.c **** {
 728              		.loc 1 866 0
 729              		.cfi_startproc
 730              		@ args = 0, pretend = 0, frame = 0
 731              		@ frame_needed = 0, uses_anonymous_args = 0
 732              		@ link register save eliminated.
 733              	.LVL89:
 867:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
 868:Middlewares/Third_Party/FatFs/src/ff.c **** 
 869:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (i = 0; i < _FS_LOCK; i++) {
 734              		.loc 1 869 0
 735 0000 0023     		movs	r3, #0
 736 0002 03E0     		b	.L73
 737              	.LVL90:
 738              	.L80:
 739              	.LCFI8:
 740              		.cfi_def_cfa_offset 4
 741              		.cfi_offset 4, -4
 870:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == fs) Files[i].fs = 0;
 871:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 872:Middlewares/Third_Party/FatFs/src/ff.c **** }
 742              		.loc 1 872 0
 743 0004 5DF8044B 		ldr	r4, [sp], #4
 744              	.LCFI9:
 745              		.cfi_restore 4
 746              		.cfi_def_cfa_offset 0
 747 0008 7047     		bx	lr
 748              	.L79:
 869:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == fs) Files[i].fs = 0;
 749              		.loc 1 869 0
 750 000a 0133     		adds	r3, r3, #1
 751              	.LVL91:
 752              	.L73:
 753 000c 012B     		cmp	r3, #1
 754 000e 11D8     		bhi	.L78
 870:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == fs) Files[i].fs = 0;
 755              		.loc 1 870 0
 756 0010 1A01     		lsls	r2, r3, #4
 757 0012 0949     		ldr	r1, .L81
 758 0014 8A58     		ldr	r2, [r1, r2]
 759 0016 8242     		cmp	r2, r0
 760 0018 F7D1     		bne	.L79
 866:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
 761              		.loc 1 866 0
 762 001a 10B4     		push	{r4}
 763              	.LCFI10:
 764              		.cfi_def_cfa_offset 4
 765              		.cfi_offset 4, -4
 766              	.L74:
 870:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == fs) Files[i].fs = 0;
 767              		.loc 1 870 0 discriminator 1
 768 001c 1A01     		lsls	r2, r3, #4
 769 001e 0024     		movs	r4, #0
 770 0020 8C50     		str	r4, [r1, r2]
 771              	.L70:
 869:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == fs) Files[i].fs = 0;
 772              		.loc 1 869 0 discriminator 2
ARM GAS  /tmp/ccwdO2Zj.s 			page 30


 773 0022 0133     		adds	r3, r3, #1
 774              	.LVL92:
 775 0024 012B     		cmp	r3, #1
 776 0026 EDD8     		bhi	.L80
 870:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == fs) Files[i].fs = 0;
 777              		.loc 1 870 0
 778 0028 1A01     		lsls	r2, r3, #4
 779 002a 0349     		ldr	r1, .L81
 780 002c 8A58     		ldr	r2, [r1, r2]
 781 002e 8242     		cmp	r2, r0
 782 0030 F7D1     		bne	.L70
 783 0032 F3E7     		b	.L74
 784              	.L78:
 785              	.LCFI11:
 786              		.cfi_def_cfa_offset 0
 787              		.cfi_restore 4
 788 0034 7047     		bx	lr
 789              	.L82:
 790 0036 00BF     		.align	2
 791              	.L81:
 792 0038 00000000 		.word	.LANCHOR0
 793              		.cfi_endproc
 794              	.LFE160:
 796              		.section	.text.clust2sect,"ax",%progbits
 797              		.align	1
 798              		.syntax unified
 799              		.thumb
 800              		.thumb_func
 801              		.fpu fpv5-sp-d16
 803              	clust2sect:
 804              	.LFB164:
 873:Middlewares/Third_Party/FatFs/src/ff.c **** 
 874:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _FS_LOCK != 0 */
 875:Middlewares/Third_Party/FatFs/src/ff.c **** 
 876:Middlewares/Third_Party/FatFs/src/ff.c **** 
 877:Middlewares/Third_Party/FatFs/src/ff.c **** 
 878:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 879:Middlewares/Third_Party/FatFs/src/ff.c **** /* Move/Flush disk access window in the file system object               */
 880:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 881:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 882:Middlewares/Third_Party/FatFs/src/ff.c **** static
 883:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT sync_window (	/* Returns FR_OK or FR_DISK_ERROR */
 884:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs			/* File system object */
 885:Middlewares/Third_Party/FatFs/src/ff.c **** )
 886:Middlewares/Third_Party/FatFs/src/ff.c **** {
 887:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD wsect;
 888:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nf;
 889:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_OK;
 890:Middlewares/Third_Party/FatFs/src/ff.c **** 
 891:Middlewares/Third_Party/FatFs/src/ff.c **** 
 892:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->wflag) {	/* Write back the sector if it is dirty */
 893:Middlewares/Third_Party/FatFs/src/ff.c **** 		wsect = fs->winsect;	/* Current sector number */
 894:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_write(fs->drv, fs->win, wsect, 1) != RES_OK) {
 895:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_DISK_ERR;
 896:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 897:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 0;
 898:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (wsect - fs->fatbase < fs->fsize) {		/* Is it in the FAT area? */
ARM GAS  /tmp/ccwdO2Zj.s 			page 31


 899:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (nf = fs->n_fats; nf >= 2; nf--) {	/* Reflect the change to all FAT copies */
 900:Middlewares/Third_Party/FatFs/src/ff.c **** 					wsect += fs->fsize;
 901:Middlewares/Third_Party/FatFs/src/ff.c **** 					disk_write(fs->drv, fs->win, wsect, 1);
 902:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 903:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 904:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 905:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 906:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 907:Middlewares/Third_Party/FatFs/src/ff.c **** }
 908:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 909:Middlewares/Third_Party/FatFs/src/ff.c **** 
 910:Middlewares/Third_Party/FatFs/src/ff.c **** 
 911:Middlewares/Third_Party/FatFs/src/ff.c **** static
 912:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT move_window (	/* Returns FR_OK or FR_DISK_ERROR */
 913:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,			/* File system object */
 914:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD sector		/* Sector number to make appearance in the fs->win[] */
 915:Middlewares/Third_Party/FatFs/src/ff.c **** )
 916:Middlewares/Third_Party/FatFs/src/ff.c **** {
 917:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_OK;
 918:Middlewares/Third_Party/FatFs/src/ff.c **** 
 919:Middlewares/Third_Party/FatFs/src/ff.c **** 
 920:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (sector != fs->winsect) {	/* Window offset changed? */
 921:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 922:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = sync_window(fs);		/* Write-back changes */
 923:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 924:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {			/* Fill sector window with new data */
 925:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_read(fs->drv, fs->win, sector, 1) != RES_OK) {
 926:Middlewares/Third_Party/FatFs/src/ff.c **** 				sector = 0xFFFFFFFF;	/* Invalidate window if data is not reliable */
 927:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_DISK_ERR;
 928:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 929:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->winsect = sector;
 930:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 931:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 932:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 933:Middlewares/Third_Party/FatFs/src/ff.c **** }
 934:Middlewares/Third_Party/FatFs/src/ff.c **** 
 935:Middlewares/Third_Party/FatFs/src/ff.c **** 
 936:Middlewares/Third_Party/FatFs/src/ff.c **** 
 937:Middlewares/Third_Party/FatFs/src/ff.c **** 
 938:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 939:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 940:Middlewares/Third_Party/FatFs/src/ff.c **** /* Synchronize file system and strage device                             */
 941:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 942:Middlewares/Third_Party/FatFs/src/ff.c **** 
 943:Middlewares/Third_Party/FatFs/src/ff.c **** static
 944:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT sync_fs (	/* FR_OK:succeeded, !=0:error */
 945:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs		/* File system object */
 946:Middlewares/Third_Party/FatFs/src/ff.c **** )
 947:Middlewares/Third_Party/FatFs/src/ff.c **** {
 948:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 949:Middlewares/Third_Party/FatFs/src/ff.c **** 
 950:Middlewares/Third_Party/FatFs/src/ff.c **** 
 951:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = sync_window(fs);
 952:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 953:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Update FSInfo sector if needed */
 954:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->fs_type == FS_FAT32 && fs->fsi_flag == 1) {
 955:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Create FSInfo structure */
ARM GAS  /tmp/ccwdO2Zj.s 			page 32


 956:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(fs->win, 0, SS(fs));
 957:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(fs->win + BS_55AA, 0xAA55);
 958:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(fs->win + FSI_LeadSig, 0x41615252);
 959:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(fs->win + FSI_StrucSig, 0x61417272);
 960:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(fs->win + FSI_Free_Count, fs->free_clst);
 961:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(fs->win + FSI_Nxt_Free, fs->last_clst);
 962:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Write it into the FSInfo sector */
 963:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->winsect = fs->volbase + 1;
 964:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_write(fs->drv, fs->win, fs->winsect, 1);
 965:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag = 0;
 966:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 967:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Make sure that no pending write process in the physical drive */
 968:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_ioctl(fs->drv, CTRL_SYNC, 0) != RES_OK) res = FR_DISK_ERR;
 969:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 970:Middlewares/Third_Party/FatFs/src/ff.c **** 
 971:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 972:Middlewares/Third_Party/FatFs/src/ff.c **** }
 973:Middlewares/Third_Party/FatFs/src/ff.c **** 
 974:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 975:Middlewares/Third_Party/FatFs/src/ff.c **** 
 976:Middlewares/Third_Party/FatFs/src/ff.c **** 
 977:Middlewares/Third_Party/FatFs/src/ff.c **** 
 978:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 979:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get sector# from cluster#                                             */
 980:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 981:Middlewares/Third_Party/FatFs/src/ff.c **** 
 982:Middlewares/Third_Party/FatFs/src/ff.c **** static
 983:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD clust2sect (	/* !=0:Sector number, 0:Failed (invalid cluster#) */
 984:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,		/* File system object */
 985:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst		/* Cluster# to be converted */
 986:Middlewares/Third_Party/FatFs/src/ff.c **** )
 987:Middlewares/Third_Party/FatFs/src/ff.c **** {
 805              		.loc 1 987 0
 806              		.cfi_startproc
 807              		@ args = 0, pretend = 0, frame = 0
 808              		@ frame_needed = 0, uses_anonymous_args = 0
 809              		@ link register save eliminated.
 810              	.LVL93:
 988:Middlewares/Third_Party/FatFs/src/ff.c **** 	clst -= 2;
 811              		.loc 1 988 0
 812 0000 0239     		subs	r1, r1, #2
 813              	.LVL94:
 989:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst >= fs->n_fatent - 2) return 0;		/* Invalid cluster# */
 814              		.loc 1 989 0
 815 0002 8369     		ldr	r3, [r0, #24]
 816 0004 023B     		subs	r3, r3, #2
 817 0006 8B42     		cmp	r3, r1
 818 0008 04D9     		bls	.L85
 990:Middlewares/Third_Party/FatFs/src/ff.c **** 	return clst * fs->csize + fs->database;
 819              		.loc 1 990 0
 820 000a 4389     		ldrh	r3, [r0, #10]
 821 000c C06A     		ldr	r0, [r0, #44]
 822              	.LVL95:
 823 000e 01FB0300 		mla	r0, r1, r3, r0
 824 0012 7047     		bx	lr
 825              	.LVL96:
 826              	.L85:
ARM GAS  /tmp/ccwdO2Zj.s 			page 33


 989:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst >= fs->n_fatent - 2) return 0;		/* Invalid cluster# */
 827              		.loc 1 989 0
 828 0014 0020     		movs	r0, #0
 829              	.LVL97:
 991:Middlewares/Third_Party/FatFs/src/ff.c **** }
 830              		.loc 1 991 0
 831 0016 7047     		bx	lr
 832              		.cfi_endproc
 833              	.LFE164:
 835              		.section	.text.clmt_clust,"ax",%progbits
 836              		.align	1
 837              		.syntax unified
 838              		.thumb
 839              		.thumb_func
 840              		.fpu fpv5-sp-d16
 842              	clmt_clust:
 843              	.LFB169:
 992:Middlewares/Third_Party/FatFs/src/ff.c **** 
 993:Middlewares/Third_Party/FatFs/src/ff.c **** 
 994:Middlewares/Third_Party/FatFs/src/ff.c **** 
 995:Middlewares/Third_Party/FatFs/src/ff.c **** 
 996:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 997:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT access - Read value of a FAT entry                                */
 998:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 999:Middlewares/Third_Party/FatFs/src/ff.c **** 
1000:Middlewares/Third_Party/FatFs/src/ff.c **** static
1001:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD get_fat (	/* 0xFFFFFFFF:Disk error, 1:Internal error, 2..0x7FFFFFFF:Cluster status */
1002:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID* obj,	/* Corresponding object */
1003:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst	/* Cluster number to get the value */
1004:Middlewares/Third_Party/FatFs/src/ff.c **** )
1005:Middlewares/Third_Party/FatFs/src/ff.c **** {
1006:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT wc, bc;
1007:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD val;
1008:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = obj->fs;
1009:Middlewares/Third_Party/FatFs/src/ff.c **** 
1010:Middlewares/Third_Party/FatFs/src/ff.c **** 
1011:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst < 2 || clst >= fs->n_fatent) {	/* Check if in valid range */
1012:Middlewares/Third_Party/FatFs/src/ff.c **** 		val = 1;	/* Internal error */
1013:Middlewares/Third_Party/FatFs/src/ff.c **** 
1014:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
1015:Middlewares/Third_Party/FatFs/src/ff.c **** 		val = 0xFFFFFFFF;	/* Default value falls on disk error */
1016:Middlewares/Third_Party/FatFs/src/ff.c **** 
1017:Middlewares/Third_Party/FatFs/src/ff.c **** 		switch (fs->fs_type) {
1018:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT12 :
1019:Middlewares/Third_Party/FatFs/src/ff.c **** 			bc = (UINT)clst; bc += bc / 2;
1020:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
1021:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc = fs->win[bc++ % SS(fs)];
1022:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
1023:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc |= fs->win[bc % SS(fs)] << 8;
1024:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = (clst & 1) ? (wc >> 4) : (wc & 0xFFF);
1025:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
1026:Middlewares/Third_Party/FatFs/src/ff.c **** 
1027:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT16 :
1028:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 2))) != FR_OK) break;
1029:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = ld_word(fs->win + clst * 2 % SS(fs));
1030:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
1031:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/ccwdO2Zj.s 			page 34


1032:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT32 :
1033:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 4))) != FR_OK) break;
1034:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = ld_dword(fs->win + clst * 4 % SS(fs)) & 0x0FFFFFFF;
1035:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
1036:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
1037:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_EXFAT :
1038:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (obj->objsize) {
1039:Middlewares/Third_Party/FatFs/src/ff.c **** 				DWORD cofs = clst - obj->sclust;	/* Offset from start cluster */
1040:Middlewares/Third_Party/FatFs/src/ff.c **** 				DWORD clen = (DWORD)((obj->objsize - 1) / SS(fs)) / fs->csize;	/* Number of clusters - 1 */
1041:Middlewares/Third_Party/FatFs/src/ff.c **** 
1042:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (obj->stat == 2) {	/* Is there no valid chain on the FAT? */
1043:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (cofs <= clen) {
1044:Middlewares/Third_Party/FatFs/src/ff.c **** 						val = (cofs == clen) ? 0x7FFFFFFF : clst + 1;	/* Generate the value */
1045:Middlewares/Third_Party/FatFs/src/ff.c **** 						break;
1046:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
1047:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
1048:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (obj->stat == 3 && cofs < obj->n_cont) {	/* Is it in the 1st fragment? */
1049:Middlewares/Third_Party/FatFs/src/ff.c **** 					val = clst + 1; 	/* Generate the value */
1050:Middlewares/Third_Party/FatFs/src/ff.c **** 					break;
1051:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
1052:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (obj->stat != 2) {	/* Get value from FAT if FAT chain is valid */
1053:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (obj->n_frag != 0) {	/* Is it on the growing edge? */
1054:Middlewares/Third_Party/FatFs/src/ff.c **** 						val = 0x7FFFFFFF;	/* Generate EOC */
1055:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else {
1056:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 4))) != FR_OK) break;
1057:Middlewares/Third_Party/FatFs/src/ff.c **** 						val = ld_dword(fs->win + clst * 4 % SS(fs)) & 0x7FFFFFFF;
1058:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
1059:Middlewares/Third_Party/FatFs/src/ff.c **** 					break;
1060:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
1061:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1062:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* go to default */
1063:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1064:Middlewares/Third_Party/FatFs/src/ff.c **** 		default:
1065:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = 1;	/* Internal error */
1066:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1067:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1068:Middlewares/Third_Party/FatFs/src/ff.c **** 
1069:Middlewares/Third_Party/FatFs/src/ff.c **** 	return val;
1070:Middlewares/Third_Party/FatFs/src/ff.c **** }
1071:Middlewares/Third_Party/FatFs/src/ff.c **** 
1072:Middlewares/Third_Party/FatFs/src/ff.c **** 
1073:Middlewares/Third_Party/FatFs/src/ff.c **** 
1074:Middlewares/Third_Party/FatFs/src/ff.c **** 
1075:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1076:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1077:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT access - Change value of a FAT entry                              */
1078:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1079:Middlewares/Third_Party/FatFs/src/ff.c **** 
1080:Middlewares/Third_Party/FatFs/src/ff.c **** static
1081:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT put_fat (	/* FR_OK(0):succeeded, !=0:error */
1082:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,		/* Corresponding file system object */
1083:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst,		/* FAT index number (cluster number) to be changed */
1084:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD val		/* New value to be set to the entry */
1085:Middlewares/Third_Party/FatFs/src/ff.c **** )
1086:Middlewares/Third_Party/FatFs/src/ff.c **** {
1087:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT bc;
1088:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *p;
ARM GAS  /tmp/ccwdO2Zj.s 			page 35


1089:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_INT_ERR;
1090:Middlewares/Third_Party/FatFs/src/ff.c **** 
1091:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst >= 2 && clst < fs->n_fatent) {	/* Check if in valid range */
1092:Middlewares/Third_Party/FatFs/src/ff.c **** 		switch (fs->fs_type) {
1093:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT12 :	/* Bitfield items */
1094:Middlewares/Third_Party/FatFs/src/ff.c **** 			bc = (UINT)clst; bc += bc / 2;
1095:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
1096:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
1097:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = fs->win + bc++ % SS(fs);
1098:Middlewares/Third_Party/FatFs/src/ff.c **** 			*p = (clst & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;
1099:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
1100:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
1101:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
1102:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = fs->win + bc % SS(fs);
1103:Middlewares/Third_Party/FatFs/src/ff.c **** 			*p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x0F));
1104:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
1105:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
1106:Middlewares/Third_Party/FatFs/src/ff.c **** 
1107:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT16 :	/* WORD aligned items */
1108:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, fs->fatbase + (clst / (SS(fs) / 2)));
1109:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
1110:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(fs->win + clst * 2 % SS(fs), (WORD)val);
1111:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
1112:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
1113:Middlewares/Third_Party/FatFs/src/ff.c **** 
1114:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT32 :	/* DWORD aligned items */
1115:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
1116:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_EXFAT :
1117:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1118:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, fs->fatbase + (clst / (SS(fs) / 4)));
1119:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
1120:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {
1121:Middlewares/Third_Party/FatFs/src/ff.c **** 				val = (val & 0x0FFFFFFF) | (ld_dword(fs->win + clst * 4 % SS(fs)) & 0xF0000000);
1122:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1123:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(fs->win + clst * 4 % SS(fs), val);
1124:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
1125:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
1126:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1127:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1128:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
1129:Middlewares/Third_Party/FatFs/src/ff.c **** }
1130:Middlewares/Third_Party/FatFs/src/ff.c **** 
1131:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
1132:Middlewares/Third_Party/FatFs/src/ff.c **** 
1133:Middlewares/Third_Party/FatFs/src/ff.c **** 
1134:Middlewares/Third_Party/FatFs/src/ff.c **** 
1135:Middlewares/Third_Party/FatFs/src/ff.c **** 
1136:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT && !_FS_READONLY
1137:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1138:Middlewares/Third_Party/FatFs/src/ff.c **** /* exFAT: Accessing FAT and Allocation Bitmap                            */
1139:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1140:Middlewares/Third_Party/FatFs/src/ff.c **** 
1141:Middlewares/Third_Party/FatFs/src/ff.c **** /*--------------------------------------*/
1142:Middlewares/Third_Party/FatFs/src/ff.c **** /* Find a contiguous free cluster block */
1143:Middlewares/Third_Party/FatFs/src/ff.c **** /*--------------------------------------*/
1144:Middlewares/Third_Party/FatFs/src/ff.c **** 
1145:Middlewares/Third_Party/FatFs/src/ff.c **** static
ARM GAS  /tmp/ccwdO2Zj.s 			page 36


1146:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD find_bitmap (	/* 0:Not found, 2..:Cluster block found, 0xFFFFFFFF:Disk error */
1147:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,	/* File system object */
1148:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst,	/* Cluster number to scan from */
1149:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ncl	/* Number of contiguous clusters to find (1..) */
1150:Middlewares/Third_Party/FatFs/src/ff.c **** )
1151:Middlewares/Third_Party/FatFs/src/ff.c **** {
1152:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE bm, bv;
1153:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
1154:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD val, scl, ctr;
1155:Middlewares/Third_Party/FatFs/src/ff.c **** 
1156:Middlewares/Third_Party/FatFs/src/ff.c **** 
1157:Middlewares/Third_Party/FatFs/src/ff.c **** 	clst -= 2;	/* The first bit in the bitmap corresponds to cluster #2 */
1158:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst >= fs->n_fatent - 2) clst = 0;
1159:Middlewares/Third_Party/FatFs/src/ff.c **** 	scl = val = clst; ctr = 0;
1160:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
1161:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (move_window(fs, fs->database + val / 8 / SS(fs)) != FR_OK) return 0xFFFFFFFF;	/* (assuming bi
1162:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = val / 8 % SS(fs); bm = 1 << (val % 8);
1163:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
1164:Middlewares/Third_Party/FatFs/src/ff.c **** 			do {
1165:Middlewares/Third_Party/FatFs/src/ff.c **** 				bv = fs->win[i] & bm; bm <<= 1;		/* Get bit value */
1166:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (++val >= fs->n_fatent - 2) {	/* Next cluster (with wrap-around) */
1167:Middlewares/Third_Party/FatFs/src/ff.c **** 					val = 0; bm = 0; i = SS(fs);
1168:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
1169:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!bv) {	/* Is it a free cluster? */
1170:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (++ctr == ncl) return scl + 2;	/* Check if run length is sufficient for required */
1171:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
1172:Middlewares/Third_Party/FatFs/src/ff.c **** 					scl = val; ctr = 0;		/* Encountered a cluster in-use, restart to scan */
1173:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
1174:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (val == clst) return 0;	/* All cluster scanned? */
1175:Middlewares/Third_Party/FatFs/src/ff.c **** 			} while (bm);
1176:Middlewares/Third_Party/FatFs/src/ff.c **** 			bm = 1;
1177:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (++i < SS(fs));
1178:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1179:Middlewares/Third_Party/FatFs/src/ff.c **** }
1180:Middlewares/Third_Party/FatFs/src/ff.c **** 
1181:Middlewares/Third_Party/FatFs/src/ff.c **** 
1182:Middlewares/Third_Party/FatFs/src/ff.c **** /*----------------------------------------*/
1183:Middlewares/Third_Party/FatFs/src/ff.c **** /* Set/Clear a block of allocation bitmap */
1184:Middlewares/Third_Party/FatFs/src/ff.c **** /*----------------------------------------*/
1185:Middlewares/Third_Party/FatFs/src/ff.c **** 
1186:Middlewares/Third_Party/FatFs/src/ff.c **** static
1187:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT change_bitmap (
1188:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,	/* File system object */
1189:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst,	/* Cluster number to change from */
1190:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ncl,	/* Number of clusters to be changed */
1191:Middlewares/Third_Party/FatFs/src/ff.c **** 	int bv		/* bit value to be set (0 or 1) */
1192:Middlewares/Third_Party/FatFs/src/ff.c **** )
1193:Middlewares/Third_Party/FatFs/src/ff.c **** {
1194:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE bm;
1195:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
1196:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD sect;
1197:Middlewares/Third_Party/FatFs/src/ff.c **** 
1198:Middlewares/Third_Party/FatFs/src/ff.c **** 	clst -= 2;	/* The first bit corresponds to cluster #2 */
1199:Middlewares/Third_Party/FatFs/src/ff.c **** 	sect = fs->database + clst / 8 / SS(fs);	/* Sector address (assuming bitmap is located top of the 
1200:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = clst / 8 % SS(fs);						/* Byte offset in the sector */
1201:Middlewares/Third_Party/FatFs/src/ff.c **** 	bm = 1 << (clst % 8);						/* Bit mask in the byte */
1202:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
ARM GAS  /tmp/ccwdO2Zj.s 			page 37


1203:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (move_window(fs, sect++) != FR_OK) return FR_DISK_ERR;
1204:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
1205:Middlewares/Third_Party/FatFs/src/ff.c **** 			do {
1206:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (bv == (int)((fs->win[i] & bm) != 0)) return FR_INT_ERR;	/* Is the bit expected value? */
1207:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->win[i] ^= bm;	/* Flip the bit */
1208:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->wflag = 1;
1209:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (--ncl == 0) return FR_OK;	/* All bits processed? */
1210:Middlewares/Third_Party/FatFs/src/ff.c **** 			} while (bm <<= 1);		/* Next bit */
1211:Middlewares/Third_Party/FatFs/src/ff.c **** 			bm = 1;
1212:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (++i < SS(fs));		/* Next byte */
1213:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = 0;
1214:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1215:Middlewares/Third_Party/FatFs/src/ff.c **** }
1216:Middlewares/Third_Party/FatFs/src/ff.c **** 
1217:Middlewares/Third_Party/FatFs/src/ff.c **** 
1218:Middlewares/Third_Party/FatFs/src/ff.c **** /*---------------------------------------------*/
1219:Middlewares/Third_Party/FatFs/src/ff.c **** /* Fill the first fragment of the FAT chain    */
1220:Middlewares/Third_Party/FatFs/src/ff.c **** /*---------------------------------------------*/
1221:Middlewares/Third_Party/FatFs/src/ff.c **** 
1222:Middlewares/Third_Party/FatFs/src/ff.c **** static
1223:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT fill_first_frag (
1224:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID* obj	/* Pointer to the corresponding object */
1225:Middlewares/Third_Party/FatFs/src/ff.c **** )
1226:Middlewares/Third_Party/FatFs/src/ff.c **** {
1227:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
1228:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cl, n;
1229:Middlewares/Third_Party/FatFs/src/ff.c **** 
1230:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (obj->stat == 3) {	/* Has the object been changed 'fragmented'? */
1231:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (cl = obj->sclust, n = obj->n_cont; n; cl++, n--) {	/* Create cluster chain on the FAT */
1232:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = put_fat(obj->fs, cl, cl + 1);
1233:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) return res;
1234:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1235:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->stat = 0;	/* Change status 'FAT chain is valid' */
1236:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1237:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
1238:Middlewares/Third_Party/FatFs/src/ff.c **** }
1239:Middlewares/Third_Party/FatFs/src/ff.c **** 
1240:Middlewares/Third_Party/FatFs/src/ff.c **** 
1241:Middlewares/Third_Party/FatFs/src/ff.c **** /*---------------------------------------------*/
1242:Middlewares/Third_Party/FatFs/src/ff.c **** /* Fill the last fragment of the FAT chain     */
1243:Middlewares/Third_Party/FatFs/src/ff.c **** /*---------------------------------------------*/
1244:Middlewares/Third_Party/FatFs/src/ff.c **** 
1245:Middlewares/Third_Party/FatFs/src/ff.c **** static
1246:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT fill_last_frag (
1247:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID* obj,	/* Pointer to the corresponding object */
1248:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD lcl,	/* Last cluster of the fragment */
1249:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD term	/* Value to set the last FAT entry */
1250:Middlewares/Third_Party/FatFs/src/ff.c **** )
1251:Middlewares/Third_Party/FatFs/src/ff.c **** {
1252:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
1253:Middlewares/Third_Party/FatFs/src/ff.c **** 
1254:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (obj->n_frag > 0) {	/* Create the last chain on the FAT */
1255:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = put_fat(obj->fs, lcl - obj->n_frag + 1, (obj->n_frag > 1) ? lcl - obj->n_frag + 2 : term);
1256:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) return res;
1257:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->n_frag--;
1258:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1259:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
ARM GAS  /tmp/ccwdO2Zj.s 			page 38


1260:Middlewares/Third_Party/FatFs/src/ff.c **** }
1261:Middlewares/Third_Party/FatFs/src/ff.c **** 
1262:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _FS_EXFAT && !_FS_READONLY */
1263:Middlewares/Third_Party/FatFs/src/ff.c **** 
1264:Middlewares/Third_Party/FatFs/src/ff.c **** 
1265:Middlewares/Third_Party/FatFs/src/ff.c **** 
1266:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1267:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1268:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT handling - Remove a cluster chain                                 */
1269:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1270:Middlewares/Third_Party/FatFs/src/ff.c **** static
1271:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT remove_chain (	/* FR_OK(0):succeeded, !=0:error */
1272:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID* obj,			/* Corresponding object */
1273:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst,			/* Cluster to remove a chain from */
1274:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD pclst			/* Previous cluster of clst (0:an entire chain) */
1275:Middlewares/Third_Party/FatFs/src/ff.c **** )
1276:Middlewares/Third_Party/FatFs/src/ff.c **** {
1277:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_OK;
1278:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD nxt;
1279:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = obj->fs;
1280:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT || _USE_TRIM
1281:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD scl = clst, ecl = clst;
1282:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1283:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_TRIM
1284:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD rt[2];
1285:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1286:Middlewares/Third_Party/FatFs/src/ff.c **** 
1287:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;	/* Check if in valid range */
1288:Middlewares/Third_Party/FatFs/src/ff.c **** 
1289:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Mark the previous cluster 'EOC' on the FAT if it exists */
1290:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (pclst && (!_FS_EXFAT || fs->fs_type != FS_EXFAT || obj->stat != 2)) {
1291:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = put_fat(fs, pclst, 0xFFFFFFFF);
1292:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) return res;
1293:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1294:Middlewares/Third_Party/FatFs/src/ff.c **** 
1295:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Remove the chain */
1296:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
1297:Middlewares/Third_Party/FatFs/src/ff.c **** 		nxt = get_fat(obj, clst);			/* Get cluster status */
1298:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nxt == 0) break;				/* Empty cluster? */
1299:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nxt == 1) return FR_INT_ERR;	/* Internal error? */
1300:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nxt == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error? */
1301:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {
1302:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = put_fat(fs, clst, 0);		/* Mark the cluster 'free' on the FAT */
1303:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) return res;
1304:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1305:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->free_clst < fs->n_fatent - 2) {	/* Update FSINFO */
1306:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->free_clst++;
1307:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag |= 1;
1308:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1309:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT || _USE_TRIM
1310:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ecl + 1 == nxt) {	/* Is next cluster contiguous? */
1311:Middlewares/Third_Party/FatFs/src/ff.c **** 			ecl = nxt;
1312:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {				/* End of contiguous cluster block */
1313:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
1314:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_EXFAT) {
1315:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = change_bitmap(fs, scl, ecl - scl + 1, 0);	/* Mark the cluster block 'free' on the bitmap 
1316:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res != FR_OK) return res;
ARM GAS  /tmp/ccwdO2Zj.s 			page 39


1317:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1318:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1319:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_TRIM
1320:Middlewares/Third_Party/FatFs/src/ff.c **** 			rt[0] = clust2sect(fs, scl);					/* Start sector */
1321:Middlewares/Third_Party/FatFs/src/ff.c **** 			rt[1] = clust2sect(fs, ecl) + fs->csize - 1;	/* End sector */
1322:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_ioctl(fs->drv, CTRL_TRIM, rt);				/* Inform device the block can be erased */
1323:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1324:Middlewares/Third_Party/FatFs/src/ff.c **** 			scl = ecl = nxt;
1325:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1326:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1327:Middlewares/Third_Party/FatFs/src/ff.c **** 		clst = nxt;					/* Next cluster */
1328:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (clst < fs->n_fatent);	/* Repeat while not the last link */
1329:Middlewares/Third_Party/FatFs/src/ff.c **** 
1330:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
1331:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_EXFAT) {
1332:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (pclst == 0) {	/* Does the object have no chain? */
1333:Middlewares/Third_Party/FatFs/src/ff.c **** 			obj->stat = 0;		/* Change the object status 'initial' */
1334:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
1335:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (obj->stat == 3 && pclst >= obj->sclust && pclst <= obj->sclust + obj->n_cont) {	/* Did the c
1336:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->stat = 2;	/* Change the object status 'contiguous' */
1337:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1338:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1339:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1340:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1341:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
1342:Middlewares/Third_Party/FatFs/src/ff.c **** }
1343:Middlewares/Third_Party/FatFs/src/ff.c **** 
1344:Middlewares/Third_Party/FatFs/src/ff.c **** 
1345:Middlewares/Third_Party/FatFs/src/ff.c **** 
1346:Middlewares/Third_Party/FatFs/src/ff.c **** 
1347:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1348:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT handling - Stretch a chain or Create a new chain                  */
1349:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1350:Middlewares/Third_Party/FatFs/src/ff.c **** static
1351:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD create_chain (	/* 0:No free cluster, 1:Internal error, 0xFFFFFFFF:Disk error, >=2:New cluster
1352:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID* obj,			/* Corresponding object */
1353:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst			/* Cluster# to stretch, 0:Create a new chain */
1354:Middlewares/Third_Party/FatFs/src/ff.c **** )
1355:Middlewares/Third_Party/FatFs/src/ff.c **** {
1356:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cs, ncl, scl;
1357:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
1358:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = obj->fs;
1359:Middlewares/Third_Party/FatFs/src/ff.c **** 
1360:Middlewares/Third_Party/FatFs/src/ff.c **** 
1361:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst == 0) {	/* Create a new chain */
1362:Middlewares/Third_Party/FatFs/src/ff.c **** 		scl = fs->last_clst;				/* Get suggested cluster to start from */
1363:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (scl == 0 || scl >= fs->n_fatent) scl = 1;
1364:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1365:Middlewares/Third_Party/FatFs/src/ff.c **** 	else {				/* Stretch current chain */
1366:Middlewares/Third_Party/FatFs/src/ff.c **** 		cs = get_fat(obj, clst);			/* Check the cluster status */
1367:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs < 2) return 1;				/* Invalid FAT value */
1368:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs == 0xFFFFFFFF) return cs;	/* A disk error occurred */
1369:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs < fs->n_fatent) return cs;	/* It is already followed by next cluster */
1370:Middlewares/Third_Party/FatFs/src/ff.c **** 		scl = clst;
1371:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1372:Middlewares/Third_Party/FatFs/src/ff.c **** 
1373:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
ARM GAS  /tmp/ccwdO2Zj.s 			page 40


1374:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
1375:Middlewares/Third_Party/FatFs/src/ff.c **** 		ncl = find_bitmap(fs, scl, 1);				/* Find a free cluster */
1376:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ncl == 0 || ncl == 0xFFFFFFFF) return ncl;	/* No free cluster or hard error? */
1377:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = change_bitmap(fs, ncl, 1, 1);			/* Mark the cluster 'in use' */
1378:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_INT_ERR) return 1;
1379:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_DISK_ERR) return 0xFFFFFFFF;
1380:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (clst == 0) {							/* Is it a new chain? */
1381:Middlewares/Third_Party/FatFs/src/ff.c **** 			obj->stat = 2;							/* Set status 'contiguous' */
1382:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {									/* It is a stretched chain */
1383:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (obj->stat == 2 && ncl != scl + 1) {	/* Is the chain got fragmented? */
1384:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->n_cont = scl - obj->sclust;	/* Set size of the contiguous part */
1385:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->stat = 3;						/* Change status 'just fragmented' */
1386:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1387:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1388:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (obj->stat != 2) {	/* Is the file non-contiguous? */
1389:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl == clst + 1) {	/* Is the cluster next to previous one? */
1390:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->n_frag = obj->n_frag ? obj->n_frag + 1 : 2;	/* Increment size of last framgent */
1391:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {				/* New fragment */
1392:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (obj->n_frag == 0) obj->n_frag = 1;
1393:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = fill_last_frag(obj, clst, ncl);	/* Fill last fragment on the FAT and link it to new one *
1394:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) obj->n_frag = 1;
1395:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1396:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1397:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else
1398:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1399:Middlewares/Third_Party/FatFs/src/ff.c **** 	{	/* On the FAT12/16/32 volume */
1400:Middlewares/Third_Party/FatFs/src/ff.c **** 		ncl = scl;	/* Start cluster */
1401:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (;;) {
1402:Middlewares/Third_Party/FatFs/src/ff.c **** 			ncl++;							/* Next cluster */
1403:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl >= fs->n_fatent) {		/* Check wrap-around */
1404:Middlewares/Third_Party/FatFs/src/ff.c **** 				ncl = 2;
1405:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ncl > scl) return 0;	/* No free cluster */
1406:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1407:Middlewares/Third_Party/FatFs/src/ff.c **** 			cs = get_fat(obj, ncl);			/* Get the cluster status */
1408:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cs == 0) break;				/* Found a free cluster */
1409:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cs == 1 || cs == 0xFFFFFFFF) return cs;	/* An error occurred */
1410:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl == scl) return 0;		/* No free cluster */
1411:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1412:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = put_fat(fs, ncl, 0xFFFFFFFF);	/* Mark the new cluster 'EOC' */
1413:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK && clst != 0) {
1414:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = put_fat(fs, clst, ncl);	/* Link it from the previous one if needed */
1415:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1416:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1417:Middlewares/Third_Party/FatFs/src/ff.c **** 
1418:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {			/* Update FSINFO if function succeeded. */
1419:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->last_clst = ncl;
1420:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->free_clst <= fs->n_fatent - 2) fs->free_clst--;
1421:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsi_flag |= 1;
1422:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
1423:Middlewares/Third_Party/FatFs/src/ff.c **** 		ncl = (res == FR_DISK_ERR) ? 0xFFFFFFFF : 1;	/* Failed. Generate error status */
1424:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1425:Middlewares/Third_Party/FatFs/src/ff.c **** 
1426:Middlewares/Third_Party/FatFs/src/ff.c **** 	return ncl;		/* Return new cluster number or error status */
1427:Middlewares/Third_Party/FatFs/src/ff.c **** }
1428:Middlewares/Third_Party/FatFs/src/ff.c **** 
1429:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
1430:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/ccwdO2Zj.s 			page 41


1431:Middlewares/Third_Party/FatFs/src/ff.c **** 
1432:Middlewares/Third_Party/FatFs/src/ff.c **** 
1433:Middlewares/Third_Party/FatFs/src/ff.c **** 
1434:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FASTSEEK
1435:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1436:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT handling - Convert offset into cluster with link map table        */
1437:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1438:Middlewares/Third_Party/FatFs/src/ff.c **** 
1439:Middlewares/Third_Party/FatFs/src/ff.c **** static
1440:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD clmt_clust (	/* <2:Error, >=2:Cluster number */
1441:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp,		/* Pointer to the file object */
1442:Middlewares/Third_Party/FatFs/src/ff.c **** 	FSIZE_t ofs		/* File offset to be converted to cluster# */
1443:Middlewares/Third_Party/FatFs/src/ff.c **** )
1444:Middlewares/Third_Party/FatFs/src/ff.c **** {
 844              		.loc 1 1444 0
 845              		.cfi_startproc
 846              		@ args = 0, pretend = 0, frame = 0
 847              		@ frame_needed = 0, uses_anonymous_args = 0
 848              		@ link register save eliminated.
 849              	.LVL98:
1445:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cl, ncl, *tbl;
1446:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = fp->obj.fs;
 850              		.loc 1 1446 0
 851 0000 0268     		ldr	r2, [r0]
 852              	.LVL99:
1447:Middlewares/Third_Party/FatFs/src/ff.c **** 
1448:Middlewares/Third_Party/FatFs/src/ff.c **** 
1449:Middlewares/Third_Party/FatFs/src/ff.c **** 	tbl = fp->cltbl + 1;	/* Top of CLMT */
 853              		.loc 1 1449 0
 854 0002 C36A     		ldr	r3, [r0, #44]
 855 0004 0433     		adds	r3, r3, #4
 856              	.LVL100:
1450:Middlewares/Third_Party/FatFs/src/ff.c **** 	cl = (DWORD)(ofs / SS(fs) / fs->csize);	/* Cluster order from top of the file */
 857              		.loc 1 1450 0
 858 0006 490A     		lsrs	r1, r1, #9
 859              	.LVL101:
 860 0008 5289     		ldrh	r2, [r2, #10]
 861              	.LVL102:
 862 000a B1FBF2F1 		udiv	r1, r1, r2
 863              	.LVL103:
 864              	.L89:
1451:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
1452:Middlewares/Third_Party/FatFs/src/ff.c **** 		ncl = *tbl++;			/* Number of cluters in the fragment */
 865              		.loc 1 1452 0
 866 000e 1868     		ldr	r0, [r3]
 867              	.LVL104:
1453:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ncl == 0) return 0;	/* End of table? (error) */
 868              		.loc 1 1453 0
 869 0010 30B1     		cbz	r0, .L86
1454:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cl < ncl) break;	/* In this fragment? */
 870              		.loc 1 1454 0
 871 0012 8142     		cmp	r1, r0
 872 0014 02D3     		bcc	.L88
1455:Middlewares/Third_Party/FatFs/src/ff.c **** 		cl -= ncl; tbl++;		/* Next fragment */
 873              		.loc 1 1455 0
 874 0016 091A     		subs	r1, r1, r0
 875              	.LVL105:
ARM GAS  /tmp/ccwdO2Zj.s 			page 42


 876 0018 0833     		adds	r3, r3, #8
 877              	.LVL106:
1452:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ncl == 0) return 0;	/* End of table? (error) */
 878              		.loc 1 1452 0
 879 001a F8E7     		b	.L89
 880              	.LVL107:
 881              	.L88:
1456:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1457:Middlewares/Third_Party/FatFs/src/ff.c **** 	return cl + *tbl;	/* Return the cluster number */
 882              		.loc 1 1457 0
 883 001c 5868     		ldr	r0, [r3, #4]
 884              	.LVL108:
 885 001e 0844     		add	r0, r0, r1
 886              	.L86:
1458:Middlewares/Third_Party/FatFs/src/ff.c **** }
 887              		.loc 1 1458 0
 888 0020 7047     		bx	lr
 889              		.cfi_endproc
 890              	.LFE169:
 892              		.section	.text.ld_clust,"ax",%progbits
 893              		.align	1
 894              		.syntax unified
 895              		.thumb
 896              		.thumb_func
 897              		.fpu fpv5-sp-d16
 899              	ld_clust:
 900              	.LFB173:
1459:Middlewares/Third_Party/FatFs/src/ff.c **** 
1460:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _USE_FASTSEEK */
1461:Middlewares/Third_Party/FatFs/src/ff.c **** 
1462:Middlewares/Third_Party/FatFs/src/ff.c **** 
1463:Middlewares/Third_Party/FatFs/src/ff.c **** 
1464:Middlewares/Third_Party/FatFs/src/ff.c **** 
1465:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1466:Middlewares/Third_Party/FatFs/src/ff.c **** /* Directory handling - Set directory index                              */
1467:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1468:Middlewares/Third_Party/FatFs/src/ff.c **** 
1469:Middlewares/Third_Party/FatFs/src/ff.c **** static
1470:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_sdi (	/* FR_OK(0):succeeded, !=0:error */
1471:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,		/* Pointer to directory object */
1472:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ofs		/* Offset of directory table */
1473:Middlewares/Third_Party/FatFs/src/ff.c **** )
1474:Middlewares/Third_Party/FatFs/src/ff.c **** {
1475:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD csz, clst;
1476:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = dp->obj.fs;
1477:Middlewares/Third_Party/FatFs/src/ff.c **** 
1478:Middlewares/Third_Party/FatFs/src/ff.c **** 
1479:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (ofs >= (DWORD)((_FS_EXFAT && fs->fs_type == FS_EXFAT) ? MAX_DIR_EX : MAX_DIR) || ofs % SZDIRE)
1480:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_INT_ERR;
1481:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1482:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->dptr = ofs;				/* Set current offset */
1483:Middlewares/Third_Party/FatFs/src/ff.c **** 	clst = dp->obj.sclust;		/* Table start cluster (0:root) */
1484:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst == 0 && fs->fs_type >= FS_FAT32) {	/* Replace cluster# 0 with root cluster# */
1485:Middlewares/Third_Party/FatFs/src/ff.c **** 		clst = fs->dirbase;
1486:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_EXFAT) dp->obj.stat = 0;	/* exFAT: Root dir has an FAT chain */
1487:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1488:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/ccwdO2Zj.s 			page 43


1489:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst == 0) {	/* Static table (root-directory in FAT12/16) */
1490:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs / SZDIRE >= fs->n_rootdir)	return FR_INT_ERR;	/* Is index out of range? */
1491:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->sect = fs->dirbase;
1492:Middlewares/Third_Party/FatFs/src/ff.c **** 
1493:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {			/* Dynamic table (sub-directory or root-directory in FAT32+) */
1494:Middlewares/Third_Party/FatFs/src/ff.c **** 		csz = (DWORD)fs->csize * SS(fs);	/* Bytes per cluster */
1495:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (ofs >= csz) {				/* Follow cluster chain */
1496:Middlewares/Third_Party/FatFs/src/ff.c **** 			clst = get_fat(&dp->obj, clst);				/* Get next cluster */
1497:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
1498:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;	/* Reached to end of table or internal 
1499:Middlewares/Third_Party/FatFs/src/ff.c **** 			ofs -= csz;
1500:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1501:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->sect = clust2sect(fs, clst);
1502:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1503:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->clust = clst;					/* Current cluster# */
1504:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!dp->sect) return FR_INT_ERR;
1505:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->sect += ofs / SS(fs);			/* Sector# of the directory entry */
1506:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->dir = fs->win + (ofs % SS(fs));	/* Pointer to the entry in the win[] */
1507:Middlewares/Third_Party/FatFs/src/ff.c **** 
1508:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
1509:Middlewares/Third_Party/FatFs/src/ff.c **** }
1510:Middlewares/Third_Party/FatFs/src/ff.c **** 
1511:Middlewares/Third_Party/FatFs/src/ff.c **** 
1512:Middlewares/Third_Party/FatFs/src/ff.c **** 
1513:Middlewares/Third_Party/FatFs/src/ff.c **** 
1514:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1515:Middlewares/Third_Party/FatFs/src/ff.c **** /* Directory handling - Move directory table index next                  */
1516:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1517:Middlewares/Third_Party/FatFs/src/ff.c **** 
1518:Middlewares/Third_Party/FatFs/src/ff.c **** static
1519:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_next (	/* FR_OK(0):succeeded, FR_NO_FILE:End of table, FR_DENIED:Could not stretch */
1520:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,		/* Pointer to the directory object */
1521:Middlewares/Third_Party/FatFs/src/ff.c **** 	int stretch		/* 0: Do not stretch table, 1: Stretch table if needed */
1522:Middlewares/Third_Party/FatFs/src/ff.c **** )
1523:Middlewares/Third_Party/FatFs/src/ff.c **** {
1524:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ofs, clst;
1525:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = dp->obj.fs;
1526:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1527:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT n;
1528:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1529:Middlewares/Third_Party/FatFs/src/ff.c **** 
1530:Middlewares/Third_Party/FatFs/src/ff.c **** 	ofs = dp->dptr + SZDIRE;	/* Next entry */
1531:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!dp->sect || ofs >= (DWORD)((_FS_EXFAT && fs->fs_type == FS_EXFAT) ? MAX_DIR_EX : MAX_DIR)) re
1532:Middlewares/Third_Party/FatFs/src/ff.c **** 
1533:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (ofs % SS(fs) == 0) {	/* Sector changed? */
1534:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->sect++;				/* Next sector */
1535:Middlewares/Third_Party/FatFs/src/ff.c **** 
1536:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!dp->clust) {		/* Static table */
1537:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ofs / SZDIRE >= fs->n_rootdir) {	/* Report EOT if it reached end of static table */
1538:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->sect = 0; return FR_NO_FILE;
1539:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1540:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1541:Middlewares/Third_Party/FatFs/src/ff.c **** 		else {					/* Dynamic table */
1542:Middlewares/Third_Party/FatFs/src/ff.c **** 			if ((ofs / SS(fs) & (fs->csize - 1)) == 0) {		/* Cluster changed? */
1543:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = get_fat(&dp->obj, dp->clust);			/* Get next cluster */
1544:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst <= 1) return FR_INT_ERR;				/* Internal error */
1545:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) return FR_DISK_ERR;		/* Disk error */
ARM GAS  /tmp/ccwdO2Zj.s 			page 44


1546:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst >= fs->n_fatent) {						/* Reached end of dynamic table */
1547:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1548:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!stretch) {								/* If no stretch, report EOT */
1549:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->sect = 0; return FR_NO_FILE;
1550:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
1551:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = create_chain(&dp->obj, dp->clust);	/* Allocate a cluster */
1552:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0) return FR_DENIED;			/* No free cluster */
1553:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 1) return FR_INT_ERR;			/* Internal error */
1554:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
1555:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Clean-up the stretched table */
1556:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (_FS_EXFAT) dp->obj.stat |= 4;			/* The directory needs to be updated */
1557:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (sync_window(fs) != FR_OK) return FR_DISK_ERR;	/* Flush disk access window */
1558:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_set(fs->win, 0, SS(fs));				/* Clear window buffer */
1559:Middlewares/Third_Party/FatFs/src/ff.c **** 					for (n = 0, fs->winsect = clust2sect(fs, clst); n < fs->csize; n++, fs->winsect++) {	/* Fill t
1560:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->wflag = 1;
1561:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (sync_window(fs) != FR_OK) return FR_DISK_ERR;
1562:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
1563:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->winsect -= n;							/* Restore window offset */
1564:Middlewares/Third_Party/FatFs/src/ff.c **** #else
1565:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!stretch) dp->sect = 0;					/* (this line is to suppress compiler warning) */
1566:Middlewares/Third_Party/FatFs/src/ff.c **** 					dp->sect = 0; return FR_NO_FILE;			/* Report EOT */
1567:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1568:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
1569:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->clust = clst;		/* Initialize data for new cluster */
1570:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->sect = clust2sect(fs, clst);
1571:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1572:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1573:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1574:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->dptr = ofs;						/* Current entry */
1575:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->dir = fs->win + ofs % SS(fs);	/* Pointer to the entry in the win[] */
1576:Middlewares/Third_Party/FatFs/src/ff.c **** 
1577:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
1578:Middlewares/Third_Party/FatFs/src/ff.c **** }
1579:Middlewares/Third_Party/FatFs/src/ff.c **** 
1580:Middlewares/Third_Party/FatFs/src/ff.c **** 
1581:Middlewares/Third_Party/FatFs/src/ff.c **** 
1582:Middlewares/Third_Party/FatFs/src/ff.c **** 
1583:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1584:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1585:Middlewares/Third_Party/FatFs/src/ff.c **** /* Directory handling - Reserve a block of directory entries             */
1586:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1587:Middlewares/Third_Party/FatFs/src/ff.c **** 
1588:Middlewares/Third_Party/FatFs/src/ff.c **** static
1589:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_alloc (	/* FR_OK(0):succeeded, !=0:error */
1590:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,		/* Pointer to the directory object */
1591:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nent		/* Number of contiguous entries to allocate */
1592:Middlewares/Third_Party/FatFs/src/ff.c **** )
1593:Middlewares/Third_Party/FatFs/src/ff.c **** {
1594:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
1595:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT n;
1596:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = dp->obj.fs;
1597:Middlewares/Third_Party/FatFs/src/ff.c **** 
1598:Middlewares/Third_Party/FatFs/src/ff.c **** 
1599:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_sdi(dp, 0);
1600:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
1601:Middlewares/Third_Party/FatFs/src/ff.c **** 		n = 0;
1602:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
ARM GAS  /tmp/ccwdO2Zj.s 			page 45


1603:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, dp->sect);
1604:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
1605:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
1606:Middlewares/Third_Party/FatFs/src/ff.c **** 			if ((fs->fs_type == FS_EXFAT) ? (int)((dp->dir[XDIR_Type] & 0x80) == 0) : (int)(dp->dir[DIR_Name
1607:Middlewares/Third_Party/FatFs/src/ff.c **** #else
1608:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dp->dir[DIR_Name] == DDEM || dp->dir[DIR_Name] == 0) {
1609:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1610:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (++n == nent) break;	/* A block of contiguous free entries is found */
1611:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
1612:Middlewares/Third_Party/FatFs/src/ff.c **** 				n = 0;					/* Not a blank entry. Restart to search */
1613:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1614:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_next(dp, 1);
1615:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (res == FR_OK);	/* Next entry with table stretch enabled */
1616:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1617:Middlewares/Third_Party/FatFs/src/ff.c **** 
1618:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_NO_FILE) res = FR_DENIED;	/* No directory entry to allocate */
1619:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
1620:Middlewares/Third_Party/FatFs/src/ff.c **** }
1621:Middlewares/Third_Party/FatFs/src/ff.c **** 
1622:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* !_FS_READONLY */
1623:Middlewares/Third_Party/FatFs/src/ff.c **** 
1624:Middlewares/Third_Party/FatFs/src/ff.c **** 
1625:Middlewares/Third_Party/FatFs/src/ff.c **** 
1626:Middlewares/Third_Party/FatFs/src/ff.c **** 
1627:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1628:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT: Directory handling - Load/Store start cluster number             */
1629:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1630:Middlewares/Third_Party/FatFs/src/ff.c **** 
1631:Middlewares/Third_Party/FatFs/src/ff.c **** static
1632:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD ld_clust (	/* Returns the top cluster value of the SFN entry */
1633:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,		/* Pointer to the fs object */
1634:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE* dir	/* Pointer to the key entry */
1635:Middlewares/Third_Party/FatFs/src/ff.c **** )
1636:Middlewares/Third_Party/FatFs/src/ff.c **** {
 901              		.loc 1 1636 0
 902              		.cfi_startproc
 903              		@ args = 0, pretend = 0, frame = 0
 904              		@ frame_needed = 0, uses_anonymous_args = 0
 905              	.LVL109:
 906 0000 70B5     		push	{r4, r5, r6, lr}
 907              	.LCFI12:
 908              		.cfi_def_cfa_offset 16
 909              		.cfi_offset 4, -16
 910              		.cfi_offset 5, -12
 911              		.cfi_offset 6, -8
 912              		.cfi_offset 14, -4
 913 0002 0646     		mov	r6, r0
 914 0004 0D46     		mov	r5, r1
1637:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cl;
1638:Middlewares/Third_Party/FatFs/src/ff.c **** 
1639:Middlewares/Third_Party/FatFs/src/ff.c **** 	cl = ld_word(dir + DIR_FstClusLO);
 915              		.loc 1 1639 0
 916 0006 01F11A00 		add	r0, r1, #26
 917              	.LVL110:
 918 000a FFF7FEFF 		bl	ld_word
 919              	.LVL111:
1640:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_FAT32) {
ARM GAS  /tmp/ccwdO2Zj.s 			page 46


 920              		.loc 1 1640 0
 921 000e 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 922 0010 032B     		cmp	r3, #3
 923 0012 00D0     		beq	.L93
 924              	.LVL112:
 925              	.L90:
1641:Middlewares/Third_Party/FatFs/src/ff.c **** 		cl |= (DWORD)ld_word(dir + DIR_FstClusHI) << 16;
1642:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1643:Middlewares/Third_Party/FatFs/src/ff.c **** 
1644:Middlewares/Third_Party/FatFs/src/ff.c **** 	return cl;
1645:Middlewares/Third_Party/FatFs/src/ff.c **** }
 926              		.loc 1 1645 0
 927 0014 70BD     		pop	{r4, r5, r6, pc}
 928              	.LVL113:
 929              	.L93:
 930 0016 0446     		mov	r4, r0
1641:Middlewares/Third_Party/FatFs/src/ff.c **** 		cl |= (DWORD)ld_word(dir + DIR_FstClusHI) << 16;
 931              		.loc 1 1641 0
 932 0018 05F11400 		add	r0, r5, #20
 933              	.LVL114:
 934 001c FFF7FEFF 		bl	ld_word
 935              	.LVL115:
 936 0020 44EA0040 		orr	r0, r4, r0, lsl #16
 937              	.LVL116:
1644:Middlewares/Third_Party/FatFs/src/ff.c **** }
 938              		.loc 1 1644 0
 939 0024 F6E7     		b	.L90
 940              		.cfi_endproc
 941              	.LFE173:
 943              		.section	.text.st_clust,"ax",%progbits
 944              		.align	1
 945              		.syntax unified
 946              		.thumb
 947              		.thumb_func
 948              		.fpu fpv5-sp-d16
 950              	st_clust:
 951              	.LFB174:
1646:Middlewares/Third_Party/FatFs/src/ff.c **** 
1647:Middlewares/Third_Party/FatFs/src/ff.c **** 
1648:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1649:Middlewares/Third_Party/FatFs/src/ff.c **** static
1650:Middlewares/Third_Party/FatFs/src/ff.c **** void st_clust (
1651:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,	/* Pointer to the fs object */
1652:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dir,	/* Pointer to the key entry */
1653:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cl	/* Value to be set */
1654:Middlewares/Third_Party/FatFs/src/ff.c **** )
1655:Middlewares/Third_Party/FatFs/src/ff.c **** {
 952              		.loc 1 1655 0
 953              		.cfi_startproc
 954              		@ args = 0, pretend = 0, frame = 0
 955              		@ frame_needed = 0, uses_anonymous_args = 0
 956              	.LVL117:
 957 0000 70B5     		push	{r4, r5, r6, lr}
 958              	.LCFI13:
 959              		.cfi_def_cfa_offset 16
 960              		.cfi_offset 4, -16
 961              		.cfi_offset 5, -12
ARM GAS  /tmp/ccwdO2Zj.s 			page 47


 962              		.cfi_offset 6, -8
 963              		.cfi_offset 14, -4
 964 0002 0646     		mov	r6, r0
 965 0004 0C46     		mov	r4, r1
 966 0006 1546     		mov	r5, r2
1656:Middlewares/Third_Party/FatFs/src/ff.c **** 	st_word(dir + DIR_FstClusLO, (WORD)cl);
 967              		.loc 1 1656 0
 968 0008 91B2     		uxth	r1, r2
 969              	.LVL118:
 970 000a 04F11A00 		add	r0, r4, #26
 971              	.LVL119:
 972 000e FFF7FEFF 		bl	st_word
 973              	.LVL120:
1657:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_FAT32) {
 974              		.loc 1 1657 0
 975 0012 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 976 0014 032B     		cmp	r3, #3
 977 0016 00D0     		beq	.L97
 978              	.L94:
1658:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(dir + DIR_FstClusHI, (WORD)(cl >> 16));
1659:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1660:Middlewares/Third_Party/FatFs/src/ff.c **** }
 979              		.loc 1 1660 0
 980 0018 70BD     		pop	{r4, r5, r6, pc}
 981              	.LVL121:
 982              	.L97:
1658:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(dir + DIR_FstClusHI, (WORD)(cl >> 16));
 983              		.loc 1 1658 0
 984 001a 290C     		lsrs	r1, r5, #16
 985 001c 04F11400 		add	r0, r4, #20
 986 0020 FFF7FEFF 		bl	st_word
 987              	.LVL122:
 988              		.loc 1 1660 0
 989 0024 F8E7     		b	.L94
 990              		.cfi_endproc
 991              	.LFE174:
 993              		.section	.text.get_fileinfo,"ax",%progbits
 994              		.align	1
 995              		.syntax unified
 996              		.thumb
 997              		.thumb_func
 998              		.fpu fpv5-sp-d16
 1000              	get_fileinfo:
 1001              	.LFB179:
1661:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1662:Middlewares/Third_Party/FatFs/src/ff.c **** 
1663:Middlewares/Third_Party/FatFs/src/ff.c **** 
1664:Middlewares/Third_Party/FatFs/src/ff.c **** 
1665:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
1666:Middlewares/Third_Party/FatFs/src/ff.c **** /*------------------------------------------------------------------------*/
1667:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT-LFN: LFN handling                                                  */
1668:Middlewares/Third_Party/FatFs/src/ff.c **** /*------------------------------------------------------------------------*/
1669:Middlewares/Third_Party/FatFs/src/ff.c **** static
1670:Middlewares/Third_Party/FatFs/src/ff.c **** const BYTE LfnOfs[] = {1,3,5,7,9,14,16,18,20,22,24,28,30};	/* Offset of LFN characters in the direc
1671:Middlewares/Third_Party/FatFs/src/ff.c **** 
1672:Middlewares/Third_Party/FatFs/src/ff.c **** 
1673:Middlewares/Third_Party/FatFs/src/ff.c **** /*--------------------------------------------------------*/
ARM GAS  /tmp/ccwdO2Zj.s 			page 48


1674:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT-LFN: Compare a part of file name with an LFN entry */
1675:Middlewares/Third_Party/FatFs/src/ff.c **** /*--------------------------------------------------------*/
1676:Middlewares/Third_Party/FatFs/src/ff.c **** static
1677:Middlewares/Third_Party/FatFs/src/ff.c **** int cmp_lfn (				/* 1:matched, 0:not matched */
1678:Middlewares/Third_Party/FatFs/src/ff.c **** 	const WCHAR* lfnbuf,	/* Pointer to the LFN working buffer to be compared */
1679:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dir				/* Pointer to the directory entry containing the part of LFN */
1680:Middlewares/Third_Party/FatFs/src/ff.c **** )
1681:Middlewares/Third_Party/FatFs/src/ff.c **** {
1682:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, s;
1683:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR wc, uc;
1684:Middlewares/Third_Party/FatFs/src/ff.c **** 
1685:Middlewares/Third_Party/FatFs/src/ff.c **** 
1686:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (ld_word(dir + LDIR_FstClusLO) != 0) return 0;	/* Check LDIR_FstClusLO */
1687:Middlewares/Third_Party/FatFs/src/ff.c **** 
1688:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = ((dir[LDIR_Ord] & 0x3F) - 1) * 13;	/* Offset in the LFN buffer */
1689:Middlewares/Third_Party/FatFs/src/ff.c **** 
1690:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (wc = 1, s = 0; s < 13; s++) {		/* Process all characters in the entry */
1691:Middlewares/Third_Party/FatFs/src/ff.c **** 		uc = ld_word(dir + LfnOfs[s]);		/* Pick an LFN character */
1692:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (wc) {
1693:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i >= _MAX_LFN || ff_wtoupper(uc) != ff_wtoupper(lfnbuf[i++])) {	/* Compare it */
1694:Middlewares/Third_Party/FatFs/src/ff.c **** 				return 0;					/* Not matched */
1695:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1696:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc = uc;
1697:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
1698:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (uc != 0xFFFF) return 0;		/* Check filler */
1699:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1700:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1701:Middlewares/Third_Party/FatFs/src/ff.c **** 
1702:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((dir[LDIR_Ord] & LLEF) && wc && lfnbuf[i]) return 0;	/* Last segment matched but different len
1703:Middlewares/Third_Party/FatFs/src/ff.c **** 
1704:Middlewares/Third_Party/FatFs/src/ff.c **** 	return 1;		/* The part of LFN matched */
1705:Middlewares/Third_Party/FatFs/src/ff.c **** }
1706:Middlewares/Third_Party/FatFs/src/ff.c **** 
1707:Middlewares/Third_Party/FatFs/src/ff.c **** 
1708:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 1 || _FS_RPATH >= 2 || _USE_LABEL || _FS_EXFAT
1709:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------*/
1710:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT-LFN: Pick a part of file name from an LFN entry */
1711:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------*/
1712:Middlewares/Third_Party/FatFs/src/ff.c **** static
1713:Middlewares/Third_Party/FatFs/src/ff.c **** int pick_lfn (			/* 1:succeeded, 0:buffer overflow or invalid LFN entry */
1714:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR* lfnbuf,		/* Pointer to the LFN working buffer */
1715:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dir			/* Pointer to the LFN entry */
1716:Middlewares/Third_Party/FatFs/src/ff.c **** )
1717:Middlewares/Third_Party/FatFs/src/ff.c **** {
1718:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, s;
1719:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR wc, uc;
1720:Middlewares/Third_Party/FatFs/src/ff.c **** 
1721:Middlewares/Third_Party/FatFs/src/ff.c **** 
1722:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (ld_word(dir + LDIR_FstClusLO) != 0) return 0;	/* Check LDIR_FstClusLO is 0 */
1723:Middlewares/Third_Party/FatFs/src/ff.c **** 
1724:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = ((dir[LDIR_Ord] & ~LLEF) - 1) * 13;	/* Offset in the LFN buffer */
1725:Middlewares/Third_Party/FatFs/src/ff.c **** 
1726:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (wc = 1, s = 0; s < 13; s++) {		/* Process all characters in the entry */
1727:Middlewares/Third_Party/FatFs/src/ff.c **** 		uc = ld_word(dir + LfnOfs[s]);		/* Pick an LFN character */
1728:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (wc) {
1729:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i >= _MAX_LFN) return 0;	/* Buffer overflow? */
1730:Middlewares/Third_Party/FatFs/src/ff.c **** 			lfnbuf[i++] = wc = uc;			/* Store it */
ARM GAS  /tmp/ccwdO2Zj.s 			page 49


1731:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
1732:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (uc != 0xFFFF) return 0;		/* Check filler */
1733:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1734:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1735:Middlewares/Third_Party/FatFs/src/ff.c **** 
1736:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (dir[LDIR_Ord] & LLEF) {				/* Put terminator if it is the last LFN part */
1737:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i >= _MAX_LFN) return 0;		/* Buffer overflow? */
1738:Middlewares/Third_Party/FatFs/src/ff.c **** 		lfnbuf[i] = 0;
1739:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1740:Middlewares/Third_Party/FatFs/src/ff.c **** 
1741:Middlewares/Third_Party/FatFs/src/ff.c **** 	return 1;		/* The part of LFN is valid */
1742:Middlewares/Third_Party/FatFs/src/ff.c **** }
1743:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1744:Middlewares/Third_Party/FatFs/src/ff.c **** 
1745:Middlewares/Third_Party/FatFs/src/ff.c **** 
1746:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1747:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------*/
1748:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT-LFN: Create an entry of LFN entries */
1749:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------*/
1750:Middlewares/Third_Party/FatFs/src/ff.c **** static
1751:Middlewares/Third_Party/FatFs/src/ff.c **** void put_lfn (
1752:Middlewares/Third_Party/FatFs/src/ff.c **** 	const WCHAR* lfn,	/* Pointer to the LFN */
1753:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dir,			/* Pointer to the LFN entry to be created */
1754:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE ord,			/* LFN order (1-20) */
1755:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE sum			/* Checksum of the corresponding SFN */
1756:Middlewares/Third_Party/FatFs/src/ff.c **** )
1757:Middlewares/Third_Party/FatFs/src/ff.c **** {
1758:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, s;
1759:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR wc;
1760:Middlewares/Third_Party/FatFs/src/ff.c **** 
1761:Middlewares/Third_Party/FatFs/src/ff.c **** 
1762:Middlewares/Third_Party/FatFs/src/ff.c **** 	dir[LDIR_Chksum] = sum;			/* Set checksum */
1763:Middlewares/Third_Party/FatFs/src/ff.c **** 	dir[LDIR_Attr] = AM_LFN;		/* Set attribute. LFN entry */
1764:Middlewares/Third_Party/FatFs/src/ff.c **** 	dir[LDIR_Type] = 0;
1765:Middlewares/Third_Party/FatFs/src/ff.c **** 	st_word(dir + LDIR_FstClusLO, 0);
1766:Middlewares/Third_Party/FatFs/src/ff.c **** 
1767:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = (ord - 1) * 13;				/* Get offset in the LFN working buffer */
1768:Middlewares/Third_Party/FatFs/src/ff.c **** 	s = wc = 0;
1769:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
1770:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (wc != 0xFFFF) wc = lfn[i++];	/* Get an effective character */
1771:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(dir + LfnOfs[s], wc);		/* Put it */
1772:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (wc == 0) wc = 0xFFFF;		/* Padding characters for left locations */
1773:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (++s < 13);
1774:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (wc == 0xFFFF || !lfn[i]) ord |= LLEF;	/* Last LFN part is the start of LFN sequence */
1775:Middlewares/Third_Party/FatFs/src/ff.c **** 	dir[LDIR_Ord] = ord;			/* Set the LFN order */
1776:Middlewares/Third_Party/FatFs/src/ff.c **** }
1777:Middlewares/Third_Party/FatFs/src/ff.c **** 
1778:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* !_FS_READONLY */
1779:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _USE_LFN != 0 */
1780:Middlewares/Third_Party/FatFs/src/ff.c **** 
1781:Middlewares/Third_Party/FatFs/src/ff.c **** 
1782:Middlewares/Third_Party/FatFs/src/ff.c **** 
1783:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0 && !_FS_READONLY
1784:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1785:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT-LFN: Create a Numbered SFN                                        */
1786:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1787:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/ccwdO2Zj.s 			page 50


1788:Middlewares/Third_Party/FatFs/src/ff.c **** static
1789:Middlewares/Third_Party/FatFs/src/ff.c **** void gen_numname (
1790:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dst,			/* Pointer to the buffer to store numbered SFN */
1791:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE* src,	/* Pointer to SFN */
1792:Middlewares/Third_Party/FatFs/src/ff.c **** 	const WCHAR* lfn,	/* Pointer to LFN */
1793:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT seq			/* Sequence number */
1794:Middlewares/Third_Party/FatFs/src/ff.c **** )
1795:Middlewares/Third_Party/FatFs/src/ff.c **** {
1796:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE ns[8], c;
1797:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, j;
1798:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR wc;
1799:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD sr;
1800:Middlewares/Third_Party/FatFs/src/ff.c **** 
1801:Middlewares/Third_Party/FatFs/src/ff.c **** 
1802:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_cpy(dst, src, 11);
1803:Middlewares/Third_Party/FatFs/src/ff.c **** 
1804:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (seq > 5) {	/* In case of many collisions, generate a hash number instead of sequential number 
1805:Middlewares/Third_Party/FatFs/src/ff.c **** 		sr = seq;
1806:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (*lfn) {	/* Create a CRC */
1807:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc = *lfn++;
1808:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (i = 0; i < 16; i++) {
1809:Middlewares/Third_Party/FatFs/src/ff.c **** 				sr = (sr << 1) + (wc & 1);
1810:Middlewares/Third_Party/FatFs/src/ff.c **** 				wc >>= 1;
1811:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (sr & 0x10000) sr ^= 0x11021;
1812:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1813:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1814:Middlewares/Third_Party/FatFs/src/ff.c **** 		seq = (UINT)sr;
1815:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1816:Middlewares/Third_Party/FatFs/src/ff.c **** 
1817:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* itoa (hexdecimal) */
1818:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = 7;
1819:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
1820:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = (BYTE)((seq % 16) + '0');
1821:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c > '9') c += 7;
1822:Middlewares/Third_Party/FatFs/src/ff.c **** 		ns[i--] = c;
1823:Middlewares/Third_Party/FatFs/src/ff.c **** 		seq /= 16;
1824:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (seq);
1825:Middlewares/Third_Party/FatFs/src/ff.c **** 	ns[i] = '~';
1826:Middlewares/Third_Party/FatFs/src/ff.c **** 
1827:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Append the number */
1828:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (j = 0; j < i && dst[j] != ' '; j++) {
1829:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (IsDBCS1(dst[j])) {
1830:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (j == i - 1) break;
1831:Middlewares/Third_Party/FatFs/src/ff.c **** 			j++;
1832:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1833:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1834:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
1835:Middlewares/Third_Party/FatFs/src/ff.c **** 		dst[j++] = (i < 8) ? ns[i++] : ' ';
1836:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (j < 8);
1837:Middlewares/Third_Party/FatFs/src/ff.c **** }
1838:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _USE_LFN != 0 && !_FS_READONLY */
1839:Middlewares/Third_Party/FatFs/src/ff.c **** 
1840:Middlewares/Third_Party/FatFs/src/ff.c **** 
1841:Middlewares/Third_Party/FatFs/src/ff.c **** 
1842:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
1843:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1844:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT-LFN: Calculate checksum of an SFN entry                           */
ARM GAS  /tmp/ccwdO2Zj.s 			page 51


1845:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1846:Middlewares/Third_Party/FatFs/src/ff.c **** 
1847:Middlewares/Third_Party/FatFs/src/ff.c **** static
1848:Middlewares/Third_Party/FatFs/src/ff.c **** BYTE sum_sfn (
1849:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE* dir		/* Pointer to the SFN entry */
1850:Middlewares/Third_Party/FatFs/src/ff.c **** )
1851:Middlewares/Third_Party/FatFs/src/ff.c **** {
1852:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE sum = 0;
1853:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT n = 11;
1854:Middlewares/Third_Party/FatFs/src/ff.c **** 
1855:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
1856:Middlewares/Third_Party/FatFs/src/ff.c **** 		sum = (sum >> 1) + (sum << 7) + *dir++;
1857:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (--n);
1858:Middlewares/Third_Party/FatFs/src/ff.c **** 	return sum;
1859:Middlewares/Third_Party/FatFs/src/ff.c **** }
1860:Middlewares/Third_Party/FatFs/src/ff.c **** 
1861:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _USE_LFN != 0 */
1862:Middlewares/Third_Party/FatFs/src/ff.c **** 
1863:Middlewares/Third_Party/FatFs/src/ff.c **** 
1864:Middlewares/Third_Party/FatFs/src/ff.c **** 
1865:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
1866:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1867:Middlewares/Third_Party/FatFs/src/ff.c **** /* exFAT: Checksum                                                       */
1868:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1869:Middlewares/Third_Party/FatFs/src/ff.c **** 
1870:Middlewares/Third_Party/FatFs/src/ff.c **** static
1871:Middlewares/Third_Party/FatFs/src/ff.c **** WORD xdir_sum (			/* Get checksum of the directoly block */
1872:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE* dir		/* Directory entry block to be calculated */
1873:Middlewares/Third_Party/FatFs/src/ff.c **** )
1874:Middlewares/Third_Party/FatFs/src/ff.c **** {
1875:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, szblk;
1876:Middlewares/Third_Party/FatFs/src/ff.c **** 	WORD sum;
1877:Middlewares/Third_Party/FatFs/src/ff.c **** 
1878:Middlewares/Third_Party/FatFs/src/ff.c **** 
1879:Middlewares/Third_Party/FatFs/src/ff.c **** 	szblk = (dir[XDIR_NumSec] + 1) * SZDIRE;
1880:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (i = sum = 0; i < szblk; i++) {
1881:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == XDIR_SetSum) {	/* Skip sum field */
1882:Middlewares/Third_Party/FatFs/src/ff.c **** 			i++;
1883:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
1884:Middlewares/Third_Party/FatFs/src/ff.c **** 			sum = ((sum & 1) ? 0x8000 : 0) + (sum >> 1) + dir[i];
1885:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1886:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1887:Middlewares/Third_Party/FatFs/src/ff.c **** 	return sum;
1888:Middlewares/Third_Party/FatFs/src/ff.c **** }
1889:Middlewares/Third_Party/FatFs/src/ff.c **** 
1890:Middlewares/Third_Party/FatFs/src/ff.c **** 
1891:Middlewares/Third_Party/FatFs/src/ff.c **** 
1892:Middlewares/Third_Party/FatFs/src/ff.c **** static
1893:Middlewares/Third_Party/FatFs/src/ff.c **** WORD xname_sum (		/* Get check sum (to be used as hash) of the name */
1894:Middlewares/Third_Party/FatFs/src/ff.c **** 	const WCHAR* name	/* File name to be calculated */
1895:Middlewares/Third_Party/FatFs/src/ff.c **** )
1896:Middlewares/Third_Party/FatFs/src/ff.c **** {
1897:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR chr;
1898:Middlewares/Third_Party/FatFs/src/ff.c **** 	WORD sum = 0;
1899:Middlewares/Third_Party/FatFs/src/ff.c **** 
1900:Middlewares/Third_Party/FatFs/src/ff.c **** 
1901:Middlewares/Third_Party/FatFs/src/ff.c **** 	while ((chr = *name++) != 0) {
ARM GAS  /tmp/ccwdO2Zj.s 			page 52


1902:Middlewares/Third_Party/FatFs/src/ff.c **** 		chr = ff_wtoupper(chr);		/* File name needs to be ignored case */
1903:Middlewares/Third_Party/FatFs/src/ff.c **** 		sum = ((sum & 1) ? 0x8000 : 0) + (sum >> 1) + (chr & 0xFF);
1904:Middlewares/Third_Party/FatFs/src/ff.c **** 		sum = ((sum & 1) ? 0x8000 : 0) + (sum >> 1) + (chr >> 8);
1905:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1906:Middlewares/Third_Party/FatFs/src/ff.c **** 	return sum;
1907:Middlewares/Third_Party/FatFs/src/ff.c **** }
1908:Middlewares/Third_Party/FatFs/src/ff.c **** 
1909:Middlewares/Third_Party/FatFs/src/ff.c **** 
1910:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY && _USE_MKFS
1911:Middlewares/Third_Party/FatFs/src/ff.c **** static
1912:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD xsum32 (
1913:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE  dat,	/* Data to be sumed */
1914:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD sum	/* Previous value */
1915:Middlewares/Third_Party/FatFs/src/ff.c **** )
1916:Middlewares/Third_Party/FatFs/src/ff.c **** {
1917:Middlewares/Third_Party/FatFs/src/ff.c **** 	sum = ((sum & 1) ? 0x80000000 : 0) + (sum >> 1) + dat;
1918:Middlewares/Third_Party/FatFs/src/ff.c **** 	return sum;
1919:Middlewares/Third_Party/FatFs/src/ff.c **** }
1920:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1921:Middlewares/Third_Party/FatFs/src/ff.c **** 
1922:Middlewares/Third_Party/FatFs/src/ff.c **** 
1923:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 1 || _FS_RPATH >= 2
1924:Middlewares/Third_Party/FatFs/src/ff.c **** /*------------------------------------------------------*/
1925:Middlewares/Third_Party/FatFs/src/ff.c **** /* exFAT: Get object information from a directory block */
1926:Middlewares/Third_Party/FatFs/src/ff.c **** /*------------------------------------------------------*/
1927:Middlewares/Third_Party/FatFs/src/ff.c **** 
1928:Middlewares/Third_Party/FatFs/src/ff.c **** static
1929:Middlewares/Third_Party/FatFs/src/ff.c **** void get_xdir_info (
1930:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dirb,			/* Pointer to the direcotry entry block 85+C0+C1s */
1931:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO* fno		/* Buffer to store the extracted file information */
1932:Middlewares/Third_Party/FatFs/src/ff.c **** )
1933:Middlewares/Third_Party/FatFs/src/ff.c **** {
1934:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT di, si;
1935:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR w;
1936:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_LFN_UNICODE
1937:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nc;
1938:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1939:Middlewares/Third_Party/FatFs/src/ff.c **** 
1940:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get file name */
1941:Middlewares/Third_Party/FatFs/src/ff.c **** 	di = 0;
1942:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE
1943:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (si = SZDIRE * 2; di < dirb[XDIR_NumName]; si += 2, di++) {
1944:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((si % SZDIRE) == 0) si += 2;		/* Skip entry type field */
1945:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = ld_word(dirb + si);					/* Get a character */
1946:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (di >= _MAX_LFN) { di = 0; break; }	/* Buffer overflow --> inaccessible object name */
1947:Middlewares/Third_Party/FatFs/src/ff.c **** 		fno->fname[di] = w;						/* Store it */
1948:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1949:Middlewares/Third_Party/FatFs/src/ff.c **** #else
1950:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (si = SZDIRE * 2, nc = 0; nc < dirb[XDIR_NumName]; si += 2, nc++) {
1951:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((si % SZDIRE) == 0) si += 2;		/* Skip entry type field */
1952:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = ff_convert(ld_word(dirb + si), 0);	/* Get a character and Unicode -> OEM */
1953:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_DF1S && w >= 0x100) {				/* Is it a double byte char? (always false at SBCS cfg) */
1954:Middlewares/Third_Party/FatFs/src/ff.c **** 			fno->fname[di++] = (char)(w >> 8);	/* Put 1st byte of the DBC */
1955:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1956:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w == 0 || di >= _MAX_LFN) { di = 0; break; }	/* Invalid char or buffer overflow --> inaccessi
1957:Middlewares/Third_Party/FatFs/src/ff.c **** 		fno->fname[di++] = (char)w;
1958:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
ARM GAS  /tmp/ccwdO2Zj.s 			page 53


1959:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1960:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (di == 0) fno->fname[di++] = '?';	/* Inaccessible object name? */
1961:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->fname[di] = 0;						/* Terminate file name */
1962:Middlewares/Third_Party/FatFs/src/ff.c **** 
1963:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->altname[0] = 0;							/* No SFN */
1964:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->fattrib = dirb[XDIR_Attr];					/* Attribute */
1965:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->fsize = (fno->fattrib & AM_DIR) ? 0 : ld_qword(dirb + XDIR_FileSize);	/* Size */
1966:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->ftime = ld_word(dirb + XDIR_ModTime + 0);	/* Time */
1967:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->fdate = ld_word(dirb + XDIR_ModTime + 2);	/* Date */
1968:Middlewares/Third_Party/FatFs/src/ff.c **** }
1969:Middlewares/Third_Party/FatFs/src/ff.c **** 
1970:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _FS_MINIMIZE <= 1 || _FS_RPATH >= 2 */
1971:Middlewares/Third_Party/FatFs/src/ff.c **** 
1972:Middlewares/Third_Party/FatFs/src/ff.c **** 
1973:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------*/
1974:Middlewares/Third_Party/FatFs/src/ff.c **** /* exFAT: Get a directry entry block */
1975:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------*/
1976:Middlewares/Third_Party/FatFs/src/ff.c **** 
1977:Middlewares/Third_Party/FatFs/src/ff.c **** static
1978:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT load_xdir (	/* FR_INT_ERR: invalid entry block */
1979:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp			/* Pointer to the reading direcotry object pointing the 85 entry */
1980:Middlewares/Third_Party/FatFs/src/ff.c **** )
1981:Middlewares/Third_Party/FatFs/src/ff.c **** {
1982:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
1983:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, sz_ent;
1984:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dirb = dp->obj.fs->dirbuf;	/* Pointer to the on-memory direcotry entry block 85+C0+C1s */
1985:Middlewares/Third_Party/FatFs/src/ff.c **** 
1986:Middlewares/Third_Party/FatFs/src/ff.c **** 
1987:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Load 85 entry */
1988:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = move_window(dp->obj.fs, dp->sect);
1989:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) return res;
1990:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (dp->dir[XDIR_Type] != 0x85) return FR_INT_ERR;
1991:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_cpy(dirb + 0, dp->dir, SZDIRE);
1992:Middlewares/Third_Party/FatFs/src/ff.c **** 	sz_ent = (dirb[XDIR_NumSec] + 1) * SZDIRE;
1993:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (sz_ent < 3 * SZDIRE || sz_ent > 19 * SZDIRE) return FR_INT_ERR;
1994:Middlewares/Third_Party/FatFs/src/ff.c **** 
1995:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Load C0 entry */
1996:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_next(dp, 0);
1997:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) return res;
1998:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = move_window(dp->obj.fs, dp->sect);
1999:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) return res;
2000:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (dp->dir[XDIR_Type] != 0xC0) return FR_INT_ERR;
2001:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_cpy(dirb + SZDIRE, dp->dir, SZDIRE);
2002:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (MAXDIRB(dirb[XDIR_NumName]) > sz_ent) return FR_INT_ERR;
2003:Middlewares/Third_Party/FatFs/src/ff.c **** 
2004:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Load C1 entries */
2005:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = SZDIRE * 2;	/* C1 offset */
2006:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
2007:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_next(dp, 0);
2008:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) return res;
2009:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(dp->obj.fs, dp->sect);
2010:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) return res;
2011:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (dp->dir[XDIR_Type] != 0xC1) return FR_INT_ERR;
2012:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i < MAXDIRB(_MAX_LFN)) mem_cpy(dirb + i, dp->dir, SZDIRE);
2013:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while ((i += SZDIRE) < sz_ent);
2014:Middlewares/Third_Party/FatFs/src/ff.c **** 
2015:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Sanity check (do it when accessible object name) */
ARM GAS  /tmp/ccwdO2Zj.s 			page 54


2016:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (i <= MAXDIRB(_MAX_LFN)) {
2017:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (xdir_sum(dirb) != ld_word(dirb + XDIR_SetSum)) return FR_INT_ERR;
2018:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2019:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
2020:Middlewares/Third_Party/FatFs/src/ff.c **** }
2021:Middlewares/Third_Party/FatFs/src/ff.c **** 
2022:Middlewares/Third_Party/FatFs/src/ff.c **** 
2023:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY || _FS_RPATH != 0
2024:Middlewares/Third_Party/FatFs/src/ff.c **** /*------------------------------------------------*/
2025:Middlewares/Third_Party/FatFs/src/ff.c **** /* exFAT: Load the object's directory entry block */
2026:Middlewares/Third_Party/FatFs/src/ff.c **** /*------------------------------------------------*/
2027:Middlewares/Third_Party/FatFs/src/ff.c **** static
2028:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT load_obj_dir (
2029:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,			/* Blank directory object to be used to access containing direcotry */
2030:Middlewares/Third_Party/FatFs/src/ff.c **** 	const _FDID* obj	/* Object with its containing directory information */
2031:Middlewares/Third_Party/FatFs/src/ff.c **** )
2032:Middlewares/Third_Party/FatFs/src/ff.c **** {
2033:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2034:Middlewares/Third_Party/FatFs/src/ff.c **** 
2035:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Open object containing directory */
2036:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->obj.fs = obj->fs;
2037:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->obj.sclust = obj->c_scl;
2038:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->obj.stat = (BYTE)obj->c_size;
2039:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->obj.objsize = obj->c_size & 0xFFFFFF00;
2040:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->blk_ofs = obj->c_ofs;
2041:Middlewares/Third_Party/FatFs/src/ff.c **** 
2042:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_sdi(dp, dp->blk_ofs);	/* Goto object's entry block */
2043:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
2044:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = load_xdir(dp);		/* Load the object's entry block */
2045:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2046:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
2047:Middlewares/Third_Party/FatFs/src/ff.c **** }
2048:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2049:Middlewares/Third_Party/FatFs/src/ff.c **** 
2050:Middlewares/Third_Party/FatFs/src/ff.c **** 
2051:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
2052:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------*/
2053:Middlewares/Third_Party/FatFs/src/ff.c **** /* exFAT: Store the directory block to the media */
2054:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------*/
2055:Middlewares/Third_Party/FatFs/src/ff.c **** static
2056:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT store_xdir (
2057:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp				/* Pointer to the direcotry object */
2058:Middlewares/Third_Party/FatFs/src/ff.c **** )
2059:Middlewares/Third_Party/FatFs/src/ff.c **** {
2060:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2061:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nent;
2062:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dirb = dp->obj.fs->dirbuf;	/* Pointer to the direcotry entry block 85+C0+C1s */
2063:Middlewares/Third_Party/FatFs/src/ff.c **** 
2064:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create set sum */
2065:Middlewares/Third_Party/FatFs/src/ff.c **** 	st_word(dirb + XDIR_SetSum, xdir_sum(dirb));
2066:Middlewares/Third_Party/FatFs/src/ff.c **** 	nent = dirb[XDIR_NumSec] + 1;
2067:Middlewares/Third_Party/FatFs/src/ff.c **** 
2068:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Store the set of directory to the volume */
2069:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_sdi(dp, dp->blk_ofs);
2070:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (res == FR_OK) {
2071:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(dp->obj.fs, dp->sect);
2072:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
ARM GAS  /tmp/ccwdO2Zj.s 			page 55


2073:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(dp->dir, dirb, SZDIRE);
2074:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->obj.fs->wflag = 1;
2075:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (--nent == 0) break;
2076:Middlewares/Third_Party/FatFs/src/ff.c **** 		dirb += SZDIRE;
2077:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_next(dp, 0);
2078:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2079:Middlewares/Third_Party/FatFs/src/ff.c **** 	return (res == FR_OK || res == FR_DISK_ERR) ? res : FR_INT_ERR;
2080:Middlewares/Third_Party/FatFs/src/ff.c **** }
2081:Middlewares/Third_Party/FatFs/src/ff.c **** 
2082:Middlewares/Third_Party/FatFs/src/ff.c **** 
2083:Middlewares/Third_Party/FatFs/src/ff.c **** 
2084:Middlewares/Third_Party/FatFs/src/ff.c **** /*-------------------------------------------*/
2085:Middlewares/Third_Party/FatFs/src/ff.c **** /* exFAT: Create a new directory enrty block */
2086:Middlewares/Third_Party/FatFs/src/ff.c **** /*-------------------------------------------*/
2087:Middlewares/Third_Party/FatFs/src/ff.c **** 
2088:Middlewares/Third_Party/FatFs/src/ff.c **** static
2089:Middlewares/Third_Party/FatFs/src/ff.c **** void create_xdir (
2090:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dirb,			/* Pointer to the direcotry entry block buffer */
2091:Middlewares/Third_Party/FatFs/src/ff.c **** 	const WCHAR* lfn	/* Pointer to the nul terminated file name */
2092:Middlewares/Third_Party/FatFs/src/ff.c **** )
2093:Middlewares/Third_Party/FatFs/src/ff.c **** {
2094:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
2095:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE nb, nc;
2096:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR chr;
2097:Middlewares/Third_Party/FatFs/src/ff.c **** 
2098:Middlewares/Third_Party/FatFs/src/ff.c **** 
2099:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create 85+C0 entry */
2100:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_set(dirb, 0, 2 * SZDIRE);
2101:Middlewares/Third_Party/FatFs/src/ff.c **** 	dirb[XDIR_Type] = 0x85;
2102:Middlewares/Third_Party/FatFs/src/ff.c **** 	dirb[XDIR_Type + SZDIRE] = 0xC0;
2103:Middlewares/Third_Party/FatFs/src/ff.c **** 
2104:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create C1 entries */
2105:Middlewares/Third_Party/FatFs/src/ff.c **** 	nc = 0; nb = 1; chr = 1; i = SZDIRE * 2;
2106:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
2107:Middlewares/Third_Party/FatFs/src/ff.c **** 		dirb[i++] = 0xC1; dirb[i++] = 0;	/* Entry type C1 */
2108:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {	/* Fill name field */
2109:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (chr && (chr = lfn[nc]) != 0) nc++;	/* Get a character if exist */
2110:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(dirb + i, chr); 		/* Store it */
2111:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while ((i += 2) % SZDIRE != 0);
2112:Middlewares/Third_Party/FatFs/src/ff.c **** 		nb++;
2113:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (lfn[nc]);	/* Fill next entry if any char follows */
2114:Middlewares/Third_Party/FatFs/src/ff.c **** 
2115:Middlewares/Third_Party/FatFs/src/ff.c **** 	dirb[XDIR_NumName] = nc;	/* Set name length */
2116:Middlewares/Third_Party/FatFs/src/ff.c **** 	dirb[XDIR_NumSec] = nb;		/* Set block length */
2117:Middlewares/Third_Party/FatFs/src/ff.c **** 	st_word(dirb + XDIR_NameHash, xname_sum(lfn));	/* Set name hash */
2118:Middlewares/Third_Party/FatFs/src/ff.c **** }
2119:Middlewares/Third_Party/FatFs/src/ff.c **** 
2120:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* !_FS_READONLY */
2121:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _FS_EXFAT */
2122:Middlewares/Third_Party/FatFs/src/ff.c **** 
2123:Middlewares/Third_Party/FatFs/src/ff.c **** 
2124:Middlewares/Third_Party/FatFs/src/ff.c **** 
2125:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 1 || _FS_RPATH >= 2 || _USE_LABEL || _FS_EXFAT
2126:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2127:Middlewares/Third_Party/FatFs/src/ff.c **** /* Read an object from the directory                                     */
2128:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2129:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/ccwdO2Zj.s 			page 56


2130:Middlewares/Third_Party/FatFs/src/ff.c **** static
2131:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_read (
2132:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,		/* Pointer to the directory object */
2133:Middlewares/Third_Party/FatFs/src/ff.c **** 	int vol			/* Filtered by 0:file/directory or 1:volume label */
2134:Middlewares/Third_Party/FatFs/src/ff.c **** )
2135:Middlewares/Third_Party/FatFs/src/ff.c **** {
2136:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_NO_FILE;
2137:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = dp->obj.fs;
2138:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE a, c;
2139:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
2140:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE ord = 0xFF, sum = 0xFF;
2141:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2142:Middlewares/Third_Party/FatFs/src/ff.c **** 
2143:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (dp->sect) {
2144:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(fs, dp->sect);
2145:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
2146:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = dp->dir[DIR_Name];	/* Test for the entry type */
2147:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 0) {
2148:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_NO_FILE; break; /* Reached to end of the directory */
2149:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2150:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
2151:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
2152:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (_USE_LABEL && vol) {
2153:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (c == 0x83) break;	/* Volume label entry? */
2154:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
2155:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (c == 0x85) {		/* Start of the file entry block? */
2156:Middlewares/Third_Party/FatFs/src/ff.c **** 					dp->blk_ofs = dp->dptr;	/* Get location of the block */
2157:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = load_xdir(dp);	/* Load the entry block */
2158:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) {
2159:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->obj.attr = fs->dirbuf[XDIR_Attr] & AM_MASK;	/* Get attribute */
2160:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
2161:Middlewares/Third_Party/FatFs/src/ff.c **** 					break;
2162:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2163:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2164:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else
2165:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2166:Middlewares/Third_Party/FatFs/src/ff.c **** 		{	/* On the FAT12/16/32 volume */
2167:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->obj.attr = a = dp->dir[DIR_Attr] & AM_MASK;	/* Get attribute */
2168:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
2169:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c == DDEM || c == '.' || (int)((a & ~AM_ARC) == AM_VOL) != vol) {	/* An entry without valid 
2170:Middlewares/Third_Party/FatFs/src/ff.c **** 				ord = 0xFF;
2171:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
2172:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (a == AM_LFN) {			/* An LFN entry is found */
2173:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (c & LLEF) {			/* Is it start of an LFN sequence? */
2174:Middlewares/Third_Party/FatFs/src/ff.c **** 						sum = dp->dir[LDIR_Chksum];
2175:Middlewares/Third_Party/FatFs/src/ff.c **** 						c &= (BYTE)~LLEF; ord = c;
2176:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->blk_ofs = dp->dptr;
2177:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
2178:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Check LFN validity and capture it */
2179:Middlewares/Third_Party/FatFs/src/ff.c **** 					ord = (c == ord && sum == dp->dir[LDIR_Chksum] && pick_lfn(fs->lfnbuf, dp->dir)) ? ord - 1 : 0
2180:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {					/* An SFN entry is found */
2181:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (ord || sum != sum_sfn(dp->dir)) {	/* Is there a valid LFN? */
2182:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->blk_ofs = 0xFFFFFFFF;			/* It has no LFN. */
2183:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
2184:Middlewares/Third_Party/FatFs/src/ff.c **** 					break;
2185:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2186:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
ARM GAS  /tmp/ccwdO2Zj.s 			page 57


2187:Middlewares/Third_Party/FatFs/src/ff.c **** #else		/* Non LFN configuration */
2188:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c != DDEM && c != '.' && a != AM_LFN && (int)((a & ~AM_ARC) == AM_VOL) == vol) {	/* Is it a 
2189:Middlewares/Third_Party/FatFs/src/ff.c **** 				break;
2190:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2191:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2192:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2193:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_next(dp, 0);		/* Next entry */
2194:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
2195:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2196:Middlewares/Third_Party/FatFs/src/ff.c **** 
2197:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) dp->sect = 0;		/* Terminate the read operation on error or EOT */
2198:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
2199:Middlewares/Third_Party/FatFs/src/ff.c **** }
2200:Middlewares/Third_Party/FatFs/src/ff.c **** 
2201:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _FS_MINIMIZE <= 1 || _USE_LABEL || _FS_RPATH >= 2 */
2202:Middlewares/Third_Party/FatFs/src/ff.c **** 
2203:Middlewares/Third_Party/FatFs/src/ff.c **** 
2204:Middlewares/Third_Party/FatFs/src/ff.c **** 
2205:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2206:Middlewares/Third_Party/FatFs/src/ff.c **** /* Directory handling - Find an object in the directory                  */
2207:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2208:Middlewares/Third_Party/FatFs/src/ff.c **** 
2209:Middlewares/Third_Party/FatFs/src/ff.c **** static
2210:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_find (	/* FR_OK(0):succeeded, !=0:error */
2211:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp			/* Pointer to the directory object with the file name */
2212:Middlewares/Third_Party/FatFs/src/ff.c **** )
2213:Middlewares/Third_Party/FatFs/src/ff.c **** {
2214:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2215:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = dp->obj.fs;
2216:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE c;
2217:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
2218:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE a, ord, sum;
2219:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2220:Middlewares/Third_Party/FatFs/src/ff.c **** 
2221:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_sdi(dp, 0);			/* Rewind directory object */
2222:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) return res;
2223:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
2224:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
2225:Middlewares/Third_Party/FatFs/src/ff.c **** 		BYTE nc;
2226:Middlewares/Third_Party/FatFs/src/ff.c **** 		UINT di, ni;
2227:Middlewares/Third_Party/FatFs/src/ff.c **** 		WORD hash = xname_sum(fs->lfnbuf);		/* Hash value of the name to find */
2228:Middlewares/Third_Party/FatFs/src/ff.c **** 
2229:Middlewares/Third_Party/FatFs/src/ff.c **** 		while ((res = dir_read(dp, 0)) == FR_OK) {	/* Read an item */
2230:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_LFN < 255
2231:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->dirbuf[XDIR_NumName] > _MAX_LFN) continue;			/* Skip comparison if inaccessible object n
2232:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2233:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ld_word(fs->dirbuf + XDIR_NameHash) != hash) continue;	/* Skip comparison if hash mismatched
2234:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (nc = fs->dirbuf[XDIR_NumName], di = SZDIRE * 2, ni = 0; nc; nc--, di += 2, ni++) {	/* Compa
2235:Middlewares/Third_Party/FatFs/src/ff.c **** 				if ((di % SZDIRE) == 0) di += 2;
2236:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ff_wtoupper(ld_word(fs->dirbuf + di)) != ff_wtoupper(fs->lfnbuf[ni])) break;
2237:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2238:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (nc == 0 && !fs->lfnbuf[ni]) break;	/* Name matched? */
2239:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2240:Middlewares/Third_Party/FatFs/src/ff.c **** 		return res;
2241:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2242:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2243:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* On the FAT12/16/32 volume */
ARM GAS  /tmp/ccwdO2Zj.s 			page 58


2244:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
2245:Middlewares/Third_Party/FatFs/src/ff.c **** 	ord = sum = 0xFF; dp->blk_ofs = 0xFFFFFFFF;	/* Reset LFN sequence */
2246:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2247:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
2248:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(fs, dp->sect);
2249:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
2250:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = dp->dir[DIR_Name];
2251:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
2252:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
2253:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->obj.attr = a = dp->dir[DIR_Attr] & AM_MASK;
2254:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == DDEM || ((a & AM_VOL) && a != AM_LFN)) {	/* An entry without valid data */
2255:Middlewares/Third_Party/FatFs/src/ff.c **** 			ord = 0xFF; dp->blk_ofs = 0xFFFFFFFF;	/* Reset LFN sequence */
2256:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
2257:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (a == AM_LFN) {			/* An LFN entry is found */
2258:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!(dp->fn[NSFLAG] & NS_NOLFN)) {
2259:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (c & LLEF) {		/* Is it start of LFN sequence? */
2260:Middlewares/Third_Party/FatFs/src/ff.c **** 						sum = dp->dir[LDIR_Chksum];
2261:Middlewares/Third_Party/FatFs/src/ff.c **** 						c &= (BYTE)~LLEF; ord = c;	/* LFN start order */
2262:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->blk_ofs = dp->dptr;	/* Start offset of LFN */
2263:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
2264:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Check validity of the LFN entry and compare it with given name */
2265:Middlewares/Third_Party/FatFs/src/ff.c **** 					ord = (c == ord && sum == dp->dir[LDIR_Chksum] && cmp_lfn(fs->lfnbuf, dp->dir)) ? ord - 1 : 0x
2266:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2267:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {					/* An SFN entry is found */
2268:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!ord && sum == sum_sfn(dp->dir)) break;	/* LFN matched? */
2269:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!(dp->fn[NSFLAG] & NS_LOSS) && !mem_cmp(dp->dir, dp->fn, 11)) break;	/* SFN matched? */
2270:Middlewares/Third_Party/FatFs/src/ff.c **** 				ord = 0xFF; dp->blk_ofs = 0xFFFFFFFF;	/* Reset LFN sequence */
2271:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2272:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2273:Middlewares/Third_Party/FatFs/src/ff.c **** #else		/* Non LFN configuration */
2274:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->obj.attr = dp->dir[DIR_Attr] & AM_MASK;
2275:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!(dp->dir[DIR_Attr] & AM_VOL) && !mem_cmp(dp->dir, dp->fn, 11)) break;	/* Is it a valid entry
2276:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2277:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_next(dp, 0);	/* Next entry */
2278:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (res == FR_OK);
2279:Middlewares/Third_Party/FatFs/src/ff.c **** 
2280:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
2281:Middlewares/Third_Party/FatFs/src/ff.c **** }
2282:Middlewares/Third_Party/FatFs/src/ff.c **** 
2283:Middlewares/Third_Party/FatFs/src/ff.c **** 
2284:Middlewares/Third_Party/FatFs/src/ff.c **** 
2285:Middlewares/Third_Party/FatFs/src/ff.c **** 
2286:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
2287:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2288:Middlewares/Third_Party/FatFs/src/ff.c **** /* Register an object to the directory                                   */
2289:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2290:Middlewares/Third_Party/FatFs/src/ff.c **** 
2291:Middlewares/Third_Party/FatFs/src/ff.c **** static
2292:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_register (	/* FR_OK:succeeded, FR_DENIED:no free entry or too many SFN collision, FR_DI
2293:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp				/* Target directory with object name to be created */
2294:Middlewares/Third_Party/FatFs/src/ff.c **** )
2295:Middlewares/Third_Party/FatFs/src/ff.c **** {
2296:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2297:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = dp->obj.fs;
2298:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
2299:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT n, nlen, nent;
2300:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE sn[12], sum;
ARM GAS  /tmp/ccwdO2Zj.s 			page 59


2301:Middlewares/Third_Party/FatFs/src/ff.c **** 
2302:Middlewares/Third_Party/FatFs/src/ff.c **** 
2303:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (dp->fn[NSFLAG] & (NS_DOT | NS_NONAME)) return FR_INVALID_NAME;	/* Check name validity */
2304:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (nlen = 0; fs->lfnbuf[nlen]; nlen++) ;	/* Get lfn length */
2305:Middlewares/Third_Party/FatFs/src/ff.c **** 
2306:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
2307:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
2308:Middlewares/Third_Party/FatFs/src/ff.c **** 		DIR dj;
2309:Middlewares/Third_Party/FatFs/src/ff.c **** 
2310:Middlewares/Third_Party/FatFs/src/ff.c **** 		nent = (nlen + 14) / 15 + 2;	/* Number of entries to allocate (85+C0+C1s) */
2311:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_alloc(dp, nent);		/* Allocate entries */
2312:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) return res;
2313:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->blk_ofs = dp->dptr - SZDIRE * (nent - 1);	/* Set the allocated entry block offset */
2314:Middlewares/Third_Party/FatFs/src/ff.c **** 
2315:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (dp->obj.sclust != 0 && (dp->obj.stat & 4)) {	/* Has the sub-directory been stretched? */
2316:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->obj.objsize += (DWORD)fs->csize * SS(fs);	/* Increase the directory size by cluster size */
2317:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = fill_first_frag(&dp->obj);				/* Fill first fragment on the FAT if needed */
2318:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) return res;
2319:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = fill_last_frag(&dp->obj, dp->clust, 0xFFFFFFFF);	/* Fill last fragment on the FAT if neede
2320:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) return res;
2321:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = load_obj_dir(&dj, &dp->obj);				/* Load the object status */
2322:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) return res;
2323:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_qword(fs->dirbuf + XDIR_FileSize, dp->obj.objsize);		/* Update the allocation status */
2324:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_qword(fs->dirbuf + XDIR_ValidFileSize, dp->obj.objsize);
2325:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->dirbuf[XDIR_GenFlags] = dp->obj.stat | 1;
2326:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = store_xdir(&dj);							/* Store the object status */
2327:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) return res;
2328:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2329:Middlewares/Third_Party/FatFs/src/ff.c **** 
2330:Middlewares/Third_Party/FatFs/src/ff.c **** 		create_xdir(fs->dirbuf, fs->lfnbuf);	/* Create on-memory directory block to be written later */
2331:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_OK;
2332:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2333:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2334:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* On the FAT12/16/32 volume */
2335:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_cpy(sn, dp->fn, 12);
2336:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (sn[NSFLAG] & NS_LOSS) {			/* When LFN is out of 8.3 format, generate a numbered name */
2337:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->fn[NSFLAG] = NS_NOLFN;		/* Find only SFN */
2338:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (n = 1; n < 100; n++) {
2339:Middlewares/Third_Party/FatFs/src/ff.c **** 			gen_numname(dp->fn, sn, fs->lfnbuf, n);	/* Generate a numbered name */
2340:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_find(dp);				/* Check if the name collides with existing SFN */
2341:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
2342:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2343:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n == 100) return FR_DENIED;		/* Abort if too many collisions */
2344:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_NO_FILE) return res;	/* Abort if the result is other than 'not collided' */
2345:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->fn[NSFLAG] = sn[NSFLAG];
2346:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2347:Middlewares/Third_Party/FatFs/src/ff.c **** 
2348:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create an SFN with/without LFNs. */
2349:Middlewares/Third_Party/FatFs/src/ff.c **** 	nent = (sn[NSFLAG] & NS_LFN) ? (nlen + 12) / 13 + 1 : 1;	/* Number of entries to allocate */
2350:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_alloc(dp, nent);		/* Allocate entries */
2351:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK && --nent) {	/* Set LFN entry if needed */
2352:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_sdi(dp, dp->dptr - nent * SZDIRE);
2353:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
2354:Middlewares/Third_Party/FatFs/src/ff.c **** 			sum = sum_sfn(dp->fn);	/* Checksum value of the SFN tied to the LFN */
2355:Middlewares/Third_Party/FatFs/src/ff.c **** 			do {					/* Store LFN entries in bottom first */
2356:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = move_window(fs, dp->sect);
2357:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res != FR_OK) break;
ARM GAS  /tmp/ccwdO2Zj.s 			page 60


2358:Middlewares/Third_Party/FatFs/src/ff.c **** 				put_lfn(fs->lfnbuf, dp->dir, (BYTE)nent, sum);
2359:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->wflag = 1;
2360:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_next(dp, 0);	/* Next entry */
2361:Middlewares/Third_Party/FatFs/src/ff.c **** 			} while (res == FR_OK && --nent);
2362:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2363:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2364:Middlewares/Third_Party/FatFs/src/ff.c **** 
2365:Middlewares/Third_Party/FatFs/src/ff.c **** #else	/* Non LFN configuration */
2366:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_alloc(dp, 1);		/* Allocate an entry for SFN */
2367:Middlewares/Third_Party/FatFs/src/ff.c **** 
2368:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2369:Middlewares/Third_Party/FatFs/src/ff.c **** 
2370:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Set SFN entry */
2371:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
2372:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(fs, dp->sect);
2373:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
2374:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(dp->dir, 0, SZDIRE);	/* Clean the entry */
2375:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_cpy(dp->dir + DIR_Name, dp->fn, 11);	/* Put SFN */
2376:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
2377:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->dir[DIR_NTres] = dp->fn[NSFLAG] & (NS_BODY | NS_EXT);	/* Put NT flag */
2378:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2379:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
2380:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2381:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2382:Middlewares/Third_Party/FatFs/src/ff.c **** 
2383:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
2384:Middlewares/Third_Party/FatFs/src/ff.c **** }
2385:Middlewares/Third_Party/FatFs/src/ff.c **** 
2386:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
2387:Middlewares/Third_Party/FatFs/src/ff.c **** 
2388:Middlewares/Third_Party/FatFs/src/ff.c **** 
2389:Middlewares/Third_Party/FatFs/src/ff.c **** 
2390:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY && _FS_MINIMIZE == 0
2391:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2392:Middlewares/Third_Party/FatFs/src/ff.c **** /* Remove an object from the directory                                   */
2393:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2394:Middlewares/Third_Party/FatFs/src/ff.c **** 
2395:Middlewares/Third_Party/FatFs/src/ff.c **** static
2396:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_remove (	/* FR_OK:Succeeded, FR_DISK_ERR:A disk error */
2397:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp				/* Directory object pointing the entry to be removed */
2398:Middlewares/Third_Party/FatFs/src/ff.c **** )
2399:Middlewares/Third_Party/FatFs/src/ff.c **** {
2400:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2401:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = dp->obj.fs;
2402:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
2403:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD last = dp->dptr;
2404:Middlewares/Third_Party/FatFs/src/ff.c **** 
2405:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = (dp->blk_ofs == 0xFFFFFFFF) ? FR_OK : dir_sdi(dp, dp->blk_ofs);	/* Goto top of the entry blo
2406:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
2407:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
2408:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, dp->sect);
2409:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
2410:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Mark an entry 'deleted' */
2411:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (_FS_EXFAT && fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
2412:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->dir[XDIR_Type] &= 0x7F;
2413:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {									/* On the FAT12/16/32 volume */
2414:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->dir[DIR_Name] = DDEM;
ARM GAS  /tmp/ccwdO2Zj.s 			page 61


2415:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2416:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
2417:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dp->dptr >= last) break;	/* If reached last entry then all entries of the object has been de
2418:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_next(dp, 0);	/* Next entry */
2419:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (res == FR_OK);
2420:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_NO_FILE) res = FR_INT_ERR;
2421:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2422:Middlewares/Third_Party/FatFs/src/ff.c **** #else			/* Non LFN configuration */
2423:Middlewares/Third_Party/FatFs/src/ff.c **** 
2424:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = move_window(fs, dp->sect);
2425:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
2426:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->dir[DIR_Name] = DDEM;
2427:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->wflag = 1;
2428:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2429:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2430:Middlewares/Third_Party/FatFs/src/ff.c **** 
2431:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
2432:Middlewares/Third_Party/FatFs/src/ff.c **** }
2433:Middlewares/Third_Party/FatFs/src/ff.c **** 
2434:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY && _FS_MINIMIZE == 0 */
2435:Middlewares/Third_Party/FatFs/src/ff.c **** 
2436:Middlewares/Third_Party/FatFs/src/ff.c **** 
2437:Middlewares/Third_Party/FatFs/src/ff.c **** 
2438:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 1 || _FS_RPATH >= 2
2439:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2440:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get file information from directory entry                             */
2441:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2442:Middlewares/Third_Party/FatFs/src/ff.c **** 
2443:Middlewares/Third_Party/FatFs/src/ff.c **** static
2444:Middlewares/Third_Party/FatFs/src/ff.c **** void get_fileinfo (		/* No return code */
2445:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,			/* Pointer to the directory object */
2446:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO* fno	 	/* Pointer to the file information to be filled */
2447:Middlewares/Third_Party/FatFs/src/ff.c **** )
2448:Middlewares/Third_Party/FatFs/src/ff.c **** {
 1002              		.loc 1 2448 0
 1003              		.cfi_startproc
 1004              		@ args = 0, pretend = 0, frame = 0
 1005              		@ frame_needed = 0, uses_anonymous_args = 0
 1006              	.LVL123:
2449:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, j;
2450:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR c;
2451:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD tm;
2452:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
2453:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR w, lfv;
2454:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = dp->obj.fs;
2455:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2456:Middlewares/Third_Party/FatFs/src/ff.c **** 
2457:Middlewares/Third_Party/FatFs/src/ff.c **** 
2458:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->fname[0] = 0;		/* Invaidate file info */
 1007              		.loc 1 2458 0
 1008 0000 0023     		movs	r3, #0
 1009 0002 4B72     		strb	r3, [r1, #9]
2459:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!dp->sect) return;	/* Exit if read pointer has reached end of directory */
 1010              		.loc 1 2459 0
 1011 0004 C369     		ldr	r3, [r0, #28]
 1012 0006 73B3     		cbz	r3, .L107
2448:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, j;
ARM GAS  /tmp/ccwdO2Zj.s 			page 62


 1013              		.loc 1 2448 0
 1014 0008 70B5     		push	{r4, r5, r6, lr}
 1015              	.LCFI14:
 1016              		.cfi_def_cfa_offset 16
 1017              		.cfi_offset 4, -16
 1018              		.cfi_offset 5, -12
 1019              		.cfi_offset 6, -8
 1020              		.cfi_offset 14, -4
2460:Middlewares/Third_Party/FatFs/src/ff.c **** 
2461:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
2462:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
2463:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
2464:Middlewares/Third_Party/FatFs/src/ff.c **** 		get_xdir_info(fs->dirbuf, fno);
2465:Middlewares/Third_Party/FatFs/src/ff.c **** 		return;
2466:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else
2467:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2468:Middlewares/Third_Party/FatFs/src/ff.c **** 	{	/* On the FAT12/16/32 volume */
2469:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (dp->blk_ofs != 0xFFFFFFFF) {	/* Get LFN if available */
2470:Middlewares/Third_Party/FatFs/src/ff.c **** 			i = j = 0;
2471:Middlewares/Third_Party/FatFs/src/ff.c **** 			while ((w = fs->lfnbuf[j++]) != 0) {	/* Get an LFN character */
2472:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_LFN_UNICODE
2473:Middlewares/Third_Party/FatFs/src/ff.c **** 				w = ff_convert(w, 0);		/* Unicode -> OEM */
2474:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (w == 0) { i = 0; break; }	/* No LFN if it could not be converted */
2475:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (_DF1S && w >= 0x100) {	/* Put 1st byte if it is a DBC (always false at SBCS cfg) */
2476:Middlewares/Third_Party/FatFs/src/ff.c **** 					fno->fname[i++] = (char)(w >> 8);
2477:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2478:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2479:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (i >= _MAX_LFN) { i = 0; break; }	/* No LFN if buffer overflow */
2480:Middlewares/Third_Party/FatFs/src/ff.c **** 				fno->fname[i++] = (TCHAR)w;
2481:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2482:Middlewares/Third_Party/FatFs/src/ff.c **** 			fno->fname[i] = 0;	/* Terminate the LFN */
2483:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2484:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2485:Middlewares/Third_Party/FatFs/src/ff.c **** 
2486:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = j = 0;
2487:Middlewares/Third_Party/FatFs/src/ff.c **** 	lfv = fno->fname[i];	/* LFN is exist if non-zero */
2488:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (i < 11) {		/* Copy name body and extension */
2489:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = (TCHAR)dp->dir[i++];
2490:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == ' ') continue;				/* Skip padding spaces */
2491:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == RDDEM) c = (TCHAR)DDEM;	/* Restore replaced DDEM character */
2492:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == 9) {						/* Insert a . if extension is exist */
2493:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!lfv) fno->fname[j] = '.';
2494:Middlewares/Third_Party/FatFs/src/ff.c **** 			fno->altname[j++] = '.';
2495:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2496:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE
2497:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (IsDBCS1(c) && i != 8 && i != 11 && IsDBCS2(dp->dir[i])) {
2498:Middlewares/Third_Party/FatFs/src/ff.c **** 			c = c << 8 | dp->dir[i++];
2499:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2500:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = ff_convert(c, 1);	/* OEM -> Unicode */
2501:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!c) c = '?';
2502:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2503:Middlewares/Third_Party/FatFs/src/ff.c **** 		fno->altname[j] = c;
2504:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!lfv) {
2505:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (IsUpper(c) && (dp->dir[DIR_NTres] & ((i >= 9) ? NS_EXT : NS_BODY))) {
2506:Middlewares/Third_Party/FatFs/src/ff.c **** 				c += 0x20;			/* To lower */
2507:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2508:Middlewares/Third_Party/FatFs/src/ff.c **** 			fno->fname[j] = c;
ARM GAS  /tmp/ccwdO2Zj.s 			page 63


2509:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2510:Middlewares/Third_Party/FatFs/src/ff.c **** 		j++;
2511:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2512:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!lfv) {
2513:Middlewares/Third_Party/FatFs/src/ff.c **** 		fno->fname[j] = 0;
2514:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!dp->dir[DIR_NTres]) j = 0;	/* Altname is no longer needed if neither LFN nor case info is ex
2515:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2516:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->altname[j] = 0;	/* Terminate the SFN */
2517:Middlewares/Third_Party/FatFs/src/ff.c **** 
2518:Middlewares/Third_Party/FatFs/src/ff.c **** #else	/* Non-LFN configuration */
2519:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = j = 0;
 1021              		.loc 1 2519 0
 1022 000a 0022     		movs	r2, #0
 1023 000c 1346     		mov	r3, r2
 1024 000e 05E0     		b	.L100
 1025              	.LVL124:
 1026              	.L102:
2520:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (i < 11) {		/* Copy name body and extension */
2521:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = (TCHAR)dp->dir[i++];
2522:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == ' ') continue;				/* Skip padding spaces */
2523:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == RDDEM) c = (TCHAR)DDEM;	/* Restore replaced DDEM character */
2524:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == 9) fno->fname[j++] = '.';	/* Insert a . if extension is exist */
 1027              		.loc 1 2524 0
 1028 0010 092C     		cmp	r4, #9
 1029 0012 0ED0     		beq	.L110
 1030              	.L103:
 1031              	.LVL125:
2525:Middlewares/Third_Party/FatFs/src/ff.c **** 		fno->fname[j++] = c;
 1032              		.loc 1 2525 0
 1033 0014 8D18     		adds	r5, r1, r2
 1034 0016 6B72     		strb	r3, [r5, #9]
 1035 0018 0132     		adds	r2, r2, #1
 1036              	.LVL126:
 1037              	.L101:
 1038 001a 2346     		mov	r3, r4
 1039              	.LVL127:
 1040              	.L100:
2520:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (i < 11) {		/* Copy name body and extension */
 1041              		.loc 1 2520 0
 1042 001c 0A2B     		cmp	r3, #10
 1043 001e 0DD8     		bhi	.L111
2521:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == ' ') continue;				/* Skip padding spaces */
 1044              		.loc 1 2521 0
 1045 0020 056A     		ldr	r5, [r0, #32]
 1046 0022 5C1C     		adds	r4, r3, #1
 1047              	.LVL128:
 1048 0024 EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 1049              	.LVL129:
2522:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == RDDEM) c = (TCHAR)DDEM;	/* Restore replaced DDEM character */
 1050              		.loc 1 2522 0
 1051 0026 202B     		cmp	r3, #32
 1052 0028 F7D0     		beq	.L101
2523:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == 9) fno->fname[j++] = '.';	/* Insert a . if extension is exist */
 1053              		.loc 1 2523 0
 1054 002a 052B     		cmp	r3, #5
 1055 002c F0D1     		bne	.L102
 1056 002e E523     		movs	r3, #229
ARM GAS  /tmp/ccwdO2Zj.s 			page 64


 1057              	.LVL130:
 1058 0030 EEE7     		b	.L102
 1059              	.LVL131:
 1060              	.L110:
2524:Middlewares/Third_Party/FatFs/src/ff.c **** 		fno->fname[j++] = c;
 1061              		.loc 1 2524 0 discriminator 1
 1062 0032 8D18     		adds	r5, r1, r2
 1063 0034 2E26     		movs	r6, #46
 1064 0036 6E72     		strb	r6, [r5, #9]
 1065 0038 0132     		adds	r2, r2, #1
 1066              	.LVL132:
 1067 003a EBE7     		b	.L103
 1068              	.LVL133:
 1069              	.L111:
 1070 003c 0D46     		mov	r5, r1
 1071 003e 0446     		mov	r4, r0
2526:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2527:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->fname[j] = 0;
 1072              		.loc 1 2527 0
 1073 0040 0A44     		add	r2, r2, r1
 1074              	.LVL134:
 1075 0042 0023     		movs	r3, #0
 1076              	.LVL135:
 1077 0044 5372     		strb	r3, [r2, #9]
2528:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2529:Middlewares/Third_Party/FatFs/src/ff.c **** 
2530:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->fattrib = dp->dir[DIR_Attr];				/* Attribute */
 1078              		.loc 1 2530 0
 1079 0046 036A     		ldr	r3, [r0, #32]
 1080 0048 DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 1081 004a 0B72     		strb	r3, [r1, #8]
2531:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->fsize = ld_dword(dp->dir + DIR_FileSize);	/* Size */
 1082              		.loc 1 2531 0
 1083 004c 006A     		ldr	r0, [r0, #32]
 1084              	.LVL136:
 1085 004e 1C30     		adds	r0, r0, #28
 1086 0050 FFF7FEFF 		bl	ld_dword
 1087              	.LVL137:
 1088 0054 2860     		str	r0, [r5]
2532:Middlewares/Third_Party/FatFs/src/ff.c **** 	tm = ld_dword(dp->dir + DIR_ModTime);			/* Timestamp */
 1089              		.loc 1 2532 0
 1090 0056 206A     		ldr	r0, [r4, #32]
 1091 0058 1630     		adds	r0, r0, #22
 1092 005a FFF7FEFF 		bl	ld_dword
 1093              	.LVL138:
2533:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->ftime = (WORD)tm; fno->fdate = (WORD)(tm >> 16);
 1094              		.loc 1 2533 0
 1095 005e E880     		strh	r0, [r5, #6]	@ movhi
 1096 0060 000C     		lsrs	r0, r0, #16
 1097              	.LVL139:
 1098 0062 A880     		strh	r0, [r5, #4]	@ movhi
2534:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1099              		.loc 1 2534 0
 1100 0064 70BD     		pop	{r4, r5, r6, pc}
 1101              	.LVL140:
 1102              	.L107:
 1103              	.LCFI15:
ARM GAS  /tmp/ccwdO2Zj.s 			page 65


 1104              		.cfi_def_cfa_offset 0
 1105              		.cfi_restore 4
 1106              		.cfi_restore 5
 1107              		.cfi_restore 6
 1108              		.cfi_restore 14
 1109 0066 7047     		bx	lr
 1110              		.cfi_endproc
 1111              	.LFE179:
 1113              		.section	.text.create_name,"ax",%progbits
 1114              		.align	1
 1115              		.syntax unified
 1116              		.thumb
 1117              		.thumb_func
 1118              		.fpu fpv5-sp-d16
 1120              	create_name:
 1121              	.LFB180:
2535:Middlewares/Third_Party/FatFs/src/ff.c **** 
2536:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _FS_MINIMIZE <= 1 || _FS_RPATH >= 2 */
2537:Middlewares/Third_Party/FatFs/src/ff.c **** 
2538:Middlewares/Third_Party/FatFs/src/ff.c **** 
2539:Middlewares/Third_Party/FatFs/src/ff.c **** 
2540:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FIND && _FS_MINIMIZE <= 1
2541:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2542:Middlewares/Third_Party/FatFs/src/ff.c **** /* Pattern matching                                                      */
2543:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2544:Middlewares/Third_Party/FatFs/src/ff.c **** 
2545:Middlewares/Third_Party/FatFs/src/ff.c **** static
2546:Middlewares/Third_Party/FatFs/src/ff.c **** WCHAR get_achar (		/* Get a character and advances ptr 1 or 2 */
2547:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR** ptr	/* Pointer to pointer to the SBCS/DBCS/Unicode string */
2548:Middlewares/Third_Party/FatFs/src/ff.c **** )
2549:Middlewares/Third_Party/FatFs/src/ff.c **** {
2550:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_LFN_UNICODE
2551:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR chr;
2552:Middlewares/Third_Party/FatFs/src/ff.c **** 
2553:Middlewares/Third_Party/FatFs/src/ff.c **** 	chr = (BYTE)*(*ptr)++;					/* Get a byte */
2554:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (IsLower(chr)) chr -= 0x20;			/* To upper ASCII char */
2555:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _EXCVT
2556:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (chr >= 0x80) chr = ExCvt[chr - 0x80];	/* To upper SBCS extended char */
2557:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2558:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (IsDBCS1(chr) && IsDBCS2(**ptr)) {		/* Get DBC 2nd byte if needed */
2559:Middlewares/Third_Party/FatFs/src/ff.c **** 		chr = chr << 8 | (BYTE)*(*ptr)++;
2560:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2561:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2562:Middlewares/Third_Party/FatFs/src/ff.c **** 	return chr;
2563:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2564:Middlewares/Third_Party/FatFs/src/ff.c **** 	return ff_wtoupper(*(*ptr)++);			/* Get a word and to upper */
2565:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2566:Middlewares/Third_Party/FatFs/src/ff.c **** }
2567:Middlewares/Third_Party/FatFs/src/ff.c **** 
2568:Middlewares/Third_Party/FatFs/src/ff.c **** 
2569:Middlewares/Third_Party/FatFs/src/ff.c **** static
2570:Middlewares/Third_Party/FatFs/src/ff.c **** int pattern_matching (	/* 0:not matched, 1:matched */
2571:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* pat,	/* Matching pattern */
2572:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* nam,	/* String to be tested */
2573:Middlewares/Third_Party/FatFs/src/ff.c **** 	int skip,			/* Number of pre-skip chars (number of ?s) */
2574:Middlewares/Third_Party/FatFs/src/ff.c **** 	int inf				/* Infinite search (* specified) */
2575:Middlewares/Third_Party/FatFs/src/ff.c **** )
ARM GAS  /tmp/ccwdO2Zj.s 			page 66


2576:Middlewares/Third_Party/FatFs/src/ff.c **** {
2577:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR *pp, *np;
2578:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR pc, nc;
2579:Middlewares/Third_Party/FatFs/src/ff.c **** 	int nm, nx;
2580:Middlewares/Third_Party/FatFs/src/ff.c **** 
2581:Middlewares/Third_Party/FatFs/src/ff.c **** 
2582:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (skip--) {				/* Pre-skip name chars */
2583:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!get_achar(&nam)) return 0;	/* Branch mismatched if less name chars */
2584:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2585:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!*pat && inf) return 1;		/* (short circuit) */
2586:Middlewares/Third_Party/FatFs/src/ff.c **** 
2587:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
2588:Middlewares/Third_Party/FatFs/src/ff.c **** 		pp = pat; np = nam;			/* Top of pattern and name to match */
2589:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (;;) {
2590:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (*pp == '?' || *pp == '*') {	/* Wildcard? */
2591:Middlewares/Third_Party/FatFs/src/ff.c **** 				nm = nx = 0;
2592:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {				/* Analyze the wildcard chars */
2593:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (*pp++ == '?') nm++; else nx = 1;
2594:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (*pp == '?' || *pp == '*');
2595:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (pattern_matching(pp, np, nm, nx)) return 1;	/* Test new branch (recurs upto number of wildc
2596:Middlewares/Third_Party/FatFs/src/ff.c **** 				nc = *np; break;	/* Branch mismatched */
2597:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2598:Middlewares/Third_Party/FatFs/src/ff.c **** 			pc = get_achar(&pp);	/* Get a pattern char */
2599:Middlewares/Third_Party/FatFs/src/ff.c **** 			nc = get_achar(&np);	/* Get a name char */
2600:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (pc != nc) break;	/* Branch mismatched? */
2601:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (pc == 0) return 1;	/* Branch matched? (matched at end of both strings) */
2602:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2603:Middlewares/Third_Party/FatFs/src/ff.c **** 		get_achar(&nam);			/* nam++ */
2604:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (inf && nc);			/* Retry until end of name if infinite search is specified */
2605:Middlewares/Third_Party/FatFs/src/ff.c **** 
2606:Middlewares/Third_Party/FatFs/src/ff.c **** 	return 0;
2607:Middlewares/Third_Party/FatFs/src/ff.c **** }
2608:Middlewares/Third_Party/FatFs/src/ff.c **** 
2609:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _USE_FIND && _FS_MINIMIZE <= 1 */
2610:Middlewares/Third_Party/FatFs/src/ff.c **** 
2611:Middlewares/Third_Party/FatFs/src/ff.c **** 
2612:Middlewares/Third_Party/FatFs/src/ff.c **** 
2613:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2614:Middlewares/Third_Party/FatFs/src/ff.c **** /* Pick a top segment and create the object name in directory form       */
2615:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2616:Middlewares/Third_Party/FatFs/src/ff.c **** 
2617:Middlewares/Third_Party/FatFs/src/ff.c **** static
2618:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT create_name (	/* FR_OK: successful, FR_INVALID_NAME: could not create */
2619:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,			/* Pointer to the directory object */
2620:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR** path	/* Pointer to pointer to the segment in the path string */
2621:Middlewares/Third_Party/FatFs/src/ff.c **** )
2622:Middlewares/Third_Party/FatFs/src/ff.c **** {
 1122              		.loc 1 2622 0
 1123              		.cfi_startproc
 1124              		@ args = 0, pretend = 0, frame = 0
 1125              		@ frame_needed = 0, uses_anonymous_args = 0
 1126              	.LVL141:
 1127 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1128              	.LCFI16:
 1129              		.cfi_def_cfa_offset 40
 1130              		.cfi_offset 3, -40
 1131              		.cfi_offset 4, -36
ARM GAS  /tmp/ccwdO2Zj.s 			page 67


 1132              		.cfi_offset 5, -32
 1133              		.cfi_offset 6, -28
 1134              		.cfi_offset 7, -24
 1135              		.cfi_offset 8, -20
 1136              		.cfi_offset 9, -16
 1137              		.cfi_offset 10, -12
 1138              		.cfi_offset 11, -8
 1139              		.cfi_offset 14, -4
 1140 0004 8246     		mov	r10, r0
 1141 0006 8B46     		mov	fp, r1
2623:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
2624:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE b, cf;
2625:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR w, *lfn;
2626:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, ni, si, di;
2627:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR *p;
2628:Middlewares/Third_Party/FatFs/src/ff.c **** 
2629:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create LFN in Unicode */
2630:Middlewares/Third_Party/FatFs/src/ff.c **** 	p = *path; lfn = dp->obj.fs->lfnbuf; si = di = 0;
2631:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
2632:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = p[si++];					/* Get a character */
2633:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w < ' ') break;				/* Break if end of the path name */
2634:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w == '/' || w == '\\') {	/* Break if a separator is found */
2635:Middlewares/Third_Party/FatFs/src/ff.c **** 			while (p[si] == '/' || p[si] == '\\') si++;	/* Skip duplicated separator if exist */
2636:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
2637:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2638:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (di >= _MAX_LFN) return FR_INVALID_NAME;	/* Reject too long name */
2639:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_LFN_UNICODE
2640:Middlewares/Third_Party/FatFs/src/ff.c **** 		w &= 0xFF;
2641:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (IsDBCS1(w)) {				/* Check if it is a DBC 1st byte (always false on SBCS cfg) */
2642:Middlewares/Third_Party/FatFs/src/ff.c **** 			b = (BYTE)p[si++];			/* Get 2nd byte */
2643:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = (w << 8) + b;			/* Create a DBC */
2644:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!IsDBCS2(b)) return FR_INVALID_NAME;	/* Reject invalid sequence */
2645:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2646:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = ff_convert(w, 1);			/* Convert ANSI/OEM to Unicode */
2647:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!w) return FR_INVALID_NAME;	/* Reject invalid code */
2648:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2649:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w < 0x80 && chk_chr("\"*:<>\?|\x7F", w)) return FR_INVALID_NAME;	/* Reject illegal characters
2650:Middlewares/Third_Party/FatFs/src/ff.c **** 		lfn[di++] = w;					/* Store the Unicode character */
2651:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2652:Middlewares/Third_Party/FatFs/src/ff.c **** 	*path = &p[si];						/* Return pointer to the next segment */
2653:Middlewares/Third_Party/FatFs/src/ff.c **** 	cf = (w < ' ') ? NS_LAST : 0;		/* Set last segment flag if end of the path */
2654:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0
2655:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((di == 1 && lfn[di - 1] == '.') ||
2656:Middlewares/Third_Party/FatFs/src/ff.c **** 		(di == 2 && lfn[di - 1] == '.' && lfn[di - 2] == '.')) {	/* Is this segment a dot name? */
2657:Middlewares/Third_Party/FatFs/src/ff.c **** 		lfn[di] = 0;
2658:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; i < 11; i++)		/* Create dot name for SFN entry */
2659:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->fn[i] = (i < di) ? '.' : ' ';
2660:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->fn[i] = cf | NS_DOT;		/* This is a dot entry */
2661:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_OK;
2662:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2663:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2664:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (di) {						/* Snip off trailing spaces and dots if exist */
2665:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = lfn[di - 1];
2666:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w != ' ' && w != '.') break;
2667:Middlewares/Third_Party/FatFs/src/ff.c **** 		di--;
2668:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2669:Middlewares/Third_Party/FatFs/src/ff.c **** 	lfn[di] = 0;						/* LFN is created */
ARM GAS  /tmp/ccwdO2Zj.s 			page 68


2670:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (di == 0) return FR_INVALID_NAME;	/* Reject nul name */
2671:Middlewares/Third_Party/FatFs/src/ff.c **** 
2672:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create SFN in directory form */
2673:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_set(dp->fn, ' ', 11);
2674:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (si = 0; lfn[si] == ' ' || lfn[si] == '.'; si++) ;	/* Strip leading spaces and dots */
2675:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (si) cf |= NS_LOSS | NS_LFN;
2676:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (di && lfn[di - 1] != '.') di--;	/* Find extension (di<=si: no extension) */
2677:Middlewares/Third_Party/FatFs/src/ff.c **** 
2678:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = b = 0; ni = 8;
2679:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
2680:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = lfn[si++];					/* Get an LFN character */
2681:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!w) break;					/* Break on end of the LFN */
2682:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w == ' ' || (w == '.' && si != di)) {	/* Remove spaces and dots */
2683:Middlewares/Third_Party/FatFs/src/ff.c **** 			cf |= NS_LOSS | NS_LFN; continue;
2684:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2685:Middlewares/Third_Party/FatFs/src/ff.c **** 
2686:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i >= ni || si == di) {		/* Extension or end of SFN */
2687:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ni == 11) {				/* Long extension */
2688:Middlewares/Third_Party/FatFs/src/ff.c **** 				cf |= NS_LOSS | NS_LFN; break;
2689:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2690:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (si != di) cf |= NS_LOSS | NS_LFN;	/* Out of 8.3 format */
2691:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (si > di) break;			/* No extension */
2692:Middlewares/Third_Party/FatFs/src/ff.c **** 			si = di; i = 8; ni = 11;	/* Enter extension section */
2693:Middlewares/Third_Party/FatFs/src/ff.c **** 			b <<= 2; continue;
2694:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2695:Middlewares/Third_Party/FatFs/src/ff.c **** 
2696:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w >= 0x80) {				/* Non ASCII character */
2697:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _EXCVT
2698:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = ff_convert(w, 0);		/* Unicode -> OEM code */
2699:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (w) w = ExCvt[w - 0x80];	/* Convert extended character to upper (SBCS) */
2700:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2701:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = ff_convert(ff_wtoupper(w), 0);	/* Upper converted Unicode -> OEM code */
2702:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2703:Middlewares/Third_Party/FatFs/src/ff.c **** 			cf |= NS_LFN;				/* Force create LFN entry */
2704:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2705:Middlewares/Third_Party/FatFs/src/ff.c **** 
2706:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_DF1S && w >= 0x100) {		/* Is this DBC? (always false at SBCS cfg) */
2707:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i >= ni - 1) {
2708:Middlewares/Third_Party/FatFs/src/ff.c **** 				cf |= NS_LOSS | NS_LFN; i = ni; continue;
2709:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2710:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->fn[i++] = (BYTE)(w >> 8);
2711:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {						/* SBC */
2712:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!w || chk_chr("+,;=[]", w)) {	/* Replace illegal characters for SFN */
2713:Middlewares/Third_Party/FatFs/src/ff.c **** 				w = '_'; cf |= NS_LOSS | NS_LFN;/* Lossy conversion */
2714:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
2715:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (IsUpper(w)) {		/* ASCII large capital */
2716:Middlewares/Third_Party/FatFs/src/ff.c **** 					b |= 2;
2717:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
2718:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (IsLower(w)) {	/* ASCII small capital */
2719:Middlewares/Third_Party/FatFs/src/ff.c **** 						b |= 1; w -= 0x20;
2720:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
2721:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2722:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2723:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2724:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->fn[i++] = (BYTE)w;
2725:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2726:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/ccwdO2Zj.s 			page 69


2727:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (dp->fn[0] == DDEM) dp->fn[0] = RDDEM;	/* If the first character collides with DDEM, replace it
2728:Middlewares/Third_Party/FatFs/src/ff.c **** 
2729:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (ni == 8) b <<= 2;
2730:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((b & 0x0C) == 0x0C || (b & 0x03) == 0x03) cf |= NS_LFN;	/* Create LFN entry when there are com
2731:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(cf & NS_LFN)) {						/* When LFN is in 8.3 format without extended character, NT flags are c
2732:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((b & 0x03) == 0x01) cf |= NS_EXT;	/* NT flag (Extension has only small capital) */
2733:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((b & 0x0C) == 0x04) cf |= NS_BODY;	/* NT flag (Filename has only small capital) */
2734:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2735:Middlewares/Third_Party/FatFs/src/ff.c **** 
2736:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->fn[NSFLAG] = cf;	/* SFN is created */
2737:Middlewares/Third_Party/FatFs/src/ff.c **** 
2738:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
2739:Middlewares/Third_Party/FatFs/src/ff.c **** 
2740:Middlewares/Third_Party/FatFs/src/ff.c **** 
2741:Middlewares/Third_Party/FatFs/src/ff.c **** #else	/* _USE_LFN != 0 : Non-LFN configuration */
2742:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE c, d, *sfn;
2743:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT ni, si, i;
2744:Middlewares/Third_Party/FatFs/src/ff.c **** 	const char *p;
2745:Middlewares/Third_Party/FatFs/src/ff.c **** 
2746:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create file name in directory form */
2747:Middlewares/Third_Party/FatFs/src/ff.c **** 	p = *path; sfn = dp->fn;
 1142              		.loc 1 2747 0
 1143 0008 D1F80080 		ldr	r8, [r1]
 1144              	.LVL142:
 1145 000c 00F12409 		add	r9, r0, #36
 1146              	.LVL143:
2748:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_set(sfn, ' ', 11);
 1147              		.loc 1 2748 0
 1148 0010 0B22     		movs	r2, #11
 1149 0012 2021     		movs	r1, #32
 1150              	.LVL144:
 1151 0014 4846     		mov	r0, r9
 1152              	.LVL145:
 1153 0016 FFF7FEFF 		bl	mem_set
 1154              	.LVL146:
2749:Middlewares/Third_Party/FatFs/src/ff.c **** 	si = i = 0; ni = 8;
 1155              		.loc 1 2749 0
 1156 001a 0025     		movs	r5, #0
 1157 001c 2B46     		mov	r3, r5
 1158 001e 0827     		movs	r7, #8
 1159 0020 29E0     		b	.L113
 1160              	.LVL147:
 1161              	.L117:
2750:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0
2751:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (p[si] == '.') { /* Is this a dot entry? */
2752:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (;;) {
2753:Middlewares/Third_Party/FatFs/src/ff.c **** 			c = (BYTE)p[si++];
2754:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c != '.' || si >= 3) break;
2755:Middlewares/Third_Party/FatFs/src/ff.c **** 			sfn[i++] = c;
2756:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2757:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c != '/' && c != '\\' && c > ' ') return FR_INVALID_NAME;
2758:Middlewares/Third_Party/FatFs/src/ff.c **** 		*path = p + si;								/* Return pointer to the next segment */
2759:Middlewares/Third_Party/FatFs/src/ff.c **** 		sfn[NSFLAG] = (c <= ' ') ? NS_LAST | NS_DOT : NS_DOT;	/* Set last segment flag if end of the path
2760:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_OK;
2761:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2762:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2763:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
ARM GAS  /tmp/ccwdO2Zj.s 			page 70


2764:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = (BYTE)p[si++];
2765:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c <= ' ') break; 			/* Break if end of the path name */
2766:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == '/' || c == '\\') {	/* Break if a separator is found */
2767:Middlewares/Third_Party/FatFs/src/ff.c **** 			while (p[si] == '/' || p[si] == '\\') si++;	/* Skip duplicated separator if exist */
 1162              		.loc 1 2767 0 discriminator 2
 1163 0022 0136     		adds	r6, r6, #1
 1164              	.LVL148:
 1165              	.L115:
 1166              		.loc 1 2767 0 is_stmt 0 discriminator 1
 1167 0024 18F80630 		ldrb	r3, [r8, r6]	@ zero_extendqisi2
 1168 0028 5C2B     		cmp	r3, #92
 1169 002a 18BF     		it	ne
 1170 002c 2F2B     		cmpne	r3, #47
 1171 002e F8D0     		beq	.L117
 1172              	.L114:
2768:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
2769:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2770:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == '.' || i >= ni) {		/* End of body or over size? */
2771:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ni == 11 || c != '.') return FR_INVALID_NAME;	/* Over size or invalid dot */
2772:Middlewares/Third_Party/FatFs/src/ff.c **** 			i = 8; ni = 11;				/* Goto extension */
2773:Middlewares/Third_Party/FatFs/src/ff.c **** 			continue;
2774:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2775:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c >= 0x80) {				/* Extended character? */
2776:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _EXCVT
2777:Middlewares/Third_Party/FatFs/src/ff.c **** 			c = ExCvt[c - 0x80];		/* To upper extended characters (SBCS cfg) */
2778:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2779:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_DF1S
2780:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_INVALID_NAME;		/* Reject extended characters (ASCII only cfg) */
2781:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2782:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2783:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2784:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (IsDBCS1(c)) {				/* Check if it is a DBC 1st byte (always false at SBCS cfg.) */
2785:Middlewares/Third_Party/FatFs/src/ff.c **** 			d = (BYTE)p[si++];			/* Get 2nd byte */
2786:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!IsDBCS2(d) || i >= ni - 1) return FR_INVALID_NAME;	/* Reject invalid DBC */
2787:Middlewares/Third_Party/FatFs/src/ff.c **** 			sfn[i++] = c;
2788:Middlewares/Third_Party/FatFs/src/ff.c **** 			sfn[i++] = d;
2789:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {						/* SBC */
2790:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (chk_chr("\"*+,:;<=>\?[]|\x7F", c)) return FR_INVALID_NAME;	/* Reject illegal chrs for SFN */
2791:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (IsLower(c)) c -= 0x20;	/* To upper */
2792:Middlewares/Third_Party/FatFs/src/ff.c **** 			sfn[i++] = c;
2793:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2794:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2795:Middlewares/Third_Party/FatFs/src/ff.c **** 	*path = p + si;						/* Return pointer to the next segment */
 1173              		.loc 1 2795 0 is_stmt 1
 1174 0030 4644     		add	r6, r6, r8
 1175              	.LVL149:
 1176 0032 CBF80060 		str	r6, [fp]
2796:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (i == 0) return FR_INVALID_NAME;	/* Reject nul string */
 1177              		.loc 1 2796 0
 1178 0036 002D     		cmp	r5, #0
 1179 0038 45D0     		beq	.L127
2797:Middlewares/Third_Party/FatFs/src/ff.c **** 
2798:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (sfn[0] == DDEM) sfn[0] = RDDEM;	/* If the first character collides with DDEM, replace it with 
 1180              		.loc 1 2798 0
 1181 003a 9AF82430 		ldrb	r3, [r10, #36]	@ zero_extendqisi2
 1182 003e E52B     		cmp	r3, #229
 1183 0040 36D0     		beq	.L131
ARM GAS  /tmp/ccwdO2Zj.s 			page 71


 1184              	.L123:
2799:Middlewares/Third_Party/FatFs/src/ff.c **** 	sfn[NSFLAG] = (c <= ' ') ? NS_LAST : 0;		/* Set last segment flag if end of the path */
 1185              		.loc 1 2799 0
 1186 0042 202C     		cmp	r4, #32
 1187 0044 38D8     		bhi	.L128
 1188 0046 0423     		movs	r3, #4
 1189              	.L124:
 1190              		.loc 1 2799 0 is_stmt 0 discriminator 4
 1191 0048 8AF82F30 		strb	r3, [r10, #47]
2800:Middlewares/Third_Party/FatFs/src/ff.c **** 
2801:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
 1192              		.loc 1 2801 0 is_stmt 1 discriminator 4
 1193 004c 0020     		movs	r0, #0
 1194 004e 36E0     		b	.L119
 1195              	.LVL150:
 1196              	.L118:
2775:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _EXCVT
 1197              		.loc 1 2775 0
 1198 0050 14F0800F 		tst	r4, #128
 1199 0054 28D1     		bne	.L132
 1200              	.L121:
2790:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (IsLower(c)) c -= 0x20;	/* To upper */
 1201              		.loc 1 2790 0
 1202 0056 2146     		mov	r1, r4
 1203 0058 1C48     		ldr	r0, .L133
 1204 005a FFF7FEFF 		bl	chk_chr
 1205              	.LVL151:
 1206 005e 80BB     		cbnz	r0, .L126
2791:Middlewares/Third_Party/FatFs/src/ff.c **** 			sfn[i++] = c;
 1207              		.loc 1 2791 0
 1208 0060 A4F16103 		sub	r3, r4, #97
 1209 0064 DBB2     		uxtb	r3, r3
 1210 0066 192B     		cmp	r3, #25
 1211 0068 01D8     		bhi	.L122
2791:Middlewares/Third_Party/FatFs/src/ff.c **** 			sfn[i++] = c;
 1212              		.loc 1 2791 0 is_stmt 0 discriminator 1
 1213 006a 203C     		subs	r4, r4, #32
 1214              	.LVL152:
 1215 006c E4B2     		uxtb	r4, r4
 1216              	.LVL153:
 1217              	.L122:
2792:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 1218              		.loc 1 2792 0 is_stmt 1
 1219 006e 09F80540 		strb	r4, [r9, r5]
 1220 0072 0135     		adds	r5, r5, #1
 1221              	.LVL154:
 1222              	.L120:
 1223 0074 3346     		mov	r3, r6
 1224              	.LVL155:
 1225              	.L113:
2764:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c <= ' ') break; 			/* Break if end of the path name */
 1226              		.loc 1 2764 0
 1227 0076 5E1C     		adds	r6, r3, #1
 1228              	.LVL156:
 1229 0078 18F80340 		ldrb	r4, [r8, r3]	@ zero_extendqisi2
 1230              	.LVL157:
2765:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == '/' || c == '\\') {	/* Break if a separator is found */
ARM GAS  /tmp/ccwdO2Zj.s 			page 72


 1231              		.loc 1 2765 0
 1232 007c 202C     		cmp	r4, #32
 1233 007e D7D9     		bls	.L114
2766:Middlewares/Third_Party/FatFs/src/ff.c **** 			while (p[si] == '/' || p[si] == '\\') si++;	/* Skip duplicated separator if exist */
 1234              		.loc 1 2766 0
 1235 0080 5C2C     		cmp	r4, #92
 1236 0082 18BF     		it	ne
 1237 0084 2F2C     		cmpne	r4, #47
 1238 0086 CDD0     		beq	.L115
2770:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ni == 11 || c != '.') return FR_INVALID_NAME;	/* Over size or invalid dot */
 1239              		.loc 1 2770 0
 1240 0088 2E2C     		cmp	r4, #46
 1241 008a 18BF     		it	ne
 1242 008c AF42     		cmpne	r7, r5
 1243 008e DFD8     		bhi	.L118
2771:Middlewares/Third_Party/FatFs/src/ff.c **** 			i = 8; ni = 11;				/* Goto extension */
 1244              		.loc 1 2771 0
 1245 0090 2E3C     		subs	r4, r4, #46
 1246              	.LVL158:
 1247 0092 18BF     		it	ne
 1248 0094 0124     		movne	r4, #1
 1249              	.LVL159:
 1250 0096 0B2F     		cmp	r7, #11
 1251 0098 14BF     		ite	ne
 1252 009a 2746     		movne	r7, r4
 1253 009c 44F00107 		orreq	r7, r4, #1
 1254              	.LVL160:
 1255 00a0 67B9     		cbnz	r7, .L125
2772:Middlewares/Third_Party/FatFs/src/ff.c **** 			continue;
 1256              		.loc 1 2772 0
 1257 00a2 0825     		movs	r5, #8
 1258              	.LVL161:
 1259 00a4 0B27     		movs	r7, #11
 1260 00a6 E5E7     		b	.L120
 1261              	.LVL162:
 1262              	.L132:
2777:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 1263              		.loc 1 2777 0
 1264 00a8 803C     		subs	r4, r4, #128
 1265              	.LVL163:
 1266 00aa 094B     		ldr	r3, .L133+4
 1267 00ac 1C5D     		ldrb	r4, [r3, r4]	@ zero_extendqisi2
 1268              	.LVL164:
 1269 00ae D2E7     		b	.L121
 1270              	.LVL165:
 1271              	.L131:
2798:Middlewares/Third_Party/FatFs/src/ff.c **** 	sfn[NSFLAG] = (c <= ' ') ? NS_LAST : 0;		/* Set last segment flag if end of the path */
 1272              		.loc 1 2798 0 discriminator 1
 1273 00b0 0523     		movs	r3, #5
 1274 00b2 8AF82430 		strb	r3, [r10, #36]
 1275 00b6 C4E7     		b	.L123
 1276              	.L128:
2799:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1277              		.loc 1 2799 0
 1278 00b8 0023     		movs	r3, #0
 1279 00ba C5E7     		b	.L124
 1280              	.LVL166:
ARM GAS  /tmp/ccwdO2Zj.s 			page 73


 1281              	.L125:
2771:Middlewares/Third_Party/FatFs/src/ff.c **** 			i = 8; ni = 11;				/* Goto extension */
 1282              		.loc 1 2771 0
 1283 00bc 0620     		movs	r0, #6
 1284              	.LVL167:
 1285              	.L119:
2802:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _USE_LFN != 0 */
2803:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1286              		.loc 1 2803 0
 1287 00be BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1288              	.LVL168:
 1289              	.L126:
2790:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (IsLower(c)) c -= 0x20;	/* To upper */
 1290              		.loc 1 2790 0
 1291 00c2 0620     		movs	r0, #6
 1292 00c4 FBE7     		b	.L119
 1293              	.LVL169:
 1294              	.L127:
2796:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1295              		.loc 1 2796 0
 1296 00c6 0620     		movs	r0, #6
 1297 00c8 F9E7     		b	.L119
 1298              	.L134:
 1299 00ca 00BF     		.align	2
 1300              	.L133:
 1301 00cc 00000000 		.word	.LC0
 1302 00d0 00000000 		.word	.LANCHOR1
 1303              		.cfi_endproc
 1304              	.LFE180:
 1306              		.section	.text.get_ldnumber,"ax",%progbits
 1307              		.align	1
 1308              		.syntax unified
 1309              		.thumb
 1310              		.thumb_func
 1311              		.fpu fpv5-sp-d16
 1313              	get_ldnumber:
 1314              	.LFB182:
2804:Middlewares/Third_Party/FatFs/src/ff.c **** 
2805:Middlewares/Third_Party/FatFs/src/ff.c **** 
2806:Middlewares/Third_Party/FatFs/src/ff.c **** 
2807:Middlewares/Third_Party/FatFs/src/ff.c **** 
2808:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2809:Middlewares/Third_Party/FatFs/src/ff.c **** /* Follow a file path                                                    */
2810:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2811:Middlewares/Third_Party/FatFs/src/ff.c **** 
2812:Middlewares/Third_Party/FatFs/src/ff.c **** static
2813:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT follow_path (	/* FR_OK(0): successful, !=0: error code */
2814:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,			/* Directory object to return last directory and found object */
2815:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path	/* Full-path string to find a file or directory */
2816:Middlewares/Third_Party/FatFs/src/ff.c **** )
2817:Middlewares/Third_Party/FatFs/src/ff.c **** {
2818:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2819:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE ns;
2820:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID *obj = &dp->obj;
2821:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = obj->fs;
2822:Middlewares/Third_Party/FatFs/src/ff.c **** 
2823:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/ccwdO2Zj.s 			page 74


2824:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0
2825:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (*path != '/' && *path != '\\') {	/* Without heading separator */
2826:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->sclust = fs->cdir;				/* Start from current directory */
2827:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else
2828:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2829:Middlewares/Third_Party/FatFs/src/ff.c **** 	{										/* With heading separator */
2830:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (*path == '/' || *path == '\\') path++;	/* Strip heading separator */
2831:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->sclust = 0;					/* Start from root directory */
2832:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2833:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
2834:Middlewares/Third_Party/FatFs/src/ff.c **** 	obj->n_frag = 0;	/* Invalidate last fragment counter of the object */
2835:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0
2836:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_EXFAT && obj->sclust) {	/* Retrieve the sub-directory status if needed */
2837:Middlewares/Third_Party/FatFs/src/ff.c **** 		DIR dj;
2838:Middlewares/Third_Party/FatFs/src/ff.c **** 
2839:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->c_scl = fs->cdc_scl;
2840:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->c_size = fs->cdc_size;
2841:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->c_ofs = fs->cdc_ofs;
2842:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = load_obj_dir(&dj, obj);
2843:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) return res;
2844:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->objsize = ld_dword(fs->dirbuf + XDIR_FileSize);
2845:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->stat = fs->dirbuf[XDIR_GenFlags] & 2;
2846:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2847:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2848:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2849:Middlewares/Third_Party/FatFs/src/ff.c **** 
2850:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((UINT)*path < ' ') {				/* Null path name is the origin directory itself */
2851:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->fn[NSFLAG] = NS_NONAME;
2852:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_sdi(dp, 0);
2853:Middlewares/Third_Party/FatFs/src/ff.c **** 
2854:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {								/* Follow path */
2855:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (;;) {
2856:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = create_name(dp, &path);	/* Get a segment name of the path */
2857:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
2858:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_find(dp);				/* Find an object with the segment name */
2859:Middlewares/Third_Party/FatFs/src/ff.c **** 			ns = dp->fn[NSFLAG];
2860:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) {				/* Failed to find the object */
2861:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) {	/* Object is not found */
2862:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (_FS_RPATH && (ns & NS_DOT)) {	/* If dot entry is not exist, stay there */
2863:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (!(ns & NS_LAST)) continue;	/* Continue to follow if not last segment */
2864:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->fn[NSFLAG] = NS_NONAME;
2865:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_OK;
2866:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else {							/* Could not find the object */
2867:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (!(ns & NS_LAST)) res = FR_NO_PATH;	/* Adjust error code if not last segment */
2868:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
2869:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2870:Middlewares/Third_Party/FatFs/src/ff.c **** 				break;
2871:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2872:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ns & NS_LAST) break;			/* Last segment matched. Function completed. */
2873:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Get into the sub-directory */
2874:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!(obj->attr & AM_DIR)) {		/* It is not a sub-directory and cannot follow */
2875:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_NO_PATH; break;
2876:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2877:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
2878:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_EXFAT) {		/* Save containing directory information for next dir */
2879:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->c_scl = obj->sclust;
2880:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->c_size = ((DWORD)obj->objsize & 0xFFFFFF00) | obj->stat;
ARM GAS  /tmp/ccwdO2Zj.s 			page 75


2881:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->c_ofs = dp->blk_ofs;
2882:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->sclust = ld_dword(fs->dirbuf + XDIR_FstClus);	/* Open next directory */
2883:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->stat = fs->dirbuf[XDIR_GenFlags] & 2;
2884:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->objsize = ld_qword(fs->dirbuf + XDIR_FileSize);
2885:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else
2886:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2887:Middlewares/Third_Party/FatFs/src/ff.c **** 			{
2888:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->sclust = ld_clust(fs, fs->win + dp->dptr % SS(fs));	/* Open next directory */
2889:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2890:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2891:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2892:Middlewares/Third_Party/FatFs/src/ff.c **** 
2893:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
2894:Middlewares/Third_Party/FatFs/src/ff.c **** }
2895:Middlewares/Third_Party/FatFs/src/ff.c **** 
2896:Middlewares/Third_Party/FatFs/src/ff.c **** 
2897:Middlewares/Third_Party/FatFs/src/ff.c **** 
2898:Middlewares/Third_Party/FatFs/src/ff.c **** 
2899:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2900:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get logical drive number from path name                               */
2901:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2902:Middlewares/Third_Party/FatFs/src/ff.c **** 
2903:Middlewares/Third_Party/FatFs/src/ff.c **** static
2904:Middlewares/Third_Party/FatFs/src/ff.c **** int get_ldnumber (		/* Returns logical drive number (-1:invalid drive) */
2905:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR** path	/* Pointer to pointer to the path name */
2906:Middlewares/Third_Party/FatFs/src/ff.c **** )
2907:Middlewares/Third_Party/FatFs/src/ff.c **** {
 1315              		.loc 1 2907 0
 1316              		.cfi_startproc
 1317              		@ args = 0, pretend = 0, frame = 0
 1318              		@ frame_needed = 0, uses_anonymous_args = 0
 1319              		@ link register save eliminated.
 1320              	.LVL170:
2908:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR *tp, *tt;
2909:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
2910:Middlewares/Third_Party/FatFs/src/ff.c **** 	int vol = -1;
2911:Middlewares/Third_Party/FatFs/src/ff.c **** #if _STR_VOLUME_ID		/* Find string drive id */
2912:Middlewares/Third_Party/FatFs/src/ff.c **** 	static const char* const volid[] = {_VOLUME_STRS};
2913:Middlewares/Third_Party/FatFs/src/ff.c **** 	const char *sp;
2914:Middlewares/Third_Party/FatFs/src/ff.c **** 	char c;
2915:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR tc;
2916:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2917:Middlewares/Third_Party/FatFs/src/ff.c **** 
2918:Middlewares/Third_Party/FatFs/src/ff.c **** 
2919:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (*path) {	/* If the pointer is not a null */
 1321              		.loc 1 2919 0
 1322 0000 0168     		ldr	r1, [r0]
 1323 0002 09B1     		cbz	r1, .L147
2920:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (tt = *path; (UINT)*tt >= (_USE_LFN ? ' ' : '!') && *tt != ':'; tt++) ;	/* Find ':' in the pa
 1324              		.loc 1 2920 0
 1325 0004 0A46     		mov	r2, r1
 1326 0006 03E0     		b	.L136
 1327              	.L147:
2910:Middlewares/Third_Party/FatFs/src/ff.c **** #if _STR_VOLUME_ID		/* Find string drive id */
 1328              		.loc 1 2910 0
 1329 0008 4FF0FF33 		mov	r3, #-1
 1330 000c 08E0     		b	.L144
ARM GAS  /tmp/ccwdO2Zj.s 			page 76


 1331              	.LVL171:
 1332              	.L138:
 1333              		.loc 1 2920 0 discriminator 3
 1334 000e 0132     		adds	r2, r2, #1
 1335              	.LVL172:
 1336              	.L136:
 1337              		.loc 1 2920 0 is_stmt 0 discriminator 1
 1338 0010 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1339 0012 3A2B     		cmp	r3, #58
 1340 0014 18BF     		it	ne
 1341 0016 202B     		cmpne	r3, #32
 1342 0018 F9D8     		bhi	.L138
2921:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (*tt == ':') {	/* If a ':' is exist in the path name */
 1343              		.loc 1 2921 0 is_stmt 1
 1344 001a 3A2B     		cmp	r3, #58
 1345 001c 02D0     		beq	.L148
2922:Middlewares/Third_Party/FatFs/src/ff.c **** 			tp = *path;
2923:Middlewares/Third_Party/FatFs/src/ff.c **** 			i = *tp++ - '0';
2924:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i < 10 && tp == tt) {	/* Is there a numeric drive id? */
2925:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (i < _VOLUMES) {	/* If a drive id is found, get the value and strip it */
2926:Middlewares/Third_Party/FatFs/src/ff.c **** 					vol = (int)i;
2927:Middlewares/Third_Party/FatFs/src/ff.c **** 					*path = ++tt;
2928:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2929:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2930:Middlewares/Third_Party/FatFs/src/ff.c **** #if _STR_VOLUME_ID
2931:Middlewares/Third_Party/FatFs/src/ff.c **** 			 else {	/* No numeric drive number, find string drive id */
2932:Middlewares/Third_Party/FatFs/src/ff.c **** 				i = 0; tt++;
2933:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {
2934:Middlewares/Third_Party/FatFs/src/ff.c **** 					sp = volid[i]; tp = *path;
2935:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {	/* Compare a string drive id with path name */
2936:Middlewares/Third_Party/FatFs/src/ff.c **** 						c = *sp++; tc = *tp++;
2937:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (IsLower(tc)) tc -= 0x20;
2938:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (c && (TCHAR)c == tc);
2939:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while ((c || tp != tt) && ++i < _VOLUMES);	/* Repeat for each id until pattern match */
2940:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (i < _VOLUMES) {	/* If a drive id is found, get the value and strip it */
2941:Middlewares/Third_Party/FatFs/src/ff.c **** 					vol = (int)i;
2942:Middlewares/Third_Party/FatFs/src/ff.c **** 					*path = tt;
2943:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2944:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2945:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2946:Middlewares/Third_Party/FatFs/src/ff.c **** 			return vol;
2947:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2948:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0 && _VOLUMES >= 2
2949:Middlewares/Third_Party/FatFs/src/ff.c **** 		vol = CurrVol;	/* Current drive */
2950:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2951:Middlewares/Third_Party/FatFs/src/ff.c **** 		vol = 0;		/* Drive 0 */
 1346              		.loc 1 2951 0
 1347 001e 0023     		movs	r3, #0
 1348              	.LVL173:
 1349              	.L144:
2952:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2953:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2954:Middlewares/Third_Party/FatFs/src/ff.c **** 	return vol;
2955:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1350              		.loc 1 2955 0
 1351 0020 1846     		mov	r0, r3
 1352              	.LVL174:
ARM GAS  /tmp/ccwdO2Zj.s 			page 77


 1353 0022 7047     		bx	lr
 1354              	.LVL175:
 1355              	.L148:
2907:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR *tp, *tt;
 1356              		.loc 1 2907 0
 1357 0024 10B4     		push	{r4}
 1358              	.LCFI17:
 1359              		.cfi_def_cfa_offset 4
 1360              		.cfi_offset 4, -4
 1361              	.LVL176:
2923:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i < 10 && tp == tt) {	/* Is there a numeric drive id? */
 1362              		.loc 1 2923 0
 1363 0026 4C1C     		adds	r4, r1, #1
 1364              	.LVL177:
 1365 0028 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 1366 002a 303B     		subs	r3, r3, #48
 1367              	.LVL178:
2924:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (i < _VOLUMES) {	/* If a drive id is found, get the value and strip it */
 1368              		.loc 1 2924 0
 1369 002c 092B     		cmp	r3, #9
 1370 002e 98BF     		it	ls
 1371 0030 A242     		cmpls	r2, r4
 1372 0032 06D1     		bne	.L141
2925:Middlewares/Third_Party/FatFs/src/ff.c **** 					vol = (int)i;
 1373              		.loc 1 2925 0
 1374 0034 43B9     		cbnz	r3, .L142
 1375              	.LVL179:
2927:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 1376              		.loc 1 2927 0
 1377 0036 0132     		adds	r2, r2, #1
 1378              	.LVL180:
 1379 0038 0260     		str	r2, [r0]
 1380              	.LVL181:
 1381              	.L135:
 1382              		.loc 1 2955 0
 1383 003a 1846     		mov	r0, r3
 1384              	.LVL182:
 1385 003c 5DF8044B 		ldr	r4, [sp], #4
 1386              	.LCFI18:
 1387              		.cfi_remember_state
 1388              		.cfi_restore 4
 1389              		.cfi_def_cfa_offset 0
 1390              	.LVL183:
 1391 0040 7047     		bx	lr
 1392              	.LVL184:
 1393              	.L141:
 1394              	.LCFI19:
 1395              		.cfi_restore_state
2910:Middlewares/Third_Party/FatFs/src/ff.c **** #if _STR_VOLUME_ID		/* Find string drive id */
 1396              		.loc 1 2910 0
 1397 0042 4FF0FF33 		mov	r3, #-1
 1398              	.LVL185:
 1399 0046 F8E7     		b	.L135
 1400              	.LVL186:
 1401              	.L142:
 1402 0048 4FF0FF33 		mov	r3, #-1
 1403              	.LVL187:
ARM GAS  /tmp/ccwdO2Zj.s 			page 78


 1404 004c F5E7     		b	.L135
 1405              		.cfi_endproc
 1406              	.LFE182:
 1408              		.section	.text.putc_init,"ax",%progbits
 1409              		.align	1
 1410              		.syntax unified
 1411              		.thumb
 1412              		.thumb_func
 1413              		.fpu fpv5-sp-d16
 1415              	putc_init:
 1416              	.LFB206:
2956:Middlewares/Third_Party/FatFs/src/ff.c **** 
2957:Middlewares/Third_Party/FatFs/src/ff.c **** 
2958:Middlewares/Third_Party/FatFs/src/ff.c **** 
2959:Middlewares/Third_Party/FatFs/src/ff.c **** 
2960:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2961:Middlewares/Third_Party/FatFs/src/ff.c **** /* Load a sector and check if it is an FAT boot sector                   */
2962:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2963:Middlewares/Third_Party/FatFs/src/ff.c **** 
2964:Middlewares/Third_Party/FatFs/src/ff.c **** static
2965:Middlewares/Third_Party/FatFs/src/ff.c **** BYTE check_fs (	/* 0:FAT, 1:exFAT, 2:Valid BS but not FAT, 3:Not a BS, 4:Disk error */
2966:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,	/* File system object */
2967:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD sect	/* Sector# (lba) to load and check if it is an FAT-VBR or not */
2968:Middlewares/Third_Party/FatFs/src/ff.c **** )
2969:Middlewares/Third_Party/FatFs/src/ff.c **** {
2970:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->wflag = 0; fs->winsect = 0xFFFFFFFF;		/* Invaidate window */
2971:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (move_window(fs, sect) != FR_OK) return 4;	/* Load boot record */
2972:Middlewares/Third_Party/FatFs/src/ff.c **** 
2973:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (ld_word(fs->win + BS_55AA) != 0xAA55) return 3;	/* Check boot record signature (always placed 
2974:Middlewares/Third_Party/FatFs/src/ff.c **** 
2975:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->win[BS_JmpBoot] == 0xE9 || (fs->win[BS_JmpBoot] == 0xEB && fs->win[BS_JmpBoot + 2] == 0x90
2976:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((ld_dword(fs->win + BS_FilSysType) & 0xFFFFFF) == 0x544146) return 0;	/* Check "FAT" string *
2977:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ld_dword(fs->win + BS_FilSysType32) == 0x33544146) return 0;			/* Check "FAT3" string */
2978:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2979:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
2980:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!mem_cmp(fs->win + BS_JmpBoot, "\xEB\x76\x90" "EXFAT   ", 11)) return 1;
2981:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2982:Middlewares/Third_Party/FatFs/src/ff.c **** 	return 2;
2983:Middlewares/Third_Party/FatFs/src/ff.c **** }
2984:Middlewares/Third_Party/FatFs/src/ff.c **** 
2985:Middlewares/Third_Party/FatFs/src/ff.c **** 
2986:Middlewares/Third_Party/FatFs/src/ff.c **** 
2987:Middlewares/Third_Party/FatFs/src/ff.c **** 
2988:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2989:Middlewares/Third_Party/FatFs/src/ff.c **** /* Find logical drive and check if the volume is mounted                 */
2990:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2991:Middlewares/Third_Party/FatFs/src/ff.c **** 
2992:Middlewares/Third_Party/FatFs/src/ff.c **** static
2993:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT find_volume (	/* FR_OK(0): successful, !=0: any error occurred */
2994:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR** path,	/* Pointer to pointer to the path name (drive number) */
2995:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS** rfs,		/* Pointer to pointer to the found file system object */
2996:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE mode			/* !=0: Check write protection for write access */
2997:Middlewares/Third_Party/FatFs/src/ff.c **** )
2998:Middlewares/Third_Party/FatFs/src/ff.c **** {
2999:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE fmt, *pt;
3000:Middlewares/Third_Party/FatFs/src/ff.c **** 	int vol;
3001:Middlewares/Third_Party/FatFs/src/ff.c **** 	DSTATUS stat;
ARM GAS  /tmp/ccwdO2Zj.s 			page 79


3002:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD bsect, fasize, tsect, sysect, nclst, szbfat, br[4];
3003:Middlewares/Third_Party/FatFs/src/ff.c **** 	WORD nrsv;
3004:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
3005:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
3006:Middlewares/Third_Party/FatFs/src/ff.c **** 
3007:Middlewares/Third_Party/FatFs/src/ff.c **** 
3008:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number */
3009:Middlewares/Third_Party/FatFs/src/ff.c **** 	*rfs = 0;
3010:Middlewares/Third_Party/FatFs/src/ff.c **** 	vol = get_ldnumber(path);
3011:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
3012:Middlewares/Third_Party/FatFs/src/ff.c **** 
3013:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Check if the file system object is valid or not */
3014:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs = FatFs[vol];					/* Get pointer to the file system object */
3015:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!fs) return FR_NOT_ENABLED;		/* Is the file system object available? */
3016:Middlewares/Third_Party/FatFs/src/ff.c **** 
3017:Middlewares/Third_Party/FatFs/src/ff.c **** 	ENTER_FF(fs);						/* Lock the volume */
3018:Middlewares/Third_Party/FatFs/src/ff.c **** 	*rfs = fs;							/* Return pointer to the file system object */
3019:Middlewares/Third_Party/FatFs/src/ff.c **** 
3020:Middlewares/Third_Party/FatFs/src/ff.c **** 	mode &= (BYTE)~FA_READ;				/* Desired access mode, write access or not */
3021:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type) {					/* If the volume has been mounted */
3022:Middlewares/Third_Party/FatFs/src/ff.c **** 		stat = disk_status(fs->drv);
3023:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!(stat & STA_NOINIT)) {		/* and the physical drive is kept initialized */
3024:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!_FS_READONLY && mode && (stat & STA_PROTECT)) {	/* Check write protection if needed */
3025:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_WRITE_PROTECTED;
3026:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3027:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_OK;				/* The file system object is valid */
3028:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3029:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3030:Middlewares/Third_Party/FatFs/src/ff.c **** 
3031:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* The file system object is not valid. */
3032:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Following code attempts to mount the volume. (analyze BPB and initialize the fs object) */
3033:Middlewares/Third_Party/FatFs/src/ff.c **** 
3034:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->fs_type = 0;					/* Clear the file system object */
3035:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->drv = LD2PD(vol);				/* Bind the logical drive and a physical drive */
3036:Middlewares/Third_Party/FatFs/src/ff.c **** 	stat = disk_initialize(fs->drv);	/* Initialize the physical drive */
3037:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_NOINIT) { 			/* Check if the initialization succeeded */
3038:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_NOT_READY;			/* Failed to initialize due to no medium or hard error */
3039:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3040:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!_FS_READONLY && mode && (stat & STA_PROTECT)) { /* Check disk write protection if needed */
3041:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_WRITE_PROTECTED;
3042:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3043:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS != _MIN_SS					/* Get sector size (multiple sector size cfg only) */
3044:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_ioctl(fs->drv, GET_SECTOR_SIZE, &SS(fs)) != RES_OK) return FR_DISK_ERR;
3045:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (SS(fs) > _MAX_SS || SS(fs) < _MIN_SS || (SS(fs) & (SS(fs) - 1))) return FR_DISK_ERR;
3046:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3047:Middlewares/Third_Party/FatFs/src/ff.c **** 
3048:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Find an FAT partition on the drive. Supports only generic partitioning rules, FDISK and SFD. */
3049:Middlewares/Third_Party/FatFs/src/ff.c **** 	bsect = 0;
3050:Middlewares/Third_Party/FatFs/src/ff.c **** 	fmt = check_fs(fs, bsect);			/* Load sector 0 and check if it is an FAT-VBR as SFD */
3051:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == 2 || (fmt < 2 && LD2PT(vol) != 0)) {	/* Not an FAT-VBR or forced partition number */
3052:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; i < 4; i++) {		/* Get partition offset */
3053:Middlewares/Third_Party/FatFs/src/ff.c **** 			pt = fs->win + (MBR_Table + i * SZ_PTE);
3054:Middlewares/Third_Party/FatFs/src/ff.c **** 			br[i] = pt[PTE_System] ? ld_dword(pt + PTE_StLba) : 0;
3055:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3056:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = LD2PT(vol);					/* Partition number: 0:auto, 1-4:forced */
3057:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i) i--;
3058:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {							/* Find an FAT volume */
ARM GAS  /tmp/ccwdO2Zj.s 			page 80


3059:Middlewares/Third_Party/FatFs/src/ff.c **** 			bsect = br[i];
3060:Middlewares/Third_Party/FatFs/src/ff.c **** 			fmt = bsect ? check_fs(fs, bsect) : 3;	/* Check the partition */
3061:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (LD2PT(vol) == 0 && fmt >= 2 && ++i < 4);
3062:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3063:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == 4) return FR_DISK_ERR;		/* An error occured in the disk I/O layer */
3064:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt >= 2) return FR_NO_FILESYSTEM;	/* No FAT volume is found */
3065:Middlewares/Third_Party/FatFs/src/ff.c **** 
3066:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* An FAT volume is found (bsect). Following code initializes the file system object */
3067:Middlewares/Third_Party/FatFs/src/ff.c **** 
3068:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
3069:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == 1) {
3070:Middlewares/Third_Party/FatFs/src/ff.c **** 		QWORD maxlba;
3071:Middlewares/Third_Party/FatFs/src/ff.c **** 
3072:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = BPB_ZeroedEx; i < BPB_ZeroedEx + 53 && fs->win[i] == 0; i++) ;	/* Check zero filler */
3073:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i < BPB_ZeroedEx + 53) return FR_NO_FILESYSTEM;
3074:Middlewares/Third_Party/FatFs/src/ff.c **** 
3075:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ld_word(fs->win + BPB_FSVerEx) != 0x100) return FR_NO_FILESYSTEM;	/* Check exFAT revision (Mu
3076:Middlewares/Third_Party/FatFs/src/ff.c **** 
3077:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (1 << fs->win[BPB_BytsPerSecEx] != SS(fs)) {	/* (BPB_BytsPerSecEx must be equal to the physica
3078:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_NO_FILESYSTEM;
3079:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3080:Middlewares/Third_Party/FatFs/src/ff.c **** 
3081:Middlewares/Third_Party/FatFs/src/ff.c **** 		maxlba = ld_qword(fs->win + BPB_TotSecEx) + bsect;	/* Last LBA + 1 of the volume */
3082:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (maxlba >= 0x100000000) return FR_NO_FILESYSTEM;	/* (It cannot be handled in 32-bit LBA) */
3083:Middlewares/Third_Party/FatFs/src/ff.c **** 
3084:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsize = ld_dword(fs->win + BPB_FatSzEx);	/* Number of sectors per FAT */
3085:Middlewares/Third_Party/FatFs/src/ff.c **** 
3086:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->n_fats = fs->win[BPB_NumFATsEx];			/* Number of FATs */
3087:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->n_fats != 1) return FR_NO_FILESYSTEM;	/* (Supports only 1 FAT) */
3088:Middlewares/Third_Party/FatFs/src/ff.c **** 
3089:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->csize = 1 << fs->win[BPB_SecPerClusEx];		/* Cluster size */
3090:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->csize == 0)	return FR_NO_FILESYSTEM;	/* (Must be 1..32768) */
3091:Middlewares/Third_Party/FatFs/src/ff.c **** 
3092:Middlewares/Third_Party/FatFs/src/ff.c **** 		nclst = ld_dword(fs->win + BPB_NumClusEx);		/* Number of clusters */
3093:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nclst > MAX_EXFAT) return FR_NO_FILESYSTEM;	/* (Too many clusters) */
3094:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->n_fatent = nclst + 2;
3095:Middlewares/Third_Party/FatFs/src/ff.c **** 
3096:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Boundaries and Limits */
3097:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->volbase = bsect;
3098:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->database = bsect + ld_dword(fs->win + BPB_DataOfsEx);
3099:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fatbase = bsect + ld_dword(fs->win + BPB_FatOfsEx);
3100:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (maxlba < (QWORD)fs->database + nclst * fs->csize) return FR_NO_FILESYSTEM;	/* (Volume size mu
3101:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->dirbase = ld_dword(fs->win + BPB_RootClusEx);
3102:Middlewares/Third_Party/FatFs/src/ff.c **** 
3103:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Check if bitmap location is in assumption (at the first cluster) */
3104:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (move_window(fs, clust2sect(fs, fs->dirbase)) != FR_OK) return FR_DISK_ERR;
3105:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; i < SS(fs); i += SZDIRE) {
3106:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->win[i] == 0x81 && ld_dword(fs->win + i + 20) == 2) break;	/* 81 entry with cluster #2? *
3107:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3108:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == SS(fs)) return FR_NO_FILESYSTEM;
3109:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3110:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->last_clst = fs->free_clst = 0xFFFFFFFF;		/* Initialize cluster allocation information */
3111:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3112:Middlewares/Third_Party/FatFs/src/ff.c **** 		fmt = FS_EXFAT;			/* FAT sub-type */
3113:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else
3114:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _FS_EXFAT */
3115:Middlewares/Third_Party/FatFs/src/ff.c **** 	{
ARM GAS  /tmp/ccwdO2Zj.s 			page 81


3116:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ld_word(fs->win + BPB_BytsPerSec) != SS(fs)) return FR_NO_FILESYSTEM;	/* (BPB_BytsPerSec must
3117:Middlewares/Third_Party/FatFs/src/ff.c **** 
3118:Middlewares/Third_Party/FatFs/src/ff.c **** 		fasize = ld_word(fs->win + BPB_FATSz16);		/* Number of sectors per FAT */
3119:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fasize == 0) fasize = ld_dword(fs->win + BPB_FATSz32);
3120:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsize = fasize;
3121:Middlewares/Third_Party/FatFs/src/ff.c **** 
3122:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->n_fats = fs->win[BPB_NumFATs];				/* Number of FATs */
3123:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->n_fats != 1 && fs->n_fats != 2) return FR_NO_FILESYSTEM;	/* (Must be 1 or 2) */
3124:Middlewares/Third_Party/FatFs/src/ff.c **** 		fasize *= fs->n_fats;							/* Number of sectors for FAT area */
3125:Middlewares/Third_Party/FatFs/src/ff.c **** 
3126:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->csize = fs->win[BPB_SecPerClus];			/* Cluster size */
3127:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->csize == 0 || (fs->csize & (fs->csize - 1))) return FR_NO_FILESYSTEM;	/* (Must be power o
3128:Middlewares/Third_Party/FatFs/src/ff.c **** 
3129:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->n_rootdir = ld_word(fs->win + BPB_RootEntCnt);	/* Number of root directory entries */
3130:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->n_rootdir % (SS(fs) / SZDIRE)) return FR_NO_FILESYSTEM;	/* (Must be sector aligned) */
3131:Middlewares/Third_Party/FatFs/src/ff.c **** 
3132:Middlewares/Third_Party/FatFs/src/ff.c **** 		tsect = ld_word(fs->win + BPB_TotSec16);		/* Number of sectors on the volume */
3133:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (tsect == 0) tsect = ld_dword(fs->win + BPB_TotSec32);
3134:Middlewares/Third_Party/FatFs/src/ff.c **** 
3135:Middlewares/Third_Party/FatFs/src/ff.c **** 		nrsv = ld_word(fs->win + BPB_RsvdSecCnt);		/* Number of reserved sectors */
3136:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nrsv == 0) return FR_NO_FILESYSTEM;			/* (Must not be 0) */
3137:Middlewares/Third_Party/FatFs/src/ff.c **** 
3138:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Determine the FAT sub type */
3139:Middlewares/Third_Party/FatFs/src/ff.c **** 		sysect = nrsv + fasize + fs->n_rootdir / (SS(fs) / SZDIRE);	/* RSV + FAT + DIR */
3140:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (tsect < sysect) return FR_NO_FILESYSTEM;	/* (Invalid volume size) */
3141:Middlewares/Third_Party/FatFs/src/ff.c **** 		nclst = (tsect - sysect) / fs->csize;			/* Number of clusters */
3142:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nclst == 0) return FR_NO_FILESYSTEM;		/* (Invalid volume size) */
3143:Middlewares/Third_Party/FatFs/src/ff.c **** 		fmt = FS_FAT32;
3144:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nclst <= MAX_FAT16) fmt = FS_FAT16;
3145:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nclst <= MAX_FAT12) fmt = FS_FAT12;
3146:Middlewares/Third_Party/FatFs/src/ff.c **** 
3147:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Boundaries and Limits */
3148:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->n_fatent = nclst + 2;						/* Number of FAT entries */
3149:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->volbase = bsect;							/* Volume start sector */
3150:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fatbase = bsect + nrsv; 					/* FAT start sector */
3151:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->database = bsect + sysect;					/* Data start sector */
3152:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fmt == FS_FAT32) {
3153:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ld_word(fs->win + BPB_FSVer32) != 0) return FR_NO_FILESYSTEM;	/* (Must be FAT32 revision 0.0
3154:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->n_rootdir) return FR_NO_FILESYSTEM;	/* (BPB_RootEntCnt must be 0) */
3155:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->dirbase = ld_dword(fs->win + BPB_RootClus32);	/* Root directory start cluster */
3156:Middlewares/Third_Party/FatFs/src/ff.c **** 			szbfat = fs->n_fatent * 4;					/* (Needed FAT size) */
3157:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
3158:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->n_rootdir == 0)	return FR_NO_FILESYSTEM;/* (BPB_RootEntCnt must not be 0) */
3159:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->dirbase = fs->fatbase + fasize;			/* Root directory start sector */
3160:Middlewares/Third_Party/FatFs/src/ff.c **** 			szbfat = (fmt == FS_FAT16) ?				/* (Needed FAT size) */
3161:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->n_fatent * 2 : fs->n_fatent * 3 / 2 + (fs->n_fatent & 1);
3162:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3163:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->fsize < (szbfat + (SS(fs) - 1)) / SS(fs)) return FR_NO_FILESYSTEM;	/* (BPB_FATSz must not
3164:Middlewares/Third_Party/FatFs/src/ff.c **** 
3165:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3166:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Get FSINFO if available */
3167:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->last_clst = fs->free_clst = 0xFFFFFFFF;		/* Initialize cluster allocation information */
3168:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsi_flag = 0x80;
3169:Middlewares/Third_Party/FatFs/src/ff.c **** #if (_FS_NOFSINFO & 3) != 3
3170:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fmt == FS_FAT32				/* Enable FSINFO only if FAT32 and BPB_FSInfo32 == 1 */
3171:Middlewares/Third_Party/FatFs/src/ff.c **** 			&& ld_word(fs->win + BPB_FSInfo32) == 1
3172:Middlewares/Third_Party/FatFs/src/ff.c **** 			&& move_window(fs, bsect + 1) == FR_OK)
ARM GAS  /tmp/ccwdO2Zj.s 			page 82


3173:Middlewares/Third_Party/FatFs/src/ff.c **** 		{
3174:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag = 0;
3175:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ld_word(fs->win + BS_55AA) == 0xAA55	/* Load FSINFO data if available */
3176:Middlewares/Third_Party/FatFs/src/ff.c **** 				&& ld_dword(fs->win + FSI_LeadSig) == 0x41615252
3177:Middlewares/Third_Party/FatFs/src/ff.c **** 				&& ld_dword(fs->win + FSI_StrucSig) == 0x61417272)
3178:Middlewares/Third_Party/FatFs/src/ff.c **** 			{
3179:Middlewares/Third_Party/FatFs/src/ff.c **** #if (_FS_NOFSINFO & 1) == 0
3180:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->free_clst = ld_dword(fs->win + FSI_Free_Count);
3181:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3182:Middlewares/Third_Party/FatFs/src/ff.c **** #if (_FS_NOFSINFO & 2) == 0
3183:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->last_clst = ld_dword(fs->win + FSI_Nxt_Free);
3184:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3185:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3186:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3187:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* (_FS_NOFSINFO & 3) != 3 */
3188:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* !_FS_READONLY */
3189:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3190:Middlewares/Third_Party/FatFs/src/ff.c **** 
3191:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->fs_type = fmt;		/* FAT sub-type */
3192:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->id = ++Fsid;		/* File system mount ID */
3193:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN == 1
3194:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->lfnbuf = LfnBuf;	/* Static LFN working buffer */
3195:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
3196:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->dirbuf = DirBuf;	/* Static directory block scratchpad buuffer */
3197:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3198:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3199:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0
3200:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->cdir = 0;			/* Initialize current directory */
3201:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3202:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0			/* Clear file lock semaphores */
3203:Middlewares/Third_Party/FatFs/src/ff.c **** 	clear_lock(fs);
3204:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3205:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
3206:Middlewares/Third_Party/FatFs/src/ff.c **** }
3207:Middlewares/Third_Party/FatFs/src/ff.c **** 
3208:Middlewares/Third_Party/FatFs/src/ff.c **** 
3209:Middlewares/Third_Party/FatFs/src/ff.c **** 
3210:Middlewares/Third_Party/FatFs/src/ff.c **** 
3211:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3212:Middlewares/Third_Party/FatFs/src/ff.c **** /* Check if the file/directory object is valid or not                    */
3213:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3214:Middlewares/Third_Party/FatFs/src/ff.c **** 
3215:Middlewares/Third_Party/FatFs/src/ff.c **** static
3216:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT validate (	/* Returns FR_OK or FR_INVALID_OBJECT */
3217:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID* obj,		/* Pointer to the _OBJ, the 1st member in the FIL/DIR object, to check validity */
3218:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS** fs		/* Pointer to pointer to the owner file system object to return */
3219:Middlewares/Third_Party/FatFs/src/ff.c **** )
3220:Middlewares/Third_Party/FatFs/src/ff.c **** {
3221:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_INVALID_OBJECT;
3222:Middlewares/Third_Party/FatFs/src/ff.c **** 
3223:Middlewares/Third_Party/FatFs/src/ff.c **** 
3224:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (obj && obj->fs && obj->fs->fs_type && obj->id == obj->fs->id) {	/* Test if the object is valid
3225:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
3226:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (lock_fs(obj->fs)) {	/* Obtain the filesystem object */
3227:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!(disk_status(obj->fs->drv) & STA_NOINIT)) { /* Test if the phsical drive is kept initialize
3228:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_OK;
3229:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
ARM GAS  /tmp/ccwdO2Zj.s 			page 83


3230:Middlewares/Third_Party/FatFs/src/ff.c **** 				unlock_fs(obj->fs, FR_OK);
3231:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3232:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
3233:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_TIMEOUT;
3234:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3235:Middlewares/Third_Party/FatFs/src/ff.c **** #else
3236:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!(disk_status(obj->fs->drv) & STA_NOINIT)) { /* Test if the phsical drive is kept initialized
3237:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_OK;
3238:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3239:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3240:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3241:Middlewares/Third_Party/FatFs/src/ff.c **** 	*fs = (res == FR_OK) ? obj->fs : 0;	/* Corresponding filesystem object */
3242:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
3243:Middlewares/Third_Party/FatFs/src/ff.c **** }
3244:Middlewares/Third_Party/FatFs/src/ff.c **** 
3245:Middlewares/Third_Party/FatFs/src/ff.c **** 
3246:Middlewares/Third_Party/FatFs/src/ff.c **** 
3247:Middlewares/Third_Party/FatFs/src/ff.c **** 
3248:Middlewares/Third_Party/FatFs/src/ff.c **** /*---------------------------------------------------------------------------
3249:Middlewares/Third_Party/FatFs/src/ff.c **** 
3250:Middlewares/Third_Party/FatFs/src/ff.c ****    Public Functions (FatFs API)
3251:Middlewares/Third_Party/FatFs/src/ff.c **** 
3252:Middlewares/Third_Party/FatFs/src/ff.c **** ----------------------------------------------------------------------------*/
3253:Middlewares/Third_Party/FatFs/src/ff.c **** 
3254:Middlewares/Third_Party/FatFs/src/ff.c **** 
3255:Middlewares/Third_Party/FatFs/src/ff.c **** 
3256:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3257:Middlewares/Third_Party/FatFs/src/ff.c **** /* Mount/Unmount a Logical Drive                                         */
3258:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3259:Middlewares/Third_Party/FatFs/src/ff.c **** 
3260:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_mount (
3261:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,			/* Pointer to the file system object (NULL:unmount)*/
3262:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Logical drive number to be mounted/unmounted */
3263:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE opt			/* Mode option 0:Do not mount (delayed mount), 1:Mount immediately */
3264:Middlewares/Third_Party/FatFs/src/ff.c **** )
3265:Middlewares/Third_Party/FatFs/src/ff.c **** {
3266:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *cfs;
3267:Middlewares/Third_Party/FatFs/src/ff.c **** 	int vol;
3268:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3269:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR *rp = path;
3270:Middlewares/Third_Party/FatFs/src/ff.c **** 
3271:Middlewares/Third_Party/FatFs/src/ff.c **** 
3272:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number */
3273:Middlewares/Third_Party/FatFs/src/ff.c **** 	vol = get_ldnumber(&rp);
3274:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
3275:Middlewares/Third_Party/FatFs/src/ff.c **** 	cfs = FatFs[vol];					/* Pointer to fs object */
3276:Middlewares/Third_Party/FatFs/src/ff.c **** 
3277:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (cfs) {
3278:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
3279:Middlewares/Third_Party/FatFs/src/ff.c **** 		clear_lock(cfs);
3280:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3281:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT						/* Discard sync object of the current volume */
3282:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!ff_del_syncobj(cfs->sobj)) return FR_INT_ERR;
3283:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3284:Middlewares/Third_Party/FatFs/src/ff.c **** 		cfs->fs_type = 0;				/* Clear old fs object */
3285:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3286:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/ccwdO2Zj.s 			page 84


3287:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs) {
3288:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fs_type = 0;				/* Clear new fs object */
3289:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT						/* Create sync object for the new volume */
3290:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!ff_cre_syncobj((BYTE)vol, &fs->sobj)) return FR_INT_ERR;
3291:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3292:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3293:Middlewares/Third_Party/FatFs/src/ff.c **** 	FatFs[vol] = fs;					/* Register new fs object */
3294:Middlewares/Third_Party/FatFs/src/ff.c **** 
3295:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!fs || opt != 1) return FR_OK;	/* Do not mount now, it will be mounted later */
3296:Middlewares/Third_Party/FatFs/src/ff.c **** 
3297:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, 0);	/* Force mounted the volume */
3298:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
3299:Middlewares/Third_Party/FatFs/src/ff.c **** }
3300:Middlewares/Third_Party/FatFs/src/ff.c **** 
3301:Middlewares/Third_Party/FatFs/src/ff.c **** 
3302:Middlewares/Third_Party/FatFs/src/ff.c **** 
3303:Middlewares/Third_Party/FatFs/src/ff.c **** 
3304:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3305:Middlewares/Third_Party/FatFs/src/ff.c **** /* Open or Create a File                                                 */
3306:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3307:Middlewares/Third_Party/FatFs/src/ff.c **** 
3308:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_open (
3309:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp,			/* Pointer to the blank file object */
3310:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Pointer to the file name */
3311:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE mode			/* Access mode and file open mode flags */
3312:Middlewares/Third_Party/FatFs/src/ff.c **** )
3313:Middlewares/Third_Party/FatFs/src/ff.c **** {
3314:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3315:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
3316:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
3317:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3318:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD dw, cl, bcs, clst, sc;
3319:Middlewares/Third_Party/FatFs/src/ff.c **** 	FSIZE_t ofs;
3320:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3321:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
3322:Middlewares/Third_Party/FatFs/src/ff.c **** 
3323:Middlewares/Third_Party/FatFs/src/ff.c **** 
3324:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!fp) return FR_INVALID_OBJECT;
3325:Middlewares/Third_Party/FatFs/src/ff.c **** 
3326:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
3327:Middlewares/Third_Party/FatFs/src/ff.c **** 	mode &= _FS_READONLY ? FA_READ : FA_READ | FA_WRITE | FA_CREATE_ALWAYS | FA_CREATE_NEW | FA_OPEN_A
3328:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, mode);
3329:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3330:Middlewares/Third_Party/FatFs/src/ff.c **** 		dj.obj.fs = fs;
3331:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
3332:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);	/* Follow the file path */
3333:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY	/* R/W configuration */
3334:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
3335:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {	/* Origin directory itself? */
3336:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;
3337:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3338:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
3339:Middlewares/Third_Party/FatFs/src/ff.c **** 			else {
3340:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = chk_lock(&dj, (mode & ~FA_READ) ? 1 : 0);
3341:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3342:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3343:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
ARM GAS  /tmp/ccwdO2Zj.s 			page 85


3344:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Create or Open a file */
3345:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (mode & (FA_CREATE_ALWAYS | FA_OPEN_ALWAYS | FA_CREATE_NEW)) {
3346:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) {					/* No file, create new */
3347:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) {		/* There is no file to open, create a new entry */
3348:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
3349:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = enq_lock() ? dir_register(&dj) : FR_TOO_MANY_OPEN_FILES;
3350:Middlewares/Third_Party/FatFs/src/ff.c **** #else
3351:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = dir_register(&dj);
3352:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3353:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3354:Middlewares/Third_Party/FatFs/src/ff.c **** 				mode |= FA_CREATE_ALWAYS;		/* File is created */
3355:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3356:Middlewares/Third_Party/FatFs/src/ff.c **** 			else {								/* Any object is already existing */
3357:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dj.obj.attr & (AM_RDO | AM_DIR)) {	/* Cannot overwrite it (R/O or DIR) */
3358:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_DENIED;
3359:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
3360:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (mode & FA_CREATE_NEW) res = FR_EXIST;	/* Cannot create as new file */
3361:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3362:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3363:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK && (mode & FA_CREATE_ALWAYS)) {	/* Truncate it if overwrite mode */
3364:Middlewares/Third_Party/FatFs/src/ff.c **** 				dw = GET_FATTIME();
3365:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
3366:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fs->fs_type == FS_EXFAT) {
3367:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Get current allocation info */
3368:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->obj.fs = fs;
3369:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->obj.sclust = ld_dword(fs->dirbuf + XDIR_FstClus);
3370:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->obj.objsize = ld_qword(fs->dirbuf + XDIR_FileSize);
3371:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->obj.stat = fs->dirbuf[XDIR_GenFlags] & 2;
3372:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->obj.n_frag = 0;
3373:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Initialize directory entry block */
3374:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(fs->dirbuf + XDIR_CrtTime, dw);	/* Set created time */
3375:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->dirbuf[XDIR_CrtTime10] = 0;
3376:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(fs->dirbuf + XDIR_ModTime, dw);	/* Set modified time */
3377:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->dirbuf[XDIR_ModTime10] = 0;
3378:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->dirbuf[XDIR_Attr] = AM_ARC;				/* Reset attribute */
3379:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(fs->dirbuf + XDIR_FstClus, 0);		/* Reset file allocation info */
3380:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_qword(fs->dirbuf + XDIR_FileSize, 0);
3381:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_qword(fs->dirbuf + XDIR_ValidFileSize, 0);
3382:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->dirbuf[XDIR_GenFlags] = 1;
3383:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = store_xdir(&dj);
3384:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK && fp->obj.sclust) {		/* Remove the cluster chain if exist */
3385:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = remove_chain(&fp->obj, fp->obj.sclust, 0);
3386:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->last_clst = fp->obj.sclust - 1;		/* Reuse the cluster hole */
3387:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3388:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else
3389:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3390:Middlewares/Third_Party/FatFs/src/ff.c **** 				{
3391:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Clean directory info */
3392:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dj.dir + DIR_CrtTime, dw);	/* Set created time */
3393:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dj.dir + DIR_ModTime, dw);	/* Set modified time */
3394:Middlewares/Third_Party/FatFs/src/ff.c **** 					dj.dir[DIR_Attr] = AM_ARC;			/* Reset attribute */
3395:Middlewares/Third_Party/FatFs/src/ff.c **** 					cl = ld_clust(fs, dj.dir);			/* Get cluster chain */
3396:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dj.dir, 0);			/* Reset file allocation info */
3397:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dj.dir + DIR_FileSize, 0);
3398:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 1;
3399:Middlewares/Third_Party/FatFs/src/ff.c **** 
3400:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (cl) {							/* Remove the cluster chain if exist */
ARM GAS  /tmp/ccwdO2Zj.s 			page 86


3401:Middlewares/Third_Party/FatFs/src/ff.c **** 						dw = fs->winsect;
3402:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = remove_chain(&dj.obj, cl, 0);
3403:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (res == FR_OK) {
3404:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = move_window(fs, dw);
3405:Middlewares/Third_Party/FatFs/src/ff.c **** 							fs->last_clst = cl - 1;		/* Reuse the cluster hole */
3406:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
3407:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3408:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3409:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3410:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3411:Middlewares/Third_Party/FatFs/src/ff.c **** 		else {	/* Open an existing file */
3412:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {					/* Following succeeded */
3413:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dj.obj.attr & AM_DIR) {		/* It is a directory */
3414:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_NO_FILE;
3415:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
3416:Middlewares/Third_Party/FatFs/src/ff.c **** 					if ((mode & FA_WRITE) && (dj.obj.attr & AM_RDO)) { /* R/O violation */
3417:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_DENIED;
3418:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3419:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3420:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3421:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3422:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
3423:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (mode & FA_CREATE_ALWAYS)		/* Set file change flag if created or overwritten */
3424:Middlewares/Third_Party/FatFs/src/ff.c **** 				mode |= FA_MODIFIED;
3425:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->dir_sect = fs->winsect;			/* Pointer to the directory entry */
3426:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->dir_ptr = dj.dir;
3427:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
3428:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.lockid = inc_lock(&dj, (mode & ~FA_READ) ? 1 : 0);
3429:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!fp->obj.lockid) res = FR_INT_ERR;
3430:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3431:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3432:Middlewares/Third_Party/FatFs/src/ff.c **** #else		/* R/O configuration */
3433:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
3434:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {	/* Origin directory itself? */
3435:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;
3436:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
3437:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dj.obj.attr & AM_DIR) {		/* It is a directory */
3438:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_NO_FILE;
3439:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3440:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3441:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3442:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3443:Middlewares/Third_Party/FatFs/src/ff.c **** 
3444:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
3445:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
3446:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_EXFAT) {
3447:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.c_scl = dj.obj.sclust;							/* Get containing directory info */
3448:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.c_size = ((DWORD)dj.obj.objsize & 0xFFFFFF00) | dj.obj.stat;
3449:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.c_ofs = dj.blk_ofs;
3450:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.sclust = ld_dword(fs->dirbuf + XDIR_FstClus);	/* Get object allocation info */
3451:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.objsize = ld_qword(fs->dirbuf + XDIR_FileSize);
3452:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.stat = fs->dirbuf[XDIR_GenFlags] & 2;
3453:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else
3454:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3455:Middlewares/Third_Party/FatFs/src/ff.c **** 			{
3456:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.sclust = ld_clust(fs, dj.dir);					/* Get object allocation info */
3457:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.objsize = ld_dword(dj.dir + DIR_FileSize);
ARM GAS  /tmp/ccwdO2Zj.s 			page 87


3458:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3459:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FASTSEEK
3460:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->cltbl = 0;			/* Disable fast seek mode */
3461:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3462:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.fs = fs;	 	/* Validate the file object */
3463:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.id = fs->id;
3464:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->flag = mode;		/* Set file access mode */
3465:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->err = 0;			/* Clear error flag */
3466:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->sect = 0;			/* Invalidate current data sector */
3467:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->fptr = 0;			/* Set file pointer top of the file */
3468:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3469:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
3470:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(fp->buf, 0, _MAX_SS);	/* Clear sector buffer */
3471:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3472:Middlewares/Third_Party/FatFs/src/ff.c **** 			if ((mode & FA_SEEKEND) && fp->obj.objsize > 0) {	/* Seek to end of file if FA_OPEN_APPEND is sp
3473:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr = fp->obj.objsize;			/* Offset to seek */
3474:Middlewares/Third_Party/FatFs/src/ff.c **** 				bcs = (DWORD)fs->csize * SS(fs);	/* Cluster size in byte */
3475:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = fp->obj.sclust;				/* Follow the cluster chain */
3476:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (ofs = fp->obj.objsize; res == FR_OK && ofs > bcs; ofs -= bcs) {
3477:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = get_fat(&fp->obj, clst);
3478:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst <= 1) res = FR_INT_ERR;
3479:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) res = FR_DISK_ERR;
3480:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3481:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;
3482:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK && ofs % SS(fs)) {	/* Fill sector buffer if not on the sector boundary */
3483:Middlewares/Third_Party/FatFs/src/ff.c **** 					if ((sc = clust2sect(fs, clst)) == 0) {
3484:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_INT_ERR;
3485:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else {
3486:Middlewares/Third_Party/FatFs/src/ff.c **** 						fp->sect = sc + (DWORD)(ofs / SS(fs));
3487:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
3488:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (disk_read(fs->drv, fp->buf, fp->sect, 1) != RES_OK) res = FR_DISK_ERR;
3489:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3490:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3491:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3492:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3493:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3494:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3495:Middlewares/Third_Party/FatFs/src/ff.c **** 
3496:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
3497:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3498:Middlewares/Third_Party/FatFs/src/ff.c **** 
3499:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) fp->obj.fs = 0;	/* Invalidate file object on error */
3500:Middlewares/Third_Party/FatFs/src/ff.c **** 
3501:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
3502:Middlewares/Third_Party/FatFs/src/ff.c **** }
3503:Middlewares/Third_Party/FatFs/src/ff.c **** 
3504:Middlewares/Third_Party/FatFs/src/ff.c **** 
3505:Middlewares/Third_Party/FatFs/src/ff.c **** 
3506:Middlewares/Third_Party/FatFs/src/ff.c **** 
3507:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3508:Middlewares/Third_Party/FatFs/src/ff.c **** /* Read File                                                             */
3509:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3510:Middlewares/Third_Party/FatFs/src/ff.c **** 
3511:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_read (
3512:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp, 	/* Pointer to the file object */
3513:Middlewares/Third_Party/FatFs/src/ff.c **** 	void* buff,	/* Pointer to data buffer */
3514:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT btr,	/* Number of bytes to read */
ARM GAS  /tmp/ccwdO2Zj.s 			page 88


3515:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT* br	/* Pointer to number of bytes read */
3516:Middlewares/Third_Party/FatFs/src/ff.c **** )
3517:Middlewares/Third_Party/FatFs/src/ff.c **** {
3518:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3519:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
3520:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst, sect;
3521:Middlewares/Third_Party/FatFs/src/ff.c **** 	FSIZE_t remain;
3522:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT rcnt, cc, csect;
3523:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *rbuff = (BYTE*)buff;
3524:Middlewares/Third_Party/FatFs/src/ff.c **** 
3525:Middlewares/Third_Party/FatFs/src/ff.c **** 
3526:Middlewares/Third_Party/FatFs/src/ff.c **** 	*br = 0;	/* Clear read byte counter */
3527:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&fp->obj, &fs);				/* Check validity of the file object */
3528:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);	/* Check validity */
3529:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_READ)) LEAVE_FF(fs, FR_DENIED); /* Check access mode */
3530:Middlewares/Third_Party/FatFs/src/ff.c **** 	remain = fp->obj.objsize - fp->fptr;
3531:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (btr > remain) btr = (UINT)remain;		/* Truncate btr by remaining bytes */
3532:Middlewares/Third_Party/FatFs/src/ff.c **** 
3533:Middlewares/Third_Party/FatFs/src/ff.c **** 	for ( ;  btr;								/* Repeat until all data read */
3534:Middlewares/Third_Party/FatFs/src/ff.c **** 		rbuff += rcnt, fp->fptr += rcnt, *br += rcnt, btr -= rcnt) {
3535:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fptr % SS(fs) == 0) {			/* On the sector boundary? */
3536:Middlewares/Third_Party/FatFs/src/ff.c **** 			csect = (UINT)(fp->fptr / SS(fs) & (fs->csize - 1));	/* Sector offset in the cluster */
3537:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (csect == 0) {					/* On the cluster boundary? */
3538:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr == 0) {			/* On the top of the file? */
3539:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = fp->obj.sclust;		/* Follow cluster chain from the origin */
3540:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {						/* Middle or end of the file */
3541:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FASTSEEK
3542:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fp->cltbl) {
3543:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = clmt_clust(fp, fp->fptr);	/* Get cluster# from the CLMT */
3544:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
3545:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3546:Middlewares/Third_Party/FatFs/src/ff.c **** 					{
3547:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = get_fat(&fp->obj, fp->clust);	/* Follow cluster chain on the FAT */
3548:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3549:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3550:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst < 2) ABORT(fs, FR_INT_ERR);
3551:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
3552:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;				/* Update current cluster */
3553:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3554:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect = clust2sect(fs, fp->clust);	/* Get current sector */
3555:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!sect) ABORT(fs, FR_INT_ERR);
3556:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += csect;
3557:Middlewares/Third_Party/FatFs/src/ff.c **** 			cc = btr / SS(fs);					/* When remaining bytes >= sector size, */
3558:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cc) {							/* Read maximum contiguous sectors directly */
3559:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (csect + cc > fs->csize) {	/* Clip at cluster boundary */
3560:Middlewares/Third_Party/FatFs/src/ff.c **** 					cc = fs->csize - csect;
3561:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3562:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_read(fs->drv, rbuff, sect, cc) != RES_OK) ABORT(fs, FR_DISK_ERR);
3563:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY && _FS_MINIMIZE <= 2			/* Replace one of the read sectors with cached data if it 
3564:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
3565:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fs->wflag && fs->winsect - sect < cc) {
3566:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(rbuff + ((fs->winsect - sect) * SS(fs)), fs->win, SS(fs));
3567:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3568:Middlewares/Third_Party/FatFs/src/ff.c **** #else
3569:Middlewares/Third_Party/FatFs/src/ff.c **** 				if ((fp->flag & FA_DIRTY) && fp->sect - sect < cc) {
3570:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(rbuff + ((fp->sect - sect) * SS(fs)), fp->buf, SS(fs));
3571:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
ARM GAS  /tmp/ccwdO2Zj.s 			page 89


3572:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3573:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3574:Middlewares/Third_Party/FatFs/src/ff.c **** 				rcnt = SS(fs) * cc;				/* Number of bytes transferred */
3575:Middlewares/Third_Party/FatFs/src/ff.c **** 				continue;
3576:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3577:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
3578:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->sect != sect) {			/* Load data sector if not in cache */
3579:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3580:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->flag & FA_DIRTY) {		/* Write-back dirty sector cache */
3581:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
3582:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->flag &= (BYTE)~FA_DIRTY;
3583:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3584:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3585:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_read(fs->drv, fp->buf, sect, 1) != RES_OK)	ABORT(fs, FR_DISK_ERR);	/* Fill sector cach
3586:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3587:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3588:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->sect = sect;
3589:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3590:Middlewares/Third_Party/FatFs/src/ff.c **** 		rcnt = SS(fs) - (UINT)fp->fptr % SS(fs);	/* Number of bytes left in the sector */
3591:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rcnt > btr) rcnt = btr;					/* Clip it by btr if needed */
3592:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
3593:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (move_window(fs, fp->sect) != FR_OK) ABORT(fs, FR_DISK_ERR);	/* Move sector window */
3594:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(rbuff, fs->win + fp->fptr % SS(fs), rcnt);	/* Extract partial sector */
3595:Middlewares/Third_Party/FatFs/src/ff.c **** #else
3596:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(rbuff, fp->buf + fp->fptr % SS(fs), rcnt);	/* Extract partial sector */
3597:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3598:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3599:Middlewares/Third_Party/FatFs/src/ff.c **** 
3600:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, FR_OK);
3601:Middlewares/Third_Party/FatFs/src/ff.c **** }
3602:Middlewares/Third_Party/FatFs/src/ff.c **** 
3603:Middlewares/Third_Party/FatFs/src/ff.c **** 
3604:Middlewares/Third_Party/FatFs/src/ff.c **** 
3605:Middlewares/Third_Party/FatFs/src/ff.c **** 
3606:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3607:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3608:Middlewares/Third_Party/FatFs/src/ff.c **** /* Write File                                                            */
3609:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3610:Middlewares/Third_Party/FatFs/src/ff.c **** 
3611:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_write (
3612:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp,			/* Pointer to the file object */
3613:Middlewares/Third_Party/FatFs/src/ff.c **** 	const void* buff,	/* Pointer to the data to be written */
3614:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT btw,			/* Number of bytes to write */
3615:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT* bw			/* Pointer to number of bytes written */
3616:Middlewares/Third_Party/FatFs/src/ff.c **** )
3617:Middlewares/Third_Party/FatFs/src/ff.c **** {
3618:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3619:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
3620:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst, sect;
3621:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT wcnt, cc, csect;
3622:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE *wbuff = (const BYTE*)buff;
3623:Middlewares/Third_Party/FatFs/src/ff.c **** 
3624:Middlewares/Third_Party/FatFs/src/ff.c **** 
3625:Middlewares/Third_Party/FatFs/src/ff.c **** 	*bw = 0;	/* Clear write byte counter */
3626:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&fp->obj, &fs);			/* Check validity of the file object */
3627:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);	/* Check validity */
3628:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
ARM GAS  /tmp/ccwdO2Zj.s 			page 90


3629:Middlewares/Third_Party/FatFs/src/ff.c **** 
3630:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Check fptr wrap-around (file size cannot reach 4GiB on FATxx) */
3631:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((!_FS_EXFAT || fs->fs_type != FS_EXFAT) && (DWORD)(fp->fptr + btw) < (DWORD)fp->fptr) {
3632:Middlewares/Third_Party/FatFs/src/ff.c **** 		btw = (UINT)(0xFFFFFFFF - (DWORD)fp->fptr);
3633:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3634:Middlewares/Third_Party/FatFs/src/ff.c **** 
3635:Middlewares/Third_Party/FatFs/src/ff.c **** 	for ( ;  btw;							/* Repeat until all data written */
3636:Middlewares/Third_Party/FatFs/src/ff.c **** 		wbuff += wcnt, fp->fptr += wcnt, fp->obj.objsize = (fp->fptr > fp->obj.objsize) ? fp->fptr : fp->
3637:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fptr % SS(fs) == 0) {		/* On the sector boundary? */
3638:Middlewares/Third_Party/FatFs/src/ff.c **** 			csect = (UINT)(fp->fptr / SS(fs)) & (fs->csize - 1);	/* Sector offset in the cluster */
3639:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (csect == 0) {				/* On the cluster boundary? */
3640:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr == 0) {		/* On the top of the file? */
3641:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = fp->obj.sclust;	/* Follow from the origin */
3642:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0) {		/* If no cluster is allocated, */
3643:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = create_chain(&fp->obj, 0);	/* create a new cluster chain */
3644:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3645:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {					/* On the middle or end of the file */
3646:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FASTSEEK
3647:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fp->cltbl) {
3648:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = clmt_clust(fp, fp->fptr);	/* Get cluster# from the CLMT */
3649:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
3650:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3651:Middlewares/Third_Party/FatFs/src/ff.c **** 					{
3652:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = create_chain(&fp->obj, fp->clust);	/* Follow or stretch cluster chain on the FAT */
3653:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3654:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3655:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0) break;		/* Could not allocate a new cluster (disk full) */
3656:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 1) ABORT(fs, FR_INT_ERR);
3657:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
3658:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;			/* Update current cluster */
3659:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->obj.sclust == 0) fp->obj.sclust = clst;	/* Set start cluster if the first write */
3660:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3661:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
3662:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->winsect == fp->sect && sync_window(fs) != FR_OK) ABORT(fs, FR_DISK_ERR);	/* Write-back s
3663:Middlewares/Third_Party/FatFs/src/ff.c **** #else
3664:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->flag & FA_DIRTY) {		/* Write-back sector cache */
3665:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
3666:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
3667:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3668:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3669:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect = clust2sect(fs, fp->clust);	/* Get current sector */
3670:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!sect) ABORT(fs, FR_INT_ERR);
3671:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += csect;
3672:Middlewares/Third_Party/FatFs/src/ff.c **** 			cc = btw / SS(fs);				/* When remaining bytes >= sector size, */
3673:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cc) {						/* Write maximum contiguous sectors directly */
3674:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (csect + cc > fs->csize) {	/* Clip at cluster boundary */
3675:Middlewares/Third_Party/FatFs/src/ff.c **** 					cc = fs->csize - csect;
3676:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3677:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fs->drv, wbuff, sect, cc) != RES_OK) ABORT(fs, FR_DISK_ERR);
3678:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 2
3679:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
3680:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fs->winsect - sect < cc) {	/* Refill sector cache if it gets invalidated by the direct writ
3681:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(fs->win, wbuff + ((fs->winsect - sect) * SS(fs)), SS(fs));
3682:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 0;
3683:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3684:Middlewares/Third_Party/FatFs/src/ff.c **** #else
3685:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->sect - sect < cc) { /* Refill sector cache if it gets invalidated by the direct write *
ARM GAS  /tmp/ccwdO2Zj.s 			page 91


3686:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(fp->buf, wbuff + ((fp->sect - sect) * SS(fs)), SS(fs));
3687:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->flag &= (BYTE)~FA_DIRTY;
3688:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3689:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3690:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3691:Middlewares/Third_Party/FatFs/src/ff.c **** 				wcnt = SS(fs) * cc;		/* Number of bytes transferred */
3692:Middlewares/Third_Party/FatFs/src/ff.c **** 				continue;
3693:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3694:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
3695:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->fptr >= fp->obj.objsize) {	/* Avoid silly cache filling on the growing edge */
3696:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (sync_window(fs) != FR_OK) ABORT(fs, FR_DISK_ERR);
3697:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->winsect = sect;
3698:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3699:Middlewares/Third_Party/FatFs/src/ff.c **** #else
3700:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->sect != sect && 		/* Fill sector cache with file data */
3701:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr < fp->obj.objsize &&
3702:Middlewares/Third_Party/FatFs/src/ff.c **** 				disk_read(fs->drv, fp->buf, sect, 1) != RES_OK) {
3703:Middlewares/Third_Party/FatFs/src/ff.c **** 					ABORT(fs, FR_DISK_ERR);
3704:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3705:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3706:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->sect = sect;
3707:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3708:Middlewares/Third_Party/FatFs/src/ff.c **** 		wcnt = SS(fs) - (UINT)fp->fptr % SS(fs);	/* Number of bytes left in the sector */
3709:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (wcnt > btw) wcnt = btw;					/* Clip it by btw if needed */
3710:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
3711:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (move_window(fs, fp->sect) != FR_OK) ABORT(fs, FR_DISK_ERR);	/* Move sector window */
3712:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(fs->win + fp->fptr % SS(fs), wbuff, wcnt);	/* Fit data to the sector */
3713:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->wflag = 1;
3714:Middlewares/Third_Party/FatFs/src/ff.c **** #else
3715:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(fp->buf + fp->fptr % SS(fs), wbuff, wcnt);	/* Fit data to the sector */
3716:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->flag |= FA_DIRTY;
3717:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3718:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3719:Middlewares/Third_Party/FatFs/src/ff.c **** 
3720:Middlewares/Third_Party/FatFs/src/ff.c **** 	fp->flag |= FA_MODIFIED;				/* Set file change flag */
3721:Middlewares/Third_Party/FatFs/src/ff.c **** 
3722:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, FR_OK);
3723:Middlewares/Third_Party/FatFs/src/ff.c **** }
3724:Middlewares/Third_Party/FatFs/src/ff.c **** 
3725:Middlewares/Third_Party/FatFs/src/ff.c **** 
3726:Middlewares/Third_Party/FatFs/src/ff.c **** 
3727:Middlewares/Third_Party/FatFs/src/ff.c **** 
3728:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3729:Middlewares/Third_Party/FatFs/src/ff.c **** /* Synchronize the File                                                  */
3730:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3731:Middlewares/Third_Party/FatFs/src/ff.c **** 
3732:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_sync (
3733:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp		/* Pointer to the file object */
3734:Middlewares/Third_Party/FatFs/src/ff.c **** )
3735:Middlewares/Third_Party/FatFs/src/ff.c **** {
3736:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3737:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
3738:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD tm;
3739:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *dir;
3740:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
3741:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
3742:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
ARM GAS  /tmp/ccwdO2Zj.s 			page 92


3743:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3744:Middlewares/Third_Party/FatFs/src/ff.c **** 
3745:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&fp->obj, &fs);	/* Check validity of the file object */
3746:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3747:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->flag & FA_MODIFIED) {	/* Is there any change to the file? */
3748:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
3749:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->flag & FA_DIRTY) {	/* Write-back cached data if needed */
3750:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) LEAVE_FF(fs, FR_DISK_ERR);
3751:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
3752:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3753:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3754:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Update the directory entry */
3755:Middlewares/Third_Party/FatFs/src/ff.c **** 			tm = GET_FATTIME();				/* Modified time */
3756:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
3757:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_EXFAT) {
3758:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = fill_first_frag(&fp->obj);	/* Fill first fragment on the FAT if needed */
3759:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {
3760:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = fill_last_frag(&fp->obj, fp->clust, 0xFFFFFFFF);	/* Fill last fragment on the FAT if nee
3761:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3762:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {
3763:Middlewares/Third_Party/FatFs/src/ff.c **** 					INIT_NAMBUF(fs);
3764:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = load_obj_dir(&dj, &fp->obj);	/* Load directory entry block */
3765:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) {
3766:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->dirbuf[XDIR_Attr] |= AM_ARC;				/* Set archive bit */
3767:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->dirbuf[XDIR_GenFlags] = fp->obj.stat | 1;	/* Update file allocation info */
3768:Middlewares/Third_Party/FatFs/src/ff.c **** 						st_dword(fs->dirbuf + XDIR_FstClus, fp->obj.sclust);
3769:Middlewares/Third_Party/FatFs/src/ff.c **** 						st_qword(fs->dirbuf + XDIR_FileSize, fp->obj.objsize);
3770:Middlewares/Third_Party/FatFs/src/ff.c **** 						st_qword(fs->dirbuf + XDIR_ValidFileSize, fp->obj.objsize);
3771:Middlewares/Third_Party/FatFs/src/ff.c **** 						st_dword(fs->dirbuf + XDIR_ModTime, tm);		/* Update modified time */
3772:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->dirbuf[XDIR_ModTime10] = 0;
3773:Middlewares/Third_Party/FatFs/src/ff.c **** 						st_dword(fs->dirbuf + XDIR_AccTime, 0);
3774:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = store_xdir(&dj);	/* Restore it to the directory */
3775:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (res == FR_OK) {
3776:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = sync_fs(fs);
3777:Middlewares/Third_Party/FatFs/src/ff.c **** 							fp->flag &= (BYTE)~FA_MODIFIED;
3778:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
3779:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3780:Middlewares/Third_Party/FatFs/src/ff.c **** 					FREE_NAMBUF();
3781:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3782:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else
3783:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3784:Middlewares/Third_Party/FatFs/src/ff.c **** 			{
3785:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = move_window(fs, fp->dir_sect);
3786:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {
3787:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir = fp->dir_ptr;
3788:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[DIR_Attr] |= AM_ARC;						/* Set archive bit */
3789:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fp->obj.fs, dir, fp->obj.sclust);		/* Update file allocation info  */
3790:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dir + DIR_FileSize, (DWORD)fp->obj.objsize);	/* Update file size */
3791:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dir + DIR_ModTime, tm);				/* Update modified time */
3792:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_word(dir + DIR_LstAccDate, 0);
3793:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 1;
3794:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = sync_fs(fs);					/* Restore it to the directory */
3795:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->flag &= (BYTE)~FA_MODIFIED;
3796:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3797:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3798:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3799:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
ARM GAS  /tmp/ccwdO2Zj.s 			page 93


3800:Middlewares/Third_Party/FatFs/src/ff.c **** 
3801:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
3802:Middlewares/Third_Party/FatFs/src/ff.c **** }
3803:Middlewares/Third_Party/FatFs/src/ff.c **** 
3804:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
3805:Middlewares/Third_Party/FatFs/src/ff.c **** 
3806:Middlewares/Third_Party/FatFs/src/ff.c **** 
3807:Middlewares/Third_Party/FatFs/src/ff.c **** 
3808:Middlewares/Third_Party/FatFs/src/ff.c **** 
3809:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3810:Middlewares/Third_Party/FatFs/src/ff.c **** /* Close File                                                            */
3811:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3812:Middlewares/Third_Party/FatFs/src/ff.c **** 
3813:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_close (
3814:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp		/* Pointer to the file object to be closed */
3815:Middlewares/Third_Party/FatFs/src/ff.c **** )
3816:Middlewares/Third_Party/FatFs/src/ff.c **** {
3817:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3818:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
3819:Middlewares/Third_Party/FatFs/src/ff.c **** 
3820:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3821:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = f_sync(fp);					/* Flush cached data */
3822:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK)
3823:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3824:Middlewares/Third_Party/FatFs/src/ff.c **** 	{
3825:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = validate(&fp->obj, &fs);	/* Lock volume */
3826:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
3827:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
3828:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dec_lock(fp->obj.lockid);	/* Decrement file open counter */
3829:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK)
3830:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3831:Middlewares/Third_Party/FatFs/src/ff.c **** 			{
3832:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.fs = 0;			/* Invalidate file object */
3833:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3834:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
3835:Middlewares/Third_Party/FatFs/src/ff.c **** 			unlock_fs(fs, FR_OK);		/* Unlock volume */
3836:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3837:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3838:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3839:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
3840:Middlewares/Third_Party/FatFs/src/ff.c **** }
3841:Middlewares/Third_Party/FatFs/src/ff.c **** 
3842:Middlewares/Third_Party/FatFs/src/ff.c **** 
3843:Middlewares/Third_Party/FatFs/src/ff.c **** 
3844:Middlewares/Third_Party/FatFs/src/ff.c **** 
3845:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH >= 1
3846:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3847:Middlewares/Third_Party/FatFs/src/ff.c **** /* Change Current Directory or Current Drive, Get Current Directory      */
3848:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3849:Middlewares/Third_Party/FatFs/src/ff.c **** 
3850:Middlewares/Third_Party/FatFs/src/ff.c **** #if _VOLUMES >= 2
3851:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_chdrive (
3852:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path		/* Drive number */
3853:Middlewares/Third_Party/FatFs/src/ff.c **** )
3854:Middlewares/Third_Party/FatFs/src/ff.c **** {
3855:Middlewares/Third_Party/FatFs/src/ff.c **** 	int vol;
3856:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/ccwdO2Zj.s 			page 94


3857:Middlewares/Third_Party/FatFs/src/ff.c **** 
3858:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number */
3859:Middlewares/Third_Party/FatFs/src/ff.c **** 	vol = get_ldnumber(&path);
3860:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
3861:Middlewares/Third_Party/FatFs/src/ff.c **** 
3862:Middlewares/Third_Party/FatFs/src/ff.c **** 	CurrVol = (BYTE)vol;	/* Set it as current volume */
3863:Middlewares/Third_Party/FatFs/src/ff.c **** 
3864:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
3865:Middlewares/Third_Party/FatFs/src/ff.c **** }
3866:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3867:Middlewares/Third_Party/FatFs/src/ff.c **** 
3868:Middlewares/Third_Party/FatFs/src/ff.c **** 
3869:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_chdir (
3870:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path	/* Pointer to the directory path */
3871:Middlewares/Third_Party/FatFs/src/ff.c **** )
3872:Middlewares/Third_Party/FatFs/src/ff.c **** {
3873:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3874:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
3875:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
3876:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
3877:Middlewares/Third_Party/FatFs/src/ff.c **** 
3878:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
3879:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, 0);
3880:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3881:Middlewares/Third_Party/FatFs/src/ff.c **** 		dj.obj.fs = fs;
3882:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
3883:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);		/* Follow the path */
3884:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {					/* Follow completed */
3885:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {
3886:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->cdir = dj.obj.sclust;	/* It is the start directory itself */
3887:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
3888:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fs->fs_type == FS_EXFAT) {
3889:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->cdc_scl = dj.obj.c_scl;
3890:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->cdc_size = dj.obj.c_size;
3891:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->cdc_ofs = dj.obj.c_ofs;
3892:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3893:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3894:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
3895:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dj.obj.attr & AM_DIR) {	/* It is a sub-directory */
3896:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
3897:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fs->fs_type == FS_EXFAT) {
3898:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->cdir = ld_dword(fs->dirbuf + XDIR_FstClus);		/* Sub-directory cluster */
3899:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->cdc_scl = dj.obj.sclust;						/* Save containing directory information */
3900:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->cdc_size = ((DWORD)dj.obj.objsize & 0xFFFFFF00) | dj.obj.stat;
3901:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->cdc_ofs = dj.blk_ofs;
3902:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
3903:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3904:Middlewares/Third_Party/FatFs/src/ff.c **** 					{
3905:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->cdir = ld_clust(fs, dj.dir);					/* Sub-directory cluster */
3906:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3907:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
3908:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_NO_PATH;		/* Reached but a file */
3909:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3910:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3911:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3912:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
3913:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_NO_FILE) res = FR_NO_PATH;
ARM GAS  /tmp/ccwdO2Zj.s 			page 95


3914:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3915:Middlewares/Third_Party/FatFs/src/ff.c **** 
3916:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
3917:Middlewares/Third_Party/FatFs/src/ff.c **** }
3918:Middlewares/Third_Party/FatFs/src/ff.c **** 
3919:Middlewares/Third_Party/FatFs/src/ff.c **** 
3920:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH >= 2
3921:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_getcwd (
3922:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR* buff,	/* Pointer to the directory path */
3923:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT len		/* Size of path */
3924:Middlewares/Third_Party/FatFs/src/ff.c **** )
3925:Middlewares/Third_Party/FatFs/src/ff.c **** {
3926:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3927:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
3928:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
3929:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, n;
3930:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ccl;
3931:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR *tp;
3932:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO fno;
3933:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
3934:Middlewares/Third_Party/FatFs/src/ff.c **** 
3935:Middlewares/Third_Party/FatFs/src/ff.c **** 
3936:Middlewares/Third_Party/FatFs/src/ff.c **** 	*buff = 0;
3937:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
3938:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume((const TCHAR**)&buff, &fs, 0);	/* Get current volume */
3939:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3940:Middlewares/Third_Party/FatFs/src/ff.c **** 		dj.obj.fs = fs;
3941:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
3942:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = len;			/* Bottom of buffer (directory stack base) */
3943:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {	/* (Cannot do getcwd on exFAT and returns root path)
3944:Middlewares/Third_Party/FatFs/src/ff.c **** 			dj.obj.sclust = fs->cdir;				/* Start to follow upper directory from current directory */
3945:Middlewares/Third_Party/FatFs/src/ff.c **** 			while ((ccl = dj.obj.sclust) != 0) {	/* Repeat while current directory is a sub-directory */
3946:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_sdi(&dj, 1 * SZDIRE);	/* Get parent directory */
3947:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res != FR_OK) break;
3948:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = move_window(fs, dj.sect);
3949:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res != FR_OK) break;
3950:Middlewares/Third_Party/FatFs/src/ff.c **** 				dj.obj.sclust = ld_clust(fs, dj.dir);	/* Goto parent directory */
3951:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_sdi(&dj, 0);
3952:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res != FR_OK) break;
3953:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {							/* Find the entry links to the child directory */
3954:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = dir_read(&dj, 0);
3955:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res != FR_OK) break;
3956:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (ccl == ld_clust(fs, dj.dir)) break;	/* Found the entry */
3957:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = dir_next(&dj, 0);
3958:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (res == FR_OK);
3959:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) res = FR_INT_ERR;/* It cannot be 'not found'. */
3960:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res != FR_OK) break;
3961:Middlewares/Third_Party/FatFs/src/ff.c **** 				get_fileinfo(&dj, &fno);		/* Get the directory name and push it to the buffer */
3962:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (n = 0; fno.fname[n]; n++) ;
3963:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (i < n + 3) {
3964:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_NOT_ENOUGH_CORE; break;
3965:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3966:Middlewares/Third_Party/FatFs/src/ff.c **** 				while (n) buff[--i] = fno.fname[--n];
3967:Middlewares/Third_Party/FatFs/src/ff.c **** 				buff[--i] = '/';
3968:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3969:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3970:Middlewares/Third_Party/FatFs/src/ff.c **** 		tp = buff;
ARM GAS  /tmp/ccwdO2Zj.s 			page 96


3971:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
3972:Middlewares/Third_Party/FatFs/src/ff.c **** #if _VOLUMES >= 2
3973:Middlewares/Third_Party/FatFs/src/ff.c **** 			*tp++ = '0' + CurrVol;			/* Put drive number */
3974:Middlewares/Third_Party/FatFs/src/ff.c **** 			*tp++ = ':';
3975:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3976:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i == len) {					/* Root-directory */
3977:Middlewares/Third_Party/FatFs/src/ff.c **** 				*tp++ = '/';
3978:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {						/* Sub-directroy */
3979:Middlewares/Third_Party/FatFs/src/ff.c **** 				do		/* Add stacked path str */
3980:Middlewares/Third_Party/FatFs/src/ff.c **** 					*tp++ = buff[i++];
3981:Middlewares/Third_Party/FatFs/src/ff.c **** 				while (i < len);
3982:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3983:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3984:Middlewares/Third_Party/FatFs/src/ff.c **** 		*tp = 0;
3985:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
3986:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3987:Middlewares/Third_Party/FatFs/src/ff.c **** 
3988:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
3989:Middlewares/Third_Party/FatFs/src/ff.c **** }
3990:Middlewares/Third_Party/FatFs/src/ff.c **** 
3991:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _FS_RPATH >= 2 */
3992:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _FS_RPATH >= 1 */
3993:Middlewares/Third_Party/FatFs/src/ff.c **** 
3994:Middlewares/Third_Party/FatFs/src/ff.c **** 
3995:Middlewares/Third_Party/FatFs/src/ff.c **** 
3996:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 2
3997:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3998:Middlewares/Third_Party/FatFs/src/ff.c **** /* Seek File R/W Pointer                                                 */
3999:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4000:Middlewares/Third_Party/FatFs/src/ff.c **** 
4001:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_lseek (
4002:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp,		/* Pointer to the file object */
4003:Middlewares/Third_Party/FatFs/src/ff.c **** 	FSIZE_t ofs		/* File pointer from top of file */
4004:Middlewares/Third_Party/FatFs/src/ff.c **** )
4005:Middlewares/Third_Party/FatFs/src/ff.c **** {
4006:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4007:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4008:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst, bcs, nsect;
4009:Middlewares/Third_Party/FatFs/src/ff.c **** 	FSIZE_t ifptr;
4010:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FASTSEEK
4011:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cl, pcl, ncl, tcl, dsc, tlen, ulen, *tbl;
4012:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4013:Middlewares/Third_Party/FatFs/src/ff.c **** 
4014:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&fp->obj, &fs);		/* Check validity of the file object */
4015:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) res = (FRESULT)fp->err;
4016:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT && !_FS_READONLY
4017:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK && fs->fs_type == FS_EXFAT) {
4018:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = fill_last_frag(&fp->obj, fp->clust, 0xFFFFFFFF);	/* Fill last fragment on the FAT if needed
4019:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4020:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4021:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) LEAVE_FF(fs, res);
4022:Middlewares/Third_Party/FatFs/src/ff.c **** 
4023:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FASTSEEK
4024:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fp->cltbl) {	/* Fast seek */
4025:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs == CREATE_LINKMAP) {	/* Create CLMT */
4026:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl = fp->cltbl;
4027:Middlewares/Third_Party/FatFs/src/ff.c **** 			tlen = *tbl++; ulen = 2;	/* Given table size and required table size */
ARM GAS  /tmp/ccwdO2Zj.s 			page 97


4028:Middlewares/Third_Party/FatFs/src/ff.c **** 			cl = fp->obj.sclust;		/* Origin of the chain */
4029:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cl) {
4030:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {
4031:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Get a fragment */
4032:Middlewares/Third_Party/FatFs/src/ff.c **** 					tcl = cl; ncl = 0; ulen += 2;	/* Top, length and used items */
4033:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {
4034:Middlewares/Third_Party/FatFs/src/ff.c **** 						pcl = cl; ncl++;
4035:Middlewares/Third_Party/FatFs/src/ff.c **** 						cl = get_fat(&fp->obj, cl);
4036:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl <= 1) ABORT(fs, FR_INT_ERR);
4037:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
4038:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (cl == pcl + 1);
4039:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (ulen <= tlen) {		/* Store the length and top of the fragment */
4040:Middlewares/Third_Party/FatFs/src/ff.c **** 						*tbl++ = ncl; *tbl++ = tcl;
4041:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4042:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (cl < fs->n_fatent);	/* Repeat until end of chain */
4043:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4044:Middlewares/Third_Party/FatFs/src/ff.c **** 			*fp->cltbl = ulen;	/* Number of items used */
4045:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ulen <= tlen) {
4046:Middlewares/Third_Party/FatFs/src/ff.c **** 				*tbl = 0;		/* Terminate table */
4047:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
4048:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_NOT_ENOUGH_CORE;	/* Given table size is smaller than required */
4049:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4050:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {						/* Fast seek */
4051:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ofs > fp->obj.objsize) ofs = fp->obj.objsize;	/* Clip offset at the file size */
4052:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->fptr = ofs;				/* Set file pointer */
4053:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ofs) {
4054:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clmt_clust(fp, ofs - 1);
4055:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc = clust2sect(fs, fp->clust);
4056:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!dsc) ABORT(fs, FR_INT_ERR);
4057:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc += (DWORD)((ofs - 1) / SS(fs)) & (fs->csize - 1);
4058:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr % SS(fs) && dsc != fp->sect) {	/* Refill sector cache if needed */
4059:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
4060:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
4061:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fp->flag & FA_DIRTY) {		/* Write-back dirty sector cache */
4062:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
4063:Middlewares/Third_Party/FatFs/src/ff.c **** 						fp->flag &= (BYTE)~FA_DIRTY;
4064:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4065:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4066:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (disk_read(fs->drv, fp->buf, dsc, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);	/* Load current sec
4067:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4068:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->sect = dsc;
4069:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4070:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4071:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4072:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else
4073:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4074:Middlewares/Third_Party/FatFs/src/ff.c **** 
4075:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Normal Seek */
4076:Middlewares/Third_Party/FatFs/src/ff.c **** 	{
4077:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4078:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->fs_type != FS_EXFAT && ofs >= 0x100000000) ofs = 0xFFFFFFFF;	/* Clip at 4GiB-1 if at FATx
4079:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4080:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs > fp->obj.objsize && (_FS_READONLY || !(fp->flag & FA_WRITE))) {	/* In read-only mode, cl
4081:Middlewares/Third_Party/FatFs/src/ff.c **** 			ofs = fp->obj.objsize;
4082:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4083:Middlewares/Third_Party/FatFs/src/ff.c **** 		ifptr = fp->fptr;
4084:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->fptr = nsect = 0;
ARM GAS  /tmp/ccwdO2Zj.s 			page 98


4085:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs) {
4086:Middlewares/Third_Party/FatFs/src/ff.c **** 			bcs = (DWORD)fs->csize * SS(fs);	/* Cluster size (byte) */
4087:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ifptr > 0 &&
4088:Middlewares/Third_Party/FatFs/src/ff.c **** 				(ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
4089:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr = (ifptr - 1) & ~(FSIZE_t)(bcs - 1);	/* start from the current cluster */
4090:Middlewares/Third_Party/FatFs/src/ff.c **** 				ofs -= fp->fptr;
4091:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = fp->clust;
4092:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {									/* When seek to back cluster, */
4093:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = fp->obj.sclust;					/* start from the first cluster */
4094:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
4095:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0) {						/* If no cluster chain, create a new chain */
4096:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = create_chain(&fp->obj, 0);
4097:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 1) ABORT(fs, FR_INT_ERR);
4098:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
4099:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->obj.sclust = clst;
4100:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4101:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4102:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;
4103:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4104:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst != 0) {
4105:Middlewares/Third_Party/FatFs/src/ff.c **** 				while (ofs > bcs) {						/* Cluster following loop */
4106:Middlewares/Third_Party/FatFs/src/ff.c **** 					ofs -= bcs; fp->fptr += bcs;
4107:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
4108:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fp->flag & FA_WRITE) {			/* Check if in write mode or not */
4109:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (_FS_EXFAT && fp->fptr > fp->obj.objsize) {	/* No FAT chain object needs correct objsize t
4110:Middlewares/Third_Party/FatFs/src/ff.c **** 							fp->obj.objsize = fp->fptr;
4111:Middlewares/Third_Party/FatFs/src/ff.c **** 							fp->flag |= FA_MODIFIED;
4112:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
4113:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = create_chain(&fp->obj, clst);	/* Follow chain with forceed stretch */
4114:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (clst == 0) {				/* Clip file size in case of disk full */
4115:Middlewares/Third_Party/FatFs/src/ff.c **** 							ofs = 0; break;
4116:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
4117:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
4118:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4119:Middlewares/Third_Party/FatFs/src/ff.c **** 					{
4120:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = get_fat(&fp->obj, clst);	/* Follow cluster chain if not in write mode */
4121:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4122:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
4123:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst <= 1 || clst >= fs->n_fatent) ABORT(fs, FR_INT_ERR);
4124:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->clust = clst;
4125:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4126:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr += ofs;
4127:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ofs % SS(fs)) {
4128:Middlewares/Third_Party/FatFs/src/ff.c **** 					nsect = clust2sect(fs, clst);	/* Current sector */
4129:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!nsect) ABORT(fs, FR_INT_ERR);
4130:Middlewares/Third_Party/FatFs/src/ff.c **** 					nsect += (DWORD)(ofs / SS(fs));
4131:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4132:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4133:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4134:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!_FS_READONLY && fp->fptr > fp->obj.objsize) {		/* Set file change flag if the file size is e
4135:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.objsize = fp->fptr;
4136:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->flag |= FA_MODIFIED;
4137:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4138:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fptr % SS(fs) && nsect != fp->sect) {	/* Fill sector cache if needed */
4139:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
4140:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
4141:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->flag & FA_DIRTY) {			/* Write-back dirty sector cache */
ARM GAS  /tmp/ccwdO2Zj.s 			page 99


4142:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
4143:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
4144:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4145:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4146:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_read(fs->drv, fp->buf, nsect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);	/* Fill sector cach
4147:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4148:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->sect = nsect;
4149:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4150:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4151:Middlewares/Third_Party/FatFs/src/ff.c **** 
4152:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4153:Middlewares/Third_Party/FatFs/src/ff.c **** }
4154:Middlewares/Third_Party/FatFs/src/ff.c **** 
4155:Middlewares/Third_Party/FatFs/src/ff.c **** 
4156:Middlewares/Third_Party/FatFs/src/ff.c **** 
4157:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 1
4158:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4159:Middlewares/Third_Party/FatFs/src/ff.c **** /* Create a Directory Object                                             */
4160:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4161:Middlewares/Third_Party/FatFs/src/ff.c **** 
4162:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_opendir (
4163:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,			/* Pointer to directory object to create */
4164:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path	/* Pointer to the directory path */
4165:Middlewares/Third_Party/FatFs/src/ff.c **** )
4166:Middlewares/Third_Party/FatFs/src/ff.c **** {
4167:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4168:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4169:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID *obj;
4170:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
4171:Middlewares/Third_Party/FatFs/src/ff.c **** 
4172:Middlewares/Third_Party/FatFs/src/ff.c **** 
4173:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!dp) return FR_INVALID_OBJECT;
4174:Middlewares/Third_Party/FatFs/src/ff.c **** 
4175:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
4176:Middlewares/Third_Party/FatFs/src/ff.c **** 	obj = &dp->obj;
4177:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, 0);
4178:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4179:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->fs = fs;
4180:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
4181:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(dp, path);			/* Follow the path to the directory */
4182:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {						/* Follow completed */
4183:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!(dp->fn[NSFLAG] & NS_NONAME)) {	/* It is not the origin directory itself */
4184:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (obj->attr & AM_DIR) {		/* This object is a sub-directory */
4185:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4186:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fs->fs_type == FS_EXFAT) {
4187:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->c_scl = obj->sclust;							/* Get containing directory inforamation */
4188:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->c_size = ((DWORD)obj->objsize & 0xFFFFFF00) | obj->stat;
4189:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->c_ofs = dp->blk_ofs;
4190:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->sclust = ld_dword(fs->dirbuf + XDIR_FstClus);	/* Get object allocation info */
4191:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->objsize = ld_qword(fs->dirbuf + XDIR_FileSize);
4192:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->stat = fs->dirbuf[XDIR_GenFlags] & 2;
4193:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
4194:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4195:Middlewares/Third_Party/FatFs/src/ff.c **** 					{
4196:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->sclust = ld_clust(fs, dp->dir);	/* Get object allocation info */
4197:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4198:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {						/* This object is a file */
ARM GAS  /tmp/ccwdO2Zj.s 			page 100


4199:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_NO_PATH;
4200:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4201:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4202:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
4203:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->id = fs->id;
4204:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_sdi(dp, 0);			/* Rewind directory */
4205:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
4206:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {
4207:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (obj->sclust) {
4208:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->lockid = inc_lock(dp, 0);	/* Lock the sub directory */
4209:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (!obj->lockid) res = FR_TOO_MANY_OPEN_FILES;
4210:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else {
4211:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->lockid = 0;	/* Root directory need not to be locked */
4212:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4213:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4214:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4215:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4216:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4217:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
4218:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_NO_FILE) res = FR_NO_PATH;
4219:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4220:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) obj->fs = 0;		/* Invalidate the directory object if function faild */
4221:Middlewares/Third_Party/FatFs/src/ff.c **** 
4222:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4223:Middlewares/Third_Party/FatFs/src/ff.c **** }
4224:Middlewares/Third_Party/FatFs/src/ff.c **** 
4225:Middlewares/Third_Party/FatFs/src/ff.c **** 
4226:Middlewares/Third_Party/FatFs/src/ff.c **** 
4227:Middlewares/Third_Party/FatFs/src/ff.c **** 
4228:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4229:Middlewares/Third_Party/FatFs/src/ff.c **** /* Close Directory                                                       */
4230:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4231:Middlewares/Third_Party/FatFs/src/ff.c **** 
4232:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_closedir (
4233:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR *dp		/* Pointer to the directory object to be closed */
4234:Middlewares/Third_Party/FatFs/src/ff.c **** )
4235:Middlewares/Third_Party/FatFs/src/ff.c **** {
4236:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4237:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4238:Middlewares/Third_Party/FatFs/src/ff.c **** 
4239:Middlewares/Third_Party/FatFs/src/ff.c **** 
4240:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&dp->obj, &fs);			/* Check validity of the file object */
4241:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4242:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
4243:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (dp->obj.lockid) {				/* Decrement sub-directory open counter */
4244:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dec_lock(dp->obj.lockid);
4245:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4246:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK)
4247:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4248:Middlewares/Third_Party/FatFs/src/ff.c **** 		{
4249:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->obj.fs = 0;			/* Invalidate directory object */
4250:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4251:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
4252:Middlewares/Third_Party/FatFs/src/ff.c **** 		unlock_fs(fs, FR_OK);		/* Unlock volume */
4253:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4254:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4255:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
ARM GAS  /tmp/ccwdO2Zj.s 			page 101


4256:Middlewares/Third_Party/FatFs/src/ff.c **** }
4257:Middlewares/Third_Party/FatFs/src/ff.c **** 
4258:Middlewares/Third_Party/FatFs/src/ff.c **** 
4259:Middlewares/Third_Party/FatFs/src/ff.c **** 
4260:Middlewares/Third_Party/FatFs/src/ff.c **** 
4261:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4262:Middlewares/Third_Party/FatFs/src/ff.c **** /* Read Directory Entries in Sequence                                    */
4263:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4264:Middlewares/Third_Party/FatFs/src/ff.c **** 
4265:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_readdir (
4266:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,			/* Pointer to the open directory object */
4267:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO* fno		/* Pointer to file information to return */
4268:Middlewares/Third_Party/FatFs/src/ff.c **** )
4269:Middlewares/Third_Party/FatFs/src/ff.c **** {
4270:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4271:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4272:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
4273:Middlewares/Third_Party/FatFs/src/ff.c **** 
4274:Middlewares/Third_Party/FatFs/src/ff.c **** 
4275:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&dp->obj, &fs);	/* Check validity of the directory object */
4276:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4277:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!fno) {
4278:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_sdi(dp, 0);			/* Rewind the directory object */
4279:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
4280:Middlewares/Third_Party/FatFs/src/ff.c **** 			INIT_NAMBUF(fs);
4281:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_read(dp, 0);			/* Read an item */
4282:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_NO_FILE) res = FR_OK;	/* Ignore end of directory */
4283:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {				/* A valid entry is found */
4284:Middlewares/Third_Party/FatFs/src/ff.c **** 				get_fileinfo(dp, fno);		/* Get the object information */
4285:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_next(dp, 0);		/* Increment index for next */
4286:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) res = FR_OK;	/* Ignore end of directory now */
4287:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4288:Middlewares/Third_Party/FatFs/src/ff.c **** 			FREE_NAMBUF();
4289:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4290:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4291:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4292:Middlewares/Third_Party/FatFs/src/ff.c **** }
4293:Middlewares/Third_Party/FatFs/src/ff.c **** 
4294:Middlewares/Third_Party/FatFs/src/ff.c **** 
4295:Middlewares/Third_Party/FatFs/src/ff.c **** 
4296:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FIND
4297:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4298:Middlewares/Third_Party/FatFs/src/ff.c **** /* Find Next File                                                        */
4299:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4300:Middlewares/Third_Party/FatFs/src/ff.c **** 
4301:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_findnext (
4302:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,		/* Pointer to the open directory object */
4303:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO* fno	/* Pointer to the file information structure */
4304:Middlewares/Third_Party/FatFs/src/ff.c **** )
4305:Middlewares/Third_Party/FatFs/src/ff.c **** {
4306:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4307:Middlewares/Third_Party/FatFs/src/ff.c **** 
4308:Middlewares/Third_Party/FatFs/src/ff.c **** 
4309:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
4310:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = f_readdir(dp, fno);		/* Get a directory item */
4311:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK || !fno || !fno->fname[0]) break;	/* Terminate if any error or end of directory 
4312:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (pattern_matching(dp->pat, fno->fname, 0, 0)) break;		/* Test for the file name */
ARM GAS  /tmp/ccwdO2Zj.s 			page 102


4313:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0 && _USE_FIND == 2
4314:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (pattern_matching(dp->pat, fno->altname, 0, 0)) break;	/* Test for alternative name if exist *
4315:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4316:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4317:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
4318:Middlewares/Third_Party/FatFs/src/ff.c **** }
4319:Middlewares/Third_Party/FatFs/src/ff.c **** 
4320:Middlewares/Third_Party/FatFs/src/ff.c **** 
4321:Middlewares/Third_Party/FatFs/src/ff.c **** 
4322:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4323:Middlewares/Third_Party/FatFs/src/ff.c **** /* Find First File                                                       */
4324:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4325:Middlewares/Third_Party/FatFs/src/ff.c **** 
4326:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_findfirst (
4327:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,				/* Pointer to the blank directory object */
4328:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO* fno,			/* Pointer to the file information structure */
4329:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,		/* Pointer to the directory to open */
4330:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* pattern	/* Pointer to the matching pattern */
4331:Middlewares/Third_Party/FatFs/src/ff.c **** )
4332:Middlewares/Third_Party/FatFs/src/ff.c **** {
4333:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4334:Middlewares/Third_Party/FatFs/src/ff.c **** 
4335:Middlewares/Third_Party/FatFs/src/ff.c **** 
4336:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->pat = pattern;		/* Save pointer to pattern string */
4337:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = f_opendir(dp, path);		/* Open the target directory */
4338:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4339:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = f_findnext(dp, fno);	/* Find the first item */
4340:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4341:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
4342:Middlewares/Third_Party/FatFs/src/ff.c **** }
4343:Middlewares/Third_Party/FatFs/src/ff.c **** 
4344:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _USE_FIND */
4345:Middlewares/Third_Party/FatFs/src/ff.c **** 
4346:Middlewares/Third_Party/FatFs/src/ff.c **** 
4347:Middlewares/Third_Party/FatFs/src/ff.c **** 
4348:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE == 0
4349:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4350:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get File Status                                                       */
4351:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4352:Middlewares/Third_Party/FatFs/src/ff.c **** 
4353:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_stat (
4354:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Pointer to the file path */
4355:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO* fno		/* Pointer to file information to return */
4356:Middlewares/Third_Party/FatFs/src/ff.c **** )
4357:Middlewares/Third_Party/FatFs/src/ff.c **** {
4358:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4359:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
4360:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
4361:Middlewares/Third_Party/FatFs/src/ff.c **** 
4362:Middlewares/Third_Party/FatFs/src/ff.c **** 
4363:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
4364:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &dj.obj.fs, 0);
4365:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4366:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(dj.obj.fs);
4367:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);	/* Follow the file path */
4368:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {				/* Follow completed */
4369:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {	/* It is origin directory */
ARM GAS  /tmp/ccwdO2Zj.s 			page 103


4370:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;
4371:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {							/* Found an object */
4372:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fno) get_fileinfo(&dj, fno);
4373:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4374:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4375:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
4376:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4377:Middlewares/Third_Party/FatFs/src/ff.c **** 
4378:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(dj.obj.fs, res);
4379:Middlewares/Third_Party/FatFs/src/ff.c **** }
4380:Middlewares/Third_Party/FatFs/src/ff.c **** 
4381:Middlewares/Third_Party/FatFs/src/ff.c **** 
4382:Middlewares/Third_Party/FatFs/src/ff.c **** 
4383:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
4384:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4385:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get Number of Free Clusters                                           */
4386:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4387:Middlewares/Third_Party/FatFs/src/ff.c **** 
4388:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_getfree (
4389:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Path name of the logical drive number */
4390:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD* nclst,		/* Pointer to a variable to return number of free clusters */
4391:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS** fatfs		/* Pointer to return pointer to corresponding file system object */
4392:Middlewares/Third_Party/FatFs/src/ff.c **** )
4393:Middlewares/Third_Party/FatFs/src/ff.c **** {
4394:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4395:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4396:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD nfree, clst, sect, stat;
4397:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
4398:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *p;
4399:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID obj;
4400:Middlewares/Third_Party/FatFs/src/ff.c **** 
4401:Middlewares/Third_Party/FatFs/src/ff.c **** 
4402:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
4403:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, 0);
4404:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4405:Middlewares/Third_Party/FatFs/src/ff.c **** 		*fatfs = fs;				/* Return ptr to the fs object */
4406:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* If free_clst is valid, return it without full cluster scan */
4407:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->free_clst <= fs->n_fatent - 2) {
4408:Middlewares/Third_Party/FatFs/src/ff.c **** 			*nclst = fs->free_clst;
4409:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
4410:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Get number of free clusters */
4411:Middlewares/Third_Party/FatFs/src/ff.c **** 			nfree = 0;
4412:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_FAT12) {	/* FAT12: Sector unalighed FAT entries */
4413:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = 2; obj.fs = fs;
4414:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {
4415:Middlewares/Third_Party/FatFs/src/ff.c **** 					stat = get_fat(&obj, clst);
4416:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }
4417:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 1) { res = FR_INT_ERR; break; }
4418:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 0) nfree++;
4419:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (++clst < fs->n_fatent);
4420:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
4421:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4422:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fs->fs_type == FS_EXFAT) {	/* exFAT: Scan bitmap table */
4423:Middlewares/Third_Party/FatFs/src/ff.c **** 					BYTE bm;
4424:Middlewares/Third_Party/FatFs/src/ff.c **** 					UINT b;
4425:Middlewares/Third_Party/FatFs/src/ff.c **** 
4426:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = fs->n_fatent - 2;
ARM GAS  /tmp/ccwdO2Zj.s 			page 104


4427:Middlewares/Third_Party/FatFs/src/ff.c **** 					sect = fs->database;
4428:Middlewares/Third_Party/FatFs/src/ff.c **** 					i = 0;
4429:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {
4430:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (i == 0 && (res = move_window(fs, sect++)) != FR_OK) break;
4431:Middlewares/Third_Party/FatFs/src/ff.c **** 						for (b = 8, bm = fs->win[i]; b && clst; b--, clst--) {
4432:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (!(bm & 1)) nfree++;
4433:Middlewares/Third_Party/FatFs/src/ff.c **** 							bm >>= 1;
4434:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
4435:Middlewares/Third_Party/FatFs/src/ff.c **** 						i = (i + 1) % SS(fs);
4436:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (clst);
4437:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else
4438:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4439:Middlewares/Third_Party/FatFs/src/ff.c **** 				{	/* FAT16/32: Sector alighed FAT entries */
4440:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = fs->n_fatent; sect = fs->fatbase;
4441:Middlewares/Third_Party/FatFs/src/ff.c **** 					i = 0; p = 0;
4442:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {
4443:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (i == 0) {
4444:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = move_window(fs, sect++);
4445:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res != FR_OK) break;
4446:Middlewares/Third_Party/FatFs/src/ff.c **** 							p = fs->win;
4447:Middlewares/Third_Party/FatFs/src/ff.c **** 							i = SS(fs);
4448:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
4449:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (fs->fs_type == FS_FAT16) {
4450:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (ld_word(p) == 0) nfree++;
4451:Middlewares/Third_Party/FatFs/src/ff.c **** 							p += 2; i -= 2;
4452:Middlewares/Third_Party/FatFs/src/ff.c **** 						} else {
4453:Middlewares/Third_Party/FatFs/src/ff.c **** 							if ((ld_dword(p) & 0x0FFFFFFF) == 0) nfree++;
4454:Middlewares/Third_Party/FatFs/src/ff.c **** 							p += 4; i -= 4;
4455:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
4456:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (--clst);
4457:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4458:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4459:Middlewares/Third_Party/FatFs/src/ff.c **** 			*nclst = nfree;			/* Return the free clusters */
4460:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->free_clst = nfree;	/* Now free_clst is valid */
4461:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag |= 1;		/* FSInfo is to be updated */
4462:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4463:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4464:Middlewares/Third_Party/FatFs/src/ff.c **** 
4465:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4466:Middlewares/Third_Party/FatFs/src/ff.c **** }
4467:Middlewares/Third_Party/FatFs/src/ff.c **** 
4468:Middlewares/Third_Party/FatFs/src/ff.c **** 
4469:Middlewares/Third_Party/FatFs/src/ff.c **** 
4470:Middlewares/Third_Party/FatFs/src/ff.c **** 
4471:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4472:Middlewares/Third_Party/FatFs/src/ff.c **** /* Truncate File                                                         */
4473:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4474:Middlewares/Third_Party/FatFs/src/ff.c **** 
4475:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_truncate (
4476:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp		/* Pointer to the file object */
4477:Middlewares/Third_Party/FatFs/src/ff.c **** )
4478:Middlewares/Third_Party/FatFs/src/ff.c **** {
4479:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4480:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4481:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ncl;
4482:Middlewares/Third_Party/FatFs/src/ff.c **** 
4483:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/ccwdO2Zj.s 			page 105


4484:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&fp->obj, &fs);	/* Check validity of the file object */
4485:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);
4486:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
4487:Middlewares/Third_Party/FatFs/src/ff.c **** 
4488:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fp->fptr < fp->obj.objsize) {	/* Process when fptr is not on the eof */
4489:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fptr == 0) {	/* When set file size to zero, remove entire cluster chain */
4490:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = remove_chain(&fp->obj, fp->obj.sclust, 0);
4491:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.sclust = 0;
4492:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {				/* When truncate a part of the file, remove remaining clusters */
4493:Middlewares/Third_Party/FatFs/src/ff.c **** 			ncl = get_fat(&fp->obj, fp->clust);
4494:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_OK;
4495:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl == 0xFFFFFFFF) res = FR_DISK_ERR;
4496:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl == 1) res = FR_INT_ERR;
4497:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK && ncl < fs->n_fatent) {
4498:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = remove_chain(&fp->obj, ncl, fp->clust);
4499:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4500:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4501:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->obj.objsize = fp->fptr;	/* Set file size to current R/W point */
4502:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->flag |= FA_MODIFIED;
4503:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
4504:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK && (fp->flag & FA_DIRTY)) {
4505:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) {
4506:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_DISK_ERR;
4507:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
4508:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
4509:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4510:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4511:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4512:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) ABORT(fs, res);
4513:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4514:Middlewares/Third_Party/FatFs/src/ff.c **** 
4515:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4516:Middlewares/Third_Party/FatFs/src/ff.c **** }
4517:Middlewares/Third_Party/FatFs/src/ff.c **** 
4518:Middlewares/Third_Party/FatFs/src/ff.c **** 
4519:Middlewares/Third_Party/FatFs/src/ff.c **** 
4520:Middlewares/Third_Party/FatFs/src/ff.c **** 
4521:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4522:Middlewares/Third_Party/FatFs/src/ff.c **** /* Delete a File/Directory                                               */
4523:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4524:Middlewares/Third_Party/FatFs/src/ff.c **** 
4525:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_unlink (
4526:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path		/* Pointer to the file or directory path */
4527:Middlewares/Third_Party/FatFs/src/ff.c **** )
4528:Middlewares/Third_Party/FatFs/src/ff.c **** {
4529:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4530:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj, sdj;
4531:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD dclst = 0;
4532:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4533:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4534:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID obj;
4535:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4536:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
4537:Middlewares/Third_Party/FatFs/src/ff.c **** 
4538:Middlewares/Third_Party/FatFs/src/ff.c **** 
4539:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
4540:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, FA_WRITE);
ARM GAS  /tmp/ccwdO2Zj.s 			page 106


4541:Middlewares/Third_Party/FatFs/src/ff.c **** 	dj.obj.fs = fs;
4542:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4543:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
4544:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);		/* Follow the file path */
4545:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_RPATH && res == FR_OK && (dj.fn[NSFLAG] & NS_DOT)) {
4546:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_INVALID_NAME;			/* Cannot remove dot entry */
4547:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4548:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
4549:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) res = chk_lock(&dj, 2);	/* Check if it is an open object */
4550:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4551:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {					/* The object is accessible */
4552:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {
4553:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;		/* Cannot remove the origin directory */
4554:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
4555:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dj.obj.attr & AM_RDO) {
4556:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_DENIED;		/* Cannot remove R/O object */
4557:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4558:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4559:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
4560:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4561:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj.fs = fs;
4562:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fs->fs_type == FS_EXFAT) {
4563:Middlewares/Third_Party/FatFs/src/ff.c **** 					obj.sclust = dclst = ld_dword(fs->dirbuf + XDIR_FstClus);
4564:Middlewares/Third_Party/FatFs/src/ff.c **** 					obj.objsize = ld_qword(fs->dirbuf + XDIR_FileSize);
4565:Middlewares/Third_Party/FatFs/src/ff.c **** 					obj.stat = fs->dirbuf[XDIR_GenFlags] & 2;
4566:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else
4567:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4568:Middlewares/Third_Party/FatFs/src/ff.c **** 				{
4569:Middlewares/Third_Party/FatFs/src/ff.c **** 					dclst = ld_clust(fs, dj.dir);
4570:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4571:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dj.obj.attr & AM_DIR) {			/* Is it a sub-directory? */
4572:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0
4573:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (dclst == fs->cdir) {		 		/* Is it the current directory? */
4574:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_DENIED;
4575:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
4576:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4577:Middlewares/Third_Party/FatFs/src/ff.c **** 					{
4578:Middlewares/Third_Party/FatFs/src/ff.c **** 						sdj.obj.fs = fs;						/* Open the sub-directory */
4579:Middlewares/Third_Party/FatFs/src/ff.c **** 						sdj.obj.sclust = dclst;
4580:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4581:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (fs->fs_type == FS_EXFAT) {
4582:Middlewares/Third_Party/FatFs/src/ff.c **** 							sdj.obj.objsize = obj.objsize;
4583:Middlewares/Third_Party/FatFs/src/ff.c **** 							sdj.obj.stat = obj.stat;
4584:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
4585:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4586:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = dir_sdi(&sdj, 0);
4587:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (res == FR_OK) {
4588:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = dir_read(&sdj, 0);			/* Read an item */
4589:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res == FR_OK) res = FR_DENIED;	/* Not empty? */
4590:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res == FR_NO_FILE) res = FR_OK;	/* Empty? */
4591:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
4592:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4593:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4594:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4595:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
4596:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_remove(&dj);			/* Remove the directory entry */
4597:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK && dclst) {	/* Remove the cluster chain if exist */
ARM GAS  /tmp/ccwdO2Zj.s 			page 107


4598:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4599:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = remove_chain(&obj, dclst, 0);
4600:Middlewares/Third_Party/FatFs/src/ff.c **** #else
4601:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = remove_chain(&dj.obj, dclst, 0);
4602:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4603:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4604:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) res = sync_fs(fs);
4605:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4606:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4607:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
4608:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4609:Middlewares/Third_Party/FatFs/src/ff.c **** 
4610:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4611:Middlewares/Third_Party/FatFs/src/ff.c **** }
4612:Middlewares/Third_Party/FatFs/src/ff.c **** 
4613:Middlewares/Third_Party/FatFs/src/ff.c **** 
4614:Middlewares/Third_Party/FatFs/src/ff.c **** 
4615:Middlewares/Third_Party/FatFs/src/ff.c **** 
4616:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4617:Middlewares/Third_Party/FatFs/src/ff.c **** /* Create a Directory                                                    */
4618:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4619:Middlewares/Third_Party/FatFs/src/ff.c **** 
4620:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_mkdir (
4621:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path		/* Pointer to the directory path */
4622:Middlewares/Third_Party/FatFs/src/ff.c **** )
4623:Middlewares/Third_Party/FatFs/src/ff.c **** {
4624:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4625:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
4626:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4627:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *dir;
4628:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT n;
4629:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD dsc, dcl, pcl, tm;
4630:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
4631:Middlewares/Third_Party/FatFs/src/ff.c **** 
4632:Middlewares/Third_Party/FatFs/src/ff.c **** 
4633:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
4634:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, FA_WRITE);
4635:Middlewares/Third_Party/FatFs/src/ff.c **** 	dj.obj.fs = fs;
4636:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4637:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
4638:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);			/* Follow the file path */
4639:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) res = FR_EXIST;		/* Any object with same name is already existing */
4640:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_RPATH && res == FR_NO_FILE && (dj.fn[NSFLAG] & NS_DOT)) {
4641:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_INVALID_NAME;
4642:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4643:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_NO_FILE) {				/* Can create a new directory */
4644:Middlewares/Third_Party/FatFs/src/ff.c **** 			dcl = create_chain(&dj.obj, 0);		/* Allocate a cluster for the new directory table */
4645:Middlewares/Third_Party/FatFs/src/ff.c **** 			dj.obj.objsize = (DWORD)fs->csize * SS(fs);
4646:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_OK;
4647:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dcl == 0) res = FR_DENIED;		/* No space to allocate a new cluster */
4648:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dcl == 1) res = FR_INT_ERR;
4649:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dcl == 0xFFFFFFFF) res = FR_DISK_ERR;
4650:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) res = sync_window(fs);	/* Flush FAT */
4651:Middlewares/Third_Party/FatFs/src/ff.c **** 			tm = GET_FATTIME();
4652:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {					/* Initialize the new directory table */
4653:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc = clust2sect(fs, dcl);
4654:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir = fs->win;
ARM GAS  /tmp/ccwdO2Zj.s 			page 108


4655:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_set(dir, 0, SS(fs));
4656:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {
4657:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_set(dir + DIR_Name, ' ', 11);	/* Create "." entry */
4658:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[DIR_Name] = '.';
4659:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[DIR_Attr] = AM_DIR;
4660:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dir + DIR_ModTime, tm);
4661:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dir, dcl);
4662:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(dir + SZDIRE, dir, SZDIRE); 	/* Create ".." entry */
4663:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[SZDIRE + 1] = '.'; pcl = dj.obj.sclust;
4664:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fs->fs_type == FS_FAT32 && pcl == fs->dirbase) pcl = 0;
4665:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dir + SZDIRE, pcl);
4666:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4667:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (n = fs->csize; n; n--) {	/* Write dot entries and clear following sectors */
4668:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->winsect = dsc++;
4669:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 1;
4670:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = sync_window(fs);
4671:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res != FR_OK) break;
4672:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_set(dir, 0, SS(fs));
4673:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4674:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4675:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
4676:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_register(&dj);	/* Register the object to the directoy */
4677:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4678:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
4679:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4680:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fs->fs_type == FS_EXFAT) {	/* Initialize directory entry block */
4681:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(fs->dirbuf + XDIR_ModTime, tm);	/* Created time */
4682:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(fs->dirbuf + XDIR_FstClus, dcl);	/* Table start cluster */
4683:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(fs->dirbuf + XDIR_FileSize, (DWORD)dj.obj.objsize);	/* File size needs to be valid */
4684:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(fs->dirbuf + XDIR_ValidFileSize, (DWORD)dj.obj.objsize);
4685:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->dirbuf[XDIR_GenFlags] = 3;				/* Initialize the object flag (contiguous) */
4686:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->dirbuf[XDIR_Attr] = AM_DIR;				/* Attribute */
4687:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = store_xdir(&dj);
4688:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else
4689:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4690:Middlewares/Third_Party/FatFs/src/ff.c **** 				{
4691:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir = dj.dir;
4692:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dir + DIR_ModTime, tm);	/* Created time */
4693:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dir, dcl);				/* Table start cluster */
4694:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[DIR_Attr] = AM_DIR;				/* Attribute */
4695:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 1;
4696:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4697:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {
4698:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = sync_fs(fs);
4699:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4700:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
4701:Middlewares/Third_Party/FatFs/src/ff.c **** 				remove_chain(&dj.obj, dcl, 0);		/* Could not register, remove cluster chain */
4702:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4703:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4704:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
4705:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4706:Middlewares/Third_Party/FatFs/src/ff.c **** 
4707:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4708:Middlewares/Third_Party/FatFs/src/ff.c **** }
4709:Middlewares/Third_Party/FatFs/src/ff.c **** 
4710:Middlewares/Third_Party/FatFs/src/ff.c **** 
4711:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/ccwdO2Zj.s 			page 109


4712:Middlewares/Third_Party/FatFs/src/ff.c **** 
4713:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4714:Middlewares/Third_Party/FatFs/src/ff.c **** /* Rename a File/Directory                                               */
4715:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4716:Middlewares/Third_Party/FatFs/src/ff.c **** 
4717:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_rename (
4718:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path_old,	/* Pointer to the object name to be renamed */
4719:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path_new	/* Pointer to the new name */
4720:Middlewares/Third_Party/FatFs/src/ff.c **** )
4721:Middlewares/Third_Party/FatFs/src/ff.c **** {
4722:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4723:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR djo, djn;
4724:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4725:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE buf[_FS_EXFAT ? SZDIRE * 2 : 24], *dir;
4726:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD dw;
4727:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
4728:Middlewares/Third_Party/FatFs/src/ff.c **** 
4729:Middlewares/Third_Party/FatFs/src/ff.c **** 
4730:Middlewares/Third_Party/FatFs/src/ff.c **** 	get_ldnumber(&path_new);						/* Snip drive number of new name off */
4731:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path_old, &fs, FA_WRITE);	/* Get logical drive of the old object */
4732:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4733:Middlewares/Third_Party/FatFs/src/ff.c **** 		djo.obj.fs = fs;
4734:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
4735:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&djo, path_old);		/* Check old object */
4736:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK && (djo.fn[NSFLAG] & (NS_DOT | NS_NONAME))) res = FR_INVALID_NAME;	/* Check vali
4737:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
4738:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
4739:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = chk_lock(&djo, 2);
4740:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4741:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4742:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {						/* Object to be renamed is found */
4743:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4744:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_EXFAT) {	/* At exFAT */
4745:Middlewares/Third_Party/FatFs/src/ff.c **** 				BYTE nf, nn;
4746:Middlewares/Third_Party/FatFs/src/ff.c **** 				WORD nh;
4747:Middlewares/Third_Party/FatFs/src/ff.c **** 
4748:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_cpy(buf, fs->dirbuf, SZDIRE * 2);	/* Save 85+C0 entry of old object */
4749:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_cpy(&djn, &djo, sizeof djo);
4750:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = follow_path(&djn, path_new);		/* Make sure if new object name is not in use */
4751:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {						/* Is new name already in use by any other object? */
4752:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = (djn.obj.sclust == djo.obj.sclust && djn.dptr == djo.dptr) ? FR_NO_FILE : FR_EXIST;
4753:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4754:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) { 				/* It is a valid path and no name collision */
4755:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = dir_register(&djn);			/* Register the new entry */
4756:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) {
4757:Middlewares/Third_Party/FatFs/src/ff.c **** 						nf = fs->dirbuf[XDIR_NumSec]; nn = fs->dirbuf[XDIR_NumName];
4758:Middlewares/Third_Party/FatFs/src/ff.c **** 						nh = ld_word(fs->dirbuf + XDIR_NameHash);
4759:Middlewares/Third_Party/FatFs/src/ff.c **** 						mem_cpy(fs->dirbuf, buf, SZDIRE * 2);
4760:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->dirbuf[XDIR_NumSec] = nf; fs->dirbuf[XDIR_NumName] = nn;
4761:Middlewares/Third_Party/FatFs/src/ff.c **** 						st_word(fs->dirbuf + XDIR_NameHash, nh);
4762:Middlewares/Third_Party/FatFs/src/ff.c **** /* Start of critical section where an interruption can cause a cross-link */
4763:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = store_xdir(&djn);
4764:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4765:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4766:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else
4767:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4768:Middlewares/Third_Party/FatFs/src/ff.c **** 			{	/* At FAT12/FAT16/FAT32 */
ARM GAS  /tmp/ccwdO2Zj.s 			page 110


4769:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_cpy(buf, djo.dir + DIR_Attr, 21);	/* Save information about the object except name */
4770:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_cpy(&djn, &djo, sizeof (DIR));		/* Duplicate the directory object */
4771:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = follow_path(&djn, path_new);		/* Make sure if new object name is not in use */
4772:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {						/* Is new name already in use by any other object? */
4773:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = (djn.obj.sclust == djo.obj.sclust && djn.dptr == djo.dptr) ? FR_NO_FILE : FR_EXIST;
4774:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4775:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) { 				/* It is a valid path and no name collision */
4776:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = dir_register(&djn);			/* Register the new entry */
4777:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) {
4778:Middlewares/Third_Party/FatFs/src/ff.c **** 						dir = djn.dir;					/* Copy information about object except name */
4779:Middlewares/Third_Party/FatFs/src/ff.c **** 						mem_cpy(dir + 13, buf + 2, 19);
4780:Middlewares/Third_Party/FatFs/src/ff.c **** 						dir[DIR_Attr] = buf[0] | AM_ARC;
4781:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->wflag = 1;
4782:Middlewares/Third_Party/FatFs/src/ff.c **** 						if ((dir[DIR_Attr] & AM_DIR) && djo.obj.sclust != djn.obj.sclust) {	/* Update .. entry in the
4783:Middlewares/Third_Party/FatFs/src/ff.c **** 							dw = clust2sect(fs, ld_clust(fs, dir));
4784:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (!dw) {
4785:Middlewares/Third_Party/FatFs/src/ff.c **** 								res = FR_INT_ERR;
4786:Middlewares/Third_Party/FatFs/src/ff.c **** 							} else {
4787:Middlewares/Third_Party/FatFs/src/ff.c **** /* Start of critical section where an interruption can cause a cross-link */
4788:Middlewares/Third_Party/FatFs/src/ff.c **** 								res = move_window(fs, dw);
4789:Middlewares/Third_Party/FatFs/src/ff.c **** 								dir = fs->win + SZDIRE * 1;	/* Ptr to .. entry */
4790:Middlewares/Third_Party/FatFs/src/ff.c **** 								if (res == FR_OK && dir[1] == '.') {
4791:Middlewares/Third_Party/FatFs/src/ff.c **** 									st_clust(fs, dir, djn.obj.sclust);
4792:Middlewares/Third_Party/FatFs/src/ff.c **** 									fs->wflag = 1;
4793:Middlewares/Third_Party/FatFs/src/ff.c **** 								}
4794:Middlewares/Third_Party/FatFs/src/ff.c **** 							}
4795:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
4796:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4797:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4798:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4799:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
4800:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_remove(&djo);		/* Remove old entry */
4801:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {
4802:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = sync_fs(fs);
4803:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4804:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4805:Middlewares/Third_Party/FatFs/src/ff.c **** /* End of the critical section */
4806:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4807:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
4808:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4809:Middlewares/Third_Party/FatFs/src/ff.c **** 
4810:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4811:Middlewares/Third_Party/FatFs/src/ff.c **** }
4812:Middlewares/Third_Party/FatFs/src/ff.c **** 
4813:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
4814:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _FS_MINIMIZE == 0 */
4815:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _FS_MINIMIZE <= 1 */
4816:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _FS_MINIMIZE <= 2 */
4817:Middlewares/Third_Party/FatFs/src/ff.c **** 
4818:Middlewares/Third_Party/FatFs/src/ff.c **** 
4819:Middlewares/Third_Party/FatFs/src/ff.c **** 
4820:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_CHMOD && !_FS_READONLY
4821:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4822:Middlewares/Third_Party/FatFs/src/ff.c **** /* Change Attribute                                                      */
4823:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4824:Middlewares/Third_Party/FatFs/src/ff.c **** 
4825:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_chmod (
ARM GAS  /tmp/ccwdO2Zj.s 			page 111


4826:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Pointer to the file path */
4827:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE attr,			/* Attribute bits */
4828:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE mask			/* Attribute mask to change */
4829:Middlewares/Third_Party/FatFs/src/ff.c **** )
4830:Middlewares/Third_Party/FatFs/src/ff.c **** {
4831:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4832:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
4833:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4834:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
4835:Middlewares/Third_Party/FatFs/src/ff.c **** 
4836:Middlewares/Third_Party/FatFs/src/ff.c **** 
4837:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, FA_WRITE);	/* Get logical drive */
4838:Middlewares/Third_Party/FatFs/src/ff.c **** 	dj.obj.fs = fs;
4839:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4840:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
4841:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);	/* Follow the file path */
4842:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK && (dj.fn[NSFLAG] & (NS_DOT | NS_NONAME))) res = FR_INVALID_NAME;	/* Check objec
4843:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
4844:Middlewares/Third_Party/FatFs/src/ff.c **** 			mask &= AM_RDO|AM_HID|AM_SYS|AM_ARC;	/* Valid attribute mask */
4845:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4846:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_EXFAT) {
4847:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->dirbuf[XDIR_Attr] = (attr & mask) | (fs->dirbuf[XDIR_Attr] & (BYTE)~mask);	/* Apply attribu
4848:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = store_xdir(&dj);
4849:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else
4850:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4851:Middlewares/Third_Party/FatFs/src/ff.c **** 			{
4852:Middlewares/Third_Party/FatFs/src/ff.c **** 				dj.dir[DIR_Attr] = (attr & mask) | (dj.dir[DIR_Attr] & (BYTE)~mask);	/* Apply attribute change 
4853:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->wflag = 1;
4854:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4855:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
4856:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = sync_fs(fs);
4857:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4858:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4859:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
4860:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4861:Middlewares/Third_Party/FatFs/src/ff.c **** 
4862:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4863:Middlewares/Third_Party/FatFs/src/ff.c **** }
4864:Middlewares/Third_Party/FatFs/src/ff.c **** 
4865:Middlewares/Third_Party/FatFs/src/ff.c **** 
4866:Middlewares/Third_Party/FatFs/src/ff.c **** 
4867:Middlewares/Third_Party/FatFs/src/ff.c **** 
4868:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4869:Middlewares/Third_Party/FatFs/src/ff.c **** /* Change Timestamp                                                      */
4870:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4871:Middlewares/Third_Party/FatFs/src/ff.c **** 
4872:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_utime (
4873:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Pointer to the file/directory name */
4874:Middlewares/Third_Party/FatFs/src/ff.c **** 	const FILINFO* fno	/* Pointer to the time stamp to be set */
4875:Middlewares/Third_Party/FatFs/src/ff.c **** )
4876:Middlewares/Third_Party/FatFs/src/ff.c **** {
4877:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4878:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
4879:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4880:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
4881:Middlewares/Third_Party/FatFs/src/ff.c **** 
4882:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/ccwdO2Zj.s 			page 112


4883:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, FA_WRITE);	/* Get logical drive */
4884:Middlewares/Third_Party/FatFs/src/ff.c **** 	dj.obj.fs = fs;
4885:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4886:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
4887:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);	/* Follow the file path */
4888:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK && (dj.fn[NSFLAG] & (NS_DOT | NS_NONAME))) res = FR_INVALID_NAME;	/* Check objec
4889:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
4890:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4891:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_EXFAT) {
4892:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(fs->dirbuf + XDIR_ModTime, (DWORD)fno->fdate << 16 | fno->ftime);
4893:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = store_xdir(&dj);
4894:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else
4895:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4896:Middlewares/Third_Party/FatFs/src/ff.c **** 			{
4897:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(dj.dir + DIR_ModTime, (DWORD)fno->fdate << 16 | fno->ftime);
4898:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->wflag = 1;
4899:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4900:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
4901:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = sync_fs(fs);
4902:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4903:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4904:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
4905:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4906:Middlewares/Third_Party/FatFs/src/ff.c **** 
4907:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4908:Middlewares/Third_Party/FatFs/src/ff.c **** }
4909:Middlewares/Third_Party/FatFs/src/ff.c **** 
4910:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _USE_CHMOD && !_FS_READONLY */
4911:Middlewares/Third_Party/FatFs/src/ff.c **** 
4912:Middlewares/Third_Party/FatFs/src/ff.c **** 
4913:Middlewares/Third_Party/FatFs/src/ff.c **** 
4914:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LABEL
4915:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4916:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get Volume Label                                                      */
4917:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4918:Middlewares/Third_Party/FatFs/src/ff.c **** 
4919:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_getlabel (
4920:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Path name of the logical drive number */
4921:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR* label,		/* Pointer to a buffer to return the volume label */
4922:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD* vsn			/* Pointer to a variable to return the volume serial number */
4923:Middlewares/Third_Party/FatFs/src/ff.c **** )
4924:Middlewares/Third_Party/FatFs/src/ff.c **** {
4925:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4926:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
4927:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4928:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT si, di;
4929:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE || _FS_EXFAT
4930:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR w;
4931:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4932:Middlewares/Third_Party/FatFs/src/ff.c **** 
4933:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
4934:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, 0);
4935:Middlewares/Third_Party/FatFs/src/ff.c **** 
4936:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get volume label */
4937:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK && label) {
4938:Middlewares/Third_Party/FatFs/src/ff.c **** 		dj.obj.fs = fs; dj.obj.sclust = 0;	/* Open root directory */
4939:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_sdi(&dj, 0);
ARM GAS  /tmp/ccwdO2Zj.s 			page 113


4940:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
4941:Middlewares/Third_Party/FatFs/src/ff.c **** 		 	res = dir_read(&dj, 1);			/* Find a volume label entry */
4942:Middlewares/Third_Party/FatFs/src/ff.c **** 		 	if (res == FR_OK) {
4943:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4944:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fs->fs_type == FS_EXFAT) {
4945:Middlewares/Third_Party/FatFs/src/ff.c **** 					for (si = di = 0; si < dj.dir[XDIR_NumLabel]; si++) {	/* Extract volume label from 83 entry */
4946:Middlewares/Third_Party/FatFs/src/ff.c **** 						w = ld_word(dj.dir + XDIR_Label + si * 2);
4947:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE
4948:Middlewares/Third_Party/FatFs/src/ff.c **** 						label[di++] = w;
4949:Middlewares/Third_Party/FatFs/src/ff.c **** #else
4950:Middlewares/Third_Party/FatFs/src/ff.c **** 						w = ff_convert(w, 0);	/* Unicode -> OEM */
4951:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (w == 0) w = '?';	/* Replace wrong character */
4952:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (_DF1S && w >= 0x100) label[di++] = (char)(w >> 8);
4953:Middlewares/Third_Party/FatFs/src/ff.c **** 						label[di++] = (char)w;
4954:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4955:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4956:Middlewares/Third_Party/FatFs/src/ff.c **** 					label[di] = 0;
4957:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else
4958:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4959:Middlewares/Third_Party/FatFs/src/ff.c **** 				{
4960:Middlewares/Third_Party/FatFs/src/ff.c **** 					si = di = 0;		/* Extract volume label from AM_VOL entry with code comversion */
4961:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {
4962:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE
4963:Middlewares/Third_Party/FatFs/src/ff.c **** 						w = (si < 11) ? dj.dir[si++] : ' ';
4964:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (IsDBCS1(w) && si < 11 && IsDBCS2(dj.dir[si])) {
4965:Middlewares/Third_Party/FatFs/src/ff.c **** 							w = w << 8 | dj.dir[si++];
4966:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
4967:Middlewares/Third_Party/FatFs/src/ff.c **** 						label[di++] = ff_convert(w, 1);	/* OEM -> Unicode */
4968:Middlewares/Third_Party/FatFs/src/ff.c **** #else
4969:Middlewares/Third_Party/FatFs/src/ff.c **** 						label[di++] = dj.dir[si++];
4970:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4971:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (di < 11);
4972:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {				/* Truncate trailing spaces */
4973:Middlewares/Third_Party/FatFs/src/ff.c **** 						label[di] = 0;
4974:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (di == 0) break;
4975:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (label[--di] == ' ');
4976:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4977:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4978:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4979:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_NO_FILE) {	/* No label entry and return nul string */
4980:Middlewares/Third_Party/FatFs/src/ff.c **** 			label[0] = 0;
4981:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_OK;
4982:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4983:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4984:Middlewares/Third_Party/FatFs/src/ff.c **** 
4985:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get volume serial number */
4986:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK && vsn) {
4987:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(fs, fs->volbase);
4988:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
4989:Middlewares/Third_Party/FatFs/src/ff.c **** 			switch (fs->fs_type) {
4990:Middlewares/Third_Party/FatFs/src/ff.c **** 			case FS_EXFAT:
4991:Middlewares/Third_Party/FatFs/src/ff.c **** 				di = BPB_VolIDEx; break;
4992:Middlewares/Third_Party/FatFs/src/ff.c **** 
4993:Middlewares/Third_Party/FatFs/src/ff.c **** 			case FS_FAT32:
4994:Middlewares/Third_Party/FatFs/src/ff.c **** 				di = BS_VolID32; break;
4995:Middlewares/Third_Party/FatFs/src/ff.c **** 
4996:Middlewares/Third_Party/FatFs/src/ff.c **** 			default:
ARM GAS  /tmp/ccwdO2Zj.s 			page 114


4997:Middlewares/Third_Party/FatFs/src/ff.c **** 				di = BS_VolID;
4998:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4999:Middlewares/Third_Party/FatFs/src/ff.c **** 			*vsn = ld_dword(fs->win + di);
5000:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5001:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5002:Middlewares/Third_Party/FatFs/src/ff.c **** 
5003:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
5004:Middlewares/Third_Party/FatFs/src/ff.c **** }
5005:Middlewares/Third_Party/FatFs/src/ff.c **** 
5006:Middlewares/Third_Party/FatFs/src/ff.c **** 
5007:Middlewares/Third_Party/FatFs/src/ff.c **** 
5008:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
5009:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5010:Middlewares/Third_Party/FatFs/src/ff.c **** /* Set Volume Label                                                      */
5011:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5012:Middlewares/Third_Party/FatFs/src/ff.c **** 
5013:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_setlabel (
5014:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* label	/* Pointer to the volume label to set */
5015:Middlewares/Third_Party/FatFs/src/ff.c **** )
5016:Middlewares/Third_Party/FatFs/src/ff.c **** {
5017:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
5018:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
5019:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
5020:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE dirvn[22];
5021:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, j, slen;
5022:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR w;
5023:Middlewares/Third_Party/FatFs/src/ff.c **** 	static const char badchr[] = "\"*+,.:;<=>\?[]|\x7F";
5024:Middlewares/Third_Party/FatFs/src/ff.c **** 
5025:Middlewares/Third_Party/FatFs/src/ff.c **** 
5026:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
5027:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&label, &fs, FA_WRITE);
5028:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) LEAVE_FF(fs, res);
5029:Middlewares/Third_Party/FatFs/src/ff.c **** 	dj.obj.fs = fs;
5030:Middlewares/Third_Party/FatFs/src/ff.c **** 
5031:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get length of given volume label */
5032:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (slen = 0; (UINT)label[slen] >= ' '; slen++) ;	/* Get name length */
5033:Middlewares/Third_Party/FatFs/src/ff.c **** 
5034:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
5035:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
5036:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = j = 0; i < slen; ) {	/* Create volume label in directory form */
5037:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = label[i++];
5038:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_LFN_UNICODE
5039:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (IsDBCS1(w)) {
5040:Middlewares/Third_Party/FatFs/src/ff.c **** 				w = (i < slen && IsDBCS2(label[i])) ? w << 8 | (BYTE)label[i++] : 0;
5041:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5042:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = ff_convert(w, 1);
5043:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5044:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (w == 0 || chk_chr(badchr, w) || j == 22) {	/* Check validity check validity of the volume la
5045:Middlewares/Third_Party/FatFs/src/ff.c **** 				LEAVE_FF(fs, FR_INVALID_NAME);
5046:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5047:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(dirvn + j, w); j += 2;
5048:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5049:Middlewares/Third_Party/FatFs/src/ff.c **** 		slen = j;
5050:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else
5051:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5052:Middlewares/Third_Party/FatFs/src/ff.c **** 	{	/* On the FAT12/16/32 volume */
5053:Middlewares/Third_Party/FatFs/src/ff.c **** 		for ( ; slen && label[slen - 1] == ' '; slen--) ;	/* Remove trailing spaces */
ARM GAS  /tmp/ccwdO2Zj.s 			page 115


5054:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (slen) {		/* Is there a volume label to be set? */
5055:Middlewares/Third_Party/FatFs/src/ff.c **** 			dirvn[0] = 0; i = j = 0;	/* Create volume label in directory form */
5056:Middlewares/Third_Party/FatFs/src/ff.c **** 			do {
5057:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE
5058:Middlewares/Third_Party/FatFs/src/ff.c **** 				w = ff_convert(ff_wtoupper(label[i++]), 0);
5059:Middlewares/Third_Party/FatFs/src/ff.c **** #else
5060:Middlewares/Third_Party/FatFs/src/ff.c **** 				w = (BYTE)label[i++];
5061:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (IsDBCS1(w)) {
5062:Middlewares/Third_Party/FatFs/src/ff.c **** 					w = (j < 10 && i < slen && IsDBCS2(label[i])) ? w << 8 | (BYTE)label[i++] : 0;
5063:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5064:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
5065:Middlewares/Third_Party/FatFs/src/ff.c **** 				w = ff_convert(ff_wtoupper(ff_convert(w, 1)), 0);
5066:Middlewares/Third_Party/FatFs/src/ff.c **** #else
5067:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (IsLower(w)) w -= 0x20;			/* To upper ASCII characters */
5068:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _EXCVT
5069:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (w >= 0x80) w = ExCvt[w - 0x80];	/* To upper extended characters (SBCS cfg) */
5070:Middlewares/Third_Party/FatFs/src/ff.c **** #else
5071:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!_DF1S && w >= 0x80) w = 0;		/* Reject extended characters (ASCII cfg) */
5072:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5073:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5074:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5075:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (w == 0 || chk_chr(badchr, w) || j >= (UINT)((w >= 0x100) ? 10 : 11)) {	/* Reject invalid ch
5076:Middlewares/Third_Party/FatFs/src/ff.c **** 					LEAVE_FF(fs, FR_INVALID_NAME);
5077:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5078:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (w >= 0x100) dirvn[j++] = (BYTE)(w >> 8);
5079:Middlewares/Third_Party/FatFs/src/ff.c **** 				dirvn[j++] = (BYTE)w;
5080:Middlewares/Third_Party/FatFs/src/ff.c **** 			} while (i < slen);
5081:Middlewares/Third_Party/FatFs/src/ff.c **** 			while (j < 11) dirvn[j++] = ' ';	/* Fill remaining name field */
5082:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dirvn[0] == DDEM) LEAVE_FF(fs, FR_INVALID_NAME);	/* Reject illegal name (heading DDEM) */
5083:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5084:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5085:Middlewares/Third_Party/FatFs/src/ff.c **** 
5086:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Set volume label */
5087:Middlewares/Third_Party/FatFs/src/ff.c **** 	dj.obj.sclust = 0;		/* Open root directory */
5088:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_sdi(&dj, 0);
5089:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
5090:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_read(&dj, 1);	/* Get volume label entry */
5091:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
5092:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (_FS_EXFAT && fs->fs_type == FS_EXFAT) {
5093:Middlewares/Third_Party/FatFs/src/ff.c **** 				dj.dir[XDIR_NumLabel] = (BYTE)(slen / 2);	/* Change the volume label */
5094:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_cpy(dj.dir + XDIR_Label, dirvn, slen);
5095:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
5096:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (slen) {
5097:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(dj.dir, dirvn, 11);	/* Change the volume label */
5098:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
5099:Middlewares/Third_Party/FatFs/src/ff.c **** 					dj.dir[DIR_Name] = DDEM;	/* Remove the volume label */
5100:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5101:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5102:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
5103:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = sync_fs(fs);
5104:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {			/* No volume label entry is found or error */
5105:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_NO_FILE) {
5106:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_OK;
5107:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (slen) {	/* Create a volume label entry */
5108:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = dir_alloc(&dj, 1);	/* Allocate an entry */
5109:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) {
5110:Middlewares/Third_Party/FatFs/src/ff.c **** 						mem_set(dj.dir, 0, SZDIRE);	/* Clear the entry */
ARM GAS  /tmp/ccwdO2Zj.s 			page 116


5111:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (_FS_EXFAT && fs->fs_type == FS_EXFAT) {
5112:Middlewares/Third_Party/FatFs/src/ff.c **** 							dj.dir[XDIR_Type] = 0x83;		/* Create 83 entry */
5113:Middlewares/Third_Party/FatFs/src/ff.c **** 							dj.dir[XDIR_NumLabel] = (BYTE)(slen / 2);
5114:Middlewares/Third_Party/FatFs/src/ff.c **** 							mem_cpy(dj.dir + XDIR_Label, dirvn, slen);
5115:Middlewares/Third_Party/FatFs/src/ff.c **** 						} else {
5116:Middlewares/Third_Party/FatFs/src/ff.c **** 							dj.dir[DIR_Attr] = AM_VOL;		/* Create volume label entry */
5117:Middlewares/Third_Party/FatFs/src/ff.c **** 							mem_cpy(dj.dir, dirvn, 11);
5118:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
5119:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->wflag = 1;
5120:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = sync_fs(fs);
5121:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
5122:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5123:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5124:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5125:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5126:Middlewares/Third_Party/FatFs/src/ff.c **** 
5127:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
5128:Middlewares/Third_Party/FatFs/src/ff.c **** }
5129:Middlewares/Third_Party/FatFs/src/ff.c **** 
5130:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
5131:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _USE_LABEL */
5132:Middlewares/Third_Party/FatFs/src/ff.c **** 
5133:Middlewares/Third_Party/FatFs/src/ff.c **** 
5134:Middlewares/Third_Party/FatFs/src/ff.c **** 
5135:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_EXPAND && !_FS_READONLY
5136:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5137:Middlewares/Third_Party/FatFs/src/ff.c **** /* Allocate a Contiguous Blocks to the File                              */
5138:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5139:Middlewares/Third_Party/FatFs/src/ff.c **** 
5140:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_expand (
5141:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp,		/* Pointer to the file object */
5142:Middlewares/Third_Party/FatFs/src/ff.c **** 	FSIZE_t fsz,	/* File size to be expanded to */
5143:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE opt		/* Operation mode 0:Find and prepare or 1:Find and allocate */
5144:Middlewares/Third_Party/FatFs/src/ff.c **** )
5145:Middlewares/Third_Party/FatFs/src/ff.c **** {
5146:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
5147:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
5148:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD n, clst, stcl, scl, ncl, tcl, lclst;
5149:Middlewares/Third_Party/FatFs/src/ff.c **** 
5150:Middlewares/Third_Party/FatFs/src/ff.c **** 
5151:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&fp->obj, &fs);		/* Check validity of the file object */
5152:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);
5153:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fsz == 0 || fp->obj.objsize != 0 || !(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);
5154:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
5155:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type != FS_EXFAT && fsz >= 0x100000000) LEAVE_FF(fs, FR_DENIED);	/* Check if in size li
5156:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5157:Middlewares/Third_Party/FatFs/src/ff.c **** 	n = (DWORD)fs->csize * SS(fs);	/* Cluster size */
5158:Middlewares/Third_Party/FatFs/src/ff.c **** 	tcl = (DWORD)(fsz / n) + ((fsz & (n - 1)) ? 1 : 0);	/* Number of clusters required */
5159:Middlewares/Third_Party/FatFs/src/ff.c **** 	stcl = fs->last_clst; lclst = 0;
5160:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stcl < 2 || stcl >= fs->n_fatent) stcl = 2;
5161:Middlewares/Third_Party/FatFs/src/ff.c **** 
5162:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
5163:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_EXFAT) {
5164:Middlewares/Third_Party/FatFs/src/ff.c **** 		scl = find_bitmap(fs, stcl, tcl);			/* Find a contiguous cluster block */
5165:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (scl == 0) res = FR_DENIED;				/* No contiguous cluster block was found */
5166:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (scl == 0xFFFFFFFF) res = FR_DISK_ERR;
5167:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {	/* A contiguous free area is found */
ARM GAS  /tmp/ccwdO2Zj.s 			page 117


5168:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (opt) {		/* Allocate it now */
5169:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = change_bitmap(fs, scl, tcl, 1);	/* Mark the cluster block 'in use' */
5170:Middlewares/Third_Party/FatFs/src/ff.c **** 				lclst = scl + tcl - 1;
5171:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {		/* Set it as suggested point for next allocation */
5172:Middlewares/Third_Party/FatFs/src/ff.c **** 				lclst = scl - 1;
5173:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5174:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5175:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else
5176:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5177:Middlewares/Third_Party/FatFs/src/ff.c **** 	{
5178:Middlewares/Third_Party/FatFs/src/ff.c **** 		scl = clst = stcl; ncl = 0;
5179:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (;;) {	/* Find a contiguous cluster block */
5180:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = get_fat(&fp->obj, clst);
5181:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (++clst >= fs->n_fatent) clst = 2;
5182:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (n == 1) { res = FR_INT_ERR; break; }
5183:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (n == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }
5184:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (n == 0) {	/* Is it a free cluster? */
5185:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (++ncl == tcl) break;	/* Break if a contiguous cluster block is found */
5186:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
5187:Middlewares/Third_Party/FatFs/src/ff.c **** 				scl = clst; ncl = 0;		/* Not a free cluster */
5188:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5189:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst == stcl) { res = FR_DENIED; break; }	/* No contiguous cluster? */
5190:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5191:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {	/* A contiguous free area is found */
5192:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (opt) {		/* Allocate it now */
5193:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (clst = scl, n = tcl; n; clst++, n--) {	/* Create a cluster chain on the FAT */
5194:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = put_fat(fs, clst, (n == 1) ? 0xFFFFFFFF : clst + 1);
5195:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res != FR_OK) break;
5196:Middlewares/Third_Party/FatFs/src/ff.c **** 					lclst = clst;
5197:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5198:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {		/* Set it as suggested point for next allocation */
5199:Middlewares/Third_Party/FatFs/src/ff.c **** 				lclst = scl - 1;
5200:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5201:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5202:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5203:Middlewares/Third_Party/FatFs/src/ff.c **** 
5204:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
5205:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->last_clst = lclst;		/* Set suggested start cluster to start next */
5206:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (opt) {	/* Is it allocated now? */
5207:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.sclust = scl;		/* Update object allocation information */
5208:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.objsize = fsz;
5209:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (_FS_EXFAT) fp->obj.stat = 2;	/* Set status 'contiguous chain' */
5210:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->flag |= FA_MODIFIED;
5211:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->free_clst <= fs->n_fatent - 2) {	/* Update FSINFO */
5212:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->free_clst -= tcl;
5213:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->fsi_flag |= 1;
5214:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5215:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5216:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5217:Middlewares/Third_Party/FatFs/src/ff.c **** 
5218:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
5219:Middlewares/Third_Party/FatFs/src/ff.c **** }
5220:Middlewares/Third_Party/FatFs/src/ff.c **** 
5221:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _USE_EXPAND && !_FS_READONLY */
5222:Middlewares/Third_Party/FatFs/src/ff.c **** 
5223:Middlewares/Third_Party/FatFs/src/ff.c **** 
5224:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/ccwdO2Zj.s 			page 118


5225:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FORWARD
5226:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5227:Middlewares/Third_Party/FatFs/src/ff.c **** /* Forward data to the stream directly                                   */
5228:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5229:Middlewares/Third_Party/FatFs/src/ff.c **** 
5230:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_forward (
5231:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp, 						/* Pointer to the file object */
5232:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT (*func)(const BYTE*,UINT),	/* Pointer to the streaming function */
5233:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT btf,						/* Number of bytes to forward */
5234:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT* bf						/* Pointer to number of bytes forwarded */
5235:Middlewares/Third_Party/FatFs/src/ff.c **** )
5236:Middlewares/Third_Party/FatFs/src/ff.c **** {
5237:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
5238:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
5239:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst, sect;
5240:Middlewares/Third_Party/FatFs/src/ff.c **** 	FSIZE_t remain;
5241:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT rcnt, csect;
5242:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *dbuf;
5243:Middlewares/Third_Party/FatFs/src/ff.c **** 
5244:Middlewares/Third_Party/FatFs/src/ff.c **** 
5245:Middlewares/Third_Party/FatFs/src/ff.c **** 	*bf = 0;	/* Clear transfer byte counter */
5246:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&fp->obj, &fs);		/* Check validity of the file object */
5247:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);
5248:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_READ)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
5249:Middlewares/Third_Party/FatFs/src/ff.c **** 
5250:Middlewares/Third_Party/FatFs/src/ff.c **** 	remain = fp->obj.objsize - fp->fptr;
5251:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (btf > remain) btf = (UINT)remain;			/* Truncate btf by remaining bytes */
5252:Middlewares/Third_Party/FatFs/src/ff.c **** 
5253:Middlewares/Third_Party/FatFs/src/ff.c **** 	for ( ;  btf && (*func)(0, 0);					/* Repeat until all data transferred or stream goes busy */
5254:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->fptr += rcnt, *bf += rcnt, btf -= rcnt) {
5255:Middlewares/Third_Party/FatFs/src/ff.c **** 		csect = (UINT)(fp->fptr / SS(fs) & (fs->csize - 1));	/* Sector offset in the cluster */
5256:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fptr % SS(fs) == 0) {				/* On the sector boundary? */
5257:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (csect == 0) {						/* On the cluster boundary? */
5258:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = (fp->fptr == 0) ?			/* On the top of the file? */
5259:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->obj.sclust : get_fat(&fp->obj, fp->clust);
5260:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst <= 1) ABORT(fs, FR_INT_ERR);
5261:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
5262:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;					/* Update current cluster */
5263:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5264:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5265:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = clust2sect(fs, fp->clust);			/* Get current data sector */
5266:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!sect) ABORT(fs, FR_INT_ERR);
5267:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect += csect;
5268:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
5269:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (move_window(fs, sect) != FR_OK) ABORT(fs, FR_DISK_ERR);	/* Move sector window to the file dat
5270:Middlewares/Third_Party/FatFs/src/ff.c **** 		dbuf = fs->win;
5271:Middlewares/Third_Party/FatFs/src/ff.c **** #else
5272:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->sect != sect) {		/* Fill sector cache with file data */
5273:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
5274:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->flag & FA_DIRTY) {		/* Write-back dirty sector cache */
5275:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
5276:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
5277:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5278:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5279:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_read(fs->drv, fp->buf, sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
5280:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5281:Middlewares/Third_Party/FatFs/src/ff.c **** 		dbuf = fp->buf;
ARM GAS  /tmp/ccwdO2Zj.s 			page 119


5282:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5283:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->sect = sect;
5284:Middlewares/Third_Party/FatFs/src/ff.c **** 		rcnt = SS(fs) - (UINT)fp->fptr % SS(fs);	/* Number of bytes left in the sector */
5285:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rcnt > btf) rcnt = btf;					/* Clip it by btr if needed */
5286:Middlewares/Third_Party/FatFs/src/ff.c **** 		rcnt = (*func)(dbuf + ((UINT)fp->fptr % SS(fs)), rcnt);	/* Forward the file data */
5287:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!rcnt) ABORT(fs, FR_INT_ERR);
5288:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5289:Middlewares/Third_Party/FatFs/src/ff.c **** 
5290:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, FR_OK);
5291:Middlewares/Third_Party/FatFs/src/ff.c **** }
5292:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _USE_FORWARD */
5293:Middlewares/Third_Party/FatFs/src/ff.c **** 
5294:Middlewares/Third_Party/FatFs/src/ff.c **** 
5295:Middlewares/Third_Party/FatFs/src/ff.c **** 
5296:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_MKFS && !_FS_READONLY
5297:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5298:Middlewares/Third_Party/FatFs/src/ff.c **** /* Create an FAT/exFAT volume                                            */
5299:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5300:Middlewares/Third_Party/FatFs/src/ff.c **** 
5301:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_mkfs (
5302:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Logical drive number */
5303:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE opt,			/* Format option */
5304:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD au,			/* Size of allocation unit (cluster) [byte] */
5305:Middlewares/Third_Party/FatFs/src/ff.c **** 	void* work,			/* Pointer to working buffer */
5306:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT len			/* Size of working buffer */
5307:Middlewares/Third_Party/FatFs/src/ff.c **** )
5308:Middlewares/Third_Party/FatFs/src/ff.c **** {
5309:Middlewares/Third_Party/FatFs/src/ff.c **** 	const UINT n_fats = 1;		/* Number of FATs for FAT12/16/32 volume (1 or 2) */
5310:Middlewares/Third_Party/FatFs/src/ff.c **** 	const UINT n_rootdir = 512;	/* Number of root directory entries for FAT12/16 volume */
5311:Middlewares/Third_Party/FatFs/src/ff.c **** 	static const WORD cst[] = {1, 4, 16, 64, 256, 512, 0};	/* Cluster size boundary for FAT12/16 volum
5312:Middlewares/Third_Party/FatFs/src/ff.c **** 	static const WORD cst32[] = {1, 2, 4, 8, 16, 32, 0};	/* Cluster size boundary for FAT32 volume (12
5313:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE fmt, sys, *buf, *pte, pdrv, part;
5314:Middlewares/Third_Party/FatFs/src/ff.c **** 	WORD ss;
5315:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD szb_buf, sz_buf, sz_blk, n_clst, pau, sect, nsect, n;
5316:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD b_vol, b_fat, b_data;				/* Base LBA for volume, fat, data */
5317:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD sz_vol, sz_rsv, sz_fat, sz_dir;	/* Size for volume, fat, dir, data */
5318:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
5319:Middlewares/Third_Party/FatFs/src/ff.c **** 	int vol;
5320:Middlewares/Third_Party/FatFs/src/ff.c **** 	DSTATUS stat;
5321:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_TRIM || _FS_EXFAT
5322:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD tbl[3];
5323:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5324:Middlewares/Third_Party/FatFs/src/ff.c **** 
5325:Middlewares/Third_Party/FatFs/src/ff.c **** 
5326:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Check mounted drive and clear work area */
5327:Middlewares/Third_Party/FatFs/src/ff.c **** 	vol = get_ldnumber(&path);					/* Get target logical drive */
5328:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
5329:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (FatFs[vol]) FatFs[vol]->fs_type = 0;	/* Clear the volume */
5330:Middlewares/Third_Party/FatFs/src/ff.c **** 	pdrv = LD2PD(vol);	/* Physical drive */
5331:Middlewares/Third_Party/FatFs/src/ff.c **** 	part = LD2PT(vol);	/* Partition (0:create as new, 1-4:get from partition table) */
5332:Middlewares/Third_Party/FatFs/src/ff.c **** 
5333:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Check physical drive status */
5334:Middlewares/Third_Party/FatFs/src/ff.c **** 	stat = disk_initialize(pdrv);
5335:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_NOINIT) return FR_NOT_READY;
5336:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_PROTECT) return FR_WRITE_PROTECTED;
5337:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_ioctl(pdrv, GET_BLOCK_SIZE, &sz_blk) != RES_OK || !sz_blk || sz_blk > 32768 || (sz_blk & 
5338:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS != _MIN_SS		/* Get sector size of the medium if variable sector size cfg. */
ARM GAS  /tmp/ccwdO2Zj.s 			page 120


5339:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_ioctl(pdrv, GET_SECTOR_SIZE, &ss) != RES_OK) return FR_DISK_ERR;
5340:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (ss > _MAX_SS || ss < _MIN_SS || (ss & (ss - 1))) return FR_DISK_ERR;
5341:Middlewares/Third_Party/FatFs/src/ff.c **** #else
5342:Middlewares/Third_Party/FatFs/src/ff.c **** 	ss = _MAX_SS;
5343:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5344:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((au != 0 && au < ss) || au > 0x1000000 || (au & (au - 1))) return FR_INVALID_PARAMETER;	/* Che
5345:Middlewares/Third_Party/FatFs/src/ff.c **** 	au /= ss;	/* Cluster size in unit of sector */
5346:Middlewares/Third_Party/FatFs/src/ff.c **** 
5347:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get working buffer */
5348:Middlewares/Third_Party/FatFs/src/ff.c **** 	buf = (BYTE*)work;		/* Working buffer */
5349:Middlewares/Third_Party/FatFs/src/ff.c **** 	sz_buf = len / ss;		/* Size of working buffer (sector) */
5350:Middlewares/Third_Party/FatFs/src/ff.c **** 	szb_buf = sz_buf * ss;	/* Size of working buffer (byte) */
5351:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!szb_buf) return FR_MKFS_ABORTED;
5352:Middlewares/Third_Party/FatFs/src/ff.c **** 
5353:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Determine where the volume to be located (b_vol, sz_vol) */
5354:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (_MULTI_PARTITION && part != 0) {
5355:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Get partition information from partition table in the MBR */
5356:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_read(pdrv, buf, 0, 1) != RES_OK) return FR_DISK_ERR;	/* Load MBR */
5357:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ld_word(buf + BS_55AA) != 0xAA55) return FR_MKFS_ABORTED;	/* Check if MBR is valid */
5358:Middlewares/Third_Party/FatFs/src/ff.c **** 		pte = buf + (MBR_Table + (part - 1) * SZ_PTE);
5359:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!pte[PTE_System]) return FR_MKFS_ABORTED;	/* No partition? */
5360:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_vol = ld_dword(pte + PTE_StLba);		/* Get volume start sector */
5361:Middlewares/Third_Party/FatFs/src/ff.c **** 		sz_vol = ld_dword(pte + PTE_SizLba);	/* Get volume size */
5362:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
5363:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Create a single-partition in this function */
5364:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_ioctl(pdrv, GET_SECTOR_COUNT, &sz_vol) != RES_OK) return FR_DISK_ERR;
5365:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_vol = (opt & FM_SFD) ? 0 : 63;		/* Volume start sector */
5366:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (sz_vol < b_vol) return FR_MKFS_ABORTED;
5367:Middlewares/Third_Party/FatFs/src/ff.c **** 		sz_vol -= b_vol;						/* Volume size */
5368:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5369:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (sz_vol < 128) return FR_MKFS_ABORTED;	/* Check if volume size is >=128s */
5370:Middlewares/Third_Party/FatFs/src/ff.c **** 
5371:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Pre-determine the FAT type */
5372:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
5373:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_EXFAT && (opt & FM_EXFAT)) {	/* exFAT possible? */
5374:Middlewares/Third_Party/FatFs/src/ff.c **** 			if ((opt & FM_ANY) == FM_EXFAT || sz_vol >= 0x4000000 || au > 128) {	/* exFAT only, vol >= 64Ms 
5375:Middlewares/Third_Party/FatFs/src/ff.c **** 				fmt = FS_EXFAT; break;
5376:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5377:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5378:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (au > 128) return FR_INVALID_PARAMETER;	/* Too large au for FAT/FAT32 */
5379:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (opt & FM_FAT32) {	/* FAT32 possible? */
5380:Middlewares/Third_Party/FatFs/src/ff.c **** 			if ((opt & FM_ANY) == FM_FAT32 || !(opt & FM_FAT)) {	/* FAT32 only or no-FAT? */
5381:Middlewares/Third_Party/FatFs/src/ff.c **** 				fmt = FS_FAT32; break;
5382:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5383:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5384:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!(opt & FM_FAT)) return FR_INVALID_PARAMETER;	/* no-FAT? */
5385:Middlewares/Third_Party/FatFs/src/ff.c **** 		fmt = FS_FAT16;
5386:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (0);
5387:Middlewares/Third_Party/FatFs/src/ff.c **** 
5388:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
5389:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == FS_EXFAT) {	/* Create an exFAT volume */
5390:Middlewares/Third_Party/FatFs/src/ff.c **** 		DWORD szb_bit, szb_case, sum, nb, cl;
5391:Middlewares/Third_Party/FatFs/src/ff.c **** 		WCHAR ch, si;
5392:Middlewares/Third_Party/FatFs/src/ff.c **** 		UINT j, st;
5393:Middlewares/Third_Party/FatFs/src/ff.c **** 		BYTE b;
5394:Middlewares/Third_Party/FatFs/src/ff.c **** 
5395:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (sz_vol < 0x1000) return FR_MKFS_ABORTED;	/* Too small volume? */
ARM GAS  /tmp/ccwdO2Zj.s 			page 121


5396:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_TRIM
5397:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl[0] = b_vol; tbl[1] = b_vol + sz_vol - 1;	/* Inform the device the volume area may be erased *
5398:Middlewares/Third_Party/FatFs/src/ff.c **** 		disk_ioctl(pdrv, CTRL_TRIM, tbl);
5399:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5400:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Determine FAT location, data location and number of clusters */
5401:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!au) {	/* au auto-selection */
5402:Middlewares/Third_Party/FatFs/src/ff.c **** 			au = 8;
5403:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (sz_vol >= 0x80000) au = 64;		/* >= 512Ks */
5404:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (sz_vol >= 0x4000000) au = 256;	/* >= 64Ms */
5405:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5406:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_fat = b_vol + 32;										/* FAT start at offset 32 */
5407:Middlewares/Third_Party/FatFs/src/ff.c **** 		sz_fat = ((sz_vol / au + 2) * 4 + ss - 1) / ss;			/* Number of FAT sectors */
5408:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_data = (b_fat + sz_fat + sz_blk - 1) & ~(sz_blk - 1);	/* Align data area to the erase block bou
5409:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (b_data >= sz_vol / 2) return FR_MKFS_ABORTED;		/* Too small volume? */
5410:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_clst = (sz_vol - (b_data - b_vol)) / au;				/* Number of clusters */
5411:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n_clst <16) return FR_MKFS_ABORTED;					/* Too few clusters? */
5412:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n_clst > MAX_EXFAT) return FR_MKFS_ABORTED;			/* Too many clusters? */
5413:Middlewares/Third_Party/FatFs/src/ff.c **** 
5414:Middlewares/Third_Party/FatFs/src/ff.c **** 		szb_bit = (n_clst + 7) / 8;						/* Size of allocation bitmap */
5415:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl[0] = (szb_bit + au * ss - 1) / (au * ss);	/* Number of allocation bitmap clusters */
5416:Middlewares/Third_Party/FatFs/src/ff.c **** 
5417:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Create a compressed up-case table */
5418:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = b_data + au * tbl[0];	/* Table start sector */
5419:Middlewares/Third_Party/FatFs/src/ff.c **** 		sum = 0;						/* Table checksum to be stored in the 82 entry */
5420:Middlewares/Third_Party/FatFs/src/ff.c **** 		st = si = i = j = szb_case = 0;
5421:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
5422:Middlewares/Third_Party/FatFs/src/ff.c **** 			switch (st) {
5423:Middlewares/Third_Party/FatFs/src/ff.c **** 			case 0:
5424:Middlewares/Third_Party/FatFs/src/ff.c **** 				ch = ff_wtoupper(si);	/* Get an up-case char */
5425:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ch != si) {
5426:Middlewares/Third_Party/FatFs/src/ff.c **** 					si++; break;		/* Store the up-case char if exist */
5427:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5428:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (j = 1; (WCHAR)(si + j) && (WCHAR)(si + j) == ff_wtoupper((WCHAR)(si + j)); j++) ;	/* Get r
5429:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (j >= 128) {
5430:Middlewares/Third_Party/FatFs/src/ff.c **** 					ch = 0xFFFF; st = 2; break;	/* Compress the no-case block if run is >= 128 */
5431:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5432:Middlewares/Third_Party/FatFs/src/ff.c **** 				st = 1;			/* Do not compress short run */
5433:Middlewares/Third_Party/FatFs/src/ff.c **** 				/* go to next case */
5434:Middlewares/Third_Party/FatFs/src/ff.c **** 			case 1:
5435:Middlewares/Third_Party/FatFs/src/ff.c **** 				ch = si++;		/* Fill the short run */
5436:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (--j == 0) st = 0;
5437:Middlewares/Third_Party/FatFs/src/ff.c **** 				break;
5438:Middlewares/Third_Party/FatFs/src/ff.c **** 
5439:Middlewares/Third_Party/FatFs/src/ff.c **** 			default:
5440:Middlewares/Third_Party/FatFs/src/ff.c **** 				ch = (WCHAR)j; si += j;	/* Number of chars to skip */
5441:Middlewares/Third_Party/FatFs/src/ff.c **** 				st = 0;
5442:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5443:Middlewares/Third_Party/FatFs/src/ff.c **** 			sum = xsum32(buf[i + 0] = (BYTE)ch, sum);		/* Put it into the write buffer */
5444:Middlewares/Third_Party/FatFs/src/ff.c **** 			sum = xsum32(buf[i + 1] = (BYTE)(ch >> 8), sum);
5445:Middlewares/Third_Party/FatFs/src/ff.c **** 			i += 2; szb_case += 2;
5446:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!si || i == szb_buf) {		/* Write buffered data when buffer full or end of process */
5447:Middlewares/Third_Party/FatFs/src/ff.c **** 				n = (i + ss - 1) / ss;
5448:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(pdrv, buf, sect, n) != RES_OK) return FR_DISK_ERR;
5449:Middlewares/Third_Party/FatFs/src/ff.c **** 				sect += n; i = 0;
5450:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5451:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (si);
5452:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl[1] = (szb_case + au * ss - 1) / (au * ss);	/* Number of up-case table clusters */
ARM GAS  /tmp/ccwdO2Zj.s 			page 122


5453:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl[2] = 1;										/* Number of root dir clusters */
5454:Middlewares/Third_Party/FatFs/src/ff.c **** 
5455:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Initialize the allocation bitmap */
5456:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = b_data; nsect = (szb_bit + ss - 1) / ss;	/* Start of bitmap and number of sectors */
5457:Middlewares/Third_Party/FatFs/src/ff.c **** 		nb = tbl[0] + tbl[1] + tbl[2];					/* Number of clusters in-use by system */
5458:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
5459:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, szb_buf);
5460:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (i = 0; nb >= 8 && i < szb_buf; buf[i++] = 0xFF, nb -= 8) ;
5461:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (b = 1; nb && i < szb_buf; buf[i] |= b, b <<= 1, nb--) ;
5462:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = (nsect > sz_buf) ? sz_buf : nsect;		/* Write the buffered data */
5463:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, buf, sect, n) != RES_OK) return FR_DISK_ERR;
5464:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += n; nsect -= n;
5465:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (nsect);
5466:Middlewares/Third_Party/FatFs/src/ff.c **** 
5467:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Initialize the FAT */
5468:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = b_fat; nsect = sz_fat;	/* Start of FAT and number of FAT sectors */
5469:Middlewares/Third_Party/FatFs/src/ff.c **** 		j = nb = cl = 0;
5470:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
5471:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, szb_buf); i = 0;	/* Clear work area and reset write index */
5472:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cl == 0) {	/* Set entry 0 and 1 */
5473:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(buf + i, 0xFFFFFFF8); i += 4; cl++;
5474:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(buf + i, 0xFFFFFFFF); i += 4; cl++;
5475:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5476:Middlewares/Third_Party/FatFs/src/ff.c **** 			do {			/* Create chains of bitmap, up-case and root dir */
5477:Middlewares/Third_Party/FatFs/src/ff.c **** 				while (nb && i < szb_buf) {			/* Create a chain */
5478:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(buf + i, (nb > 1) ? cl + 1 : 0xFFFFFFFF);
5479:Middlewares/Third_Party/FatFs/src/ff.c **** 					i += 4; cl++; nb--;
5480:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5481:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!nb && j < 3) nb = tbl[j++];	/* Next chain */
5482:Middlewares/Third_Party/FatFs/src/ff.c **** 			} while (nb && i < szb_buf);
5483:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = (nsect > sz_buf) ? sz_buf : nsect;	/* Write the buffered data */
5484:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, buf, sect, n) != RES_OK) return FR_DISK_ERR;
5485:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += n; nsect -= n;
5486:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (nsect);
5487:Middlewares/Third_Party/FatFs/src/ff.c **** 
5488:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Initialize the root directory */
5489:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_set(buf, 0, szb_buf);
5490:Middlewares/Third_Party/FatFs/src/ff.c **** 		buf[SZDIRE * 0 + 0] = 0x83;		/* 83 entry (volume label) */
5491:Middlewares/Third_Party/FatFs/src/ff.c **** 		buf[SZDIRE * 1 + 0] = 0x81;		/* 81 entry (allocation bitmap) */
5492:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_dword(buf + SZDIRE * 1 + 20, 2);
5493:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_dword(buf + SZDIRE * 1 + 24, szb_bit);
5494:Middlewares/Third_Party/FatFs/src/ff.c **** 		buf[SZDIRE * 2 + 0] = 0x82;		/* 82 entry (up-case table) */
5495:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_dword(buf + SZDIRE * 2 + 4, sum);
5496:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_dword(buf + SZDIRE * 2 + 20, 2 + tbl[0]);
5497:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_dword(buf + SZDIRE * 2 + 24, szb_case);
5498:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = b_data + au * (tbl[0] + tbl[1]);	nsect = au;	/* Start of the root directory and number of 
5499:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {	/* Fill root directory sectors */
5500:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = (nsect > sz_buf) ? sz_buf : nsect;
5501:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, buf, sect, n) != RES_OK) return FR_DISK_ERR;
5502:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, ss);
5503:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += n; nsect -= n;
5504:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (nsect);
5505:Middlewares/Third_Party/FatFs/src/ff.c **** 
5506:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Create two set of the exFAT VBR blocks */
5507:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = b_vol;
5508:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (n = 0; n < 2; n++) {
5509:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Main record (+0) */
ARM GAS  /tmp/ccwdO2Zj.s 			page 123


5510:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, ss);
5511:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_cpy(buf + BS_JmpBoot, "\xEB\x76\x90" "EXFAT   ", 11);	/* Boot jump code (x86), OEM name */
5512:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_VolOfsEx, b_vol);					/* Volume offset in the physical drive [sector] */
5513:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_TotSecEx, sz_vol);					/* Volume size [sector] */
5514:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_FatOfsEx, b_fat - b_vol);			/* FAT offset [sector] */
5515:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_FatSzEx, sz_fat);					/* FAT size [sector] */
5516:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_DataOfsEx, b_data - b_vol);			/* Data offset [sector] */
5517:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_NumClusEx, n_clst);					/* Number of clusters */
5518:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_RootClusEx, 2 + tbl[0] + tbl[1]);	/* Root dir cluster # */
5519:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_VolIDEx, GET_FATTIME());				/* VSN */
5520:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BPB_FSVerEx, 0x100);						/* File system version (1.00) */
5521:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (buf[BPB_BytsPerSecEx] = 0, i = ss; i >>= 1; buf[BPB_BytsPerSecEx]++) ;	/* Log2 of sector si
5522:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (buf[BPB_SecPerClusEx] = 0, i = au; i >>= 1; buf[BPB_SecPerClusEx]++) ;	/* Log2 of cluster s
5523:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BPB_NumFATsEx] = 1;					/* Number of FATs */
5524:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BPB_DrvNumEx] = 0x80;				/* Drive number (for int13) */
5525:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BS_BootCodeEx, 0xFEEB);	/* Boot code (x86) */
5526:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BS_55AA, 0xAA55);			/* Signature (placed here regardless of sector size) */
5527:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (i = sum = 0; i < ss; i++) {		/* VBR checksum */
5528:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (i != BPB_VolFlagEx && i != BPB_VolFlagEx + 1 && i != BPB_PercInUseEx) sum = xsum32(buf[i], 
5529:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5530:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, buf, sect++, 1) != RES_OK) return FR_DISK_ERR;
5531:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Extended bootstrap record (+1..+8) */
5532:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, ss);
5533:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + ss - 2, 0xAA55);	/* Signature (placed at end of sector) */
5534:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (j = 1; j < 9; j++) {
5535:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (i = 0; i < ss; sum = xsum32(buf[i++], sum)) ;	/* VBR checksum */
5536:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(pdrv, buf, sect++, 1) != RES_OK) return FR_DISK_ERR;
5537:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5538:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* OEM/Reserved record (+9..+10) */
5539:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, ss);
5540:Middlewares/Third_Party/FatFs/src/ff.c **** 			for ( ; j < 11; j++) {
5541:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (i = 0; i < ss; sum = xsum32(buf[i++], sum)) ;	/* VBR checksum */
5542:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(pdrv, buf, sect++, 1) != RES_OK) return FR_DISK_ERR;
5543:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5544:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Sum record (+11) */
5545:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (i = 0; i < ss; i += 4) st_dword(buf + i, sum);		/* Fill with checksum value */
5546:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, buf, sect++, 1) != RES_OK) return FR_DISK_ERR;
5547:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5548:Middlewares/Third_Party/FatFs/src/ff.c **** 
5549:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else
5550:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _FS_EXFAT */
5551:Middlewares/Third_Party/FatFs/src/ff.c **** 	{	/* Create an FAT12/16/32 volume */
5552:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
5553:Middlewares/Third_Party/FatFs/src/ff.c **** 			pau = au;
5554:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Pre-determine number of clusters and FAT sub-type */
5555:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT32) {	/* FAT32 volume */
5556:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!pau) {	/* au auto-selection */
5557:Middlewares/Third_Party/FatFs/src/ff.c **** 					n = sz_vol / 0x20000;	/* Volume size in unit of 128KS */
5558:Middlewares/Third_Party/FatFs/src/ff.c **** 					for (i = 0, pau = 1; cst32[i] && cst32[i] <= n; i++, pau <<= 1) ;	/* Get from table */
5559:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5560:Middlewares/Third_Party/FatFs/src/ff.c **** 				n_clst = sz_vol / pau;	/* Number of clusters */
5561:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_fat = (n_clst * 4 + 8 + ss - 1) / ss;	/* FAT size [sector] */
5562:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_rsv = 32;	/* Number of reserved sectors */
5563:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_dir = 0;		/* No static directory */
5564:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (n_clst <= MAX_FAT16 || n_clst > MAX_FAT32) return FR_MKFS_ABORTED;
5565:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {				/* FAT12/16 volume */
5566:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!pau) {	/* au auto-selection */
ARM GAS  /tmp/ccwdO2Zj.s 			page 124


5567:Middlewares/Third_Party/FatFs/src/ff.c **** 					n = sz_vol / 0x1000;	/* Volume size in unit of 4KS */
5568:Middlewares/Third_Party/FatFs/src/ff.c **** 					for (i = 0, pau = 1; cst[i] && cst[i] <= n; i++, pau <<= 1) ;	/* Get from table */
5569:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5570:Middlewares/Third_Party/FatFs/src/ff.c **** 				n_clst = sz_vol / pau;
5571:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (n_clst > MAX_FAT12) {
5572:Middlewares/Third_Party/FatFs/src/ff.c **** 					n = n_clst * 2 + 4;		/* FAT size [byte] */
5573:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
5574:Middlewares/Third_Party/FatFs/src/ff.c **** 					fmt = FS_FAT12;
5575:Middlewares/Third_Party/FatFs/src/ff.c **** 					n = (n_clst * 3 + 1) / 2 + 3;	/* FAT size [byte] */
5576:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5577:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_fat = (n + ss - 1) / ss;		/* FAT size [sector] */
5578:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_rsv = 1;						/* Number of reserved sectors */
5579:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_dir = (DWORD)n_rootdir * SZDIRE / ss;	/* Rootdir size [sector] */
5580:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5581:Middlewares/Third_Party/FatFs/src/ff.c **** 			b_fat = b_vol + sz_rsv;						/* FAT base */
5582:Middlewares/Third_Party/FatFs/src/ff.c **** 			b_data = b_fat + sz_fat * n_fats + sz_dir;	/* Data base */
5583:Middlewares/Third_Party/FatFs/src/ff.c **** 
5584:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Align data base to erase block boundary (for flash memory media) */
5585:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = ((b_data + sz_blk - 1) & ~(sz_blk - 1)) - b_data;	/* Next nearest erase block from current d
5586:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT32) {		/* FAT32: Move FAT base */
5587:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_rsv += n; b_fat += n;
5588:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {					/* FAT12/16: Expand FAT size */
5589:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_fat += n / n_fats;
5590:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5591:Middlewares/Third_Party/FatFs/src/ff.c **** 
5592:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Determine number of clusters and final check of validity of the FAT sub-type */
5593:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (sz_vol < b_data + pau * 16 - b_vol) return FR_MKFS_ABORTED;	/* Too small volume */
5594:Middlewares/Third_Party/FatFs/src/ff.c **** 			n_clst = (sz_vol - sz_rsv - sz_fat * n_fats - sz_dir) / pau;
5595:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT32) {
5596:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (n_clst <= MAX_FAT16) {	/* Too few clusters for FAT32 */
5597:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!au && (au = pau / 2) != 0) continue;	/* Adjust cluster size and retry */
5598:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_MKFS_ABORTED;
5599:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5600:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5601:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT16) {
5602:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (n_clst > MAX_FAT16) {	/* Too many clusters for FAT16 */
5603:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!au && (pau * 2) <= 64) {
5604:Middlewares/Third_Party/FatFs/src/ff.c **** 						au = pau * 2; continue;		/* Adjust cluster size and retry */
5605:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
5606:Middlewares/Third_Party/FatFs/src/ff.c **** 					if ((opt & FM_FAT32)) {
5607:Middlewares/Third_Party/FatFs/src/ff.c **** 						fmt = FS_FAT32; continue;	/* Switch type to FAT32 and retry */
5608:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
5609:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!au && (au = pau * 2) <= 128) continue;	/* Adjust cluster size and retry */
5610:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_MKFS_ABORTED;
5611:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5612:Middlewares/Third_Party/FatFs/src/ff.c **** 				if  (n_clst <= MAX_FAT12) {	/* Too few clusters for FAT16 */
5613:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!au && (au = pau * 2) <= 128) continue;	/* Adjust cluster size and retry */
5614:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_MKFS_ABORTED;
5615:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5616:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5617:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT12 && n_clst > MAX_FAT12) return FR_MKFS_ABORTED;	/* Too many clusters for FAT1
5618:Middlewares/Third_Party/FatFs/src/ff.c **** 
5619:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Ok, it is the valid cluster configuration */
5620:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
5621:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (1);
5622:Middlewares/Third_Party/FatFs/src/ff.c **** 
5623:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_TRIM
ARM GAS  /tmp/ccwdO2Zj.s 			page 125


5624:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl[0] = b_vol; tbl[1] = b_vol + sz_vol - 1;	/* Inform the device the volume area can be erased *
5625:Middlewares/Third_Party/FatFs/src/ff.c **** 		disk_ioctl(pdrv, CTRL_TRIM, tbl);
5626:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5627:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Create FAT VBR */
5628:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_set(buf, 0, ss);
5629:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(buf + BS_JmpBoot, "\xEB\xFE\x90" "MSDOS5.0", 11);/* Boot jump code (x86), OEM name */
5630:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_BytsPerSec, ss);				/* Sector size [byte] */
5631:Middlewares/Third_Party/FatFs/src/ff.c **** 		buf[BPB_SecPerClus] = (BYTE)pau;				/* Cluster size [sector] */
5632:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_RsvdSecCnt, (WORD)sz_rsv);	/* Size of reserved area */
5633:Middlewares/Third_Party/FatFs/src/ff.c **** 		buf[BPB_NumFATs] = (BYTE)n_fats;				/* Number of FATs */
5634:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_RootEntCnt, (WORD)((fmt == FS_FAT32) ? 0 : n_rootdir));	/* Number of root direc
5635:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (sz_vol < 0x10000) {
5636:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BPB_TotSec16, (WORD)sz_vol);	/* Volume size in 16-bit LBA */
5637:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
5638:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_TotSec32, sz_vol);		/* Volume size in 32-bit LBA */
5639:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5640:Middlewares/Third_Party/FatFs/src/ff.c **** 		buf[BPB_Media] = 0xF8;							/* Media descriptor byte */
5641:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_SecPerTrk, 63);				/* Number of sectors per track (for int13) */
5642:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_NumHeads, 255);				/* Number of heads (for int13) */
5643:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_dword(buf + BPB_HiddSec, b_vol);				/* Volume offset in the physical drive [sector] */
5644:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fmt == FS_FAT32) {
5645:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BS_VolID32, GET_FATTIME());	/* VSN */
5646:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_FATSz32, sz_fat);		/* FAT size [sector] */
5647:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_RootClus32, 2);			/* Root directory cluster # (2) */
5648:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BPB_FSInfo32, 1);				/* Offset of FSINFO sector (VBR + 1) */
5649:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BPB_BkBootSec32, 6);			/* Offset of backup VBR (VBR + 6) */
5650:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BS_DrvNum32] = 0x80;					/* Drive number (for int13) */
5651:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BS_BootSig32] = 0x29;					/* Extended boot signature */
5652:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_cpy(buf + BS_VolLab32, "NO NAME    " "FAT32   ", 19);	/* Volume label, FAT signature */
5653:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
5654:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BS_VolID, GET_FATTIME());	/* VSN */
5655:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BPB_FATSz16, (WORD)sz_fat);	/* FAT size [sector] */
5656:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BS_DrvNum] = 0x80;						/* Drive number (for int13) */
5657:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BS_BootSig] = 0x29;						/* Extended boot signature */
5658:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_cpy(buf + BS_VolLab, "NO NAME    " "FAT     ", 19);	/* Volume label, FAT signature */
5659:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5660:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BS_55AA, 0xAA55);					/* Signature (offset is fixed here regardless of sector size)
5661:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_write(pdrv, buf, b_vol, 1) != RES_OK) return FR_DISK_ERR;	/* Write it to the VBR sector 
5662:Middlewares/Third_Party/FatFs/src/ff.c **** 
5663:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Create FSINFO record if needed */
5664:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fmt == FS_FAT32) {
5665:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_write(pdrv, buf, b_vol + 6, 1);		/* Write backup VBR (VBR + 6) */
5666:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, ss);
5667:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + FSI_LeadSig, 0x41615252);
5668:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + FSI_StrucSig, 0x61417272);
5669:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + FSI_Free_Count, n_clst - 1);	/* Number of free clusters */
5670:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + FSI_Nxt_Free, 2);			/* Last allocated cluster# */
5671:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BS_55AA, 0xAA55);
5672:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_write(pdrv, buf, b_vol + 7, 1);		/* Write backup FSINFO (VBR + 7) */
5673:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_write(pdrv, buf, b_vol + 1, 1);		/* Write original FSINFO (VBR + 1) */
5674:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5675:Middlewares/Third_Party/FatFs/src/ff.c **** 
5676:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Initialize FAT area */
5677:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_set(buf, 0, (UINT)szb_buf);
5678:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = b_fat;		/* FAT start sector */
5679:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; i < n_fats; i++) {			/* Initialize FATs each */
5680:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT32) {
ARM GAS  /tmp/ccwdO2Zj.s 			page 126


5681:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(buf + 0, 0xFFFFFFF8);	/* Entry 0 */
5682:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(buf + 4, 0xFFFFFFFF);	/* Entry 1 */
5683:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(buf + 8, 0x0FFFFFFF);	/* Entry 2 (root directory) */
5684:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
5685:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(buf + 0, (fmt == FS_FAT12) ? 0xFFFFF8 : 0xFFFFFFF8);	/* Entry 0 and 1 */
5686:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5687:Middlewares/Third_Party/FatFs/src/ff.c **** 			nsect = sz_fat;		/* Number of FAT sectors */
5688:Middlewares/Third_Party/FatFs/src/ff.c **** 			do {	/* Fill FAT sectors */
5689:Middlewares/Third_Party/FatFs/src/ff.c **** 				n = (nsect > sz_buf) ? sz_buf : nsect;
5690:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(pdrv, buf, sect, (UINT)n) != RES_OK) return FR_DISK_ERR;
5691:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_set(buf, 0, ss);
5692:Middlewares/Third_Party/FatFs/src/ff.c **** 				sect += n; nsect -= n;
5693:Middlewares/Third_Party/FatFs/src/ff.c **** 			} while (nsect);
5694:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5695:Middlewares/Third_Party/FatFs/src/ff.c **** 
5696:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Initialize root directory (fill with zero) */
5697:Middlewares/Third_Party/FatFs/src/ff.c **** 		nsect = (fmt == FS_FAT32) ? pau : sz_dir;	/* Number of root directory sectors */
5698:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
5699:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = (nsect > sz_buf) ? sz_buf : nsect;
5700:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, buf, sect, (UINT)n) != RES_OK) return FR_DISK_ERR;
5701:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += n; nsect -= n;
5702:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (nsect);
5703:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5704:Middlewares/Third_Party/FatFs/src/ff.c **** 
5705:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Determine system ID in the partition table */
5706:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (_FS_EXFAT && fmt == FS_EXFAT) {
5707:Middlewares/Third_Party/FatFs/src/ff.c **** 		sys = 0x07;			/* HPFS/NTFS/exFAT */
5708:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
5709:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fmt == FS_FAT32) {
5710:Middlewares/Third_Party/FatFs/src/ff.c **** 			sys = 0x0C;		/* FAT32X */
5711:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
5712:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (sz_vol >= 0x10000) {
5713:Middlewares/Third_Party/FatFs/src/ff.c **** 				sys = 0x06;	/* FAT12/16 (>=64KS) */
5714:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
5715:Middlewares/Third_Party/FatFs/src/ff.c **** 				sys = (fmt == FS_FAT16) ? 0x04 : 0x01;	/* FAT16 (<64KS) : FAT12 (<64KS) */
5716:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5717:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5718:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5719:Middlewares/Third_Party/FatFs/src/ff.c **** 
5720:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Update partition information */
5721:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (_MULTI_PARTITION && part != 0) {	/* Created in the existing partition */
5722:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Update system ID in the partition table */
5723:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_read(pdrv, buf, 0, 1) != RES_OK) return FR_DISK_ERR;	/* Read the MBR */
5724:Middlewares/Third_Party/FatFs/src/ff.c **** 		buf[MBR_Table + (part - 1) * SZ_PTE + PTE_System] = sys;		/* Set system ID */
5725:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_write(pdrv, buf, 0, 1) != RES_OK) return FR_DISK_ERR;	/* Write it back to the MBR */
5726:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {								/* Created as a new single partition */
5727:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!(opt & FM_SFD)) {	/* Create partition table if in FDISK format */
5728:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, ss);
5729:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BS_55AA, 0xAA55);		/* MBR signature */
5730:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte = buf + MBR_Table;				/* Create partition table for single partition in the drive */
5731:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_Boot] = 0;					/* Boot indicator */
5732:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_StHead] = 1;				/* Start head */
5733:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_StSec] = 1;					/* Start sector */
5734:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_StCyl] = 0;					/* Start cylinder */
5735:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_System] = sys;				/* System type */
5736:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = (b_vol + sz_vol) / (63 * 255);	/* (End CHS may be invalid) */
5737:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_EdHead] = 254;				/* End head */
ARM GAS  /tmp/ccwdO2Zj.s 			page 127


5738:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_EdSec] = (BYTE)(n >> 2 | 63);	/* End sector */
5739:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_EdCyl] = (BYTE)n;			/* End cylinder */
5740:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(pte + PTE_StLba, b_vol);	/* Start offset in LBA */
5741:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(pte + PTE_SizLba, sz_vol);	/* Size in sectors */
5742:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, buf, 0, 1) != RES_OK) return FR_DISK_ERR;	/* Write it to the MBR */
5743:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5744:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5745:Middlewares/Third_Party/FatFs/src/ff.c **** 
5746:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_ioctl(pdrv, CTRL_SYNC, 0) != RES_OK) return FR_DISK_ERR;
5747:Middlewares/Third_Party/FatFs/src/ff.c **** 
5748:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
5749:Middlewares/Third_Party/FatFs/src/ff.c **** }
5750:Middlewares/Third_Party/FatFs/src/ff.c **** 
5751:Middlewares/Third_Party/FatFs/src/ff.c **** 
5752:Middlewares/Third_Party/FatFs/src/ff.c **** 
5753:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MULTI_PARTITION
5754:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5755:Middlewares/Third_Party/FatFs/src/ff.c **** /* Create partition table on the physical drive                          */
5756:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5757:Middlewares/Third_Party/FatFs/src/ff.c **** 
5758:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_fdisk (
5759:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE pdrv,			/* Physical drive number */
5760:Middlewares/Third_Party/FatFs/src/ff.c **** 	const DWORD* szt,	/* Pointer to the size table for each partitions */
5761:Middlewares/Third_Party/FatFs/src/ff.c **** 	void* work			/* Pointer to the working buffer */
5762:Middlewares/Third_Party/FatFs/src/ff.c **** )
5763:Middlewares/Third_Party/FatFs/src/ff.c **** {
5764:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, n, sz_cyl, tot_cyl, b_cyl, e_cyl, p_cyl;
5765:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE s_hd, e_hd, *p, *buf = (BYTE*)work;
5766:Middlewares/Third_Party/FatFs/src/ff.c **** 	DSTATUS stat;
5767:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD sz_disk, sz_part, s_part;
5768:Middlewares/Third_Party/FatFs/src/ff.c **** 
5769:Middlewares/Third_Party/FatFs/src/ff.c **** 
5770:Middlewares/Third_Party/FatFs/src/ff.c **** 	stat = disk_initialize(pdrv);
5771:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_NOINIT) return FR_NOT_READY;
5772:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_PROTECT) return FR_WRITE_PROTECTED;
5773:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_ioctl(pdrv, GET_SECTOR_COUNT, &sz_disk)) return FR_DISK_ERR;
5774:Middlewares/Third_Party/FatFs/src/ff.c **** 
5775:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Determine the CHS without any consideration of the drive geometry */
5776:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (n = 16; n < 256 && sz_disk / n / 63 > 1024; n *= 2) ;
5777:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (n == 256) n--;
5778:Middlewares/Third_Party/FatFs/src/ff.c **** 	e_hd = n - 1;
5779:Middlewares/Third_Party/FatFs/src/ff.c **** 	sz_cyl = 63 * n;
5780:Middlewares/Third_Party/FatFs/src/ff.c **** 	tot_cyl = sz_disk / sz_cyl;
5781:Middlewares/Third_Party/FatFs/src/ff.c **** 
5782:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create partition table */
5783:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_set(buf, 0, _MAX_SS);
5784:Middlewares/Third_Party/FatFs/src/ff.c **** 	p = buf + MBR_Table; b_cyl = 0;
5785:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (i = 0; i < 4; i++, p += SZ_PTE) {
5786:Middlewares/Third_Party/FatFs/src/ff.c **** 		p_cyl = (szt[i] <= 100U) ? (DWORD)tot_cyl * szt[i] / 100 : szt[i] / sz_cyl;	/* Number of cylinder
5787:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!p_cyl) continue;
5788:Middlewares/Third_Party/FatFs/src/ff.c **** 		s_part = (DWORD)sz_cyl * b_cyl;
5789:Middlewares/Third_Party/FatFs/src/ff.c **** 		sz_part = (DWORD)sz_cyl * p_cyl;
5790:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == 0) {	/* Exclude first track of cylinder 0 */
5791:Middlewares/Third_Party/FatFs/src/ff.c **** 			s_hd = 1;
5792:Middlewares/Third_Party/FatFs/src/ff.c **** 			s_part += 63; sz_part -= 63;
5793:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
5794:Middlewares/Third_Party/FatFs/src/ff.c **** 			s_hd = 0;
ARM GAS  /tmp/ccwdO2Zj.s 			page 128


5795:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5796:Middlewares/Third_Party/FatFs/src/ff.c **** 		e_cyl = b_cyl + p_cyl - 1;	/* End cylinder */
5797:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (e_cyl >= tot_cyl) return FR_INVALID_PARAMETER;
5798:Middlewares/Third_Party/FatFs/src/ff.c **** 
5799:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Set partition table */
5800:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[1] = s_hd;						/* Start head */
5801:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[2] = (BYTE)((b_cyl >> 2) + 1);	/* Start sector */
5802:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[3] = (BYTE)b_cyl;					/* Start cylinder */
5803:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[4] = 0x07;						/* System type (temporary setting) */
5804:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[5] = e_hd;						/* End head */
5805:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[6] = (BYTE)((e_cyl >> 2) + 63);	/* End sector */
5806:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[7] = (BYTE)e_cyl;					/* End cylinder */
5807:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_dword(p + 8, s_part);			/* Start sector in LBA */
5808:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_dword(p + 12, sz_part);			/* Number of sectors */
5809:Middlewares/Third_Party/FatFs/src/ff.c **** 
5810:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Next partition */
5811:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_cyl += p_cyl;
5812:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5813:Middlewares/Third_Party/FatFs/src/ff.c **** 	st_word(p, 0xAA55);
5814:Middlewares/Third_Party/FatFs/src/ff.c **** 
5815:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Write it to the MBR */
5816:Middlewares/Third_Party/FatFs/src/ff.c **** 	return (disk_write(pdrv, buf, 0, 1) != RES_OK || disk_ioctl(pdrv, CTRL_SYNC, 0) != RES_OK) ? FR_DI
5817:Middlewares/Third_Party/FatFs/src/ff.c **** }
5818:Middlewares/Third_Party/FatFs/src/ff.c **** 
5819:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _MULTI_PARTITION */
5820:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _USE_MKFS && !_FS_READONLY */
5821:Middlewares/Third_Party/FatFs/src/ff.c **** 
5822:Middlewares/Third_Party/FatFs/src/ff.c **** 
5823:Middlewares/Third_Party/FatFs/src/ff.c **** 
5824:Middlewares/Third_Party/FatFs/src/ff.c **** 
5825:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_STRFUNC
5826:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5827:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get a string from the file                                            */
5828:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5829:Middlewares/Third_Party/FatFs/src/ff.c **** 
5830:Middlewares/Third_Party/FatFs/src/ff.c **** TCHAR* f_gets (
5831:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR* buff,	/* Pointer to the string buffer to read */
5832:Middlewares/Third_Party/FatFs/src/ff.c **** 	int len,		/* Size of string buffer (characters) */
5833:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp			/* Pointer to the file object */
5834:Middlewares/Third_Party/FatFs/src/ff.c **** )
5835:Middlewares/Third_Party/FatFs/src/ff.c **** {
5836:Middlewares/Third_Party/FatFs/src/ff.c **** 	int n = 0;
5837:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR c, *p = buff;
5838:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE s[2];
5839:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT rc;
5840:Middlewares/Third_Party/FatFs/src/ff.c **** 
5841:Middlewares/Third_Party/FatFs/src/ff.c **** 
5842:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (n < len - 1) {	/* Read characters until buffer gets filled */
5843:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE
5844:Middlewares/Third_Party/FatFs/src/ff.c **** #if _STRF_ENCODE == 3		/* Read a character in UTF-8 */
5845:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_read(fp, s, 1, &rc);
5846:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rc != 1) break;
5847:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = s[0];
5848:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c >= 0x80) {
5849:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c < 0xC0) continue;	/* Skip stray trailer */
5850:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c < 0xE0) {			/* Two-byte sequence (0x80-0x7FF) */
5851:Middlewares/Third_Party/FatFs/src/ff.c **** 				f_read(fp, s, 1, &rc);
ARM GAS  /tmp/ccwdO2Zj.s 			page 129


5852:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (rc != 1) break;
5853:Middlewares/Third_Party/FatFs/src/ff.c **** 				c = (c & 0x1F) << 6 | (s[0] & 0x3F);
5854:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (c < 0x80) c = '?';	/* Reject invalid code range */
5855:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
5856:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (c < 0xF0) {		/* Three-byte sequence (0x800-0xFFFF) */
5857:Middlewares/Third_Party/FatFs/src/ff.c **** 					f_read(fp, s, 2, &rc);
5858:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (rc != 2) break;
5859:Middlewares/Third_Party/FatFs/src/ff.c **** 					c = c << 12 | (s[0] & 0x3F) << 6 | (s[1] & 0x3F);
5860:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (c < 0x800) c = '?';	/* Reject invalid code range */
5861:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {			/* Reject four-byte sequence */
5862:Middlewares/Third_Party/FatFs/src/ff.c **** 					c = '?';
5863:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5864:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5865:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5866:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _STRF_ENCODE == 2		/* Read a character in UTF-16BE */
5867:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_read(fp, s, 2, &rc);
5868:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rc != 2) break;
5869:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = s[1] + (s[0] << 8);
5870:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _STRF_ENCODE == 1		/* Read a character in UTF-16LE */
5871:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_read(fp, s, 2, &rc);
5872:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rc != 2) break;
5873:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = s[0] + (s[1] << 8);
5874:Middlewares/Third_Party/FatFs/src/ff.c **** #else						/* Read a character in ANSI/OEM */
5875:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_read(fp, s, 1, &rc);
5876:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rc != 1) break;
5877:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = s[0];
5878:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (IsDBCS1(c)) {
5879:Middlewares/Third_Party/FatFs/src/ff.c **** 			f_read(fp, s, 1, &rc);
5880:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (rc != 1) break;
5881:Middlewares/Third_Party/FatFs/src/ff.c **** 			c = (c << 8) + s[0];
5882:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5883:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = ff_convert(c, 1);	/* OEM -> Unicode */
5884:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!c) c = '?';
5885:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5886:Middlewares/Third_Party/FatFs/src/ff.c **** #else						/* Read a character without conversion */
5887:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_read(fp, s, 1, &rc);
5888:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rc != 1) break;
5889:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = s[0];
5890:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5891:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_USE_STRFUNC == 2 && c == '\r') continue;	/* Strip '\r' */
5892:Middlewares/Third_Party/FatFs/src/ff.c **** 		*p++ = c;
5893:Middlewares/Third_Party/FatFs/src/ff.c **** 		n++;
5894:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == '\n') break;		/* Break on EOL */
5895:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5896:Middlewares/Third_Party/FatFs/src/ff.c **** 	*p = 0;
5897:Middlewares/Third_Party/FatFs/src/ff.c **** 	return n ? buff : 0;			/* When no data read (eof or error), return with error. */
5898:Middlewares/Third_Party/FatFs/src/ff.c **** }
5899:Middlewares/Third_Party/FatFs/src/ff.c **** 
5900:Middlewares/Third_Party/FatFs/src/ff.c **** 
5901:Middlewares/Third_Party/FatFs/src/ff.c **** 
5902:Middlewares/Third_Party/FatFs/src/ff.c **** 
5903:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
5904:Middlewares/Third_Party/FatFs/src/ff.c **** #include <stdarg.h>
5905:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5906:Middlewares/Third_Party/FatFs/src/ff.c **** /* Put a character to the file                                           */
5907:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5908:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/ccwdO2Zj.s 			page 130


5909:Middlewares/Third_Party/FatFs/src/ff.c **** typedef struct {
5910:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL *fp;		/* Ptr to the writing file */
5911:Middlewares/Third_Party/FatFs/src/ff.c **** 	int idx, nchr;	/* Write index of buf[] (-1:error), number of chars written */
5912:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE buf[64];	/* Write buffer */
5913:Middlewares/Third_Party/FatFs/src/ff.c **** } putbuff;
5914:Middlewares/Third_Party/FatFs/src/ff.c **** 
5915:Middlewares/Third_Party/FatFs/src/ff.c **** 
5916:Middlewares/Third_Party/FatFs/src/ff.c **** static
5917:Middlewares/Third_Party/FatFs/src/ff.c **** void putc_bfd (		/* Buffered write with code conversion */
5918:Middlewares/Third_Party/FatFs/src/ff.c **** 	putbuff* pb,
5919:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR c
5920:Middlewares/Third_Party/FatFs/src/ff.c **** )
5921:Middlewares/Third_Party/FatFs/src/ff.c **** {
5922:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT bw;
5923:Middlewares/Third_Party/FatFs/src/ff.c **** 	int i;
5924:Middlewares/Third_Party/FatFs/src/ff.c **** 
5925:Middlewares/Third_Party/FatFs/src/ff.c **** 
5926:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (_USE_STRFUNC == 2 && c == '\n') {	 /* LF -> CRLF conversion */
5927:Middlewares/Third_Party/FatFs/src/ff.c **** 		putc_bfd(pb, '\r');
5928:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5929:Middlewares/Third_Party/FatFs/src/ff.c **** 
5930:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = pb->idx;		/* Write index of pb->buf[] */
5931:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (i < 0) return;
5932:Middlewares/Third_Party/FatFs/src/ff.c **** 
5933:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE
5934:Middlewares/Third_Party/FatFs/src/ff.c **** #if _STRF_ENCODE == 3			/* Write a character in UTF-8 */
5935:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (c < 0x80) {				/* 7-bit */
5936:Middlewares/Third_Party/FatFs/src/ff.c **** 		pb->buf[i++] = (BYTE)c;
5937:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
5938:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c < 0x800) {		/* 11-bit */
5939:Middlewares/Third_Party/FatFs/src/ff.c **** 			pb->buf[i++] = (BYTE)(0xC0 | c >> 6);
5940:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {				/* 16-bit */
5941:Middlewares/Third_Party/FatFs/src/ff.c **** 			pb->buf[i++] = (BYTE)(0xE0 | c >> 12);
5942:Middlewares/Third_Party/FatFs/src/ff.c **** 			pb->buf[i++] = (BYTE)(0x80 | (c >> 6 & 0x3F));
5943:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5944:Middlewares/Third_Party/FatFs/src/ff.c **** 		pb->buf[i++] = (BYTE)(0x80 | (c & 0x3F));
5945:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5946:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _STRF_ENCODE == 2			/* Write a character in UTF-16BE */
5947:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->buf[i++] = (BYTE)(c >> 8);
5948:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->buf[i++] = (BYTE)c;
5949:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _STRF_ENCODE == 1			/* Write a character in UTF-16LE */
5950:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->buf[i++] = (BYTE)c;
5951:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->buf[i++] = (BYTE)(c >> 8);
5952:Middlewares/Third_Party/FatFs/src/ff.c **** #else							/* Write a character in ANSI/OEM */
5953:Middlewares/Third_Party/FatFs/src/ff.c **** 	c = ff_convert(c, 0);	/* Unicode -> OEM */
5954:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!c) c = '?';
5955:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (c >= 0x100)
5956:Middlewares/Third_Party/FatFs/src/ff.c **** 		pb->buf[i++] = (BYTE)(c >> 8);
5957:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->buf[i++] = (BYTE)c;
5958:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5959:Middlewares/Third_Party/FatFs/src/ff.c **** #else							/* Write a character without conversion */
5960:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->buf[i++] = (BYTE)c;
5961:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5962:Middlewares/Third_Party/FatFs/src/ff.c **** 
5963:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (i >= (int)(sizeof pb->buf) - 3) {	/* Write buffered characters to the file */
5964:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_write(pb->fp, pb->buf, (UINT)i, &bw);
5965:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = (bw == (UINT)i) ? 0 : -1;
ARM GAS  /tmp/ccwdO2Zj.s 			page 131


5966:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5967:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->idx = i;
5968:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->nchr++;
5969:Middlewares/Third_Party/FatFs/src/ff.c **** }
5970:Middlewares/Third_Party/FatFs/src/ff.c **** 
5971:Middlewares/Third_Party/FatFs/src/ff.c **** 
5972:Middlewares/Third_Party/FatFs/src/ff.c **** static
5973:Middlewares/Third_Party/FatFs/src/ff.c **** int putc_flush (		/* Flush left characters in the buffer */
5974:Middlewares/Third_Party/FatFs/src/ff.c **** 	putbuff* pb
5975:Middlewares/Third_Party/FatFs/src/ff.c **** )
5976:Middlewares/Third_Party/FatFs/src/ff.c **** {
5977:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nw;
5978:Middlewares/Third_Party/FatFs/src/ff.c **** 
5979:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (   pb->idx >= 0	/* Flush buffered characters to the file */
5980:Middlewares/Third_Party/FatFs/src/ff.c **** 		&& f_write(pb->fp, pb->buf, (UINT)pb->idx, &nw) == FR_OK
5981:Middlewares/Third_Party/FatFs/src/ff.c **** 		&& (UINT)pb->idx == nw) return pb->nchr;
5982:Middlewares/Third_Party/FatFs/src/ff.c **** 	return EOF;
5983:Middlewares/Third_Party/FatFs/src/ff.c **** }
5984:Middlewares/Third_Party/FatFs/src/ff.c **** 
5985:Middlewares/Third_Party/FatFs/src/ff.c **** 
5986:Middlewares/Third_Party/FatFs/src/ff.c **** static
5987:Middlewares/Third_Party/FatFs/src/ff.c **** void putc_init (		/* Initialize write buffer */
5988:Middlewares/Third_Party/FatFs/src/ff.c **** 	putbuff* pb,
5989:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp
5990:Middlewares/Third_Party/FatFs/src/ff.c **** )
5991:Middlewares/Third_Party/FatFs/src/ff.c **** {
 1417              		.loc 1 5991 0
 1418              		.cfi_startproc
 1419              		@ args = 0, pretend = 0, frame = 0
 1420              		@ frame_needed = 0, uses_anonymous_args = 0
 1421              		@ link register save eliminated.
 1422              	.LVL188:
5992:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->fp = fp;
 1423              		.loc 1 5992 0
 1424 0000 0160     		str	r1, [r0]
5993:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->nchr = pb->idx = 0;
 1425              		.loc 1 5993 0
 1426 0002 0023     		movs	r3, #0
 1427 0004 4360     		str	r3, [r0, #4]
 1428 0006 8360     		str	r3, [r0, #8]
5994:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1429              		.loc 1 5994 0
 1430 0008 7047     		bx	lr
 1431              		.cfi_endproc
 1432              	.LFE206:
 1434              		.section	.text.lock_fs,"ax",%progbits
 1435              		.align	1
 1436              		.syntax unified
 1437              		.thumb
 1438              		.thumb_func
 1439              		.fpu fpv5-sp-d16
 1441              	lock_fs:
 1442              	.LFB154:
 745:Middlewares/Third_Party/FatFs/src/ff.c **** 	return (fs && ff_req_grant(fs->sobj)) ? 1 : 0;
 1443              		.loc 1 745 0
 1444              		.cfi_startproc
 1445              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccwdO2Zj.s 			page 132


 1446              		@ frame_needed = 0, uses_anonymous_args = 0
 1447              	.LVL189:
 1448 0000 08B5     		push	{r3, lr}
 1449              	.LCFI20:
 1450              		.cfi_def_cfa_offset 8
 1451              		.cfi_offset 3, -8
 1452              		.cfi_offset 14, -4
 746:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1453              		.loc 1 746 0
 1454 0002 30B1     		cbz	r0, .L152
 746:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1455              		.loc 1 746 0 is_stmt 0 discriminator 1
 1456 0004 C068     		ldr	r0, [r0, #12]
 1457              	.LVL190:
 1458 0006 FFF7FEFF 		bl	ff_req_grant
 1459              	.LVL191:
 1460 000a 0346     		mov	r3, r0
 1461 000c 10B1     		cbz	r0, .L150
 746:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1462              		.loc 1 746 0
 1463 000e 0123     		movs	r3, #1
 1464 0010 00E0     		b	.L150
 1465              	.LVL192:
 1466              	.L152:
 1467 0012 0023     		movs	r3, #0
 1468              	.LVL193:
 1469              	.L150:
 747:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1470              		.loc 1 747 0 is_stmt 1
 1471 0014 1846     		mov	r0, r3
 1472 0016 08BD     		pop	{r3, pc}
 1473              		.cfi_endproc
 1474              	.LFE154:
 1476              		.section	.text.sync_window,"ax",%progbits
 1477              		.align	1
 1478              		.syntax unified
 1479              		.thumb
 1480              		.thumb_func
 1481              		.fpu fpv5-sp-d16
 1483              	sync_window:
 1484              	.LFB161:
 886:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD wsect;
 1485              		.loc 1 886 0
 1486              		.cfi_startproc
 1487              		@ args = 0, pretend = 0, frame = 0
 1488              		@ frame_needed = 0, uses_anonymous_args = 0
 1489              	.LVL194:
 1490 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1491              	.LCFI21:
 1492              		.cfi_def_cfa_offset 24
 1493              		.cfi_offset 3, -24
 1494              		.cfi_offset 4, -20
 1495              		.cfi_offset 5, -16
 1496              		.cfi_offset 6, -12
 1497              		.cfi_offset 7, -8
 1498              		.cfi_offset 14, -4
 1499              	.LVL195:
ARM GAS  /tmp/ccwdO2Zj.s 			page 133


 892:Middlewares/Third_Party/FatFs/src/ff.c **** 		wsect = fs->winsect;	/* Current sector number */
 1500              		.loc 1 892 0
 1501 0002 C378     		ldrb	r3, [r0, #3]	@ zero_extendqisi2
 1502 0004 0BB9     		cbnz	r3, .L162
 889:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1503              		.loc 1 889 0
 1504 0006 0020     		movs	r0, #0
 1505              	.LVL196:
 1506              	.L155:
 907:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 1507              		.loc 1 907 0
 1508 0008 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1509              	.LVL197:
 1510              	.L162:
 1511 000a 0446     		mov	r4, r0
 893:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_write(fs->drv, fs->win, wsect, 1) != RES_OK) {
 1512              		.loc 1 893 0
 1513 000c 056B     		ldr	r5, [r0, #48]
 1514              	.LVL198:
 894:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_DISK_ERR;
 1515              		.loc 1 894 0
 1516 000e 00F13407 		add	r7, r0, #52
 1517 0012 0123     		movs	r3, #1
 1518 0014 2A46     		mov	r2, r5
 1519 0016 3946     		mov	r1, r7
 1520 0018 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 1521              	.LVL199:
 1522 001a FFF7FEFF 		bl	disk_write
 1523              	.LVL200:
 1524 001e A8B9     		cbnz	r0, .L159
 897:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (wsect - fs->fatbase < fs->fsize) {		/* Is it in the FAT area? */
 1525              		.loc 1 897 0
 1526 0020 0023     		movs	r3, #0
 1527 0022 E370     		strb	r3, [r4, #3]
 898:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (nf = fs->n_fats; nf >= 2; nf--) {	/* Reflect the change to all FAT copies */
 1528              		.loc 1 898 0
 1529 0024 636A     		ldr	r3, [r4, #36]
 1530 0026 EB1A     		subs	r3, r5, r3
 1531 0028 E269     		ldr	r2, [r4, #28]
 1532 002a 9342     		cmp	r3, r2
 1533 002c 10D2     		bcs	.L160
 899:Middlewares/Third_Party/FatFs/src/ff.c **** 					wsect += fs->fsize;
 1534              		.loc 1 899 0
 1535 002e A678     		ldrb	r6, [r4, #2]	@ zero_extendqisi2
 1536              	.LVL201:
 1537              	.L156:
 899:Middlewares/Third_Party/FatFs/src/ff.c **** 					wsect += fs->fsize;
 1538              		.loc 1 899 0 is_stmt 0 discriminator 1
 1539 0030 012E     		cmp	r6, #1
 1540 0032 09D9     		bls	.L163
 900:Middlewares/Third_Party/FatFs/src/ff.c **** 					disk_write(fs->drv, fs->win, wsect, 1);
 1541              		.loc 1 900 0 is_stmt 1 discriminator 3
 1542 0034 E369     		ldr	r3, [r4, #28]
 1543 0036 1D44     		add	r5, r5, r3
 1544              	.LVL202:
 901:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 1545              		.loc 1 901 0 discriminator 3
ARM GAS  /tmp/ccwdO2Zj.s 			page 134


 1546 0038 0123     		movs	r3, #1
 1547 003a 2A46     		mov	r2, r5
 1548 003c 3946     		mov	r1, r7
 1549 003e 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 1550 0040 FFF7FEFF 		bl	disk_write
 1551              	.LVL203:
 899:Middlewares/Third_Party/FatFs/src/ff.c **** 					wsect += fs->fsize;
 1552              		.loc 1 899 0 discriminator 3
 1553 0044 013E     		subs	r6, r6, #1
 1554              	.LVL204:
 1555 0046 F3E7     		b	.L156
 1556              	.L163:
 889:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1557              		.loc 1 889 0
 1558 0048 0020     		movs	r0, #0
 1559 004a DDE7     		b	.L155
 1560              	.LVL205:
 1561              	.L159:
 895:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 1562              		.loc 1 895 0
 1563 004c 0120     		movs	r0, #1
 1564 004e DBE7     		b	.L155
 1565              	.L160:
 889:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1566              		.loc 1 889 0
 1567 0050 0020     		movs	r0, #0
 1568 0052 D9E7     		b	.L155
 1569              		.cfi_endproc
 1570              	.LFE161:
 1572              		.section	.text.move_window,"ax",%progbits
 1573              		.align	1
 1574              		.syntax unified
 1575              		.thumb
 1576              		.thumb_func
 1577              		.fpu fpv5-sp-d16
 1579              	move_window:
 1580              	.LFB162:
 916:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_OK;
 1581              		.loc 1 916 0
 1582              		.cfi_startproc
 1583              		@ args = 0, pretend = 0, frame = 0
 1584              		@ frame_needed = 0, uses_anonymous_args = 0
 1585              	.LVL206:
 1586 0000 70B5     		push	{r4, r5, r6, lr}
 1587              	.LCFI22:
 1588              		.cfi_def_cfa_offset 16
 1589              		.cfi_offset 4, -16
 1590              		.cfi_offset 5, -12
 1591              		.cfi_offset 6, -8
 1592              		.cfi_offset 14, -4
 1593              	.LVL207:
 920:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 1594              		.loc 1 920 0
 1595 0002 036B     		ldr	r3, [r0, #48]
 1596 0004 8B42     		cmp	r3, r1
 1597 0006 12D0     		beq	.L167
 1598 0008 0446     		mov	r4, r0
ARM GAS  /tmp/ccwdO2Zj.s 			page 135


 1599 000a 0D46     		mov	r5, r1
 922:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 1600              		.loc 1 922 0
 1601 000c FFF7FEFF 		bl	sync_window
 1602              	.LVL208:
 924:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_read(fs->drv, fs->win, sector, 1) != RES_OK) {
 1603              		.loc 1 924 0
 1604 0010 0646     		mov	r6, r0
 1605 0012 68B9     		cbnz	r0, .L165
 925:Middlewares/Third_Party/FatFs/src/ff.c **** 				sector = 0xFFFFFFFF;	/* Invalidate window if data is not reliable */
 1606              		.loc 1 925 0
 1607 0014 0123     		movs	r3, #1
 1608 0016 2A46     		mov	r2, r5
 1609 0018 04F13401 		add	r1, r4, #52
 1610 001c 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 1611              	.LVL209:
 1612 001e FFF7FEFF 		bl	disk_read
 1613              	.LVL210:
 1614 0022 10B1     		cbz	r0, .L166
 927:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 1615              		.loc 1 927 0
 1616 0024 0126     		movs	r6, #1
 926:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_DISK_ERR;
 1617              		.loc 1 926 0
 1618 0026 4FF0FF35 		mov	r5, #-1
 1619              	.LVL211:
 1620              	.L166:
 929:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 1621              		.loc 1 929 0
 1622 002a 2563     		str	r5, [r4, #48]
 1623 002c 00E0     		b	.L165
 1624              	.LVL212:
 1625              	.L167:
 917:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1626              		.loc 1 917 0
 1627 002e 0026     		movs	r6, #0
 1628              	.LVL213:
 1629              	.L165:
 933:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1630              		.loc 1 933 0
 1631 0030 3046     		mov	r0, r6
 1632 0032 70BD     		pop	{r4, r5, r6, pc}
 1633              		.cfi_endproc
 1634              	.LFE162:
 1636              		.section	.text.check_fs,"ax",%progbits
 1637              		.align	1
 1638              		.syntax unified
 1639              		.thumb
 1640              		.thumb_func
 1641              		.fpu fpv5-sp-d16
 1643              	check_fs:
 1644              	.LFB183:
2969:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->wflag = 0; fs->winsect = 0xFFFFFFFF;		/* Invaidate window */
 1645              		.loc 1 2969 0
 1646              		.cfi_startproc
 1647              		@ args = 0, pretend = 0, frame = 0
 1648              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccwdO2Zj.s 			page 136


 1649              	.LVL214:
 1650 0000 10B5     		push	{r4, lr}
 1651              	.LCFI23:
 1652              		.cfi_def_cfa_offset 8
 1653              		.cfi_offset 4, -8
 1654              		.cfi_offset 14, -4
 1655 0002 0446     		mov	r4, r0
2970:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (move_window(fs, sect) != FR_OK) return 4;	/* Load boot record */
 1656              		.loc 1 2970 0
 1657 0004 0023     		movs	r3, #0
 1658 0006 C370     		strb	r3, [r0, #3]
 1659 0008 4FF0FF33 		mov	r3, #-1
 1660 000c 0363     		str	r3, [r0, #48]
2971:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1661              		.loc 1 2971 0
 1662 000e FFF7FEFF 		bl	move_window
 1663              	.LVL215:
 1664 0012 18BB     		cbnz	r0, .L173
2973:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1665              		.loc 1 2973 0
 1666 0014 04F23220 		addw	r0, r4, #562
 1667 0018 FFF7FEFF 		bl	ld_word
 1668              	.LVL216:
 1669 001c 4AF65523 		movw	r3, #43605
 1670 0020 9842     		cmp	r0, r3
 1671 0022 1DD1     		bne	.L174
2975:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((ld_dword(fs->win + BS_FilSysType) & 0xFFFFFF) == 0x544146) return 0;	/* Check "FAT" string *
 1672              		.loc 1 2975 0
 1673 0024 94F83430 		ldrb	r3, [r4, #52]	@ zero_extendqisi2
 1674 0028 E92B     		cmp	r3, #233
 1675 002a 05D0     		beq	.L172
2975:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((ld_dword(fs->win + BS_FilSysType) & 0xFFFFFF) == 0x544146) return 0;	/* Check "FAT" string *
 1676              		.loc 1 2975 0 is_stmt 0 discriminator 1
 1677 002c 636B     		ldr	r3, [r4, #52]
 1678 002e 03F0FF13 		and	r3, r3, #16711935
 1679 0032 0F4A     		ldr	r2, .L179
 1680 0034 9342     		cmp	r3, r2
 1681 0036 15D1     		bne	.L175
 1682              	.L172:
2976:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ld_dword(fs->win + BS_FilSysType32) == 0x33544146) return 0;			/* Check "FAT3" string */
 1683              		.loc 1 2976 0 is_stmt 1
 1684 0038 04F16A00 		add	r0, r4, #106
 1685 003c FFF7FEFF 		bl	ld_dword
 1686              	.LVL217:
 1687 0040 20F07F40 		bic	r0, r0, #-16777216
 1688 0044 0B4B     		ldr	r3, .L179+4
 1689 0046 9842     		cmp	r0, r3
 1690 0048 0ED0     		beq	.L176
2977:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 1691              		.loc 1 2977 0
 1692 004a 04F18600 		add	r0, r4, #134
 1693 004e FFF7FEFF 		bl	ld_dword
 1694              	.LVL218:
 1695 0052 094B     		ldr	r3, .L179+8
 1696 0054 9842     		cmp	r0, r3
 1697 0056 09D1     		bne	.L177
 1698 0058 0020     		movs	r0, #0
ARM GAS  /tmp/ccwdO2Zj.s 			page 137


 1699 005a 02E0     		b	.L171
 1700              	.L173:
2971:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1701              		.loc 1 2971 0
 1702 005c 0420     		movs	r0, #4
 1703 005e 00E0     		b	.L171
 1704              	.L174:
2973:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1705              		.loc 1 2973 0
 1706 0060 0320     		movs	r0, #3
 1707              	.L171:
2983:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1708              		.loc 1 2983 0
 1709 0062 10BD     		pop	{r4, pc}
 1710              	.LVL219:
 1711              	.L175:
2982:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1712              		.loc 1 2982 0
 1713 0064 0220     		movs	r0, #2
 1714 0066 FCE7     		b	.L171
 1715              	.L176:
2976:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ld_dword(fs->win + BS_FilSysType32) == 0x33544146) return 0;			/* Check "FAT3" string */
 1716              		.loc 1 2976 0
 1717 0068 0020     		movs	r0, #0
 1718 006a FAE7     		b	.L171
 1719              	.L177:
2982:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1720              		.loc 1 2982 0
 1721 006c 0220     		movs	r0, #2
 1722 006e F8E7     		b	.L171
 1723              	.L180:
 1724              		.align	2
 1725              	.L179:
 1726 0070 EB009000 		.word	9437419
 1727 0074 46415400 		.word	5521734
 1728 0078 46415433 		.word	861159750
 1729              		.cfi_endproc
 1730              	.LFE183:
 1732              		.section	.text.find_volume,"ax",%progbits
 1733              		.align	1
 1734              		.syntax unified
 1735              		.thumb
 1736              		.thumb_func
 1737              		.fpu fpv5-sp-d16
 1739              	find_volume:
 1740              	.LFB184:
2998:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE fmt, *pt;
 1741              		.loc 1 2998 0
 1742              		.cfi_startproc
 1743              		@ args = 0, pretend = 0, frame = 16
 1744              		@ frame_needed = 0, uses_anonymous_args = 0
 1745              	.LVL220:
 1746 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1747              	.LCFI24:
 1748              		.cfi_def_cfa_offset 32
 1749              		.cfi_offset 4, -32
 1750              		.cfi_offset 5, -28
ARM GAS  /tmp/ccwdO2Zj.s 			page 138


 1751              		.cfi_offset 6, -24
 1752              		.cfi_offset 7, -20
 1753              		.cfi_offset 8, -16
 1754              		.cfi_offset 9, -12
 1755              		.cfi_offset 10, -8
 1756              		.cfi_offset 14, -4
 1757 0004 84B0     		sub	sp, sp, #16
 1758              	.LCFI25:
 1759              		.cfi_def_cfa_offset 48
 1760 0006 0E46     		mov	r6, r1
 1761 0008 1746     		mov	r7, r2
3009:Middlewares/Third_Party/FatFs/src/ff.c **** 	vol = get_ldnumber(path);
 1762              		.loc 1 3009 0
 1763 000a 0023     		movs	r3, #0
 1764 000c 0B60     		str	r3, [r1]
3010:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
 1765              		.loc 1 3010 0
 1766 000e FFF7FEFF 		bl	get_ldnumber
 1767              	.LVL221:
3011:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1768              		.loc 1 3011 0
 1769 0012 051E     		subs	r5, r0, #0
 1770 0014 C0F24A81 		blt	.L199
3014:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!fs) return FR_NOT_ENABLED;		/* Is the file system object available? */
 1771              		.loc 1 3014 0
 1772 0018 BA4B     		ldr	r3, .L231
 1773 001a 53F82540 		ldr	r4, [r3, r5, lsl #2]
 1774              	.LVL222:
3015:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1775              		.loc 1 3015 0
 1776 001e 002C     		cmp	r4, #0
 1777 0020 00F04681 		beq	.L200
3017:Middlewares/Third_Party/FatFs/src/ff.c **** 	*rfs = fs;							/* Return pointer to the file system object */
 1778              		.loc 1 3017 0
 1779 0024 2046     		mov	r0, r4
 1780              	.LVL223:
 1781 0026 FFF7FEFF 		bl	lock_fs
 1782              	.LVL224:
 1783 002a 0028     		cmp	r0, #0
 1784 002c 00F04481 		beq	.L201
3018:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1785              		.loc 1 3018 0
 1786 0030 3460     		str	r4, [r6]
3020:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type) {					/* If the volume has been mounted */
 1787              		.loc 1 3020 0
 1788 0032 07F0FE07 		and	r7, r7, #254
 1789              	.LVL225:
3021:Middlewares/Third_Party/FatFs/src/ff.c **** 		stat = disk_status(fs->drv);
 1790              		.loc 1 3021 0
 1791 0036 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1792 0038 73B1     		cbz	r3, .L183
3022:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!(stat & STA_NOINIT)) {		/* and the physical drive is kept initialized */
 1793              		.loc 1 3022 0
 1794 003a 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 1795 003c FFF7FEFF 		bl	disk_status
 1796              	.LVL226:
3023:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!_FS_READONLY && mode && (stat & STA_PROTECT)) {	/* Check write protection if needed */
ARM GAS  /tmp/ccwdO2Zj.s 			page 139


 1797              		.loc 1 3023 0
 1798 0040 10F0010F 		tst	r0, #1
 1799 0044 08D1     		bne	.L183
3024:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_WRITE_PROTECTED;
 1800              		.loc 1 3024 0
 1801 0046 002F     		cmp	r7, #0
 1802 0048 00F03881 		beq	.L202
3024:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_WRITE_PROTECTED;
 1803              		.loc 1 3024 0 is_stmt 0 discriminator 1
 1804 004c 10F0040F 		tst	r0, #4
 1805 0050 40F03681 		bne	.L203
3027:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 1806              		.loc 1 3027 0 is_stmt 1
 1807 0054 0020     		movs	r0, #0
 1808              	.LVL227:
 1809 0056 2CE1     		b	.L182
 1810              	.L183:
3034:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->drv = LD2PD(vol);				/* Bind the logical drive and a physical drive */
 1811              		.loc 1 3034 0
 1812 0058 0023     		movs	r3, #0
 1813 005a 2370     		strb	r3, [r4]
3035:Middlewares/Third_Party/FatFs/src/ff.c **** 	stat = disk_initialize(fs->drv);	/* Initialize the physical drive */
 1814              		.loc 1 3035 0
 1815 005c E8B2     		uxtb	r0, r5
 1816 005e 6070     		strb	r0, [r4, #1]
3036:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_NOINIT) { 			/* Check if the initialization succeeded */
 1817              		.loc 1 3036 0
 1818 0060 FFF7FEFF 		bl	disk_initialize
 1819              	.LVL228:
3037:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_NOT_READY;			/* Failed to initialize due to no medium or hard error */
 1820              		.loc 1 3037 0
 1821 0064 10F0010F 		tst	r0, #1
 1822 0068 40F02C81 		bne	.L204
3040:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_WRITE_PROTECTED;
 1823              		.loc 1 3040 0
 1824 006c 1FB1     		cbz	r7, .L184
3040:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_WRITE_PROTECTED;
 1825              		.loc 1 3040 0 is_stmt 0 discriminator 1
 1826 006e 10F0040F 		tst	r0, #4
 1827 0072 40F02981 		bne	.L205
 1828              	.L184:
 1829              	.LVL229:
3050:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == 2 || (fmt < 2 && LD2PT(vol) != 0)) {	/* Not an FAT-VBR or forced partition number */
 1830              		.loc 1 3050 0 is_stmt 1
 1831 0076 0021     		movs	r1, #0
 1832 0078 2046     		mov	r0, r4
 1833              	.LVL230:
 1834 007a FFF7FEFF 		bl	check_fs
 1835              	.LVL231:
3051:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; i < 4; i++) {		/* Get partition offset */
 1836              		.loc 1 3051 0
 1837 007e 0228     		cmp	r0, #2
 1838 0080 00F0B680 		beq	.L206
3049:Middlewares/Third_Party/FatFs/src/ff.c **** 	fmt = check_fs(fs, bsect);			/* Load sector 0 and check if it is an FAT-VBR as SFD */
 1839              		.loc 1 3049 0
 1840 0084 0026     		movs	r6, #0
 1841              	.LVL232:
ARM GAS  /tmp/ccwdO2Zj.s 			page 140


 1842              	.L186:
3063:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt >= 2) return FR_NO_FILESYSTEM;	/* No FAT volume is found */
 1843              		.loc 1 3063 0
 1844 0086 0428     		cmp	r0, #4
 1845 0088 00F02081 		beq	.L209
3064:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1846              		.loc 1 3064 0
 1847 008c 0128     		cmp	r0, #1
 1848 008e 00F21F81 		bhi	.L210
3116:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1849              		.loc 1 3116 0
 1850 0092 04F13F00 		add	r0, r4, #63
 1851              	.LVL233:
 1852 0096 FFF7FEFF 		bl	ld_word
 1853              	.LVL234:
 1854 009a B0F5007F 		cmp	r0, #512
 1855 009e 40F01981 		bne	.L211
3118:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fasize == 0) fasize = ld_dword(fs->win + BPB_FATSz32);
 1856              		.loc 1 3118 0
 1857 00a2 04F14A00 		add	r0, r4, #74
 1858 00a6 FFF7FEFF 		bl	ld_word
 1859              	.LVL235:
 1860 00aa 0746     		mov	r7, r0
 1861              	.LVL236:
3119:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsize = fasize;
 1862              		.loc 1 3119 0
 1863 00ac 20B9     		cbnz	r0, .L191
3119:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsize = fasize;
 1864              		.loc 1 3119 0 is_stmt 0 discriminator 1
 1865 00ae 04F15800 		add	r0, r4, #88
 1866              	.LVL237:
 1867 00b2 FFF7FEFF 		bl	ld_dword
 1868              	.LVL238:
 1869 00b6 0746     		mov	r7, r0
 1870              	.LVL239:
 1871              	.L191:
3120:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1872              		.loc 1 3120 0 is_stmt 1
 1873 00b8 E761     		str	r7, [r4, #28]
3122:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->n_fats != 1 && fs->n_fats != 2) return FR_NO_FILESYSTEM;	/* (Must be 1 or 2) */
 1874              		.loc 1 3122 0
 1875 00ba 94F84420 		ldrb	r2, [r4, #68]	@ zero_extendqisi2
 1876 00be A270     		strb	r2, [r4, #2]
3123:Middlewares/Third_Party/FatFs/src/ff.c **** 		fasize *= fs->n_fats;							/* Number of sectors for FAT area */
 1877              		.loc 1 3123 0
 1878 00c0 531E     		subs	r3, r2, #1
 1879 00c2 DBB2     		uxtb	r3, r3
 1880 00c4 012B     		cmp	r3, #1
 1881 00c6 00F20781 		bhi	.L212
3124:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1882              		.loc 1 3124 0
 1883 00ca 07FB02F5 		mul	r5, r7, r2
 1884              	.LVL240:
3126:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->csize == 0 || (fs->csize & (fs->csize - 1))) return FR_NO_FILESYSTEM;	/* (Must be power o
 1885              		.loc 1 3126 0
 1886 00ce 94F84180 		ldrb	r8, [r4, #65]	@ zero_extendqisi2
 1887 00d2 A4F80A80 		strh	r8, [r4, #10]	@ movhi
ARM GAS  /tmp/ccwdO2Zj.s 			page 141


3127:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1888              		.loc 1 3127 0
 1889 00d6 B8F1000F 		cmp	r8, #0
 1890 00da 00F0FF80 		beq	.L213
3127:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1891              		.loc 1 3127 0 is_stmt 0 discriminator 2
 1892 00de 08F1FF33 		add	r3, r8, #-1
 1893 00e2 18EA030F 		tst	r8, r3
 1894 00e6 40F0FB80 		bne	.L214
3129:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->n_rootdir % (SS(fs) / SZDIRE)) return FR_NO_FILESYSTEM;	/* (Must be sector aligned) */
 1895              		.loc 1 3129 0 is_stmt 1
 1896 00ea 04F14500 		add	r0, r4, #69
 1897 00ee FFF7FEFF 		bl	ld_word
 1898              	.LVL241:
 1899 00f2 8246     		mov	r10, r0
 1900 00f4 2081     		strh	r0, [r4, #8]	@ movhi
3130:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1901              		.loc 1 3130 0
 1902 00f6 10F00F0F 		tst	r0, #15
 1903 00fa 40F0F380 		bne	.L215
3132:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (tsect == 0) tsect = ld_dword(fs->win + BPB_TotSec32);
 1904              		.loc 1 3132 0
 1905 00fe 04F14700 		add	r0, r4, #71
 1906 0102 FFF7FEFF 		bl	ld_word
 1907              	.LVL242:
 1908 0106 8146     		mov	r9, r0
 1909              	.LVL243:
3133:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1910              		.loc 1 3133 0
 1911 0108 20B9     		cbnz	r0, .L192
3133:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1912              		.loc 1 3133 0 is_stmt 0 discriminator 1
 1913 010a 04F15400 		add	r0, r4, #84
 1914              	.LVL244:
 1915 010e FFF7FEFF 		bl	ld_dword
 1916              	.LVL245:
 1917 0112 8146     		mov	r9, r0
 1918              	.LVL246:
 1919              	.L192:
3135:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nrsv == 0) return FR_NO_FILESYSTEM;			/* (Must not be 0) */
 1920              		.loc 1 3135 0 is_stmt 1
 1921 0114 04F14200 		add	r0, r4, #66
 1922              	.LVL247:
 1923 0118 FFF7FEFF 		bl	ld_word
 1924              	.LVL248:
3136:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1925              		.loc 1 3136 0
 1926 011c 0146     		mov	r1, r0
 1927 011e 0028     		cmp	r0, #0
 1928 0120 00F0E280 		beq	.L216
3139:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (tsect < sysect) return FR_NO_FILESYSTEM;	/* (Invalid volume size) */
 1929              		.loc 1 3139 0
 1930 0124 4219     		adds	r2, r0, r5
 1931 0126 02EB1A12 		add	r2, r2, r10, lsr #4
 1932              	.LVL249:
3140:Middlewares/Third_Party/FatFs/src/ff.c **** 		nclst = (tsect - sysect) / fs->csize;			/* Number of clusters */
 1933              		.loc 1 3140 0
ARM GAS  /tmp/ccwdO2Zj.s 			page 142


 1934 012a 9145     		cmp	r9, r2
 1935 012c C0F0DE80 		bcc	.L217
3141:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nclst == 0) return FR_NO_FILESYSTEM;		/* (Invalid volume size) */
 1936              		.loc 1 3141 0
 1937 0130 A9EB0203 		sub	r3, r9, r2
 1938 0134 B3FBF8F3 		udiv	r3, r3, r8
 1939              	.LVL250:
3142:Middlewares/Third_Party/FatFs/src/ff.c **** 		fmt = FS_FAT32;
 1940              		.loc 1 3142 0
 1941 0138 002B     		cmp	r3, #0
 1942 013a 00F0D980 		beq	.L218
 1943              	.LVL251:
3144:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nclst <= MAX_FAT12) fmt = FS_FAT12;
 1944              		.loc 1 3144 0
 1945 013e 4FF6F570 		movw	r0, #65525
 1946              	.LVL252:
 1947 0142 8342     		cmp	r3, r0
 1948 0144 6CD9     		bls	.L219
3143:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nclst <= MAX_FAT16) fmt = FS_FAT16;
 1949              		.loc 1 3143 0
 1950 0146 4FF00309 		mov	r9, #3
 1951              	.LVL253:
 1952              	.L193:
3145:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1953              		.loc 1 3145 0
 1954 014a 40F6F570 		movw	r0, #4085
 1955 014e 8342     		cmp	r3, r0
 1956 0150 01D8     		bhi	.L194
 1957 0152 4FF00109 		mov	r9, #1
 1958              	.LVL254:
 1959              	.L194:
3148:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->volbase = bsect;							/* Volume start sector */
 1960              		.loc 1 3148 0
 1961 0156 03F10208 		add	r8, r3, #2
 1962 015a C4F81880 		str	r8, [r4, #24]
3149:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fatbase = bsect + nrsv; 					/* FAT start sector */
 1963              		.loc 1 3149 0
 1964 015e 2662     		str	r6, [r4, #32]
3150:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->database = bsect + sysect;					/* Data start sector */
 1965              		.loc 1 3150 0
 1966 0160 8B19     		adds	r3, r1, r6
 1967              	.LVL255:
 1968 0162 6362     		str	r3, [r4, #36]
3151:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fmt == FS_FAT32) {
 1969              		.loc 1 3151 0
 1970 0164 3244     		add	r2, r2, r6
 1971              	.LVL256:
 1972 0166 E262     		str	r2, [r4, #44]
3152:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ld_word(fs->win + BPB_FSVer32) != 0) return FR_NO_FILESYSTEM;	/* (Must be FAT32 revision 0.0
 1973              		.loc 1 3152 0
 1974 0168 B9F1030F 		cmp	r9, #3
 1975 016c 5BD0     		beq	.L226
3158:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->dirbase = fs->fatbase + fasize;			/* Root directory start sector */
 1976              		.loc 1 3158 0
 1977 016e BAF1000F 		cmp	r10, #0
 1978 0172 00F0C380 		beq	.L223
3159:Middlewares/Third_Party/FatFs/src/ff.c **** 			szbfat = (fmt == FS_FAT16) ?				/* (Needed FAT size) */
ARM GAS  /tmp/ccwdO2Zj.s 			page 143


 1979              		.loc 1 3159 0
 1980 0176 2B44     		add	r3, r3, r5
 1981 0178 A362     		str	r3, [r4, #40]
3161:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 1982              		.loc 1 3161 0
 1983 017a B9F1020F 		cmp	r9, #2
 1984 017e 63D0     		beq	.L227
3161:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 1985              		.loc 1 3161 0 is_stmt 0 discriminator 2
 1986 0180 08EB4802 		add	r2, r8, r8, lsl #1
 1987 0184 08F00103 		and	r3, r8, #1
 1988 0188 03EB5203 		add	r3, r3, r2, lsr #1
 1989              	.LVL257:
 1990              	.L196:
3163:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1991              		.loc 1 3163 0 is_stmt 1
 1992 018c 03F2FF13 		addw	r3, r3, #511
 1993              	.LVL258:
 1994 0190 B7EB532F 		cmp	r7, r3, lsr #9
 1995 0194 C0F0B480 		bcc	.L224
3167:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsi_flag = 0x80;
 1996              		.loc 1 3167 0
 1997 0198 4FF0FF33 		mov	r3, #-1
 1998              	.LVL259:
 1999 019c 6361     		str	r3, [r4, #20]
 2000 019e 2361     		str	r3, [r4, #16]
3168:Middlewares/Third_Party/FatFs/src/ff.c **** #if (_FS_NOFSINFO & 3) != 3
 2001              		.loc 1 3168 0
 2002 01a0 8023     		movs	r3, #128
 2003 01a2 2371     		strb	r3, [r4, #4]
3170:Middlewares/Third_Party/FatFs/src/ff.c **** 			&& ld_word(fs->win + BPB_FSInfo32) == 1
 2004              		.loc 1 3170 0
 2005 01a4 B9F1030F 		cmp	r9, #3
 2006 01a8 51D0     		beq	.L228
 2007              	.L198:
3191:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->id = ++Fsid;		/* File system mount ID */
 2008              		.loc 1 3191 0
 2009 01aa 84F80090 		strb	r9, [r4]
3192:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN == 1
 2010              		.loc 1 3192 0
 2011 01ae 564A     		ldr	r2, .L231+4
 2012 01b0 1388     		ldrh	r3, [r2]
 2013 01b2 0133     		adds	r3, r3, #1
 2014 01b4 9BB2     		uxth	r3, r3
 2015 01b6 1380     		strh	r3, [r2]	@ movhi
 2016 01b8 E380     		strh	r3, [r4, #6]	@ movhi
3203:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 2017              		.loc 1 3203 0
 2018 01ba 2046     		mov	r0, r4
 2019 01bc FFF7FEFF 		bl	clear_lock
 2020              	.LVL260:
3205:Middlewares/Third_Party/FatFs/src/ff.c **** }
 2021              		.loc 1 3205 0
 2022 01c0 0020     		movs	r0, #0
 2023 01c2 76E0     		b	.L182
 2024              	.LVL261:
 2025              	.L207:
ARM GAS  /tmp/ccwdO2Zj.s 			page 144


3054:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2026              		.loc 1 3054 0
 2027 01c4 0020     		movs	r0, #0
 2028              	.LVL262:
 2029              	.L187:
3054:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2030              		.loc 1 3054 0 is_stmt 0 discriminator 4
 2031 01c6 04AB     		add	r3, sp, #16
 2032 01c8 03EB8503 		add	r3, r3, r5, lsl #2
 2033 01cc 43F8100C 		str	r0, [r3, #-16]
3052:Middlewares/Third_Party/FatFs/src/ff.c **** 			pt = fs->win + (MBR_Table + i * SZ_PTE);
 2034              		.loc 1 3052 0 is_stmt 1 discriminator 4
 2035 01d0 0135     		adds	r5, r5, #1
 2036              	.LVL263:
 2037              	.L185:
3052:Middlewares/Third_Party/FatFs/src/ff.c **** 			pt = fs->win + (MBR_Table + i * SZ_PTE);
 2038              		.loc 1 3052 0 is_stmt 0 discriminator 2
 2039 01d2 032D     		cmp	r5, #3
 2040 01d4 0ED8     		bhi	.L229
3053:Middlewares/Third_Party/FatFs/src/ff.c **** 			br[i] = pt[PTE_System] ? ld_dword(pt + PTE_StLba) : 0;
 2041              		.loc 1 3053 0 is_stmt 1
 2042 01d6 04F13400 		add	r0, r4, #52
 2043 01da 2B01     		lsls	r3, r5, #4
 2044 01dc 03F5DF73 		add	r3, r3, #446
 2045 01e0 1844     		add	r0, r0, r3
 2046              	.LVL264:
3054:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2047              		.loc 1 3054 0
 2048 01e2 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 2049 01e4 002B     		cmp	r3, #0
 2050 01e6 EDD0     		beq	.L207
3054:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2051              		.loc 1 3054 0 is_stmt 0 discriminator 1
 2052 01e8 0830     		adds	r0, r0, #8
 2053              	.LVL265:
 2054 01ea FFF7FEFF 		bl	ld_dword
 2055              	.LVL266:
 2056 01ee EAE7     		b	.L187
 2057              	.LVL267:
 2058              	.L206:
3052:Middlewares/Third_Party/FatFs/src/ff.c **** 			pt = fs->win + (MBR_Table + i * SZ_PTE);
 2059              		.loc 1 3052 0 is_stmt 1
 2060 01f0 0025     		movs	r5, #0
 2061              	.LVL268:
 2062 01f2 EEE7     		b	.L185
 2063              	.LVL269:
 2064              	.L229:
 2065 01f4 0025     		movs	r5, #0
 2066              	.LVL270:
 2067 01f6 0AE0     		b	.L190
 2068              	.LVL271:
 2069              	.L230:
3060:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (LD2PT(vol) == 0 && fmt >= 2 && ++i < 4);
 2070              		.loc 1 3060 0 discriminator 1
 2071 01f8 3146     		mov	r1, r6
 2072 01fa 2046     		mov	r0, r4
 2073 01fc FFF7FEFF 		bl	check_fs
ARM GAS  /tmp/ccwdO2Zj.s 			page 145


 2074              	.LVL272:
3061:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2075              		.loc 1 3061 0 discriminator 1
 2076 0200 0128     		cmp	r0, #1
 2077 0202 7FF640AF 		bls	.L186
 2078              	.LVL273:
 2079              	.L189:
 2080 0206 0135     		adds	r5, r5, #1
 2081              	.LVL274:
 2082 0208 032D     		cmp	r5, #3
 2083 020a 3FF63CAF 		bhi	.L186
 2084              	.LVL275:
 2085              	.L190:
3059:Middlewares/Third_Party/FatFs/src/ff.c **** 			fmt = bsect ? check_fs(fs, bsect) : 3;	/* Check the partition */
 2086              		.loc 1 3059 0
 2087 020e 04AB     		add	r3, sp, #16
 2088 0210 03EB8503 		add	r3, r3, r5, lsl #2
 2089 0214 53F8106C 		ldr	r6, [r3, #-16]
 2090              	.LVL276:
3060:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (LD2PT(vol) == 0 && fmt >= 2 && ++i < 4);
 2091              		.loc 1 3060 0
 2092 0218 002E     		cmp	r6, #0
 2093 021a EDD1     		bne	.L230
 2094 021c 0320     		movs	r0, #3
 2095 021e F2E7     		b	.L189
 2096              	.LVL277:
 2097              	.L219:
3144:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nclst <= MAX_FAT12) fmt = FS_FAT12;
 2098              		.loc 1 3144 0
 2099 0220 4FF00209 		mov	r9, #2
 2100              	.LVL278:
 2101 0224 91E7     		b	.L193
 2102              	.LVL279:
 2103              	.L226:
3153:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->n_rootdir) return FR_NO_FILESYSTEM;	/* (BPB_RootEntCnt must be 0) */
 2104              		.loc 1 3153 0
 2105 0226 04F15E00 		add	r0, r4, #94
 2106 022a FFF7FEFF 		bl	ld_word
 2107              	.LVL280:
 2108 022e 0028     		cmp	r0, #0
 2109 0230 60D1     		bne	.L221
3154:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->dirbase = ld_dword(fs->win + BPB_RootClus32);	/* Root directory start cluster */
 2110              		.loc 1 3154 0
 2111 0232 BAF1000F 		cmp	r10, #0
 2112 0236 5FD1     		bne	.L222
3155:Middlewares/Third_Party/FatFs/src/ff.c **** 			szbfat = fs->n_fatent * 4;					/* (Needed FAT size) */
 2113              		.loc 1 3155 0
 2114 0238 04F16000 		add	r0, r4, #96
 2115 023c FFF7FEFF 		bl	ld_dword
 2116              	.LVL281:
 2117 0240 A062     		str	r0, [r4, #40]
3156:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 2118              		.loc 1 3156 0
 2119 0242 4FEA8803 		lsl	r3, r8, #2
 2120              	.LVL282:
 2121 0246 A1E7     		b	.L196
 2122              	.LVL283:
ARM GAS  /tmp/ccwdO2Zj.s 			page 146


 2123              	.L227:
3161:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2124              		.loc 1 3161 0 discriminator 1
 2125 0248 4FEA4803 		lsl	r3, r8, #1
 2126 024c 9EE7     		b	.L196
 2127              	.LVL284:
 2128              	.L228:
3171:Middlewares/Third_Party/FatFs/src/ff.c **** 			&& move_window(fs, bsect + 1) == FR_OK)
 2129              		.loc 1 3171 0
 2130 024e 04F16400 		add	r0, r4, #100
 2131 0252 FFF7FEFF 		bl	ld_word
 2132              	.LVL285:
 2133 0256 0128     		cmp	r0, #1
 2134 0258 A7D1     		bne	.L198
3172:Middlewares/Third_Party/FatFs/src/ff.c **** 		{
 2135              		.loc 1 3172 0
 2136 025a 711C     		adds	r1, r6, #1
 2137 025c 2046     		mov	r0, r4
 2138 025e FFF7FEFF 		bl	move_window
 2139              	.LVL286:
 2140 0262 0028     		cmp	r0, #0
 2141 0264 A1D1     		bne	.L198
3174:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ld_word(fs->win + BS_55AA) == 0xAA55	/* Load FSINFO data if available */
 2142              		.loc 1 3174 0
 2143 0266 0023     		movs	r3, #0
 2144 0268 2371     		strb	r3, [r4, #4]
3175:Middlewares/Third_Party/FatFs/src/ff.c **** 				&& ld_dword(fs->win + FSI_LeadSig) == 0x41615252
 2145              		.loc 1 3175 0
 2146 026a 04F23220 		addw	r0, r4, #562
 2147 026e FFF7FEFF 		bl	ld_word
 2148              	.LVL287:
 2149 0272 4AF65523 		movw	r3, #43605
 2150 0276 9842     		cmp	r0, r3
 2151 0278 97D1     		bne	.L198
3176:Middlewares/Third_Party/FatFs/src/ff.c **** 				&& ld_dword(fs->win + FSI_StrucSig) == 0x61417272)
 2152              		.loc 1 3176 0
 2153 027a 04F13400 		add	r0, r4, #52
 2154 027e FFF7FEFF 		bl	ld_dword
 2155              	.LVL288:
 2156 0282 224B     		ldr	r3, .L231+8
 2157 0284 9842     		cmp	r0, r3
 2158 0286 90D1     		bne	.L198
3177:Middlewares/Third_Party/FatFs/src/ff.c **** 			{
 2159              		.loc 1 3177 0
 2160 0288 04F50670 		add	r0, r4, #536
 2161 028c FFF7FEFF 		bl	ld_dword
 2162              	.LVL289:
 2163 0290 1F4B     		ldr	r3, .L231+12
 2164 0292 9842     		cmp	r0, r3
 2165 0294 89D1     		bne	.L198
3180:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 2166              		.loc 1 3180 0
 2167 0296 04F50770 		add	r0, r4, #540
 2168 029a FFF7FEFF 		bl	ld_dword
 2169              	.LVL290:
 2170 029e 6061     		str	r0, [r4, #20]
3183:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
ARM GAS  /tmp/ccwdO2Zj.s 			page 147


 2171              		.loc 1 3183 0
 2172 02a0 04F50870 		add	r0, r4, #544
 2173 02a4 FFF7FEFF 		bl	ld_dword
 2174              	.LVL291:
 2175 02a8 2061     		str	r0, [r4, #16]
 2176 02aa 7EE7     		b	.L198
 2177              	.LVL292:
 2178              	.L199:
3011:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2179              		.loc 1 3011 0
 2180 02ac 0B20     		movs	r0, #11
 2181              	.LVL293:
 2182 02ae 00E0     		b	.L182
 2183              	.LVL294:
 2184              	.L200:
3015:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2185              		.loc 1 3015 0
 2186 02b0 0C20     		movs	r0, #12
 2187              	.LVL295:
 2188              	.L182:
3206:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2189              		.loc 1 3206 0
 2190 02b2 04B0     		add	sp, sp, #16
 2191              	.LCFI26:
 2192              		.cfi_remember_state
 2193              		.cfi_def_cfa_offset 32
 2194              		@ sp needed
 2195 02b4 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 2196              	.LVL296:
 2197              	.L201:
 2198              	.LCFI27:
 2199              		.cfi_restore_state
3017:Middlewares/Third_Party/FatFs/src/ff.c **** 	*rfs = fs;							/* Return pointer to the file system object */
 2200              		.loc 1 3017 0
 2201 02b8 0F20     		movs	r0, #15
 2202 02ba FAE7     		b	.L182
 2203              	.LVL297:
 2204              	.L202:
3027:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2205              		.loc 1 3027 0
 2206 02bc 0020     		movs	r0, #0
 2207              	.LVL298:
 2208 02be F8E7     		b	.L182
 2209              	.LVL299:
 2210              	.L203:
3025:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 2211              		.loc 1 3025 0
 2212 02c0 0A20     		movs	r0, #10
 2213              	.LVL300:
 2214 02c2 F6E7     		b	.L182
 2215              	.LVL301:
 2216              	.L204:
3038:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2217              		.loc 1 3038 0
 2218 02c4 0320     		movs	r0, #3
 2219              	.LVL302:
 2220 02c6 F4E7     		b	.L182
ARM GAS  /tmp/ccwdO2Zj.s 			page 148


 2221              	.LVL303:
 2222              	.L205:
3041:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2223              		.loc 1 3041 0
 2224 02c8 0A20     		movs	r0, #10
 2225              	.LVL304:
 2226 02ca F2E7     		b	.L182
 2227              	.LVL305:
 2228              	.L209:
3063:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt >= 2) return FR_NO_FILESYSTEM;	/* No FAT volume is found */
 2229              		.loc 1 3063 0
 2230 02cc 0120     		movs	r0, #1
 2231              	.LVL306:
 2232 02ce F0E7     		b	.L182
 2233              	.LVL307:
 2234              	.L210:
3064:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2235              		.loc 1 3064 0
 2236 02d0 0D20     		movs	r0, #13
 2237              	.LVL308:
 2238 02d2 EEE7     		b	.L182
 2239              	.L211:
3116:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2240              		.loc 1 3116 0
 2241 02d4 0D20     		movs	r0, #13
 2242 02d6 ECE7     		b	.L182
 2243              	.LVL309:
 2244              	.L212:
3123:Middlewares/Third_Party/FatFs/src/ff.c **** 		fasize *= fs->n_fats;							/* Number of sectors for FAT area */
 2245              		.loc 1 3123 0
 2246 02d8 0D20     		movs	r0, #13
 2247              	.LVL310:
 2248 02da EAE7     		b	.L182
 2249              	.LVL311:
 2250              	.L213:
3127:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2251              		.loc 1 3127 0
 2252 02dc 0D20     		movs	r0, #13
 2253 02de E8E7     		b	.L182
 2254              	.L214:
 2255 02e0 0D20     		movs	r0, #13
 2256 02e2 E6E7     		b	.L182
 2257              	.L215:
3130:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2258              		.loc 1 3130 0
 2259 02e4 0D20     		movs	r0, #13
 2260 02e6 E4E7     		b	.L182
 2261              	.LVL312:
 2262              	.L216:
3136:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2263              		.loc 1 3136 0
 2264 02e8 0D20     		movs	r0, #13
 2265              	.LVL313:
 2266 02ea E2E7     		b	.L182
 2267              	.LVL314:
 2268              	.L217:
3140:Middlewares/Third_Party/FatFs/src/ff.c **** 		nclst = (tsect - sysect) / fs->csize;			/* Number of clusters */
ARM GAS  /tmp/ccwdO2Zj.s 			page 149


 2269              		.loc 1 3140 0
 2270 02ec 0D20     		movs	r0, #13
 2271              	.LVL315:
 2272 02ee E0E7     		b	.L182
 2273              	.LVL316:
 2274              	.L218:
3142:Middlewares/Third_Party/FatFs/src/ff.c **** 		fmt = FS_FAT32;
 2275              		.loc 1 3142 0
 2276 02f0 0D20     		movs	r0, #13
 2277              	.LVL317:
 2278 02f2 DEE7     		b	.L182
 2279              	.LVL318:
 2280              	.L221:
3153:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->n_rootdir) return FR_NO_FILESYSTEM;	/* (BPB_RootEntCnt must be 0) */
 2281              		.loc 1 3153 0
 2282 02f4 0D20     		movs	r0, #13
 2283 02f6 DCE7     		b	.L182
 2284              	.L222:
3154:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->dirbase = ld_dword(fs->win + BPB_RootClus32);	/* Root directory start cluster */
 2285              		.loc 1 3154 0
 2286 02f8 0D20     		movs	r0, #13
 2287 02fa DAE7     		b	.L182
 2288              	.LVL319:
 2289              	.L223:
3158:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->dirbase = fs->fatbase + fasize;			/* Root directory start sector */
 2290              		.loc 1 3158 0
 2291 02fc 0D20     		movs	r0, #13
 2292 02fe D8E7     		b	.L182
 2293              	.LVL320:
 2294              	.L224:
3163:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2295              		.loc 1 3163 0
 2296 0300 0D20     		movs	r0, #13
 2297 0302 D6E7     		b	.L182
 2298              	.L232:
 2299              		.align	2
 2300              	.L231:
 2301 0304 00000000 		.word	.LANCHOR2
 2302 0308 00000000 		.word	.LANCHOR3
 2303 030c 52526141 		.word	1096897106
 2304 0310 72724161 		.word	1631679090
 2305              		.cfi_endproc
 2306              	.LFE184:
 2308              		.section	.text.put_fat,"ax",%progbits
 2309              		.align	1
 2310              		.syntax unified
 2311              		.thumb
 2312              		.thumb_func
 2313              		.fpu fpv5-sp-d16
 2315              	put_fat:
 2316              	.LFB166:
1086:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT bc;
 2317              		.loc 1 1086 0
 2318              		.cfi_startproc
 2319              		@ args = 0, pretend = 0, frame = 0
 2320              		@ frame_needed = 0, uses_anonymous_args = 0
 2321              	.LVL321:
ARM GAS  /tmp/ccwdO2Zj.s 			page 150


 2322 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 2323              	.LCFI28:
 2324              		.cfi_def_cfa_offset 32
 2325              		.cfi_offset 4, -32
 2326              		.cfi_offset 5, -28
 2327              		.cfi_offset 6, -24
 2328              		.cfi_offset 7, -20
 2329              		.cfi_offset 8, -16
 2330              		.cfi_offset 9, -12
 2331              		.cfi_offset 10, -8
 2332              		.cfi_offset 14, -4
 2333              	.LVL322:
1091:Middlewares/Third_Party/FatFs/src/ff.c **** 		switch (fs->fs_type) {
 2334              		.loc 1 1091 0
 2335 0004 0129     		cmp	r1, #1
 2336 0006 7AD9     		bls	.L242
1091:Middlewares/Third_Party/FatFs/src/ff.c **** 		switch (fs->fs_type) {
 2337              		.loc 1 1091 0 is_stmt 0 discriminator 1
 2338 0008 8369     		ldr	r3, [r0, #24]
 2339 000a 8B42     		cmp	r3, r1
 2340 000c 79D9     		bls	.L243
 2341 000e 1746     		mov	r7, r2
 2342 0010 0C46     		mov	r4, r1
 2343 0012 0646     		mov	r6, r0
1092:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT12 :	/* Bitfield items */
 2344              		.loc 1 1092 0 is_stmt 1
 2345 0014 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 2346 0016 022B     		cmp	r3, #2
 2347 0018 43D0     		beq	.L235
 2348 001a 032B     		cmp	r3, #3
 2349 001c 54D0     		beq	.L236
 2350 001e 012B     		cmp	r3, #1
 2351 0020 01D0     		beq	.L247
1089:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2352              		.loc 1 1089 0
 2353 0022 0225     		movs	r5, #2
 2354 0024 6EE0     		b	.L234
 2355              	.L247:
 2356              	.LVL323:
1094:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
 2357              		.loc 1 1094 0
 2358 0026 01EB5108 		add	r8, r1, r1, lsr #1
 2359              	.LVL324:
1095:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 2360              		.loc 1 1095 0
 2361 002a 416A     		ldr	r1, [r0, #36]
 2362              	.LVL325:
 2363 002c 01EB5821 		add	r1, r1, r8, lsr #9
 2364 0030 FFF7FEFF 		bl	move_window
 2365              	.LVL326:
1096:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = fs->win + bc++ % SS(fs);
 2366              		.loc 1 1096 0
 2367 0034 0546     		mov	r5, r0
 2368 0036 0028     		cmp	r0, #0
 2369 0038 64D1     		bne	.L234
1097:Middlewares/Third_Party/FatFs/src/ff.c **** 			*p = (clst & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;
 2370              		.loc 1 1097 0
ARM GAS  /tmp/ccwdO2Zj.s 			page 151


 2371 003a 06F1340A 		add	r10, r6, #52
 2372 003e 08F10109 		add	r9, r8, #1
 2373              	.LVL327:
 2374 0042 C8F30808 		ubfx	r8, r8, #0, #9
 2375              	.LVL328:
1098:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2376              		.loc 1 1098 0
 2377 0046 14F00104 		ands	r4, r4, #1
 2378              	.LVL329:
 2379 004a 1FD0     		beq	.L238
1098:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2380              		.loc 1 1098 0 is_stmt 0 discriminator 1
 2381 004c 1AF90830 		ldrsb	r3, [r10, r8]
 2382 0050 03F00F03 		and	r3, r3, #15
 2383 0054 3A01     		lsls	r2, r7, #4
 2384 0056 02F47F62 		and	r2, r2, #4080
 2385 005a 1343     		orrs	r3, r3, r2
 2386 005c DBB2     		uxtb	r3, r3
 2387              	.L239:
1098:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2388              		.loc 1 1098 0 discriminator 4
 2389 005e 0AF80830 		strb	r3, [r10, r8]
1099:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
 2390              		.loc 1 1099 0 is_stmt 1 discriminator 4
 2391 0062 0123     		movs	r3, #1
 2392 0064 F370     		strb	r3, [r6, #3]
1100:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 2393              		.loc 1 1100 0 discriminator 4
 2394 0066 716A     		ldr	r1, [r6, #36]
 2395 0068 01EB5921 		add	r1, r1, r9, lsr #9
 2396 006c 3046     		mov	r0, r6
 2397              	.LVL330:
 2398 006e FFF7FEFF 		bl	move_window
 2399              	.LVL331:
1101:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = fs->win + bc % SS(fs);
 2400              		.loc 1 1101 0 discriminator 4
 2401 0072 0546     		mov	r5, r0
 2402 0074 0028     		cmp	r0, #0
 2403 0076 45D1     		bne	.L234
1102:Middlewares/Third_Party/FatFs/src/ff.c **** 			*p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x0F));
 2404              		.loc 1 1102 0
 2405 0078 C9F30809 		ubfx	r9, r9, #0, #9
 2406              	.LVL332:
1103:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2407              		.loc 1 1103 0
 2408 007c 44B1     		cbz	r4, .L240
1103:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2409              		.loc 1 1103 0 is_stmt 0 discriminator 1
 2410 007e C7F30712 		ubfx	r2, r7, #4, #8
 2411              	.LVL333:
 2412              	.L241:
1103:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2413              		.loc 1 1103 0 discriminator 4
 2414 0082 0AF80920 		strb	r2, [r10, r9]
1104:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 2415              		.loc 1 1104 0 is_stmt 1 discriminator 4
 2416 0086 0123     		movs	r3, #1
ARM GAS  /tmp/ccwdO2Zj.s 			page 152


 2417 0088 F370     		strb	r3, [r6, #3]
1105:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2418              		.loc 1 1105 0 discriminator 4
 2419 008a 3BE0     		b	.L234
 2420              	.LVL334:
 2421              	.L238:
1098:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2422              		.loc 1 1098 0 discriminator 2
 2423 008c FBB2     		uxtb	r3, r7
 2424 008e E6E7     		b	.L239
 2425              	.LVL335:
 2426              	.L240:
1103:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2427              		.loc 1 1103 0 discriminator 2
 2428 0090 1AF90920 		ldrsb	r2, [r10, r9]
 2429 0094 22F00F02 		bic	r2, r2, #15
 2430 0098 C7F30327 		ubfx	r7, r7, #8, #4
 2431              	.LVL336:
 2432 009c 3A43     		orrs	r2, r2, r7
 2433 009e D2B2     		uxtb	r2, r2
 2434 00a0 EFE7     		b	.L241
 2435              	.LVL337:
 2436              	.L235:
1108:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 2437              		.loc 1 1108 0
 2438 00a2 416A     		ldr	r1, [r0, #36]
 2439              	.LVL338:
 2440 00a4 01EB1421 		add	r1, r1, r4, lsr #8
 2441 00a8 FFF7FEFF 		bl	move_window
 2442              	.LVL339:
1109:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(fs->win + clst * 2 % SS(fs), (WORD)val);
 2443              		.loc 1 1109 0
 2444 00ac 0546     		mov	r5, r0
 2445 00ae 48BB     		cbnz	r0, .L234
1110:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2446              		.loc 1 1110 0
 2447 00b0 06F13400 		add	r0, r6, #52
 2448              	.LVL340:
 2449 00b4 6400     		lsls	r4, r4, #1
 2450              	.LVL341:
 2451 00b6 04F4FF74 		and	r4, r4, #510
 2452 00ba B9B2     		uxth	r1, r7
 2453 00bc 2044     		add	r0, r0, r4
 2454 00be FFF7FEFF 		bl	st_word
 2455              	.LVL342:
1111:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 2456              		.loc 1 1111 0
 2457 00c2 0123     		movs	r3, #1
 2458 00c4 F370     		strb	r3, [r6, #3]
1112:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2459              		.loc 1 1112 0
 2460 00c6 1DE0     		b	.L234
 2461              	.LVL343:
 2462              	.L236:
1118:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 2463              		.loc 1 1118 0
 2464 00c8 416A     		ldr	r1, [r0, #36]
ARM GAS  /tmp/ccwdO2Zj.s 			page 153


 2465              	.LVL344:
 2466 00ca 01EBD411 		add	r1, r1, r4, lsr #7
 2467 00ce FFF7FEFF 		bl	move_window
 2468              	.LVL345:
1119:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {
 2469              		.loc 1 1119 0
 2470 00d2 0546     		mov	r5, r0
 2471 00d4 B0B9     		cbnz	r0, .L234
1121:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 2472              		.loc 1 1121 0
 2473 00d6 27F07047 		bic	r7, r7, #-268435456
 2474              	.LVL346:
 2475 00da 06F13403 		add	r3, r6, #52
 2476 00de A100     		lsls	r1, r4, #2
 2477 00e0 01F4FE71 		and	r1, r1, #508
 2478 00e4 5C18     		adds	r4, r3, r1
 2479              	.LVL347:
 2480 00e6 2046     		mov	r0, r4
 2481              	.LVL348:
 2482 00e8 FFF7FEFF 		bl	ld_dword
 2483              	.LVL349:
 2484 00ec 00F07041 		and	r1, r0, #-268435456
 2485              	.LVL350:
1123:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2486              		.loc 1 1123 0
 2487 00f0 3943     		orrs	r1, r1, r7
 2488              	.LVL351:
 2489 00f2 2046     		mov	r0, r4
 2490 00f4 FFF7FEFF 		bl	st_dword
 2491              	.LVL352:
1124:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 2492              		.loc 1 1124 0
 2493 00f8 0123     		movs	r3, #1
 2494 00fa F370     		strb	r3, [r6, #3]
1125:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2495              		.loc 1 1125 0
 2496 00fc 02E0     		b	.L234
 2497              	.LVL353:
 2498              	.L242:
1089:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2499              		.loc 1 1089 0
 2500 00fe 0225     		movs	r5, #2
 2501 0100 00E0     		b	.L234
 2502              	.L243:
 2503 0102 0225     		movs	r5, #2
 2504              	.LVL354:
 2505              	.L234:
1129:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2506              		.loc 1 1129 0
 2507 0104 2846     		mov	r0, r5
 2508 0106 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 2509              		.cfi_endproc
 2510              	.LFE166:
 2512              		.section	.text.get_fat,"ax",%progbits
 2513              		.align	1
 2514              		.syntax unified
 2515              		.thumb
ARM GAS  /tmp/ccwdO2Zj.s 			page 154


 2516              		.thumb_func
 2517              		.fpu fpv5-sp-d16
 2519              	get_fat:
 2520              	.LFB165:
1005:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT wc, bc;
 2521              		.loc 1 1005 0
 2522              		.cfi_startproc
 2523              		@ args = 0, pretend = 0, frame = 0
 2524              		@ frame_needed = 0, uses_anonymous_args = 0
 2525              	.LVL355:
 2526 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2527              	.LCFI29:
 2528              		.cfi_def_cfa_offset 24
 2529              		.cfi_offset 3, -24
 2530              		.cfi_offset 4, -20
 2531              		.cfi_offset 5, -16
 2532              		.cfi_offset 6, -12
 2533              		.cfi_offset 7, -8
 2534              		.cfi_offset 14, -4
1008:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2535              		.loc 1 1008 0
 2536 0002 0668     		ldr	r6, [r0]
 2537              	.LVL356:
1011:Middlewares/Third_Party/FatFs/src/ff.c **** 		val = 1;	/* Internal error */
 2538              		.loc 1 1011 0
 2539 0004 0129     		cmp	r1, #1
 2540 0006 53D9     		bls	.L254
1011:Middlewares/Third_Party/FatFs/src/ff.c **** 		val = 1;	/* Internal error */
 2541              		.loc 1 1011 0 is_stmt 0 discriminator 1
 2542 0008 B369     		ldr	r3, [r6, #24]
 2543 000a 8B42     		cmp	r3, r1
 2544 000c 52D9     		bls	.L255
 2545 000e 0C46     		mov	r4, r1
 2546              	.LVL357:
1017:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT12 :
 2547              		.loc 1 1017 0 is_stmt 1
 2548 0010 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 2549 0012 022B     		cmp	r3, #2
 2550 0014 2BD0     		beq	.L250
 2551 0016 032B     		cmp	r3, #3
 2552 0018 39D0     		beq	.L251
 2553 001a 012B     		cmp	r3, #1
 2554 001c 01D0     		beq	.L263
1065:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2555              		.loc 1 1065 0
 2556 001e 0120     		movs	r0, #1
 2557              	.LVL358:
 2558 0020 47E0     		b	.L248
 2559              	.LVL359:
 2560              	.L263:
1019:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
 2561              		.loc 1 1019 0
 2562 0022 01EB5105 		add	r5, r1, r1, lsr #1
 2563              	.LVL360:
1020:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc = fs->win[bc++ % SS(fs)];
 2564              		.loc 1 1020 0
 2565 0026 716A     		ldr	r1, [r6, #36]
ARM GAS  /tmp/ccwdO2Zj.s 			page 155


 2566              	.LVL361:
 2567 0028 01EB5521 		add	r1, r1, r5, lsr #9
 2568 002c 3046     		mov	r0, r6
 2569              	.LVL362:
 2570 002e FFF7FEFF 		bl	move_window
 2571              	.LVL363:
 2572 0032 0028     		cmp	r0, #0
 2573 0034 40D1     		bne	.L257
1021:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
 2574              		.loc 1 1021 0
 2575 0036 6F1C     		adds	r7, r5, #1
 2576              	.LVL364:
 2577 0038 C5F30805 		ubfx	r5, r5, #0, #9
 2578 003c 3544     		add	r5, r5, r6
 2579 003e 95F83450 		ldrb	r5, [r5, #52]	@ zero_extendqisi2
 2580              	.LVL365:
1022:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc |= fs->win[bc % SS(fs)] << 8;
 2581              		.loc 1 1022 0
 2582 0042 716A     		ldr	r1, [r6, #36]
 2583 0044 01EB5721 		add	r1, r1, r7, lsr #9
 2584 0048 3046     		mov	r0, r6
 2585 004a FFF7FEFF 		bl	move_window
 2586              	.LVL366:
 2587 004e B0BB     		cbnz	r0, .L258
1023:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = (clst & 1) ? (wc >> 4) : (wc & 0xFFF);
 2588              		.loc 1 1023 0
 2589 0050 C7F30803 		ubfx	r3, r7, #0, #9
 2590 0054 3344     		add	r3, r3, r6
 2591 0056 93F83400 		ldrb	r0, [r3, #52]	@ zero_extendqisi2
 2592 005a 45EA0020 		orr	r0, r5, r0, lsl #8
 2593              	.LVL367:
1024:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 2594              		.loc 1 1024 0
 2595 005e 14F0010F 		tst	r4, #1
 2596 0062 01D0     		beq	.L253
1024:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 2597              		.loc 1 1024 0 is_stmt 0 discriminator 1
 2598 0064 0009     		lsrs	r0, r0, #4
 2599              	.LVL368:
 2600 0066 24E0     		b	.L248
 2601              	.LVL369:
 2602              	.L253:
1024:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 2603              		.loc 1 1024 0 discriminator 2
 2604 0068 C0F30B00 		ubfx	r0, r0, #0, #12
 2605              	.LVL370:
 2606 006c 21E0     		b	.L248
 2607              	.LVL371:
 2608              	.L250:
1028:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = ld_word(fs->win + clst * 2 % SS(fs));
 2609              		.loc 1 1028 0 is_stmt 1
 2610 006e 716A     		ldr	r1, [r6, #36]
 2611              	.LVL372:
 2612 0070 01EB1421 		add	r1, r1, r4, lsr #8
 2613 0074 3046     		mov	r0, r6
 2614              	.LVL373:
 2615 0076 FFF7FEFF 		bl	move_window
ARM GAS  /tmp/ccwdO2Zj.s 			page 156


 2616              	.LVL374:
 2617 007a 18BB     		cbnz	r0, .L259
1029:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 2618              		.loc 1 1029 0
 2619 007c 06F13400 		add	r0, r6, #52
 2620 0080 6100     		lsls	r1, r4, #1
 2621 0082 01F4FF71 		and	r1, r1, #510
 2622 0086 0844     		add	r0, r0, r1
 2623 0088 FFF7FEFF 		bl	ld_word
 2624              	.LVL375:
1030:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2625              		.loc 1 1030 0
 2626 008c 11E0     		b	.L248
 2627              	.LVL376:
 2628              	.L251:
1033:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = ld_dword(fs->win + clst * 4 % SS(fs)) & 0x0FFFFFFF;
 2629              		.loc 1 1033 0
 2630 008e 716A     		ldr	r1, [r6, #36]
 2631              	.LVL377:
 2632 0090 01EBD411 		add	r1, r1, r4, lsr #7
 2633 0094 3046     		mov	r0, r6
 2634              	.LVL378:
 2635 0096 FFF7FEFF 		bl	move_window
 2636              	.LVL379:
 2637 009a B0B9     		cbnz	r0, .L260
1034:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 2638              		.loc 1 1034 0
 2639 009c 3436     		adds	r6, r6, #52
 2640              	.LVL380:
 2641 009e A100     		lsls	r1, r4, #2
 2642 00a0 01F4FE70 		and	r0, r1, #508
 2643 00a4 3044     		add	r0, r0, r6
 2644 00a6 FFF7FEFF 		bl	ld_dword
 2645              	.LVL381:
 2646 00aa 20F07040 		bic	r0, r0, #-268435456
 2647              	.LVL382:
1035:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 2648              		.loc 1 1035 0
 2649 00ae 00E0     		b	.L248
 2650              	.LVL383:
 2651              	.L254:
1012:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2652              		.loc 1 1012 0
 2653 00b0 0120     		movs	r0, #1
 2654              	.LVL384:
 2655              	.L248:
1070:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2656              		.loc 1 1070 0
 2657 00b2 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2658              	.LVL385:
 2659              	.L255:
1012:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2660              		.loc 1 1012 0
 2661 00b4 0120     		movs	r0, #1
 2662              	.LVL386:
 2663 00b6 FCE7     		b	.L248
 2664              	.LVL387:
ARM GAS  /tmp/ccwdO2Zj.s 			page 157


 2665              	.L257:
1015:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2666              		.loc 1 1015 0
 2667 00b8 4FF0FF30 		mov	r0, #-1
 2668 00bc F9E7     		b	.L248
 2669              	.LVL388:
 2670              	.L258:
 2671 00be 4FF0FF30 		mov	r0, #-1
 2672 00c2 F6E7     		b	.L248
 2673              	.LVL389:
 2674              	.L259:
 2675 00c4 4FF0FF30 		mov	r0, #-1
 2676 00c8 F3E7     		b	.L248
 2677              	.L260:
 2678 00ca 4FF0FF30 		mov	r0, #-1
1069:Middlewares/Third_Party/FatFs/src/ff.c **** }
 2679              		.loc 1 1069 0
 2680 00ce F0E7     		b	.L248
 2681              		.cfi_endproc
 2682              	.LFE165:
 2684              		.section	.text.dir_sdi,"ax",%progbits
 2685              		.align	1
 2686              		.syntax unified
 2687              		.thumb
 2688              		.thumb_func
 2689              		.fpu fpv5-sp-d16
 2691              	dir_sdi:
 2692              	.LFB170:
1474:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD csz, clst;
 2693              		.loc 1 1474 0
 2694              		.cfi_startproc
 2695              		@ args = 0, pretend = 0, frame = 0
 2696              		@ frame_needed = 0, uses_anonymous_args = 0
 2697              	.LVL390:
 2698 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2699              	.LCFI30:
 2700              		.cfi_def_cfa_offset 24
 2701              		.cfi_offset 4, -24
 2702              		.cfi_offset 5, -20
 2703              		.cfi_offset 6, -16
 2704              		.cfi_offset 7, -12
 2705              		.cfi_offset 8, -8
 2706              		.cfi_offset 14, -4
1476:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2707              		.loc 1 1476 0
 2708 0004 0768     		ldr	r7, [r0]
 2709              	.LVL391:
1479:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_INT_ERR;
 2710              		.loc 1 1479 0
 2711 0006 B1F5001F 		cmp	r1, #2097152
 2712 000a 3BD2     		bcs	.L271
 2713 000c 0646     		mov	r6, r0
 2714 000e 0D46     		mov	r5, r1
1479:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_INT_ERR;
 2715              		.loc 1 1479 0 is_stmt 0 discriminator 1
 2716 0010 11F01F0F 		tst	r1, #31
 2717 0014 39D1     		bne	.L272
ARM GAS  /tmp/ccwdO2Zj.s 			page 158


1482:Middlewares/Third_Party/FatFs/src/ff.c **** 	clst = dp->obj.sclust;		/* Table start cluster (0:root) */
 2718              		.loc 1 1482 0 is_stmt 1
 2719 0016 7161     		str	r1, [r6, #20]
1483:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst == 0 && fs->fs_type >= FS_FAT32) {	/* Replace cluster# 0 with root cluster# */
 2720              		.loc 1 1483 0
 2721 0018 8468     		ldr	r4, [r0, #8]
 2722              	.LVL392:
1484:Middlewares/Third_Party/FatFs/src/ff.c **** 		clst = fs->dirbase;
 2723              		.loc 1 1484 0
 2724 001a 1CB9     		cbnz	r4, .L266
1484:Middlewares/Third_Party/FatFs/src/ff.c **** 		clst = fs->dirbase;
 2725              		.loc 1 1484 0 is_stmt 0 discriminator 1
 2726 001c 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 2727 001e 022B     		cmp	r3, #2
 2728 0020 00D9     		bls	.L266
1485:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_EXFAT) dp->obj.stat = 0;	/* exFAT: Root dir has an FAT chain */
 2729              		.loc 1 1485 0 is_stmt 1
 2730 0022 BC6A     		ldr	r4, [r7, #40]
 2731              	.LVL393:
 2732              	.L266:
1489:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs / SZDIRE >= fs->n_rootdir)	return FR_INT_ERR;	/* Is index out of range? */
 2733              		.loc 1 1489 0
 2734 0024 94B9     		cbnz	r4, .L267
1490:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->sect = fs->dirbase;
 2735              		.loc 1 1490 0
 2736 0026 3B89     		ldrh	r3, [r7, #8]
 2737 0028 B3EB551F 		cmp	r3, r5, lsr #5
 2738 002c 2FD9     		bls	.L273
1491:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2739              		.loc 1 1491 0
 2740 002e BB6A     		ldr	r3, [r7, #40]
 2741 0030 F361     		str	r3, [r6, #28]
 2742              	.LVL394:
 2743              	.L268:
1503:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!dp->sect) return FR_INT_ERR;
 2744              		.loc 1 1503 0
 2745 0032 B461     		str	r4, [r6, #24]
1504:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->sect += ofs / SS(fs);			/* Sector# of the directory entry */
 2746              		.loc 1 1504 0
 2747 0034 F369     		ldr	r3, [r6, #28]
 2748 0036 93B3     		cbz	r3, .L277
1505:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->dir = fs->win + (ofs % SS(fs));	/* Pointer to the entry in the win[] */
 2749              		.loc 1 1505 0
 2750 0038 03EB5523 		add	r3, r3, r5, lsr #9
 2751 003c F361     		str	r3, [r6, #28]
1506:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2752              		.loc 1 1506 0
 2753 003e 3437     		adds	r7, r7, #52
 2754              	.LVL395:
 2755 0040 C5F30805 		ubfx	r5, r5, #0, #9
 2756              	.LVL396:
 2757 0044 3D44     		add	r5, r5, r7
 2758 0046 3562     		str	r5, [r6, #32]
1508:Middlewares/Third_Party/FatFs/src/ff.c **** }
 2759              		.loc 1 1508 0
 2760 0048 0020     		movs	r0, #0
 2761 004a 1CE0     		b	.L265
ARM GAS  /tmp/ccwdO2Zj.s 			page 159


 2762              	.LVL397:
 2763              	.L267:
1494:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (ofs >= csz) {				/* Follow cluster chain */
 2764              		.loc 1 1494 0
 2765 004c B7F80A80 		ldrh	r8, [r7, #10]
 2766 0050 4FEA4828 		lsl	r8, r8, #9
 2767              	.LVL398:
 2768              	.L269:
1495:Middlewares/Third_Party/FatFs/src/ff.c **** 			clst = get_fat(&dp->obj, clst);				/* Get next cluster */
 2769              		.loc 1 1495 0
 2770 0054 4545     		cmp	r5, r8
 2771 0056 0FD3     		bcc	.L279
1496:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
 2772              		.loc 1 1496 0
 2773 0058 2146     		mov	r1, r4
 2774 005a 3046     		mov	r0, r6
 2775 005c FFF7FEFF 		bl	get_fat
 2776              	.LVL399:
 2777 0060 0446     		mov	r4, r0
 2778              	.LVL400:
1497:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;	/* Reached to end of table or internal 
 2779              		.loc 1 1497 0
 2780 0062 B0F1FF3F 		cmp	r0, #-1
 2781 0066 14D0     		beq	.L274
1498:Middlewares/Third_Party/FatFs/src/ff.c **** 			ofs -= csz;
 2782              		.loc 1 1498 0
 2783 0068 0128     		cmp	r0, #1
 2784 006a 14D9     		bls	.L275
1498:Middlewares/Third_Party/FatFs/src/ff.c **** 			ofs -= csz;
 2785              		.loc 1 1498 0 is_stmt 0 discriminator 2
 2786 006c BB69     		ldr	r3, [r7, #24]
 2787 006e 8342     		cmp	r3, r0
 2788 0070 13D9     		bls	.L276
1499:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2789              		.loc 1 1499 0 is_stmt 1
 2790 0072 A5EB0805 		sub	r5, r5, r8
 2791              	.LVL401:
 2792 0076 EDE7     		b	.L269
 2793              	.LVL402:
 2794              	.L279:
1501:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2795              		.loc 1 1501 0
 2796 0078 2146     		mov	r1, r4
 2797 007a 3846     		mov	r0, r7
 2798 007c FFF7FEFF 		bl	clust2sect
 2799              	.LVL403:
 2800 0080 F061     		str	r0, [r6, #28]
 2801 0082 D6E7     		b	.L268
 2802              	.LVL404:
 2803              	.L271:
1480:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2804              		.loc 1 1480 0
 2805 0084 0220     		movs	r0, #2
 2806              	.LVL405:
 2807              	.L265:
1509:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2808              		.loc 1 1509 0
ARM GAS  /tmp/ccwdO2Zj.s 			page 160


 2809 0086 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2810              	.LVL406:
 2811              	.L272:
1480:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2812              		.loc 1 1480 0
 2813 008a 0220     		movs	r0, #2
 2814              	.LVL407:
 2815 008c FBE7     		b	.L265
 2816              	.LVL408:
 2817              	.L273:
1490:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->sect = fs->dirbase;
 2818              		.loc 1 1490 0
 2819 008e 0220     		movs	r0, #2
 2820              	.LVL409:
 2821 0090 F9E7     		b	.L265
 2822              	.LVL410:
 2823              	.L274:
1497:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;	/* Reached to end of table or internal 
 2824              		.loc 1 1497 0
 2825 0092 0120     		movs	r0, #1
 2826              	.LVL411:
 2827 0094 F7E7     		b	.L265
 2828              	.LVL412:
 2829              	.L275:
1498:Middlewares/Third_Party/FatFs/src/ff.c **** 			ofs -= csz;
 2830              		.loc 1 1498 0
 2831 0096 0220     		movs	r0, #2
 2832              	.LVL413:
 2833 0098 F5E7     		b	.L265
 2834              	.LVL414:
 2835              	.L276:
 2836 009a 0220     		movs	r0, #2
 2837              	.LVL415:
 2838 009c F3E7     		b	.L265
 2839              	.LVL416:
 2840              	.L277:
1504:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->sect += ofs / SS(fs);			/* Sector# of the directory entry */
 2841              		.loc 1 1504 0
 2842 009e 0220     		movs	r0, #2
 2843 00a0 F1E7     		b	.L265
 2844              		.cfi_endproc
 2845              	.LFE170:
 2847              		.section	.text.create_chain,"ax",%progbits
 2848              		.align	1
 2849              		.syntax unified
 2850              		.thumb
 2851              		.thumb_func
 2852              		.fpu fpv5-sp-d16
 2854              	create_chain:
 2855              	.LFB168:
1355:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cs, ncl, scl;
 2856              		.loc 1 1355 0
 2857              		.cfi_startproc
 2858              		@ args = 0, pretend = 0, frame = 0
 2859              		@ frame_needed = 0, uses_anonymous_args = 0
 2860              	.LVL417:
 2861 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
ARM GAS  /tmp/ccwdO2Zj.s 			page 161


 2862              	.LCFI31:
 2863              		.cfi_def_cfa_offset 24
 2864              		.cfi_offset 4, -24
 2865              		.cfi_offset 5, -20
 2866              		.cfi_offset 6, -16
 2867              		.cfi_offset 7, -12
 2868              		.cfi_offset 8, -8
 2869              		.cfi_offset 14, -4
 2870 0004 0746     		mov	r7, r0
1358:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2871              		.loc 1 1358 0
 2872 0006 0668     		ldr	r6, [r0]
 2873              	.LVL418:
1361:Middlewares/Third_Party/FatFs/src/ff.c **** 		scl = fs->last_clst;				/* Get suggested cluster to start from */
 2874              		.loc 1 1361 0
 2875 0008 8846     		mov	r8, r1
 2876 000a 31B9     		cbnz	r1, .L281
1362:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (scl == 0 || scl >= fs->n_fatent) scl = 1;
 2877              		.loc 1 1362 0
 2878 000c 3569     		ldr	r5, [r6, #16]
 2879              	.LVL419:
1363:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2880              		.loc 1 1363 0
 2881 000e 8DB1     		cbz	r5, .L290
1363:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2882              		.loc 1 1363 0 is_stmt 0 discriminator 2
 2883 0010 B369     		ldr	r3, [r6, #24]
 2884 0012 AB42     		cmp	r3, r5
 2885 0014 0FD8     		bhi	.L282
1363:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2886              		.loc 1 1363 0
 2887 0016 0125     		movs	r5, #1
 2888              	.LVL420:
 2889 0018 0DE0     		b	.L282
 2890              	.LVL421:
 2891              	.L281:
1366:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs < 2) return 1;				/* Invalid FAT value */
 2892              		.loc 1 1366 0 is_stmt 1
 2893 001a FFF7FEFF 		bl	get_fat
 2894              	.LVL422:
 2895 001e 0346     		mov	r3, r0
 2896              	.LVL423:
1367:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs == 0xFFFFFFFF) return cs;	/* A disk error occurred */
 2897              		.loc 1 1367 0
 2898 0020 0128     		cmp	r0, #1
 2899 0022 4CD9     		bls	.L292
1368:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs < fs->n_fatent) return cs;	/* It is already followed by next cluster */
 2900              		.loc 1 1368 0
 2901 0024 B0F1FF3F 		cmp	r0, #-1
 2902 0028 4ED0     		beq	.L280
1369:Middlewares/Third_Party/FatFs/src/ff.c **** 		scl = clst;
 2903              		.loc 1 1369 0
 2904 002a B269     		ldr	r2, [r6, #24]
 2905 002c 8242     		cmp	r2, r0
 2906 002e 4BD8     		bhi	.L280
1370:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2907              		.loc 1 1370 0
ARM GAS  /tmp/ccwdO2Zj.s 			page 162


 2908 0030 4546     		mov	r5, r8
 2909 0032 00E0     		b	.L282
 2910              	.LVL424:
 2911              	.L290:
1363:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2912              		.loc 1 1363 0
 2913 0034 0125     		movs	r5, #1
 2914              	.LVL425:
 2915              	.L282:
1400:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (;;) {
 2916              		.loc 1 1400 0
 2917 0036 2C46     		mov	r4, r5
 2918 0038 0CE0     		b	.L286
 2919              	.LVL426:
 2920              	.L284:
1407:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cs == 0) break;				/* Found a free cluster */
 2921              		.loc 1 1407 0
 2922 003a 2146     		mov	r1, r4
 2923 003c 3846     		mov	r0, r7
 2924 003e FFF7FEFF 		bl	get_fat
 2925              	.LVL427:
1408:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cs == 1 || cs == 0xFFFFFFFF) return cs;	/* An error occurred */
 2926              		.loc 1 1408 0
 2927 0042 0346     		mov	r3, r0
 2928 0044 70B1     		cbz	r0, .L285
1409:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl == scl) return 0;		/* No free cluster */
 2929              		.loc 1 1409 0
 2930 0046 B0F1FF3F 		cmp	r0, #-1
 2931 004a 18BF     		it	ne
 2932 004c 0128     		cmpne	r0, #1
 2933 004e 3BD0     		beq	.L280
1410:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2934              		.loc 1 1410 0
 2935 0050 AC42     		cmp	r4, r5
 2936 0052 38D0     		beq	.L297
 2937              	.LVL428:
 2938              	.L286:
1402:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl >= fs->n_fatent) {		/* Check wrap-around */
 2939              		.loc 1 1402 0
 2940 0054 0134     		adds	r4, r4, #1
 2941              	.LVL429:
1403:Middlewares/Third_Party/FatFs/src/ff.c **** 				ncl = 2;
 2942              		.loc 1 1403 0
 2943 0056 B369     		ldr	r3, [r6, #24]
 2944 0058 A342     		cmp	r3, r4
 2945 005a EED8     		bhi	.L284
 2946              	.LVL430:
1405:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 2947              		.loc 1 1405 0
 2948 005c 012D     		cmp	r5, #1
 2949 005e 30D9     		bls	.L293
1404:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ncl > scl) return 0;	/* No free cluster */
 2950              		.loc 1 1404 0
 2951 0060 0224     		movs	r4, #2
 2952 0062 EAE7     		b	.L284
 2953              	.LVL431:
 2954              	.L285:
ARM GAS  /tmp/ccwdO2Zj.s 			page 163


1412:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK && clst != 0) {
 2955              		.loc 1 1412 0
 2956 0064 4FF0FF32 		mov	r2, #-1
 2957 0068 2146     		mov	r1, r4
 2958 006a 3046     		mov	r0, r6
 2959              	.LVL432:
 2960 006c FFF7FEFF 		bl	put_fat
 2961              	.LVL433:
1413:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = put_fat(fs, clst, ncl);	/* Link it from the previous one if needed */
 2962              		.loc 1 1413 0
 2963 0070 0246     		mov	r2, r0
 2964 0072 18F10003 		adds	r3, r8, #0
 2965 0076 18BF     		it	ne
 2966 0078 0123     		movne	r3, #1
 2967 007a 0028     		cmp	r0, #0
 2968 007c 0CBF     		ite	eq
 2969 007e 1846     		moveq	r0, r3
 2970 0080 0020     		movne	r0, #0
 2971              	.LVL434:
 2972 0082 70B9     		cbnz	r0, .L298
 2973              	.L287:
 2974              	.LVL435:
1418:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->last_clst = ncl;
 2975              		.loc 1 1418 0
 2976 0084 A2B9     		cbnz	r2, .L288
1419:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->free_clst <= fs->n_fatent - 2) fs->free_clst--;
 2977              		.loc 1 1419 0
 2978 0086 3461     		str	r4, [r6, #16]
1420:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsi_flag |= 1;
 2979              		.loc 1 1420 0
 2980 0088 7269     		ldr	r2, [r6, #20]
 2981              	.LVL436:
 2982 008a B369     		ldr	r3, [r6, #24]
 2983 008c 023B     		subs	r3, r3, #2
 2984 008e 9A42     		cmp	r2, r3
 2985 0090 01D8     		bhi	.L289
1420:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsi_flag |= 1;
 2986              		.loc 1 1420 0 is_stmt 0 discriminator 1
 2987 0092 013A     		subs	r2, r2, #1
 2988 0094 7261     		str	r2, [r6, #20]
 2989              	.L289:
1421:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
 2990              		.loc 1 1421 0 is_stmt 1
 2991 0096 3379     		ldrb	r3, [r6, #4]	@ zero_extendqisi2
 2992 0098 43F00103 		orr	r3, r3, #1
 2993 009c 3371     		strb	r3, [r6, #4]
 2994 009e 2346     		mov	r3, r4
 2995 00a0 12E0     		b	.L280
 2996              	.L298:
1414:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2997              		.loc 1 1414 0
 2998 00a2 2246     		mov	r2, r4
 2999 00a4 4146     		mov	r1, r8
 3000 00a6 3046     		mov	r0, r6
 3001 00a8 FFF7FEFF 		bl	put_fat
 3002              	.LVL437:
 3003 00ac 0246     		mov	r2, r0
ARM GAS  /tmp/ccwdO2Zj.s 			page 164


 3004              	.LVL438:
 3005 00ae E9E7     		b	.L287
 3006              	.L288:
1423:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3007              		.loc 1 1423 0
 3008 00b0 012A     		cmp	r2, #1
 3009 00b2 01D0     		beq	.L299
 3010 00b4 0123     		movs	r3, #1
 3011 00b6 07E0     		b	.L280
 3012              	.L299:
 3013 00b8 4FF0FF33 		mov	r3, #-1
 3014 00bc 04E0     		b	.L280
 3015              	.LVL439:
 3016              	.L292:
1367:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs == 0xFFFFFFFF) return cs;	/* A disk error occurred */
 3017              		.loc 1 1367 0
 3018 00be 0123     		movs	r3, #1
 3019 00c0 02E0     		b	.L280
 3020              	.LVL440:
 3021              	.L293:
1405:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 3022              		.loc 1 1405 0
 3023 00c2 0023     		movs	r3, #0
 3024 00c4 00E0     		b	.L280
 3025              	.LVL441:
 3026              	.L297:
1410:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 3027              		.loc 1 1410 0
 3028 00c6 0023     		movs	r3, #0
 3029              	.LVL442:
 3030              	.L280:
1427:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3031              		.loc 1 1427 0
 3032 00c8 1846     		mov	r0, r3
 3033 00ca BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3034              		.cfi_endproc
 3035              	.LFE168:
 3037              		.section	.text.remove_chain,"ax",%progbits
 3038              		.align	1
 3039              		.syntax unified
 3040              		.thumb
 3041              		.thumb_func
 3042              		.fpu fpv5-sp-d16
 3044              	remove_chain:
 3045              	.LFB167:
1276:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_OK;
 3046              		.loc 1 1276 0
 3047              		.cfi_startproc
 3048              		@ args = 0, pretend = 0, frame = 0
 3049              		@ frame_needed = 0, uses_anonymous_args = 0
 3050              	.LVL443:
 3051 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3052              	.LCFI32:
 3053              		.cfi_def_cfa_offset 24
 3054              		.cfi_offset 3, -24
 3055              		.cfi_offset 4, -20
 3056              		.cfi_offset 5, -16
ARM GAS  /tmp/ccwdO2Zj.s 			page 165


 3057              		.cfi_offset 6, -12
 3058              		.cfi_offset 7, -8
 3059              		.cfi_offset 14, -4
 3060 0002 0E46     		mov	r6, r1
 3061              	.LVL444:
1279:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT || _USE_TRIM
 3062              		.loc 1 1279 0
 3063 0004 0568     		ldr	r5, [r0]
 3064              	.LVL445:
1287:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3065              		.loc 1 1287 0
 3066 0006 0129     		cmp	r1, #1
 3067 0008 2ED9     		bls	.L305
 3068 000a 0746     		mov	r7, r0
 3069 000c 1146     		mov	r1, r2
 3070              	.LVL446:
1287:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3071              		.loc 1 1287 0 is_stmt 0 discriminator 2
 3072 000e AB69     		ldr	r3, [r5, #24]
 3073 0010 B342     		cmp	r3, r6
 3074 0012 2CD9     		bls	.L306
1290:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = put_fat(fs, pclst, 0xFFFFFFFF);
 3075              		.loc 1 1290 0 is_stmt 1
 3076 0014 52B1     		cbz	r2, .L304
1291:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) return res;
 3077              		.loc 1 1291 0
 3078 0016 4FF0FF32 		mov	r2, #-1
 3079              	.LVL447:
 3080 001a 2846     		mov	r0, r5
 3081              	.LVL448:
 3082 001c FFF7FEFF 		bl	put_fat
 3083              	.LVL449:
1292:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3084              		.loc 1 1292 0
 3085 0020 8446     		mov	ip, r0
 3086 0022 18B1     		cbz	r0, .L304
 3087 0024 25E0     		b	.L301
 3088              	.LVL450:
 3089              	.L303:
1327:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (clst < fs->n_fatent);	/* Repeat while not the last link */
 3090              		.loc 1 1327 0
 3091 0026 2646     		mov	r6, r4
1328:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3092              		.loc 1 1328 0
 3093 0028 A242     		cmp	r2, r4
 3094 002a 22D9     		bls	.L301
 3095              	.LVL451:
 3096              	.L304:
1297:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nxt == 0) break;				/* Empty cluster? */
 3097              		.loc 1 1297 0
 3098 002c 3146     		mov	r1, r6
 3099 002e 3846     		mov	r0, r7
 3100 0030 FFF7FEFF 		bl	get_fat
 3101              	.LVL452:
1298:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nxt == 1) return FR_INT_ERR;	/* Internal error? */
 3102              		.loc 1 1298 0
 3103 0034 0446     		mov	r4, r0
ARM GAS  /tmp/ccwdO2Zj.s 			page 166


 3104 0036 F0B1     		cbz	r0, .L307
1299:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nxt == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error? */
 3105              		.loc 1 1299 0
 3106 0038 0128     		cmp	r0, #1
 3107 003a 1FD0     		beq	.L308
1300:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {
 3108              		.loc 1 1300 0
 3109 003c B0F1FF3F 		cmp	r0, #-1
 3110 0040 1FD0     		beq	.L309
1302:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) return res;
 3111              		.loc 1 1302 0
 3112 0042 0022     		movs	r2, #0
 3113 0044 3146     		mov	r1, r6
 3114 0046 2846     		mov	r0, r5
 3115              	.LVL453:
 3116 0048 FFF7FEFF 		bl	put_fat
 3117              	.LVL454:
1303:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 3118              		.loc 1 1303 0
 3119 004c 8446     		mov	ip, r0
 3120 004e 80B9     		cbnz	r0, .L301
1305:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->free_clst++;
 3121              		.loc 1 1305 0
 3122 0050 6B69     		ldr	r3, [r5, #20]
 3123 0052 AA69     		ldr	r2, [r5, #24]
 3124 0054 911E     		subs	r1, r2, #2
 3125 0056 8B42     		cmp	r3, r1
 3126 0058 E5D2     		bcs	.L303
1306:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag |= 1;
 3127              		.loc 1 1306 0
 3128 005a 0133     		adds	r3, r3, #1
 3129 005c 6B61     		str	r3, [r5, #20]
1307:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 3130              		.loc 1 1307 0
 3131 005e 2B79     		ldrb	r3, [r5, #4]	@ zero_extendqisi2
 3132 0060 43F00103 		orr	r3, r3, #1
 3133 0064 2B71     		strb	r3, [r5, #4]
 3134 0066 DEE7     		b	.L303
 3135              	.LVL455:
 3136              	.L305:
1287:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3137              		.loc 1 1287 0
 3138 0068 4FF0020C 		mov	ip, #2
 3139 006c 01E0     		b	.L301
 3140              	.LVL456:
 3141              	.L306:
 3142 006e 4FF0020C 		mov	ip, #2
 3143              	.LVL457:
 3144              	.L301:
1342:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3145              		.loc 1 1342 0
 3146 0072 6046     		mov	r0, ip
 3147 0074 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3148              	.LVL458:
 3149              	.L307:
1341:Middlewares/Third_Party/FatFs/src/ff.c **** }
 3150              		.loc 1 1341 0
ARM GAS  /tmp/ccwdO2Zj.s 			page 167


 3151 0076 4FF0000C 		mov	ip, #0
 3152 007a FAE7     		b	.L301
 3153              	.L308:
1299:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nxt == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error? */
 3154              		.loc 1 1299 0
 3155 007c 4FF0020C 		mov	ip, #2
 3156 0080 F7E7     		b	.L301
 3157              	.L309:
1300:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {
 3158              		.loc 1 1300 0
 3159 0082 4FF0010C 		mov	ip, #1
 3160 0086 F4E7     		b	.L301
 3161              		.cfi_endproc
 3162              	.LFE167:
 3164              		.section	.text.dir_remove,"ax",%progbits
 3165              		.align	1
 3166              		.syntax unified
 3167              		.thumb
 3168              		.thumb_func
 3169              		.fpu fpv5-sp-d16
 3171              	dir_remove:
 3172              	.LFB178:
2399:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 3173              		.loc 1 2399 0
 3174              		.cfi_startproc
 3175              		@ args = 0, pretend = 0, frame = 0
 3176              		@ frame_needed = 0, uses_anonymous_args = 0
 3177              	.LVL459:
 3178 0000 38B5     		push	{r3, r4, r5, lr}
 3179              	.LCFI33:
 3180              		.cfi_def_cfa_offset 16
 3181              		.cfi_offset 3, -16
 3182              		.cfi_offset 4, -12
 3183              		.cfi_offset 5, -8
 3184              		.cfi_offset 14, -4
 3185 0002 0446     		mov	r4, r0
2401:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
 3186              		.loc 1 2401 0
 3187 0004 0568     		ldr	r5, [r0]
 3188              	.LVL460:
2424:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 3189              		.loc 1 2424 0
 3190 0006 C169     		ldr	r1, [r0, #28]
 3191 0008 2846     		mov	r0, r5
 3192              	.LVL461:
 3193 000a FFF7FEFF 		bl	move_window
 3194              	.LVL462:
2425:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->dir[DIR_Name] = DDEM;
 3195              		.loc 1 2425 0
 3196 000e 0346     		mov	r3, r0
 3197 0010 20B9     		cbnz	r0, .L312
2426:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->wflag = 1;
 3198              		.loc 1 2426 0
 3199 0012 226A     		ldr	r2, [r4, #32]
 3200 0014 E521     		movs	r1, #229
 3201 0016 1170     		strb	r1, [r2]
2427:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
ARM GAS  /tmp/ccwdO2Zj.s 			page 168


 3202              		.loc 1 2427 0
 3203 0018 0122     		movs	r2, #1
 3204 001a EA70     		strb	r2, [r5, #3]
 3205              	.L312:
2432:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3206              		.loc 1 2432 0
 3207 001c 1846     		mov	r0, r3
 3208              	.LVL463:
 3209 001e 38BD     		pop	{r3, r4, r5, pc}
 3210              		.cfi_endproc
 3211              	.LFE178:
 3213              		.section	.text.dir_next,"ax",%progbits
 3214              		.align	1
 3215              		.syntax unified
 3216              		.thumb
 3217              		.thumb_func
 3218              		.fpu fpv5-sp-d16
 3220              	dir_next:
 3221              	.LFB171:
1523:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ofs, clst;
 3222              		.loc 1 1523 0
 3223              		.cfi_startproc
 3224              		@ args = 0, pretend = 0, frame = 0
 3225              		@ frame_needed = 0, uses_anonymous_args = 0
 3226              	.LVL464:
 3227 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 3228              	.LCFI34:
 3229              		.cfi_def_cfa_offset 32
 3230              		.cfi_offset 3, -32
 3231              		.cfi_offset 4, -28
 3232              		.cfi_offset 5, -24
 3233              		.cfi_offset 6, -20
 3234              		.cfi_offset 7, -16
 3235              		.cfi_offset 8, -12
 3236              		.cfi_offset 9, -8
 3237              		.cfi_offset 14, -4
1525:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 3238              		.loc 1 1525 0
 3239 0004 0668     		ldr	r6, [r0]
 3240              	.LVL465:
1530:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!dp->sect || ofs >= (DWORD)((_FS_EXFAT && fs->fs_type == FS_EXFAT) ? MAX_DIR_EX : MAX_DIR)) re
 3241              		.loc 1 1530 0
 3242 0006 4569     		ldr	r5, [r0, #20]
 3243              	.LVL466:
1531:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3244              		.loc 1 1531 0
 3245 0008 C369     		ldr	r3, [r0, #28]
 3246 000a 002B     		cmp	r3, #0
 3247 000c 6ED0     		beq	.L322
 3248 000e 2035     		adds	r5, r5, #32
 3249              	.LVL467:
1531:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3250              		.loc 1 1531 0 is_stmt 0 discriminator 2
 3251 0010 B5F5001F 		cmp	r5, #2097152
 3252 0014 6CD2     		bcs	.L323
 3253 0016 8846     		mov	r8, r1
 3254 0018 0446     		mov	r4, r0
ARM GAS  /tmp/ccwdO2Zj.s 			page 169


1533:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->sect++;				/* Next sector */
 3255              		.loc 1 1533 0 is_stmt 1
 3256 001a C5F30807 		ubfx	r7, r5, #0, #9
 3257 001e 3FB9     		cbnz	r7, .L316
1534:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3258              		.loc 1 1534 0
 3259 0020 0133     		adds	r3, r3, #1
 3260 0022 C361     		str	r3, [r0, #28]
1536:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ofs / SZDIRE >= fs->n_rootdir) {	/* Report EOT if it reached end of static table */
 3261              		.loc 1 1536 0
 3262 0024 8169     		ldr	r1, [r0, #24]
 3263              	.LVL468:
 3264 0026 79B9     		cbnz	r1, .L317
1537:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->sect = 0; return FR_NO_FILE;
 3265              		.loc 1 1537 0
 3266 0028 3389     		ldrh	r3, [r6, #8]
 3267 002a B3EB551F 		cmp	r3, r5, lsr #5
 3268 002e 07D9     		bls	.L332
 3269              	.LVL469:
 3270              	.L316:
1574:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->dir = fs->win + ofs % SS(fs);	/* Pointer to the entry in the win[] */
 3271              		.loc 1 1574 0
 3272 0030 6561     		str	r5, [r4, #20]
1575:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3273              		.loc 1 1575 0
 3274 0032 06F13403 		add	r3, r6, #52
 3275 0036 3B44     		add	r3, r3, r7
 3276 0038 2362     		str	r3, [r4, #32]
1577:Middlewares/Third_Party/FatFs/src/ff.c **** }
 3277              		.loc 1 1577 0
 3278 003a 0020     		movs	r0, #0
 3279              	.LVL470:
 3280              	.L315:
1578:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3281              		.loc 1 1578 0
 3282 003c BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3283              	.LVL471:
 3284              	.L332:
1538:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 3285              		.loc 1 1538 0
 3286 0040 0023     		movs	r3, #0
 3287 0042 C361     		str	r3, [r0, #28]
 3288 0044 0420     		movs	r0, #4
 3289              	.LVL472:
 3290 0046 F9E7     		b	.L315
 3291              	.LVL473:
 3292              	.L317:
1542:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = get_fat(&dp->obj, dp->clust);			/* Get next cluster */
 3293              		.loc 1 1542 0
 3294 0048 7389     		ldrh	r3, [r6, #10]
 3295 004a 013B     		subs	r3, r3, #1
 3296 004c 13EA5523 		ands	r3, r3, r5, lsr #9
 3297 0050 EED1     		bne	.L316
1543:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst <= 1) return FR_INT_ERR;				/* Internal error */
 3298              		.loc 1 1543 0
 3299 0052 FFF7FEFF 		bl	get_fat
 3300              	.LVL474:
ARM GAS  /tmp/ccwdO2Zj.s 			page 170


 3301 0056 8146     		mov	r9, r0
 3302              	.LVL475:
1544:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) return FR_DISK_ERR;		/* Disk error */
 3303              		.loc 1 1544 0
 3304 0058 0128     		cmp	r0, #1
 3305 005a 4BD9     		bls	.L324
1545:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst >= fs->n_fatent) {						/* Reached end of dynamic table */
 3306              		.loc 1 1545 0
 3307 005c B0F1FF3F 		cmp	r0, #-1
 3308 0060 4AD0     		beq	.L325
1546:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 3309              		.loc 1 1546 0
 3310 0062 B369     		ldr	r3, [r6, #24]
 3311 0064 8342     		cmp	r3, r0
 3312 0066 39D8     		bhi	.L318
1548:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->sect = 0; return FR_NO_FILE;
 3313              		.loc 1 1548 0
 3314 0068 B8F1000F 		cmp	r8, #0
 3315 006c 11D0     		beq	.L333
1551:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0) return FR_DENIED;			/* No free cluster */
 3316              		.loc 1 1551 0
 3317 006e A169     		ldr	r1, [r4, #24]
 3318 0070 2046     		mov	r0, r4
 3319              	.LVL476:
 3320 0072 FFF7FEFF 		bl	create_chain
 3321              	.LVL477:
1552:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 1) return FR_INT_ERR;			/* Internal error */
 3322              		.loc 1 1552 0
 3323 0076 8146     		mov	r9, r0
 3324 0078 0028     		cmp	r0, #0
 3325 007a 3FD0     		beq	.L326
1553:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
 3326              		.loc 1 1553 0
 3327 007c 0128     		cmp	r0, #1
 3328 007e 3FD0     		beq	.L327
1554:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Clean-up the stretched table */
 3329              		.loc 1 1554 0
 3330 0080 B0F1FF3F 		cmp	r0, #-1
 3331 0084 3ED0     		beq	.L328
1557:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_set(fs->win, 0, SS(fs));				/* Clear window buffer */
 3332              		.loc 1 1557 0
 3333 0086 3046     		mov	r0, r6
 3334              	.LVL478:
 3335 0088 FFF7FEFF 		bl	sync_window
 3336              	.LVL479:
 3337 008c 28B1     		cbz	r0, .L334
 3338 008e 0120     		movs	r0, #1
 3339 0090 D4E7     		b	.L315
 3340              	.LVL480:
 3341              	.L333:
1549:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 3342              		.loc 1 1549 0
 3343 0092 0023     		movs	r3, #0
 3344 0094 E361     		str	r3, [r4, #28]
 3345 0096 0420     		movs	r0, #4
 3346              	.LVL481:
 3347 0098 D0E7     		b	.L315
ARM GAS  /tmp/ccwdO2Zj.s 			page 171


 3348              	.L334:
1558:Middlewares/Third_Party/FatFs/src/ff.c **** 					for (n = 0, fs->winsect = clust2sect(fs, clst); n < fs->csize; n++, fs->winsect++) {	/* Fill t
 3349              		.loc 1 1558 0
 3350 009a 4FF40072 		mov	r2, #512
 3351 009e 0021     		movs	r1, #0
 3352 00a0 06F13400 		add	r0, r6, #52
 3353 00a4 FFF7FEFF 		bl	mem_set
 3354              	.LVL482:
1559:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->wflag = 1;
 3355              		.loc 1 1559 0
 3356 00a8 4946     		mov	r1, r9
 3357 00aa 3046     		mov	r0, r6
 3358 00ac FFF7FEFF 		bl	clust2sect
 3359              	.LVL483:
 3360 00b0 3063     		str	r0, [r6, #48]
 3361 00b2 4FF00008 		mov	r8, #0
 3362              	.LVL484:
 3363              	.L320:
1559:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->wflag = 1;
 3364              		.loc 1 1559 0 is_stmt 0 discriminator 1
 3365 00b6 7389     		ldrh	r3, [r6, #10]
 3366 00b8 9845     		cmp	r8, r3
 3367 00ba 0BD2     		bcs	.L335
1560:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (sync_window(fs) != FR_OK) return FR_DISK_ERR;
 3368              		.loc 1 1560 0 is_stmt 1
 3369 00bc 0123     		movs	r3, #1
 3370 00be F370     		strb	r3, [r6, #3]
1561:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 3371              		.loc 1 1561 0
 3372 00c0 3046     		mov	r0, r6
 3373 00c2 FFF7FEFF 		bl	sync_window
 3374              	.LVL485:
 3375 00c6 F8B9     		cbnz	r0, .L330
1559:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->wflag = 1;
 3376              		.loc 1 1559 0 discriminator 2
 3377 00c8 08F10108 		add	r8, r8, #1
 3378              	.LVL486:
 3379 00cc 336B     		ldr	r3, [r6, #48]
 3380 00ce 0133     		adds	r3, r3, #1
 3381 00d0 3363     		str	r3, [r6, #48]
 3382 00d2 F0E7     		b	.L320
 3383              	.L335:
1563:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 3384              		.loc 1 1563 0
 3385 00d4 336B     		ldr	r3, [r6, #48]
 3386 00d6 A3EB0803 		sub	r3, r3, r8
 3387 00da 3363     		str	r3, [r6, #48]
 3388              	.LVL487:
 3389              	.L318:
1569:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->sect = clust2sect(fs, clst);
 3390              		.loc 1 1569 0
 3391 00dc C4F81890 		str	r9, [r4, #24]
1570:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 3392              		.loc 1 1570 0
 3393 00e0 4946     		mov	r1, r9
 3394 00e2 3046     		mov	r0, r6
 3395 00e4 FFF7FEFF 		bl	clust2sect
ARM GAS  /tmp/ccwdO2Zj.s 			page 172


 3396              	.LVL488:
 3397 00e8 E061     		str	r0, [r4, #28]
 3398 00ea A1E7     		b	.L316
 3399              	.LVL489:
 3400              	.L322:
1531:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3401              		.loc 1 1531 0
 3402 00ec 0420     		movs	r0, #4
 3403              	.LVL490:
 3404 00ee A5E7     		b	.L315
 3405              	.LVL491:
 3406              	.L323:
 3407 00f0 0420     		movs	r0, #4
 3408              	.LVL492:
 3409 00f2 A3E7     		b	.L315
 3410              	.LVL493:
 3411              	.L324:
1544:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) return FR_DISK_ERR;		/* Disk error */
 3412              		.loc 1 1544 0
 3413 00f4 0220     		movs	r0, #2
 3414              	.LVL494:
 3415 00f6 A1E7     		b	.L315
 3416              	.LVL495:
 3417              	.L325:
1545:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst >= fs->n_fatent) {						/* Reached end of dynamic table */
 3418              		.loc 1 1545 0
 3419 00f8 0120     		movs	r0, #1
 3420              	.LVL496:
 3421 00fa 9FE7     		b	.L315
 3422              	.LVL497:
 3423              	.L326:
1552:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 1) return FR_INT_ERR;			/* Internal error */
 3424              		.loc 1 1552 0
 3425 00fc 0720     		movs	r0, #7
 3426              	.LVL498:
 3427 00fe 9DE7     		b	.L315
 3428              	.LVL499:
 3429              	.L327:
1553:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
 3430              		.loc 1 1553 0
 3431 0100 0220     		movs	r0, #2
 3432              	.LVL500:
 3433 0102 9BE7     		b	.L315
 3434              	.LVL501:
 3435              	.L328:
1554:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Clean-up the stretched table */
 3436              		.loc 1 1554 0
 3437 0104 0120     		movs	r0, #1
 3438              	.LVL502:
 3439 0106 99E7     		b	.L315
 3440              	.LVL503:
 3441              	.L330:
1561:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 3442              		.loc 1 1561 0
 3443 0108 0120     		movs	r0, #1
 3444 010a 97E7     		b	.L315
 3445              		.cfi_endproc
ARM GAS  /tmp/ccwdO2Zj.s 			page 173


 3446              	.LFE171:
 3448              		.section	.text.dir_find,"ax",%progbits
 3449              		.align	1
 3450              		.syntax unified
 3451              		.thumb
 3452              		.thumb_func
 3453              		.fpu fpv5-sp-d16
 3455              	dir_find:
 3456              	.LFB176:
2213:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 3457              		.loc 1 2213 0
 3458              		.cfi_startproc
 3459              		@ args = 0, pretend = 0, frame = 0
 3460              		@ frame_needed = 0, uses_anonymous_args = 0
 3461              	.LVL504:
 3462 0000 70B5     		push	{r4, r5, r6, lr}
 3463              	.LCFI35:
 3464              		.cfi_def_cfa_offset 16
 3465              		.cfi_offset 4, -16
 3466              		.cfi_offset 5, -12
 3467              		.cfi_offset 6, -8
 3468              		.cfi_offset 14, -4
 3469 0002 0446     		mov	r4, r0
2215:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE c;
 3470              		.loc 1 2215 0
 3471 0004 0668     		ldr	r6, [r0]
 3472              	.LVL505:
2221:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) return res;
 3473              		.loc 1 2221 0
 3474 0006 0021     		movs	r1, #0
 3475 0008 FFF7FEFF 		bl	dir_sdi
 3476              	.LVL506:
2222:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 3477              		.loc 1 2222 0
 3478 000c 0546     		mov	r5, r0
 3479 000e 40B1     		cbz	r0, .L339
 3480              	.LVL507:
 3481              	.L337:
2281:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3482              		.loc 1 2281 0
 3483 0010 2846     		mov	r0, r5
 3484 0012 70BD     		pop	{r4, r5, r6, pc}
 3485              	.LVL508:
 3486              	.L338:
2277:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (res == FR_OK);
 3487              		.loc 1 2277 0
 3488 0014 0021     		movs	r1, #0
 3489 0016 2046     		mov	r0, r4
 3490 0018 FFF7FEFF 		bl	dir_next
 3491              	.LVL509:
2278:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3492              		.loc 1 2278 0
 3493 001c 0546     		mov	r5, r0
 3494 001e 0028     		cmp	r0, #0
 3495 0020 F6D1     		bne	.L337
 3496              	.L339:
2248:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
ARM GAS  /tmp/ccwdO2Zj.s 			page 174


 3497              		.loc 1 2248 0
 3498 0022 E169     		ldr	r1, [r4, #28]
 3499 0024 3046     		mov	r0, r6
 3500              	.LVL510:
 3501 0026 FFF7FEFF 		bl	move_window
 3502              	.LVL511:
2249:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = dp->dir[DIR_Name];
 3503              		.loc 1 2249 0
 3504 002a 0546     		mov	r5, r0
 3505 002c 0028     		cmp	r0, #0
 3506 002e EFD1     		bne	.L337
2250:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
 3507              		.loc 1 2250 0
 3508 0030 206A     		ldr	r0, [r4, #32]
 3509              	.LVL512:
 3510 0032 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 3511              	.LVL513:
2251:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
 3512              		.loc 1 2251 0
 3513 0034 7BB1     		cbz	r3, .L340
2274:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!(dp->dir[DIR_Attr] & AM_VOL) && !mem_cmp(dp->dir, dp->fn, 11)) break;	/* Is it a valid entry
 3514              		.loc 1 2274 0
 3515 0036 C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
 3516              	.LVL514:
 3517 0038 03F03F03 		and	r3, r3, #63
 3518 003c A371     		strb	r3, [r4, #6]
 3519              	.LVL515:
2275:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 3520              		.loc 1 2275 0
 3521 003e C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
 3522 0040 13F0080F 		tst	r3, #8
 3523 0044 E6D1     		bne	.L338
2275:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 3524              		.loc 1 2275 0 is_stmt 0 discriminator 1
 3525 0046 0B22     		movs	r2, #11
 3526 0048 04F12401 		add	r1, r4, #36
 3527 004c FFF7FEFF 		bl	mem_cmp
 3528              	.LVL516:
 3529 0050 0028     		cmp	r0, #0
 3530 0052 DFD1     		bne	.L338
 3531 0054 DCE7     		b	.L337
 3532              	.LVL517:
 3533              	.L340:
2251:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
 3534              		.loc 1 2251 0 is_stmt 1
 3535 0056 0425     		movs	r5, #4
 3536 0058 DAE7     		b	.L337
 3537              		.cfi_endproc
 3538              	.LFE176:
 3540              		.section	.text.follow_path,"ax",%progbits
 3541              		.align	1
 3542              		.syntax unified
 3543              		.thumb
 3544              		.thumb_func
 3545              		.fpu fpv5-sp-d16
 3547              	follow_path:
 3548              	.LFB181:
ARM GAS  /tmp/ccwdO2Zj.s 			page 175


2817:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 3549              		.loc 1 2817 0
 3550              		.cfi_startproc
 3551              		@ args = 0, pretend = 0, frame = 8
 3552              		@ frame_needed = 0, uses_anonymous_args = 0
 3553              	.LVL518:
 3554 0000 30B5     		push	{r4, r5, lr}
 3555              	.LCFI36:
 3556              		.cfi_def_cfa_offset 12
 3557              		.cfi_offset 4, -12
 3558              		.cfi_offset 5, -8
 3559              		.cfi_offset 14, -4
 3560 0002 83B0     		sub	sp, sp, #12
 3561              	.LCFI37:
 3562              		.cfi_def_cfa_offset 24
 3563 0004 0446     		mov	r4, r0
 3564 0006 0191     		str	r1, [sp, #4]
 3565              	.LVL519:
2821:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3566              		.loc 1 2821 0
 3567 0008 0568     		ldr	r5, [r0]
 3568              	.LVL520:
2830:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->sclust = 0;					/* Start from root directory */
 3569              		.loc 1 2830 0
 3570 000a 01E0     		b	.L343
 3571              	.L344:
2830:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->sclust = 0;					/* Start from root directory */
 3572              		.loc 1 2830 0 is_stmt 0 discriminator 2
 3573 000c 0133     		adds	r3, r3, #1
 3574 000e 0193     		str	r3, [sp, #4]
 3575              	.L343:
2830:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->sclust = 0;					/* Start from root directory */
 3576              		.loc 1 2830 0 discriminator 1
 3577 0010 019B     		ldr	r3, [sp, #4]
 3578 0012 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3579 0014 5C2A     		cmp	r2, #92
 3580 0016 18BF     		it	ne
 3581 0018 2F2A     		cmpne	r2, #47
 3582 001a F7D0     		beq	.L344
2831:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3583              		.loc 1 2831 0 is_stmt 1
 3584 001c 0022     		movs	r2, #0
 3585 001e A260     		str	r2, [r4, #8]
2850:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->fn[NSFLAG] = NS_NONAME;
 3586              		.loc 1 2850 0
 3587 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3588 0022 1F2B     		cmp	r3, #31
 3589 0024 1ED9     		bls	.L351
 3590              	.LVL521:
 3591              	.L345:
2856:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 3592              		.loc 1 2856 0
 3593 0026 01A9     		add	r1, sp, #4
 3594 0028 2046     		mov	r0, r4
 3595 002a FFF7FEFF 		bl	create_name
 3596              	.LVL522:
2857:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_find(dp);				/* Find an object with the segment name */
ARM GAS  /tmp/ccwdO2Zj.s 			page 176


 3597              		.loc 1 2857 0
 3598 002e 0346     		mov	r3, r0
 3599 0030 00BB     		cbnz	r0, .L346
2858:Middlewares/Third_Party/FatFs/src/ff.c **** 			ns = dp->fn[NSFLAG];
 3600              		.loc 1 2858 0
 3601 0032 2046     		mov	r0, r4
 3602              	.LVL523:
 3603 0034 FFF7FEFF 		bl	dir_find
 3604              	.LVL524:
2859:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) {				/* Failed to find the object */
 3605              		.loc 1 2859 0
 3606 0038 94F82F20 		ldrb	r2, [r4, #47]	@ zero_extendqisi2
 3607              	.LVL525:
2860:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) {	/* Object is not found */
 3608              		.loc 1 2860 0
 3609 003c 0346     		mov	r3, r0
 3610 003e E0B9     		cbnz	r0, .L352
2872:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Get into the sub-directory */
 3611              		.loc 1 2872 0
 3612 0040 12F0040F 		tst	r2, #4
 3613 0044 16D1     		bne	.L346
2874:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_NO_PATH; break;
 3614              		.loc 1 2874 0
 3615 0046 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 3616 0048 13F0100F 		tst	r3, #16
 3617 004c 1CD0     		beq	.L349
2888:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 3618              		.loc 1 2888 0
 3619 004e 05F13401 		add	r1, r5, #52
 3620 0052 6369     		ldr	r3, [r4, #20]
 3621 0054 C3F30803 		ubfx	r3, r3, #0, #9
 3622 0058 1944     		add	r1, r1, r3
 3623 005a 2846     		mov	r0, r5
 3624              	.LVL526:
 3625 005c FFF7FEFF 		bl	ld_clust
 3626              	.LVL527:
 3627 0060 A060     		str	r0, [r4, #8]
2856:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 3628              		.loc 1 2856 0
 3629 0062 E0E7     		b	.L345
 3630              	.LVL528:
 3631              	.L351:
2851:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_sdi(dp, 0);
 3632              		.loc 1 2851 0
 3633 0064 8023     		movs	r3, #128
 3634 0066 84F82F30 		strb	r3, [r4, #47]
2852:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3635              		.loc 1 2852 0
 3636 006a 1146     		mov	r1, r2
 3637              	.LVL529:
 3638 006c 2046     		mov	r0, r4
 3639              	.LVL530:
 3640 006e FFF7FEFF 		bl	dir_sdi
 3641              	.LVL531:
 3642 0072 0346     		mov	r3, r0
 3643              	.LVL532:
 3644              	.L346:
ARM GAS  /tmp/ccwdO2Zj.s 			page 177


2894:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3645              		.loc 1 2894 0
 3646 0074 1846     		mov	r0, r3
 3647 0076 03B0     		add	sp, sp, #12
 3648              	.LCFI38:
 3649              		.cfi_remember_state
 3650              		.cfi_def_cfa_offset 12
 3651              		@ sp needed
 3652 0078 30BD     		pop	{r4, r5, pc}
 3653              	.LVL533:
 3654              	.L352:
 3655              	.LCFI39:
 3656              		.cfi_restore_state
2861:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (_FS_RPATH && (ns & NS_DOT)) {	/* If dot entry is not exist, stay there */
 3657              		.loc 1 2861 0
 3658 007a 0428     		cmp	r0, #4
 3659 007c FAD1     		bne	.L346
2867:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 3660              		.loc 1 2867 0
 3661 007e 12F0040F 		tst	r2, #4
 3662 0082 F7D1     		bne	.L346
 3663 0084 0523     		movs	r3, #5
 3664 0086 F5E7     		b	.L346
 3665              	.L349:
2875:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 3666              		.loc 1 2875 0
 3667 0088 0523     		movs	r3, #5
 3668 008a F3E7     		b	.L346
 3669              		.cfi_endproc
 3670              	.LFE181:
 3672              		.section	.text.dir_alloc,"ax",%progbits
 3673              		.align	1
 3674              		.syntax unified
 3675              		.thumb
 3676              		.thumb_func
 3677              		.fpu fpv5-sp-d16
 3679              	dir_alloc:
 3680              	.LFB172:
1593:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 3681              		.loc 1 1593 0
 3682              		.cfi_startproc
 3683              		@ args = 0, pretend = 0, frame = 0
 3684              		@ frame_needed = 0, uses_anonymous_args = 0
 3685              	.LVL534:
 3686 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3687              	.LCFI40:
 3688              		.cfi_def_cfa_offset 24
 3689              		.cfi_offset 3, -24
 3690              		.cfi_offset 4, -20
 3691              		.cfi_offset 5, -16
 3692              		.cfi_offset 6, -12
 3693              		.cfi_offset 7, -8
 3694              		.cfi_offset 14, -4
 3695 0002 0446     		mov	r4, r0
 3696 0004 0F46     		mov	r7, r1
1596:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3697              		.loc 1 1596 0
ARM GAS  /tmp/ccwdO2Zj.s 			page 178


 3698 0006 0668     		ldr	r6, [r0]
 3699              	.LVL535:
1599:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 3700              		.loc 1 1599 0
 3701 0008 0021     		movs	r1, #0
 3702              	.LVL536:
 3703 000a FFF7FEFF 		bl	dir_sdi
 3704              	.LVL537:
1600:Middlewares/Third_Party/FatFs/src/ff.c **** 		n = 0;
 3705              		.loc 1 1600 0
 3706 000e 0246     		mov	r2, r0
 3707 0010 B8B9     		cbnz	r0, .L354
1601:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
 3708              		.loc 1 1601 0
 3709 0012 0025     		movs	r5, #0
 3710 0014 06E0     		b	.L356
 3711              	.LVL538:
 3712              	.L358:
1612:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 3713              		.loc 1 1612 0
 3714 0016 0025     		movs	r5, #0
 3715              	.LVL539:
 3716              	.L355:
1614:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (res == FR_OK);	/* Next entry with table stretch enabled */
 3717              		.loc 1 1614 0
 3718 0018 0121     		movs	r1, #1
 3719 001a 2046     		mov	r0, r4
 3720              	.LVL540:
 3721 001c FFF7FEFF 		bl	dir_next
 3722              	.LVL541:
1615:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3723              		.loc 1 1615 0
 3724 0020 0246     		mov	r2, r0
 3725 0022 70B9     		cbnz	r0, .L354
 3726              	.LVL542:
 3727              	.L356:
1603:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 3728              		.loc 1 1603 0
 3729 0024 E169     		ldr	r1, [r4, #28]
 3730 0026 3046     		mov	r0, r6
 3731              	.LVL543:
 3732 0028 FFF7FEFF 		bl	move_window
 3733              	.LVL544:
1604:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 3734              		.loc 1 1604 0
 3735 002c 0246     		mov	r2, r0
 3736 002e 40B9     		cbnz	r0, .L354
1608:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 3737              		.loc 1 1608 0
 3738 0030 236A     		ldr	r3, [r4, #32]
 3739 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3740 0034 002B     		cmp	r3, #0
 3741 0036 18BF     		it	ne
 3742 0038 E52B     		cmpne	r3, #229
 3743 003a ECD1     		bne	.L358
1610:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 3744              		.loc 1 1610 0
ARM GAS  /tmp/ccwdO2Zj.s 			page 179


 3745 003c 0135     		adds	r5, r5, #1
 3746              	.LVL545:
 3747 003e BD42     		cmp	r5, r7
 3748 0040 EAD1     		bne	.L355
 3749              	.LVL546:
 3750              	.L354:
1618:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 3751              		.loc 1 1618 0
 3752 0042 042A     		cmp	r2, #4
 3753 0044 01D0     		beq	.L361
 3754              	.LVL547:
 3755              	.L357:
1620:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3756              		.loc 1 1620 0
 3757 0046 1046     		mov	r0, r2
 3758 0048 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3759              	.LVL548:
 3760              	.L361:
1618:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 3761              		.loc 1 1618 0
 3762 004a 0722     		movs	r2, #7
 3763              	.LVL549:
 3764 004c FBE7     		b	.L357
 3765              		.cfi_endproc
 3766              	.LFE172:
 3768              		.section	.text.dir_register,"ax",%progbits
 3769              		.align	1
 3770              		.syntax unified
 3771              		.thumb
 3772              		.thumb_func
 3773              		.fpu fpv5-sp-d16
 3775              	dir_register:
 3776              	.LFB177:
2295:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 3777              		.loc 1 2295 0
 3778              		.cfi_startproc
 3779              		@ args = 0, pretend = 0, frame = 0
 3780              		@ frame_needed = 0, uses_anonymous_args = 0
 3781              	.LVL550:
 3782 0000 70B5     		push	{r4, r5, r6, lr}
 3783              	.LCFI41:
 3784              		.cfi_def_cfa_offset 16
 3785              		.cfi_offset 4, -16
 3786              		.cfi_offset 5, -12
 3787              		.cfi_offset 6, -8
 3788              		.cfi_offset 14, -4
 3789 0002 0446     		mov	r4, r0
2297:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
 3790              		.loc 1 2297 0
 3791 0004 0668     		ldr	r6, [r0]
 3792              	.LVL551:
2366:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3793              		.loc 1 2366 0
 3794 0006 0121     		movs	r1, #1
 3795 0008 FFF7FEFF 		bl	dir_alloc
 3796              	.LVL552:
2371:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(fs, dp->sect);
ARM GAS  /tmp/ccwdO2Zj.s 			page 180


 3797              		.loc 1 2371 0
 3798 000c 0546     		mov	r5, r0
 3799 000e 08B1     		cbz	r0, .L365
 3800              	.LVL553:
 3801              	.L363:
2384:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3802              		.loc 1 2384 0
 3803 0010 2846     		mov	r0, r5
 3804 0012 70BD     		pop	{r4, r5, r6, pc}
 3805              	.LVL554:
 3806              	.L365:
2372:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
 3807              		.loc 1 2372 0
 3808 0014 E169     		ldr	r1, [r4, #28]
 3809 0016 3046     		mov	r0, r6
 3810              	.LVL555:
 3811 0018 FFF7FEFF 		bl	move_window
 3812              	.LVL556:
2373:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(dp->dir, 0, SZDIRE);	/* Clean the entry */
 3813              		.loc 1 2373 0
 3814 001c 0546     		mov	r5, r0
 3815 001e 0028     		cmp	r0, #0
 3816 0020 F6D1     		bne	.L363
2374:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_cpy(dp->dir + DIR_Name, dp->fn, 11);	/* Put SFN */
 3817              		.loc 1 2374 0
 3818 0022 2022     		movs	r2, #32
 3819 0024 0021     		movs	r1, #0
 3820 0026 206A     		ldr	r0, [r4, #32]
 3821              	.LVL557:
 3822 0028 FFF7FEFF 		bl	mem_set
 3823              	.LVL558:
2375:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
 3824              		.loc 1 2375 0
 3825 002c 0B22     		movs	r2, #11
 3826 002e 04F12401 		add	r1, r4, #36
 3827 0032 206A     		ldr	r0, [r4, #32]
 3828 0034 FFF7FEFF 		bl	mem_cpy
 3829              	.LVL559:
2379:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 3830              		.loc 1 2379 0
 3831 0038 0123     		movs	r3, #1
 3832 003a F370     		strb	r3, [r6, #3]
 3833 003c E8E7     		b	.L363
 3834              		.cfi_endproc
 3835              	.LFE177:
 3837              		.section	.text.dir_read,"ax",%progbits
 3838              		.align	1
 3839              		.syntax unified
 3840              		.thumb
 3841              		.thumb_func
 3842              		.fpu fpv5-sp-d16
 3844              	dir_read:
 3845              	.LFB175:
2135:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_NO_FILE;
 3846              		.loc 1 2135 0
 3847              		.cfi_startproc
 3848              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccwdO2Zj.s 			page 181


 3849              		@ frame_needed = 0, uses_anonymous_args = 0
 3850              	.LVL560:
 3851 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3852              	.LCFI42:
 3853              		.cfi_def_cfa_offset 24
 3854              		.cfi_offset 3, -24
 3855              		.cfi_offset 4, -20
 3856              		.cfi_offset 5, -16
 3857              		.cfi_offset 6, -12
 3858              		.cfi_offset 7, -8
 3859              		.cfi_offset 14, -4
 3860 0002 0446     		mov	r4, r0
 3861 0004 0E46     		mov	r6, r1
 3862              	.LVL561:
2137:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE a, c;
 3863              		.loc 1 2137 0
 3864 0006 0568     		ldr	r5, [r0]
 3865              	.LVL562:
2136:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = dp->obj.fs;
 3866              		.loc 1 2136 0
 3867 0008 0427     		movs	r7, #4
2143:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(fs, dp->sect);
 3868              		.loc 1 2143 0
 3869 000a 05E0     		b	.L367
 3870              	.LVL563:
 3871              	.L369:
2193:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
 3872              		.loc 1 2193 0
 3873 000c 0021     		movs	r1, #0
 3874 000e 2046     		mov	r0, r4
 3875              	.LVL564:
 3876 0010 FFF7FEFF 		bl	dir_next
 3877              	.LVL565:
2194:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3878              		.loc 1 2194 0
 3879 0014 0746     		mov	r7, r0
 3880 0016 E8B9     		cbnz	r0, .L368
 3881              	.LVL566:
 3882              	.L367:
2143:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(fs, dp->sect);
 3883              		.loc 1 2143 0
 3884 0018 E169     		ldr	r1, [r4, #28]
 3885 001a D9B1     		cbz	r1, .L368
2144:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
 3886              		.loc 1 2144 0
 3887 001c 2846     		mov	r0, r5
 3888 001e FFF7FEFF 		bl	move_window
 3889              	.LVL567:
2145:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = dp->dir[DIR_Name];	/* Test for the entry type */
 3890              		.loc 1 2145 0
 3891 0022 0746     		mov	r7, r0
 3892 0024 B0B9     		cbnz	r0, .L368
2146:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 0) {
 3893              		.loc 1 2146 0
 3894 0026 236A     		ldr	r3, [r4, #32]
 3895 0028 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3896              	.LVL568:
ARM GAS  /tmp/ccwdO2Zj.s 			page 182


2147:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_NO_FILE; break; /* Reached to end of the directory */
 3897              		.loc 1 2147 0
 3898 002a 92B1     		cbz	r2, .L372
2167:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
 3899              		.loc 1 2167 0
 3900 002c DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 3901 002e 03F03F03 		and	r3, r3, #63
 3902              	.LVL569:
 3903 0032 A371     		strb	r3, [r4, #6]
2188:Middlewares/Third_Party/FatFs/src/ff.c **** 				break;
 3904              		.loc 1 2188 0
 3905 0034 E52A     		cmp	r2, #229
 3906 0036 18BF     		it	ne
 3907 0038 2E2A     		cmpne	r2, #46
 3908 003a E7D0     		beq	.L369
2188:Middlewares/Third_Party/FatFs/src/ff.c **** 				break;
 3909              		.loc 1 2188 0 is_stmt 0 discriminator 1
 3910 003c 0F2B     		cmp	r3, #15
 3911 003e E5D0     		beq	.L369
2188:Middlewares/Third_Party/FatFs/src/ff.c **** 				break;
 3912              		.loc 1 2188 0 discriminator 2
 3913 0040 23F02003 		bic	r3, r3, #32
 3914              	.LVL570:
 3915 0044 082B     		cmp	r3, #8
 3916 0046 14BF     		ite	ne
 3917 0048 0023     		movne	r3, #0
 3918 004a 0123     		moveq	r3, #1
 3919 004c B342     		cmp	r3, r6
 3920 004e DDD1     		bne	.L369
 3921 0050 00E0     		b	.L368
 3922              	.LVL571:
 3923              	.L372:
2148:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 3924              		.loc 1 2148 0 is_stmt 1
 3925 0052 0427     		movs	r7, #4
 3926              	.LVL572:
 3927              	.L368:
2197:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 3928              		.loc 1 2197 0
 3929 0054 0FB1     		cbz	r7, .L371
2197:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 3930              		.loc 1 2197 0 is_stmt 0 discriminator 1
 3931 0056 0023     		movs	r3, #0
 3932 0058 E361     		str	r3, [r4, #28]
 3933              	.L371:
2199:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3934              		.loc 1 2199 0 is_stmt 1
 3935 005a 3846     		mov	r0, r7
 3936 005c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3937              		.cfi_endproc
 3938              	.LFE175:
 3940              		.section	.text.unlock_fs,"ax",%progbits
 3941              		.align	1
 3942              		.syntax unified
 3943              		.thumb
 3944              		.thumb_func
 3945              		.fpu fpv5-sp-d16
ARM GAS  /tmp/ccwdO2Zj.s 			page 183


 3947              	unlock_fs:
 3948              	.LFB155:
 755:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs && res != FR_NOT_ENABLED && res != FR_INVALID_DRIVE && res != FR_TIMEOUT) {
 3949              		.loc 1 755 0
 3950              		.cfi_startproc
 3951              		@ args = 0, pretend = 0, frame = 0
 3952              		@ frame_needed = 0, uses_anonymous_args = 0
 3953              	.LVL573:
 3954 0000 08B5     		push	{r3, lr}
 3955              	.LCFI43:
 3956              		.cfi_def_cfa_offset 8
 3957              		.cfi_offset 3, -8
 3958              		.cfi_offset 14, -4
 756:Middlewares/Third_Party/FatFs/src/ff.c **** 		ff_rel_grant(fs->sobj);
 3959              		.loc 1 756 0
 3960 0002 0246     		mov	r2, r0
 3961 0004 B1F10C03 		subs	r3, r1, #12
 3962 0008 18BF     		it	ne
 3963 000a 0123     		movne	r3, #1
 3964 000c 0028     		cmp	r0, #0
 3965 000e 14BF     		ite	ne
 3966 0010 1846     		movne	r0, r3
 3967 0012 0020     		moveq	r0, #0
 3968              	.LVL574:
 3969 0014 48B1     		cbz	r0, .L374
 756:Middlewares/Third_Party/FatFs/src/ff.c **** 		ff_rel_grant(fs->sobj);
 3970              		.loc 1 756 0 is_stmt 0 discriminator 1
 3971 0016 B1F10F03 		subs	r3, r1, #15
 3972 001a 18BF     		it	ne
 3973 001c 0123     		movne	r3, #1
 3974 001e 0B29     		cmp	r1, #11
 3975 0020 03D0     		beq	.L374
 3976 0022 13B1     		cbz	r3, .L374
 757:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3977              		.loc 1 757 0 is_stmt 1
 3978 0024 D068     		ldr	r0, [r2, #12]
 3979 0026 FFF7FEFF 		bl	ff_rel_grant
 3980              	.LVL575:
 3981              	.L374:
 759:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3982              		.loc 1 759 0
 3983 002a 08BD     		pop	{r3, pc}
 3984              		.cfi_endproc
 3985              	.LFE155:
 3987              		.section	.text.validate,"ax",%progbits
 3988              		.align	1
 3989              		.syntax unified
 3990              		.thumb
 3991              		.thumb_func
 3992              		.fpu fpv5-sp-d16
 3994              	validate:
 3995              	.LFB185:
3220:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_INVALID_OBJECT;
 3996              		.loc 1 3220 0
 3997              		.cfi_startproc
 3998              		@ args = 0, pretend = 0, frame = 0
 3999              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccwdO2Zj.s 			page 184


 4000              	.LVL576:
 4001 0000 38B5     		push	{r3, r4, r5, lr}
 4002              	.LCFI44:
 4003              		.cfi_def_cfa_offset 16
 4004              		.cfi_offset 3, -16
 4005              		.cfi_offset 4, -12
 4006              		.cfi_offset 5, -8
 4007              		.cfi_offset 14, -4
 4008 0002 0D46     		mov	r5, r1
 4009              	.LVL577:
3224:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
 4010              		.loc 1 3224 0
 4011 0004 08B3     		cbz	r0, .L380
 4012 0006 0446     		mov	r4, r0
3224:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
 4013              		.loc 1 3224 0 is_stmt 0 discriminator 1
 4014 0008 0368     		ldr	r3, [r0]
 4015 000a 0BB3     		cbz	r3, .L381
3224:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
 4016              		.loc 1 3224 0 discriminator 2
 4017 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4018 000e 0AB3     		cbz	r2, .L382
3224:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
 4019              		.loc 1 3224 0 discriminator 3
 4020 0010 8188     		ldrh	r1, [r0, #4]
 4021              	.LVL578:
 4022 0012 DA88     		ldrh	r2, [r3, #6]
 4023 0014 9142     		cmp	r1, r2
 4024 0016 03D0     		beq	.L386
3221:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4025              		.loc 1 3221 0 is_stmt 1
 4026 0018 0920     		movs	r0, #9
 4027              	.LVL579:
3241:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 4028              		.loc 1 3241 0
 4029 001a 0023     		movs	r3, #0
 4030              	.LVL580:
 4031              	.L378:
3241:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 4032              		.loc 1 3241 0 is_stmt 0 discriminator 4
 4033 001c 2B60     		str	r3, [r5]
3243:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4034              		.loc 1 3243 0 is_stmt 1 discriminator 4
 4035 001e 38BD     		pop	{r3, r4, r5, pc}
 4036              	.LVL581:
 4037              	.L386:
3226:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!(disk_status(obj->fs->drv) & STA_NOINIT)) { /* Test if the phsical drive is kept initialize
 4038              		.loc 1 3226 0
 4039 0020 1846     		mov	r0, r3
 4040              	.LVL582:
 4041 0022 FFF7FEFF 		bl	lock_fs
 4042              	.LVL583:
 4043 0026 C0B1     		cbz	r0, .L384
3227:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_OK;
 4044              		.loc 1 3227 0
 4045 0028 2368     		ldr	r3, [r4]
 4046 002a 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
ARM GAS  /tmp/ccwdO2Zj.s 			page 185


 4047 002c FFF7FEFF 		bl	disk_status
 4048              	.LVL584:
 4049 0030 10F0010F 		tst	r0, #1
 4050 0034 02D1     		bne	.L379
 4051              	.LVL585:
3241:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 4052              		.loc 1 3241 0
 4053 0036 2368     		ldr	r3, [r4]
3228:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 4054              		.loc 1 3228 0
 4055 0038 0020     		movs	r0, #0
 4056 003a EFE7     		b	.L378
 4057              	.LVL586:
 4058              	.L379:
3230:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 4059              		.loc 1 3230 0
 4060 003c 0021     		movs	r1, #0
 4061 003e 2068     		ldr	r0, [r4]
 4062 0040 FFF7FEFF 		bl	unlock_fs
 4063              	.LVL587:
3221:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4064              		.loc 1 3221 0
 4065 0044 0920     		movs	r0, #9
3241:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 4066              		.loc 1 3241 0
 4067 0046 0023     		movs	r3, #0
 4068 0048 E8E7     		b	.L378
 4069              	.LVL588:
 4070              	.L380:
3221:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4071              		.loc 1 3221 0
 4072 004a 0920     		movs	r0, #9
 4073              	.LVL589:
3241:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 4074              		.loc 1 3241 0
 4075 004c 0023     		movs	r3, #0
 4076 004e E5E7     		b	.L378
 4077              	.LVL590:
 4078              	.L381:
3221:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4079              		.loc 1 3221 0
 4080 0050 0920     		movs	r0, #9
 4081              	.LVL591:
 4082 0052 E3E7     		b	.L378
 4083              	.LVL592:
 4084              	.L382:
 4085 0054 0920     		movs	r0, #9
 4086              	.LVL593:
3241:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 4087              		.loc 1 3241 0
 4088 0056 0023     		movs	r3, #0
 4089 0058 E0E7     		b	.L378
 4090              	.LVL594:
 4091              	.L384:
3233:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 4092              		.loc 1 3233 0
 4093 005a 0F20     		movs	r0, #15
ARM GAS  /tmp/ccwdO2Zj.s 			page 186


3241:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 4094              		.loc 1 3241 0
 4095 005c 0023     		movs	r3, #0
 4096 005e DDE7     		b	.L378
 4097              		.cfi_endproc
 4098              	.LFE185:
 4100              		.section	.text.sync_fs,"ax",%progbits
 4101              		.align	1
 4102              		.syntax unified
 4103              		.thumb
 4104              		.thumb_func
 4105              		.fpu fpv5-sp-d16
 4107              	sync_fs:
 4108              	.LFB163:
 947:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 4109              		.loc 1 947 0
 4110              		.cfi_startproc
 4111              		@ args = 0, pretend = 0, frame = 0
 4112              		@ frame_needed = 0, uses_anonymous_args = 0
 4113              	.LVL595:
 4114 0000 70B5     		push	{r4, r5, r6, lr}
 4115              	.LCFI45:
 4116              		.cfi_def_cfa_offset 16
 4117              		.cfi_offset 4, -16
 4118              		.cfi_offset 5, -12
 4119              		.cfi_offset 6, -8
 4120              		.cfi_offset 14, -4
 4121 0002 0446     		mov	r4, r0
 951:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 4122              		.loc 1 951 0
 4123 0004 FFF7FEFF 		bl	sync_window
 4124              	.LVL596:
 952:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Update FSInfo sector if needed */
 4125              		.loc 1 952 0
 4126 0008 0546     		mov	r5, r0
 4127 000a 48B9     		cbnz	r0, .L388
 954:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Create FSInfo structure */
 4128              		.loc 1 954 0
 4129 000c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 4130 000e 032B     		cmp	r3, #3
 4131 0010 08D0     		beq	.L392
 4132              	.LVL597:
 4133              	.L389:
 968:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 4134              		.loc 1 968 0
 4135 0012 0022     		movs	r2, #0
 4136 0014 1146     		mov	r1, r2
 4137 0016 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 4138 0018 FFF7FEFF 		bl	disk_ioctl
 4139              	.LVL598:
 4140 001c 00B1     		cbz	r0, .L388
 4141 001e 0125     		movs	r5, #1
 4142              	.L388:
 4143              	.LVL599:
 972:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4144              		.loc 1 972 0
 4145 0020 2846     		mov	r0, r5
ARM GAS  /tmp/ccwdO2Zj.s 			page 187


 4146 0022 70BD     		pop	{r4, r5, r6, pc}
 4147              	.LVL600:
 4148              	.L392:
 954:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Create FSInfo structure */
 4149              		.loc 1 954 0 discriminator 1
 4150 0024 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 4151 0026 012B     		cmp	r3, #1
 4152 0028 F3D1     		bne	.L389
 956:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(fs->win + BS_55AA, 0xAA55);
 4153              		.loc 1 956 0
 4154 002a 04F13406 		add	r6, r4, #52
 4155 002e 4FF40072 		mov	r2, #512
 4156 0032 0021     		movs	r1, #0
 4157 0034 3046     		mov	r0, r6
 4158              	.LVL601:
 4159 0036 FFF7FEFF 		bl	mem_set
 4160              	.LVL602:
 957:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(fs->win + FSI_LeadSig, 0x41615252);
 4161              		.loc 1 957 0
 4162 003a 4AF65521 		movw	r1, #43605
 4163 003e 04F23220 		addw	r0, r4, #562
 4164 0042 FFF7FEFF 		bl	st_word
 4165              	.LVL603:
 958:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(fs->win + FSI_StrucSig, 0x61417272);
 4166              		.loc 1 958 0
 4167 0046 0F49     		ldr	r1, .L393
 4168 0048 3046     		mov	r0, r6
 4169 004a FFF7FEFF 		bl	st_dword
 4170              	.LVL604:
 959:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(fs->win + FSI_Free_Count, fs->free_clst);
 4171              		.loc 1 959 0
 4172 004e 0E49     		ldr	r1, .L393+4
 4173 0050 04F50670 		add	r0, r4, #536
 4174 0054 FFF7FEFF 		bl	st_dword
 4175              	.LVL605:
 960:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(fs->win + FSI_Nxt_Free, fs->last_clst);
 4176              		.loc 1 960 0
 4177 0058 6169     		ldr	r1, [r4, #20]
 4178 005a 04F50770 		add	r0, r4, #540
 4179 005e FFF7FEFF 		bl	st_dword
 4180              	.LVL606:
 961:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Write it into the FSInfo sector */
 4181              		.loc 1 961 0
 4182 0062 2169     		ldr	r1, [r4, #16]
 4183 0064 04F50870 		add	r0, r4, #544
 4184 0068 FFF7FEFF 		bl	st_dword
 4185              	.LVL607:
 963:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_write(fs->drv, fs->win, fs->winsect, 1);
 4186              		.loc 1 963 0
 4187 006c 226A     		ldr	r2, [r4, #32]
 4188 006e 0132     		adds	r2, r2, #1
 4189 0070 2263     		str	r2, [r4, #48]
 964:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag = 0;
 4190              		.loc 1 964 0
 4191 0072 0123     		movs	r3, #1
 4192 0074 3146     		mov	r1, r6
 4193 0076 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
ARM GAS  /tmp/ccwdO2Zj.s 			page 188


 4194 0078 FFF7FEFF 		bl	disk_write
 4195              	.LVL608:
 965:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 4196              		.loc 1 965 0
 4197 007c 0023     		movs	r3, #0
 4198 007e 2371     		strb	r3, [r4, #4]
 4199 0080 C7E7     		b	.L389
 4200              	.L394:
 4201 0082 00BF     		.align	2
 4202              	.L393:
 4203 0084 52526141 		.word	1096897106
 4204 0088 72724161 		.word	1631679090
 4205              		.cfi_endproc
 4206              	.LFE163:
 4208              		.section	.text.f_mount,"ax",%progbits
 4209              		.align	1
 4210              		.global	f_mount
 4211              		.syntax unified
 4212              		.thumb
 4213              		.thumb_func
 4214              		.fpu fpv5-sp-d16
 4216              	f_mount:
 4217              	.LFB186:
3265:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *cfs;
 4218              		.loc 1 3265 0
 4219              		.cfi_startproc
 4220              		@ args = 0, pretend = 0, frame = 16
 4221              		@ frame_needed = 0, uses_anonymous_args = 0
 4222              	.LVL609:
 4223 0000 70B5     		push	{r4, r5, r6, lr}
 4224              	.LCFI46:
 4225              		.cfi_def_cfa_offset 16
 4226              		.cfi_offset 4, -16
 4227              		.cfi_offset 5, -12
 4228              		.cfi_offset 6, -8
 4229              		.cfi_offset 14, -4
 4230 0002 84B0     		sub	sp, sp, #16
 4231              	.LCFI47:
 4232              		.cfi_def_cfa_offset 32
 4233 0004 0190     		str	r0, [sp, #4]
 4234 0006 0091     		str	r1, [sp]
 4235 0008 1446     		mov	r4, r2
3269:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4236              		.loc 1 3269 0
 4237 000a 04A8     		add	r0, sp, #16
 4238              	.LVL610:
 4239 000c 40F8041D 		str	r1, [r0, #-4]!
3273:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
 4240              		.loc 1 3273 0
 4241 0010 FFF7FEFF 		bl	get_ldnumber
 4242              	.LVL611:
3274:Middlewares/Third_Party/FatFs/src/ff.c **** 	cfs = FatFs[vol];					/* Pointer to fs object */
 4243              		.loc 1 3274 0
 4244 0014 061E     		subs	r6, r0, #0
 4245 0016 31DB     		blt	.L399
3275:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4246              		.loc 1 3275 0
ARM GAS  /tmp/ccwdO2Zj.s 			page 189


 4247 0018 1B4B     		ldr	r3, .L405
 4248 001a 53F82650 		ldr	r5, [r3, r6, lsl #2]
 4249              	.LVL612:
3277:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 4250              		.loc 1 3277 0
 4251 001e 45B1     		cbz	r5, .L397
3279:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 4252              		.loc 1 3279 0
 4253 0020 2846     		mov	r0, r5
 4254              	.LVL613:
 4255 0022 FFF7FEFF 		bl	clear_lock
 4256              	.LVL614:
3282:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 4257              		.loc 1 3282 0
 4258 0026 E868     		ldr	r0, [r5, #12]
 4259 0028 FFF7FEFF 		bl	ff_del_syncobj
 4260              	.LVL615:
 4261 002c 40B3     		cbz	r0, .L400
3284:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 4262              		.loc 1 3284 0
 4263 002e 0023     		movs	r3, #0
 4264 0030 2B70     		strb	r3, [r5]
 4265              	.L397:
3287:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fs_type = 0;				/* Clear new fs object */
 4266              		.loc 1 3287 0
 4267 0032 019B     		ldr	r3, [sp, #4]
 4268 0034 3BB1     		cbz	r3, .L398
3288:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT						/* Create sync object for the new volume */
 4269              		.loc 1 3288 0
 4270 0036 0022     		movs	r2, #0
 4271 0038 1A70     		strb	r2, [r3]
3290:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 4272              		.loc 1 3290 0
 4273 003a 0199     		ldr	r1, [sp, #4]
 4274 003c 0C31     		adds	r1, r1, #12
 4275 003e F0B2     		uxtb	r0, r6
 4276 0040 FFF7FEFF 		bl	ff_cre_syncobj
 4277              	.LVL616:
 4278 0044 F0B1     		cbz	r0, .L401
 4279              	.L398:
3293:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4280              		.loc 1 3293 0
 4281 0046 019B     		ldr	r3, [sp, #4]
 4282 0048 0F4A     		ldr	r2, .L405
 4283 004a 42F82630 		str	r3, [r2, r6, lsl #2]
3295:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4284              		.loc 1 3295 0
 4285 004e 14F1FF34 		adds	r4, r4, #-1
 4286 0052 18BF     		it	ne
 4287 0054 0124     		movne	r4, #1
 4288 0056 002B     		cmp	r3, #0
 4289 0058 08BF     		it	eq
 4290 005a 0124     		moveq	r4, #1
 4291 005c 1CB1     		cbz	r4, .L404
 4292 005e 0024     		movs	r4, #0
 4293              	.LVL617:
 4294              	.L396:
ARM GAS  /tmp/ccwdO2Zj.s 			page 190


3299:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4295              		.loc 1 3299 0
 4296 0060 2046     		mov	r0, r4
 4297 0062 04B0     		add	sp, sp, #16
 4298              	.LCFI48:
 4299              		.cfi_remember_state
 4300              		.cfi_def_cfa_offset 16
 4301              		@ sp needed
 4302 0064 70BD     		pop	{r4, r5, r6, pc}
 4303              	.LVL618:
 4304              	.L404:
 4305              	.LCFI49:
 4306              		.cfi_restore_state
3297:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
 4307              		.loc 1 3297 0
 4308 0066 0022     		movs	r2, #0
 4309 0068 01A9     		add	r1, sp, #4
 4310 006a 6846     		mov	r0, sp
 4311 006c FFF7FEFF 		bl	find_volume
 4312              	.LVL619:
 4313 0070 0446     		mov	r4, r0
 4314              	.LVL620:
3298:Middlewares/Third_Party/FatFs/src/ff.c **** }
 4315              		.loc 1 3298 0
 4316 0072 0146     		mov	r1, r0
 4317 0074 0198     		ldr	r0, [sp, #4]
 4318              	.LVL621:
 4319 0076 FFF7FEFF 		bl	unlock_fs
 4320              	.LVL622:
 4321 007a F1E7     		b	.L396
 4322              	.LVL623:
 4323              	.L399:
3274:Middlewares/Third_Party/FatFs/src/ff.c **** 	cfs = FatFs[vol];					/* Pointer to fs object */
 4324              		.loc 1 3274 0
 4325 007c 0B24     		movs	r4, #11
 4326 007e EFE7     		b	.L396
 4327              	.LVL624:
 4328              	.L400:
3282:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 4329              		.loc 1 3282 0
 4330 0080 0224     		movs	r4, #2
 4331 0082 EDE7     		b	.L396
 4332              	.L401:
3290:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 4333              		.loc 1 3290 0
 4334 0084 0224     		movs	r4, #2
 4335 0086 EBE7     		b	.L396
 4336              	.L406:
 4337              		.align	2
 4338              	.L405:
 4339 0088 00000000 		.word	.LANCHOR2
 4340              		.cfi_endproc
 4341              	.LFE186:
 4343              		.section	.text.f_open,"ax",%progbits
 4344              		.align	1
 4345              		.global	f_open
 4346              		.syntax unified
ARM GAS  /tmp/ccwdO2Zj.s 			page 191


 4347              		.thumb
 4348              		.thumb_func
 4349              		.fpu fpv5-sp-d16
 4351              	f_open:
 4352              	.LFB187:
3313:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 4353              		.loc 1 3313 0
 4354              		.cfi_startproc
 4355              		@ args = 0, pretend = 0, frame = 64
 4356              		@ frame_needed = 0, uses_anonymous_args = 0
 4357              	.LVL625:
 4358 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 4359              	.LCFI50:
 4360              		.cfi_def_cfa_offset 28
 4361              		.cfi_offset 4, -28
 4362              		.cfi_offset 5, -24
 4363              		.cfi_offset 6, -20
 4364              		.cfi_offset 7, -16
 4365              		.cfi_offset 8, -12
 4366              		.cfi_offset 9, -8
 4367              		.cfi_offset 14, -4
 4368 0004 91B0     		sub	sp, sp, #68
 4369              	.LCFI51:
 4370              		.cfi_def_cfa_offset 96
 4371 0006 0191     		str	r1, [sp, #4]
3324:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4372              		.loc 1 3324 0
 4373 0008 0028     		cmp	r0, #0
 4374 000a 00F01981 		beq	.L424
 4375 000e 0546     		mov	r5, r0
 4376 0010 1646     		mov	r6, r2
3327:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, mode);
 4377              		.loc 1 3327 0
 4378 0012 02F03F07 		and	r7, r2, #63
 4379              	.LVL626:
3328:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 4380              		.loc 1 3328 0
 4381 0016 3A46     		mov	r2, r7
 4382 0018 03A9     		add	r1, sp, #12
 4383              	.LVL627:
 4384 001a 01A8     		add	r0, sp, #4
 4385              	.LVL628:
 4386 001c FFF7FEFF 		bl	find_volume
 4387              	.LVL629:
3329:Middlewares/Third_Party/FatFs/src/ff.c **** 		dj.obj.fs = fs;
 4388              		.loc 1 3329 0
 4389 0020 0446     		mov	r4, r0
 4390 0022 50B1     		cbz	r0, .L437
 4391              	.LVL630:
 4392              	.L409:
3499:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4393              		.loc 1 3499 0
 4394 0024 0CB1     		cbz	r4, .L423
 4395              	.LVL631:
 4396              	.L422:
3499:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4397              		.loc 1 3499 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccwdO2Zj.s 			page 192


 4398 0026 0023     		movs	r3, #0
 4399 0028 2B60     		str	r3, [r5]
 4400              	.L423:
3501:Middlewares/Third_Party/FatFs/src/ff.c **** }
 4401              		.loc 1 3501 0 is_stmt 1
 4402 002a 2146     		mov	r1, r4
 4403 002c 0398     		ldr	r0, [sp, #12]
 4404 002e FFF7FEFF 		bl	unlock_fs
 4405              	.LVL632:
 4406              	.L408:
3502:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4407              		.loc 1 3502 0
 4408 0032 2046     		mov	r0, r4
 4409 0034 11B0     		add	sp, sp, #68
 4410              	.LCFI52:
 4411              		.cfi_remember_state
 4412              		.cfi_def_cfa_offset 28
 4413              		@ sp needed
 4414 0036 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 4415              	.LVL633:
 4416              	.L437:
 4417              	.LCFI53:
 4418              		.cfi_restore_state
3330:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
 4419              		.loc 1 3330 0
 4420 003a 039B     		ldr	r3, [sp, #12]
 4421 003c 0493     		str	r3, [sp, #16]
3332:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY	/* R/W configuration */
 4422              		.loc 1 3332 0
 4423 003e 0199     		ldr	r1, [sp, #4]
 4424 0040 04A8     		add	r0, sp, #16
 4425              	.LVL634:
 4426 0042 FFF7FEFF 		bl	follow_path
 4427              	.LVL635:
3334:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {	/* Origin directory itself? */
 4428              		.loc 1 3334 0
 4429 0046 0446     		mov	r4, r0
 4430 0048 60B9     		cbnz	r0, .L410
3335:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;
 4431              		.loc 1 3335 0
 4432 004a 9DF93F30 		ldrsb	r3, [sp, #63]
 4433 004e 002B     		cmp	r3, #0
 4434 0050 51DB     		blt	.L425
3340:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 4435              		.loc 1 3340 0
 4436 0052 37F00103 		bics	r3, r7, #1
 4437 0056 14BF     		ite	ne
 4438 0058 0121     		movne	r1, #1
 4439 005a 0021     		moveq	r1, #0
 4440 005c 04A8     		add	r0, sp, #16
 4441              	.LVL636:
 4442 005e FFF7FEFF 		bl	chk_lock
 4443              	.LVL637:
 4444 0062 0446     		mov	r4, r0
 4445              	.LVL638:
 4446              	.L410:
3345:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) {					/* No file, create new */
ARM GAS  /tmp/ccwdO2Zj.s 			page 193


 4447              		.loc 1 3345 0
 4448 0064 16F01C0F 		tst	r6, #28
 4449 0068 5BD0     		beq	.L411
3346:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) {		/* There is no file to open, create a new entry */
 4450              		.loc 1 3346 0
 4451 006a 002C     		cmp	r4, #0
 4452 006c 4FD0     		beq	.L412
3347:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 4453              		.loc 1 3347 0
 4454 006e 042C     		cmp	r4, #4
 4455 0070 43D0     		beq	.L438
 4456              	.LVL639:
 4457              	.L413:
3354:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 4458              		.loc 1 3354 0
 4459 0072 47F00807 		orr	r7, r7, #8
 4460              	.LVL640:
 4461              	.L414:
3363:Middlewares/Third_Party/FatFs/src/ff.c **** 				dw = GET_FATTIME();
 4462              		.loc 1 3363 0
 4463 0076 002C     		cmp	r4, #0
 4464 0078 62D1     		bne	.L415
3363:Middlewares/Third_Party/FatFs/src/ff.c **** 				dw = GET_FATTIME();
 4465              		.loc 1 3363 0 is_stmt 0 discriminator 1
 4466 007a 17F0080F 		tst	r7, #8
 4467 007e 5FD0     		beq	.L415
3364:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 4468              		.loc 1 3364 0 is_stmt 1
 4469 0080 FFF7FEFF 		bl	get_fattime
 4470              	.LVL641:
 4471 0084 0646     		mov	r6, r0
 4472              	.LVL642:
3392:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dj.dir + DIR_ModTime, dw);	/* Set modified time */
 4473              		.loc 1 3392 0
 4474 0086 0146     		mov	r1, r0
 4475 0088 0C98     		ldr	r0, [sp, #48]
 4476              	.LVL643:
 4477 008a 0E30     		adds	r0, r0, #14
 4478 008c FFF7FEFF 		bl	st_dword
 4479              	.LVL644:
3393:Middlewares/Third_Party/FatFs/src/ff.c **** 					dj.dir[DIR_Attr] = AM_ARC;			/* Reset attribute */
 4480              		.loc 1 3393 0
 4481 0090 3146     		mov	r1, r6
 4482 0092 0C98     		ldr	r0, [sp, #48]
 4483 0094 1630     		adds	r0, r0, #22
 4484 0096 FFF7FEFF 		bl	st_dword
 4485              	.LVL645:
3394:Middlewares/Third_Party/FatFs/src/ff.c **** 					cl = ld_clust(fs, dj.dir);			/* Get cluster chain */
 4486              		.loc 1 3394 0
 4487 009a 0C9B     		ldr	r3, [sp, #48]
 4488 009c 2022     		movs	r2, #32
 4489 009e DA72     		strb	r2, [r3, #11]
3395:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dj.dir, 0);			/* Reset file allocation info */
 4490              		.loc 1 3395 0
 4491 00a0 039E     		ldr	r6, [sp, #12]
 4492              	.LVL646:
 4493 00a2 DDF83080 		ldr	r8, [sp, #48]
ARM GAS  /tmp/ccwdO2Zj.s 			page 194


 4494 00a6 4146     		mov	r1, r8
 4495 00a8 3046     		mov	r0, r6
 4496 00aa FFF7FEFF 		bl	ld_clust
 4497              	.LVL647:
 4498 00ae 8146     		mov	r9, r0
 4499              	.LVL648:
3396:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dj.dir + DIR_FileSize, 0);
 4500              		.loc 1 3396 0
 4501 00b0 0022     		movs	r2, #0
 4502 00b2 4146     		mov	r1, r8
 4503 00b4 3046     		mov	r0, r6
 4504              	.LVL649:
 4505 00b6 FFF7FEFF 		bl	st_clust
 4506              	.LVL650:
3397:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 1;
 4507              		.loc 1 3397 0
 4508 00ba 0021     		movs	r1, #0
 4509 00bc 0C98     		ldr	r0, [sp, #48]
 4510 00be 1C30     		adds	r0, r0, #28
 4511 00c0 FFF7FEFF 		bl	st_dword
 4512              	.LVL651:
3398:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4513              		.loc 1 3398 0
 4514 00c4 039B     		ldr	r3, [sp, #12]
 4515 00c6 0122     		movs	r2, #1
 4516 00c8 DA70     		strb	r2, [r3, #3]
3400:Middlewares/Third_Party/FatFs/src/ff.c **** 						dw = fs->winsect;
 4517              		.loc 1 3400 0
 4518 00ca B9F1000F 		cmp	r9, #0
 4519 00ce 37D0     		beq	.L415
3401:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = remove_chain(&dj.obj, cl, 0);
 4520              		.loc 1 3401 0
 4521 00d0 039B     		ldr	r3, [sp, #12]
 4522 00d2 1E6B     		ldr	r6, [r3, #48]
 4523              	.LVL652:
3402:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (res == FR_OK) {
 4524              		.loc 1 3402 0
 4525 00d4 0022     		movs	r2, #0
 4526 00d6 4946     		mov	r1, r9
 4527 00d8 04A8     		add	r0, sp, #16
 4528 00da FFF7FEFF 		bl	remove_chain
 4529              	.LVL653:
3403:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = move_window(fs, dw);
 4530              		.loc 1 3403 0
 4531 00de 0446     		mov	r4, r0
 4532 00e0 70BB     		cbnz	r0, .L415
3404:Middlewares/Third_Party/FatFs/src/ff.c **** 							fs->last_clst = cl - 1;		/* Reuse the cluster hole */
 4533              		.loc 1 3404 0
 4534 00e2 3146     		mov	r1, r6
 4535 00e4 0398     		ldr	r0, [sp, #12]
 4536              	.LVL654:
 4537 00e6 FFF7FEFF 		bl	move_window
 4538              	.LVL655:
 4539 00ea 0446     		mov	r4, r0
 4540              	.LVL656:
3405:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
 4541              		.loc 1 3405 0
ARM GAS  /tmp/ccwdO2Zj.s 			page 195


 4542 00ec 09F1FF33 		add	r3, r9, #-1
 4543 00f0 039A     		ldr	r2, [sp, #12]
 4544 00f2 1361     		str	r3, [r2, #16]
 4545 00f4 24E0     		b	.L415
 4546              	.LVL657:
 4547              	.L425:
3336:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 4548              		.loc 1 3336 0
 4549 00f6 0624     		movs	r4, #6
 4550 00f8 B4E7     		b	.L410
 4551              	.LVL658:
 4552              	.L438:
3349:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 4553              		.loc 1 3349 0
 4554 00fa FFF7FEFF 		bl	enq_lock
 4555              	.LVL659:
 4556 00fe 08B9     		cbnz	r0, .L439
 4557 0100 1224     		movs	r4, #18
 4558              	.LVL660:
 4559 0102 B6E7     		b	.L413
 4560              	.LVL661:
 4561              	.L439:
3349:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 4562              		.loc 1 3349 0 is_stmt 0 discriminator 1
 4563 0104 04A8     		add	r0, sp, #16
 4564 0106 FFF7FEFF 		bl	dir_register
 4565              	.LVL662:
 4566 010a 0446     		mov	r4, r0
 4567              	.LVL663:
 4568 010c B1E7     		b	.L413
 4569              	.LVL664:
 4570              	.L412:
3357:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_DENIED;
 4571              		.loc 1 3357 0 is_stmt 1
 4572 010e 9DF81630 		ldrb	r3, [sp, #22]	@ zero_extendqisi2
 4573 0112 13F0110F 		tst	r3, #17
 4574 0116 12D1     		bne	.L427
3360:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 4575              		.loc 1 3360 0
 4576 0118 16F0040F 		tst	r6, #4
 4577 011c ABD0     		beq	.L414
 4578 011e 0824     		movs	r4, #8
 4579              	.LVL665:
 4580 0120 0EE0     		b	.L415
 4581              	.LVL666:
 4582              	.L411:
3412:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dj.obj.attr & AM_DIR) {		/* It is a directory */
 4583              		.loc 1 3412 0
 4584 0122 6CB9     		cbnz	r4, .L415
3413:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_NO_FILE;
 4585              		.loc 1 3413 0
 4586 0124 9DF81630 		ldrb	r3, [sp, #22]	@ zero_extendqisi2
 4587 0128 13F0100F 		tst	r3, #16
 4588 012c 4ED1     		bne	.L429
3416:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_DENIED;
 4589              		.loc 1 3416 0
 4590 012e 16F0020F 		tst	r6, #2
ARM GAS  /tmp/ccwdO2Zj.s 			page 196


 4591 0132 05D0     		beq	.L415
3416:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_DENIED;
 4592              		.loc 1 3416 0 is_stmt 0 discriminator 1
 4593 0134 13F0010F 		tst	r3, #1
 4594 0138 02D0     		beq	.L415
3417:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 4595              		.loc 1 3417 0 is_stmt 1
 4596 013a 0724     		movs	r4, #7
 4597              	.LVL667:
 4598 013c 16E0     		b	.L416
 4599              	.LVL668:
 4600              	.L427:
3358:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
 4601              		.loc 1 3358 0
 4602 013e 0724     		movs	r4, #7
 4603              	.LVL669:
 4604              	.L415:
3422:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (mode & FA_CREATE_ALWAYS)		/* Set file change flag if created or overwritten */
 4605              		.loc 1 3422 0
 4606 0140 A4B9     		cbnz	r4, .L416
3423:Middlewares/Third_Party/FatFs/src/ff.c **** 				mode |= FA_MODIFIED;
 4607              		.loc 1 3423 0
 4608 0142 17F0080F 		tst	r7, #8
 4609 0146 01D0     		beq	.L417
3424:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->dir_sect = fs->winsect;			/* Pointer to the directory entry */
 4610              		.loc 1 3424 0
 4611 0148 47F04007 		orr	r7, r7, #64
 4612              	.LVL670:
 4613              	.L417:
3425:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->dir_ptr = dj.dir;
 4614              		.loc 1 3425 0
 4615 014c 039B     		ldr	r3, [sp, #12]
 4616 014e 1B6B     		ldr	r3, [r3, #48]
 4617 0150 6B62     		str	r3, [r5, #36]
3426:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 4618              		.loc 1 3426 0
 4619 0152 0C9B     		ldr	r3, [sp, #48]
 4620 0154 AB62     		str	r3, [r5, #40]
3428:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!fp->obj.lockid) res = FR_INT_ERR;
 4621              		.loc 1 3428 0
 4622 0156 37F00103 		bics	r3, r7, #1
 4623 015a 14BF     		ite	ne
 4624 015c 0121     		movne	r1, #1
 4625 015e 0021     		moveq	r1, #0
 4626 0160 04A8     		add	r0, sp, #16
 4627 0162 FFF7FEFF 		bl	inc_lock
 4628              	.LVL671:
 4629 0166 2861     		str	r0, [r5, #16]
3429:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 4630              		.loc 1 3429 0
 4631 0168 0028     		cmp	r0, #0
 4632 016a 67D0     		beq	.L431
 4633              	.LVL672:
 4634              	.L416:
3444:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 4635              		.loc 1 3444 0
 4636 016c 002C     		cmp	r4, #0
ARM GAS  /tmp/ccwdO2Zj.s 			page 197


 4637 016e 7FF459AF 		bne	.L409
3456:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.objsize = ld_dword(dj.dir + DIR_FileSize);
 4638              		.loc 1 3456 0
 4639 0172 039E     		ldr	r6, [sp, #12]
 4640 0174 DDF83080 		ldr	r8, [sp, #48]
 4641 0178 4146     		mov	r1, r8
 4642 017a 3046     		mov	r0, r6
 4643 017c FFF7FEFF 		bl	ld_clust
 4644              	.LVL673:
 4645 0180 A860     		str	r0, [r5, #8]
3457:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 4646              		.loc 1 3457 0
 4647 0182 08F11C00 		add	r0, r8, #28
 4648 0186 FFF7FEFF 		bl	ld_dword
 4649              	.LVL674:
 4650 018a E860     		str	r0, [r5, #12]
3460:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 4651              		.loc 1 3460 0
 4652 018c 0021     		movs	r1, #0
 4653 018e E962     		str	r1, [r5, #44]
3462:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.id = fs->id;
 4654              		.loc 1 3462 0
 4655 0190 2E60     		str	r6, [r5]
3463:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->flag = mode;		/* Set file access mode */
 4656              		.loc 1 3463 0
 4657 0192 F388     		ldrh	r3, [r6, #6]
 4658 0194 AB80     		strh	r3, [r5, #4]	@ movhi
3464:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->err = 0;			/* Clear error flag */
 4659              		.loc 1 3464 0
 4660 0196 2F75     		strb	r7, [r5, #20]
3465:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->sect = 0;			/* Invalidate current data sector */
 4661              		.loc 1 3465 0
 4662 0198 6975     		strb	r1, [r5, #21]
3466:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->fptr = 0;			/* Set file pointer top of the file */
 4663              		.loc 1 3466 0
 4664 019a 2962     		str	r1, [r5, #32]
3467:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 4665              		.loc 1 3467 0
 4666 019c A961     		str	r1, [r5, #24]
3470:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 4667              		.loc 1 3470 0
 4668 019e 05F13006 		add	r6, r5, #48
 4669 01a2 4FF40072 		mov	r2, #512
 4670 01a6 3046     		mov	r0, r6
 4671 01a8 FFF7FEFF 		bl	mem_set
 4672              	.LVL675:
3472:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr = fp->obj.objsize;			/* Offset to seek */
 4673              		.loc 1 3472 0
 4674 01ac 17F0200F 		tst	r7, #32
 4675 01b0 3FF438AF 		beq	.L409
3472:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr = fp->obj.objsize;			/* Offset to seek */
 4676              		.loc 1 3472 0 is_stmt 0 discriminator 1
 4677 01b4 EF68     		ldr	r7, [r5, #12]
 4678              	.LVL676:
 4679 01b6 002F     		cmp	r7, #0
 4680 01b8 3FF434AF 		beq	.L409
3473:Middlewares/Third_Party/FatFs/src/ff.c **** 				bcs = (DWORD)fs->csize * SS(fs);	/* Cluster size in byte */
ARM GAS  /tmp/ccwdO2Zj.s 			page 198


 4681              		.loc 1 3473 0 is_stmt 1
 4682 01bc AF61     		str	r7, [r5, #24]
3474:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = fp->obj.sclust;				/* Follow the cluster chain */
 4683              		.loc 1 3474 0
 4684 01be 039B     		ldr	r3, [sp, #12]
 4685 01c0 B3F80A80 		ldrh	r8, [r3, #10]
 4686 01c4 4FEA4828 		lsl	r8, r8, #9
 4687              	.LVL677:
3475:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (ofs = fp->obj.objsize; res == FR_OK && ofs > bcs; ofs -= bcs) {
 4688              		.loc 1 3475 0
 4689 01c8 A968     		ldr	r1, [r5, #8]
 4690              	.LVL678:
3476:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = get_fat(&fp->obj, clst);
 4691              		.loc 1 3476 0
 4692 01ca 06E0     		b	.L418
 4693              	.LVL679:
 4694              	.L429:
3414:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
 4695              		.loc 1 3414 0
 4696 01cc 0424     		movs	r4, #4
 4697              	.LVL680:
 4698 01ce CDE7     		b	.L416
 4699              	.LVL681:
 4700              	.L419:
3479:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 4701              		.loc 1 3479 0
 4702 01d0 B1F1FF3F 		cmp	r1, #-1
 4703 01d4 11D0     		beq	.L440
 4704              	.LVL682:
 4705              	.L420:
3476:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = get_fat(&fp->obj, clst);
 4706              		.loc 1 3476 0 discriminator 2
 4707 01d6 A7EB0807 		sub	r7, r7, r8
 4708              	.LVL683:
 4709              	.L418:
3476:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = get_fat(&fp->obj, clst);
 4710              		.loc 1 3476 0 is_stmt 0 discriminator 1
 4711 01da 4745     		cmp	r7, r8
 4712 01dc 94BF     		ite	ls
 4713 01de 0023     		movls	r3, #0
 4714 01e0 0123     		movhi	r3, #1
 4715 01e2 002C     		cmp	r4, #0
 4716 01e4 18BF     		it	ne
 4717 01e6 0023     		movne	r3, #0
 4718 01e8 4BB1     		cbz	r3, .L441
3477:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst <= 1) res = FR_INT_ERR;
 4719              		.loc 1 3477 0 is_stmt 1
 4720 01ea 2846     		mov	r0, r5
 4721 01ec FFF7FEFF 		bl	get_fat
 4722              	.LVL684:
 4723 01f0 0146     		mov	r1, r0
 4724              	.LVL685:
3478:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) res = FR_DISK_ERR;
 4725              		.loc 1 3478 0
 4726 01f2 0128     		cmp	r0, #1
 4727 01f4 ECD8     		bhi	.L419
 4728 01f6 0224     		movs	r4, #2
ARM GAS  /tmp/ccwdO2Zj.s 			page 199


 4729              	.LVL686:
 4730 01f8 EAE7     		b	.L419
 4731              	.LVL687:
 4732              	.L440:
3479:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 4733              		.loc 1 3479 0
 4734 01fa 0124     		movs	r4, #1
 4735              	.LVL688:
 4736 01fc EBE7     		b	.L420
 4737              	.LVL689:
 4738              	.L441:
3481:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK && ofs % SS(fs)) {	/* Fill sector buffer if not on the sector boundary */
 4739              		.loc 1 3481 0
 4740 01fe E961     		str	r1, [r5, #28]
3482:Middlewares/Third_Party/FatFs/src/ff.c **** 					if ((sc = clust2sect(fs, clst)) == 0) {
 4741              		.loc 1 3482 0
 4742 0200 002C     		cmp	r4, #0
 4743 0202 7FF40FAF 		bne	.L409
3482:Middlewares/Third_Party/FatFs/src/ff.c **** 					if ((sc = clust2sect(fs, clst)) == 0) {
 4744              		.loc 1 3482 0 is_stmt 0 discriminator 1
 4745 0206 C7F30803 		ubfx	r3, r7, #0, #9
 4746 020a 002B     		cmp	r3, #0
 4747 020c 3FF40AAF 		beq	.L409
3483:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_INT_ERR;
 4748              		.loc 1 3483 0 is_stmt 1
 4749 0210 DDF80C80 		ldr	r8, [sp, #12]
 4750              	.LVL690:
 4751 0214 4046     		mov	r0, r8
 4752 0216 FFF7FEFF 		bl	clust2sect
 4753              	.LVL691:
 4754 021a 08B9     		cbnz	r0, .L442
3484:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else {
 4755              		.loc 1 3484 0
 4756 021c 0224     		movs	r4, #2
 4757              	.LVL692:
 4758 021e 02E7     		b	.L422
 4759              	.LVL693:
 4760              	.L442:
3486:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
 4761              		.loc 1 3486 0
 4762 0220 00EB5722 		add	r2, r0, r7, lsr #9
 4763 0224 2A62     		str	r2, [r5, #32]
3488:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 4764              		.loc 1 3488 0
 4765 0226 0123     		movs	r3, #1
 4766 0228 3146     		mov	r1, r6
 4767 022a 98F80100 		ldrb	r0, [r8, #1]	@ zero_extendqisi2
 4768              	.LVL694:
 4769 022e FFF7FEFF 		bl	disk_read
 4770              	.LVL695:
 4771 0232 0028     		cmp	r0, #0
 4772 0234 3FF4F6AE 		beq	.L409
 4773 0238 0124     		movs	r4, #1
 4774              	.LVL696:
 4775 023a F4E6     		b	.L422
 4776              	.LVL697:
 4777              	.L431:
ARM GAS  /tmp/ccwdO2Zj.s 			page 200


3429:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 4778              		.loc 1 3429 0
 4779 023c 0224     		movs	r4, #2
 4780              	.LVL698:
 4781 023e F1E6     		b	.L409
 4782              	.LVL699:
 4783              	.L424:
3324:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4784              		.loc 1 3324 0
 4785 0240 0924     		movs	r4, #9
 4786 0242 F6E6     		b	.L408
 4787              		.cfi_endproc
 4788              	.LFE187:
 4790              		.section	.text.f_read,"ax",%progbits
 4791              		.align	1
 4792              		.global	f_read
 4793              		.syntax unified
 4794              		.thumb
 4795              		.thumb_func
 4796              		.fpu fpv5-sp-d16
 4798              	f_read:
 4799              	.LFB188:
3517:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 4800              		.loc 1 3517 0
 4801              		.cfi_startproc
 4802              		@ args = 0, pretend = 0, frame = 16
 4803              		@ frame_needed = 0, uses_anonymous_args = 0
 4804              	.LVL700:
 4805 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4806              	.LCFI54:
 4807              		.cfi_def_cfa_offset 36
 4808              		.cfi_offset 4, -36
 4809              		.cfi_offset 5, -32
 4810              		.cfi_offset 6, -28
 4811              		.cfi_offset 7, -24
 4812              		.cfi_offset 8, -20
 4813              		.cfi_offset 9, -16
 4814              		.cfi_offset 10, -12
 4815              		.cfi_offset 11, -8
 4816              		.cfi_offset 14, -4
 4817 0004 85B0     		sub	sp, sp, #20
 4818              	.LCFI55:
 4819              		.cfi_def_cfa_offset 56
 4820 0006 0446     		mov	r4, r0
 4821 0008 0F46     		mov	r7, r1
 4822 000a 1646     		mov	r6, r2
 4823 000c 9946     		mov	r9, r3
 4824              	.LVL701:
3526:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&fp->obj, &fs);				/* Check validity of the file object */
 4825              		.loc 1 3526 0
 4826 000e 0023     		movs	r3, #0
 4827              	.LVL702:
 4828 0010 C9F80030 		str	r3, [r9]
3527:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);	/* Check validity */
 4829              		.loc 1 3527 0
 4830 0014 0190     		str	r0, [sp, #4]
 4831 0016 03A9     		add	r1, sp, #12
ARM GAS  /tmp/ccwdO2Zj.s 			page 201


 4832              	.LVL703:
 4833 0018 FFF7FEFF 		bl	validate
 4834              	.LVL704:
3528:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_READ)) LEAVE_FF(fs, FR_DENIED); /* Check access mode */
 4835              		.loc 1 3528 0
 4836 001c 0090     		str	r0, [sp]
 4837 001e 70B9     		cbnz	r0, .L444
3528:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_READ)) LEAVE_FF(fs, FR_DENIED); /* Check access mode */
 4838              		.loc 1 3528 0 is_stmt 0 discriminator 2
 4839 0020 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 4840 0022 0093     		str	r3, [sp]
 4841              	.LVL705:
 4842 0024 5BB9     		cbnz	r3, .L444
3529:Middlewares/Third_Party/FatFs/src/ff.c **** 	remain = fp->obj.objsize - fp->fptr;
 4843              		.loc 1 3529 0 is_stmt 1
 4844 0026 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 4845              	.LVL706:
 4846 0028 13F0010F 		tst	r3, #1
 4847 002c 0FD0     		beq	.L472
3530:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (btr > remain) btr = (UINT)remain;		/* Truncate btr by remaining bytes */
 4848              		.loc 1 3530 0
 4849 002e E568     		ldr	r5, [r4, #12]
 4850 0030 A369     		ldr	r3, [r4, #24]
 4851 0032 ED1A     		subs	r5, r5, r3
 4852              	.LVL707:
3531:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4853              		.loc 1 3531 0
 4854 0034 B542     		cmp	r5, r6
 4855 0036 C0F08280 		bcc	.L467
 4856 003a 3546     		mov	r5, r6
 4857              	.LVL708:
 4858 003c 7FE0     		b	.L467
 4859              	.LVL709:
 4860              	.L444:
3528:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_READ)) LEAVE_FF(fs, FR_DENIED); /* Check access mode */
 4861              		.loc 1 3528 0 discriminator 3
 4862 003e 0099     		ldr	r1, [sp]
 4863 0040 0398     		ldr	r0, [sp, #12]
 4864 0042 FFF7FEFF 		bl	unlock_fs
 4865              	.LVL710:
 4866              	.L446:
3601:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4867              		.loc 1 3601 0
 4868 0046 0098     		ldr	r0, [sp]
 4869 0048 05B0     		add	sp, sp, #20
 4870              	.LCFI56:
 4871              		.cfi_remember_state
 4872              		.cfi_def_cfa_offset 36
 4873              		@ sp needed
 4874 004a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4875              	.LVL711:
 4876              	.L472:
 4877              	.LCFI57:
 4878              		.cfi_restore_state
3529:Middlewares/Third_Party/FatFs/src/ff.c **** 	remain = fp->obj.objsize - fp->fptr;
 4879              		.loc 1 3529 0 discriminator 1
 4880 004e 0721     		movs	r1, #7
ARM GAS  /tmp/ccwdO2Zj.s 			page 202


 4881 0050 0398     		ldr	r0, [sp, #12]
 4882 0052 FFF7FEFF 		bl	unlock_fs
 4883              	.LVL712:
 4884 0056 0723     		movs	r3, #7
 4885 0058 0093     		str	r3, [sp]
 4886              	.LVL713:
 4887 005a F4E7     		b	.L446
 4888              	.LVL714:
 4889              	.L452:
3542:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = clmt_clust(fp, fp->fptr);	/* Get cluster# from the CLMT */
 4890              		.loc 1 3542 0
 4891 005c E36A     		ldr	r3, [r4, #44]
 4892 005e 1BB1     		cbz	r3, .L454
3543:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
 4893              		.loc 1 3543 0
 4894 0060 2046     		mov	r0, r4
 4895 0062 FFF7FEFF 		bl	clmt_clust
 4896              	.LVL715:
 4897 0066 7BE0     		b	.L453
 4898              	.LVL716:
 4899              	.L454:
3547:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 4900              		.loc 1 3547 0
 4901 0068 E169     		ldr	r1, [r4, #28]
 4902 006a 0198     		ldr	r0, [sp, #4]
 4903 006c FFF7FEFF 		bl	get_fat
 4904              	.LVL717:
 4905 0070 76E0     		b	.L453
 4906              	.L476:
3550:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 4907              		.loc 1 3550 0 discriminator 1
 4908 0072 4FF00208 		mov	r8, #2
 4909 0076 84F81580 		strb	r8, [r4, #21]
 4910 007a 4146     		mov	r1, r8
 4911 007c 0398     		ldr	r0, [sp, #12]
 4912              	.LVL718:
 4913 007e FFF7FEFF 		bl	unlock_fs
 4914              	.LVL719:
 4915 0082 CDF80080 		str	r8, [sp]
 4916              	.LVL720:
 4917 0086 DEE7     		b	.L446
 4918              	.LVL721:
 4919              	.L477:
3551:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;				/* Update current cluster */
 4920              		.loc 1 3551 0 discriminator 1
 4921 0088 4FF00108 		mov	r8, #1
 4922 008c 84F81580 		strb	r8, [r4, #21]
 4923 0090 4146     		mov	r1, r8
 4924 0092 0398     		ldr	r0, [sp, #12]
 4925              	.LVL722:
 4926 0094 FFF7FEFF 		bl	unlock_fs
 4927              	.LVL723:
 4928 0098 CDF80080 		str	r8, [sp]
 4929              	.LVL724:
 4930 009c D3E7     		b	.L446
 4931              	.LVL725:
 4932              	.L478:
ARM GAS  /tmp/ccwdO2Zj.s 			page 203


3555:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += csect;
 4933              		.loc 1 3555 0 discriminator 1
 4934 009e 4FF00208 		mov	r8, #2
 4935 00a2 84F81580 		strb	r8, [r4, #21]
 4936 00a6 4146     		mov	r1, r8
 4937 00a8 5846     		mov	r0, fp
 4938              	.LVL726:
 4939 00aa FFF7FEFF 		bl	unlock_fs
 4940              	.LVL727:
 4941 00ae CDF80080 		str	r8, [sp]
 4942              	.LVL728:
 4943 00b2 C8E7     		b	.L446
 4944              	.LVL729:
 4945              	.L479:
3562:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY && _FS_MINIMIZE <= 2			/* Replace one of the read sectors with cached data if it 
 4946              		.loc 1 3562 0 discriminator 1
 4947 00b4 4FF00108 		mov	r8, #1
 4948              	.LVL730:
 4949 00b8 84F81580 		strb	r8, [r4, #21]
 4950 00bc 4146     		mov	r1, r8
 4951 00be 0398     		ldr	r0, [sp, #12]
 4952 00c0 FFF7FEFF 		bl	unlock_fs
 4953              	.LVL731:
 4954 00c4 CDF80080 		str	r8, [sp]
 4955              	.LVL732:
 4956 00c8 BDE7     		b	.L446
 4957              	.LVL733:
 4958              	.L480:
3569:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(rbuff + ((fp->sect - sect) * SS(fs)), fp->buf, SS(fs));
 4959              		.loc 1 3569 0 discriminator 1
 4960 00ca 206A     		ldr	r0, [r4, #32]
 4961 00cc A0EB0A00 		sub	r0, r0, r10
 4962 00d0 4045     		cmp	r0, r8
 4963 00d2 6DD2     		bcs	.L461
3570:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 4964              		.loc 1 3570 0
 4965 00d4 4FF40072 		mov	r2, #512
 4966 00d8 04F13001 		add	r1, r4, #48
 4967 00dc 07EB4020 		add	r0, r7, r0, lsl #9
 4968 00e0 FFF7FEFF 		bl	mem_cpy
 4969              	.LVL734:
 4970 00e4 64E0     		b	.L461
 4971              	.L458:
3578:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 4972              		.loc 1 3578 0
 4973 00e6 226A     		ldr	r2, [r4, #32]
 4974 00e8 5245     		cmp	r2, r10
 4975 00ea 0DD0     		beq	.L463
3580:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
 4976              		.loc 1 3580 0
 4977 00ec 94F91430 		ldrsb	r3, [r4, #20]
 4978 00f0 002B     		cmp	r3, #0
 4979 00f2 60DB     		blt	.L473
 4980              	.L464:
3585:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 4981              		.loc 1 3585 0
 4982 00f4 0123     		movs	r3, #1
ARM GAS  /tmp/ccwdO2Zj.s 			page 204


 4983 00f6 5246     		mov	r2, r10
 4984 00f8 04F13001 		add	r1, r4, #48
 4985 00fc 0398     		ldr	r0, [sp, #12]
 4986 00fe 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 4987 0100 FFF7FEFF 		bl	disk_read
 4988              	.LVL735:
 4989 0104 0028     		cmp	r0, #0
 4990 0106 6ED1     		bne	.L474
 4991              	.L463:
3588:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 4992              		.loc 1 3588 0
 4993 0108 C4F820A0 		str	r10, [r4, #32]
 4994              	.LVL736:
 4995              	.L450:
3590:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rcnt > btr) rcnt = btr;					/* Clip it by btr if needed */
 4996              		.loc 1 3590 0
 4997 010c A369     		ldr	r3, [r4, #24]
 4998 010e C3F30803 		ubfx	r3, r3, #0, #9
 4999 0112 C3F50076 		rsb	r6, r3, #512
 5000              	.LVL737:
3591:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
 5001              		.loc 1 3591 0
 5002 0116 B542     		cmp	r5, r6
 5003 0118 00D2     		bcs	.L466
 5004 011a 2E46     		mov	r6, r5
 5005              	.LVL738:
 5006              	.L466:
3596:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 5007              		.loc 1 3596 0
 5008 011c 04F13001 		add	r1, r4, #48
 5009 0120 3246     		mov	r2, r6
 5010 0122 1944     		add	r1, r1, r3
 5011 0124 3846     		mov	r0, r7
 5012 0126 FFF7FEFF 		bl	mem_cpy
 5013              	.LVL739:
 5014              	.L462:
3534:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fptr % SS(fs) == 0) {			/* On the sector boundary? */
 5015              		.loc 1 3534 0
 5016 012a 3744     		add	r7, r7, r6
 5017              	.LVL740:
 5018 012c A369     		ldr	r3, [r4, #24]
 5019 012e 3344     		add	r3, r3, r6
 5020 0130 A361     		str	r3, [r4, #24]
 5021 0132 D9F80030 		ldr	r3, [r9]
 5022 0136 3344     		add	r3, r3, r6
 5023 0138 C9F80030 		str	r3, [r9]
 5024 013c AD1B     		subs	r5, r5, r6
 5025              	.LVL741:
 5026              	.L467:
3533:Middlewares/Third_Party/FatFs/src/ff.c **** 		rbuff += rcnt, fp->fptr += rcnt, *br += rcnt, btr -= rcnt) {
 5027              		.loc 1 3533 0
 5028 013e 002D     		cmp	r5, #0
 5029 0140 5CD0     		beq	.L475
3535:Middlewares/Third_Party/FatFs/src/ff.c **** 			csect = (UINT)(fp->fptr / SS(fs) & (fs->csize - 1));	/* Sector offset in the cluster */
 5030              		.loc 1 3535 0
 5031 0142 A169     		ldr	r1, [r4, #24]
 5032 0144 C1F30803 		ubfx	r3, r1, #0, #9
ARM GAS  /tmp/ccwdO2Zj.s 			page 205


 5033 0148 002B     		cmp	r3, #0
 5034 014a DFD1     		bne	.L450
3536:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (csect == 0) {					/* On the cluster boundary? */
 5035              		.loc 1 3536 0
 5036 014c 039B     		ldr	r3, [sp, #12]
 5037 014e 5E89     		ldrh	r6, [r3, #10]
 5038 0150 013E     		subs	r6, r6, #1
 5039              	.LVL742:
3537:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr == 0) {			/* On the top of the file? */
 5040              		.loc 1 3537 0
 5041 0152 16EA5126 		ands	r6, r6, r1, lsr #9
 5042              	.LVL743:
 5043 0156 09D1     		bne	.L451
3538:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = fp->obj.sclust;		/* Follow cluster chain from the origin */
 5044              		.loc 1 3538 0
 5045 0158 0029     		cmp	r1, #0
 5046 015a 7FF47FAF 		bne	.L452
3539:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {						/* Middle or end of the file */
 5047              		.loc 1 3539 0
 5048 015e A068     		ldr	r0, [r4, #8]
 5049              	.LVL744:
 5050              	.L453:
3550:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 5051              		.loc 1 3550 0
 5052 0160 0128     		cmp	r0, #1
 5053 0162 86D9     		bls	.L476
3551:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;				/* Update current cluster */
 5054              		.loc 1 3551 0
 5055 0164 B0F1FF3F 		cmp	r0, #-1
 5056 0168 8ED0     		beq	.L477
3552:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5057              		.loc 1 3552 0
 5058 016a E061     		str	r0, [r4, #28]
 5059              	.LVL745:
 5060              	.L451:
3554:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!sect) ABORT(fs, FR_INT_ERR);
 5061              		.loc 1 3554 0
 5062 016c DDF80CB0 		ldr	fp, [sp, #12]
 5063 0170 E169     		ldr	r1, [r4, #28]
 5064 0172 5846     		mov	r0, fp
 5065 0174 FFF7FEFF 		bl	clust2sect
 5066              	.LVL746:
3555:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += csect;
 5067              		.loc 1 3555 0
 5068 0178 8246     		mov	r10, r0
 5069 017a 0028     		cmp	r0, #0
 5070 017c 8FD0     		beq	.L478
3556:Middlewares/Third_Party/FatFs/src/ff.c **** 			cc = btr / SS(fs);					/* When remaining bytes >= sector size, */
 5071              		.loc 1 3556 0
 5072 017e B244     		add	r10, r10, r6
 5073              	.LVL747:
3558:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (csect + cc > fs->csize) {	/* Clip at cluster boundary */
 5074              		.loc 1 3558 0
 5075 0180 5FEA5528 		lsrs	r8, r5, #9
 5076              	.LVL748:
 5077 0184 AFD0     		beq	.L458
3559:Middlewares/Third_Party/FatFs/src/ff.c **** 					cc = fs->csize - csect;
ARM GAS  /tmp/ccwdO2Zj.s 			page 206


 5078              		.loc 1 3559 0
 5079 0186 06EB0803 		add	r3, r6, r8
 5080 018a BBF80A20 		ldrh	r2, [fp, #10]
 5081 018e 9342     		cmp	r3, r2
 5082 0190 01D9     		bls	.L459
3560:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 5083              		.loc 1 3560 0
 5084 0192 A2EB0608 		sub	r8, r2, r6
 5085              	.LVL749:
 5086              	.L459:
3562:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY && _FS_MINIMIZE <= 2			/* Replace one of the read sectors with cached data if it 
 5087              		.loc 1 3562 0
 5088 0196 4346     		mov	r3, r8
 5089 0198 5246     		mov	r2, r10
 5090 019a 3946     		mov	r1, r7
 5091 019c 9BF80100 		ldrb	r0, [fp, #1]	@ zero_extendqisi2
 5092 01a0 FFF7FEFF 		bl	disk_read
 5093              	.LVL750:
 5094 01a4 0028     		cmp	r0, #0
 5095 01a6 85D1     		bne	.L479
3569:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(rbuff + ((fp->sect - sect) * SS(fs)), fp->buf, SS(fs));
 5096              		.loc 1 3569 0
 5097 01a8 94F91430 		ldrsb	r3, [r4, #20]
 5098 01ac 002B     		cmp	r3, #0
 5099 01ae 8CDB     		blt	.L480
 5100              	.L461:
3574:Middlewares/Third_Party/FatFs/src/ff.c **** 				continue;
 5101              		.loc 1 3574 0
 5102 01b0 4FEA4826 		lsl	r6, r8, #9
 5103              	.LVL751:
3575:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5104              		.loc 1 3575 0
 5105 01b4 B9E7     		b	.L462
 5106              	.LVL752:
 5107              	.L473:
3581:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->flag &= (BYTE)~FA_DIRTY;
 5108              		.loc 1 3581 0
 5109 01b6 0123     		movs	r3, #1
 5110 01b8 04F13001 		add	r1, r4, #48
 5111 01bc 9BF80100 		ldrb	r0, [fp, #1]	@ zero_extendqisi2
 5112 01c0 FFF7FEFF 		bl	disk_write
 5113              	.LVL753:
 5114 01c4 20B9     		cbnz	r0, .L481
3582:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 5115              		.loc 1 3582 0
 5116 01c6 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 5117 01c8 03F07F03 		and	r3, r3, #127
 5118 01cc 2375     		strb	r3, [r4, #20]
 5119 01ce 91E7     		b	.L464
 5120              	.L481:
3581:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->flag &= (BYTE)~FA_DIRTY;
 5121              		.loc 1 3581 0 discriminator 1
 5122 01d0 4FF00108 		mov	r8, #1
 5123              	.LVL754:
 5124 01d4 84F81580 		strb	r8, [r4, #21]
 5125 01d8 4146     		mov	r1, r8
 5126 01da 0398     		ldr	r0, [sp, #12]
ARM GAS  /tmp/ccwdO2Zj.s 			page 207


 5127 01dc FFF7FEFF 		bl	unlock_fs
 5128              	.LVL755:
 5129 01e0 CDF80080 		str	r8, [sp]
 5130              	.LVL756:
 5131 01e4 2FE7     		b	.L446
 5132              	.LVL757:
 5133              	.L474:
3585:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5134              		.loc 1 3585 0 discriminator 1
 5135 01e6 4FF00108 		mov	r8, #1
 5136              	.LVL758:
 5137 01ea 84F81580 		strb	r8, [r4, #21]
 5138 01ee 4146     		mov	r1, r8
 5139 01f0 0398     		ldr	r0, [sp, #12]
 5140 01f2 FFF7FEFF 		bl	unlock_fs
 5141              	.LVL759:
 5142 01f6 CDF80080 		str	r8, [sp]
 5143              	.LVL760:
 5144 01fa 24E7     		b	.L446
 5145              	.LVL761:
 5146              	.L475:
3600:Middlewares/Third_Party/FatFs/src/ff.c **** }
 5147              		.loc 1 3600 0
 5148 01fc 0021     		movs	r1, #0
 5149 01fe 0398     		ldr	r0, [sp, #12]
 5150 0200 FFF7FEFF 		bl	unlock_fs
 5151              	.LVL762:
 5152 0204 1FE7     		b	.L446
 5153              		.cfi_endproc
 5154              	.LFE188:
 5156              		.section	.text.f_write,"ax",%progbits
 5157              		.align	1
 5158              		.global	f_write
 5159              		.syntax unified
 5160              		.thumb
 5161              		.thumb_func
 5162              		.fpu fpv5-sp-d16
 5164              	f_write:
 5165              	.LFB189:
3617:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 5166              		.loc 1 3617 0
 5167              		.cfi_startproc
 5168              		@ args = 0, pretend = 0, frame = 16
 5169              		@ frame_needed = 0, uses_anonymous_args = 0
 5170              	.LVL763:
 5171 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5172              	.LCFI58:
 5173              		.cfi_def_cfa_offset 36
 5174              		.cfi_offset 4, -36
 5175              		.cfi_offset 5, -32
 5176              		.cfi_offset 6, -28
 5177              		.cfi_offset 7, -24
 5178              		.cfi_offset 8, -20
 5179              		.cfi_offset 9, -16
 5180              		.cfi_offset 10, -12
 5181              		.cfi_offset 11, -8
 5182              		.cfi_offset 14, -4
ARM GAS  /tmp/ccwdO2Zj.s 			page 208


 5183 0004 85B0     		sub	sp, sp, #20
 5184              	.LCFI59:
 5185              		.cfi_def_cfa_offset 56
 5186 0006 0446     		mov	r4, r0
 5187 0008 8846     		mov	r8, r1
 5188 000a 1646     		mov	r6, r2
 5189 000c 9946     		mov	r9, r3
 5190              	.LVL764:
3625:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&fp->obj, &fs);			/* Check validity of the file object */
 5191              		.loc 1 3625 0
 5192 000e 0023     		movs	r3, #0
 5193              	.LVL765:
 5194 0010 C9F80030 		str	r3, [r9]
3626:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);	/* Check validity */
 5195              		.loc 1 3626 0
 5196 0014 0190     		str	r0, [sp, #4]
 5197 0016 03A9     		add	r1, sp, #12
 5198              	.LVL766:
 5199 0018 FFF7FEFF 		bl	validate
 5200              	.LVL767:
3627:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
 5201              		.loc 1 3627 0
 5202 001c 0090     		str	r0, [sp]
 5203 001e 60B9     		cbnz	r0, .L483
3627:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
 5204              		.loc 1 3627 0 is_stmt 0 discriminator 2
 5205 0020 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 5206 0022 0093     		str	r3, [sp]
 5207              	.LVL768:
 5208 0024 4BB9     		cbnz	r3, .L483
3628:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5209              		.loc 1 3628 0 is_stmt 1
 5210 0026 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 5211              	.LVL769:
 5212 0028 13F0020F 		tst	r3, #2
 5213 002c 0DD0     		beq	.L510
3631:Middlewares/Third_Party/FatFs/src/ff.c **** 		btw = (UINT)(0xFFFFFFFF - (DWORD)fp->fptr);
 5214              		.loc 1 3631 0
 5215 002e A369     		ldr	r3, [r4, #24]
 5216 0030 F342     		cmn	r3, r6
 5217 0032 C0F0CA80 		bcc	.L506
3632:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 5218              		.loc 1 3632 0
 5219 0036 DE43     		mvns	r6, r3
 5220              	.LVL770:
 5221 0038 C7E0     		b	.L506
 5222              	.LVL771:
 5223              	.L483:
3627:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
 5224              		.loc 1 3627 0 discriminator 3
 5225 003a 0099     		ldr	r1, [sp]
 5226 003c 0398     		ldr	r0, [sp, #12]
 5227 003e FFF7FEFF 		bl	unlock_fs
 5228              	.LVL772:
 5229              	.L485:
3723:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5230              		.loc 1 3723 0
ARM GAS  /tmp/ccwdO2Zj.s 			page 209


 5231 0042 0098     		ldr	r0, [sp]
 5232 0044 05B0     		add	sp, sp, #20
 5233              	.LCFI60:
 5234              		.cfi_remember_state
 5235              		.cfi_def_cfa_offset 36
 5236              		@ sp needed
 5237 0046 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 5238              	.LVL773:
 5239              	.L510:
 5240              	.LCFI61:
 5241              		.cfi_restore_state
3628:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5242              		.loc 1 3628 0 discriminator 1
 5243 004a 0721     		movs	r1, #7
 5244 004c 0398     		ldr	r0, [sp, #12]
 5245 004e FFF7FEFF 		bl	unlock_fs
 5246              	.LVL774:
 5247 0052 0723     		movs	r3, #7
 5248 0054 0093     		str	r3, [sp]
 5249              	.LVL775:
 5250 0056 F4E7     		b	.L485
 5251              	.LVL776:
 5252              	.L490:
3647:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = clmt_clust(fp, fp->fptr);	/* Get cluster# from the CLMT */
 5253              		.loc 1 3647 0
 5254 0058 E36A     		ldr	r3, [r4, #44]
 5255 005a A3B3     		cbz	r3, .L492
3648:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
 5256              		.loc 1 3648 0
 5257 005c 2046     		mov	r0, r4
 5258 005e FFF7FEFF 		bl	clmt_clust
 5259              	.LVL777:
 5260              	.L491:
3655:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 1) ABORT(fs, FR_INT_ERR);
 5261              		.loc 1 3655 0
 5262 0062 0028     		cmp	r0, #0
 5263 0064 00F0DE80 		beq	.L493
3656:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 5264              		.loc 1 3656 0
 5265 0068 0128     		cmp	r0, #1
 5266 006a 31D0     		beq	.L511
3657:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;			/* Update current cluster */
 5267              		.loc 1 3657 0
 5268 006c B0F1FF3F 		cmp	r0, #-1
 5269 0070 39D0     		beq	.L512
3658:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->obj.sclust == 0) fp->obj.sclust = clst;	/* Set start cluster if the first write */
 5270              		.loc 1 3658 0
 5271 0072 E061     		str	r0, [r4, #28]
3659:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5272              		.loc 1 3659 0
 5273 0074 A368     		ldr	r3, [r4, #8]
 5274 0076 03B9     		cbnz	r3, .L489
3659:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5275              		.loc 1 3659 0 is_stmt 0 discriminator 1
 5276 0078 A060     		str	r0, [r4, #8]
 5277              	.LVL778:
 5278              	.L489:
ARM GAS  /tmp/ccwdO2Zj.s 			page 210


3664:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
 5279              		.loc 1 3664 0 is_stmt 1
 5280 007a 94F91430 		ldrsb	r3, [r4, #20]
 5281 007e 002B     		cmp	r3, #0
 5282 0080 3CDB     		blt	.L513
 5283              	.L496:
3669:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!sect) ABORT(fs, FR_INT_ERR);
 5284              		.loc 1 3669 0
 5285 0082 DDF80CB0 		ldr	fp, [sp, #12]
 5286 0086 E169     		ldr	r1, [r4, #28]
 5287 0088 5846     		mov	r0, fp
 5288 008a FFF7FEFF 		bl	clust2sect
 5289              	.LVL779:
3670:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += csect;
 5290              		.loc 1 3670 0
 5291 008e 8246     		mov	r10, r0
 5292 0090 0028     		cmp	r0, #0
 5293 0092 4CD0     		beq	.L514
3671:Middlewares/Third_Party/FatFs/src/ff.c **** 			cc = btw / SS(fs);				/* When remaining bytes >= sector size, */
 5294              		.loc 1 3671 0
 5295 0094 BA44     		add	r10, r10, r7
 5296              	.LVL780:
3673:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (csect + cc > fs->csize) {	/* Clip at cluster boundary */
 5297              		.loc 1 3673 0
 5298 0096 750A     		lsrs	r5, r6, #9
 5299              	.LVL781:
 5300 0098 6CD0     		beq	.L499
3674:Middlewares/Third_Party/FatFs/src/ff.c **** 					cc = fs->csize - csect;
 5301              		.loc 1 3674 0
 5302 009a 7B19     		adds	r3, r7, r5
 5303 009c BBF80A20 		ldrh	r2, [fp, #10]
 5304 00a0 9342     		cmp	r3, r2
 5305 00a2 00D9     		bls	.L500
3675:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 5306              		.loc 1 3675 0
 5307 00a4 D51B     		subs	r5, r2, r7
 5308              	.LVL782:
 5309              	.L500:
3677:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 2
 5310              		.loc 1 3677 0
 5311 00a6 2B46     		mov	r3, r5
 5312 00a8 5246     		mov	r2, r10
 5313 00aa 4146     		mov	r1, r8
 5314 00ac 9BF80100 		ldrb	r0, [fp, #1]	@ zero_extendqisi2
 5315 00b0 FFF7FEFF 		bl	disk_write
 5316              	.LVL783:
 5317 00b4 0028     		cmp	r0, #0
 5318 00b6 45D1     		bne	.L515
3685:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(fp->buf, wbuff + ((fp->sect - sect) * SS(fs)), SS(fs));
 5319              		.loc 1 3685 0
 5320 00b8 216A     		ldr	r1, [r4, #32]
 5321 00ba A1EB0A01 		sub	r1, r1, r10
 5322 00be A942     		cmp	r1, r5
 5323 00c0 4BD3     		bcc	.L516
 5324              	.L502:
3691:Middlewares/Third_Party/FatFs/src/ff.c **** 				continue;
 5325              		.loc 1 3691 0
ARM GAS  /tmp/ccwdO2Zj.s 			page 211


 5326 00c2 6D02     		lsls	r5, r5, #9
 5327              	.LVL784:
3692:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5328              		.loc 1 3692 0
 5329 00c4 72E0     		b	.L503
 5330              	.LVL785:
 5331              	.L492:
3652:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 5332              		.loc 1 3652 0
 5333 00c6 E169     		ldr	r1, [r4, #28]
 5334 00c8 0198     		ldr	r0, [sp, #4]
 5335 00ca FFF7FEFF 		bl	create_chain
 5336              	.LVL786:
 5337 00ce C8E7     		b	.L491
 5338              	.L511:
3656:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 5339              		.loc 1 3656 0 discriminator 1
 5340 00d0 4FF0020A 		mov	r10, #2
 5341 00d4 84F815A0 		strb	r10, [r4, #21]
 5342 00d8 5146     		mov	r1, r10
 5343 00da 0398     		ldr	r0, [sp, #12]
 5344              	.LVL787:
 5345 00dc FFF7FEFF 		bl	unlock_fs
 5346              	.LVL788:
 5347 00e0 CDF800A0 		str	r10, [sp]
 5348              	.LVL789:
 5349 00e4 ADE7     		b	.L485
 5350              	.LVL790:
 5351              	.L512:
3657:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;			/* Update current cluster */
 5352              		.loc 1 3657 0 discriminator 1
 5353 00e6 4FF0010A 		mov	r10, #1
 5354 00ea 84F815A0 		strb	r10, [r4, #21]
 5355 00ee 5146     		mov	r1, r10
 5356 00f0 0398     		ldr	r0, [sp, #12]
 5357              	.LVL791:
 5358 00f2 FFF7FEFF 		bl	unlock_fs
 5359              	.LVL792:
 5360 00f6 CDF800A0 		str	r10, [sp]
 5361              	.LVL793:
 5362 00fa A2E7     		b	.L485
 5363              	.LVL794:
 5364              	.L513:
3665:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 5365              		.loc 1 3665 0
 5366 00fc 0123     		movs	r3, #1
 5367 00fe 226A     		ldr	r2, [r4, #32]
 5368 0100 04F13001 		add	r1, r4, #48
 5369 0104 0398     		ldr	r0, [sp, #12]
 5370 0106 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 5371 0108 FFF7FEFF 		bl	disk_write
 5372              	.LVL795:
 5373 010c 20B9     		cbnz	r0, .L517
3666:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5374              		.loc 1 3666 0
 5375 010e 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 5376 0110 03F07F03 		and	r3, r3, #127
ARM GAS  /tmp/ccwdO2Zj.s 			page 212


 5377 0114 2375     		strb	r3, [r4, #20]
 5378 0116 B4E7     		b	.L496
 5379              	.L517:
3665:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 5380              		.loc 1 3665 0 discriminator 1
 5381 0118 4FF0010A 		mov	r10, #1
 5382 011c 84F815A0 		strb	r10, [r4, #21]
 5383 0120 5146     		mov	r1, r10
 5384 0122 0398     		ldr	r0, [sp, #12]
 5385 0124 FFF7FEFF 		bl	unlock_fs
 5386              	.LVL796:
 5387 0128 CDF800A0 		str	r10, [sp]
 5388              	.LVL797:
 5389 012c 89E7     		b	.L485
 5390              	.LVL798:
 5391              	.L514:
3670:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += csect;
 5392              		.loc 1 3670 0 discriminator 1
 5393 012e 4FF0020A 		mov	r10, #2
 5394 0132 84F815A0 		strb	r10, [r4, #21]
 5395 0136 5146     		mov	r1, r10
 5396 0138 5846     		mov	r0, fp
 5397              	.LVL799:
 5398 013a FFF7FEFF 		bl	unlock_fs
 5399              	.LVL800:
 5400 013e CDF800A0 		str	r10, [sp]
 5401              	.LVL801:
 5402 0142 7EE7     		b	.L485
 5403              	.LVL802:
 5404              	.L515:
3677:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 2
 5405              		.loc 1 3677 0 discriminator 1
 5406 0144 4FF0010A 		mov	r10, #1
 5407              	.LVL803:
 5408 0148 84F815A0 		strb	r10, [r4, #21]
 5409 014c 5146     		mov	r1, r10
 5410 014e 0398     		ldr	r0, [sp, #12]
 5411 0150 FFF7FEFF 		bl	unlock_fs
 5412              	.LVL804:
 5413 0154 CDF800A0 		str	r10, [sp]
 5414              	.LVL805:
 5415 0158 73E7     		b	.L485
 5416              	.LVL806:
 5417              	.L516:
3686:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->flag &= (BYTE)~FA_DIRTY;
 5418              		.loc 1 3686 0
 5419 015a 4FF40072 		mov	r2, #512
 5420 015e 08EB4121 		add	r1, r8, r1, lsl #9
 5421 0162 04F13000 		add	r0, r4, #48
 5422 0166 FFF7FEFF 		bl	mem_cpy
 5423              	.LVL807:
3687:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 5424              		.loc 1 3687 0
 5425 016a 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 5426 016c 03F07F03 		and	r3, r3, #127
 5427 0170 2375     		strb	r3, [r4, #20]
 5428 0172 A6E7     		b	.L502
ARM GAS  /tmp/ccwdO2Zj.s 			page 213


 5429              	.L499:
3700:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr < fp->obj.objsize &&
 5430              		.loc 1 3700 0
 5431 0174 236A     		ldr	r3, [r4, #32]
 5432 0176 5345     		cmp	r3, r10
 5433 0178 03D0     		beq	.L504
3701:Middlewares/Third_Party/FatFs/src/ff.c **** 				disk_read(fs->drv, fp->buf, sect, 1) != RES_OK) {
 5434              		.loc 1 3701 0 discriminator 1
 5435 017a A269     		ldr	r2, [r4, #24]
 5436 017c E368     		ldr	r3, [r4, #12]
3700:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr < fp->obj.objsize &&
 5437              		.loc 1 3700 0 discriminator 1
 5438 017e 9A42     		cmp	r2, r3
 5439 0180 3BD3     		bcc	.L518
 5440              	.L504:
3706:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 5441              		.loc 1 3706 0
 5442 0182 C4F820A0 		str	r10, [r4, #32]
 5443              	.LVL808:
 5444              	.L488:
3708:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (wcnt > btw) wcnt = btw;					/* Clip it by btw if needed */
 5445              		.loc 1 3708 0
 5446 0186 A369     		ldr	r3, [r4, #24]
 5447 0188 C3F30803 		ubfx	r3, r3, #0, #9
 5448 018c C3F50075 		rsb	r5, r3, #512
 5449              	.LVL809:
3709:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
 5450              		.loc 1 3709 0
 5451 0190 AE42     		cmp	r6, r5
 5452 0192 00D2     		bcs	.L505
 5453 0194 3546     		mov	r5, r6
 5454              	.LVL810:
 5455              	.L505:
3715:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->flag |= FA_DIRTY;
 5456              		.loc 1 3715 0
 5457 0196 04F13000 		add	r0, r4, #48
 5458 019a 2A46     		mov	r2, r5
 5459 019c 4146     		mov	r1, r8
 5460 019e 1844     		add	r0, r0, r3
 5461 01a0 FFF7FEFF 		bl	mem_cpy
 5462              	.LVL811:
3716:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 5463              		.loc 1 3716 0
 5464 01a4 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 5465 01a6 63F07F03 		orn	r3, r3, #127
 5466 01aa 2375     		strb	r3, [r4, #20]
 5467              	.L503:
3636:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fptr % SS(fs) == 0) {		/* On the sector boundary? */
 5468              		.loc 1 3636 0
 5469 01ac A844     		add	r8, r8, r5
 5470              	.LVL812:
 5471 01ae A369     		ldr	r3, [r4, #24]
 5472 01b0 2B44     		add	r3, r3, r5
 5473 01b2 A361     		str	r3, [r4, #24]
 5474 01b4 E268     		ldr	r2, [r4, #12]
 5475 01b6 9342     		cmp	r3, r2
 5476 01b8 38BF     		it	cc
ARM GAS  /tmp/ccwdO2Zj.s 			page 214


 5477 01ba 1346     		movcc	r3, r2
 5478 01bc E360     		str	r3, [r4, #12]
 5479 01be D9F80030 		ldr	r3, [r9]
 5480 01c2 2B44     		add	r3, r3, r5
 5481 01c4 C9F80030 		str	r3, [r9]
 5482 01c8 761B     		subs	r6, r6, r5
 5483              	.LVL813:
 5484              	.L506:
3635:Middlewares/Third_Party/FatFs/src/ff.c **** 		wbuff += wcnt, fp->fptr += wcnt, fp->obj.objsize = (fp->fptr > fp->obj.objsize) ? fp->fptr : fp->
 5485              		.loc 1 3635 0
 5486 01ca 5EB3     		cbz	r6, .L493
3637:Middlewares/Third_Party/FatFs/src/ff.c **** 			csect = (UINT)(fp->fptr / SS(fs)) & (fs->csize - 1);	/* Sector offset in the cluster */
 5487              		.loc 1 3637 0
 5488 01cc A169     		ldr	r1, [r4, #24]
 5489 01ce C1F30803 		ubfx	r3, r1, #0, #9
 5490 01d2 002B     		cmp	r3, #0
 5491 01d4 D7D1     		bne	.L488
3638:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (csect == 0) {				/* On the cluster boundary? */
 5492              		.loc 1 3638 0
 5493 01d6 039B     		ldr	r3, [sp, #12]
 5494 01d8 5F89     		ldrh	r7, [r3, #10]
 5495 01da 013F     		subs	r7, r7, #1
 5496              	.LVL814:
3639:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr == 0) {		/* On the top of the file? */
 5497              		.loc 1 3639 0
 5498 01dc 17EA5127 		ands	r7, r7, r1, lsr #9
 5499              	.LVL815:
 5500 01e0 7FF44BAF 		bne	.L489
3640:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = fp->obj.sclust;	/* Follow from the origin */
 5501              		.loc 1 3640 0
 5502 01e4 0029     		cmp	r1, #0
 5503 01e6 7FF437AF 		bne	.L490
3641:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0) {		/* If no cluster is allocated, */
 5504              		.loc 1 3641 0
 5505 01ea A068     		ldr	r0, [r4, #8]
 5506              	.LVL816:
3642:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = create_chain(&fp->obj, 0);	/* create a new cluster chain */
 5507              		.loc 1 3642 0
 5508 01ec 0028     		cmp	r0, #0
 5509 01ee 7FF438AF 		bne	.L491
3643:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 5510              		.loc 1 3643 0
 5511 01f2 0198     		ldr	r0, [sp, #4]
 5512              	.LVL817:
 5513 01f4 FFF7FEFF 		bl	create_chain
 5514              	.LVL818:
 5515 01f8 33E7     		b	.L491
 5516              	.LVL819:
 5517              	.L518:
3702:Middlewares/Third_Party/FatFs/src/ff.c **** 					ABORT(fs, FR_DISK_ERR);
 5518              		.loc 1 3702 0
 5519 01fa 0123     		movs	r3, #1
 5520 01fc 5246     		mov	r2, r10
 5521 01fe 04F13001 		add	r1, r4, #48
 5522 0202 9BF80100 		ldrb	r0, [fp, #1]	@ zero_extendqisi2
 5523 0206 FFF7FEFF 		bl	disk_read
 5524              	.LVL820:
ARM GAS  /tmp/ccwdO2Zj.s 			page 215


3701:Middlewares/Third_Party/FatFs/src/ff.c **** 				disk_read(fs->drv, fp->buf, sect, 1) != RES_OK) {
 5525              		.loc 1 3701 0
 5526 020a 0028     		cmp	r0, #0
 5527 020c B9D0     		beq	.L504
3703:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5528              		.loc 1 3703 0
 5529 020e 4FF0010A 		mov	r10, #1
 5530              	.LVL821:
 5531 0212 84F815A0 		strb	r10, [r4, #21]
 5532 0216 5146     		mov	r1, r10
 5533 0218 0398     		ldr	r0, [sp, #12]
 5534 021a FFF7FEFF 		bl	unlock_fs
 5535              	.LVL822:
 5536 021e CDF800A0 		str	r10, [sp]
 5537              	.LVL823:
 5538 0222 0EE7     		b	.L485
 5539              	.LVL824:
 5540              	.L493:
3720:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5541              		.loc 1 3720 0
 5542 0224 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 5543 0226 43F04003 		orr	r3, r3, #64
 5544 022a 2375     		strb	r3, [r4, #20]
3722:Middlewares/Third_Party/FatFs/src/ff.c **** }
 5545              		.loc 1 3722 0
 5546 022c 0021     		movs	r1, #0
 5547 022e 0398     		ldr	r0, [sp, #12]
 5548 0230 FFF7FEFF 		bl	unlock_fs
 5549              	.LVL825:
 5550 0234 05E7     		b	.L485
 5551              		.cfi_endproc
 5552              	.LFE189:
 5554              		.section	.text.putc_bfd,"ax",%progbits
 5555              		.align	1
 5556              		.syntax unified
 5557              		.thumb
 5558              		.thumb_func
 5559              		.fpu fpv5-sp-d16
 5561              	putc_bfd:
 5562              	.LFB204:
5921:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT bw;
 5563              		.loc 1 5921 0
 5564              		.cfi_startproc
 5565              		@ args = 0, pretend = 0, frame = 8
 5566              		@ frame_needed = 0, uses_anonymous_args = 0
 5567              	.LVL826:
 5568 0000 70B5     		push	{r4, r5, r6, lr}
 5569              	.LCFI62:
 5570              		.cfi_def_cfa_offset 16
 5571              		.cfi_offset 4, -16
 5572              		.cfi_offset 5, -12
 5573              		.cfi_offset 6, -8
 5574              		.cfi_offset 14, -4
 5575 0002 82B0     		sub	sp, sp, #8
 5576              	.LCFI63:
 5577              		.cfi_def_cfa_offset 24
 5578 0004 0446     		mov	r4, r0
ARM GAS  /tmp/ccwdO2Zj.s 			page 216


 5579 0006 0D46     		mov	r5, r1
5926:Middlewares/Third_Party/FatFs/src/ff.c **** 		putc_bfd(pb, '\r');
 5580              		.loc 1 5926 0
 5581 0008 0A29     		cmp	r1, #10
 5582 000a 0DD0     		beq	.L526
 5583              	.LVL827:
 5584              	.L520:
5930:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (i < 0) return;
 5585              		.loc 1 5930 0
 5586 000c 6368     		ldr	r3, [r4, #4]
 5587              	.LVL828:
5931:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5588              		.loc 1 5931 0
 5589 000e 002B     		cmp	r3, #0
 5590 0010 08DB     		blt	.L519
5960:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 5591              		.loc 1 5960 0
 5592 0012 5E1C     		adds	r6, r3, #1
 5593              	.LVL829:
 5594 0014 2344     		add	r3, r3, r4
 5595 0016 1D73     		strb	r5, [r3, #12]
5963:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_write(pb->fp, pb->buf, (UINT)i, &bw);
 5596              		.loc 1 5963 0
 5597 0018 3C2E     		cmp	r6, #60
 5598 001a 09DC     		bgt	.L527
 5599              	.LVL830:
 5600              	.L522:
5967:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->nchr++;
 5601              		.loc 1 5967 0
 5602 001c 6660     		str	r6, [r4, #4]
5968:Middlewares/Third_Party/FatFs/src/ff.c **** }
 5603              		.loc 1 5968 0
 5604 001e A368     		ldr	r3, [r4, #8]
 5605 0020 0133     		adds	r3, r3, #1
 5606 0022 A360     		str	r3, [r4, #8]
 5607              	.LVL831:
 5608              	.L519:
5969:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5609              		.loc 1 5969 0
 5610 0024 02B0     		add	sp, sp, #8
 5611              	.LCFI64:
 5612              		.cfi_remember_state
 5613              		.cfi_def_cfa_offset 16
 5614              		@ sp needed
 5615 0026 70BD     		pop	{r4, r5, r6, pc}
 5616              	.LVL832:
 5617              	.L526:
 5618              	.LCFI65:
 5619              		.cfi_restore_state
5927:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 5620              		.loc 1 5927 0
 5621 0028 0D21     		movs	r1, #13
 5622              	.LVL833:
 5623 002a FFF7E9FF 		bl	putc_bfd
 5624              	.LVL834:
 5625 002e EDE7     		b	.L520
 5626              	.LVL835:
ARM GAS  /tmp/ccwdO2Zj.s 			page 217


 5627              	.L527:
5964:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = (bw == (UINT)i) ? 0 : -1;
 5628              		.loc 1 5964 0
 5629 0030 01AB     		add	r3, sp, #4
 5630 0032 3246     		mov	r2, r6
 5631 0034 04F10C01 		add	r1, r4, #12
 5632 0038 2068     		ldr	r0, [r4]
 5633 003a FFF7FEFF 		bl	f_write
 5634              	.LVL836:
5965:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 5635              		.loc 1 5965 0
 5636 003e 019B     		ldr	r3, [sp, #4]
 5637 0040 9E42     		cmp	r6, r3
 5638 0042 02D0     		beq	.L528
 5639 0044 4FF0FF36 		mov	r6, #-1
 5640              	.LVL837:
 5641 0048 E8E7     		b	.L522
 5642              	.LVL838:
 5643              	.L528:
 5644 004a 0026     		movs	r6, #0
 5645              	.LVL839:
 5646 004c E6E7     		b	.L522
 5647              		.cfi_endproc
 5648              	.LFE204:
 5650              		.section	.text.putc_flush,"ax",%progbits
 5651              		.align	1
 5652              		.syntax unified
 5653              		.thumb
 5654              		.thumb_func
 5655              		.fpu fpv5-sp-d16
 5657              	putc_flush:
 5658              	.LFB205:
5976:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nw;
 5659              		.loc 1 5976 0
 5660              		.cfi_startproc
 5661              		@ args = 0, pretend = 0, frame = 8
 5662              		@ frame_needed = 0, uses_anonymous_args = 0
 5663              	.LVL840:
5979:Middlewares/Third_Party/FatFs/src/ff.c **** 		&& f_write(pb->fp, pb->buf, (UINT)pb->idx, &nw) == FR_OK
 5664              		.loc 1 5979 0
 5665 0000 4268     		ldr	r2, [r0, #4]
 5666 0002 002A     		cmp	r2, #0
 5667 0004 10DB     		blt	.L531
5976:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nw;
 5668              		.loc 1 5976 0
 5669 0006 10B5     		push	{r4, lr}
 5670              	.LCFI66:
 5671              		.cfi_def_cfa_offset 8
 5672              		.cfi_offset 4, -8
 5673              		.cfi_offset 14, -4
 5674 0008 82B0     		sub	sp, sp, #8
 5675              	.LCFI67:
 5676              		.cfi_def_cfa_offset 16
 5677 000a 0446     		mov	r4, r0
5980:Middlewares/Third_Party/FatFs/src/ff.c **** 		&& (UINT)pb->idx == nw) return pb->nchr;
 5678              		.loc 1 5980 0
 5679 000c 01AB     		add	r3, sp, #4
ARM GAS  /tmp/ccwdO2Zj.s 			page 218


 5680 000e 00F10C01 		add	r1, r0, #12
 5681 0012 0068     		ldr	r0, [r0]
 5682              	.LVL841:
 5683 0014 FFF7FEFF 		bl	f_write
 5684              	.LVL842:
 5685 0018 48B9     		cbnz	r0, .L532
5981:Middlewares/Third_Party/FatFs/src/ff.c **** 	return EOF;
 5686              		.loc 1 5981 0
 5687 001a 6268     		ldr	r2, [r4, #4]
 5688 001c 019B     		ldr	r3, [sp, #4]
 5689 001e 9A42     		cmp	r2, r3
 5690 0020 08D1     		bne	.L533
5981:Middlewares/Third_Party/FatFs/src/ff.c **** 	return EOF;
 5691              		.loc 1 5981 0 is_stmt 0 discriminator 1
 5692 0022 A068     		ldr	r0, [r4, #8]
 5693              	.L529:
5983:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5694              		.loc 1 5983 0 is_stmt 1
 5695 0024 02B0     		add	sp, sp, #8
 5696              	.LCFI68:
 5697              		.cfi_def_cfa_offset 8
 5698              		@ sp needed
 5699 0026 10BD     		pop	{r4, pc}
 5700              	.LVL843:
 5701              	.L531:
 5702              	.LCFI69:
 5703              		.cfi_def_cfa_offset 0
 5704              		.cfi_restore 4
 5705              		.cfi_restore 14
5982:Middlewares/Third_Party/FatFs/src/ff.c **** }
 5706              		.loc 1 5982 0
 5707 0028 4FF0FF30 		mov	r0, #-1
 5708              	.LVL844:
5983:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5709              		.loc 1 5983 0
 5710 002c 7047     		bx	lr
 5711              	.LVL845:
 5712              	.L532:
 5713              	.LCFI70:
 5714              		.cfi_def_cfa_offset 16
 5715              		.cfi_offset 4, -8
 5716              		.cfi_offset 14, -4
5982:Middlewares/Third_Party/FatFs/src/ff.c **** }
 5717              		.loc 1 5982 0
 5718 002e 4FF0FF30 		mov	r0, #-1
 5719 0032 F7E7     		b	.L529
 5720              	.L533:
 5721 0034 4FF0FF30 		mov	r0, #-1
 5722 0038 F4E7     		b	.L529
 5723              		.cfi_endproc
 5724              	.LFE205:
 5726              		.section	.text.f_sync,"ax",%progbits
 5727              		.align	1
 5728              		.global	f_sync
 5729              		.syntax unified
 5730              		.thumb
 5731              		.thumb_func
ARM GAS  /tmp/ccwdO2Zj.s 			page 219


 5732              		.fpu fpv5-sp-d16
 5734              	f_sync:
 5735              	.LFB190:
3735:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 5736              		.loc 1 3735 0
 5737              		.cfi_startproc
 5738              		@ args = 0, pretend = 0, frame = 8
 5739              		@ frame_needed = 0, uses_anonymous_args = 0
 5740              	.LVL846:
 5741 0000 70B5     		push	{r4, r5, r6, lr}
 5742              	.LCFI71:
 5743              		.cfi_def_cfa_offset 16
 5744              		.cfi_offset 4, -16
 5745              		.cfi_offset 5, -12
 5746              		.cfi_offset 6, -8
 5747              		.cfi_offset 14, -4
 5748 0002 82B0     		sub	sp, sp, #8
 5749              	.LCFI72:
 5750              		.cfi_def_cfa_offset 24
 5751 0004 0546     		mov	r5, r0
3745:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 5752              		.loc 1 3745 0
 5753 0006 01A9     		add	r1, sp, #4
 5754 0008 FFF7FEFF 		bl	validate
 5755              	.LVL847:
3746:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->flag & FA_MODIFIED) {	/* Is there any change to the file? */
 5756              		.loc 1 3746 0
 5757 000c 0446     		mov	r4, r0
 5758 000e 78B9     		cbnz	r0, .L539
3747:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
 5759              		.loc 1 3747 0
 5760 0010 2B7D     		ldrb	r3, [r5, #20]	@ zero_extendqisi2
 5761 0012 13F0400F 		tst	r3, #64
 5762 0016 0BD0     		beq	.L539
3749:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) LEAVE_FF(fs, FR_DISK_ERR);
 5763              		.loc 1 3749 0
 5764 0018 13F0800F 		tst	r3, #128
 5765 001c 0FD1     		bne	.L544
 5766              	.LVL848:
 5767              	.L540:
3755:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 5768              		.loc 1 3755 0
 5769 001e FFF7FEFF 		bl	get_fattime
 5770              	.LVL849:
 5771 0022 0646     		mov	r6, r0
 5772              	.LVL850:
3785:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {
 5773              		.loc 1 3785 0
 5774 0024 696A     		ldr	r1, [r5, #36]
 5775 0026 0198     		ldr	r0, [sp, #4]
 5776              	.LVL851:
 5777 0028 FFF7FEFF 		bl	move_window
 5778              	.LVL852:
3786:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir = fp->dir_ptr;
 5779              		.loc 1 3786 0
 5780 002c 0446     		mov	r4, r0
 5781 002e D0B1     		cbz	r0, .L545
ARM GAS  /tmp/ccwdO2Zj.s 			page 220


 5782              	.LVL853:
 5783              	.L539:
3801:Middlewares/Third_Party/FatFs/src/ff.c **** }
 5784              		.loc 1 3801 0
 5785 0030 2146     		mov	r1, r4
 5786 0032 0198     		ldr	r0, [sp, #4]
 5787 0034 FFF7FEFF 		bl	unlock_fs
 5788              	.LVL854:
 5789              	.L542:
3802:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5790              		.loc 1 3802 0
 5791 0038 2046     		mov	r0, r4
 5792 003a 02B0     		add	sp, sp, #8
 5793              	.LCFI73:
 5794              		.cfi_remember_state
 5795              		.cfi_def_cfa_offset 16
 5796              		@ sp needed
 5797 003c 70BD     		pop	{r4, r5, r6, pc}
 5798              	.LVL855:
 5799              	.L544:
 5800              	.LCFI74:
 5801              		.cfi_restore_state
3750:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 5802              		.loc 1 3750 0
 5803 003e 0123     		movs	r3, #1
 5804 0040 2A6A     		ldr	r2, [r5, #32]
 5805 0042 05F13001 		add	r1, r5, #48
 5806 0046 0198     		ldr	r0, [sp, #4]
 5807              	.LVL856:
 5808 0048 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 5809 004a FFF7FEFF 		bl	disk_write
 5810              	.LVL857:
 5811 004e 20B9     		cbnz	r0, .L546
3751:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5812              		.loc 1 3751 0
 5813 0050 2B7D     		ldrb	r3, [r5, #20]	@ zero_extendqisi2
 5814 0052 03F07F03 		and	r3, r3, #127
 5815 0056 2B75     		strb	r3, [r5, #20]
 5816 0058 E1E7     		b	.L540
 5817              	.L546:
3750:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 5818              		.loc 1 3750 0 discriminator 1
 5819 005a 0121     		movs	r1, #1
 5820 005c 0198     		ldr	r0, [sp, #4]
 5821 005e FFF7FEFF 		bl	unlock_fs
 5822              	.LVL858:
 5823 0062 0124     		movs	r4, #1
 5824 0064 E8E7     		b	.L542
 5825              	.LVL859:
 5826              	.L545:
3787:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[DIR_Attr] |= AM_ARC;						/* Set archive bit */
 5827              		.loc 1 3787 0
 5828 0066 AC6A     		ldr	r4, [r5, #40]
 5829              	.LVL860:
3788:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fp->obj.fs, dir, fp->obj.sclust);		/* Update file allocation info  */
 5830              		.loc 1 3788 0
 5831 0068 E37A     		ldrb	r3, [r4, #11]	@ zero_extendqisi2
ARM GAS  /tmp/ccwdO2Zj.s 			page 221


 5832 006a 43F02003 		orr	r3, r3, #32
 5833 006e E372     		strb	r3, [r4, #11]
3789:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dir + DIR_FileSize, (DWORD)fp->obj.objsize);	/* Update file size */
 5834              		.loc 1 3789 0
 5835 0070 AA68     		ldr	r2, [r5, #8]
 5836 0072 2146     		mov	r1, r4
 5837 0074 2868     		ldr	r0, [r5]
 5838              	.LVL861:
 5839 0076 FFF7FEFF 		bl	st_clust
 5840              	.LVL862:
3790:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dir + DIR_ModTime, tm);				/* Update modified time */
 5841              		.loc 1 3790 0
 5842 007a E968     		ldr	r1, [r5, #12]
 5843 007c 04F11C00 		add	r0, r4, #28
 5844 0080 FFF7FEFF 		bl	st_dword
 5845              	.LVL863:
3791:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_word(dir + DIR_LstAccDate, 0);
 5846              		.loc 1 3791 0
 5847 0084 3146     		mov	r1, r6
 5848 0086 04F11600 		add	r0, r4, #22
 5849 008a FFF7FEFF 		bl	st_dword
 5850              	.LVL864:
3792:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 1;
 5851              		.loc 1 3792 0
 5852 008e 0021     		movs	r1, #0
 5853 0090 04F11200 		add	r0, r4, #18
 5854 0094 FFF7FEFF 		bl	st_word
 5855              	.LVL865:
3793:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = sync_fs(fs);					/* Restore it to the directory */
 5856              		.loc 1 3793 0
 5857 0098 019B     		ldr	r3, [sp, #4]
 5858 009a 0122     		movs	r2, #1
 5859 009c DA70     		strb	r2, [r3, #3]
3794:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->flag &= (BYTE)~FA_MODIFIED;
 5860              		.loc 1 3794 0
 5861 009e 0198     		ldr	r0, [sp, #4]
 5862 00a0 FFF7FEFF 		bl	sync_fs
 5863              	.LVL866:
 5864 00a4 0446     		mov	r4, r0
 5865              	.LVL867:
3795:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 5866              		.loc 1 3795 0
 5867 00a6 2B7D     		ldrb	r3, [r5, #20]	@ zero_extendqisi2
 5868 00a8 23F04003 		bic	r3, r3, #64
 5869 00ac 2B75     		strb	r3, [r5, #20]
 5870 00ae BFE7     		b	.L539
 5871              		.cfi_endproc
 5872              	.LFE190:
 5874              		.section	.text.f_close,"ax",%progbits
 5875              		.align	1
 5876              		.global	f_close
 5877              		.syntax unified
 5878              		.thumb
 5879              		.thumb_func
 5880              		.fpu fpv5-sp-d16
 5882              	f_close:
 5883              	.LFB191:
ARM GAS  /tmp/ccwdO2Zj.s 			page 222


3816:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 5884              		.loc 1 3816 0
 5885              		.cfi_startproc
 5886              		@ args = 0, pretend = 0, frame = 8
 5887              		@ frame_needed = 0, uses_anonymous_args = 0
 5888              	.LVL868:
 5889 0000 30B5     		push	{r4, r5, lr}
 5890              	.LCFI75:
 5891              		.cfi_def_cfa_offset 12
 5892              		.cfi_offset 4, -12
 5893              		.cfi_offset 5, -8
 5894              		.cfi_offset 14, -4
 5895 0002 83B0     		sub	sp, sp, #12
 5896              	.LCFI76:
 5897              		.cfi_def_cfa_offset 24
 5898 0004 0546     		mov	r5, r0
3821:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK)
 5899              		.loc 1 3821 0
 5900 0006 FFF7FEFF 		bl	f_sync
 5901              	.LVL869:
3822:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 5902              		.loc 1 3822 0
 5903 000a 0446     		mov	r4, r0
 5904 000c 10B1     		cbz	r0, .L551
 5905              	.LVL870:
 5906              	.L548:
3840:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5907              		.loc 1 3840 0
 5908 000e 2046     		mov	r0, r4
 5909 0010 03B0     		add	sp, sp, #12
 5910              	.LCFI77:
 5911              		.cfi_remember_state
 5912              		.cfi_def_cfa_offset 12
 5913              		@ sp needed
 5914 0012 30BD     		pop	{r4, r5, pc}
 5915              	.LVL871:
 5916              	.L551:
 5917              	.LCFI78:
 5918              		.cfi_restore_state
3825:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
 5919              		.loc 1 3825 0
 5920 0014 01A9     		add	r1, sp, #4
 5921 0016 2846     		mov	r0, r5
 5922              	.LVL872:
 5923 0018 FFF7FEFF 		bl	validate
 5924              	.LVL873:
3826:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 5925              		.loc 1 3826 0
 5926 001c 0446     		mov	r4, r0
 5927 001e 0028     		cmp	r0, #0
 5928 0020 F5D1     		bne	.L548
3828:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK)
 5929              		.loc 1 3828 0
 5930 0022 2869     		ldr	r0, [r5, #16]
 5931              	.LVL874:
 5932 0024 FFF7FEFF 		bl	dec_lock
 5933              	.LVL875:
ARM GAS  /tmp/ccwdO2Zj.s 			page 223


3829:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 5934              		.loc 1 3829 0
 5935 0028 0446     		mov	r4, r0
 5936 002a 08B9     		cbnz	r0, .L549
3832:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5937              		.loc 1 3832 0
 5938 002c 0023     		movs	r3, #0
 5939 002e 2B60     		str	r3, [r5]
 5940              	.L549:
3835:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 5941              		.loc 1 3835 0
 5942 0030 0021     		movs	r1, #0
 5943 0032 0198     		ldr	r0, [sp, #4]
 5944              	.LVL876:
 5945 0034 FFF7FEFF 		bl	unlock_fs
 5946              	.LVL877:
 5947 0038 E9E7     		b	.L548
 5948              		.cfi_endproc
 5949              	.LFE191:
 5951              		.section	.text.f_lseek,"ax",%progbits
 5952              		.align	1
 5953              		.global	f_lseek
 5954              		.syntax unified
 5955              		.thumb
 5956              		.thumb_func
 5957              		.fpu fpv5-sp-d16
 5959              	f_lseek:
 5960              	.LFB192:
4005:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 5961              		.loc 1 4005 0
 5962              		.cfi_startproc
 5963              		@ args = 0, pretend = 0, frame = 16
 5964              		@ frame_needed = 0, uses_anonymous_args = 0
 5965              	.LVL878:
 5966 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5967              	.LCFI79:
 5968              		.cfi_def_cfa_offset 36
 5969              		.cfi_offset 4, -36
 5970              		.cfi_offset 5, -32
 5971              		.cfi_offset 6, -28
 5972              		.cfi_offset 7, -24
 5973              		.cfi_offset 8, -20
 5974              		.cfi_offset 9, -16
 5975              		.cfi_offset 10, -12
 5976              		.cfi_offset 11, -8
 5977              		.cfi_offset 14, -4
 5978 0004 85B0     		sub	sp, sp, #20
 5979              	.LCFI80:
 5980              		.cfi_def_cfa_offset 56
 5981 0006 0446     		mov	r4, r0
 5982 0008 0E46     		mov	r6, r1
4014:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) res = (FRESULT)fp->err;
 5983              		.loc 1 4014 0
 5984 000a 0190     		str	r0, [sp, #4]
 5985 000c 03A9     		add	r1, sp, #12
 5986              	.LVL879:
 5987 000e FFF7FEFF 		bl	validate
ARM GAS  /tmp/ccwdO2Zj.s 			page 224


 5988              	.LVL880:
4015:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT && !_FS_READONLY
 5989              		.loc 1 4015 0
 5990 0012 0546     		mov	r5, r0
 5991 0014 00B9     		cbnz	r0, .L553
4015:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT && !_FS_READONLY
 5992              		.loc 1 4015 0 is_stmt 0 discriminator 1
 5993 0016 657D     		ldrb	r5, [r4, #21]	@ zero_extendqisi2
 5994              	.LVL881:
 5995              	.L553:
4021:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5996              		.loc 1 4021 0 is_stmt 1
 5997 0018 ADB9     		cbnz	r5, .L598
4024:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs == CREATE_LINKMAP) {	/* Create CLMT */
 5998              		.loc 1 4024 0
 5999 001a E36A     		ldr	r3, [r4, #44]
 6000 001c 002B     		cmp	r3, #0
 6001 001e 00F0A880 		beq	.L556
4025:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl = fp->cltbl;
 6002              		.loc 1 4025 0
 6003 0022 B6F1FF3F 		cmp	r6, #-1
 6004 0026 13D0     		beq	.L599
4051:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->fptr = ofs;				/* Set file pointer */
 6005              		.loc 1 4051 0
 6006 0028 E768     		ldr	r7, [r4, #12]
 6007 002a B742     		cmp	r7, r6
 6008 002c 00D3     		bcc	.L565
 6009 002e 3746     		mov	r7, r6
 6010              	.L565:
 6011              	.LVL882:
4052:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ofs) {
 6012              		.loc 1 4052 0
 6013 0030 A761     		str	r7, [r4, #24]
4053:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clmt_clust(fp, ofs - 1);
 6014              		.loc 1 4053 0
 6015 0032 002F     		cmp	r7, #0
 6016 0034 51D1     		bne	.L600
 6017              	.LVL883:
 6018              	.L564:
4152:Middlewares/Third_Party/FatFs/src/ff.c **** }
 6019              		.loc 1 4152 0
 6020 0036 2946     		mov	r1, r5
 6021 0038 0398     		ldr	r0, [sp, #12]
 6022 003a FFF7FEFF 		bl	unlock_fs
 6023              	.LVL884:
 6024              	.L555:
4153:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6025              		.loc 1 4153 0
 6026 003e 2846     		mov	r0, r5
 6027 0040 05B0     		add	sp, sp, #20
 6028              	.LCFI81:
 6029              		.cfi_remember_state
 6030              		.cfi_def_cfa_offset 36
 6031              		@ sp needed
 6032 0042 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 6033              	.LVL885:
 6034              	.L598:
ARM GAS  /tmp/ccwdO2Zj.s 			page 225


 6035              	.LCFI82:
 6036              		.cfi_restore_state
4021:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6037              		.loc 1 4021 0 discriminator 1
 6038 0046 2946     		mov	r1, r5
 6039 0048 0398     		ldr	r0, [sp, #12]
 6040 004a FFF7FEFF 		bl	unlock_fs
 6041              	.LVL886:
 6042 004e F6E7     		b	.L555
 6043              	.L599:
 6044              	.LVL887:
4027:Middlewares/Third_Party/FatFs/src/ff.c **** 			cl = fp->obj.sclust;		/* Origin of the chain */
 6045              		.loc 1 4027 0
 6046 0050 03F1040B 		add	fp, r3, #4
 6047              	.LVL888:
 6048 0054 D3F800A0 		ldr	r10, [r3]
 6049              	.LVL889:
4028:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cl) {
 6050              		.loc 1 4028 0
 6051 0058 D4F80890 		ldr	r9, [r4, #8]
 6052              	.LVL890:
4029:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {
 6053              		.loc 1 4029 0
 6054 005c B9F1000F 		cmp	r9, #0
 6055 0060 2FD0     		beq	.L590
4027:Middlewares/Third_Party/FatFs/src/ff.c **** 			cl = fp->obj.sclust;		/* Origin of the chain */
 6056              		.loc 1 4027 0
 6057 0062 4FF00208 		mov	r8, #2
 6058              	.LVL891:
 6059              	.L563:
4032:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {
 6060              		.loc 1 4032 0
 6061 0066 08F10208 		add	r8, r8, #2
 6062              	.LVL892:
 6063 006a 4E46     		mov	r6, r9
 6064 006c 0027     		movs	r7, #0
 6065              	.LVL893:
 6066              	.L561:
4034:Middlewares/Third_Party/FatFs/src/ff.c **** 						cl = get_fat(&fp->obj, cl);
 6067              		.loc 1 4034 0
 6068 006e 0137     		adds	r7, r7, #1
 6069              	.LVL894:
4035:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl <= 1) ABORT(fs, FR_INT_ERR);
 6070              		.loc 1 4035 0
 6071 0070 3146     		mov	r1, r6
 6072 0072 0198     		ldr	r0, [sp, #4]
 6073 0074 FFF7FEFF 		bl	get_fat
 6074              	.LVL895:
4036:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 6075              		.loc 1 4036 0
 6076 0078 0128     		cmp	r0, #1
 6077 007a 14D9     		bls	.L601
4037:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (cl == pcl + 1);
 6078              		.loc 1 4037 0
 6079 007c B0F1FF3F 		cmp	r0, #-1
 6080 0080 18D0     		beq	.L602
4038:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (ulen <= tlen) {		/* Store the length and top of the fragment */
ARM GAS  /tmp/ccwdO2Zj.s 			page 226


 6081              		.loc 1 4038 0
 6082 0082 731C     		adds	r3, r6, #1
4035:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl <= 1) ABORT(fs, FR_INT_ERR);
 6083              		.loc 1 4035 0
 6084 0084 0646     		mov	r6, r0
 6085              	.LVL896:
4038:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (ulen <= tlen) {		/* Store the length and top of the fragment */
 6086              		.loc 1 4038 0
 6087 0086 8342     		cmp	r3, r0
 6088 0088 F1D0     		beq	.L561
4039:Middlewares/Third_Party/FatFs/src/ff.c **** 						*tbl++ = ncl; *tbl++ = tcl;
 6089              		.loc 1 4039 0
 6090 008a C245     		cmp	r10, r8
 6091 008c 05D3     		bcc	.L562
 6092              	.LVL897:
4040:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 6093              		.loc 1 4040 0
 6094 008e 5B46     		mov	r3, fp
 6095              	.LVL898:
 6096 0090 43F8087B 		str	r7, [r3], #8
 6097              	.LVL899:
 6098 0094 CBF80490 		str	r9, [fp, #4]
 6099 0098 9B46     		mov	fp, r3
 6100              	.LVL900:
 6101              	.L562:
4042:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6102              		.loc 1 4042 0
 6103 009a 039B     		ldr	r3, [sp, #12]
 6104 009c 9B69     		ldr	r3, [r3, #24]
 6105 009e 8342     		cmp	r3, r0
 6106 00a0 11D9     		bls	.L558
4035:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl <= 1) ABORT(fs, FR_INT_ERR);
 6107              		.loc 1 4035 0
 6108 00a2 8146     		mov	r9, r0
 6109              	.LVL901:
 6110 00a4 DFE7     		b	.L563
 6111              	.LVL902:
 6112              	.L601:
4036:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 6113              		.loc 1 4036 0 discriminator 1
 6114 00a6 0225     		movs	r5, #2
 6115              	.LVL903:
 6116 00a8 6575     		strb	r5, [r4, #21]
 6117 00aa 2946     		mov	r1, r5
 6118 00ac 0398     		ldr	r0, [sp, #12]
 6119              	.LVL904:
 6120 00ae FFF7FEFF 		bl	unlock_fs
 6121              	.LVL905:
 6122 00b2 C4E7     		b	.L555
 6123              	.LVL906:
 6124              	.L602:
4037:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (cl == pcl + 1);
 6125              		.loc 1 4037 0 discriminator 1
 6126 00b4 0125     		movs	r5, #1
 6127              	.LVL907:
 6128 00b6 6575     		strb	r5, [r4, #21]
 6129 00b8 2946     		mov	r1, r5
ARM GAS  /tmp/ccwdO2Zj.s 			page 227


 6130 00ba 0398     		ldr	r0, [sp, #12]
 6131              	.LVL908:
 6132 00bc FFF7FEFF 		bl	unlock_fs
 6133              	.LVL909:
 6134 00c0 BDE7     		b	.L555
 6135              	.LVL910:
 6136              	.L590:
4027:Middlewares/Third_Party/FatFs/src/ff.c **** 			cl = fp->obj.sclust;		/* Origin of the chain */
 6137              		.loc 1 4027 0
 6138 00c2 4FF00208 		mov	r8, #2
 6139              	.LVL911:
 6140              	.L558:
4044:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ulen <= tlen) {
 6141              		.loc 1 4044 0
 6142 00c6 E36A     		ldr	r3, [r4, #44]
 6143 00c8 C3F80080 		str	r8, [r3]
4045:Middlewares/Third_Party/FatFs/src/ff.c **** 				*tbl = 0;		/* Terminate table */
 6144              		.loc 1 4045 0
 6145 00cc D045     		cmp	r8, r10
 6146 00ce 00F21881 		bhi	.L592
4046:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 6147              		.loc 1 4046 0
 6148 00d2 0023     		movs	r3, #0
 6149 00d4 CBF80030 		str	r3, [fp]
 6150 00d8 ADE7     		b	.L564
 6151              	.LVL912:
 6152              	.L600:
4054:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc = clust2sect(fs, fp->clust);
 6153              		.loc 1 4054 0
 6154 00da 07F1FF39 		add	r9, r7, #-1
 6155 00de 4946     		mov	r1, r9
 6156 00e0 2046     		mov	r0, r4
 6157 00e2 FFF7FEFF 		bl	clmt_clust
 6158              	.LVL913:
 6159 00e6 0146     		mov	r1, r0
 6160 00e8 E061     		str	r0, [r4, #28]
4055:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!dsc) ABORT(fs, FR_INT_ERR);
 6161              		.loc 1 4055 0
 6162 00ea DDF80C80 		ldr	r8, [sp, #12]
 6163 00ee 4046     		mov	r0, r8
 6164 00f0 FFF7FEFF 		bl	clust2sect
 6165              	.LVL914:
4056:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc += (DWORD)((ofs - 1) / SS(fs)) & (fs->csize - 1);
 6166              		.loc 1 4056 0
 6167 00f4 D8B1     		cbz	r0, .L603
4057:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr % SS(fs) && dsc != fp->sect) {	/* Refill sector cache if needed */
 6168              		.loc 1 4057 0
 6169 00f6 B8F80A60 		ldrh	r6, [r8, #10]
 6170 00fa 013E     		subs	r6, r6, #1
 6171 00fc 06EA5926 		and	r6, r6, r9, lsr #9
 6172 0100 0644     		add	r6, r6, r0
 6173              	.LVL915:
4058:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
 6174              		.loc 1 4058 0
 6175 0102 C7F30807 		ubfx	r7, r7, #0, #9
 6176              	.LVL916:
 6177 0106 002F     		cmp	r7, #0
ARM GAS  /tmp/ccwdO2Zj.s 			page 228


 6178 0108 95D0     		beq	.L564
4058:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
 6179              		.loc 1 4058 0 is_stmt 0 discriminator 1
 6180 010a 226A     		ldr	r2, [r4, #32]
 6181 010c B242     		cmp	r2, r6
 6182 010e 92D0     		beq	.L564
4061:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
 6183              		.loc 1 4061 0 is_stmt 1
 6184 0110 94F91430 		ldrsb	r3, [r4, #20]
 6185 0114 002B     		cmp	r3, #0
 6186 0116 11DB     		blt	.L604
 6187              	.L567:
4066:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 6188              		.loc 1 4066 0
 6189 0118 0123     		movs	r3, #1
 6190 011a 3246     		mov	r2, r6
 6191 011c 04F13001 		add	r1, r4, #48
 6192 0120 0398     		ldr	r0, [sp, #12]
 6193 0122 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 6194 0124 FFF7FEFF 		bl	disk_read
 6195              	.LVL917:
 6196 0128 E0B9     		cbnz	r0, .L605
4068:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 6197              		.loc 1 4068 0
 6198 012a 2662     		str	r6, [r4, #32]
 6199 012c 83E7     		b	.L564
 6200              	.LVL918:
 6201              	.L603:
4056:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc += (DWORD)((ofs - 1) / SS(fs)) & (fs->csize - 1);
 6202              		.loc 1 4056 0 discriminator 1
 6203 012e 0225     		movs	r5, #2
 6204              	.LVL919:
 6205 0130 6575     		strb	r5, [r4, #21]
 6206 0132 2946     		mov	r1, r5
 6207 0134 4046     		mov	r0, r8
 6208              	.LVL920:
 6209 0136 FFF7FEFF 		bl	unlock_fs
 6210              	.LVL921:
 6211 013a 80E7     		b	.L555
 6212              	.LVL922:
 6213              	.L604:
4062:Middlewares/Third_Party/FatFs/src/ff.c **** 						fp->flag &= (BYTE)~FA_DIRTY;
 6214              		.loc 1 4062 0
 6215 013c 0123     		movs	r3, #1
 6216 013e 04F13001 		add	r1, r4, #48
 6217 0142 98F80100 		ldrb	r0, [r8, #1]	@ zero_extendqisi2
 6218 0146 FFF7FEFF 		bl	disk_write
 6219              	.LVL923:
 6220 014a 20B9     		cbnz	r0, .L606
4063:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 6221              		.loc 1 4063 0
 6222 014c 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 6223 014e 03F07F03 		and	r3, r3, #127
 6224 0152 2375     		strb	r3, [r4, #20]
 6225 0154 E0E7     		b	.L567
 6226              	.L606:
4062:Middlewares/Third_Party/FatFs/src/ff.c **** 						fp->flag &= (BYTE)~FA_DIRTY;
ARM GAS  /tmp/ccwdO2Zj.s 			page 229


 6227              		.loc 1 4062 0 discriminator 1
 6228 0156 0125     		movs	r5, #1
 6229              	.LVL924:
 6230 0158 6575     		strb	r5, [r4, #21]
 6231 015a 2946     		mov	r1, r5
 6232 015c 0398     		ldr	r0, [sp, #12]
 6233 015e FFF7FEFF 		bl	unlock_fs
 6234              	.LVL925:
 6235 0162 6CE7     		b	.L555
 6236              	.LVL926:
 6237              	.L605:
4066:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 6238              		.loc 1 4066 0 discriminator 1
 6239 0164 0125     		movs	r5, #1
 6240              	.LVL927:
 6241 0166 6575     		strb	r5, [r4, #21]
 6242 0168 2946     		mov	r1, r5
 6243 016a 0398     		ldr	r0, [sp, #12]
 6244 016c FFF7FEFF 		bl	unlock_fs
 6245              	.LVL928:
 6246 0170 65E7     		b	.L555
 6247              	.LVL929:
 6248              	.L556:
4080:Middlewares/Third_Party/FatFs/src/ff.c **** 			ofs = fp->obj.objsize;
 6249              		.loc 1 4080 0
 6250 0172 E368     		ldr	r3, [r4, #12]
 6251 0174 B342     		cmp	r3, r6
 6252 0176 04D2     		bcs	.L570
4080:Middlewares/Third_Party/FatFs/src/ff.c **** 			ofs = fp->obj.objsize;
 6253              		.loc 1 4080 0 is_stmt 0 discriminator 1
 6254 0178 227D     		ldrb	r2, [r4, #20]	@ zero_extendqisi2
 6255 017a 12F0020F 		tst	r2, #2
 6256 017e 00D1     		bne	.L570
4081:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 6257              		.loc 1 4081 0 is_stmt 1
 6258 0180 1E46     		mov	r6, r3
 6259              	.LVL930:
 6260              	.L570:
4083:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->fptr = nsect = 0;
 6261              		.loc 1 4083 0
 6262 0182 A369     		ldr	r3, [r4, #24]
 6263              	.LVL931:
4084:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs) {
 6264              		.loc 1 4084 0
 6265 0184 0022     		movs	r2, #0
 6266 0186 A261     		str	r2, [r4, #24]
4085:Middlewares/Third_Party/FatFs/src/ff.c **** 			bcs = (DWORD)fs->csize * SS(fs);	/* Cluster size (byte) */
 6267              		.loc 1 4085 0
 6268 0188 002E     		cmp	r6, #0
 6269 018a 7BD0     		beq	.L594
4086:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ifptr > 0 &&
 6270              		.loc 1 4086 0
 6271 018c 039A     		ldr	r2, [sp, #12]
 6272 018e B2F80A80 		ldrh	r8, [r2, #10]
 6273 0192 4FEA4828 		lsl	r8, r8, #9
 6274              	.LVL932:
4087:Middlewares/Third_Party/FatFs/src/ff.c **** 				(ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
ARM GAS  /tmp/ccwdO2Zj.s 			page 230


 6275              		.loc 1 4087 0
 6276 0196 73B1     		cbz	r3, .L572
4088:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr = (ifptr - 1) & ~(FSIZE_t)(bcs - 1);	/* start from the current cluster */
 6277              		.loc 1 4088 0 discriminator 1
 6278 0198 721E     		subs	r2, r6, #1
 6279 019a B2FBF8F2 		udiv	r2, r2, r8
 6280 019e 013B     		subs	r3, r3, #1
 6281              	.LVL933:
 6282 01a0 B3FBF8F1 		udiv	r1, r3, r8
4087:Middlewares/Third_Party/FatFs/src/ff.c **** 				(ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
 6283              		.loc 1 4087 0 discriminator 1
 6284 01a4 8A42     		cmp	r2, r1
 6285 01a6 06D3     		bcc	.L572
4089:Middlewares/Third_Party/FatFs/src/ff.c **** 				ofs -= fp->fptr;
 6286              		.loc 1 4089 0
 6287 01a8 C8F10002 		rsb	r2, r8, #0
 6288 01ac 1340     		ands	r3, r3, r2
 6289              	.LVL934:
 6290 01ae A361     		str	r3, [r4, #24]
4090:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = fp->clust;
 6291              		.loc 1 4090 0
 6292 01b0 F61A     		subs	r6, r6, r3
 6293              	.LVL935:
4091:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {									/* When seek to back cluster, */
 6294              		.loc 1 4091 0
 6295 01b2 E769     		ldr	r7, [r4, #28]
 6296              	.LVL936:
 6297 01b4 02E0     		b	.L573
 6298              	.LVL937:
 6299              	.L572:
4093:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 6300              		.loc 1 4093 0
 6301 01b6 A768     		ldr	r7, [r4, #8]
 6302              	.LVL938:
4095:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = create_chain(&fp->obj, 0);
 6303              		.loc 1 4095 0
 6304 01b8 17B1     		cbz	r7, .L607
 6305              	.L574:
4102:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6306              		.loc 1 4102 0
 6307 01ba E761     		str	r7, [r4, #28]
 6308              	.L573:
4104:Middlewares/Third_Party/FatFs/src/ff.c **** 				while (ofs > bcs) {						/* Cluster following loop */
 6309              		.loc 1 4104 0
 6310 01bc 4FBB     		cbnz	r7, .L577
 6311 01be 62E0     		b	.L571
 6312              	.L607:
4096:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 1) ABORT(fs, FR_INT_ERR);
 6313              		.loc 1 4096 0
 6314 01c0 0021     		movs	r1, #0
 6315 01c2 2046     		mov	r0, r4
 6316 01c4 FFF7FEFF 		bl	create_chain
 6317              	.LVL939:
 6318 01c8 0746     		mov	r7, r0
 6319              	.LVL940:
4097:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 6320              		.loc 1 4097 0
ARM GAS  /tmp/ccwdO2Zj.s 			page 231


 6321 01ca 0128     		cmp	r0, #1
 6322 01cc 04D0     		beq	.L608
4098:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->obj.sclust = clst;
 6323              		.loc 1 4098 0
 6324 01ce B0F1FF3F 		cmp	r0, #-1
 6325 01d2 08D0     		beq	.L609
4099:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 6326              		.loc 1 4099 0
 6327 01d4 A060     		str	r0, [r4, #8]
 6328 01d6 F0E7     		b	.L574
 6329              	.L608:
4097:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 6330              		.loc 1 4097 0 discriminator 1
 6331 01d8 0225     		movs	r5, #2
 6332              	.LVL941:
 6333 01da 6575     		strb	r5, [r4, #21]
 6334 01dc 2946     		mov	r1, r5
 6335 01de 0398     		ldr	r0, [sp, #12]
 6336              	.LVL942:
 6337 01e0 FFF7FEFF 		bl	unlock_fs
 6338              	.LVL943:
 6339 01e4 2BE7     		b	.L555
 6340              	.LVL944:
 6341              	.L609:
4098:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->obj.sclust = clst;
 6342              		.loc 1 4098 0 discriminator 1
 6343 01e6 0125     		movs	r5, #1
 6344              	.LVL945:
 6345 01e8 6575     		strb	r5, [r4, #21]
 6346 01ea 2946     		mov	r1, r5
 6347 01ec 0398     		ldr	r0, [sp, #12]
 6348              	.LVL946:
 6349 01ee FFF7FEFF 		bl	unlock_fs
 6350              	.LVL947:
 6351 01f2 24E7     		b	.L555
 6352              	.LVL948:
 6353              	.L578:
4120:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 6354              		.loc 1 4120 0
 6355 01f4 3946     		mov	r1, r7
 6356 01f6 0198     		ldr	r0, [sp, #4]
 6357 01f8 FFF7FEFF 		bl	get_fat
 6358              	.LVL949:
 6359 01fc 0746     		mov	r7, r0
 6360              	.LVL950:
 6361              	.L580:
4122:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst <= 1 || clst >= fs->n_fatent) ABORT(fs, FR_INT_ERR);
 6362              		.loc 1 4122 0
 6363 01fe B7F1FF3F 		cmp	r7, #-1
 6364 0202 2AD0     		beq	.L610
4123:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->clust = clst;
 6365              		.loc 1 4123 0
 6366 0204 012F     		cmp	r7, #1
 6367 0206 2FD9     		bls	.L582
4123:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->clust = clst;
 6368              		.loc 1 4123 0 is_stmt 0 discriminator 2
 6369 0208 039B     		ldr	r3, [sp, #12]
ARM GAS  /tmp/ccwdO2Zj.s 			page 232


 6370 020a 9B69     		ldr	r3, [r3, #24]
 6371 020c BB42     		cmp	r3, r7
 6372 020e 2BD9     		bls	.L582
4124:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 6373              		.loc 1 4124 0 is_stmt 1
 6374 0210 E761     		str	r7, [r4, #28]
 6375              	.LVL951:
 6376              	.L577:
4105:Middlewares/Third_Party/FatFs/src/ff.c **** 					ofs -= bcs; fp->fptr += bcs;
 6377              		.loc 1 4105 0
 6378 0212 4645     		cmp	r6, r8
 6379 0214 10D9     		bls	.L579
4106:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 6380              		.loc 1 4106 0
 6381 0216 A6EB0806 		sub	r6, r6, r8
 6382              	.LVL952:
 6383 021a A369     		ldr	r3, [r4, #24]
 6384 021c 4344     		add	r3, r3, r8
 6385 021e A361     		str	r3, [r4, #24]
4108:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (_FS_EXFAT && fp->fptr > fp->obj.objsize) {	/* No FAT chain object needs correct objsize t
 6386              		.loc 1 4108 0
 6387 0220 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 6388 0222 13F0020F 		tst	r3, #2
 6389 0226 E5D0     		beq	.L578
4113:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (clst == 0) {				/* Clip file size in case of disk full */
 6390              		.loc 1 4113 0
 6391 0228 3946     		mov	r1, r7
 6392 022a 0198     		ldr	r0, [sp, #4]
 6393 022c FFF7FEFF 		bl	create_chain
 6394              	.LVL953:
4114:Middlewares/Third_Party/FatFs/src/ff.c **** 							ofs = 0; break;
 6395              		.loc 1 4114 0
 6396 0230 0746     		mov	r7, r0
 6397 0232 0028     		cmp	r0, #0
 6398 0234 E3D1     		bne	.L580
4115:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
 6399              		.loc 1 4115 0
 6400 0236 0026     		movs	r6, #0
 6401              	.LVL954:
 6402              	.L579:
4126:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ofs % SS(fs)) {
 6403              		.loc 1 4126 0
 6404 0238 A369     		ldr	r3, [r4, #24]
 6405 023a 3344     		add	r3, r3, r6
 6406 023c A361     		str	r3, [r4, #24]
4127:Middlewares/Third_Party/FatFs/src/ff.c **** 					nsect = clust2sect(fs, clst);	/* Current sector */
 6407              		.loc 1 4127 0
 6408 023e C6F30803 		ubfx	r3, r6, #0, #9
 6409 0242 002B     		cmp	r3, #0
 6410 0244 40D0     		beq	.L596
4128:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!nsect) ABORT(fs, FR_INT_ERR);
 6411              		.loc 1 4128 0
 6412 0246 DDF80C80 		ldr	r8, [sp, #12]
 6413              	.LVL955:
 6414 024a 3946     		mov	r1, r7
 6415 024c 4046     		mov	r0, r8
 6416 024e FFF7FEFF 		bl	clust2sect
ARM GAS  /tmp/ccwdO2Zj.s 			page 233


 6417              	.LVL956:
4129:Middlewares/Third_Party/FatFs/src/ff.c **** 					nsect += (DWORD)(ofs / SS(fs));
 6418              		.loc 1 4129 0
 6419 0252 80B1     		cbz	r0, .L611
4130:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 6420              		.loc 1 4130 0
 6421 0254 00EB5627 		add	r7, r0, r6, lsr #9
 6422              	.LVL957:
 6423 0258 15E0     		b	.L571
 6424              	.LVL958:
 6425              	.L610:
4122:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst <= 1 || clst >= fs->n_fatent) ABORT(fs, FR_INT_ERR);
 6426              		.loc 1 4122 0 discriminator 1
 6427 025a 0125     		movs	r5, #1
 6428              	.LVL959:
 6429 025c 6575     		strb	r5, [r4, #21]
 6430 025e 2946     		mov	r1, r5
 6431 0260 0398     		ldr	r0, [sp, #12]
 6432              	.LVL960:
 6433 0262 FFF7FEFF 		bl	unlock_fs
 6434              	.LVL961:
 6435 0266 EAE6     		b	.L555
 6436              	.LVL962:
 6437              	.L582:
4123:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->clust = clst;
 6438              		.loc 1 4123 0 discriminator 3
 6439 0268 0225     		movs	r5, #2
 6440              	.LVL963:
 6441 026a 6575     		strb	r5, [r4, #21]
 6442 026c 2946     		mov	r1, r5
 6443 026e 0398     		ldr	r0, [sp, #12]
 6444              	.LVL964:
 6445 0270 FFF7FEFF 		bl	unlock_fs
 6446              	.LVL965:
 6447 0274 E3E6     		b	.L555
 6448              	.LVL966:
 6449              	.L611:
4129:Middlewares/Third_Party/FatFs/src/ff.c **** 					nsect += (DWORD)(ofs / SS(fs));
 6450              		.loc 1 4129 0 discriminator 1
 6451 0276 0225     		movs	r5, #2
 6452              	.LVL967:
 6453 0278 6575     		strb	r5, [r4, #21]
 6454 027a 2946     		mov	r1, r5
 6455 027c 4046     		mov	r0, r8
 6456              	.LVL968:
 6457 027e FFF7FEFF 		bl	unlock_fs
 6458              	.LVL969:
 6459 0282 DCE6     		b	.L555
 6460              	.LVL970:
 6461              	.L594:
4084:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs) {
 6462              		.loc 1 4084 0
 6463 0284 0027     		movs	r7, #0
 6464              	.LVL971:
 6465              	.L571:
4134:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.objsize = fp->fptr;
 6466              		.loc 1 4134 0
ARM GAS  /tmp/ccwdO2Zj.s 			page 234


 6467 0286 A369     		ldr	r3, [r4, #24]
 6468 0288 E268     		ldr	r2, [r4, #12]
 6469 028a 9342     		cmp	r3, r2
 6470 028c 04D9     		bls	.L586
4135:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->flag |= FA_MODIFIED;
 6471              		.loc 1 4135 0
 6472 028e E360     		str	r3, [r4, #12]
4136:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 6473              		.loc 1 4136 0
 6474 0290 227D     		ldrb	r2, [r4, #20]	@ zero_extendqisi2
 6475 0292 42F04002 		orr	r2, r2, #64
 6476 0296 2275     		strb	r2, [r4, #20]
 6477              	.L586:
4138:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
 6478              		.loc 1 4138 0
 6479 0298 C3F30803 		ubfx	r3, r3, #0, #9
 6480 029c 002B     		cmp	r3, #0
 6481 029e 3FF4CAAE 		beq	.L564
4138:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
 6482              		.loc 1 4138 0 is_stmt 0 discriminator 1
 6483 02a2 226A     		ldr	r2, [r4, #32]
 6484 02a4 BA42     		cmp	r2, r7
 6485 02a6 3FF4C6AE 		beq	.L564
4141:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
 6486              		.loc 1 4141 0 is_stmt 1
 6487 02aa 94F91430 		ldrsb	r3, [r4, #20]
 6488 02ae 002B     		cmp	r3, #0
 6489 02b0 0CDB     		blt	.L612
 6490              	.L587:
4146:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 6491              		.loc 1 4146 0
 6492 02b2 0123     		movs	r3, #1
 6493 02b4 3A46     		mov	r2, r7
 6494 02b6 04F13001 		add	r1, r4, #48
 6495 02ba 0398     		ldr	r0, [sp, #12]
 6496 02bc 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 6497 02be FFF7FEFF 		bl	disk_read
 6498              	.LVL972:
 6499 02c2 B8B9     		cbnz	r0, .L613
4148:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 6500              		.loc 1 4148 0
 6501 02c4 2762     		str	r7, [r4, #32]
 6502 02c6 B6E6     		b	.L564
 6503              	.LVL973:
 6504              	.L596:
4084:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs) {
 6505              		.loc 1 4084 0
 6506 02c8 0027     		movs	r7, #0
 6507              	.LVL974:
 6508 02ca DCE7     		b	.L571
 6509              	.LVL975:
 6510              	.L612:
4142:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 6511              		.loc 1 4142 0
 6512 02cc 0123     		movs	r3, #1
 6513 02ce 04F13001 		add	r1, r4, #48
 6514 02d2 0398     		ldr	r0, [sp, #12]
ARM GAS  /tmp/ccwdO2Zj.s 			page 235


 6515 02d4 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 6516 02d6 FFF7FEFF 		bl	disk_write
 6517              	.LVL976:
 6518 02da 20B9     		cbnz	r0, .L614
4143:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6519              		.loc 1 4143 0
 6520 02dc 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 6521 02de 03F07F03 		and	r3, r3, #127
 6522 02e2 2375     		strb	r3, [r4, #20]
 6523 02e4 E5E7     		b	.L587
 6524              	.L614:
4142:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 6525              		.loc 1 4142 0 discriminator 1
 6526 02e6 0125     		movs	r5, #1
 6527              	.LVL977:
 6528 02e8 6575     		strb	r5, [r4, #21]
 6529 02ea 2946     		mov	r1, r5
 6530 02ec 0398     		ldr	r0, [sp, #12]
 6531 02ee FFF7FEFF 		bl	unlock_fs
 6532              	.LVL978:
 6533 02f2 A4E6     		b	.L555
 6534              	.LVL979:
 6535              	.L613:
4146:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 6536              		.loc 1 4146 0 discriminator 1
 6537 02f4 0125     		movs	r5, #1
 6538              	.LVL980:
 6539 02f6 6575     		strb	r5, [r4, #21]
 6540 02f8 2946     		mov	r1, r5
 6541 02fa 0398     		ldr	r0, [sp, #12]
 6542 02fc FFF7FEFF 		bl	unlock_fs
 6543              	.LVL981:
 6544 0300 9DE6     		b	.L555
 6545              	.LVL982:
 6546              	.L592:
4048:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6547              		.loc 1 4048 0
 6548 0302 1125     		movs	r5, #17
 6549              	.LVL983:
 6550 0304 97E6     		b	.L564
 6551              		.cfi_endproc
 6552              	.LFE192:
 6554              		.section	.text.f_opendir,"ax",%progbits
 6555              		.align	1
 6556              		.global	f_opendir
 6557              		.syntax unified
 6558              		.thumb
 6559              		.thumb_func
 6560              		.fpu fpv5-sp-d16
 6562              	f_opendir:
 6563              	.LFB193:
4166:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 6564              		.loc 1 4166 0
 6565              		.cfi_startproc
 6566              		@ args = 0, pretend = 0, frame = 16
 6567              		@ frame_needed = 0, uses_anonymous_args = 0
 6568              	.LVL984:
ARM GAS  /tmp/ccwdO2Zj.s 			page 236


 6569 0000 30B5     		push	{r4, r5, lr}
 6570              	.LCFI83:
 6571              		.cfi_def_cfa_offset 12
 6572              		.cfi_offset 4, -12
 6573              		.cfi_offset 5, -8
 6574              		.cfi_offset 14, -4
 6575 0002 85B0     		sub	sp, sp, #20
 6576              	.LCFI84:
 6577              		.cfi_def_cfa_offset 32
 6578 0004 0191     		str	r1, [sp, #4]
4173:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6579              		.loc 1 4173 0
 6580 0006 0028     		cmp	r0, #0
 6581 0008 41D0     		beq	.L623
 6582 000a 0546     		mov	r5, r0
 6583              	.LVL985:
4177:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 6584              		.loc 1 4177 0
 6585 000c 0022     		movs	r2, #0
 6586 000e 03A9     		add	r1, sp, #12
 6587              	.LVL986:
 6588 0010 01A8     		add	r0, sp, #4
 6589              	.LVL987:
 6590 0012 FFF7FEFF 		bl	find_volume
 6591              	.LVL988:
4178:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->fs = fs;
 6592              		.loc 1 4178 0
 6593 0016 0446     		mov	r4, r0
 6594 0018 48B1     		cbz	r0, .L628
 6595              	.L617:
4220:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6596              		.loc 1 4220 0
 6597 001a 0CB1     		cbz	r4, .L622
 6598              	.L621:
4220:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6599              		.loc 1 4220 0 is_stmt 0 discriminator 1
 6600 001c 0023     		movs	r3, #0
 6601 001e 2B60     		str	r3, [r5]
 6602              	.L622:
4222:Middlewares/Third_Party/FatFs/src/ff.c **** }
 6603              		.loc 1 4222 0 is_stmt 1
 6604 0020 2146     		mov	r1, r4
 6605 0022 0398     		ldr	r0, [sp, #12]
 6606 0024 FFF7FEFF 		bl	unlock_fs
 6607              	.LVL989:
 6608              	.L616:
4223:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6609              		.loc 1 4223 0
 6610 0028 2046     		mov	r0, r4
 6611 002a 05B0     		add	sp, sp, #20
 6612              	.LCFI85:
 6613              		.cfi_remember_state
 6614              		.cfi_def_cfa_offset 12
 6615              		@ sp needed
 6616 002c 30BD     		pop	{r4, r5, pc}
 6617              	.LVL990:
 6618              	.L628:
ARM GAS  /tmp/ccwdO2Zj.s 			page 237


 6619              	.LCFI86:
 6620              		.cfi_restore_state
4179:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
 6621              		.loc 1 4179 0
 6622 002e 039B     		ldr	r3, [sp, #12]
 6623 0030 2B60     		str	r3, [r5]
4181:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {						/* Follow completed */
 6624              		.loc 1 4181 0
 6625 0032 0199     		ldr	r1, [sp, #4]
 6626 0034 2846     		mov	r0, r5
 6627 0036 FFF7FEFF 		bl	follow_path
 6628              	.LVL991:
4182:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!(dp->fn[NSFLAG] & NS_NONAME)) {	/* It is not the origin directory itself */
 6629              		.loc 1 4182 0
 6630 003a 0446     		mov	r4, r0
 6631 003c 18BB     		cbnz	r0, .L618
4183:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (obj->attr & AM_DIR) {		/* This object is a sub-directory */
 6632              		.loc 1 4183 0
 6633 003e 95F92F30 		ldrsb	r3, [r5, #47]
 6634 0042 002B     		cmp	r3, #0
 6635 0044 08DB     		blt	.L619
4184:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 6636              		.loc 1 4184 0
 6637 0046 AB79     		ldrb	r3, [r5, #6]	@ zero_extendqisi2
 6638 0048 13F0100F 		tst	r3, #16
 6639 004c 1AD0     		beq	.L624
4196:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 6640              		.loc 1 4196 0
 6641 004e 296A     		ldr	r1, [r5, #32]
 6642 0050 0398     		ldr	r0, [sp, #12]
 6643 0052 FFF7FEFF 		bl	ld_clust
 6644              	.LVL992:
 6645 0056 A860     		str	r0, [r5, #8]
 6646              	.L619:
4203:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_sdi(dp, 0);			/* Rewind directory */
 6647              		.loc 1 4203 0
 6648 0058 039B     		ldr	r3, [sp, #12]
 6649 005a DB88     		ldrh	r3, [r3, #6]
 6650 005c AB80     		strh	r3, [r5, #4]	@ movhi
4204:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 6651              		.loc 1 4204 0
 6652 005e 0021     		movs	r1, #0
 6653 0060 2846     		mov	r0, r5
 6654 0062 FFF7FEFF 		bl	dir_sdi
 6655              	.LVL993:
4206:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (obj->sclust) {
 6656              		.loc 1 4206 0
 6657 0066 0446     		mov	r4, r0
 6658 0068 68B9     		cbnz	r0, .L618
4207:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->lockid = inc_lock(dp, 0);	/* Lock the sub directory */
 6659              		.loc 1 4207 0
 6660 006a AB68     		ldr	r3, [r5, #8]
 6661 006c 13B9     		cbnz	r3, .L629
4211:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 6662              		.loc 1 4211 0
 6663 006e 0023     		movs	r3, #0
 6664 0070 2B61     		str	r3, [r5, #16]
ARM GAS  /tmp/ccwdO2Zj.s 			page 238


 6665 0072 08E0     		b	.L618
 6666              	.L629:
4208:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (!obj->lockid) res = FR_TOO_MANY_OPEN_FILES;
 6667              		.loc 1 4208 0
 6668 0074 0021     		movs	r1, #0
 6669 0076 2846     		mov	r0, r5
 6670 0078 FFF7FEFF 		bl	inc_lock
 6671              	.LVL994:
 6672 007c 2861     		str	r0, [r5, #16]
4209:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else {
 6673              		.loc 1 4209 0
 6674 007e 10B9     		cbnz	r0, .L618
 6675              	.LVL995:
 6676 0080 1224     		movs	r4, #18
 6677 0082 CAE7     		b	.L617
 6678              	.LVL996:
 6679              	.L624:
4199:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 6680              		.loc 1 4199 0
 6681 0084 0524     		movs	r4, #5
 6682              	.LVL997:
 6683              	.L618:
4218:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 6684              		.loc 1 4218 0
 6685 0086 042C     		cmp	r4, #4
 6686 0088 C7D1     		bne	.L617
 6687              	.LVL998:
 6688 008a 0524     		movs	r4, #5
 6689 008c C6E7     		b	.L621
 6690              	.LVL999:
 6691              	.L623:
4173:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6692              		.loc 1 4173 0
 6693 008e 0924     		movs	r4, #9
 6694 0090 CAE7     		b	.L616
 6695              		.cfi_endproc
 6696              	.LFE193:
 6698              		.section	.text.f_closedir,"ax",%progbits
 6699              		.align	1
 6700              		.global	f_closedir
 6701              		.syntax unified
 6702              		.thumb
 6703              		.thumb_func
 6704              		.fpu fpv5-sp-d16
 6706              	f_closedir:
 6707              	.LFB194:
4235:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 6708              		.loc 1 4235 0
 6709              		.cfi_startproc
 6710              		@ args = 0, pretend = 0, frame = 8
 6711              		@ frame_needed = 0, uses_anonymous_args = 0
 6712              	.LVL1000:
 6713 0000 30B5     		push	{r4, r5, lr}
 6714              	.LCFI87:
 6715              		.cfi_def_cfa_offset 12
 6716              		.cfi_offset 4, -12
 6717              		.cfi_offset 5, -8
ARM GAS  /tmp/ccwdO2Zj.s 			page 239


 6718              		.cfi_offset 14, -4
 6719 0002 83B0     		sub	sp, sp, #12
 6720              	.LCFI88:
 6721              		.cfi_def_cfa_offset 24
 6722 0004 0546     		mov	r5, r0
4240:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 6723              		.loc 1 4240 0
 6724 0006 01A9     		add	r1, sp, #4
 6725 0008 FFF7FEFF 		bl	validate
 6726              	.LVL1001:
4241:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 6727              		.loc 1 4241 0
 6728 000c 0446     		mov	r4, r0
 6729 000e 40B9     		cbnz	r0, .L631
4243:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dec_lock(dp->obj.lockid);
 6730              		.loc 1 4243 0
 6731 0010 2869     		ldr	r0, [r5, #16]
 6732              	.LVL1002:
 6733 0012 48B9     		cbnz	r0, .L635
 6734              	.L632:
 6735              	.LVL1003:
4246:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 6736              		.loc 1 4246 0
 6737 0014 0CB9     		cbnz	r4, .L633
4249:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 6738              		.loc 1 4249 0
 6739 0016 0023     		movs	r3, #0
 6740 0018 2B60     		str	r3, [r5]
 6741              	.L633:
4252:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 6742              		.loc 1 4252 0
 6743 001a 0021     		movs	r1, #0
 6744 001c 0198     		ldr	r0, [sp, #4]
 6745 001e FFF7FEFF 		bl	unlock_fs
 6746              	.LVL1004:
 6747              	.L631:
4256:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6748              		.loc 1 4256 0
 6749 0022 2046     		mov	r0, r4
 6750 0024 03B0     		add	sp, sp, #12
 6751              	.LCFI89:
 6752              		.cfi_remember_state
 6753              		.cfi_def_cfa_offset 12
 6754              		@ sp needed
 6755 0026 30BD     		pop	{r4, r5, pc}
 6756              	.LVL1005:
 6757              	.L635:
 6758              	.LCFI90:
 6759              		.cfi_restore_state
4244:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 6760              		.loc 1 4244 0
 6761 0028 FFF7FEFF 		bl	dec_lock
 6762              	.LVL1006:
 6763 002c 0446     		mov	r4, r0
 6764              	.LVL1007:
 6765 002e F1E7     		b	.L632
 6766              		.cfi_endproc
ARM GAS  /tmp/ccwdO2Zj.s 			page 240


 6767              	.LFE194:
 6769              		.section	.text.f_readdir,"ax",%progbits
 6770              		.align	1
 6771              		.global	f_readdir
 6772              		.syntax unified
 6773              		.thumb
 6774              		.thumb_func
 6775              		.fpu fpv5-sp-d16
 6777              	f_readdir:
 6778              	.LFB195:
4269:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 6779              		.loc 1 4269 0
 6780              		.cfi_startproc
 6781              		@ args = 0, pretend = 0, frame = 8
 6782              		@ frame_needed = 0, uses_anonymous_args = 0
 6783              	.LVL1008:
 6784 0000 70B5     		push	{r4, r5, r6, lr}
 6785              	.LCFI91:
 6786              		.cfi_def_cfa_offset 16
 6787              		.cfi_offset 4, -16
 6788              		.cfi_offset 5, -12
 6789              		.cfi_offset 6, -8
 6790              		.cfi_offset 14, -4
 6791 0002 82B0     		sub	sp, sp, #8
 6792              	.LCFI92:
 6793              		.cfi_def_cfa_offset 24
 6794 0004 0546     		mov	r5, r0
 6795 0006 0E46     		mov	r6, r1
4275:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 6796              		.loc 1 4275 0
 6797 0008 01A9     		add	r1, sp, #4
 6798              	.LVL1009:
 6799 000a FFF7FEFF 		bl	validate
 6800              	.LVL1010:
4276:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!fno) {
 6801              		.loc 1 4276 0
 6802 000e 0446     		mov	r4, r0
 6803 0010 90B9     		cbnz	r0, .L637
4277:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_sdi(dp, 0);			/* Rewind the directory object */
 6804              		.loc 1 4277 0
 6805 0012 C6B1     		cbz	r6, .L642
4281:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_NO_FILE) res = FR_OK;	/* Ignore end of directory */
 6806              		.loc 1 4281 0
 6807 0014 0021     		movs	r1, #0
 6808 0016 2846     		mov	r0, r5
 6809              	.LVL1011:
 6810 0018 FFF7FEFF 		bl	dir_read
 6811              	.LVL1012:
4282:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {				/* A valid entry is found */
 6812              		.loc 1 4282 0
 6813 001c 0428     		cmp	r0, #4
 6814 001e 00D0     		beq	.L639
4283:Middlewares/Third_Party/FatFs/src/ff.c **** 				get_fileinfo(dp, fno);		/* Get the object information */
 6815              		.loc 1 4283 0
 6816 0020 B8B9     		cbnz	r0, .L640
 6817              	.L639:
4284:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_next(dp, 0);		/* Increment index for next */
ARM GAS  /tmp/ccwdO2Zj.s 			page 241


 6818              		.loc 1 4284 0
 6819 0022 3146     		mov	r1, r6
 6820 0024 2846     		mov	r0, r5
 6821              	.LVL1013:
 6822 0026 FFF7FEFF 		bl	get_fileinfo
 6823              	.LVL1014:
4285:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) res = FR_OK;	/* Ignore end of directory now */
 6824              		.loc 1 4285 0
 6825 002a 0021     		movs	r1, #0
 6826 002c 2846     		mov	r0, r5
 6827 002e FFF7FEFF 		bl	dir_next
 6828              	.LVL1015:
4286:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6829              		.loc 1 4286 0
 6830 0032 0428     		cmp	r0, #4
 6831 0034 00D0     		beq	.L637
4285:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) res = FR_OK;	/* Ignore end of directory now */
 6832              		.loc 1 4285 0
 6833 0036 0446     		mov	r4, r0
 6834              	.LVL1016:
 6835              	.L637:
4291:Middlewares/Third_Party/FatFs/src/ff.c **** }
 6836              		.loc 1 4291 0
 6837 0038 2146     		mov	r1, r4
 6838 003a 0198     		ldr	r0, [sp, #4]
 6839 003c FFF7FEFF 		bl	unlock_fs
 6840              	.LVL1017:
4292:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6841              		.loc 1 4292 0
 6842 0040 2046     		mov	r0, r4
 6843 0042 02B0     		add	sp, sp, #8
 6844              	.LCFI93:
 6845              		.cfi_remember_state
 6846              		.cfi_def_cfa_offset 16
 6847              		@ sp needed
 6848 0044 70BD     		pop	{r4, r5, r6, pc}
 6849              	.LVL1018:
 6850              	.L642:
 6851              	.LCFI94:
 6852              		.cfi_restore_state
4278:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 6853              		.loc 1 4278 0
 6854 0046 0021     		movs	r1, #0
 6855 0048 2846     		mov	r0, r5
 6856              	.LVL1019:
 6857 004a FFF7FEFF 		bl	dir_sdi
 6858              	.LVL1020:
 6859 004e 0446     		mov	r4, r0
 6860              	.LVL1021:
 6861 0050 F2E7     		b	.L637
 6862              	.LVL1022:
 6863              	.L640:
4281:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_NO_FILE) res = FR_OK;	/* Ignore end of directory */
 6864              		.loc 1 4281 0
 6865 0052 0446     		mov	r4, r0
 6866 0054 F0E7     		b	.L637
 6867              		.cfi_endproc
ARM GAS  /tmp/ccwdO2Zj.s 			page 242


 6868              	.LFE195:
 6870              		.section	.text.f_stat,"ax",%progbits
 6871              		.align	1
 6872              		.global	f_stat
 6873              		.syntax unified
 6874              		.thumb
 6875              		.thumb_func
 6876              		.fpu fpv5-sp-d16
 6878              	f_stat:
 6879              	.LFB196:
4357:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 6880              		.loc 1 4357 0
 6881              		.cfi_startproc
 6882              		@ args = 0, pretend = 0, frame = 56
 6883              		@ frame_needed = 0, uses_anonymous_args = 0
 6884              	.LVL1023:
 6885 0000 30B5     		push	{r4, r5, lr}
 6886              	.LCFI95:
 6887              		.cfi_def_cfa_offset 12
 6888              		.cfi_offset 4, -12
 6889              		.cfi_offset 5, -8
 6890              		.cfi_offset 14, -4
 6891 0002 8FB0     		sub	sp, sp, #60
 6892              	.LCFI96:
 6893              		.cfi_def_cfa_offset 72
 6894 0004 0190     		str	r0, [sp, #4]
 6895 0006 0D46     		mov	r5, r1
4364:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 6896              		.loc 1 4364 0
 6897 0008 0022     		movs	r2, #0
 6898 000a 02A9     		add	r1, sp, #8
 6899              	.LVL1024:
 6900 000c 01A8     		add	r0, sp, #4
 6901              	.LVL1025:
 6902 000e FFF7FEFF 		bl	find_volume
 6903              	.LVL1026:
4365:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(dj.obj.fs);
 6904              		.loc 1 4365 0
 6905 0012 0446     		mov	r4, r0
 6906 0014 30B1     		cbz	r0, .L647
 6907              	.LVL1027:
 6908              	.L644:
4378:Middlewares/Third_Party/FatFs/src/ff.c **** }
 6909              		.loc 1 4378 0
 6910 0016 2146     		mov	r1, r4
 6911 0018 0298     		ldr	r0, [sp, #8]
 6912 001a FFF7FEFF 		bl	unlock_fs
 6913              	.LVL1028:
4379:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6914              		.loc 1 4379 0
 6915 001e 2046     		mov	r0, r4
 6916 0020 0FB0     		add	sp, sp, #60
 6917              	.LCFI97:
 6918              		.cfi_remember_state
 6919              		.cfi_def_cfa_offset 12
 6920              		@ sp needed
 6921 0022 30BD     		pop	{r4, r5, pc}
ARM GAS  /tmp/ccwdO2Zj.s 			page 243


 6922              	.LVL1029:
 6923              	.L647:
 6924              	.LCFI98:
 6925              		.cfi_restore_state
4367:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {				/* Follow completed */
 6926              		.loc 1 4367 0
 6927 0024 0199     		ldr	r1, [sp, #4]
 6928 0026 02A8     		add	r0, sp, #8
 6929              	.LVL1030:
 6930 0028 FFF7FEFF 		bl	follow_path
 6931              	.LVL1031:
4368:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {	/* It is origin directory */
 6932              		.loc 1 4368 0
 6933 002c 0446     		mov	r4, r0
 6934 002e 0028     		cmp	r0, #0
 6935 0030 F1D1     		bne	.L644
4369:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;
 6936              		.loc 1 4369 0
 6937 0032 9DF93730 		ldrsb	r3, [sp, #55]
 6938 0036 002B     		cmp	r3, #0
 6939 0038 06DB     		blt	.L645
4372:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6940              		.loc 1 4372 0
 6941 003a 002D     		cmp	r5, #0
 6942 003c EBD0     		beq	.L644
4372:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6943              		.loc 1 4372 0 is_stmt 0 discriminator 1
 6944 003e 2946     		mov	r1, r5
 6945 0040 02A8     		add	r0, sp, #8
 6946              	.LVL1032:
 6947 0042 FFF7FEFF 		bl	get_fileinfo
 6948              	.LVL1033:
 6949 0046 E6E7     		b	.L644
 6950              	.LVL1034:
 6951              	.L645:
4370:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {							/* Found an object */
 6952              		.loc 1 4370 0 is_stmt 1
 6953 0048 0624     		movs	r4, #6
 6954 004a E4E7     		b	.L644
 6955              		.cfi_endproc
 6956              	.LFE196:
 6958              		.section	.text.f_getfree,"ax",%progbits
 6959              		.align	1
 6960              		.global	f_getfree
 6961              		.syntax unified
 6962              		.thumb
 6963              		.thumb_func
 6964              		.fpu fpv5-sp-d16
 6966              	f_getfree:
 6967              	.LFB197:
4393:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 6968              		.loc 1 4393 0
 6969              		.cfi_startproc
 6970              		@ args = 0, pretend = 0, frame = 32
 6971              		@ frame_needed = 0, uses_anonymous_args = 0
 6972              	.LVL1035:
 6973 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
ARM GAS  /tmp/ccwdO2Zj.s 			page 244


 6974              	.LCFI99:
 6975              		.cfi_def_cfa_offset 32
 6976              		.cfi_offset 4, -32
 6977              		.cfi_offset 5, -28
 6978              		.cfi_offset 6, -24
 6979              		.cfi_offset 7, -20
 6980              		.cfi_offset 8, -16
 6981              		.cfi_offset 9, -12
 6982              		.cfi_offset 10, -8
 6983              		.cfi_offset 14, -4
 6984 0004 88B0     		sub	sp, sp, #32
 6985              	.LCFI100:
 6986              		.cfi_def_cfa_offset 64
 6987 0006 0190     		str	r0, [sp, #4]
 6988 0008 8A46     		mov	r10, r1
 6989 000a 1446     		mov	r4, r2
4403:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 6990              		.loc 1 4403 0
 6991 000c 0022     		movs	r2, #0
 6992              	.LVL1036:
 6993 000e 07A9     		add	r1, sp, #28
 6994              	.LVL1037:
 6995 0010 01A8     		add	r0, sp, #4
 6996              	.LVL1038:
 6997 0012 FFF7FEFF 		bl	find_volume
 6998              	.LVL1039:
4404:Middlewares/Third_Party/FatFs/src/ff.c **** 		*fatfs = fs;				/* Return ptr to the fs object */
 6999              		.loc 1 4404 0
 7000 0016 0746     		mov	r7, r0
 7001 0018 0028     		cmp	r0, #0
 7002 001a 5ED1     		bne	.L649
4405:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* If free_clst is valid, return it without full cluster scan */
 7003              		.loc 1 4405 0
 7004 001c 079B     		ldr	r3, [sp, #28]
 7005 001e 2360     		str	r3, [r4]
4407:Middlewares/Third_Party/FatFs/src/ff.c **** 			*nclst = fs->free_clst;
 7006              		.loc 1 4407 0
 7007 0020 5A69     		ldr	r2, [r3, #20]
 7008 0022 9D69     		ldr	r5, [r3, #24]
 7009 0024 A91E     		subs	r1, r5, #2
 7010 0026 8A42     		cmp	r2, r1
 7011 0028 08D9     		bls	.L664
 7012              	.LVL1040:
4412:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = 2; obj.fs = fs;
 7013              		.loc 1 4412 0
 7014 002a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 7015 002c 012A     		cmp	r2, #1
 7016 002e 08D0     		beq	.L665
 7017              	.LVL1041:
4440:Middlewares/Third_Party/FatFs/src/ff.c **** 					i = 0; p = 0;
 7018              		.loc 1 4440 0
 7019 0030 D3F82490 		ldr	r9, [r3, #36]
 7020              	.LVL1042:
4441:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {
 7021              		.loc 1 4441 0
 7022 0034 0024     		movs	r4, #0
 7023              	.LVL1043:
ARM GAS  /tmp/ccwdO2Zj.s 			page 245


 7024 0036 2646     		mov	r6, r4
4411:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_FAT12) {	/* FAT12: Sector unalighed FAT entries */
 7025              		.loc 1 4411 0
 7026 0038 A046     		mov	r8, r4
 7027 003a 35E0     		b	.L660
 7028              	.LVL1044:
 7029              	.L664:
4408:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 7030              		.loc 1 4408 0
 7031 003c CAF80020 		str	r2, [r10]
 7032 0040 4BE0     		b	.L649
 7033              	.LVL1045:
 7034              	.L665:
4413:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {
 7035              		.loc 1 4413 0
 7036 0042 0293     		str	r3, [sp, #8]
 7037 0044 0224     		movs	r4, #2
 7038              	.LVL1046:
4411:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_FAT12) {	/* FAT12: Sector unalighed FAT entries */
 7039              		.loc 1 4411 0
 7040 0046 4FF00008 		mov	r8, #0
 7041 004a 04E0     		b	.L654
 7042              	.LVL1047:
 7043              	.L653:
4419:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 7044              		.loc 1 4419 0
 7045 004c 0134     		adds	r4, r4, #1
 7046              	.LVL1048:
 7047 004e 079B     		ldr	r3, [sp, #28]
 7048 0050 9B69     		ldr	r3, [r3, #24]
 7049 0052 A342     		cmp	r3, r4
 7050 0054 38D9     		bls	.L652
 7051              	.LVL1049:
 7052              	.L654:
4415:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }
 7053              		.loc 1 4415 0
 7054 0056 2146     		mov	r1, r4
 7055 0058 02A8     		add	r0, sp, #8
 7056 005a FFF7FEFF 		bl	get_fat
 7057              	.LVL1050:
4416:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 1) { res = FR_INT_ERR; break; }
 7058              		.loc 1 4416 0
 7059 005e B0F1FF3F 		cmp	r0, #-1
 7060 0062 30D0     		beq	.L661
4417:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 0) nfree++;
 7061              		.loc 1 4417 0
 7062 0064 0128     		cmp	r0, #1
 7063 0066 40D0     		beq	.L662
4418:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (++clst < fs->n_fatent);
 7064              		.loc 1 4418 0
 7065 0068 0028     		cmp	r0, #0
 7066 006a EFD1     		bne	.L653
4418:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (++clst < fs->n_fatent);
 7067              		.loc 1 4418 0 is_stmt 0 discriminator 1
 7068 006c 08F10108 		add	r8, r8, #1
 7069              	.LVL1051:
 7070 0070 ECE7     		b	.L653
ARM GAS  /tmp/ccwdO2Zj.s 			page 246


 7071              	.LVL1052:
 7072              	.L666:
4444:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res != FR_OK) break;
 7073              		.loc 1 4444 0 is_stmt 1
 7074 0072 09F10106 		add	r6, r9, #1
 7075              	.LVL1053:
 7076 0076 4946     		mov	r1, r9
 7077 0078 0798     		ldr	r0, [sp, #28]
 7078 007a FFF7FEFF 		bl	move_window
 7079              	.LVL1054:
4445:Middlewares/Third_Party/FatFs/src/ff.c **** 							p = fs->win;
 7080              		.loc 1 4445 0
 7081 007e 0746     		mov	r7, r0
 7082 0080 10BB     		cbnz	r0, .L652
4446:Middlewares/Third_Party/FatFs/src/ff.c **** 							i = SS(fs);
 7083              		.loc 1 4446 0
 7084 0082 079C     		ldr	r4, [sp, #28]
 7085              	.LVL1055:
 7086 0084 3434     		adds	r4, r4, #52
 7087              	.LVL1056:
4444:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res != FR_OK) break;
 7088              		.loc 1 4444 0
 7089 0086 B146     		mov	r9, r6
4447:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
 7090              		.loc 1 4447 0
 7091 0088 4FF40076 		mov	r6, #512
 7092              	.LVL1057:
 7093 008c 0EE0     		b	.L655
 7094              	.LVL1058:
 7095              	.L667:
4450:Middlewares/Third_Party/FatFs/src/ff.c **** 							p += 2; i -= 2;
 7096              		.loc 1 4450 0
 7097 008e 2046     		mov	r0, r4
 7098 0090 FFF7FEFF 		bl	ld_word
 7099              	.LVL1059:
 7100 0094 08B9     		cbnz	r0, .L657
4450:Middlewares/Third_Party/FatFs/src/ff.c **** 							p += 2; i -= 2;
 7101              		.loc 1 4450 0 is_stmt 0 discriminator 1
 7102 0096 08F10108 		add	r8, r8, #1
 7103              	.LVL1060:
 7104              	.L657:
4451:Middlewares/Third_Party/FatFs/src/ff.c **** 						} else {
 7105              		.loc 1 4451 0 is_stmt 1
 7106 009a 0234     		adds	r4, r4, #2
 7107              	.LVL1061:
 7108 009c 023E     		subs	r6, r6, #2
 7109              	.LVL1062:
 7110 009e 01E0     		b	.L658
 7111              	.L659:
4454:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
 7112              		.loc 1 4454 0
 7113 00a0 0434     		adds	r4, r4, #4
 7114              	.LVL1063:
 7115 00a2 043E     		subs	r6, r6, #4
 7116              	.LVL1064:
 7117              	.L658:
4456:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
ARM GAS  /tmp/ccwdO2Zj.s 			page 247


 7118              		.loc 1 4456 0
 7119 00a4 013D     		subs	r5, r5, #1
 7120              	.LVL1065:
 7121 00a6 0FD0     		beq	.L652
 7122              	.LVL1066:
 7123              	.L660:
4443:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = move_window(fs, sect++);
 7124              		.loc 1 4443 0
 7125 00a8 002E     		cmp	r6, #0
 7126 00aa E2D0     		beq	.L666
 7127              	.LVL1067:
 7128              	.L655:
4449:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (ld_word(p) == 0) nfree++;
 7129              		.loc 1 4449 0
 7130 00ac 079B     		ldr	r3, [sp, #28]
 7131 00ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7132 00b0 022B     		cmp	r3, #2
 7133 00b2 ECD0     		beq	.L667
4453:Middlewares/Third_Party/FatFs/src/ff.c **** 							p += 4; i -= 4;
 7134              		.loc 1 4453 0
 7135 00b4 2046     		mov	r0, r4
 7136 00b6 FFF7FEFF 		bl	ld_dword
 7137              	.LVL1068:
 7138 00ba 30F07043 		bics	r3, r0, #-268435456
 7139 00be EFD1     		bne	.L659
4453:Middlewares/Third_Party/FatFs/src/ff.c **** 							p += 4; i -= 4;
 7140              		.loc 1 4453 0 is_stmt 0 discriminator 1
 7141 00c0 08F10108 		add	r8, r8, #1
 7142              	.LVL1069:
 7143 00c4 ECE7     		b	.L659
 7144              	.LVL1070:
 7145              	.L661:
4416:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 1) { res = FR_INT_ERR; break; }
 7146              		.loc 1 4416 0 is_stmt 1
 7147 00c6 0127     		movs	r7, #1
 7148              	.LVL1071:
 7149              	.L652:
4459:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->free_clst = nfree;	/* Now free_clst is valid */
 7150              		.loc 1 4459 0
 7151 00c8 CAF80080 		str	r8, [r10]
4460:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag |= 1;		/* FSInfo is to be updated */
 7152              		.loc 1 4460 0
 7153 00cc 079B     		ldr	r3, [sp, #28]
 7154 00ce C3F81480 		str	r8, [r3, #20]
4461:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 7155              		.loc 1 4461 0
 7156 00d2 1A79     		ldrb	r2, [r3, #4]	@ zero_extendqisi2
 7157 00d4 42F00102 		orr	r2, r2, #1
 7158 00d8 1A71     		strb	r2, [r3, #4]
 7159              	.LVL1072:
 7160              	.L649:
4465:Middlewares/Third_Party/FatFs/src/ff.c **** }
 7161              		.loc 1 4465 0
 7162 00da 3946     		mov	r1, r7
 7163 00dc 0798     		ldr	r0, [sp, #28]
 7164 00de FFF7FEFF 		bl	unlock_fs
 7165              	.LVL1073:
ARM GAS  /tmp/ccwdO2Zj.s 			page 248


4466:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7166              		.loc 1 4466 0
 7167 00e2 3846     		mov	r0, r7
 7168 00e4 08B0     		add	sp, sp, #32
 7169              	.LCFI101:
 7170              		.cfi_remember_state
 7171              		.cfi_def_cfa_offset 32
 7172              		@ sp needed
 7173 00e6 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 7174              	.LVL1074:
 7175              	.L662:
 7176              	.LCFI102:
 7177              		.cfi_restore_state
4417:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 0) nfree++;
 7178              		.loc 1 4417 0
 7179 00ea 0227     		movs	r7, #2
 7180 00ec ECE7     		b	.L652
 7181              		.cfi_endproc
 7182              	.LFE197:
 7184              		.section	.text.f_truncate,"ax",%progbits
 7185              		.align	1
 7186              		.global	f_truncate
 7187              		.syntax unified
 7188              		.thumb
 7189              		.thumb_func
 7190              		.fpu fpv5-sp-d16
 7192              	f_truncate:
 7193              	.LFB198:
4478:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 7194              		.loc 1 4478 0
 7195              		.cfi_startproc
 7196              		@ args = 0, pretend = 0, frame = 8
 7197              		@ frame_needed = 0, uses_anonymous_args = 0
 7198              	.LVL1075:
 7199 0000 30B5     		push	{r4, r5, lr}
 7200              	.LCFI103:
 7201              		.cfi_def_cfa_offset 12
 7202              		.cfi_offset 4, -12
 7203              		.cfi_offset 5, -8
 7204              		.cfi_offset 14, -4
 7205 0002 83B0     		sub	sp, sp, #12
 7206              	.LCFI104:
 7207              		.cfi_def_cfa_offset 24
 7208 0004 0546     		mov	r5, r0
4484:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);
 7209              		.loc 1 4484 0
 7210 0006 01A9     		add	r1, sp, #4
 7211 0008 FFF7FEFF 		bl	validate
 7212              	.LVL1076:
4485:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
 7213              		.loc 1 4485 0
 7214 000c 0446     		mov	r4, r0
 7215 000e 18BB     		cbnz	r0, .L669
4485:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
 7216              		.loc 1 4485 0 is_stmt 0 discriminator 2
 7217 0010 6C7D     		ldrb	r4, [r5, #21]	@ zero_extendqisi2
 7218              	.LVL1077:
ARM GAS  /tmp/ccwdO2Zj.s 			page 249


 7219 0012 0CBB     		cbnz	r4, .L669
4486:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7220              		.loc 1 4486 0 is_stmt 1
 7221 0014 2B7D     		ldrb	r3, [r5, #20]	@ zero_extendqisi2
 7222 0016 13F0020F 		tst	r3, #2
 7223 001a 24D0     		beq	.L683
4488:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fptr == 0) {	/* When set file size to zero, remove entire cluster chain */
 7224              		.loc 1 4488 0
 7225 001c AB69     		ldr	r3, [r5, #24]
 7226 001e EA68     		ldr	r2, [r5, #12]
 7227 0020 9342     		cmp	r3, r2
 7228 0022 14D2     		bcs	.L673
4489:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = remove_chain(&fp->obj, fp->obj.sclust, 0);
 7229              		.loc 1 4489 0
 7230 0024 2BBB     		cbnz	r3, .L674
4490:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.sclust = 0;
 7231              		.loc 1 4490 0
 7232 0026 0022     		movs	r2, #0
 7233 0028 A968     		ldr	r1, [r5, #8]
 7234 002a 2846     		mov	r0, r5
 7235 002c FFF7FEFF 		bl	remove_chain
 7236              	.LVL1078:
 7237 0030 0446     		mov	r4, r0
 7238              	.LVL1079:
4491:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {				/* When truncate a part of the file, remove remaining clusters */
 7239              		.loc 1 4491 0
 7240 0032 0023     		movs	r3, #0
 7241 0034 AB60     		str	r3, [r5, #8]
 7242              	.LVL1080:
 7243              	.L675:
4501:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->flag |= FA_MODIFIED;
 7244              		.loc 1 4501 0
 7245 0036 AB69     		ldr	r3, [r5, #24]
 7246 0038 EB60     		str	r3, [r5, #12]
4502:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
 7247              		.loc 1 4502 0
 7248 003a 2B7D     		ldrb	r3, [r5, #20]	@ zero_extendqisi2
 7249 003c 43F04003 		orr	r3, r3, #64
 7250 0040 2B75     		strb	r3, [r5, #20]
4504:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) {
 7251              		.loc 1 4504 0
 7252 0042 14B9     		cbnz	r4, .L677
4504:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) {
 7253              		.loc 1 4504 0 is_stmt 0 discriminator 1
 7254 0044 13F0800F 		tst	r3, #128
 7255 0048 2DD1     		bne	.L684
 7256              	.L677:
4512:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 7257              		.loc 1 4512 0 is_stmt 1
 7258 004a 002C     		cmp	r4, #0
 7259 004c 3AD1     		bne	.L678
 7260              	.L673:
4515:Middlewares/Third_Party/FatFs/src/ff.c **** }
 7261              		.loc 1 4515 0
 7262 004e 2146     		mov	r1, r4
 7263 0050 0198     		ldr	r0, [sp, #4]
 7264 0052 FFF7FEFF 		bl	unlock_fs
ARM GAS  /tmp/ccwdO2Zj.s 			page 250


 7265              	.LVL1081:
 7266 0056 03E0     		b	.L671
 7267              	.LVL1082:
 7268              	.L669:
4485:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
 7269              		.loc 1 4485 0 discriminator 3
 7270 0058 2146     		mov	r1, r4
 7271 005a 0198     		ldr	r0, [sp, #4]
 7272 005c FFF7FEFF 		bl	unlock_fs
 7273              	.LVL1083:
 7274              	.L671:
4516:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7275              		.loc 1 4516 0
 7276 0060 2046     		mov	r0, r4
 7277 0062 03B0     		add	sp, sp, #12
 7278              	.LCFI105:
 7279              		.cfi_remember_state
 7280              		.cfi_def_cfa_offset 12
 7281              		@ sp needed
 7282 0064 30BD     		pop	{r4, r5, pc}
 7283              	.LVL1084:
 7284              	.L683:
 7285              	.LCFI106:
 7286              		.cfi_restore_state
4486:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7287              		.loc 1 4486 0 discriminator 1
 7288 0066 0721     		movs	r1, #7
 7289 0068 0198     		ldr	r0, [sp, #4]
 7290 006a FFF7FEFF 		bl	unlock_fs
 7291              	.LVL1085:
 7292 006e 0724     		movs	r4, #7
 7293              	.LVL1086:
 7294 0070 F6E7     		b	.L671
 7295              	.LVL1087:
 7296              	.L674:
4493:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_OK;
 7297              		.loc 1 4493 0
 7298 0072 E969     		ldr	r1, [r5, #28]
 7299 0074 2846     		mov	r0, r5
 7300 0076 FFF7FEFF 		bl	get_fat
 7301              	.LVL1088:
4495:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl == 1) res = FR_INT_ERR;
 7302              		.loc 1 4495 0
 7303 007a B0F1FF3F 		cmp	r0, #-1
 7304 007e 0ED0     		beq	.L685
 7305              	.L676:
 7306              	.LVL1089:
4496:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK && ncl < fs->n_fatent) {
 7307              		.loc 1 4496 0
 7308 0080 0128     		cmp	r0, #1
 7309 0082 0ED0     		beq	.L680
4497:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = remove_chain(&fp->obj, ncl, fp->clust);
 7310              		.loc 1 4497 0
 7311 0084 002C     		cmp	r4, #0
 7312 0086 D6D1     		bne	.L675
4497:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = remove_chain(&fp->obj, ncl, fp->clust);
 7313              		.loc 1 4497 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccwdO2Zj.s 			page 251


 7314 0088 019B     		ldr	r3, [sp, #4]
 7315 008a 9B69     		ldr	r3, [r3, #24]
 7316 008c 8342     		cmp	r3, r0
 7317 008e D2D9     		bls	.L675
4498:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 7318              		.loc 1 4498 0 is_stmt 1
 7319 0090 EA69     		ldr	r2, [r5, #28]
 7320 0092 0146     		mov	r1, r0
 7321 0094 2846     		mov	r0, r5
 7322              	.LVL1090:
 7323 0096 FFF7FEFF 		bl	remove_chain
 7324              	.LVL1091:
 7325 009a 0446     		mov	r4, r0
 7326              	.LVL1092:
 7327 009c CBE7     		b	.L675
 7328              	.LVL1093:
 7329              	.L685:
4495:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl == 1) res = FR_INT_ERR;
 7330              		.loc 1 4495 0
 7331 009e 0124     		movs	r4, #1
 7332 00a0 EEE7     		b	.L676
 7333              	.LVL1094:
 7334              	.L680:
4496:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK && ncl < fs->n_fatent) {
 7335              		.loc 1 4496 0
 7336 00a2 0224     		movs	r4, #2
 7337              	.LVL1095:
 7338 00a4 C7E7     		b	.L675
 7339              	.LVL1096:
 7340              	.L684:
4505:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_DISK_ERR;
 7341              		.loc 1 4505 0
 7342 00a6 0123     		movs	r3, #1
 7343 00a8 2A6A     		ldr	r2, [r5, #32]
 7344 00aa 05F13001 		add	r1, r5, #48
 7345 00ae 0198     		ldr	r0, [sp, #4]
 7346 00b0 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 7347 00b2 FFF7FEFF 		bl	disk_write
 7348              	.LVL1097:
 7349 00b6 20B9     		cbnz	r0, .L681
4508:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 7350              		.loc 1 4508 0
 7351 00b8 2B7D     		ldrb	r3, [r5, #20]	@ zero_extendqisi2
 7352 00ba 03F07F03 		and	r3, r3, #127
 7353 00be 2B75     		strb	r3, [r5, #20]
 7354 00c0 C3E7     		b	.L677
 7355              	.L681:
4506:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 7356              		.loc 1 4506 0
 7357 00c2 0124     		movs	r4, #1
 7358              	.LVL1098:
 7359              	.L678:
4512:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 7360              		.loc 1 4512 0 discriminator 1
 7361 00c4 6C75     		strb	r4, [r5, #21]
 7362 00c6 2146     		mov	r1, r4
 7363 00c8 0198     		ldr	r0, [sp, #4]
ARM GAS  /tmp/ccwdO2Zj.s 			page 252


 7364 00ca FFF7FEFF 		bl	unlock_fs
 7365              	.LVL1099:
 7366 00ce C7E7     		b	.L671
 7367              		.cfi_endproc
 7368              	.LFE198:
 7370              		.section	.text.f_unlink,"ax",%progbits
 7371              		.align	1
 7372              		.global	f_unlink
 7373              		.syntax unified
 7374              		.thumb
 7375              		.thumb_func
 7376              		.fpu fpv5-sp-d16
 7378              	f_unlink:
 7379              	.LFB199:
4528:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 7380              		.loc 1 4528 0
 7381              		.cfi_startproc
 7382              		@ args = 0, pretend = 0, frame = 112
 7383              		@ frame_needed = 0, uses_anonymous_args = 0
 7384              	.LVL1100:
 7385 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 7386              	.LCFI107:
 7387              		.cfi_def_cfa_offset 20
 7388              		.cfi_offset 4, -20
 7389              		.cfi_offset 5, -16
 7390              		.cfi_offset 6, -12
 7391              		.cfi_offset 7, -8
 7392              		.cfi_offset 14, -4
 7393 0002 9DB0     		sub	sp, sp, #116
 7394              	.LCFI108:
 7395              		.cfi_def_cfa_offset 136
 7396 0004 0190     		str	r0, [sp, #4]
 7397              	.LVL1101:
4540:Middlewares/Third_Party/FatFs/src/ff.c **** 	dj.obj.fs = fs;
 7398              		.loc 1 4540 0
 7399 0006 0222     		movs	r2, #2
 7400 0008 03A9     		add	r1, sp, #12
 7401 000a 01A8     		add	r0, sp, #4
 7402              	.LVL1102:
 7403 000c FFF7FEFF 		bl	find_volume
 7404              	.LVL1103:
4541:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 7405              		.loc 1 4541 0
 7406 0010 039B     		ldr	r3, [sp, #12]
 7407 0012 1093     		str	r3, [sp, #64]
4542:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
 7408              		.loc 1 4542 0
 7409 0014 0446     		mov	r4, r0
 7410 0016 30B1     		cbz	r0, .L696
 7411              	.LVL1104:
 7412              	.L687:
4610:Middlewares/Third_Party/FatFs/src/ff.c **** }
 7413              		.loc 1 4610 0
 7414 0018 2146     		mov	r1, r4
 7415 001a 0398     		ldr	r0, [sp, #12]
 7416 001c FFF7FEFF 		bl	unlock_fs
 7417              	.LVL1105:
ARM GAS  /tmp/ccwdO2Zj.s 			page 253


4611:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7418              		.loc 1 4611 0
 7419 0020 2046     		mov	r0, r4
 7420 0022 1DB0     		add	sp, sp, #116
 7421              	.LCFI109:
 7422              		.cfi_remember_state
 7423              		.cfi_def_cfa_offset 20
 7424              		@ sp needed
 7425 0024 F0BD     		pop	{r4, r5, r6, r7, pc}
 7426              	.LVL1106:
 7427              	.L696:
 7428              	.LCFI110:
 7429              		.cfi_restore_state
4544:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_RPATH && res == FR_OK && (dj.fn[NSFLAG] & NS_DOT)) {
 7430              		.loc 1 4544 0
 7431 0026 0199     		ldr	r1, [sp, #4]
 7432 0028 10A8     		add	r0, sp, #64
 7433              	.LVL1107:
 7434 002a FFF7FEFF 		bl	follow_path
 7435              	.LVL1108:
4549:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 7436              		.loc 1 4549 0
 7437 002e 0446     		mov	r4, r0
 7438 0030 20B9     		cbnz	r0, .L688
4549:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 7439              		.loc 1 4549 0 is_stmt 0 discriminator 1
 7440 0032 0221     		movs	r1, #2
 7441 0034 10A8     		add	r0, sp, #64
 7442              	.LVL1109:
 7443 0036 FFF7FEFF 		bl	chk_lock
 7444              	.LVL1110:
 7445 003a 0446     		mov	r4, r0
 7446              	.LVL1111:
 7447              	.L688:
4551:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {
 7448              		.loc 1 4551 0 is_stmt 1
 7449 003c 002C     		cmp	r4, #0
 7450 003e EBD1     		bne	.L687
4552:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;		/* Cannot remove the origin directory */
 7451              		.loc 1 4552 0
 7452 0040 9DF96F30 		ldrsb	r3, [sp, #111]
 7453 0044 002B     		cmp	r3, #0
 7454 0046 1EDB     		blt	.L692
4555:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_DENIED;		/* Cannot remove R/O object */
 7455              		.loc 1 4555 0
 7456 0048 9DF84660 		ldrb	r6, [sp, #70]	@ zero_extendqisi2
 7457 004c 16F0010F 		tst	r6, #1
 7458 0050 30D1     		bne	.L693
4569:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7459              		.loc 1 4569 0
 7460 0052 039F     		ldr	r7, [sp, #12]
 7461 0054 1899     		ldr	r1, [sp, #96]
 7462 0056 3846     		mov	r0, r7
 7463 0058 FFF7FEFF 		bl	ld_clust
 7464              	.LVL1112:
 7465 005c 0546     		mov	r5, r0
 7466              	.LVL1113:
ARM GAS  /tmp/ccwdO2Zj.s 			page 254


4571:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0
 7467              		.loc 1 4571 0
 7468 005e 16F0100F 		tst	r6, #16
 7469 0062 12D0     		beq	.L689
4578:Middlewares/Third_Party/FatFs/src/ff.c **** 						sdj.obj.sclust = dclst;
 7470              		.loc 1 4578 0
 7471 0064 0497     		str	r7, [sp, #16]
4579:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 7472              		.loc 1 4579 0
 7473 0066 0690     		str	r0, [sp, #24]
4586:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (res == FR_OK) {
 7474              		.loc 1 4586 0
 7475 0068 0021     		movs	r1, #0
 7476 006a 04A8     		add	r0, sp, #16
 7477              	.LVL1114:
 7478 006c FFF7FEFF 		bl	dir_sdi
 7479              	.LVL1115:
4587:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = dir_read(&sdj, 0);			/* Read an item */
 7480              		.loc 1 4587 0
 7481 0070 0446     		mov	r4, r0
 7482 0072 50B9     		cbnz	r0, .L689
4588:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res == FR_OK) res = FR_DENIED;	/* Not empty? */
 7483              		.loc 1 4588 0
 7484 0074 0021     		movs	r1, #0
 7485 0076 04A8     		add	r0, sp, #16
 7486              	.LVL1116:
 7487 0078 FFF7FEFF 		bl	dir_read
 7488              	.LVL1117:
4589:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res == FR_NO_FILE) res = FR_OK;	/* Empty? */
 7489              		.loc 1 4589 0
 7490 007c 0446     		mov	r4, r0
 7491 007e E0B1     		cbz	r0, .L694
4590:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
 7492              		.loc 1 4590 0
 7493 0080 0428     		cmp	r0, #4
 7494 0082 02D1     		bne	.L689
 7495 0084 03E0     		b	.L690
 7496              	.LVL1118:
 7497              	.L692:
4531:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
 7498              		.loc 1 4531 0
 7499 0086 0025     		movs	r5, #0
4553:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 7500              		.loc 1 4553 0
 7501 0088 0624     		movs	r4, #6
 7502              	.LVL1119:
 7503              	.L689:
4595:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_remove(&dj);			/* Remove the directory entry */
 7504              		.loc 1 4595 0
 7505 008a 002C     		cmp	r4, #0
 7506 008c C4D1     		bne	.L687
 7507              	.LVL1120:
 7508              	.L690:
4596:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK && dclst) {	/* Remove the cluster chain if exist */
 7509              		.loc 1 4596 0
 7510 008e 10A8     		add	r0, sp, #64
 7511 0090 FFF7FEFF 		bl	dir_remove
ARM GAS  /tmp/ccwdO2Zj.s 			page 255


 7512              	.LVL1121:
4597:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 7513              		.loc 1 4597 0
 7514 0094 0446     		mov	r4, r0
 7515 0096 2B1C     		adds	r3, r5, #0
 7516 0098 18BF     		it	ne
 7517 009a 0123     		movne	r3, #1
 7518 009c 0028     		cmp	r0, #0
 7519 009e 0CBF     		ite	eq
 7520 00a0 1846     		moveq	r0, r3
 7521 00a2 0020     		movne	r0, #0
 7522              	.LVL1122:
 7523 00a4 58B9     		cbnz	r0, .L697
 7524              	.L691:
 7525              	.LVL1123:
4604:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 7526              		.loc 1 4604 0
 7527 00a6 002C     		cmp	r4, #0
 7528 00a8 B6D1     		bne	.L687
4604:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 7529              		.loc 1 4604 0 is_stmt 0 discriminator 1
 7530 00aa 0398     		ldr	r0, [sp, #12]
 7531 00ac FFF7FEFF 		bl	sync_fs
 7532              	.LVL1124:
 7533 00b0 0446     		mov	r4, r0
 7534              	.LVL1125:
 7535 00b2 B1E7     		b	.L687
 7536              	.LVL1126:
 7537              	.L693:
4531:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
 7538              		.loc 1 4531 0 is_stmt 1
 7539 00b4 0025     		movs	r5, #0
4556:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7540              		.loc 1 4556 0
 7541 00b6 0724     		movs	r4, #7
 7542              	.LVL1127:
 7543 00b8 E7E7     		b	.L689
 7544              	.LVL1128:
 7545              	.L694:
4589:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res == FR_NO_FILE) res = FR_OK;	/* Empty? */
 7546              		.loc 1 4589 0
 7547 00ba 0724     		movs	r4, #7
 7548 00bc E5E7     		b	.L689
 7549              	.LVL1129:
 7550              	.L697:
4601:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 7551              		.loc 1 4601 0
 7552 00be 0022     		movs	r2, #0
 7553 00c0 2946     		mov	r1, r5
 7554 00c2 10A8     		add	r0, sp, #64
 7555 00c4 FFF7FEFF 		bl	remove_chain
 7556              	.LVL1130:
 7557 00c8 0446     		mov	r4, r0
 7558              	.LVL1131:
 7559 00ca ECE7     		b	.L691
 7560              		.cfi_endproc
 7561              	.LFE199:
ARM GAS  /tmp/ccwdO2Zj.s 			page 256


 7563              		.section	.text.f_mkdir,"ax",%progbits
 7564              		.align	1
 7565              		.global	f_mkdir
 7566              		.syntax unified
 7567              		.thumb
 7568              		.thumb_func
 7569              		.fpu fpv5-sp-d16
 7571              	f_mkdir:
 7572              	.LFB200:
4623:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 7573              		.loc 1 4623 0
 7574              		.cfi_startproc
 7575              		@ args = 0, pretend = 0, frame = 64
 7576              		@ frame_needed = 0, uses_anonymous_args = 0
 7577              	.LVL1132:
 7578 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 7579              	.LCFI111:
 7580              		.cfi_def_cfa_offset 36
 7581              		.cfi_offset 4, -36
 7582              		.cfi_offset 5, -32
 7583              		.cfi_offset 6, -28
 7584              		.cfi_offset 7, -24
 7585              		.cfi_offset 8, -20
 7586              		.cfi_offset 9, -16
 7587              		.cfi_offset 10, -12
 7588              		.cfi_offset 11, -8
 7589              		.cfi_offset 14, -4
 7590 0004 91B0     		sub	sp, sp, #68
 7591              	.LCFI112:
 7592              		.cfi_def_cfa_offset 104
 7593 0006 0190     		str	r0, [sp, #4]
4634:Middlewares/Third_Party/FatFs/src/ff.c **** 	dj.obj.fs = fs;
 7594              		.loc 1 4634 0
 7595 0008 0222     		movs	r2, #2
 7596 000a 03A9     		add	r1, sp, #12
 7597 000c 01A8     		add	r0, sp, #4
 7598              	.LVL1133:
 7599 000e FFF7FEFF 		bl	find_volume
 7600              	.LVL1134:
4635:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 7601              		.loc 1 4635 0
 7602 0012 039B     		ldr	r3, [sp, #12]
 7603 0014 0493     		str	r3, [sp, #16]
4636:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
 7604              		.loc 1 4636 0
 7605 0016 0446     		mov	r4, r0
 7606 0018 38B1     		cbz	r0, .L716
 7607              	.LVL1135:
 7608              	.L699:
4707:Middlewares/Third_Party/FatFs/src/ff.c **** }
 7609              		.loc 1 4707 0
 7610 001a 2146     		mov	r1, r4
 7611 001c 0398     		ldr	r0, [sp, #12]
 7612 001e FFF7FEFF 		bl	unlock_fs
 7613              	.LVL1136:
4708:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7614              		.loc 1 4708 0
ARM GAS  /tmp/ccwdO2Zj.s 			page 257


 7615 0022 2046     		mov	r0, r4
 7616 0024 11B0     		add	sp, sp, #68
 7617              	.LCFI113:
 7618              		.cfi_remember_state
 7619              		.cfi_def_cfa_offset 36
 7620              		@ sp needed
 7621 0026 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 7622              	.LVL1137:
 7623              	.L716:
 7624              	.LCFI114:
 7625              		.cfi_restore_state
4638:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) res = FR_EXIST;		/* Any object with same name is already existing */
 7626              		.loc 1 4638 0
 7627 002a 0199     		ldr	r1, [sp, #4]
 7628 002c 04A8     		add	r0, sp, #16
 7629              	.LVL1138:
 7630 002e FFF7FEFF 		bl	follow_path
 7631              	.LVL1139:
4639:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_RPATH && res == FR_NO_FILE && (dj.fn[NSFLAG] & NS_DOT)) {
 7632              		.loc 1 4639 0
 7633 0032 0028     		cmp	r0, #0
 7634 0034 00F09980 		beq	.L709
4643:Middlewares/Third_Party/FatFs/src/ff.c **** 			dcl = create_chain(&dj.obj, 0);		/* Allocate a cluster for the new directory table */
 7635              		.loc 1 4643 0
 7636 0038 0428     		cmp	r0, #4
 7637 003a 01D0     		beq	.L717
4638:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) res = FR_EXIST;		/* Any object with same name is already existing */
 7638              		.loc 1 4638 0
 7639 003c 0446     		mov	r4, r0
 7640 003e ECE7     		b	.L699
 7641              	.L717:
4644:Middlewares/Third_Party/FatFs/src/ff.c **** 			dj.obj.objsize = (DWORD)fs->csize * SS(fs);
 7642              		.loc 1 4644 0
 7643 0040 0021     		movs	r1, #0
 7644 0042 04A8     		add	r0, sp, #16
 7645              	.LVL1140:
 7646 0044 FFF7FEFF 		bl	create_chain
 7647              	.LVL1141:
4645:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_OK;
 7648              		.loc 1 4645 0
 7649 0048 039A     		ldr	r2, [sp, #12]
 7650 004a 5389     		ldrh	r3, [r2, #10]
 7651 004c 5B02     		lsls	r3, r3, #9
 7652 004e 0793     		str	r3, [sp, #28]
 7653              	.LVL1142:
4647:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dcl == 1) res = FR_INT_ERR;
 7654              		.loc 1 4647 0
 7655 0050 0746     		mov	r7, r0
 7656 0052 00B9     		cbnz	r0, .L700
 7657 0054 0724     		movs	r4, #7
 7658              	.L700:
 7659              	.LVL1143:
4648:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dcl == 0xFFFFFFFF) res = FR_DISK_ERR;
 7660              		.loc 1 4648 0
 7661 0056 012F     		cmp	r7, #1
 7662 0058 11D0     		beq	.L718
 7663              	.LVL1144:
ARM GAS  /tmp/ccwdO2Zj.s 			page 258


 7664              	.L701:
4649:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) res = sync_window(fs);	/* Flush FAT */
 7665              		.loc 1 4649 0
 7666 005a B7F1FF3F 		cmp	r7, #-1
 7667 005e 15D0     		beq	.L713
4650:Middlewares/Third_Party/FatFs/src/ff.c **** 			tm = GET_FATTIME();
 7668              		.loc 1 4650 0
 7669 0060 7CB1     		cbz	r4, .L719
 7670              	.LVL1145:
 7671              	.L702:
4651:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {					/* Initialize the new directory table */
 7672              		.loc 1 4651 0
 7673 0062 FFF7FEFF 		bl	get_fattime
 7674              	.LVL1146:
 7675 0066 8246     		mov	r10, r0
 7676              	.LVL1147:
4652:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc = clust2sect(fs, dcl);
 7677              		.loc 1 4652 0
 7678 0068 94B1     		cbz	r4, .L720
 7679              	.LVL1148:
 7680              	.L703:
4675:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_register(&dj);	/* Register the object to the directoy */
 7681              		.loc 1 4675 0
 7682 006a 002C     		cmp	r4, #0
 7683 006c 63D0     		beq	.L721
 7684              	.L707:
4678:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 7685              		.loc 1 4678 0
 7686 006e 002C     		cmp	r4, #0
 7687 0070 66D0     		beq	.L722
4701:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 7688              		.loc 1 4701 0
 7689 0072 0022     		movs	r2, #0
 7690 0074 3946     		mov	r1, r7
 7691 0076 04A8     		add	r0, sp, #16
 7692 0078 FFF7FEFF 		bl	remove_chain
 7693              	.LVL1149:
 7694 007c CDE7     		b	.L699
 7695              	.LVL1150:
 7696              	.L718:
4648:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dcl == 0xFFFFFFFF) res = FR_DISK_ERR;
 7697              		.loc 1 4648 0
 7698 007e 0224     		movs	r4, #2
 7699              	.LVL1151:
 7700 0080 EBE7     		b	.L701
 7701              	.LVL1152:
 7702              	.L719:
4650:Middlewares/Third_Party/FatFs/src/ff.c **** 			tm = GET_FATTIME();
 7703              		.loc 1 4650 0 discriminator 1
 7704 0082 1046     		mov	r0, r2
 7705              	.LVL1153:
 7706 0084 FFF7FEFF 		bl	sync_window
 7707              	.LVL1154:
 7708 0088 0446     		mov	r4, r0
 7709              	.LVL1155:
 7710 008a EAE7     		b	.L702
 7711              	.LVL1156:
ARM GAS  /tmp/ccwdO2Zj.s 			page 259


 7712              	.L713:
4649:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) res = sync_window(fs);	/* Flush FAT */
 7713              		.loc 1 4649 0
 7714 008c 0124     		movs	r4, #1
 7715              	.LVL1157:
 7716 008e E8E7     		b	.L702
 7717              	.LVL1158:
 7718              	.L720:
4653:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir = fs->win;
 7719              		.loc 1 4653 0
 7720 0090 039D     		ldr	r5, [sp, #12]
 7721 0092 3946     		mov	r1, r7
 7722 0094 2846     		mov	r0, r5
 7723              	.LVL1159:
 7724 0096 FFF7FEFF 		bl	clust2sect
 7725              	.LVL1160:
 7726 009a 0646     		mov	r6, r0
 7727              	.LVL1161:
4654:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_set(dir, 0, SS(fs));
 7728              		.loc 1 4654 0
 7729 009c 05F13409 		add	r9, r5, #52
 7730              	.LVL1162:
4655:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {
 7731              		.loc 1 4655 0
 7732 00a0 4FF40072 		mov	r2, #512
 7733 00a4 0021     		movs	r1, #0
 7734 00a6 4846     		mov	r0, r9
 7735              	.LVL1163:
 7736 00a8 FFF7FEFF 		bl	mem_set
 7737              	.LVL1164:
4657:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[DIR_Name] = '.';
 7738              		.loc 1 4657 0
 7739 00ac 0B22     		movs	r2, #11
 7740 00ae 2021     		movs	r1, #32
 7741 00b0 4846     		mov	r0, r9
 7742 00b2 FFF7FEFF 		bl	mem_set
 7743              	.LVL1165:
4658:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[DIR_Attr] = AM_DIR;
 7744              		.loc 1 4658 0
 7745 00b6 4FF02E0B 		mov	fp, #46
 7746 00ba 85F834B0 		strb	fp, [r5, #52]
4659:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dir + DIR_ModTime, tm);
 7747              		.loc 1 4659 0
 7748 00be 1023     		movs	r3, #16
 7749 00c0 85F83F30 		strb	r3, [r5, #63]
4660:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dir, dcl);
 7750              		.loc 1 4660 0
 7751 00c4 5146     		mov	r1, r10
 7752 00c6 05F14A00 		add	r0, r5, #74
 7753 00ca FFF7FEFF 		bl	st_dword
 7754              	.LVL1166:
4661:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(dir + SZDIRE, dir, SZDIRE); 	/* Create ".." entry */
 7755              		.loc 1 4661 0
 7756 00ce 3A46     		mov	r2, r7
 7757 00d0 4946     		mov	r1, r9
 7758 00d2 0398     		ldr	r0, [sp, #12]
 7759 00d4 FFF7FEFF 		bl	st_clust
ARM GAS  /tmp/ccwdO2Zj.s 			page 260


 7760              	.LVL1167:
4662:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[SZDIRE + 1] = '.'; pcl = dj.obj.sclust;
 7761              		.loc 1 4662 0
 7762 00d8 05F15408 		add	r8, r5, #84
 7763 00dc 2022     		movs	r2, #32
 7764 00de 4946     		mov	r1, r9
 7765 00e0 4046     		mov	r0, r8
 7766 00e2 FFF7FEFF 		bl	mem_cpy
 7767              	.LVL1168:
4663:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fs->fs_type == FS_FAT32 && pcl == fs->dirbase) pcl = 0;
 7768              		.loc 1 4663 0
 7769 00e6 85F855B0 		strb	fp, [r5, #85]
 7770 00ea 069A     		ldr	r2, [sp, #24]
 7771              	.LVL1169:
4664:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dir + SZDIRE, pcl);
 7772              		.loc 1 4664 0
 7773 00ec 0398     		ldr	r0, [sp, #12]
 7774 00ee 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 7775 00f0 032B     		cmp	r3, #3
 7776 00f2 1BD0     		beq	.L723
 7777              	.LVL1170:
 7778              	.L704:
4665:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7779              		.loc 1 4665 0
 7780 00f4 4146     		mov	r1, r8
 7781 00f6 FFF7FEFF 		bl	st_clust
 7782              	.LVL1171:
4667:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->winsect = dsc++;
 7783              		.loc 1 4667 0
 7784 00fa 039B     		ldr	r3, [sp, #12]
 7785 00fc 5D89     		ldrh	r5, [r3, #10]
 7786              	.LVL1172:
 7787              	.L705:
4667:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->winsect = dsc++;
 7788              		.loc 1 4667 0 is_stmt 0 discriminator 1
 7789 00fe 002D     		cmp	r5, #0
 7790 0100 B3D0     		beq	.L703
4668:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 1;
 7791              		.loc 1 4668 0 is_stmt 1
 7792 0102 06F10108 		add	r8, r6, #1
 7793              	.LVL1173:
 7794 0106 039B     		ldr	r3, [sp, #12]
 7795 0108 1E63     		str	r6, [r3, #48]
4669:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = sync_window(fs);
 7796              		.loc 1 4669 0
 7797 010a 0122     		movs	r2, #1
 7798 010c DA70     		strb	r2, [r3, #3]
4670:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res != FR_OK) break;
 7799              		.loc 1 4670 0
 7800 010e 0398     		ldr	r0, [sp, #12]
 7801 0110 FFF7FEFF 		bl	sync_window
 7802              	.LVL1174:
4671:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_set(dir, 0, SS(fs));
 7803              		.loc 1 4671 0
 7804 0114 0446     		mov	r4, r0
 7805 0116 0028     		cmp	r0, #0
 7806 0118 A7D1     		bne	.L703
ARM GAS  /tmp/ccwdO2Zj.s 			page 261


4672:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7807              		.loc 1 4672 0 discriminator 2
 7808 011a 4FF40072 		mov	r2, #512
 7809 011e 0021     		movs	r1, #0
 7810 0120 4846     		mov	r0, r9
 7811              	.LVL1175:
 7812 0122 FFF7FEFF 		bl	mem_set
 7813              	.LVL1176:
4667:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->winsect = dsc++;
 7814              		.loc 1 4667 0 discriminator 2
 7815 0126 013D     		subs	r5, r5, #1
 7816              	.LVL1177:
4668:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 1;
 7817              		.loc 1 4668 0 discriminator 2
 7818 0128 4646     		mov	r6, r8
 7819 012a E8E7     		b	.L705
 7820              	.LVL1178:
 7821              	.L723:
4664:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dir + SZDIRE, pcl);
 7822              		.loc 1 4664 0 discriminator 1
 7823 012c 836A     		ldr	r3, [r0, #40]
 7824 012e 9342     		cmp	r3, r2
 7825 0130 E0D1     		bne	.L704
4664:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dir + SZDIRE, pcl);
 7826              		.loc 1 4664 0 is_stmt 0
 7827 0132 0022     		movs	r2, #0
 7828              	.LVL1179:
 7829 0134 DEE7     		b	.L704
 7830              	.LVL1180:
 7831              	.L721:
4676:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 7832              		.loc 1 4676 0 is_stmt 1
 7833 0136 04A8     		add	r0, sp, #16
 7834 0138 FFF7FEFF 		bl	dir_register
 7835              	.LVL1181:
 7836 013c 0446     		mov	r4, r0
 7837              	.LVL1182:
 7838 013e 96E7     		b	.L707
 7839              	.L722:
4691:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dir + DIR_ModTime, tm);	/* Created time */
 7840              		.loc 1 4691 0
 7841 0140 0C9C     		ldr	r4, [sp, #48]
 7842              	.LVL1183:
4692:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dir, dcl);				/* Table start cluster */
 7843              		.loc 1 4692 0
 7844 0142 5146     		mov	r1, r10
 7845 0144 04F11600 		add	r0, r4, #22
 7846 0148 FFF7FEFF 		bl	st_dword
 7847              	.LVL1184:
4693:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[DIR_Attr] = AM_DIR;				/* Attribute */
 7848              		.loc 1 4693 0
 7849 014c 3A46     		mov	r2, r7
 7850 014e 2146     		mov	r1, r4
 7851 0150 0398     		ldr	r0, [sp, #12]
 7852 0152 FFF7FEFF 		bl	st_clust
 7853              	.LVL1185:
4694:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 1;
ARM GAS  /tmp/ccwdO2Zj.s 			page 262


 7854              		.loc 1 4694 0
 7855 0156 1023     		movs	r3, #16
 7856 0158 E372     		strb	r3, [r4, #11]
4695:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7857              		.loc 1 4695 0
 7858 015a 039B     		ldr	r3, [sp, #12]
 7859 015c 0122     		movs	r2, #1
 7860 015e DA70     		strb	r2, [r3, #3]
4698:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7861              		.loc 1 4698 0
 7862 0160 0398     		ldr	r0, [sp, #12]
 7863 0162 FFF7FEFF 		bl	sync_fs
 7864              	.LVL1186:
 7865 0166 0446     		mov	r4, r0
 7866              	.LVL1187:
 7867 0168 57E7     		b	.L699
 7868              	.LVL1188:
 7869              	.L709:
4639:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_RPATH && res == FR_NO_FILE && (dj.fn[NSFLAG] & NS_DOT)) {
 7870              		.loc 1 4639 0
 7871 016a 0824     		movs	r4, #8
 7872 016c 55E7     		b	.L699
 7873              		.cfi_endproc
 7874              	.LFE200:
 7876              		.section	.text.f_rename,"ax",%progbits
 7877              		.align	1
 7878              		.global	f_rename
 7879              		.syntax unified
 7880              		.thumb
 7881              		.thumb_func
 7882              		.fpu fpv5-sp-d16
 7884              	f_rename:
 7885              	.LFB201:
4721:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 7886              		.loc 1 4721 0
 7887              		.cfi_startproc
 7888              		@ args = 0, pretend = 0, frame = 136
 7889              		@ frame_needed = 0, uses_anonymous_args = 0
 7890              	.LVL1189:
 7891 0000 30B5     		push	{r4, r5, lr}
 7892              	.LCFI115:
 7893              		.cfi_def_cfa_offset 12
 7894              		.cfi_offset 4, -12
 7895              		.cfi_offset 5, -8
 7896              		.cfi_offset 14, -4
 7897 0002 A3B0     		sub	sp, sp, #140
 7898              	.LCFI116:
 7899              		.cfi_def_cfa_offset 152
 7900 0004 0190     		str	r0, [sp, #4]
 7901 0006 22A8     		add	r0, sp, #136
 7902              	.LVL1190:
 7903 0008 40F8881D 		str	r1, [r0, #-136]!
4730:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path_old, &fs, FA_WRITE);	/* Get logical drive of the old object */
 7904              		.loc 1 4730 0
 7905 000c FFF7FEFF 		bl	get_ldnumber
 7906              	.LVL1191:
4731:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
ARM GAS  /tmp/ccwdO2Zj.s 			page 263


 7907              		.loc 1 4731 0
 7908 0010 0222     		movs	r2, #2
 7909 0012 09A9     		add	r1, sp, #36
 7910 0014 01A8     		add	r0, sp, #4
 7911 0016 FFF7FEFF 		bl	find_volume
 7912              	.LVL1192:
4732:Middlewares/Third_Party/FatFs/src/ff.c **** 		djo.obj.fs = fs;
 7913              		.loc 1 4732 0
 7914 001a 0446     		mov	r4, r0
 7915 001c 30B1     		cbz	r0, .L735
 7916              	.LVL1193:
 7917              	.L725:
4810:Middlewares/Third_Party/FatFs/src/ff.c **** }
 7918              		.loc 1 4810 0
 7919 001e 2146     		mov	r1, r4
 7920 0020 0998     		ldr	r0, [sp, #36]
 7921 0022 FFF7FEFF 		bl	unlock_fs
 7922              	.LVL1194:
4811:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7923              		.loc 1 4811 0
 7924 0026 2046     		mov	r0, r4
 7925 0028 23B0     		add	sp, sp, #140
 7926              	.LCFI117:
 7927              		.cfi_remember_state
 7928              		.cfi_def_cfa_offset 12
 7929              		@ sp needed
 7930 002a 30BD     		pop	{r4, r5, pc}
 7931              	.LVL1195:
 7932              	.L735:
 7933              	.LCFI118:
 7934              		.cfi_restore_state
4733:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
 7935              		.loc 1 4733 0
 7936 002c 099B     		ldr	r3, [sp, #36]
 7937 002e 1693     		str	r3, [sp, #88]
4735:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK && (djo.fn[NSFLAG] & (NS_DOT | NS_NONAME))) res = FR_INVALID_NAME;	/* Check vali
 7938              		.loc 1 4735 0
 7939 0030 0199     		ldr	r1, [sp, #4]
 7940 0032 16A8     		add	r0, sp, #88
 7941              	.LVL1196:
 7942 0034 FFF7FEFF 		bl	follow_path
 7943              	.LVL1197:
4736:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 7944              		.loc 1 4736 0
 7945 0038 0446     		mov	r4, r0
 7946 003a 20B9     		cbnz	r0, .L726
4736:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 7947              		.loc 1 4736 0 is_stmt 0 discriminator 1
 7948 003c 9DF88730 		ldrb	r3, [sp, #135]	@ zero_extendqisi2
 7949 0040 13F0A00F 		tst	r3, #160
 7950 0044 1ED1     		bne	.L731
 7951              	.L726:
 7952              	.LVL1198:
4738:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = chk_lock(&djo, 2);
 7953              		.loc 1 4738 0 is_stmt 1
 7954 0046 24B9     		cbnz	r4, .L727
4739:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
ARM GAS  /tmp/ccwdO2Zj.s 			page 264


 7955              		.loc 1 4739 0
 7956 0048 0221     		movs	r1, #2
 7957 004a 16A8     		add	r0, sp, #88
 7958 004c FFF7FEFF 		bl	chk_lock
 7959              	.LVL1199:
 7960 0050 0446     		mov	r4, r0
 7961              	.LVL1200:
 7962              	.L727:
4742:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 7963              		.loc 1 4742 0
 7964 0052 002C     		cmp	r4, #0
 7965 0054 E3D1     		bne	.L725
4769:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_cpy(&djn, &djo, sizeof (DIR));		/* Duplicate the directory object */
 7966              		.loc 1 4769 0
 7967 0056 1522     		movs	r2, #21
 7968 0058 1E99     		ldr	r1, [sp, #120]
 7969 005a 0B31     		adds	r1, r1, #11
 7970 005c 03A8     		add	r0, sp, #12
 7971 005e FFF7FEFF 		bl	mem_cpy
 7972              	.LVL1201:
4770:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = follow_path(&djn, path_new);		/* Make sure if new object name is not in use */
 7973              		.loc 1 4770 0
 7974 0062 3022     		movs	r2, #48
 7975 0064 16A9     		add	r1, sp, #88
 7976 0066 0AA8     		add	r0, sp, #40
 7977 0068 FFF7FEFF 		bl	mem_cpy
 7978              	.LVL1202:
4771:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {						/* Is new name already in use by any other object? */
 7979              		.loc 1 4771 0
 7980 006c 0099     		ldr	r1, [sp]
 7981 006e 0AA8     		add	r0, sp, #40
 7982 0070 FFF7FEFF 		bl	follow_path
 7983              	.LVL1203:
4772:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = (djn.obj.sclust == djo.obj.sclust && djn.dptr == djo.dptr) ? FR_NO_FILE : FR_EXIST;
 7984              		.loc 1 4772 0
 7985 0074 0446     		mov	r4, r0
 7986 0076 68B9     		cbnz	r0, .L728
4773:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7987              		.loc 1 4773 0
 7988 0078 0C9A     		ldr	r2, [sp, #48]
 7989 007a 189B     		ldr	r3, [sp, #96]
 7990 007c 9A42     		cmp	r2, r3
 7991 007e 03D0     		beq	.L736
 7992 0080 0824     		movs	r4, #8
 7993 0082 09E0     		b	.L729
 7994              	.L731:
4736:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 7995              		.loc 1 4736 0
 7996 0084 0624     		movs	r4, #6
 7997 0086 E4E7     		b	.L727
 7998              	.L736:
4773:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7999              		.loc 1 4773 0 discriminator 1
 8000 0088 0F9A     		ldr	r2, [sp, #60]
 8001 008a 1B9B     		ldr	r3, [sp, #108]
 8002 008c 9A42     		cmp	r2, r3
 8003 008e 10D0     		beq	.L730
ARM GAS  /tmp/ccwdO2Zj.s 			page 265


 8004 0090 0824     		movs	r4, #8
 8005 0092 01E0     		b	.L729
 8006              	.L728:
4775:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = dir_register(&djn);			/* Register the new entry */
 8007              		.loc 1 4775 0
 8008 0094 0428     		cmp	r0, #4
 8009 0096 0CD0     		beq	.L730
 8010              	.LVL1204:
 8011              	.L729:
4799:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_remove(&djo);		/* Remove old entry */
 8012              		.loc 1 4799 0
 8013 0098 002C     		cmp	r4, #0
 8014 009a C0D1     		bne	.L725
4800:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {
 8015              		.loc 1 4800 0
 8016 009c 16A8     		add	r0, sp, #88
 8017 009e FFF7FEFF 		bl	dir_remove
 8018              	.LVL1205:
4801:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = sync_fs(fs);
 8019              		.loc 1 4801 0
 8020 00a2 0446     		mov	r4, r0
 8021 00a4 0028     		cmp	r0, #0
 8022 00a6 BAD1     		bne	.L725
4802:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8023              		.loc 1 4802 0
 8024 00a8 0998     		ldr	r0, [sp, #36]
 8025              	.LVL1206:
 8026 00aa FFF7FEFF 		bl	sync_fs
 8027              	.LVL1207:
 8028 00ae 0446     		mov	r4, r0
 8029              	.LVL1208:
 8030 00b0 B5E7     		b	.L725
 8031              	.LVL1209:
 8032              	.L730:
4776:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) {
 8033              		.loc 1 4776 0
 8034 00b2 0AA8     		add	r0, sp, #40
 8035              	.LVL1210:
 8036 00b4 FFF7FEFF 		bl	dir_register
 8037              	.LVL1211:
4777:Middlewares/Third_Party/FatFs/src/ff.c **** 						dir = djn.dir;					/* Copy information about object except name */
 8038              		.loc 1 4777 0
 8039 00b8 0446     		mov	r4, r0
 8040 00ba 0028     		cmp	r0, #0
 8041 00bc ECD1     		bne	.L729
4778:Middlewares/Third_Party/FatFs/src/ff.c **** 						mem_cpy(dir + 13, buf + 2, 19);
 8042              		.loc 1 4778 0
 8043 00be 129D     		ldr	r5, [sp, #72]
 8044              	.LVL1212:
4779:Middlewares/Third_Party/FatFs/src/ff.c **** 						dir[DIR_Attr] = buf[0] | AM_ARC;
 8045              		.loc 1 4779 0
 8046 00c0 1322     		movs	r2, #19
 8047 00c2 0DF10E01 		add	r1, sp, #14
 8048 00c6 05F10D00 		add	r0, r5, #13
 8049              	.LVL1213:
 8050 00ca FFF7FEFF 		bl	mem_cpy
 8051              	.LVL1214:
ARM GAS  /tmp/ccwdO2Zj.s 			page 266


4780:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->wflag = 1;
 8052              		.loc 1 4780 0
 8053 00ce 9DF80C30 		ldrb	r3, [sp, #12]	@ zero_extendqisi2
 8054 00d2 43F02003 		orr	r3, r3, #32
 8055 00d6 EB72     		strb	r3, [r5, #11]
4781:Middlewares/Third_Party/FatFs/src/ff.c **** 						if ((dir[DIR_Attr] & AM_DIR) && djo.obj.sclust != djn.obj.sclust) {	/* Update .. entry in the
 8056              		.loc 1 4781 0
 8057 00d8 099B     		ldr	r3, [sp, #36]
 8058 00da 0122     		movs	r2, #1
 8059 00dc DA70     		strb	r2, [r3, #3]
4782:Middlewares/Third_Party/FatFs/src/ff.c **** 							dw = clust2sect(fs, ld_clust(fs, dir));
 8060              		.loc 1 4782 0
 8061 00de EB7A     		ldrb	r3, [r5, #11]	@ zero_extendqisi2
 8062 00e0 13F0100F 		tst	r3, #16
 8063 00e4 D8D0     		beq	.L729
4782:Middlewares/Third_Party/FatFs/src/ff.c **** 							dw = clust2sect(fs, ld_clust(fs, dir));
 8064              		.loc 1 4782 0 is_stmt 0 discriminator 1
 8065 00e6 189A     		ldr	r2, [sp, #96]
 8066 00e8 0C9B     		ldr	r3, [sp, #48]
 8067 00ea 9A42     		cmp	r2, r3
 8068 00ec D4D0     		beq	.L729
4783:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (!dw) {
 8069              		.loc 1 4783 0 is_stmt 1
 8070 00ee 099C     		ldr	r4, [sp, #36]
 8071 00f0 2946     		mov	r1, r5
 8072 00f2 2046     		mov	r0, r4
 8073 00f4 FFF7FEFF 		bl	ld_clust
 8074              	.LVL1215:
 8075 00f8 0146     		mov	r1, r0
 8076 00fa 2046     		mov	r0, r4
 8077 00fc FFF7FEFF 		bl	clust2sect
 8078              	.LVL1216:
4784:Middlewares/Third_Party/FatFs/src/ff.c **** 								res = FR_INT_ERR;
 8079              		.loc 1 4784 0
 8080 0100 0146     		mov	r1, r0
 8081 0102 A0B1     		cbz	r0, .L733
4788:Middlewares/Third_Party/FatFs/src/ff.c **** 								dir = fs->win + SZDIRE * 1;	/* Ptr to .. entry */
 8082              		.loc 1 4788 0
 8083 0104 2046     		mov	r0, r4
 8084              	.LVL1217:
 8085 0106 FFF7FEFF 		bl	move_window
 8086              	.LVL1218:
4789:Middlewares/Third_Party/FatFs/src/ff.c **** 								if (res == FR_OK && dir[1] == '.') {
 8087              		.loc 1 4789 0
 8088 010a 099B     		ldr	r3, [sp, #36]
 8089 010c 03F15401 		add	r1, r3, #84
 8090              	.LVL1219:
4790:Middlewares/Third_Party/FatFs/src/ff.c **** 									st_clust(fs, dir, djn.obj.sclust);
 8091              		.loc 1 4790 0
 8092 0110 0446     		mov	r4, r0
 8093 0112 0028     		cmp	r0, #0
 8094 0114 C0D1     		bne	.L729
4790:Middlewares/Third_Party/FatFs/src/ff.c **** 									st_clust(fs, dir, djn.obj.sclust);
 8095              		.loc 1 4790 0 is_stmt 0 discriminator 1
 8096 0116 93F85520 		ldrb	r2, [r3, #85]	@ zero_extendqisi2
 8097 011a 2E2A     		cmp	r2, #46
 8098 011c BCD1     		bne	.L729
ARM GAS  /tmp/ccwdO2Zj.s 			page 267


4791:Middlewares/Third_Party/FatFs/src/ff.c **** 									fs->wflag = 1;
 8099              		.loc 1 4791 0 is_stmt 1
 8100 011e 0C9A     		ldr	r2, [sp, #48]
 8101 0120 1846     		mov	r0, r3
 8102              	.LVL1220:
 8103 0122 FFF7FEFF 		bl	st_clust
 8104              	.LVL1221:
4792:Middlewares/Third_Party/FatFs/src/ff.c **** 								}
 8105              		.loc 1 4792 0
 8106 0126 099B     		ldr	r3, [sp, #36]
 8107 0128 0122     		movs	r2, #1
 8108 012a DA70     		strb	r2, [r3, #3]
 8109 012c B4E7     		b	.L729
 8110              	.LVL1222:
 8111              	.L733:
4785:Middlewares/Third_Party/FatFs/src/ff.c **** 							} else {
 8112              		.loc 1 4785 0
 8113 012e 0224     		movs	r4, #2
 8114 0130 75E7     		b	.L725
 8115              		.cfi_endproc
 8116              	.LFE201:
 8118              		.section	.text.f_mkfs,"ax",%progbits
 8119              		.align	1
 8120              		.global	f_mkfs
 8121              		.syntax unified
 8122              		.thumb
 8123              		.thumb_func
 8124              		.fpu fpv5-sp-d16
 8126              	f_mkfs:
 8127              	.LFB202:
5308:Middlewares/Third_Party/FatFs/src/ff.c **** 	const UINT n_fats = 1;		/* Number of FATs for FAT12/16/32 volume (1 or 2) */
 8128              		.loc 1 5308 0
 8129              		.cfi_startproc
 8130              		@ args = 4, pretend = 0, frame = 40
 8131              		@ frame_needed = 0, uses_anonymous_args = 0
 8132              	.LVL1223:
 8133 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 8134              	.LCFI119:
 8135              		.cfi_def_cfa_offset 36
 8136              		.cfi_offset 4, -36
 8137              		.cfi_offset 5, -32
 8138              		.cfi_offset 6, -28
 8139              		.cfi_offset 7, -24
 8140              		.cfi_offset 8, -20
 8141              		.cfi_offset 9, -16
 8142              		.cfi_offset 10, -12
 8143              		.cfi_offset 11, -8
 8144              		.cfi_offset 14, -4
 8145 0004 8BB0     		sub	sp, sp, #44
 8146              	.LCFI120:
 8147              		.cfi_def_cfa_offset 80
 8148 0006 0AAC     		add	r4, sp, #40
 8149 0008 44F80C0D 		str	r0, [r4, #-12]!
 8150 000c 8846     		mov	r8, r1
 8151 000e 1546     		mov	r5, r2
 8152 0010 1E46     		mov	r6, r3
 8153              	.LVL1224:
ARM GAS  /tmp/ccwdO2Zj.s 			page 268


5327:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
 8154              		.loc 1 5327 0
 8155 0012 2046     		mov	r0, r4
 8156              	.LVL1225:
 8157 0014 FFF7FEFF 		bl	get_ldnumber
 8158              	.LVL1226:
5328:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (FatFs[vol]) FatFs[vol]->fs_type = 0;	/* Clear the volume */
 8159              		.loc 1 5328 0
 8160 0018 0028     		cmp	r0, #0
 8161 001a C0F2DF82 		blt	.L781
5329:Middlewares/Third_Party/FatFs/src/ff.c **** 	pdrv = LD2PD(vol);	/* Physical drive */
 8162              		.loc 1 5329 0
 8163 001e 924B     		ldr	r3, .L828
 8164 0020 53F82030 		ldr	r3, [r3, r0, lsl #2]
 8165 0024 0BB1     		cbz	r3, .L739
5329:Middlewares/Third_Party/FatFs/src/ff.c **** 	pdrv = LD2PD(vol);	/* Physical drive */
 8166              		.loc 1 5329 0 is_stmt 0 discriminator 1
 8167 0026 0022     		movs	r2, #0
 8168 0028 1A70     		strb	r2, [r3]
 8169              	.L739:
5330:Middlewares/Third_Party/FatFs/src/ff.c **** 	part = LD2PT(vol);	/* Partition (0:create as new, 1-4:get from partition table) */
 8170              		.loc 1 5330 0 is_stmt 1
 8171 002a C4B2     		uxtb	r4, r0
 8172              	.LVL1227:
5334:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_NOINIT) return FR_NOT_READY;
 8173              		.loc 1 5334 0
 8174 002c 2046     		mov	r0, r4
 8175              	.LVL1228:
 8176 002e FFF7FEFF 		bl	disk_initialize
 8177              	.LVL1229:
5335:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_PROTECT) return FR_WRITE_PROTECTED;
 8178              		.loc 1 5335 0
 8179 0032 10F0010F 		tst	r0, #1
 8180 0036 40F0D382 		bne	.L782
5336:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_ioctl(pdrv, GET_BLOCK_SIZE, &sz_blk) != RES_OK || !sz_blk || sz_blk > 32768 || (sz_blk & 
 8181              		.loc 1 5336 0
 8182 003a 10F0040F 		tst	r0, #4
 8183 003e 40F0D182 		bne	.L783
5337:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS != _MIN_SS		/* Get sector size of the medium if variable sector size cfg. */
 8184              		.loc 1 5337 0
 8185 0042 09AA     		add	r2, sp, #36
 8186 0044 0321     		movs	r1, #3
 8187 0046 2046     		mov	r0, r4
 8188              	.LVL1230:
 8189 0048 FFF7FEFF 		bl	disk_ioctl
 8190              	.LVL1231:
 8191 004c 38B9     		cbnz	r0, .L740
5337:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS != _MIN_SS		/* Get sector size of the medium if variable sector size cfg. */
 8192              		.loc 1 5337 0 is_stmt 0 discriminator 2
 8193 004e 099B     		ldr	r3, [sp, #36]
 8194 0050 2BB1     		cbz	r3, .L740
5337:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS != _MIN_SS		/* Get sector size of the medium if variable sector size cfg. */
 8195              		.loc 1 5337 0 discriminator 4
 8196 0052 B3F5004F 		cmp	r3, #32768
 8197 0056 02D8     		bhi	.L740
5337:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS != _MIN_SS		/* Get sector size of the medium if variable sector size cfg. */
 8198              		.loc 1 5337 0 discriminator 6
ARM GAS  /tmp/ccwdO2Zj.s 			page 269


 8199 0058 5A1E     		subs	r2, r3, #1
 8200 005a 1342     		tst	r3, r2
 8201 005c 01D0     		beq	.L741
 8202              	.L740:
5337:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS != _MIN_SS		/* Get sector size of the medium if variable sector size cfg. */
 8203              		.loc 1 5337 0 discriminator 7
 8204 005e 0123     		movs	r3, #1
 8205 0060 0993     		str	r3, [sp, #36]
 8206              	.L741:
 8207              	.LVL1232:
5344:Middlewares/Third_Party/FatFs/src/ff.c **** 	au /= ss;	/* Cluster size in unit of sector */
 8208              		.loc 1 5344 0 is_stmt 1
 8209 0062 1DB1     		cbz	r5, .L742
5344:Middlewares/Third_Party/FatFs/src/ff.c **** 	au /= ss;	/* Cluster size in unit of sector */
 8210              		.loc 1 5344 0 is_stmt 0 discriminator 1
 8211 0064 B5F5007F 		cmp	r5, #512
 8212 0068 C0F0C082 		bcc	.L784
 8213              	.L742:
5344:Middlewares/Third_Party/FatFs/src/ff.c **** 	au /= ss;	/* Cluster size in unit of sector */
 8214              		.loc 1 5344 0 discriminator 4
 8215 006c B5F1807F 		cmp	r5, #16777216
 8216 0070 00F2BE82 		bhi	.L785
5344:Middlewares/Third_Party/FatFs/src/ff.c **** 	au /= ss;	/* Cluster size in unit of sector */
 8217              		.loc 1 5344 0 discriminator 6
 8218 0074 6B1E     		subs	r3, r5, #1
 8219 0076 2B42     		tst	r3, r5
 8220 0078 40F0BC82 		bne	.L786
5345:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8221              		.loc 1 5345 0 is_stmt 1
 8222 007c 6D0A     		lsrs	r5, r5, #9
 8223              	.LVL1233:
5349:Middlewares/Third_Party/FatFs/src/ff.c **** 	szb_buf = sz_buf * ss;	/* Size of working buffer (byte) */
 8224              		.loc 1 5349 0
 8225 007e 149B     		ldr	r3, [sp, #80]
 8226 0080 4FEA532A 		lsr	r10, r3, #9
 8227              	.LVL1234:
5350:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!szb_buf) return FR_MKFS_ABORTED;
 8228              		.loc 1 5350 0
 8229 0084 794F     		ldr	r7, .L828+4
 8230 0086 1F40     		ands	r7, r7, r3
 8231              	.LVL1235:
5351:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8232              		.loc 1 5351 0
 8233 0088 002F     		cmp	r7, #0
 8234 008a 00F0B582 		beq	.L787
5364:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_vol = (opt & FM_SFD) ? 0 : 63;		/* Volume start sector */
 8235              		.loc 1 5364 0
 8236 008e 08AA     		add	r2, sp, #32
 8237 0090 0121     		movs	r1, #1
 8238 0092 2046     		mov	r0, r4
 8239 0094 FFF7FEFF 		bl	disk_ioctl
 8240              	.LVL1236:
 8241 0098 0028     		cmp	r0, #0
 8242 009a 40F0AF82 		bne	.L788
5365:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (sz_vol < b_vol) return FR_MKFS_ABORTED;
 8243              		.loc 1 5365 0
 8244 009e 18F00803 		ands	r3, r8, #8
ARM GAS  /tmp/ccwdO2Zj.s 			page 270


 8245 00a2 0093     		str	r3, [sp]
 8246 00a4 70D0     		beq	.L789
 8247 00a6 4FF00009 		mov	r9, #0
 8248              	.L743:
 8249              	.LVL1237:
5366:Middlewares/Third_Party/FatFs/src/ff.c **** 		sz_vol -= b_vol;						/* Volume size */
 8250              		.loc 1 5366 0 discriminator 4
 8251 00aa 089B     		ldr	r3, [sp, #32]
 8252 00ac 4B45     		cmp	r3, r9
 8253 00ae C0F0A782 		bcc	.L790
5367:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 8254              		.loc 1 5367 0
 8255 00b2 A3EB0903 		sub	r3, r3, r9
 8256 00b6 0893     		str	r3, [sp, #32]
5369:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8257              		.loc 1 5369 0
 8258 00b8 7F2B     		cmp	r3, #127
 8259 00ba 40F2A382 		bls	.L791
5378:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (opt & FM_FAT32) {	/* FAT32 possible? */
 8260              		.loc 1 5378 0
 8261 00be 802D     		cmp	r5, #128
 8262 00c0 00F2A282 		bhi	.L792
5379:Middlewares/Third_Party/FatFs/src/ff.c **** 			if ((opt & FM_ANY) == FM_FAT32 || !(opt & FM_FAT)) {	/* FAT32 only or no-FAT? */
 8263              		.loc 1 5379 0
 8264 00c4 18F00200 		ands	r0, r8, #2
 8265 00c8 06D0     		beq	.L744
5380:Middlewares/Third_Party/FatFs/src/ff.c **** 				fmt = FS_FAT32; break;
 8266              		.loc 1 5380 0
 8267 00ca 08F00702 		and	r2, r8, #7
 8268 00ce 022A     		cmp	r2, #2
 8269 00d0 5DD0     		beq	.L793
5380:Middlewares/Third_Party/FatFs/src/ff.c **** 				fmt = FS_FAT32; break;
 8270              		.loc 1 5380 0 is_stmt 0 discriminator 1
 8271 00d2 18F0010F 		tst	r8, #1
 8272 00d6 61D0     		beq	.L794
 8273              	.L744:
5384:Middlewares/Third_Party/FatFs/src/ff.c **** 		fmt = FS_FAT16;
 8274              		.loc 1 5384 0 is_stmt 1
 8275 00d8 18F0010F 		tst	r8, #1
 8276 00dc 00F09682 		beq	.L795
5385:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (0);
 8277              		.loc 1 5385 0
 8278 00e0 4FF0020B 		mov	fp, #2
 8279 00e4 0194     		str	r4, [sp, #4]
 8280 00e6 CDF808A0 		str	r10, [sp, #8]
 8281 00ea 0397     		str	r7, [sp, #12]
 8282              	.LVL1238:
 8283              	.L746:
5555:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!pau) {	/* au auto-selection */
 8284              		.loc 1 5555 0
 8285 00ec BBF1030F 		cmp	fp, #3
 8286 00f0 5FD0     		beq	.L764
5566:Middlewares/Third_Party/FatFs/src/ff.c **** 					n = sz_vol / 0x1000;	/* Volume size in unit of 4KS */
 8287              		.loc 1 5566 0
 8288 00f2 002D     		cmp	r5, #0
 8289 00f4 00F08180 		beq	.L820
 8290 00f8 A846     		mov	r8, r5
ARM GAS  /tmp/ccwdO2Zj.s 			page 271


 8291              	.LVL1239:
 8292              	.L752:
5570:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (n_clst > MAX_FAT12) {
 8293              		.loc 1 5570 0
 8294 00fa B3FBF8F2 		udiv	r2, r3, r8
 8295              	.LVL1240:
5571:Middlewares/Third_Party/FatFs/src/ff.c **** 					n = n_clst * 2 + 4;		/* FAT size [byte] */
 8296              		.loc 1 5571 0
 8297 00fe 40F6F571 		movw	r1, #4085
 8298 0102 8A42     		cmp	r2, r1
 8299 0104 40F28A80 		bls	.L755
5572:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
 8300              		.loc 1 5572 0
 8301 0108 0232     		adds	r2, r2, #2
 8302              	.LVL1241:
 8303 010a 5200     		lsls	r2, r2, #1
 8304              	.LVL1242:
 8305              	.L756:
5577:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_rsv = 1;						/* Number of reserved sectors */
 8306              		.loc 1 5577 0
 8307 010c 02F2FF12 		addw	r2, r2, #511
 8308              	.LVL1243:
 8309 0110 520A     		lsrs	r2, r2, #9
 8310              	.LVL1244:
5579:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 8311              		.loc 1 5579 0
 8312 0112 4FF0200E 		mov	lr, #32
5578:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_dir = (DWORD)n_rootdir * SZDIRE / ss;	/* Rootdir size [sector] */
 8313              		.loc 1 5578 0
 8314 0116 4FF0010C 		mov	ip, #1
 8315              	.LVL1245:
 8316              	.L751:
5581:Middlewares/Third_Party/FatFs/src/ff.c **** 			b_data = b_fat + sz_fat * n_fats + sz_dir;	/* Data base */
 8317              		.loc 1 5581 0
 8318 011a 0CEB090A 		add	r10, ip, r9
 8319              	.LVL1246:
5582:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8320              		.loc 1 5582 0
 8321 011e 02EB0A01 		add	r1, r2, r10
 8322 0122 7144     		add	r1, r1, lr
 8323              	.LVL1247:
5585:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT32) {		/* FAT32: Move FAT base */
 8324              		.loc 1 5585 0
 8325 0124 099F     		ldr	r7, [sp, #36]
 8326 0126 7C18     		adds	r4, r7, r1
 8327 0128 013C     		subs	r4, r4, #1
 8328 012a 7F42     		negs	r7, r7
 8329 012c 3C40     		ands	r4, r4, r7
 8330 012e 641A     		subs	r4, r4, r1
 8331              	.LVL1248:
5586:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_rsv += n; b_fat += n;
 8332              		.loc 1 5586 0
 8333 0130 BBF1030F 		cmp	fp, #3
 8334 0134 7AD0     		beq	.L821
5589:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 8335              		.loc 1 5589 0
 8336 0136 2244     		add	r2, r2, r4
ARM GAS  /tmp/ccwdO2Zj.s 			page 272


 8337              	.LVL1249:
 8338              	.L758:
5593:Middlewares/Third_Party/FatFs/src/ff.c **** 			n_clst = (sz_vol - sz_rsv - sz_fat * n_fats - sz_dir) / pau;
 8339              		.loc 1 5593 0
 8340 0138 01EB0811 		add	r1, r1, r8, lsl #4
 8341              	.LVL1250:
 8342 013c A1EB0901 		sub	r1, r1, r9
 8343 0140 8B42     		cmp	r3, r1
 8344 0142 C0F06782 		bcc	.L799
5594:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT32) {
 8345              		.loc 1 5594 0
 8346 0146 A3EB0C01 		sub	r1, r3, ip
 8347 014a 891A     		subs	r1, r1, r2
 8348 014c A1EB0E01 		sub	r1, r1, lr
 8349 0150 B1FBF8F1 		udiv	r1, r1, r8
 8350              	.LVL1251:
5595:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (n_clst <= MAX_FAT16) {	/* Too few clusters for FAT32 */
 8351              		.loc 1 5595 0
 8352 0154 BBF1030F 		cmp	fp, #3
 8353 0158 6BD0     		beq	.L822
 8354              	.LVL1252:
 8355              	.L759:
5601:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (n_clst > MAX_FAT16) {	/* Too many clusters for FAT16 */
 8356              		.loc 1 5601 0
 8357 015a BBF1020F 		cmp	fp, #2
 8358 015e 40F08F80 		bne	.L761
5602:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!au && (pau * 2) <= 64) {
 8359              		.loc 1 5602 0
 8360 0162 4FF6F574 		movw	r4, #65525
 8361 0166 A142     		cmp	r1, r4
 8362 0168 70D9     		bls	.L762
5603:Middlewares/Third_Party/FatFs/src/ff.c **** 						au = pau * 2; continue;		/* Adjust cluster size and retry */
 8363              		.loc 1 5603 0
 8364 016a 1DB9     		cbnz	r5, .L763
5603:Middlewares/Third_Party/FatFs/src/ff.c **** 						au = pau * 2; continue;		/* Adjust cluster size and retry */
 8365              		.loc 1 5603 0 is_stmt 0 discriminator 1
 8366 016c 4FEA4802 		lsl	r2, r8, #1
 8367              	.LVL1253:
 8368 0170 402A     		cmp	r2, #64
 8369 0172 1AD9     		bls	.L801
 8370              	.L763:
5606:Middlewares/Third_Party/FatFs/src/ff.c **** 						fmt = FS_FAT32; continue;	/* Switch type to FAT32 and retry */
 8371              		.loc 1 5606 0 is_stmt 1
 8372 0174 D8B9     		cbnz	r0, .L802
5609:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_MKFS_ABORTED;
 8373              		.loc 1 5609 0
 8374 0176 002D     		cmp	r5, #0
 8375 0178 40F05082 		bne	.L803
5609:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_MKFS_ABORTED;
 8376              		.loc 1 5609 0 is_stmt 0 discriminator 1
 8377 017c 4FEA4805 		lsl	r5, r8, #1
 8378              	.LVL1254:
 8379 0180 802D     		cmp	r5, #128
 8380 0182 B3D9     		bls	.L746
5610:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8381              		.loc 1 5610 0 is_stmt 1
 8382 0184 0E20     		movs	r0, #14
ARM GAS  /tmp/ccwdO2Zj.s 			page 273


 8383 0186 2EE2     		b	.L738
 8384              	.LVL1255:
 8385              	.L789:
5365:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (sz_vol < b_vol) return FR_MKFS_ABORTED;
 8386              		.loc 1 5365 0
 8387 0188 4FF03F09 		mov	r9, #63
 8388 018c 8DE7     		b	.L743
 8389              	.LVL1256:
 8390              	.L793:
5381:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 8391              		.loc 1 5381 0
 8392 018e 4FF0030B 		mov	fp, #3
 8393 0192 0194     		str	r4, [sp, #4]
 8394 0194 CDF808A0 		str	r10, [sp, #8]
 8395 0198 0397     		str	r7, [sp, #12]
 8396 019a A7E7     		b	.L746
 8397              	.L794:
 8398 019c 4FF0030B 		mov	fp, #3
 8399 01a0 0194     		str	r4, [sp, #4]
 8400 01a2 CDF808A0 		str	r10, [sp, #8]
 8401 01a6 0397     		str	r7, [sp, #12]
 8402 01a8 A0E7     		b	.L746
 8403              	.LVL1257:
 8404              	.L801:
5604:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 8405              		.loc 1 5604 0
 8406 01aa 1546     		mov	r5, r2
 8407              	.LVL1258:
 8408 01ac 9EE7     		b	.L746
 8409              	.LVL1259:
 8410              	.L802:
5607:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 8411              		.loc 1 5607 0
 8412 01ae 4FF0030B 		mov	fp, #3
 8413              	.LVL1260:
 8414              	.L764:
5556:Middlewares/Third_Party/FatFs/src/ff.c **** 					n = sz_vol / 0x20000;	/* Volume size in unit of 128KS */
 8415              		.loc 1 5556 0
 8416 01b2 95B1     		cbz	r5, .L823
 8417 01b4 A846     		mov	r8, r5
 8418              	.L748:
 8419              	.LVL1261:
5560:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_fat = (n_clst * 4 + 8 + ss - 1) / ss;	/* FAT size [sector] */
 8420              		.loc 1 5560 0
 8421 01b6 B3FBF8F1 		udiv	r1, r3, r8
 8422              	.LVL1262:
5561:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_rsv = 32;	/* Number of reserved sectors */
 8423              		.loc 1 5561 0
 8424 01ba 8A1C     		adds	r2, r1, #2
 8425 01bc 9200     		lsls	r2, r2, #2
 8426 01be 02F2FF12 		addw	r2, r2, #511
 8427 01c2 520A     		lsrs	r2, r2, #9
 8428              	.LVL1263:
5564:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {				/* FAT12/16 volume */
 8429              		.loc 1 5564 0
 8430 01c4 2A4C     		ldr	r4, .L828+8
 8431 01c6 0C44     		add	r4, r4, r1
ARM GAS  /tmp/ccwdO2Zj.s 			page 274


 8432 01c8 2A49     		ldr	r1, .L828+12
 8433              	.LVL1264:
 8434 01ca 8C42     		cmp	r4, r1
 8435 01cc 00F22082 		bhi	.L797
5563:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (n_clst <= MAX_FAT16 || n_clst > MAX_FAT32) return FR_MKFS_ABORTED;
 8436              		.loc 1 5563 0
 8437 01d0 4FF0000E 		mov	lr, #0
5562:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_dir = 0;		/* No static directory */
 8438              		.loc 1 5562 0
 8439 01d4 4FF0200C 		mov	ip, #32
 8440 01d8 9FE7     		b	.L751
 8441              	.LVL1265:
 8442              	.L823:
5557:Middlewares/Third_Party/FatFs/src/ff.c **** 					for (i = 0, pau = 1; cst32[i] && cst32[i] <= n; i++, pau <<= 1) ;	/* Get from table */
 8443              		.loc 1 5557 0
 8444 01da 5C0C     		lsrs	r4, r3, #17
 8445              	.LVL1266:
5558:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8446              		.loc 1 5558 0
 8447 01dc 0021     		movs	r1, #0
 8448 01de 4FF00108 		mov	r8, #1
 8449 01e2 02E0     		b	.L749
 8450              	.LVL1267:
 8451              	.L750:
5558:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8452              		.loc 1 5558 0 is_stmt 0 discriminator 4
 8453 01e4 0131     		adds	r1, r1, #1
 8454              	.LVL1268:
 8455 01e6 4FEA4808 		lsl	r8, r8, #1
 8456              	.LVL1269:
 8457              	.L749:
5558:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8458              		.loc 1 5558 0 discriminator 1
 8459 01ea 234A     		ldr	r2, .L828+16
 8460 01ec 32F81120 		ldrh	r2, [r2, r1, lsl #1]
 8461 01f0 002A     		cmp	r2, #0
 8462 01f2 E0D0     		beq	.L748
5558:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8463              		.loc 1 5558 0 discriminator 3
 8464 01f4 A242     		cmp	r2, r4
 8465 01f6 F5D9     		bls	.L750
 8466 01f8 DDE7     		b	.L748
 8467              	.LVL1270:
 8468              	.L820:
5567:Middlewares/Third_Party/FatFs/src/ff.c **** 					for (i = 0, pau = 1; cst[i] && cst[i] <= n; i++, pau <<= 1) ;	/* Get from table */
 8469              		.loc 1 5567 0 is_stmt 1
 8470 01fa 1C0B     		lsrs	r4, r3, #12
 8471              	.LVL1271:
5568:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8472              		.loc 1 5568 0
 8473 01fc 0021     		movs	r1, #0
 8474 01fe 4FF00108 		mov	r8, #1
 8475 0202 02E0     		b	.L753
 8476              	.LVL1272:
 8477              	.L754:
5568:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8478              		.loc 1 5568 0 is_stmt 0 discriminator 4
ARM GAS  /tmp/ccwdO2Zj.s 			page 275


 8479 0204 0131     		adds	r1, r1, #1
 8480              	.LVL1273:
 8481 0206 4FEA4808 		lsl	r8, r8, #1
 8482              	.LVL1274:
 8483              	.L753:
5568:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8484              		.loc 1 5568 0 discriminator 1
 8485 020a 1C4A     		ldr	r2, .L828+20
 8486 020c 32F81120 		ldrh	r2, [r2, r1, lsl #1]
 8487 0210 002A     		cmp	r2, #0
 8488 0212 3FF472AF 		beq	.L752
5568:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8489              		.loc 1 5568 0 discriminator 3
 8490 0216 A242     		cmp	r2, r4
 8491 0218 F4D9     		bls	.L754
 8492 021a 6EE7     		b	.L752
 8493              	.LVL1275:
 8494              	.L755:
5575:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8495              		.loc 1 5575 0 is_stmt 1
 8496 021c 02EB4202 		add	r2, r2, r2, lsl #1
 8497              	.LVL1276:
 8498 0220 0132     		adds	r2, r2, #1
 8499 0222 5208     		lsrs	r2, r2, #1
 8500 0224 0332     		adds	r2, r2, #3
 8501              	.LVL1277:
5574:Middlewares/Third_Party/FatFs/src/ff.c **** 					n = (n_clst * 3 + 1) / 2 + 3;	/* FAT size [byte] */
 8502              		.loc 1 5574 0
 8503 0226 4FF0010B 		mov	fp, #1
 8504 022a 6FE7     		b	.L756
 8505              	.LVL1278:
 8506              	.L821:
5587:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {					/* FAT12/16: Expand FAT size */
 8507              		.loc 1 5587 0
 8508 022c A444     		add	ip, ip, r4
 8509              	.LVL1279:
 8510 022e A244     		add	r10, r10, r4
 8511              	.LVL1280:
 8512 0230 82E7     		b	.L758
 8513              	.LVL1281:
 8514              	.L822:
5596:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!au && (au = pau / 2) != 0) continue;	/* Adjust cluster size and retry */
 8515              		.loc 1 5596 0
 8516 0232 4FF6F574 		movw	r4, #65525
 8517              	.LVL1282:
 8518 0236 A142     		cmp	r1, r4
 8519 0238 8FD8     		bhi	.L759
5597:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_MKFS_ABORTED;
 8520              		.loc 1 5597 0
 8521 023a 002D     		cmp	r5, #0
 8522 023c 40F0EC81 		bne	.L800
 8523              	.LVL1283:
5597:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_MKFS_ABORTED;
 8524              		.loc 1 5597 0 is_stmt 0 discriminator 1
 8525 0240 5FEA5805 		lsrs	r5, r8, #1
 8526              	.LVL1284:
 8527 0244 7FF452AF 		bne	.L746
ARM GAS  /tmp/ccwdO2Zj.s 			page 276


5598:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8528              		.loc 1 5598 0 is_stmt 1
 8529 0248 0E20     		movs	r0, #14
 8530 024a CCE1     		b	.L738
 8531              	.L762:
5612:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!au && (au = pau * 2) <= 128) continue;	/* Adjust cluster size and retry */
 8532              		.loc 1 5612 0
 8533 024c 40F6F574 		movw	r4, #4085
 8534 0250 A142     		cmp	r1, r4
 8535 0252 15D8     		bhi	.L761
5613:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_MKFS_ABORTED;
 8536              		.loc 1 5613 0
 8537 0254 002D     		cmp	r5, #0
 8538 0256 40F0E381 		bne	.L804
5613:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_MKFS_ABORTED;
 8539              		.loc 1 5613 0 is_stmt 0 discriminator 1
 8540 025a 4FEA4805 		lsl	r5, r8, #1
 8541              	.LVL1285:
 8542 025e 802D     		cmp	r5, #128
 8543 0260 7FF644AF 		bls	.L746
5614:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8544              		.loc 1 5614 0 is_stmt 1
 8545 0264 0E20     		movs	r0, #14
 8546 0266 BEE1     		b	.L738
 8547              	.L829:
 8548              		.align	2
 8549              	.L828:
 8550 0268 00000000 		.word	.LANCHOR2
 8551 026c 00FEFFFF 		.word	-512
 8552 0270 0A00FFFF 		.word	-65526
 8553 0274 FFFFFE0F 		.word	268369919
 8554 0278 00000000 		.word	.LANCHOR4
 8555 027c 00000000 		.word	.LANCHOR5
 8556              	.L761:
 8557 0280 CDF818E0 		str	lr, [sp, #24]
 8558 0284 6546     		mov	r5, ip
 8559              	.LVL1286:
 8560 0286 0592     		str	r2, [sp, #20]
 8561 0288 CDF810A0 		str	r10, [sp, #16]
 8562 028c 019C     		ldr	r4, [sp, #4]
 8563 028e DDF808A0 		ldr	r10, [sp, #8]
 8564              	.LVL1287:
 8565 0292 039F     		ldr	r7, [sp, #12]
 8566 0294 0B46     		mov	r3, r1
 8567 0296 0291     		str	r1, [sp, #8]
 8568              	.LVL1288:
5617:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8569              		.loc 1 5617 0
 8570 0298 40F6F572 		movw	r2, #4085
 8571              	.LVL1289:
 8572 029c BBF1010F 		cmp	fp, #1
 8573 02a0 14BF     		ite	ne
 8574 02a2 0023     		movne	r3, #0
 8575 02a4 0123     		moveq	r3, #1
 8576 02a6 9142     		cmp	r1, r2
 8577 02a8 98BF     		it	ls
 8578 02aa 0023     		movls	r3, #0
ARM GAS  /tmp/ccwdO2Zj.s 			page 277


 8579 02ac 002B     		cmp	r3, #0
 8580 02ae 40F0B981 		bne	.L805
 8581              	.LVL1290:
5628:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(buf + BS_JmpBoot, "\xEB\xFE\x90" "MSDOS5.0", 11);/* Boot jump code (x86), OEM name */
 8582              		.loc 1 5628 0
 8583 02b2 4FF40072 		mov	r2, #512
 8584 02b6 0021     		movs	r1, #0
 8585              	.LVL1291:
 8586 02b8 3046     		mov	r0, r6
 8587 02ba FFF7FEFF 		bl	mem_set
 8588              	.LVL1292:
5629:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_BytsPerSec, ss);				/* Sector size [byte] */
 8589              		.loc 1 5629 0
 8590 02be 0B22     		movs	r2, #11
 8591 02c0 DA49     		ldr	r1, .L830
 8592 02c2 3046     		mov	r0, r6
 8593 02c4 FFF7FEFF 		bl	mem_cpy
 8594              	.LVL1293:
5630:Middlewares/Third_Party/FatFs/src/ff.c **** 		buf[BPB_SecPerClus] = (BYTE)pau;				/* Cluster size [sector] */
 8595              		.loc 1 5630 0
 8596 02c8 4FF40071 		mov	r1, #512
 8597 02cc 06F10B00 		add	r0, r6, #11
 8598 02d0 FFF7FEFF 		bl	st_word
 8599              	.LVL1294:
5631:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_RsvdSecCnt, (WORD)sz_rsv);	/* Size of reserved area */
 8600              		.loc 1 5631 0
 8601 02d4 86F80D80 		strb	r8, [r6, #13]
5632:Middlewares/Third_Party/FatFs/src/ff.c **** 		buf[BPB_NumFATs] = (BYTE)n_fats;				/* Number of FATs */
 8602              		.loc 1 5632 0
 8603 02d8 A9B2     		uxth	r1, r5
 8604 02da 06F10E00 		add	r0, r6, #14
 8605 02de FFF7FEFF 		bl	st_word
 8606              	.LVL1295:
5633:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_RootEntCnt, (WORD)((fmt == FS_FAT32) ? 0 : n_rootdir));	/* Number of root direc
 8607              		.loc 1 5633 0
 8608 02e2 0123     		movs	r3, #1
 8609 02e4 3374     		strb	r3, [r6, #16]
5634:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (sz_vol < 0x10000) {
 8610              		.loc 1 5634 0
 8611 02e6 06F11100 		add	r0, r6, #17
 8612 02ea BBF1030F 		cmp	fp, #3
 8613 02ee 00F0D880 		beq	.L806
 8614 02f2 4FF40071 		mov	r1, #512
 8615              	.L765:
5634:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (sz_vol < 0x10000) {
 8616              		.loc 1 5634 0 is_stmt 0 discriminator 4
 8617 02f6 FFF7FEFF 		bl	st_word
 8618              	.LVL1296:
5635:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BPB_TotSec16, (WORD)sz_vol);	/* Volume size in 16-bit LBA */
 8619              		.loc 1 5635 0 is_stmt 1 discriminator 4
 8620 02fa 0899     		ldr	r1, [sp, #32]
 8621 02fc B1F5803F 		cmp	r1, #65536
 8622 0300 80F0D180 		bcs	.L766
5636:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 8623              		.loc 1 5636 0
 8624 0304 89B2     		uxth	r1, r1
 8625 0306 06F11300 		add	r0, r6, #19
ARM GAS  /tmp/ccwdO2Zj.s 			page 278


 8626 030a FFF7FEFF 		bl	st_word
 8627              	.LVL1297:
 8628              	.L767:
5640:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_SecPerTrk, 63);				/* Number of sectors per track (for int13) */
 8629              		.loc 1 5640 0
 8630 030e F823     		movs	r3, #248
 8631 0310 7375     		strb	r3, [r6, #21]
5641:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_NumHeads, 255);				/* Number of heads (for int13) */
 8632              		.loc 1 5641 0
 8633 0312 3F21     		movs	r1, #63
 8634 0314 06F11800 		add	r0, r6, #24
 8635 0318 FFF7FEFF 		bl	st_word
 8636              	.LVL1298:
5642:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_dword(buf + BPB_HiddSec, b_vol);				/* Volume offset in the physical drive [sector] */
 8637              		.loc 1 5642 0
 8638 031c FF21     		movs	r1, #255
 8639 031e 06F11A00 		add	r0, r6, #26
 8640 0322 FFF7FEFF 		bl	st_word
 8641              	.LVL1299:
5643:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fmt == FS_FAT32) {
 8642              		.loc 1 5643 0
 8643 0326 4946     		mov	r1, r9
 8644 0328 06F11C00 		add	r0, r6, #28
 8645 032c FFF7FEFF 		bl	st_dword
 8646              	.LVL1300:
5644:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BS_VolID32, GET_FATTIME());	/* VSN */
 8647              		.loc 1 5644 0
 8648 0330 BBF1030F 		cmp	fp, #3
 8649 0334 40F0BC80 		bne	.L768
5645:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_FATSz32, sz_fat);		/* FAT size [sector] */
 8650              		.loc 1 5645 0
 8651 0338 FFF7FEFF 		bl	get_fattime
 8652              	.LVL1301:
 8653 033c 0146     		mov	r1, r0
 8654 033e 06F14300 		add	r0, r6, #67
 8655 0342 FFF7FEFF 		bl	st_dword
 8656              	.LVL1302:
5646:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_RootClus32, 2);			/* Root directory cluster # (2) */
 8657              		.loc 1 5646 0
 8658 0346 0599     		ldr	r1, [sp, #20]
 8659 0348 06F12400 		add	r0, r6, #36
 8660 034c FFF7FEFF 		bl	st_dword
 8661              	.LVL1303:
5647:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BPB_FSInfo32, 1);				/* Offset of FSINFO sector (VBR + 1) */
 8662              		.loc 1 5647 0
 8663 0350 0221     		movs	r1, #2
 8664 0352 06F12C00 		add	r0, r6, #44
 8665 0356 FFF7FEFF 		bl	st_dword
 8666              	.LVL1304:
5648:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BPB_BkBootSec32, 6);			/* Offset of backup VBR (VBR + 6) */
 8667              		.loc 1 5648 0
 8668 035a 0121     		movs	r1, #1
 8669 035c 06F13000 		add	r0, r6, #48
 8670 0360 FFF7FEFF 		bl	st_word
 8671              	.LVL1305:
5649:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BS_DrvNum32] = 0x80;					/* Drive number (for int13) */
 8672              		.loc 1 5649 0
ARM GAS  /tmp/ccwdO2Zj.s 			page 279


 8673 0364 0621     		movs	r1, #6
 8674 0366 06F13200 		add	r0, r6, #50
 8675 036a FFF7FEFF 		bl	st_word
 8676              	.LVL1306:
5650:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BS_BootSig32] = 0x29;					/* Extended boot signature */
 8677              		.loc 1 5650 0
 8678 036e 8023     		movs	r3, #128
 8679 0370 86F84030 		strb	r3, [r6, #64]
5651:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_cpy(buf + BS_VolLab32, "NO NAME    " "FAT32   ", 19);	/* Volume label, FAT signature */
 8680              		.loc 1 5651 0
 8681 0374 2923     		movs	r3, #41
 8682 0376 86F84230 		strb	r3, [r6, #66]
5652:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 8683              		.loc 1 5652 0
 8684 037a 1322     		movs	r2, #19
 8685 037c AC49     		ldr	r1, .L830+4
 8686 037e 06F14700 		add	r0, r6, #71
 8687 0382 FFF7FEFF 		bl	mem_cpy
 8688              	.LVL1307:
 8689              	.L769:
5660:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_write(pdrv, buf, b_vol, 1) != RES_OK) return FR_DISK_ERR;	/* Write it to the VBR sector 
 8690              		.loc 1 5660 0
 8691 0386 06F5FF73 		add	r3, r6, #510
 8692 038a 0193     		str	r3, [sp, #4]
 8693              	.LVL1308:
 8694 038c 4AF65521 		movw	r1, #43605
 8695 0390 1846     		mov	r0, r3
 8696 0392 FFF7FEFF 		bl	st_word
 8697              	.LVL1309:
5661:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8698              		.loc 1 5661 0
 8699 0396 0123     		movs	r3, #1
 8700 0398 4A46     		mov	r2, r9
 8701 039a 3146     		mov	r1, r6
 8702 039c 2046     		mov	r0, r4
 8703 039e FFF7FEFF 		bl	disk_write
 8704              	.LVL1310:
 8705 03a2 0028     		cmp	r0, #0
 8706 03a4 40F04081 		bne	.L807
5664:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_write(pdrv, buf, b_vol + 6, 1);		/* Write backup VBR (VBR + 6) */
 8707              		.loc 1 5664 0
 8708 03a8 BBF1030F 		cmp	fp, #3
 8709 03ac 00F09A80 		beq	.L824
 8710              	.L770:
5677:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = b_fat;		/* FAT start sector */
 8711              		.loc 1 5677 0
 8712 03b0 3A46     		mov	r2, r7
 8713 03b2 0021     		movs	r1, #0
 8714 03b4 3046     		mov	r0, r6
 8715 03b6 FFF7FEFF 		bl	mem_set
 8716              	.LVL1311:
5679:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT32) {
 8717              		.loc 1 5679 0
 8718 03ba 0025     		movs	r5, #0
 8719              	.LVL1312:
 8720 03bc CDF80880 		str	r8, [sp, #8]
 8721              	.LVL1313:
ARM GAS  /tmp/ccwdO2Zj.s 			page 280


 8722              	.L771:
5679:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT32) {
 8723              		.loc 1 5679 0 is_stmt 0 discriminator 1
 8724 03c0 002D     		cmp	r5, #0
 8725 03c2 00F0C480 		beq	.L776
 8726 03c6 DDF80880 		ldr	r8, [sp, #8]
5697:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
 8727              		.loc 1 5697 0 is_stmt 1
 8728 03ca BBF1030F 		cmp	fp, #3
 8729 03ce 00F0F880 		beq	.L825
 8730 03d2 069F     		ldr	r7, [sp, #24]
 8731 03d4 DDF81080 		ldr	r8, [sp, #16]
 8732              	.LVL1314:
 8733              	.L778:
5699:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, buf, sect, (UINT)n) != RES_OK) return FR_DISK_ERR;
 8734              		.loc 1 5699 0
 8735 03d8 3D46     		mov	r5, r7
 8736 03da 5745     		cmp	r7, r10
 8737 03dc 28BF     		it	cs
 8738 03de 5546     		movcs	r5, r10
 8739              	.LVL1315:
5700:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += n; nsect -= n;
 8740              		.loc 1 5700 0
 8741 03e0 2B46     		mov	r3, r5
 8742 03e2 4246     		mov	r2, r8
 8743 03e4 3146     		mov	r1, r6
 8744 03e6 2046     		mov	r0, r4
 8745 03e8 FFF7FEFF 		bl	disk_write
 8746              	.LVL1316:
 8747 03ec 0028     		cmp	r0, #0
 8748 03ee 40F02B81 		bne	.L810
5701:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (nsect);
 8749              		.loc 1 5701 0
 8750 03f2 A844     		add	r8, r8, r5
 8751              	.LVL1317:
5702:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 8752              		.loc 1 5702 0
 8753 03f4 7F1B     		subs	r7, r7, r5
 8754              	.LVL1318:
 8755 03f6 EFD1     		bne	.L778
5709:Middlewares/Third_Party/FatFs/src/ff.c **** 			sys = 0x0C;		/* FAT32X */
 8756              		.loc 1 5709 0
 8757 03f8 BBF1030F 		cmp	fp, #3
 8758 03fc 00F0E580 		beq	.L811
5712:Middlewares/Third_Party/FatFs/src/ff.c **** 				sys = 0x06;	/* FAT12/16 (>=64KS) */
 8759              		.loc 1 5712 0
 8760 0400 089B     		ldr	r3, [sp, #32]
 8761 0402 B3F5803F 		cmp	r3, #65536
 8762 0406 80F0E380 		bcs	.L812
5715:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 8763              		.loc 1 5715 0
 8764 040a BBF1020F 		cmp	fp, #2
 8765 040e 40F0E280 		bne	.L813
 8766 0412 4FF00408 		mov	r8, #4
 8767              	.LVL1319:
 8768              	.L779:
5727:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, ss);
ARM GAS  /tmp/ccwdO2Zj.s 			page 281


 8769              		.loc 1 5727 0
 8770 0416 009B     		ldr	r3, [sp]
 8771 0418 CBBB     		cbnz	r3, .L780
5728:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BS_55AA, 0xAA55);		/* MBR signature */
 8772              		.loc 1 5728 0
 8773 041a 4FF40072 		mov	r2, #512
 8774 041e 0021     		movs	r1, #0
 8775 0420 3046     		mov	r0, r6
 8776 0422 FFF7FEFF 		bl	mem_set
 8777              	.LVL1320:
5729:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte = buf + MBR_Table;				/* Create partition table for single partition in the drive */
 8778              		.loc 1 5729 0
 8779 0426 4AF65521 		movw	r1, #43605
 8780 042a 0198     		ldr	r0, [sp, #4]
 8781 042c FFF7FEFF 		bl	st_word
 8782              	.LVL1321:
5731:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_StHead] = 1;				/* Start head */
 8783              		.loc 1 5731 0
 8784 0430 0025     		movs	r5, #0
 8785              	.LVL1322:
 8786 0432 86F8BE51 		strb	r5, [r6, #446]
5732:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_StSec] = 1;					/* Start sector */
 8787              		.loc 1 5732 0
 8788 0436 0127     		movs	r7, #1
 8789              	.LVL1323:
 8790 0438 86F8BF71 		strb	r7, [r6, #447]
5733:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_StCyl] = 0;					/* Start cylinder */
 8791              		.loc 1 5733 0
 8792 043c 86F8C071 		strb	r7, [r6, #448]
5734:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_System] = sys;				/* System type */
 8793              		.loc 1 5734 0
 8794 0440 86F8C151 		strb	r5, [r6, #449]
5735:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = (b_vol + sz_vol) / (63 * 255);	/* (End CHS may be invalid) */
 8795              		.loc 1 5735 0
 8796 0444 86F8C281 		strb	r8, [r6, #450]
5736:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_EdHead] = 254;				/* End head */
 8797              		.loc 1 5736 0
 8798 0448 089B     		ldr	r3, [sp, #32]
 8799 044a 4B44     		add	r3, r3, r9
 8800 044c 43F6C162 		movw	r2, #16065
 8801 0450 B3FBF2F3 		udiv	r3, r3, r2
 8802              	.LVL1324:
5737:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_EdSec] = (BYTE)(n >> 2 | 63);	/* End sector */
 8803              		.loc 1 5737 0
 8804 0454 FE22     		movs	r2, #254
 8805 0456 86F8C321 		strb	r2, [r6, #451]
5738:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_EdCyl] = (BYTE)n;			/* End cylinder */
 8806              		.loc 1 5738 0
 8807 045a 9A08     		lsrs	r2, r3, #2
 8808 045c 42F03F02 		orr	r2, r2, #63
 8809 0460 86F8C421 		strb	r2, [r6, #452]
5739:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(pte + PTE_StLba, b_vol);	/* Start offset in LBA */
 8810              		.loc 1 5739 0
 8811 0464 86F8C531 		strb	r3, [r6, #453]
5740:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(pte + PTE_SizLba, sz_vol);	/* Size in sectors */
 8812              		.loc 1 5740 0
 8813 0468 4946     		mov	r1, r9
ARM GAS  /tmp/ccwdO2Zj.s 			page 282


 8814 046a 06F5E370 		add	r0, r6, #454
 8815 046e FFF7FEFF 		bl	st_dword
 8816              	.LVL1325:
5741:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, buf, 0, 1) != RES_OK) return FR_DISK_ERR;	/* Write it to the MBR */
 8817              		.loc 1 5741 0
 8818 0472 0899     		ldr	r1, [sp, #32]
 8819 0474 06F5E570 		add	r0, r6, #458
 8820 0478 FFF7FEFF 		bl	st_dword
 8821              	.LVL1326:
5742:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 8822              		.loc 1 5742 0
 8823 047c 3B46     		mov	r3, r7
 8824 047e 2A46     		mov	r2, r5
 8825 0480 3146     		mov	r1, r6
 8826 0482 2046     		mov	r0, r4
 8827 0484 FFF7FEFF 		bl	disk_write
 8828              	.LVL1327:
 8829 0488 0028     		cmp	r0, #0
 8830 048a 40F0DF80 		bne	.L814
 8831              	.LVL1328:
 8832              	.L780:
5746:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8833              		.loc 1 5746 0
 8834 048e 0022     		movs	r2, #0
 8835 0490 1146     		mov	r1, r2
 8836 0492 2046     		mov	r0, r4
 8837 0494 FFF7FEFF 		bl	disk_ioctl
 8838              	.LVL1329:
 8839 0498 0028     		cmp	r0, #0
 8840 049a 00F0D980 		beq	.L815
 8841 049e 0120     		movs	r0, #1
 8842 04a0 A1E0     		b	.L738
 8843              	.LVL1330:
 8844              	.L806:
5634:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (sz_vol < 0x10000) {
 8845              		.loc 1 5634 0
 8846 04a2 0021     		movs	r1, #0
 8847 04a4 27E7     		b	.L765
 8848              	.L766:
5638:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 8849              		.loc 1 5638 0
 8850 04a6 06F12000 		add	r0, r6, #32
 8851 04aa FFF7FEFF 		bl	st_dword
 8852              	.LVL1331:
 8853 04ae 2EE7     		b	.L767
 8854              	.L768:
5654:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BPB_FATSz16, (WORD)sz_fat);	/* FAT size [sector] */
 8855              		.loc 1 5654 0
 8856 04b0 FFF7FEFF 		bl	get_fattime
 8857              	.LVL1332:
 8858 04b4 0146     		mov	r1, r0
 8859 04b6 06F12700 		add	r0, r6, #39
 8860 04ba FFF7FEFF 		bl	st_dword
 8861              	.LVL1333:
5655:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BS_DrvNum] = 0x80;						/* Drive number (for int13) */
 8862              		.loc 1 5655 0
 8863 04be BDF81410 		ldrh	r1, [sp, #20]
ARM GAS  /tmp/ccwdO2Zj.s 			page 283


 8864 04c2 06F11600 		add	r0, r6, #22
 8865 04c6 FFF7FEFF 		bl	st_word
 8866              	.LVL1334:
5656:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BS_BootSig] = 0x29;						/* Extended boot signature */
 8867              		.loc 1 5656 0
 8868 04ca 8023     		movs	r3, #128
 8869 04cc 86F82430 		strb	r3, [r6, #36]
5657:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_cpy(buf + BS_VolLab, "NO NAME    " "FAT     ", 19);	/* Volume label, FAT signature */
 8870              		.loc 1 5657 0
 8871 04d0 2923     		movs	r3, #41
 8872 04d2 86F82630 		strb	r3, [r6, #38]
5658:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 8873              		.loc 1 5658 0
 8874 04d6 1322     		movs	r2, #19
 8875 04d8 5649     		ldr	r1, .L830+8
 8876 04da 06F12B00 		add	r0, r6, #43
 8877 04de FFF7FEFF 		bl	mem_cpy
 8878              	.LVL1335:
 8879 04e2 50E7     		b	.L769
 8880              	.LVL1336:
 8881              	.L824:
5665:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, ss);
 8882              		.loc 1 5665 0
 8883 04e4 0123     		movs	r3, #1
 8884 04e6 09F10602 		add	r2, r9, #6
 8885 04ea 3146     		mov	r1, r6
 8886 04ec 2046     		mov	r0, r4
 8887 04ee FFF7FEFF 		bl	disk_write
 8888              	.LVL1337:
5666:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + FSI_LeadSig, 0x41615252);
 8889              		.loc 1 5666 0
 8890 04f2 4FF40072 		mov	r2, #512
 8891 04f6 0021     		movs	r1, #0
 8892 04f8 3046     		mov	r0, r6
 8893 04fa FFF7FEFF 		bl	mem_set
 8894              	.LVL1338:
5667:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + FSI_StrucSig, 0x61417272);
 8895              		.loc 1 5667 0
 8896 04fe 4E49     		ldr	r1, .L830+12
 8897 0500 3046     		mov	r0, r6
 8898 0502 FFF7FEFF 		bl	st_dword
 8899              	.LVL1339:
5668:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + FSI_Free_Count, n_clst - 1);	/* Number of free clusters */
 8900              		.loc 1 5668 0
 8901 0506 4D49     		ldr	r1, .L830+16
 8902 0508 06F5F270 		add	r0, r6, #484
 8903 050c FFF7FEFF 		bl	st_dword
 8904              	.LVL1340:
5669:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + FSI_Nxt_Free, 2);			/* Last allocated cluster# */
 8905              		.loc 1 5669 0
 8906 0510 029B     		ldr	r3, [sp, #8]
 8907 0512 591E     		subs	r1, r3, #1
 8908 0514 06F5F470 		add	r0, r6, #488
 8909 0518 FFF7FEFF 		bl	st_dword
 8910              	.LVL1341:
5670:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BS_55AA, 0xAA55);
 8911              		.loc 1 5670 0
ARM GAS  /tmp/ccwdO2Zj.s 			page 284


 8912 051c 0221     		movs	r1, #2
 8913 051e 06F5F670 		add	r0, r6, #492
 8914 0522 FFF7FEFF 		bl	st_dword
 8915              	.LVL1342:
5671:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_write(pdrv, buf, b_vol + 7, 1);		/* Write backup FSINFO (VBR + 7) */
 8916              		.loc 1 5671 0
 8917 0526 4AF65521 		movw	r1, #43605
 8918 052a 0198     		ldr	r0, [sp, #4]
 8919 052c FFF7FEFF 		bl	st_word
 8920              	.LVL1343:
5672:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_write(pdrv, buf, b_vol + 1, 1);		/* Write original FSINFO (VBR + 1) */
 8921              		.loc 1 5672 0
 8922 0530 0123     		movs	r3, #1
 8923 0532 09F10702 		add	r2, r9, #7
 8924 0536 3146     		mov	r1, r6
 8925 0538 2046     		mov	r0, r4
 8926 053a FFF7FEFF 		bl	disk_write
 8927              	.LVL1344:
5673:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 8928              		.loc 1 5673 0
 8929 053e 0123     		movs	r3, #1
 8930 0540 09EB0302 		add	r2, r9, r3
 8931 0544 3146     		mov	r1, r6
 8932 0546 2046     		mov	r0, r4
 8933 0548 FFF7FEFF 		bl	disk_write
 8934              	.LVL1345:
 8935 054c 30E7     		b	.L770
 8936              	.LVL1346:
 8937              	.L776:
5680:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(buf + 0, 0xFFFFFFF8);	/* Entry 0 */
 8938              		.loc 1 5680 0
 8939 054e BBF1030F 		cmp	fp, #3
 8940 0552 23D0     		beq	.L826
5685:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 8941              		.loc 1 5685 0
 8942 0554 BBF1010F 		cmp	fp, #1
 8943 0558 31D0     		beq	.L827
 8944 055a 6FF00701 		mvn	r1, #7
 8945              	.L774:
5685:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 8946              		.loc 1 5685 0 is_stmt 0 discriminator 4
 8947 055e 3046     		mov	r0, r6
 8948 0560 FFF7FEFF 		bl	st_dword
 8949              	.LVL1347:
 8950              	.L773:
5685:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 8951              		.loc 1 5685 0
 8952 0564 DDF81480 		ldr	r8, [sp, #20]
 8953              	.L775:
 8954              	.LVL1348:
5689:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(pdrv, buf, sect, (UINT)n) != RES_OK) return FR_DISK_ERR;
 8955              		.loc 1 5689 0 is_stmt 1
 8956 0568 4746     		mov	r7, r8
 8957 056a D045     		cmp	r8, r10
 8958 056c 28BF     		it	cs
 8959 056e 5746     		movcs	r7, r10
 8960              	.LVL1349:
ARM GAS  /tmp/ccwdO2Zj.s 			page 285


5690:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_set(buf, 0, ss);
 8961              		.loc 1 5690 0
 8962 0570 3B46     		mov	r3, r7
 8963 0572 049A     		ldr	r2, [sp, #16]
 8964 0574 3146     		mov	r1, r6
 8965 0576 2046     		mov	r0, r4
 8966 0578 FFF7FEFF 		bl	disk_write
 8967              	.LVL1350:
 8968 057c 0028     		cmp	r0, #0
 8969 057e 61D1     		bne	.L809
5691:Middlewares/Third_Party/FatFs/src/ff.c **** 				sect += n; nsect -= n;
 8970              		.loc 1 5691 0
 8971 0580 4FF40072 		mov	r2, #512
 8972 0584 0021     		movs	r1, #0
 8973 0586 3046     		mov	r0, r6
 8974 0588 FFF7FEFF 		bl	mem_set
 8975              	.LVL1351:
5692:Middlewares/Third_Party/FatFs/src/ff.c **** 			} while (nsect);
 8976              		.loc 1 5692 0
 8977 058c 049B     		ldr	r3, [sp, #16]
 8978 058e 3B44     		add	r3, r3, r7
 8979 0590 0493     		str	r3, [sp, #16]
 8980              	.LVL1352:
5693:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 8981              		.loc 1 5693 0
 8982 0592 B8EB0708 		subs	r8, r8, r7
 8983              	.LVL1353:
 8984 0596 E7D1     		bne	.L775
5679:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT32) {
 8985              		.loc 1 5679 0 discriminator 2
 8986 0598 0135     		adds	r5, r5, #1
 8987              	.LVL1354:
 8988 059a 11E7     		b	.L771
 8989              	.LVL1355:
 8990              	.L826:
5681:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(buf + 4, 0xFFFFFFFF);	/* Entry 1 */
 8991              		.loc 1 5681 0
 8992 059c 6FF00701 		mvn	r1, #7
 8993 05a0 3046     		mov	r0, r6
 8994 05a2 FFF7FEFF 		bl	st_dword
 8995              	.LVL1356:
5682:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(buf + 8, 0x0FFFFFFF);	/* Entry 2 (root directory) */
 8996              		.loc 1 5682 0
 8997 05a6 4FF0FF31 		mov	r1, #-1
 8998 05aa 301D     		adds	r0, r6, #4
 8999 05ac FFF7FEFF 		bl	st_dword
 9000              	.LVL1357:
5683:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 9001              		.loc 1 5683 0
 9002 05b0 6FF07041 		mvn	r1, #-268435456
 9003 05b4 06F10800 		add	r0, r6, #8
 9004 05b8 FFF7FEFF 		bl	st_dword
 9005              	.LVL1358:
 9006 05bc D2E7     		b	.L773
 9007              	.L827:
5685:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 9008              		.loc 1 5685 0
ARM GAS  /tmp/ccwdO2Zj.s 			page 286


 9009 05be 2049     		ldr	r1, .L830+20
 9010 05c0 CDE7     		b	.L774
 9011              	.L825:
5697:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
 9012              		.loc 1 5697 0
 9013 05c2 4746     		mov	r7, r8
 9014 05c4 DDF81080 		ldr	r8, [sp, #16]
 9015 05c8 06E7     		b	.L778
 9016              	.LVL1359:
 9017              	.L811:
5710:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 9018              		.loc 1 5710 0
 9019 05ca 4FF00C08 		mov	r8, #12
 9020              	.LVL1360:
 9021 05ce 22E7     		b	.L779
 9022              	.LVL1361:
 9023              	.L812:
5713:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 9024              		.loc 1 5713 0
 9025 05d0 4FF00608 		mov	r8, #6
 9026              	.LVL1362:
 9027 05d4 1FE7     		b	.L779
 9028              	.LVL1363:
 9029              	.L813:
5715:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 9030              		.loc 1 5715 0
 9031 05d6 4FF00108 		mov	r8, #1
 9032              	.LVL1364:
 9033 05da 1CE7     		b	.L779
 9034              	.LVL1365:
 9035              	.L781:
5328:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (FatFs[vol]) FatFs[vol]->fs_type = 0;	/* Clear the volume */
 9036              		.loc 1 5328 0
 9037 05dc 0B20     		movs	r0, #11
 9038              	.LVL1366:
 9039 05de 02E0     		b	.L738
 9040              	.LVL1367:
 9041              	.L782:
5335:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_PROTECT) return FR_WRITE_PROTECTED;
 9042              		.loc 1 5335 0
 9043 05e0 0320     		movs	r0, #3
 9044              	.LVL1368:
 9045 05e2 00E0     		b	.L738
 9046              	.LVL1369:
 9047              	.L783:
5336:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_ioctl(pdrv, GET_BLOCK_SIZE, &sz_blk) != RES_OK || !sz_blk || sz_blk > 32768 || (sz_blk & 
 9048              		.loc 1 5336 0
 9049 05e4 0A20     		movs	r0, #10
 9050              	.LVL1370:
 9051              	.L738:
5749:Middlewares/Third_Party/FatFs/src/ff.c **** 
 9052              		.loc 1 5749 0
 9053 05e6 0BB0     		add	sp, sp, #44
 9054              	.LCFI121:
 9055              		.cfi_remember_state
 9056              		.cfi_def_cfa_offset 36
 9057              		@ sp needed
ARM GAS  /tmp/ccwdO2Zj.s 			page 287


 9058 05e8 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 9059              	.LVL1371:
 9060              	.L784:
 9061              	.LCFI122:
 9062              		.cfi_restore_state
5344:Middlewares/Third_Party/FatFs/src/ff.c **** 	au /= ss;	/* Cluster size in unit of sector */
 9063              		.loc 1 5344 0
 9064 05ec 1320     		movs	r0, #19
 9065 05ee FAE7     		b	.L738
 9066              	.L785:
 9067 05f0 1320     		movs	r0, #19
 9068 05f2 F8E7     		b	.L738
 9069              	.L786:
 9070 05f4 1320     		movs	r0, #19
 9071 05f6 F6E7     		b	.L738
 9072              	.LVL1372:
 9073              	.L787:
5351:Middlewares/Third_Party/FatFs/src/ff.c **** 
 9074              		.loc 1 5351 0
 9075 05f8 0E20     		movs	r0, #14
 9076 05fa F4E7     		b	.L738
 9077              	.L788:
5364:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_vol = (opt & FM_SFD) ? 0 : 63;		/* Volume start sector */
 9078              		.loc 1 5364 0
 9079 05fc 0120     		movs	r0, #1
 9080 05fe F2E7     		b	.L738
 9081              	.LVL1373:
 9082              	.L790:
5366:Middlewares/Third_Party/FatFs/src/ff.c **** 		sz_vol -= b_vol;						/* Volume size */
 9083              		.loc 1 5366 0
 9084 0600 0E20     		movs	r0, #14
 9085 0602 F0E7     		b	.L738
 9086              	.L791:
5369:Middlewares/Third_Party/FatFs/src/ff.c **** 
 9087              		.loc 1 5369 0
 9088 0604 0E20     		movs	r0, #14
 9089 0606 EEE7     		b	.L738
 9090              	.L792:
5378:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (opt & FM_FAT32) {	/* FAT32 possible? */
 9091              		.loc 1 5378 0
 9092 0608 1320     		movs	r0, #19
 9093 060a ECE7     		b	.L738
 9094              	.L795:
5384:Middlewares/Third_Party/FatFs/src/ff.c **** 		fmt = FS_FAT16;
 9095              		.loc 1 5384 0
 9096 060c 1320     		movs	r0, #19
 9097 060e EAE7     		b	.L738
 9098              	.LVL1374:
 9099              	.L797:
5564:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {				/* FAT12/16 volume */
 9100              		.loc 1 5564 0
 9101 0610 0E20     		movs	r0, #14
 9102 0612 E8E7     		b	.L738
 9103              	.LVL1375:
 9104              	.L799:
5593:Middlewares/Third_Party/FatFs/src/ff.c **** 			n_clst = (sz_vol - sz_rsv - sz_fat * n_fats - sz_dir) / pau;
 9105              		.loc 1 5593 0
ARM GAS  /tmp/ccwdO2Zj.s 			page 288


 9106 0614 0E20     		movs	r0, #14
 9107 0616 E6E7     		b	.L738
 9108              	.LVL1376:
 9109              	.L800:
5598:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 9110              		.loc 1 5598 0
 9111 0618 0E20     		movs	r0, #14
 9112 061a E4E7     		b	.L738
 9113              	.LVL1377:
 9114              	.L803:
5610:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 9115              		.loc 1 5610 0
 9116 061c 0E20     		movs	r0, #14
 9117 061e E2E7     		b	.L738
 9118              	.LVL1378:
 9119              	.L804:
5614:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 9120              		.loc 1 5614 0
 9121 0620 0E20     		movs	r0, #14
 9122 0622 E0E7     		b	.L738
 9123              	.LVL1379:
 9124              	.L805:
5617:Middlewares/Third_Party/FatFs/src/ff.c **** 
 9125              		.loc 1 5617 0
 9126 0624 0E20     		movs	r0, #14
 9127 0626 DEE7     		b	.L738
 9128              	.LVL1380:
 9129              	.L807:
5661:Middlewares/Third_Party/FatFs/src/ff.c **** 
 9130              		.loc 1 5661 0
 9131 0628 0120     		movs	r0, #1
 9132 062a DCE7     		b	.L738
 9133              	.L831:
 9134              		.align	2
 9135              	.L830:
 9136 062c 00000000 		.word	.LC1
 9137 0630 0C000000 		.word	.LC2
 9138 0634 20000000 		.word	.LC3
 9139 0638 52526141 		.word	1096897106
 9140 063c 72724161 		.word	1631679090
 9141 0640 F8FFFF00 		.word	16777208
 9142              	.LVL1381:
 9143              	.L809:
5690:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_set(buf, 0, ss);
 9144              		.loc 1 5690 0
 9145 0644 0120     		movs	r0, #1
 9146 0646 CEE7     		b	.L738
 9147              	.LVL1382:
 9148              	.L810:
5700:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += n; nsect -= n;
 9149              		.loc 1 5700 0
 9150 0648 0120     		movs	r0, #1
 9151 064a CCE7     		b	.L738
 9152              	.LVL1383:
 9153              	.L814:
5742:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 9154              		.loc 1 5742 0
ARM GAS  /tmp/ccwdO2Zj.s 			page 289


 9155 064c 0120     		movs	r0, #1
 9156 064e CAE7     		b	.L738
 9157              	.LVL1384:
 9158              	.L815:
5748:Middlewares/Third_Party/FatFs/src/ff.c **** }
 9159              		.loc 1 5748 0
 9160 0650 0020     		movs	r0, #0
 9161 0652 C8E7     		b	.L738
 9162              		.cfi_endproc
 9163              	.LFE202:
 9165              		.section	.text.f_gets,"ax",%progbits
 9166              		.align	1
 9167              		.global	f_gets
 9168              		.syntax unified
 9169              		.thumb
 9170              		.thumb_func
 9171              		.fpu fpv5-sp-d16
 9173              	f_gets:
 9174              	.LFB203:
5835:Middlewares/Third_Party/FatFs/src/ff.c **** 	int n = 0;
 9175              		.loc 1 5835 0
 9176              		.cfi_startproc
 9177              		@ args = 0, pretend = 0, frame = 8
 9178              		@ frame_needed = 0, uses_anonymous_args = 0
 9179              	.LVL1385:
 9180 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 9181              	.LCFI123:
 9182              		.cfi_def_cfa_offset 24
 9183              		.cfi_offset 4, -24
 9184              		.cfi_offset 5, -20
 9185              		.cfi_offset 6, -16
 9186              		.cfi_offset 7, -12
 9187              		.cfi_offset 8, -8
 9188              		.cfi_offset 14, -4
 9189 0004 82B0     		sub	sp, sp, #8
 9190              	.LCFI124:
 9191              		.cfi_def_cfa_offset 32
 9192 0006 8046     		mov	r8, r0
 9193 0008 0E46     		mov	r6, r1
 9194 000a 1746     		mov	r7, r2
 9195              	.LVL1386:
5837:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE s[2];
 9196              		.loc 1 5837 0
 9197 000c 0446     		mov	r4, r0
5836:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR c, *p = buff;
 9198              		.loc 1 5836 0
 9199 000e 0025     		movs	r5, #0
5842:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE
 9200              		.loc 1 5842 0
 9201 0010 01E0     		b	.L833
 9202              	.LVL1387:
 9203              	.L838:
 9204 0012 2246     		mov	r2, r4
 9205              	.LVL1388:
 9206              	.L835:
 9207 0014 1446     		mov	r4, r2
 9208              	.LVL1389:
ARM GAS  /tmp/ccwdO2Zj.s 			page 290


 9209              	.L833:
 9210 0016 731E     		subs	r3, r6, #1
 9211 0018 AB42     		cmp	r3, r5
 9212 001a 12DD     		ble	.L834
5887:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rc != 1) break;
 9213              		.loc 1 5887 0
 9214 001c 6B46     		mov	r3, sp
 9215 001e 0122     		movs	r2, #1
 9216 0020 01A9     		add	r1, sp, #4
 9217 0022 3846     		mov	r0, r7
 9218 0024 FFF7FEFF 		bl	f_read
 9219              	.LVL1390:
5888:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = s[0];
 9220              		.loc 1 5888 0
 9221 0028 009B     		ldr	r3, [sp]
 9222 002a 012B     		cmp	r3, #1
 9223 002c 09D1     		bne	.L834
5889:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 9224              		.loc 1 5889 0
 9225 002e 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 9226              	.LVL1391:
5891:Middlewares/Third_Party/FatFs/src/ff.c **** 		*p++ = c;
 9227              		.loc 1 5891 0
 9228 0032 0D2B     		cmp	r3, #13
 9229 0034 EDD0     		beq	.L838
5892:Middlewares/Third_Party/FatFs/src/ff.c **** 		n++;
 9230              		.loc 1 5892 0
 9231 0036 621C     		adds	r2, r4, #1
 9232              	.LVL1392:
 9233 0038 2370     		strb	r3, [r4]
5893:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == '\n') break;		/* Break on EOL */
 9234              		.loc 1 5893 0
 9235 003a 0135     		adds	r5, r5, #1
 9236              	.LVL1393:
5894:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 9237              		.loc 1 5894 0
 9238 003c 0A2B     		cmp	r3, #10
 9239 003e E9D1     		bne	.L835
5892:Middlewares/Third_Party/FatFs/src/ff.c **** 		n++;
 9240              		.loc 1 5892 0
 9241 0040 1446     		mov	r4, r2
 9242              	.LVL1394:
 9243              	.L834:
5896:Middlewares/Third_Party/FatFs/src/ff.c **** 	return n ? buff : 0;			/* When no data read (eof or error), return with error. */
 9244              		.loc 1 5896 0
 9245 0042 0023     		movs	r3, #0
 9246 0044 2370     		strb	r3, [r4]
5897:Middlewares/Third_Party/FatFs/src/ff.c **** }
 9247              		.loc 1 5897 0
 9248 0046 1DB1     		cbz	r5, .L840
 9249 0048 4046     		mov	r0, r8
 9250              	.L832:
5898:Middlewares/Third_Party/FatFs/src/ff.c **** 
 9251              		.loc 1 5898 0
 9252 004a 02B0     		add	sp, sp, #8
 9253              	.LCFI125:
 9254              		.cfi_remember_state
ARM GAS  /tmp/ccwdO2Zj.s 			page 291


 9255              		.cfi_def_cfa_offset 24
 9256              		@ sp needed
 9257 004c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 9258              	.LVL1395:
 9259              	.L840:
 9260              	.LCFI126:
 9261              		.cfi_restore_state
5897:Middlewares/Third_Party/FatFs/src/ff.c **** }
 9262              		.loc 1 5897 0
 9263 0050 0020     		movs	r0, #0
 9264 0052 FAE7     		b	.L832
 9265              		.cfi_endproc
 9266              	.LFE203:
 9268              		.section	.text.f_putc,"ax",%progbits
 9269              		.align	1
 9270              		.global	f_putc
 9271              		.syntax unified
 9272              		.thumb
 9273              		.thumb_func
 9274              		.fpu fpv5-sp-d16
 9276              	f_putc:
 9277              	.LFB207:
5995:Middlewares/Third_Party/FatFs/src/ff.c **** 
5996:Middlewares/Third_Party/FatFs/src/ff.c **** 
5997:Middlewares/Third_Party/FatFs/src/ff.c **** 
5998:Middlewares/Third_Party/FatFs/src/ff.c **** int f_putc (
5999:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR c,	/* A character to be output */
6000:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp		/* Pointer to the file object */
6001:Middlewares/Third_Party/FatFs/src/ff.c **** )
6002:Middlewares/Third_Party/FatFs/src/ff.c **** {
 9278              		.loc 1 6002 0
 9279              		.cfi_startproc
 9280              		@ args = 0, pretend = 0, frame = 80
 9281              		@ frame_needed = 0, uses_anonymous_args = 0
 9282              	.LVL1396:
 9283 0000 10B5     		push	{r4, lr}
 9284              	.LCFI127:
 9285              		.cfi_def_cfa_offset 8
 9286              		.cfi_offset 4, -8
 9287              		.cfi_offset 14, -4
 9288 0002 94B0     		sub	sp, sp, #80
 9289              	.LCFI128:
 9290              		.cfi_def_cfa_offset 88
 9291 0004 0446     		mov	r4, r0
6003:Middlewares/Third_Party/FatFs/src/ff.c **** 	putbuff pb;
6004:Middlewares/Third_Party/FatFs/src/ff.c **** 
6005:Middlewares/Third_Party/FatFs/src/ff.c **** 
6006:Middlewares/Third_Party/FatFs/src/ff.c **** 	putc_init(&pb, fp);
 9292              		.loc 1 6006 0
 9293 0006 01A8     		add	r0, sp, #4
 9294              	.LVL1397:
 9295 0008 FFF7FEFF 		bl	putc_init
 9296              	.LVL1398:
6007:Middlewares/Third_Party/FatFs/src/ff.c **** 	putc_bfd(&pb, c);	/* Put the character */
 9297              		.loc 1 6007 0
 9298 000c 2146     		mov	r1, r4
 9299 000e 01A8     		add	r0, sp, #4
ARM GAS  /tmp/ccwdO2Zj.s 			page 292


 9300 0010 FFF7FEFF 		bl	putc_bfd
 9301              	.LVL1399:
6008:Middlewares/Third_Party/FatFs/src/ff.c **** 	return putc_flush(&pb);
 9302              		.loc 1 6008 0
 9303 0014 01A8     		add	r0, sp, #4
 9304 0016 FFF7FEFF 		bl	putc_flush
 9305              	.LVL1400:
6009:Middlewares/Third_Party/FatFs/src/ff.c **** }
 9306              		.loc 1 6009 0
 9307 001a 14B0     		add	sp, sp, #80
 9308              	.LCFI129:
 9309              		.cfi_def_cfa_offset 8
 9310              		@ sp needed
 9311 001c 10BD     		pop	{r4, pc}
 9312              		.cfi_endproc
 9313              	.LFE207:
 9315              		.section	.text.f_puts,"ax",%progbits
 9316              		.align	1
 9317              		.global	f_puts
 9318              		.syntax unified
 9319              		.thumb
 9320              		.thumb_func
 9321              		.fpu fpv5-sp-d16
 9323              	f_puts:
 9324              	.LFB208:
6010:Middlewares/Third_Party/FatFs/src/ff.c **** 
6011:Middlewares/Third_Party/FatFs/src/ff.c **** 
6012:Middlewares/Third_Party/FatFs/src/ff.c **** 
6013:Middlewares/Third_Party/FatFs/src/ff.c **** 
6014:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
6015:Middlewares/Third_Party/FatFs/src/ff.c **** /* Put a string to the file                                              */
6016:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
6017:Middlewares/Third_Party/FatFs/src/ff.c **** 
6018:Middlewares/Third_Party/FatFs/src/ff.c **** int f_puts (
6019:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* str,	/* Pointer to the string to be output */
6020:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp				/* Pointer to the file object */
6021:Middlewares/Third_Party/FatFs/src/ff.c **** )
6022:Middlewares/Third_Party/FatFs/src/ff.c **** {
 9325              		.loc 1 6022 0
 9326              		.cfi_startproc
 9327              		@ args = 0, pretend = 0, frame = 80
 9328              		@ frame_needed = 0, uses_anonymous_args = 0
 9329              	.LVL1401:
 9330 0000 10B5     		push	{r4, lr}
 9331              	.LCFI130:
 9332              		.cfi_def_cfa_offset 8
 9333              		.cfi_offset 4, -8
 9334              		.cfi_offset 14, -4
 9335 0002 94B0     		sub	sp, sp, #80
 9336              	.LCFI131:
 9337              		.cfi_def_cfa_offset 88
 9338 0004 0446     		mov	r4, r0
6023:Middlewares/Third_Party/FatFs/src/ff.c **** 	putbuff pb;
6024:Middlewares/Third_Party/FatFs/src/ff.c **** 
6025:Middlewares/Third_Party/FatFs/src/ff.c **** 
6026:Middlewares/Third_Party/FatFs/src/ff.c **** 	putc_init(&pb, fp);
 9339              		.loc 1 6026 0
ARM GAS  /tmp/ccwdO2Zj.s 			page 293


 9340 0006 01A8     		add	r0, sp, #4
 9341              	.LVL1402:
 9342 0008 FFF7FEFF 		bl	putc_init
 9343              	.LVL1403:
6027:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (*str) putc_bfd(&pb, *str++);		/* Put the string */
 9344              		.loc 1 6027 0
 9345 000c 03E0     		b	.L845
 9346              	.L846:
 9347              		.loc 1 6027 0 is_stmt 0 discriminator 2
 9348 000e 0134     		adds	r4, r4, #1
 9349              	.LVL1404:
 9350 0010 01A8     		add	r0, sp, #4
 9351 0012 FFF7FEFF 		bl	putc_bfd
 9352              	.LVL1405:
 9353              	.L845:
 9354              		.loc 1 6027 0 discriminator 1
 9355 0016 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 9356 0018 0029     		cmp	r1, #0
 9357 001a F8D1     		bne	.L846
6028:Middlewares/Third_Party/FatFs/src/ff.c **** 	return putc_flush(&pb);
 9358              		.loc 1 6028 0 is_stmt 1
 9359 001c 01A8     		add	r0, sp, #4
 9360 001e FFF7FEFF 		bl	putc_flush
 9361              	.LVL1406:
6029:Middlewares/Third_Party/FatFs/src/ff.c **** }
 9362              		.loc 1 6029 0
 9363 0022 14B0     		add	sp, sp, #80
 9364              	.LCFI132:
 9365              		.cfi_def_cfa_offset 8
 9366              		@ sp needed
 9367 0024 10BD     		pop	{r4, pc}
 9368              		.cfi_endproc
 9369              	.LFE208:
 9371              		.section	.text.f_printf,"ax",%progbits
 9372              		.align	1
 9373              		.global	f_printf
 9374              		.syntax unified
 9375              		.thumb
 9376              		.thumb_func
 9377              		.fpu fpv5-sp-d16
 9379              	f_printf:
 9380              	.LFB209:
6030:Middlewares/Third_Party/FatFs/src/ff.c **** 
6031:Middlewares/Third_Party/FatFs/src/ff.c **** 
6032:Middlewares/Third_Party/FatFs/src/ff.c **** 
6033:Middlewares/Third_Party/FatFs/src/ff.c **** 
6034:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
6035:Middlewares/Third_Party/FatFs/src/ff.c **** /* Put a formatted string to the file                                    */
6036:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
6037:Middlewares/Third_Party/FatFs/src/ff.c **** 
6038:Middlewares/Third_Party/FatFs/src/ff.c **** int f_printf (
6039:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp,			/* Pointer to the file object */
6040:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* fmt,	/* Pointer to the format string */
6041:Middlewares/Third_Party/FatFs/src/ff.c **** 	...					/* Optional arguments... */
6042:Middlewares/Third_Party/FatFs/src/ff.c **** )
6043:Middlewares/Third_Party/FatFs/src/ff.c **** {
 9381              		.loc 1 6043 0
ARM GAS  /tmp/ccwdO2Zj.s 			page 294


 9382              		.cfi_startproc
 9383              		@ args = 4, pretend = 12, frame = 112
 9384              		@ frame_needed = 0, uses_anonymous_args = 1
 9385              	.LVL1407:
 9386 0000 0EB4     		push	{r1, r2, r3}
 9387              	.LCFI133:
 9388              		.cfi_def_cfa_offset 12
 9389              		.cfi_offset 1, -12
 9390              		.cfi_offset 2, -8
 9391              		.cfi_offset 3, -4
 9392 0002 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 9393              	.LCFI134:
 9394              		.cfi_def_cfa_offset 44
 9395              		.cfi_offset 4, -44
 9396              		.cfi_offset 5, -40
 9397              		.cfi_offset 6, -36
 9398              		.cfi_offset 7, -32
 9399              		.cfi_offset 8, -28
 9400              		.cfi_offset 9, -24
 9401              		.cfi_offset 10, -20
 9402              		.cfi_offset 14, -16
 9403 0006 9DB0     		sub	sp, sp, #116
 9404              	.LCFI135:
 9405              		.cfi_def_cfa_offset 160
 9406 0008 25AC     		add	r4, sp, #148
 9407 000a 54F8045B 		ldr	r5, [r4], #4
6044:Middlewares/Third_Party/FatFs/src/ff.c **** 	va_list arp;
6045:Middlewares/Third_Party/FatFs/src/ff.c **** 	putbuff pb;
6046:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE f, r;
6047:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, j, w;
6048:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD v;
6049:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR c, d, str[32], *p;
6050:Middlewares/Third_Party/FatFs/src/ff.c **** 
6051:Middlewares/Third_Party/FatFs/src/ff.c **** 
6052:Middlewares/Third_Party/FatFs/src/ff.c **** 	putc_init(&pb, fp);
 9408              		.loc 1 6052 0
 9409 000e 0146     		mov	r1, r0
 9410 0010 08A8     		add	r0, sp, #32
 9411              	.LVL1408:
 9412 0012 FFF7FEFF 		bl	putc_init
 9413              	.LVL1409:
6053:Middlewares/Third_Party/FatFs/src/ff.c **** 
6054:Middlewares/Third_Party/FatFs/src/ff.c **** 	va_start(arp, fmt);
 9414              		.loc 1 6054 0
 9415 0016 1B94     		str	r4, [sp, #108]
 9416 0018 03E0     		b	.L849
 9417              	.LVL1410:
 9418              	.L898:
6055:Middlewares/Third_Party/FatFs/src/ff.c **** 
6056:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
6057:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = *fmt++;
6058:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 0) break;			/* End of string */
6059:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c != '%') {				/* Non escape character */
6060:Middlewares/Third_Party/FatFs/src/ff.c **** 			putc_bfd(&pb, c);
 9419              		.loc 1 6060 0
 9420 001a 08A8     		add	r0, sp, #32
 9421 001c FFF7FEFF 		bl	putc_bfd
ARM GAS  /tmp/ccwdO2Zj.s 			page 295


 9422              	.LVL1411:
6057:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 0) break;			/* End of string */
 9423              		.loc 1 6057 0
 9424 0020 2546     		mov	r5, r4
 9425              	.LVL1412:
 9426              	.L849:
 9427 0022 6C1C     		adds	r4, r5, #1
 9428              	.LVL1413:
 9429 0024 2978     		ldrb	r1, [r5]	@ zero_extendqisi2
 9430              	.LVL1414:
6058:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c != '%') {				/* Non escape character */
 9431              		.loc 1 6058 0
 9432 0026 0029     		cmp	r1, #0
 9433 0028 00F00881 		beq	.L850
6059:Middlewares/Third_Party/FatFs/src/ff.c **** 			putc_bfd(&pb, c);
 9434              		.loc 1 6059 0
 9435 002c 2529     		cmp	r1, #37
 9436 002e F4D1     		bne	.L898
 9437              	.LVL1415:
6061:Middlewares/Third_Party/FatFs/src/ff.c **** 			continue;
6062:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
6063:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = f = 0;
6064:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = *fmt++;
 9438              		.loc 1 6064 0
 9439 0030 AB1C     		adds	r3, r5, #2
 9440              	.LVL1416:
 9441 0032 6978     		ldrb	r1, [r5, #1]	@ zero_extendqisi2
 9442              	.LVL1417:
6065:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == '0') {				/* Flag: '0' padding */
 9443              		.loc 1 6065 0
 9444 0034 3029     		cmp	r1, #48
 9445 0036 05D0     		beq	.L899
6066:Middlewares/Third_Party/FatFs/src/ff.c **** 			f = 1; c = *fmt++;
6067:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
6068:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c == '-') {			/* Flag: left justified */
 9446              		.loc 1 6068 0
 9447 0038 2D29     		cmp	r1, #45
 9448 003a 07D0     		beq	.L900
6064:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == '0') {				/* Flag: '0' padding */
 9449              		.loc 1 6064 0
 9450 003c 1D46     		mov	r5, r3
6063:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = *fmt++;
 9451              		.loc 1 6063 0
 9452 003e 0026     		movs	r6, #0
 9453              	.LVL1418:
 9454              	.L854:
6066:Middlewares/Third_Party/FatFs/src/ff.c **** 			f = 1; c = *fmt++;
 9455              		.loc 1 6066 0
 9456 0040 0024     		movs	r4, #0
 9457 0042 0FE0     		b	.L855
 9458              	.LVL1419:
 9459              	.L899:
 9460 0044 A978     		ldrb	r1, [r5, #2]	@ zero_extendqisi2
 9461              	.LVL1420:
 9462 0046 0335     		adds	r5, r5, #3
 9463              	.LVL1421:
 9464 0048 0126     		movs	r6, #1
ARM GAS  /tmp/ccwdO2Zj.s 			page 296


 9465 004a F9E7     		b	.L854
 9466              	.LVL1422:
 9467              	.L900:
6069:Middlewares/Third_Party/FatFs/src/ff.c **** 				f = 2; c = *fmt++;
 9468              		.loc 1 6069 0
 9469 004c A978     		ldrb	r1, [r5, #2]	@ zero_extendqisi2
 9470              	.LVL1423:
 9471 004e 0335     		adds	r5, r5, #3
 9472              	.LVL1424:
 9473 0050 0226     		movs	r6, #2
 9474 0052 F5E7     		b	.L854
 9475              	.LVL1425:
 9476              	.L856:
6070:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
6071:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
6072:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (IsDigit(c)) {		/* Precision */
6073:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = w * 10 + c - '0';
 9477              		.loc 1 6073 0
 9478 0054 04EB8404 		add	r4, r4, r4, lsl #2
 9479              	.LVL1426:
 9480 0058 6300     		lsls	r3, r4, #1
 9481 005a 1944     		add	r1, r1, r3
 9482              	.LVL1427:
 9483 005c A1F13004 		sub	r4, r1, #48
 9484              	.LVL1428:
6074:Middlewares/Third_Party/FatFs/src/ff.c **** 			c = *fmt++;
 9485              		.loc 1 6074 0
 9486 0060 2978     		ldrb	r1, [r5]	@ zero_extendqisi2
 9487              	.LVL1429:
 9488 0062 0135     		adds	r5, r5, #1
 9489              	.LVL1430:
 9490              	.L855:
6072:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = w * 10 + c - '0';
 9491              		.loc 1 6072 0
 9492 0064 A1F13003 		sub	r3, r1, #48
 9493 0068 DBB2     		uxtb	r3, r3
 9494 006a 092B     		cmp	r3, #9
 9495 006c F2D9     		bls	.L856
6075:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
6076:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 'l' || c == 'L') {	/* Prefix: Size is long int */
 9496              		.loc 1 6076 0
 9497 006e 4C29     		cmp	r1, #76
 9498 0070 18BF     		it	ne
 9499 0072 6C29     		cmpne	r1, #108
 9500 0074 03D1     		bne	.L857
6077:Middlewares/Third_Party/FatFs/src/ff.c **** 			f |= 4; c = *fmt++;
 9501              		.loc 1 6077 0
 9502 0076 46F00406 		orr	r6, r6, #4
 9503              	.LVL1431:
 9504 007a 2978     		ldrb	r1, [r5]	@ zero_extendqisi2
 9505              	.LVL1432:
 9506 007c 0135     		adds	r5, r5, #1
 9507              	.LVL1433:
 9508              	.L857:
6078:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
6079:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!c) break;
 9509              		.loc 1 6079 0
ARM GAS  /tmp/ccwdO2Zj.s 			page 297


 9510 007e 0029     		cmp	r1, #0
 9511 0080 00F0DC80 		beq	.L850
 9512              	.LVL1434:
6080:Middlewares/Third_Party/FatFs/src/ff.c **** 		d = c;
6081:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (IsLower(d)) d -= 0x20;
 9513              		.loc 1 6081 0
 9514 0084 A1F16103 		sub	r3, r1, #97
 9515 0088 DBB2     		uxtb	r3, r3
 9516 008a 192B     		cmp	r3, #25
 9517 008c 14D8     		bhi	.L892
 9518              		.loc 1 6081 0 is_stmt 0 discriminator 1
 9519 008e A1F12003 		sub	r3, r1, #32
 9520 0092 DBB2     		uxtb	r3, r3
 9521              	.LVL1435:
 9522              	.L858:
6082:Middlewares/Third_Party/FatFs/src/ff.c **** 		switch (d) {				/* Type is... */
 9523              		.loc 1 6082 0 is_stmt 1
 9524 0094 A3F14202 		sub	r2, r3, #66
 9525 0098 162A     		cmp	r2, #22
 9526 009a 4CD8     		bhi	.L859
 9527 009c DFE802F0 		tbb	[pc, r2]
 9528              	.L861:
 9529 00a0 4F       		.byte	(.L860-.L861)/2
 9530 00a1 3D       		.byte	(.L862-.L861)/2
 9531 00a2 45       		.byte	(.L863-.L861)/2
 9532 00a3 4B       		.byte	(.L859-.L861)/2
 9533 00a4 4B       		.byte	(.L859-.L861)/2
 9534 00a5 4B       		.byte	(.L859-.L861)/2
 9535 00a6 4B       		.byte	(.L859-.L861)/2
 9536 00a7 4B       		.byte	(.L859-.L861)/2
 9537 00a8 4B       		.byte	(.L859-.L861)/2
 9538 00a9 4B       		.byte	(.L859-.L861)/2
 9539 00aa 4B       		.byte	(.L859-.L861)/2
 9540 00ab 4B       		.byte	(.L859-.L861)/2
 9541 00ac 4B       		.byte	(.L859-.L861)/2
 9542 00ad 52       		.byte	(.L893-.L861)/2
 9543 00ae 4B       		.byte	(.L859-.L861)/2
 9544 00af 4B       		.byte	(.L859-.L861)/2
 9545 00b0 4B       		.byte	(.L859-.L861)/2
 9546 00b1 0E       		.byte	(.L865-.L861)/2
 9547 00b2 4B       		.byte	(.L859-.L861)/2
 9548 00b3 45       		.byte	(.L863-.L861)/2
 9549 00b4 4B       		.byte	(.L859-.L861)/2
 9550 00b5 4B       		.byte	(.L859-.L861)/2
 9551 00b6 48       		.byte	(.L866-.L861)/2
 9552              	.LVL1436:
 9553 00b7 00       		.p2align 1
 9554              	.L892:
6080:Middlewares/Third_Party/FatFs/src/ff.c **** 		d = c;
 9555              		.loc 1 6080 0
 9556 00b8 0B46     		mov	r3, r1
 9557 00ba EBE7     		b	.L858
 9558              	.LVL1437:
 9559              	.L865:
6083:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'S' :					/* String */
6084:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = va_arg(arp, TCHAR*);
 9560              		.loc 1 6084 0
ARM GAS  /tmp/ccwdO2Zj.s 			page 298


 9561 00bc 1B9B     		ldr	r3, [sp, #108]
 9562              	.LVL1438:
 9563 00be 1A1D     		adds	r2, r3, #4
 9564 00c0 1B92     		str	r2, [sp, #108]
 9565 00c2 D3F80080 		ldr	r8, [r3]
 9566              	.LVL1439:
6085:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (j = 0; p[j]; j++) ;
 9567              		.loc 1 6085 0
 9568 00c6 0027     		movs	r7, #0
 9569 00c8 00E0     		b	.L867
 9570              	.LVL1440:
 9571              	.L868:
 9572              		.loc 1 6085 0 is_stmt 0 discriminator 3
 9573 00ca 0137     		adds	r7, r7, #1
 9574              	.LVL1441:
 9575              	.L867:
 9576              		.loc 1 6085 0 discriminator 1
 9577 00cc 18F80730 		ldrb	r3, [r8, r7]	@ zero_extendqisi2
 9578 00d0 002B     		cmp	r3, #0
 9579 00d2 FAD1     		bne	.L868
6086:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!(f & 2)) {
 9580              		.loc 1 6086 0 is_stmt 1
 9581 00d4 16F0020F 		tst	r6, #2
 9582 00d8 10D1     		bne	.L872
 9583 00da 05E0     		b	.L869
 9584              	.LVL1442:
 9585              	.L871:
6087:Middlewares/Third_Party/FatFs/src/ff.c **** 				while (j++ < w) putc_bfd(&pb, ' ');
 9586              		.loc 1 6087 0 discriminator 2
 9587 00dc 2021     		movs	r1, #32
 9588 00de 0DEB0100 		add	r0, sp, r1
 9589 00e2 FFF7FEFF 		bl	putc_bfd
 9590              	.LVL1443:
 9591 00e6 3746     		mov	r7, r6
 9592              	.LVL1444:
 9593              	.L869:
 9594              		.loc 1 6087 0 is_stmt 0 discriminator 1
 9595 00e8 7E1C     		adds	r6, r7, #1
 9596              	.LVL1445:
 9597 00ea A742     		cmp	r7, r4
 9598 00ec F6D3     		bcc	.L871
 9599              		.loc 1 6087 0
 9600 00ee 3746     		mov	r7, r6
 9601 00f0 04E0     		b	.L872
 9602              	.LVL1446:
 9603              	.L873:
6088:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
6089:Middlewares/Third_Party/FatFs/src/ff.c **** 			while (*p) putc_bfd(&pb, *p++);
 9604              		.loc 1 6089 0 is_stmt 1 discriminator 2
 9605 00f2 08F10108 		add	r8, r8, #1
 9606              	.LVL1447:
 9607 00f6 08A8     		add	r0, sp, #32
 9608 00f8 FFF7FEFF 		bl	putc_bfd
 9609              	.LVL1448:
 9610              	.L872:
 9611              		.loc 1 6089 0 is_stmt 0 discriminator 1
 9612 00fc 98F80010 		ldrb	r1, [r8]	@ zero_extendqisi2
ARM GAS  /tmp/ccwdO2Zj.s 			page 299


 9613 0100 0029     		cmp	r1, #0
 9614 0102 F6D1     		bne	.L873
 9615 0104 05E0     		b	.L874
 9616              	.LVL1449:
 9617              	.L875:
6090:Middlewares/Third_Party/FatFs/src/ff.c **** 			while (j++ < w) putc_bfd(&pb, ' ');
 9618              		.loc 1 6090 0 is_stmt 1 discriminator 2
 9619 0106 2021     		movs	r1, #32
 9620 0108 0DEB0100 		add	r0, sp, r1
 9621 010c FFF7FEFF 		bl	putc_bfd
 9622              	.LVL1450:
 9623 0110 3746     		mov	r7, r6
 9624              	.LVL1451:
 9625              	.L874:
 9626              		.loc 1 6090 0 is_stmt 0 discriminator 1
 9627 0112 7E1C     		adds	r6, r7, #1
 9628              	.LVL1452:
 9629 0114 A742     		cmp	r7, r4
 9630 0116 F6D3     		bcc	.L875
 9631 0118 83E7     		b	.L849
 9632              	.LVL1453:
 9633              	.L862:
6091:Middlewares/Third_Party/FatFs/src/ff.c **** 			continue;
6092:Middlewares/Third_Party/FatFs/src/ff.c **** 
6093:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'C' :					/* Character */
6094:Middlewares/Third_Party/FatFs/src/ff.c **** 			putc_bfd(&pb, (TCHAR)va_arg(arp, int)); continue;
 9634              		.loc 1 6094 0 is_stmt 1
 9635 011a 1B9B     		ldr	r3, [sp, #108]
 9636              	.LVL1454:
 9637 011c 1A1D     		adds	r2, r3, #4
 9638 011e 1B92     		str	r2, [sp, #108]
 9639 0120 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 9640              	.LVL1455:
 9641 0122 08A8     		add	r0, sp, #32
 9642 0124 FFF7FEFF 		bl	putc_bfd
 9643              	.LVL1456:
 9644 0128 7BE7     		b	.L849
 9645              	.LVL1457:
 9646              	.L863:
6095:Middlewares/Third_Party/FatFs/src/ff.c **** 
6096:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'B' :					/* Binary */
6097:Middlewares/Third_Party/FatFs/src/ff.c **** 			r = 2; break;
6098:Middlewares/Third_Party/FatFs/src/ff.c **** 
6099:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'O' :					/* Octal */
6100:Middlewares/Third_Party/FatFs/src/ff.c **** 			r = 8; break;
6101:Middlewares/Third_Party/FatFs/src/ff.c **** 
6102:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'D' :					/* Signed decimal */
6103:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'U' :					/* Unsigned decimal */
6104:Middlewares/Third_Party/FatFs/src/ff.c **** 			r = 10; break;
 9647              		.loc 1 6104 0
 9648 012a 4FF00A0E 		mov	lr, #10
 9649 012e 0BE0     		b	.L864
 9650              	.LVL1458:
 9651              	.L866:
6105:Middlewares/Third_Party/FatFs/src/ff.c **** 
6106:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'X' :					/* Hexdecimal */
6107:Middlewares/Third_Party/FatFs/src/ff.c **** 			r = 16; break;
ARM GAS  /tmp/ccwdO2Zj.s 			page 300


 9652              		.loc 1 6107 0
 9653 0130 4FF0100E 		mov	lr, #16
 9654 0134 08E0     		b	.L864
 9655              	.LVL1459:
 9656              	.L859:
6108:Middlewares/Third_Party/FatFs/src/ff.c **** 
6109:Middlewares/Third_Party/FatFs/src/ff.c **** 		default:					/* Unknown type (pass-through) */
6110:Middlewares/Third_Party/FatFs/src/ff.c **** 			putc_bfd(&pb, c); continue;
 9657              		.loc 1 6110 0
 9658 0136 08A8     		add	r0, sp, #32
 9659 0138 FFF7FEFF 		bl	putc_bfd
 9660              	.LVL1460:
 9661 013c 71E7     		b	.L849
 9662              	.LVL1461:
 9663              	.L860:
6097:Middlewares/Third_Party/FatFs/src/ff.c **** 
 9664              		.loc 1 6097 0
 9665 013e 4FF0020E 		mov	lr, #2
 9666 0142 01E0     		b	.L864
 9667              	.L893:
6100:Middlewares/Third_Party/FatFs/src/ff.c **** 
 9668              		.loc 1 6100 0
 9669 0144 4FF0080E 		mov	lr, #8
 9670              	.L864:
 9671              	.LVL1462:
6111:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
6112:Middlewares/Third_Party/FatFs/src/ff.c **** 
6113:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Get an argument and put it in numeral */
6114:Middlewares/Third_Party/FatFs/src/ff.c **** 		v = (f & 4) ? (DWORD)va_arg(arp, long) : ((d == 'D') ? (DWORD)(long)va_arg(arp, int) : (DWORD)va_
 9672              		.loc 1 6114 0
 9673 0148 16F0040F 		tst	r6, #4
 9674 014c 13D0     		beq	.L876
 9675 014e 1B9A     		ldr	r2, [sp, #108]
 9676 0150 101D     		adds	r0, r2, #4
 9677 0152 1B90     		str	r0, [sp, #108]
 9678 0154 D2F80080 		ldr	r8, [r2]
 9679              	.L877:
 9680              	.LVL1463:
6115:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (d == 'D' && (v & 0x80000000)) {
 9681              		.loc 1 6115 0 discriminator 8
 9682 0158 4FEAD872 		lsr	r2, r8, #31
 9683 015c 442B     		cmp	r3, #68
 9684 015e 14BF     		ite	ne
 9685 0160 0023     		movne	r3, #0
 9686 0162 02F00103 		andeq	r3, r2, #1
 9687              	.LVL1464:
 9688 0166 1BB1     		cbz	r3, .L879
6116:Middlewares/Third_Party/FatFs/src/ff.c **** 			v = 0 - v;
 9689              		.loc 1 6116 0
 9690 0168 C8F10008 		rsb	r8, r8, #0
 9691              	.LVL1465:
6117:Middlewares/Third_Party/FatFs/src/ff.c **** 			f |= 8;
 9692              		.loc 1 6117 0
 9693 016c 46F00806 		orr	r6, r6, #8
 9694              	.LVL1466:
 9695              	.L879:
6118:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
ARM GAS  /tmp/ccwdO2Zj.s 			page 301


6119:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = 0;
 9696              		.loc 1 6119 0
 9697 0170 4FF0000C 		mov	ip, #0
 9698 0174 20E0     		b	.L882
 9699              	.LVL1467:
 9700              	.L876:
6114:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (d == 'D' && (v & 0x80000000)) {
 9701              		.loc 1 6114 0 discriminator 2
 9702 0176 442B     		cmp	r3, #68
 9703 0178 05D0     		beq	.L901
6114:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (d == 'D' && (v & 0x80000000)) {
 9704              		.loc 1 6114 0 is_stmt 0
 9705 017a 1B9A     		ldr	r2, [sp, #108]
 9706 017c 101D     		adds	r0, r2, #4
 9707 017e 1B90     		str	r0, [sp, #108]
 9708 0180 D2F80080 		ldr	r8, [r2]
 9709 0184 E8E7     		b	.L877
 9710              	.L901:
 9711 0186 1B9A     		ldr	r2, [sp, #108]
 9712 0188 101D     		adds	r0, r2, #4
 9713 018a 1B90     		str	r0, [sp, #108]
 9714 018c D2F80080 		ldr	r8, [r2]
 9715 0190 E2E7     		b	.L877
 9716              	.LVL1468:
 9717              	.L903:
6120:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
6121:Middlewares/Third_Party/FatFs/src/ff.c **** 			d = (TCHAR)(v % r); v /= r;
6122:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (d > 9) d += (c == 'x') ? 0x27 : 0x07;
 9718              		.loc 1 6122 0 is_stmt 1
 9719 0192 2722     		movs	r2, #39
 9720              	.L881:
 9721              		.loc 1 6122 0 is_stmt 0 discriminator 5
 9722 0194 1344     		add	r3, r3, r2
 9723              	.LVL1469:
 9724 0196 DBB2     		uxtb	r3, r3
 9725              	.LVL1470:
 9726              	.L880:
6123:Middlewares/Third_Party/FatFs/src/ff.c **** 			str[i++] = d + '0';
 9727              		.loc 1 6123 0 is_stmt 1
 9728 0198 0CF10107 		add	r7, ip, #1
 9729              	.LVL1471:
 9730 019c 3033     		adds	r3, r3, #48
 9731              	.LVL1472:
 9732 019e 1CAA     		add	r2, sp, #112
 9733 01a0 6244     		add	r2, r2, ip
 9734 01a2 02F8703C 		strb	r3, [r2, #-112]
6124:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (v && i < sizeof str / sizeof str[0]);
 9735              		.loc 1 6124 0
 9736 01a6 1F2F     		cmp	r7, #31
 9737 01a8 8CBF     		ite	hi
 9738 01aa 0022     		movhi	r2, #0
 9739 01ac 0122     		movls	r2, #1
 9740 01ae 0028     		cmp	r0, #0
 9741 01b0 08BF     		it	eq
 9742 01b2 0022     		moveq	r2, #0
 9743 01b4 62B1     		cbz	r2, .L902
6123:Middlewares/Third_Party/FatFs/src/ff.c **** 			str[i++] = d + '0';
ARM GAS  /tmp/ccwdO2Zj.s 			page 302


 9744              		.loc 1 6123 0
 9745 01b6 BC46     		mov	ip, r7
 9746              	.LVL1473:
 9747              	.L882:
6121:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (d > 9) d += (c == 'x') ? 0x27 : 0x07;
 9748              		.loc 1 6121 0
 9749 01b8 B8FBFEF0 		udiv	r0, r8, lr
 9750 01bc 0EFB1083 		mls	r3, lr, r0, r8
 9751 01c0 DBB2     		uxtb	r3, r3
 9752              	.LVL1474:
 9753 01c2 8046     		mov	r8, r0
 9754              	.LVL1475:
6122:Middlewares/Third_Party/FatFs/src/ff.c **** 			str[i++] = d + '0';
 9755              		.loc 1 6122 0
 9756 01c4 092B     		cmp	r3, #9
 9757 01c6 E7D9     		bls	.L880
6122:Middlewares/Third_Party/FatFs/src/ff.c **** 			str[i++] = d + '0';
 9758              		.loc 1 6122 0 is_stmt 0 discriminator 1
 9759 01c8 7829     		cmp	r1, #120
 9760 01ca E2D0     		beq	.L903
6122:Middlewares/Third_Party/FatFs/src/ff.c **** 			str[i++] = d + '0';
 9761              		.loc 1 6122 0
 9762 01cc 0722     		movs	r2, #7
 9763 01ce E1E7     		b	.L881
 9764              	.LVL1476:
 9765              	.L902:
6125:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (f & 8) str[i++] = '-';
 9766              		.loc 1 6125 0 is_stmt 1
 9767 01d0 16F0080F 		tst	r6, #8
 9768 01d4 06D0     		beq	.L883
 9769              	.LVL1477:
 9770              		.loc 1 6125 0 is_stmt 0 discriminator 1
 9771 01d6 1CAB     		add	r3, sp, #112
 9772 01d8 1F44     		add	r7, r7, r3
 9773 01da 2D23     		movs	r3, #45
 9774 01dc 07F8703C 		strb	r3, [r7, #-112]
 9775 01e0 0CF10207 		add	r7, ip, #2
 9776              	.LVL1478:
 9777              	.L883:
6126:Middlewares/Third_Party/FatFs/src/ff.c **** 		j = i; d = (f & 1) ? '0' : ' ';
 9778              		.loc 1 6126 0 is_stmt 1
 9779 01e4 16F0010F 		tst	r6, #1
 9780 01e8 03D0     		beq	.L896
 9781 01ea 4FF0300A 		mov	r10, #48
 9782              	.L884:
 9783              	.LVL1479:
 9784              		.loc 1 6126 0 is_stmt 0 discriminator 4
 9785 01ee B846     		mov	r8, r7
6127:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (!(f & 2) && j++ < w) putc_bfd(&pb, d);
 9786              		.loc 1 6127 0 is_stmt 1 discriminator 4
 9787 01f0 07E0     		b	.L885
 9788              	.LVL1480:
 9789              	.L896:
6126:Middlewares/Third_Party/FatFs/src/ff.c **** 		j = i; d = (f & 1) ? '0' : ' ';
 9790              		.loc 1 6126 0
 9791 01f2 4FF0200A 		mov	r10, #32
 9792 01f6 FAE7     		b	.L884
ARM GAS  /tmp/ccwdO2Zj.s 			page 303


 9793              	.LVL1481:
 9794              	.L887:
 9795              		.loc 1 6127 0 discriminator 3
 9796 01f8 5146     		mov	r1, r10
 9797 01fa 08A8     		add	r0, sp, #32
 9798 01fc FFF7FEFF 		bl	putc_bfd
 9799              	.LVL1482:
 9800 0200 C846     		mov	r8, r9
 9801              	.LVL1483:
 9802              	.L885:
 9803              		.loc 1 6127 0 is_stmt 0 discriminator 1
 9804 0202 16F0020F 		tst	r6, #2
 9805 0206 04D1     		bne	.L888
 9806              		.loc 1 6127 0 discriminator 2
 9807 0208 08F10109 		add	r9, r8, #1
 9808              	.LVL1484:
 9809 020c A045     		cmp	r8, r4
 9810 020e F3D3     		bcc	.L887
 9811              		.loc 1 6127 0
 9812 0210 C846     		mov	r8, r9
 9813              	.LVL1485:
 9814              	.L888:
6128:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
6129:Middlewares/Third_Party/FatFs/src/ff.c **** 			putc_bfd(&pb, str[--i]);
 9815              		.loc 1 6129 0 is_stmt 1 discriminator 1
 9816 0212 013F     		subs	r7, r7, #1
 9817              	.LVL1486:
 9818 0214 1CAB     		add	r3, sp, #112
 9819 0216 3B44     		add	r3, r3, r7
 9820 0218 13F8701C 		ldrb	r1, [r3, #-112]	@ zero_extendqisi2
 9821 021c 08A8     		add	r0, sp, #32
 9822 021e FFF7FEFF 		bl	putc_bfd
 9823              	.LVL1487:
6130:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (i);
 9824              		.loc 1 6130 0 discriminator 1
 9825 0222 002F     		cmp	r7, #0
 9826 0224 F5D1     		bne	.L888
 9827 0226 04E0     		b	.L889
 9828              	.LVL1488:
 9829              	.L890:
6131:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (j++ < w) putc_bfd(&pb, d);
 9830              		.loc 1 6131 0 discriminator 2
 9831 0228 5146     		mov	r1, r10
 9832 022a 08A8     		add	r0, sp, #32
 9833 022c FFF7FEFF 		bl	putc_bfd
 9834              	.LVL1489:
 9835 0230 B046     		mov	r8, r6
 9836              	.LVL1490:
 9837              	.L889:
 9838              		.loc 1 6131 0 is_stmt 0 discriminator 1
 9839 0232 08F10106 		add	r6, r8, #1
 9840              	.LVL1491:
 9841 0236 A045     		cmp	r8, r4
 9842 0238 F6D3     		bcc	.L890
 9843 023a F2E6     		b	.L849
 9844              	.LVL1492:
 9845              	.L850:
ARM GAS  /tmp/ccwdO2Zj.s 			page 304


6132:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
6133:Middlewares/Third_Party/FatFs/src/ff.c **** 
6134:Middlewares/Third_Party/FatFs/src/ff.c **** 	va_end(arp);
6135:Middlewares/Third_Party/FatFs/src/ff.c **** 
6136:Middlewares/Third_Party/FatFs/src/ff.c **** 	return putc_flush(&pb);
 9846              		.loc 1 6136 0 is_stmt 1
 9847 023c 08A8     		add	r0, sp, #32
 9848 023e FFF7FEFF 		bl	putc_flush
 9849              	.LVL1493:
6137:Middlewares/Third_Party/FatFs/src/ff.c **** }
 9850              		.loc 1 6137 0
 9851 0242 1DB0     		add	sp, sp, #116
 9852              	.LCFI136:
 9853              		.cfi_def_cfa_offset 44
 9854              		@ sp needed
 9855 0244 BDE8F047 		pop	{r4, r5, r6, r7, r8, r9, r10, lr}
 9856              	.LCFI137:
 9857              		.cfi_restore 14
 9858              		.cfi_restore 10
 9859              		.cfi_restore 9
 9860              		.cfi_restore 8
 9861              		.cfi_restore 7
 9862              		.cfi_restore 6
 9863              		.cfi_restore 5
 9864              		.cfi_restore 4
 9865              		.cfi_def_cfa_offset 12
 9866 0248 03B0     		add	sp, sp, #12
 9867              	.LCFI138:
 9868              		.cfi_restore 3
 9869              		.cfi_restore 2
 9870              		.cfi_restore 1
 9871              		.cfi_def_cfa_offset 0
 9872 024a 7047     		bx	lr
 9873              		.cfi_endproc
 9874              	.LFE209:
 9876              		.section	.bss.FatFs,"aw",%nobits
 9877              		.align	2
 9878              		.set	.LANCHOR2,. + 0
 9881              	FatFs:
 9882 0000 00000000 		.space	4
 9883              		.section	.bss.Files,"aw",%nobits
 9884              		.align	2
 9885              		.set	.LANCHOR0,. + 0
 9888              	Files:
 9889 0000 00000000 		.space	32
 9889      00000000 
 9889      00000000 
 9889      00000000 
 9889      00000000 
 9890              		.section	.bss.Fsid,"aw",%nobits
 9891              		.align	1
 9892              		.set	.LANCHOR3,. + 0
 9895              	Fsid:
 9896 0000 0000     		.space	2
 9897              		.section	.rodata.ExCvt,"a",%progbits
 9898              		.align	2
 9899              		.set	.LANCHOR1,. + 0
ARM GAS  /tmp/ccwdO2Zj.s 			page 305


 9902              	ExCvt:
 9903 0000 43       		.byte	67
 9904 0001 55       		.byte	85
 9905 0002 45       		.byte	69
 9906 0003 41       		.byte	65
 9907 0004 41       		.byte	65
 9908 0005 41       		.byte	65
 9909 0006 41       		.byte	65
 9910 0007 43       		.byte	67
 9911 0008 45       		.byte	69
 9912 0009 45       		.byte	69
 9913 000a 45       		.byte	69
 9914 000b 49       		.byte	73
 9915 000c 49       		.byte	73
 9916 000d 49       		.byte	73
 9917 000e 41       		.byte	65
 9918 000f 41       		.byte	65
 9919 0010 45       		.byte	69
 9920 0011 92       		.byte	-110
 9921 0012 92       		.byte	-110
 9922 0013 4F       		.byte	79
 9923 0014 4F       		.byte	79
 9924 0015 4F       		.byte	79
 9925 0016 55       		.byte	85
 9926 0017 55       		.byte	85
 9927 0018 59       		.byte	89
 9928 0019 4F       		.byte	79
 9929 001a 55       		.byte	85
 9930 001b 4F       		.byte	79
 9931 001c 9C       		.byte	-100
 9932 001d 4F       		.byte	79
 9933 001e 9E       		.byte	-98
 9934 001f 9F       		.byte	-97
 9935 0020 41       		.byte	65
 9936 0021 49       		.byte	73
 9937 0022 4F       		.byte	79
 9938 0023 55       		.byte	85
 9939 0024 A5       		.byte	-91
 9940 0025 A5       		.byte	-91
 9941 0026 A6       		.byte	-90
 9942 0027 A7       		.byte	-89
 9943 0028 A8       		.byte	-88
 9944 0029 A9       		.byte	-87
 9945 002a AA       		.byte	-86
 9946 002b AB       		.byte	-85
 9947 002c AC       		.byte	-84
 9948 002d AD       		.byte	-83
 9949 002e AE       		.byte	-82
 9950 002f AF       		.byte	-81
 9951 0030 B0       		.byte	-80
 9952 0031 B1       		.byte	-79
 9953 0032 B2       		.byte	-78
 9954 0033 B3       		.byte	-77
 9955 0034 B4       		.byte	-76
 9956 0035 41       		.byte	65
 9957 0036 41       		.byte	65
 9958 0037 41       		.byte	65
ARM GAS  /tmp/ccwdO2Zj.s 			page 306


 9959 0038 B8       		.byte	-72
 9960 0039 B9       		.byte	-71
 9961 003a BA       		.byte	-70
 9962 003b BB       		.byte	-69
 9963 003c BC       		.byte	-68
 9964 003d BD       		.byte	-67
 9965 003e BE       		.byte	-66
 9966 003f BF       		.byte	-65
 9967 0040 C0       		.byte	-64
 9968 0041 C1       		.byte	-63
 9969 0042 C2       		.byte	-62
 9970 0043 C3       		.byte	-61
 9971 0044 C4       		.byte	-60
 9972 0045 C5       		.byte	-59
 9973 0046 41       		.byte	65
 9974 0047 41       		.byte	65
 9975 0048 C8       		.byte	-56
 9976 0049 C9       		.byte	-55
 9977 004a CA       		.byte	-54
 9978 004b CB       		.byte	-53
 9979 004c CC       		.byte	-52
 9980 004d CD       		.byte	-51
 9981 004e CE       		.byte	-50
 9982 004f CF       		.byte	-49
 9983 0050 D1       		.byte	-47
 9984 0051 D1       		.byte	-47
 9985 0052 45       		.byte	69
 9986 0053 45       		.byte	69
 9987 0054 45       		.byte	69
 9988 0055 49       		.byte	73
 9989 0056 49       		.byte	73
 9990 0057 49       		.byte	73
 9991 0058 49       		.byte	73
 9992 0059 D9       		.byte	-39
 9993 005a DA       		.byte	-38
 9994 005b DB       		.byte	-37
 9995 005c DC       		.byte	-36
 9996 005d DD       		.byte	-35
 9997 005e 49       		.byte	73
 9998 005f DF       		.byte	-33
 9999 0060 4F       		.byte	79
 10000 0061 E1       		.byte	-31
 10001 0062 4F       		.byte	79
 10002 0063 4F       		.byte	79
 10003 0064 4F       		.byte	79
 10004 0065 4F       		.byte	79
 10005 0066 E6       		.byte	-26
 10006 0067 E8       		.byte	-24
 10007 0068 E8       		.byte	-24
 10008 0069 55       		.byte	85
 10009 006a 55       		.byte	85
 10010 006b 55       		.byte	85
 10011 006c 59       		.byte	89
 10012 006d 59       		.byte	89
 10013 006e EE       		.byte	-18
 10014 006f EF       		.byte	-17
 10015 0070 F0       		.byte	-16
ARM GAS  /tmp/ccwdO2Zj.s 			page 307


 10016 0071 F1       		.byte	-15
 10017 0072 F2       		.byte	-14
 10018 0073 F3       		.byte	-13
 10019 0074 F4       		.byte	-12
 10020 0075 F5       		.byte	-11
 10021 0076 F6       		.byte	-10
 10022 0077 F7       		.byte	-9
 10023 0078 F8       		.byte	-8
 10024 0079 F9       		.byte	-7
 10025 007a FA       		.byte	-6
 10026 007b FB       		.byte	-5
 10027 007c FC       		.byte	-4
 10028 007d FD       		.byte	-3
 10029 007e FE       		.byte	-2
 10030 007f FF       		.byte	-1
 10031              		.section	.rodata.create_name.str1.4,"aMS",%progbits,1
 10032              		.align	2
 10033              	.LC0:
 10034 0000 222A2B2C 		.ascii	"\"*+,:;<=>?[]|\177\000"
 10034      3A3B3C3D 
 10034      3E3F5B5D 
 10034      7C7F00
 10035              		.section	.rodata.cst.12568,"a",%progbits
 10036              		.align	2
 10037              		.set	.LANCHOR5,. + 0
 10040              	cst.12568:
 10041 0000 0100     		.short	1
 10042 0002 0400     		.short	4
 10043 0004 1000     		.short	16
 10044 0006 4000     		.short	64
 10045 0008 0001     		.short	256
 10046 000a 0002     		.short	512
 10047 000c 0000     		.short	0
 10048              		.section	.rodata.cst32.12569,"a",%progbits
 10049              		.align	2
 10050              		.set	.LANCHOR4,. + 0
 10053              	cst32.12569:
 10054 0000 0100     		.short	1
 10055 0002 0200     		.short	2
 10056 0004 0400     		.short	4
 10057 0006 0800     		.short	8
 10058 0008 1000     		.short	16
 10059 000a 2000     		.short	32
 10060 000c 0000     		.short	0
 10061              		.section	.rodata.f_mkfs.str1.4,"aMS",%progbits,1
 10062              		.align	2
 10063              	.LC1:
 10064 0000 EBFE904D 		.ascii	"\353\376\220MSDOS5.0\000"
 10064      53444F53 
 10064      352E3000 
 10065              	.LC2:
 10066 000c 4E4F204E 		.ascii	"NO NAME    FAT32   \000"
 10066      414D4520 
 10066      20202046 
 10066      41543332 
 10066      20202000 
 10067              	.LC3:
ARM GAS  /tmp/ccwdO2Zj.s 			page 308


 10068 0020 4E4F204E 		.ascii	"NO NAME    FAT     \000"
 10068      414D4520 
 10068      20202046 
 10068      41542020 
 10068      20202000 
 10069              		.text
 10070              	.Letext0:
 10071              		.file 2 "Middlewares/Third_Party/FatFs/src/integer.h"
 10072              		.file 3 "/usr/include/newlib/machine/_default_types.h"
 10073              		.file 4 "/usr/include/newlib/sys/_stdint.h"
 10074              		.file 5 "Drivers/CMSIS/Include/core_cm7.h"
 10075              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 10076              		.file 7 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 10077              		.file 8 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 10078              		.file 9 "Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h"
 10079              		.file 10 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 10080              		.file 11 "Middlewares/Third_Party/FatFs/src/ff.h"
 10081              		.file 12 "Middlewares/Third_Party/FatFs/src/diskio.h"
 10082              		.file 13 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stdarg.h"
 10083              		.file 14 "<built-in>"
ARM GAS  /tmp/ccwdO2Zj.s 			page 309


DEFINED SYMBOLS
                            *ABS*:0000000000000000 ff.c
     /tmp/ccwdO2Zj.s:18     .text.ld_word:0000000000000000 $t
     /tmp/ccwdO2Zj.s:24     .text.ld_word:0000000000000000 ld_word
     /tmp/ccwdO2Zj.s:47     .text.ld_dword:0000000000000000 $t
     /tmp/ccwdO2Zj.s:53     .text.ld_dword:0000000000000000 ld_dword
     /tmp/ccwdO2Zj.s:83     .text.st_word:0000000000000000 $t
     /tmp/ccwdO2Zj.s:89     .text.st_word:0000000000000000 st_word
     /tmp/ccwdO2Zj.s:110    .text.st_dword:0000000000000000 $t
     /tmp/ccwdO2Zj.s:116    .text.st_dword:0000000000000000 st_dword
     /tmp/ccwdO2Zj.s:145    .text.mem_cpy:0000000000000000 $t
     /tmp/ccwdO2Zj.s:151    .text.mem_cpy:0000000000000000 mem_cpy
     /tmp/ccwdO2Zj.s:183    .text.mem_set:0000000000000000 $t
     /tmp/ccwdO2Zj.s:189    .text.mem_set:0000000000000000 mem_set
     /tmp/ccwdO2Zj.s:213    .text.mem_cmp:0000000000000000 $t
     /tmp/ccwdO2Zj.s:219    .text.mem_cmp:0000000000000000 mem_cmp
     /tmp/ccwdO2Zj.s:269    .text.chk_chr:0000000000000000 $t
     /tmp/ccwdO2Zj.s:275    .text.chk_chr:0000000000000000 chk_chr
     /tmp/ccwdO2Zj.s:305    .text.chk_lock:0000000000000000 $t
     /tmp/ccwdO2Zj.s:311    .text.chk_lock:0000000000000000 chk_lock
     /tmp/ccwdO2Zj.s:427    .text.chk_lock:0000000000000070 $d
     /tmp/ccwdO2Zj.s:432    .text.enq_lock:0000000000000000 $t
     /tmp/ccwdO2Zj.s:438    .text.enq_lock:0000000000000000 enq_lock
     /tmp/ccwdO2Zj.s:475    .text.enq_lock:000000000000001c $d
     /tmp/ccwdO2Zj.s:480    .text.inc_lock:0000000000000000 $t
     /tmp/ccwdO2Zj.s:486    .text.inc_lock:0000000000000000 inc_lock
     /tmp/ccwdO2Zj.s:639    .text.inc_lock:00000000000000a0 $d
     /tmp/ccwdO2Zj.s:644    .text.dec_lock:0000000000000000 $t
     /tmp/ccwdO2Zj.s:650    .text.dec_lock:0000000000000000 dec_lock
     /tmp/ccwdO2Zj.s:715    .text.dec_lock:000000000000003c $d
     /tmp/ccwdO2Zj.s:720    .text.clear_lock:0000000000000000 $t
     /tmp/ccwdO2Zj.s:726    .text.clear_lock:0000000000000000 clear_lock
     /tmp/ccwdO2Zj.s:792    .text.clear_lock:0000000000000038 $d
     /tmp/ccwdO2Zj.s:797    .text.clust2sect:0000000000000000 $t
     /tmp/ccwdO2Zj.s:803    .text.clust2sect:0000000000000000 clust2sect
     /tmp/ccwdO2Zj.s:836    .text.clmt_clust:0000000000000000 $t
     /tmp/ccwdO2Zj.s:842    .text.clmt_clust:0000000000000000 clmt_clust
     /tmp/ccwdO2Zj.s:893    .text.ld_clust:0000000000000000 $t
     /tmp/ccwdO2Zj.s:899    .text.ld_clust:0000000000000000 ld_clust
     /tmp/ccwdO2Zj.s:944    .text.st_clust:0000000000000000 $t
     /tmp/ccwdO2Zj.s:950    .text.st_clust:0000000000000000 st_clust
     /tmp/ccwdO2Zj.s:994    .text.get_fileinfo:0000000000000000 $t
     /tmp/ccwdO2Zj.s:1000   .text.get_fileinfo:0000000000000000 get_fileinfo
     /tmp/ccwdO2Zj.s:1114   .text.create_name:0000000000000000 $t
     /tmp/ccwdO2Zj.s:1120   .text.create_name:0000000000000000 create_name
     /tmp/ccwdO2Zj.s:1301   .text.create_name:00000000000000cc $d
     /tmp/ccwdO2Zj.s:1307   .text.get_ldnumber:0000000000000000 $t
     /tmp/ccwdO2Zj.s:1313   .text.get_ldnumber:0000000000000000 get_ldnumber
     /tmp/ccwdO2Zj.s:1409   .text.putc_init:0000000000000000 $t
     /tmp/ccwdO2Zj.s:1415   .text.putc_init:0000000000000000 putc_init
     /tmp/ccwdO2Zj.s:1435   .text.lock_fs:0000000000000000 $t
     /tmp/ccwdO2Zj.s:1441   .text.lock_fs:0000000000000000 lock_fs
     /tmp/ccwdO2Zj.s:1477   .text.sync_window:0000000000000000 $t
     /tmp/ccwdO2Zj.s:1483   .text.sync_window:0000000000000000 sync_window
     /tmp/ccwdO2Zj.s:1573   .text.move_window:0000000000000000 $t
     /tmp/ccwdO2Zj.s:1579   .text.move_window:0000000000000000 move_window
     /tmp/ccwdO2Zj.s:1637   .text.check_fs:0000000000000000 $t
ARM GAS  /tmp/ccwdO2Zj.s 			page 310


     /tmp/ccwdO2Zj.s:1643   .text.check_fs:0000000000000000 check_fs
     /tmp/ccwdO2Zj.s:1726   .text.check_fs:0000000000000070 $d
     /tmp/ccwdO2Zj.s:1733   .text.find_volume:0000000000000000 $t
     /tmp/ccwdO2Zj.s:1739   .text.find_volume:0000000000000000 find_volume
     /tmp/ccwdO2Zj.s:2301   .text.find_volume:0000000000000304 $d
     /tmp/ccwdO2Zj.s:2309   .text.put_fat:0000000000000000 $t
     /tmp/ccwdO2Zj.s:2315   .text.put_fat:0000000000000000 put_fat
     /tmp/ccwdO2Zj.s:2513   .text.get_fat:0000000000000000 $t
     /tmp/ccwdO2Zj.s:2519   .text.get_fat:0000000000000000 get_fat
     /tmp/ccwdO2Zj.s:2685   .text.dir_sdi:0000000000000000 $t
     /tmp/ccwdO2Zj.s:2691   .text.dir_sdi:0000000000000000 dir_sdi
     /tmp/ccwdO2Zj.s:2848   .text.create_chain:0000000000000000 $t
     /tmp/ccwdO2Zj.s:2854   .text.create_chain:0000000000000000 create_chain
     /tmp/ccwdO2Zj.s:3038   .text.remove_chain:0000000000000000 $t
     /tmp/ccwdO2Zj.s:3044   .text.remove_chain:0000000000000000 remove_chain
     /tmp/ccwdO2Zj.s:3165   .text.dir_remove:0000000000000000 $t
     /tmp/ccwdO2Zj.s:3171   .text.dir_remove:0000000000000000 dir_remove
     /tmp/ccwdO2Zj.s:3214   .text.dir_next:0000000000000000 $t
     /tmp/ccwdO2Zj.s:3220   .text.dir_next:0000000000000000 dir_next
     /tmp/ccwdO2Zj.s:3449   .text.dir_find:0000000000000000 $t
     /tmp/ccwdO2Zj.s:3455   .text.dir_find:0000000000000000 dir_find
     /tmp/ccwdO2Zj.s:3541   .text.follow_path:0000000000000000 $t
     /tmp/ccwdO2Zj.s:3547   .text.follow_path:0000000000000000 follow_path
     /tmp/ccwdO2Zj.s:3673   .text.dir_alloc:0000000000000000 $t
     /tmp/ccwdO2Zj.s:3679   .text.dir_alloc:0000000000000000 dir_alloc
     /tmp/ccwdO2Zj.s:3769   .text.dir_register:0000000000000000 $t
     /tmp/ccwdO2Zj.s:3775   .text.dir_register:0000000000000000 dir_register
     /tmp/ccwdO2Zj.s:3838   .text.dir_read:0000000000000000 $t
     /tmp/ccwdO2Zj.s:3844   .text.dir_read:0000000000000000 dir_read
     /tmp/ccwdO2Zj.s:3941   .text.unlock_fs:0000000000000000 $t
     /tmp/ccwdO2Zj.s:3947   .text.unlock_fs:0000000000000000 unlock_fs
     /tmp/ccwdO2Zj.s:3988   .text.validate:0000000000000000 $t
     /tmp/ccwdO2Zj.s:3994   .text.validate:0000000000000000 validate
     /tmp/ccwdO2Zj.s:4101   .text.sync_fs:0000000000000000 $t
     /tmp/ccwdO2Zj.s:4107   .text.sync_fs:0000000000000000 sync_fs
     /tmp/ccwdO2Zj.s:4203   .text.sync_fs:0000000000000084 $d
     /tmp/ccwdO2Zj.s:4209   .text.f_mount:0000000000000000 $t
     /tmp/ccwdO2Zj.s:4216   .text.f_mount:0000000000000000 f_mount
     /tmp/ccwdO2Zj.s:4339   .text.f_mount:0000000000000088 $d
     /tmp/ccwdO2Zj.s:4344   .text.f_open:0000000000000000 $t
     /tmp/ccwdO2Zj.s:4351   .text.f_open:0000000000000000 f_open
     /tmp/ccwdO2Zj.s:4791   .text.f_read:0000000000000000 $t
     /tmp/ccwdO2Zj.s:4798   .text.f_read:0000000000000000 f_read
     /tmp/ccwdO2Zj.s:5157   .text.f_write:0000000000000000 $t
     /tmp/ccwdO2Zj.s:5164   .text.f_write:0000000000000000 f_write
     /tmp/ccwdO2Zj.s:5555   .text.putc_bfd:0000000000000000 $t
     /tmp/ccwdO2Zj.s:5561   .text.putc_bfd:0000000000000000 putc_bfd
     /tmp/ccwdO2Zj.s:5651   .text.putc_flush:0000000000000000 $t
     /tmp/ccwdO2Zj.s:5657   .text.putc_flush:0000000000000000 putc_flush
     /tmp/ccwdO2Zj.s:5727   .text.f_sync:0000000000000000 $t
     /tmp/ccwdO2Zj.s:5734   .text.f_sync:0000000000000000 f_sync
     /tmp/ccwdO2Zj.s:5875   .text.f_close:0000000000000000 $t
     /tmp/ccwdO2Zj.s:5882   .text.f_close:0000000000000000 f_close
     /tmp/ccwdO2Zj.s:5952   .text.f_lseek:0000000000000000 $t
     /tmp/ccwdO2Zj.s:5959   .text.f_lseek:0000000000000000 f_lseek
     /tmp/ccwdO2Zj.s:6555   .text.f_opendir:0000000000000000 $t
     /tmp/ccwdO2Zj.s:6562   .text.f_opendir:0000000000000000 f_opendir
ARM GAS  /tmp/ccwdO2Zj.s 			page 311


     /tmp/ccwdO2Zj.s:6699   .text.f_closedir:0000000000000000 $t
     /tmp/ccwdO2Zj.s:6706   .text.f_closedir:0000000000000000 f_closedir
     /tmp/ccwdO2Zj.s:6770   .text.f_readdir:0000000000000000 $t
     /tmp/ccwdO2Zj.s:6777   .text.f_readdir:0000000000000000 f_readdir
     /tmp/ccwdO2Zj.s:6871   .text.f_stat:0000000000000000 $t
     /tmp/ccwdO2Zj.s:6878   .text.f_stat:0000000000000000 f_stat
     /tmp/ccwdO2Zj.s:6959   .text.f_getfree:0000000000000000 $t
     /tmp/ccwdO2Zj.s:6966   .text.f_getfree:0000000000000000 f_getfree
     /tmp/ccwdO2Zj.s:7185   .text.f_truncate:0000000000000000 $t
     /tmp/ccwdO2Zj.s:7192   .text.f_truncate:0000000000000000 f_truncate
     /tmp/ccwdO2Zj.s:7371   .text.f_unlink:0000000000000000 $t
     /tmp/ccwdO2Zj.s:7378   .text.f_unlink:0000000000000000 f_unlink
     /tmp/ccwdO2Zj.s:7564   .text.f_mkdir:0000000000000000 $t
     /tmp/ccwdO2Zj.s:7571   .text.f_mkdir:0000000000000000 f_mkdir
     /tmp/ccwdO2Zj.s:7877   .text.f_rename:0000000000000000 $t
     /tmp/ccwdO2Zj.s:7884   .text.f_rename:0000000000000000 f_rename
     /tmp/ccwdO2Zj.s:8119   .text.f_mkfs:0000000000000000 $t
     /tmp/ccwdO2Zj.s:8126   .text.f_mkfs:0000000000000000 f_mkfs
     /tmp/ccwdO2Zj.s:8550   .text.f_mkfs:0000000000000268 $d
     /tmp/ccwdO2Zj.s:8557   .text.f_mkfs:0000000000000280 $t
     /tmp/ccwdO2Zj.s:9136   .text.f_mkfs:000000000000062c $d
     /tmp/ccwdO2Zj.s:9145   .text.f_mkfs:0000000000000644 $t
     /tmp/ccwdO2Zj.s:9166   .text.f_gets:0000000000000000 $t
     /tmp/ccwdO2Zj.s:9173   .text.f_gets:0000000000000000 f_gets
     /tmp/ccwdO2Zj.s:9269   .text.f_putc:0000000000000000 $t
     /tmp/ccwdO2Zj.s:9276   .text.f_putc:0000000000000000 f_putc
     /tmp/ccwdO2Zj.s:9316   .text.f_puts:0000000000000000 $t
     /tmp/ccwdO2Zj.s:9323   .text.f_puts:0000000000000000 f_puts
     /tmp/ccwdO2Zj.s:9372   .text.f_printf:0000000000000000 $t
     /tmp/ccwdO2Zj.s:9379   .text.f_printf:0000000000000000 f_printf
     /tmp/ccwdO2Zj.s:9529   .text.f_printf:00000000000000a0 $d
     /tmp/ccwdO2Zj.s:9877   .bss.FatFs:0000000000000000 $d
     /tmp/ccwdO2Zj.s:9881   .bss.FatFs:0000000000000000 FatFs
     /tmp/ccwdO2Zj.s:9884   .bss.Files:0000000000000000 $d
     /tmp/ccwdO2Zj.s:9888   .bss.Files:0000000000000000 Files
     /tmp/ccwdO2Zj.s:9891   .bss.Fsid:0000000000000000 $d
     /tmp/ccwdO2Zj.s:9895   .bss.Fsid:0000000000000000 Fsid
     /tmp/ccwdO2Zj.s:9898   .rodata.ExCvt:0000000000000000 $d
     /tmp/ccwdO2Zj.s:9902   .rodata.ExCvt:0000000000000000 ExCvt
     /tmp/ccwdO2Zj.s:10032  .rodata.create_name.str1.4:0000000000000000 $d
     /tmp/ccwdO2Zj.s:10036  .rodata.cst.12568:0000000000000000 $d
     /tmp/ccwdO2Zj.s:10040  .rodata.cst.12568:0000000000000000 cst.12568
     /tmp/ccwdO2Zj.s:10049  .rodata.cst32.12569:0000000000000000 $d
     /tmp/ccwdO2Zj.s:10053  .rodata.cst32.12569:0000000000000000 cst32.12569
     /tmp/ccwdO2Zj.s:10062  .rodata.f_mkfs.str1.4:0000000000000000 $d
     /tmp/ccwdO2Zj.s:9553   .text.f_printf:00000000000000b7 $d
     /tmp/ccwdO2Zj.s:9553   .text.f_printf:00000000000000b8 $t

UNDEFINED SYMBOLS
ff_req_grant
disk_write
disk_read
disk_status
disk_initialize
ff_rel_grant
disk_ioctl
ff_del_syncobj
ARM GAS  /tmp/ccwdO2Zj.s 			page 312


ff_cre_syncobj
get_fattime
